

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jun 01 15:36:37 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK0
   203  005C78                     __pidataBANK0:
   204                           	callstack 0
   205                           
   206                           ;initializer for leitura_sdcard@size
   207  005C78  58                 	db	88
   208                           
   209                           	psect	idataBANK1
   210  005BD6                     __pidataBANK1:
   211                           	callstack 0
   212                           
   213                           ;initializer for escreve_inteiro_uart@F3215
   214  005BD6  30                 	db	48
   215  005BD7  30                 	db	48
   216  005BD8  30                 	db	48
   217  005BD9  30                 	db	48
   218  005BDA  30                 	db	48
   219  005BDB  30                 	db	48
   220  005BDC  00                 	db	0
   221                           
   222                           ;initializer for escreve_inteiro_lcd@F3223
   223  005BDD  30                 	db	48
   224  005BDE  30                 	db	48
   225  005BDF  30                 	db	48
   226  005BE0  30                 	db	48
   227  005BE1  30                 	db	48
   228  005BE2  30                 	db	48
   229  005BE3  00                 	db	0
   230                           
   231                           	psect	idataBANK2
   232  004D28                     __pidataBANK2:
   233                           	callstack 0
   234                           
   235                           ;initializer for _dados_long
   236  004D28  30                 	db	48
   237  004D29  30                 	db	48
   238  004D2A  30                 	db	48
   239  004D2B  30                 	db	48
   240  004D2C  30                 	db	48
   241  004D2D  30                 	db	48
   242  004D2E  30                 	db	48
   243  004D2F  30                 	db	48
   244  004D30  30                 	db	48
   245  004D31  30                 	db	48
   246  004D32  30                 	db	48
   247  004D33  30                 	db	48
   248  004D34  30                 	db	48
   249  004D35  30                 	db	48
   250  004D36  30                 	db	48
   251  004D37  30                 	db	48
   252  004D38  30                 	db	48
   253  004D39  30                 	db	48
   254  004D3A  30                 	db	48
   255  004D3B  30                 	db	48
   256  004D3C  30                 	db	48
   257  004D3D  30                 	db	48
   258  004D3E  30                 	db	48
   259  004D3F  30                 	db	48
   260  004D40  30                 	db	48
   261  004D41  30                 	db	48
   262  004D42  30                 	db	48
   263  004D43  30                 	db	48
   264  004D44  30                 	db	48
   265  004D45  30                 	db	48
   266  004D46  30                 	db	48
   267  004D47  30                 	db	48
   268  004D48  30                 	db	48
   269  004D49  30                 	db	48
   270  004D4A  30                 	db	48
   271  004D4B  30                 	db	48
   272                           
   273                           ;initializer for _dados_lat
   274  004D4C  30                 	db	48
   275  004D4D  30                 	db	48
   276  004D4E  30                 	db	48
   277  004D4F  30                 	db	48
   278  004D50  30                 	db	48
   279  004D51  30                 	db	48
   280  004D52  30                 	db	48
   281  004D53  30                 	db	48
   282  004D54  30                 	db	48
   283  004D55  30                 	db	48
   284  004D56  00                 	db	0
   285  004D57  30                 	db	48
   286  004D58  30                 	db	48
   287  004D59  30                 	db	48
   288  004D5A  30                 	db	48
   289  004D5B  30                 	db	48
   290  004D5C  30                 	db	48
   291  004D5D  30                 	db	48
   292  004D5E  30                 	db	48
   293  004D5F  30                 	db	48
   294  004D60  30                 	db	48
   295  004D61  00                 	db	0
   296  004D62  30                 	db	48
   297  004D63  30                 	db	48
   298  004D64  30                 	db	48
   299  004D65  30                 	db	48
   300  004D66  30                 	db	48
   301  004D67  30                 	db	48
   302  004D68  30                 	db	48
   303  004D69  30                 	db	48
   304  004D6A  30                 	db	48
   305  004D6B  30                 	db	48
   306  004D6C  00                 	db	0
   307                           
   308                           ;initializer for _dados_data
   309  004D6D  30                 	db	48
   310  004D6E  30                 	db	48
   311  004D6F  30                 	db	48
   312  004D70  30                 	db	48
   313  004D71  30                 	db	48
   314  004D72  30                 	db	48
   315  004D73  30                 	db	48
   316  004D74  30                 	db	48
   317  004D75  30                 	db	48
   318  004D76  30                 	db	48
   319  004D77  30                 	db	48
   320  004D78  30                 	db	48
   321  004D79  30                 	db	48
   322  004D7A  30                 	db	48
   323  004D7B  30                 	db	48
   324  004D7C  30                 	db	48
   325  004D7D  30                 	db	48
   326  004D7E  30                 	db	48
   327                           
   328                           ;initializer for _dados_hora
   329  004D7F  30                 	db	48
   330  004D80  30                 	db	48
   331  004D81  30                 	db	48
   332  004D82  30                 	db	48
   333  004D83  30                 	db	48
   334  004D84  30                 	db	48
   335  004D85  30                 	db	48
   336  004D86  30                 	db	48
   337  004D87  30                 	db	48
   338  004D88  30                 	db	48
   339  004D89  30                 	db	48
   340  004D8A  30                 	db	48
   341  004D8B  30                 	db	48
   342  004D8C  30                 	db	48
   343  004D8D  30                 	db	48
   344  004D8E  30                 	db	48
   345  004D8F  30                 	db	48
   346  004D90  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006106                     __pmediumconst:
   350                           	callstack 0
   351  006106  00                 	db	0
   352  006107                     mensagem_inicial@F3689:
   353                           	callstack 0
   354  006107  54                 	db	84
   355  006108  43                 	db	67
   356  006109  43                 	db	67
   357  00610A  2D                 	db	45
   358  00610B  2D                 	db	45
   359  00610C  54                 	db	84
   360  00610D  45                 	db	69
   361  00610E  4C                 	db	76
   362  00610F  45                 	db	69
   363  006110  4D                 	db	77
   364  006111  54                 	db	84
   365  006112  52                 	db	82
   366  006113  49                 	db	73
   367  006114  41                 	db	65
   368  006115  00                 	db	0
   369  006116  00                 	db	0
   370  006117  00                 	db	0
   371  006118                     __end_ofmensagem_inicial@F3689:
   372                           	callstack 0
   373  006118                     mensagem_inicial@F3687:
   374                           	callstack 0
   375  006118  46                 	db	70
   376  006119  41                 	db	65
   377  00611A  54                 	db	84
   378  00611B  45                 	db	69
   379  00611C  43                 	db	67
   380  00611D  20                 	db	32
   381  00611E  53                 	db	83
   382  00611F  54                 	db	84
   383  006120  20                 	db	32
   384  006121  41                 	db	65
   385  006122  4E                 	db	78
   386  006123  44                 	db	68
   387  006124  52                 	db	82
   388  006125  45                 	db	69
   389  006126  00                 	db	0
   390  006127  00                 	db	0
   391  006128  00                 	db	0
   392  006129                     __end_ofmensagem_inicial@F3687:
   393                           	callstack 0
   394  006129                     _fence_diff_long:
   395                           	callstack 0
   396  006129  2D                 	db	45
   397  00612A  30                 	db	48
   398  00612B  34                 	db	52
   399  00612C  36                 	db	54
   400  00612D  33                 	db	51
   401  00612E  33                 	db	51
   402  00612F  39                 	db	57
   403  006130  34                 	db	52
   404  006131  30                 	db	48
   405  006132  35                 	db	53
   406  006133  30                 	db	48
   407  006134  2D                 	db	45
   408  006135  30                 	db	48
   409  006136  34                 	db	52
   410  006137  36                 	db	54
   411  006138  32                 	db	50
   412  006139  39                 	db	57
   413  00613A  34                 	db	52
   414  00613B  31                 	db	49
   415  00613C  34                 	db	52
   416  00613D  37                 	db	55
   417  00613E  34                 	db	52
   418  00613F  2D                 	db	45
   419  006140  30                 	db	48
   420  006141  34                 	db	52
   421  006142  36                 	db	54
   422  006143  32                 	db	50
   423  006144  39                 	db	57
   424  006145  34                 	db	52
   425  006146  31                 	db	49
   426  006147  34                 	db	52
   427  006148  37                 	db	55
   428  006149  34                 	db	52
   429  00614A  2D                 	db	45
   430  00614B  30                 	db	48
   431  00614C  34                 	db	52
   432  00614D  36                 	db	54
   433  00614E  33                 	db	51
   434  00614F  33                 	db	51
   435  006150  39                 	db	57
   436  006151  34                 	db	52
   437  006152  30                 	db	48
   438  006153  35                 	db	53
   439  006154  30                 	db	48
   440  006155                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  006155                     _fence_diff_lat:
   443                           	callstack 0
   444  006155  2D                 	db	45
   445  006156  32                 	db	50
   446  006157  33                 	db	51
   447  006158  33                 	db	51
   448  006159  36                 	db	54
   449  00615A  34                 	db	52
   450  00615B  36                 	db	54
   451  00615C  36                 	db	54
   452  00615D  35                 	db	53
   453  00615E  33                 	db	51
   454  00615F  2D                 	db	45
   455  006160  32                 	db	50
   456  006161  33                 	db	51
   457  006162  33                 	db	51
   458  006163  36                 	db	54
   459  006164  34                 	db	52
   460  006165  36                 	db	54
   461  006166  36                 	db	54
   462  006167  35                 	db	53
   463  006168  33                 	db	51
   464  006169  2D                 	db	45
   465  00616A  32                 	db	50
   466  00616B  33                 	db	51
   467  00616C  34                 	db	52
   468  00616D  31                 	db	49
   469  00616E  38                 	db	56
   470  00616F  39                 	db	57
   471  006170  35                 	db	53
   472  006171  37                 	db	55
   473  006172  33                 	db	51
   474  006173  2D                 	db	45
   475  006174  32                 	db	50
   476  006175  33                 	db	51
   477  006176  34                 	db	52
   478  006177  31                 	db	49
   479  006178  38                 	db	56
   480  006179  39                 	db	57
   481  00617A  35                 	db	53
   482  00617B  37                 	db	55
   483  00617C  33                 	db	51
   484  00617D                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  00617D  6F                 	db	111	;'o'
   540  00617E  20                 	db	32
   541  00617F  53                 	db	83	;'S'
   542  006180  69                 	db	105	;'i'
   543  006181  73                 	db	115	;'s'
   544  006182  74                 	db	116	;'t'
   545  006183  65                 	db	101	;'e'
   546  006184  6D                 	db	109	;'m'
   547  006185  61                 	db	97	;'a'
   548  006186  20                 	db	32
   549  006187  64                 	db	100	;'d'
   550  006188  65                 	db	101	;'e'
   551  006189  20                 	db	32
   552  00618A  61                 	db	97	;'a'
   553  00618B  72                 	db	114	;'r'
   554  00618C  71                 	db	113	;'q'
   555  00618D  75                 	db	117	;'u'
   556  00618E  69                 	db	105	;'i'
   557  00618F  76                 	db	118	;'v'
   558  006190  6F                 	db	111	;'o'
   559  006191  00                 	db	0
   560  006192                     STR_2:
   561  006192  49                 	db	73	;'I'
   562  006193  6E                 	db	110	;'n'
   563  006194  73                 	db	115	;'s'
   564  006195  69                 	db	105	;'i'
   565  006196  72                 	db	114	;'r'
   566  006197  61                 	db	97	;'a'
   567  006198  20                 	db	32
   568  006199  6F                 	db	111	;'o'
   569  00619A  20                 	db	32
   570  00619B  43                 	db	67	;'C'
   571  00619C  61                 	db	97	;'a'
   572  00619D  72                 	db	114	;'r'
   573  00619E  74                 	db	116	;'t'
   574  00619F  61                 	db	97	;'a'
   575  0061A0  6F                 	db	111	;'o'
   576  0061A1  00                 	db	0
   577  0061A2                     STR_12:
   578  0061A2  76                 	db	118	;'v'
   579  0061A3  25                 	db	37
   580  0061A4  73                 	db	115	;'s'
   581  0061A5  3B                 	db	59	;';'
   582  0061A6  6C                 	db	108	;'l'
   583  0061A7  74                 	db	116	;'t'
   584  0061A8  25                 	db	37
   585  0061A9  73                 	db	115	;'s'
   586  0061AA  3B                 	db	59	;';'
   587  0061AB  6C                 	db	108	;'l'
   588  0061AC  6F                 	db	111	;'o'
   589  0061AD  25                 	db	37
   590  0061AE  73                 	db	115	;'s'
   591  0061AF  3B                 	db	59	;';'
   592  0061B0  00                 	db	0
   593  0061B1  45                 	db	69	;'E'
   594  0061B2  72                 	db	114	;'r'
   595  0061B3  72                 	db	114	;'r'
   596  0061B4  6F                 	db	111	;'o'
   597  0061B5  20                 	db	32
   598  0061B6  61                 	db	97	;'a'
   599  0061B7  6F                 	db	111	;'o'
   600  0061B8  20                 	db	32
   601  0061B9  6D                 	db	109	;'m'
   602  0061BA  6F                 	db	111	;'o'
   603  0061BB  6E                 	db	110	;'n'
   604  0061BC  74                 	db	116	;'t'
   605  0061BD  61                 	db	97	;'a'
   606  0061BE  72                 	db	114	;'r'
   607  0061BF  00                 	db	0
   608  0061C0  45                 	db	69	;'E'
   609  0061C1  72                 	db	114	;'r'
   610  0061C2  72                 	db	114	;'r'
   611  0061C3  6F                 	db	111	;'o'
   612  0061C4  20                 	db	32
   613  0061C5  61                 	db	97	;'a'
   614  0061C6  6F                 	db	111	;'o'
   615  0061C7  20                 	db	32
   616  0061C8  63                 	db	99	;'c'
   617  0061C9  72                 	db	114	;'r'
   618  0061CA  69                 	db	105	;'i'
   619  0061CB  61                 	db	97	;'a'
   620  0061CC  72                 	db	114	;'r'
   621  0061CD  00                 	db	0
   622  0061CE  65                 	db	101	;'e'
   623  0061CF  78                 	db	120	;'x'
   624  0061D0  74                 	db	116	;'t'
   625  0061D1  66                 	db	102	;'f'
   626  0061D2  65                 	db	101	;'e'
   627  0061D3  6E                 	db	110	;'n'
   628  0061D4  63                 	db	99	;'c'
   629  0061D5  65                 	db	101	;'e'
   630  0061D6  2E                 	db	46
   631  0061D7  74                 	db	116	;'t'
   632  0061D8  78                 	db	120	;'x'
   633  0061D9  74                 	db	116	;'t'
   634  0061DA  00                 	db	0
   635  0061DB                     STR_19:
   636  0061DB  41                 	db	65	;'A'
   637  0061DC  47                 	db	71	;'G'
   638  0061DD  55                 	db	85	;'U'
   639  0061DE  41                 	db	65	;'A'
   640  0061DF  52                 	db	82	;'R'
   641  0061E0  44                 	db	68	;'D'
   642  0061E1  45                 	db	69	;'E'
   643  0061E2  2E                 	db	46
   644  0061E3  2E                 	db	46
   645  0061E4  2E                 	db	46
   646  0061E5  00                 	db	0
   647  0061E6                     STR_4:
   648  0061E6  4D                 	db	77	;'M'
   649  0061E7  4D                 	db	77	;'M'
   650  0061E8  43                 	db	67	;'C'
   651  0061E9  20                 	db	32
   652  0061EA  56                 	db	86	;'V'
   653  0061EB  65                 	db	101	;'e'
   654  0061EC  72                 	db	114	;'r'
   655  0061ED  2E                 	db	46
   656  0061EE  20                 	db	32
   657  0061EF  33                 	db	51	;'3'
   658  0061F0  00                 	db	0
   659  0061F1                     STR_1:
   660  0061F1  53                 	db	83	;'S'
   661  0061F2  65                 	db	101	;'e'
   662  0061F3  6D                 	db	109	;'m'
   663  0061F4  20                 	db	32
   664  0061F5  43                 	db	67	;'C'
   665  0061F6  61                 	db	97	;'a'
   666  0061F7  72                 	db	114	;'r'
   667  0061F8  74                 	db	116	;'t'
   668  0061F9  61                 	db	97	;'a'
   669  0061FA  6F                 	db	111	;'o'
   670  0061FB  00                 	db	0
   671  0061FC                     STR_13:
   672  0061FC  72                 	db	114	;'r'
   673  0061FD  30                 	db	48	;'0'
   674  0061FE  3B                 	db	59	;';'
   675  0061FF  63                 	db	99	;'c'
   676  006200  30                 	db	48	;'0'
   677  006201  3B                 	db	59	;';'
   678  006202  6B                 	db	107	;'k'
   679  006203  30                 	db	48	;'0'
   680  006204  3B                 	db	59	;';'
   681  006205  00                 	db	0
   682  006206                     STR_14:
   683  006206  68                 	db	104	;'h'
   684  006207  25                 	db	37
   685  006208  73                 	db	115	;'s'
   686  006209  3B                 	db	59	;';'
   687  00620A  64                 	db	100	;'d'
   688  00620B  4E                 	db	78	;'N'
   689  00620C  2F                 	db	47
   690  00620D  41                 	db	65	;'A'
   691  00620E  3B                 	db	59	;';'
   692  00620F  00                 	db	0
   693  006210  56                 	db	86	;'V'
   694  006211  65                 	db	101	;'e'
   695  006212  72                 	db	114	;'r'
   696  006213  69                 	db	105	;'i'
   697  006214  66                 	db	102	;'f'
   698  006215  69                 	db	105	;'i'
   699  006216  71                 	db	113	;'q'
   700  006217  75                 	db	117	;'u'
   701  006218  65                 	db	101	;'e'
   702  006219  00                 	db	0
   703  00621A  6F                 	db	111	;'o'
   704  00621B  20                 	db	32
   705  00621C  61                 	db	97	;'a'
   706  00621D  72                 	db	114	;'r'
   707  00621E  71                 	db	113	;'q'
   708  00621F  75                 	db	117	;'u'
   709  006220  69                 	db	105	;'i'
   710  006221  76                 	db	118	;'v'
   711  006222  6F                 	db	111	;'o'
   712  006223  00                 	db	0
   713  006224                     STR_3:
   714  006224  53                 	db	83	;'S'
   715  006225  44                 	db	68	;'D'
   716  006226  20                 	db	32
   717  006227  56                 	db	86	;'V'
   718  006228  45                 	db	69	;'E'
   719  006229  52                 	db	82	;'R'
   720  00622A  2E                 	db	46
   721  00622B  20                 	db	32
   722  00622C  31                 	db	49	;'1'
   723  00622D  00                 	db	0
   724  00622E                     STR_32:
   725  00622E  42                 	db	66	;'B'
   726  00622F  31                 	db	49	;'1'
   727  006230  3A                 	db	58	;':'
   728  006231  46                 	db	70	;'F'
   729  006232  45                 	db	69	;'E'
   730  006233  4E                 	db	78	;'N'
   731  006234  43                 	db	67	;'C'
   732  006235  45                 	db	69	;'E'
   733  006236  00                 	db	0
   734  006237  6F                 	db	111	;'o'
   735  006238  20                 	db	32
   736  006239  63                 	db	99	;'c'
   737  00623A  61                 	db	97	;'a'
   738  00623B  72                 	db	114	;'r'
   739  00623C  74                 	db	116	;'t'
   740  00623D  61                 	db	97	;'a'
   741  00623E  6F                 	db	111	;'o'
   742  00623F  00                 	db	0
   743  006240                     STR_33:
   744  006240  42                 	db	66	;'B'
   745  006241  32                 	db	50	;'2'
   746  006242  3A                 	db	58	;':'
   747  006243  4C                 	db	76	;'L'
   748  006244  54                 	db	84	;'T'
   749  006245  4C                 	db	76	;'L'
   750  006246  4F                 	db	79	;'O'
   751  006247  00                 	db	0
   752  006248                     STR_25:
   753  006248  46                 	db	70	;'F'
   754  006249  45                 	db	69	;'E'
   755  00624A  4E                 	db	78	;'N'
   756  00624B  43                 	db	67	;'C'
   757  00624C  45                 	db	69	;'E'
   758  00624D  3A                 	db	58	;':'
   759  00624E  00                 	db	0
   760  00624F                     STR_22:
   761  00624F  44                 	db	68	;'D'
   762  006250  45                 	db	69	;'E'
   763  006251  4E                 	db	78	;'N'
   764  006252  54                 	db	84	;'T'
   765  006253  52                 	db	82	;'R'
   766  006254  4F                 	db	79	;'O'
   767  006255  00                 	db	0
   768  006256                     STR_15:
   769  006256  66                 	db	102	;'f'
   770  006257  25                 	db	37
   771  006258  63                 	db	99	;'c'
   772  006259  3B                 	db	59	;';'
   773  00625A  0A                 	db	10
   774  00625B  00                 	db	0
   775  00625C                     STR_29:
   776  00625C  46                 	db	70	;'F'
   777  00625D  49                 	db	73	;'I'
   778  00625E  58                 	db	88	;'X'
   779  00625F  3A                 	db	58	;':'
   780  006260  00                 	db	0
   781  006261                     STR_23:
   782  006261  46                 	db	70	;'F'
   783  006262  4F                 	db	79	;'O'
   784  006263  52                 	db	82	;'R'
   785  006264  41                 	db	65	;'A'
   786  006265  00                 	db	0
   787  006266                     STR_11:
   788  006266  2E                 	db	46
   789  006267  74                 	db	116	;'t'
   790  006268  6C                 	db	108	;'l'
   791  006269  6D                 	db	109	;'m'
   792  00626A  00                 	db	0
   793  00626B                     STR_31:
   794  00626B  6C                 	db	108	;'l'
   795  00626C  6F                 	db	111	;'o'
   796  00626D  3A                 	db	58	;':'
   797  00626E  00                 	db	0
   798  00626F                     STR_30:
   799  00626F  6C                 	db	108	;'l'
   800  006270  74                 	db	116	;'t'
   801  006271  3A                 	db	58	;':'
   802  006272  00                 	db	0
   803  006273                     STR_17:
   804  006273  46                 	db	70	;'F'
   805  006274  41                 	db	65	;'A'
   806  006275  54                 	db	84	;'T'
   807  006276  00                 	db	0
   808  006277  0D                 	db	13
   809  006278  0A                 	db	10
   810  006279  00                 	db	0
   811  00627A                     STR_20:
   812  00627A  30                 	db	48	;'0'
   813  00627B  00                 	db	0
   814  00627C                     STR_24:
   815  00627C  7C                 	db	124
   816  00627D  00                 	db	0
   817  00627E  00                 	db	0	; dummy byte at the end
   818  0000                     
   819                           ; #config settings
   820                           
   821                           	psect	cinit
   822  004374                     __pcinit:
   823                           	callstack 0
   824  004374                     start_initialization:
   825                           	callstack 0
   826  004374                     __initialization:
   827                           	callstack 0
   828                           
   829                           ; Initialize objects allocated to BANK2 (105 bytes)
   830                           ; load TBLPTR registers with __pidataBANK2
   831  004374  0E28               	movlw	low __pidataBANK2
   832  004376  6EF6               	movwf	tblptrl,c
   833  004378  0E4D               	movlw	high __pidataBANK2
   834  00437A  6EF7               	movwf	tblptrh,c
   835  00437C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   836  00437E  6EF8               	movwf	tblptru,c
   837  004380  EE02  F07E         	lfsr	0,__pdataBANK2
   838  004384  EE10 F069          	lfsr	1,105
   839  004388                     copy_data0:
   840  004388  0009               	tblrd		*+
   841  00438A  CFF5 FFEE          	movff	tablat,postinc0
   842  00438E  50E5               	movf	postdec1,w,c
   843  004390  50E1               	movf	fsr1l,w,c
   844  004392  E1FA               	bnz	copy_data0
   845                           
   846                           ; Initialize objects allocated to BANK1 (14 bytes)
   847                           ; load TBLPTR registers with __pidataBANK1
   848  004394  0ED6               	movlw	low __pidataBANK1
   849  004396  6EF6               	movwf	tblptrl,c
   850  004398  0E5B               	movlw	high __pidataBANK1
   851  00439A  6EF7               	movwf	tblptrh,c
   852  00439C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   853  00439E  6EF8               	movwf	tblptru,c
   854  0043A0  EE01  F0EC         	lfsr	0,__pdataBANK1
   855  0043A4  EE10 F00E          	lfsr	1,14
   856  0043A8                     copy_data1:
   857  0043A8  0009               	tblrd		*+
   858  0043AA  CFF5 FFEE          	movff	tablat,postinc0
   859  0043AE  50E5               	movf	postdec1,w,c
   860  0043B0  50E1               	movf	fsr1l,w,c
   861  0043B2  E1FA               	bnz	copy_data1
   862                           
   863                           ; Initialize objects allocated to BANK0 (1 bytes)
   864                           ; load TBLPTR registers with __pidataBANK0
   865  0043B4  0E78               	movlw	low __pidataBANK0
   866  0043B6  6EF6               	movwf	tblptrl,c
   867  0043B8  0E5C               	movlw	high __pidataBANK0
   868  0043BA  6EF7               	movwf	tblptrh,c
   869  0043BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   870  0043BE  6EF8               	movwf	tblptru,c
   871  0043C0  0009               	tblrd		*+	;fetch initializer
   872  0043C2  CFF5 F0FF          	movff	tablat,__pdataBANK0
   873                           
   874                           ; Clear objects allocated to BIGRAM (544 bytes)
   875  0043C6  EE03  F096         	lfsr	0,__pbssBIGRAM
   876  0043CA  EE12 F020          	lfsr	1,544
   877  0043CE                     clear_0:
   878  0043CE  6AEE               	clrf	postinc0,c
   879  0043D0  50E5               	movf	postdec1,w,c
   880  0043D2  50E1               	movf	fsr1l,w,c
   881  0043D4  E1FC               	bnz	clear_0
   882  0043D6  50E2               	movf	fsr1h,w,c
   883  0043D8  E1FA               	bnz	clear_0
   884                           
   885                           ; Clear objects allocated to BANK3 (150 bytes)
   886  0043DA  EE03  F000         	lfsr	0,__pbssBANK3
   887  0043DE  0E96               	movlw	150
   888  0043E0                     clear_1:
   889  0043E0  6AEE               	clrf	postinc0,c
   890  0043E2  06E8               	decf	wreg,f,c
   891  0043E4  E1FD               	bnz	clear_1
   892                           
   893                           ; Clear objects allocated to BANK2 (126 bytes)
   894  0043E6  EE02  F000         	lfsr	0,__pbssBANK2
   895  0043EA  0E7E               	movlw	126
   896  0043EC                     clear_2:
   897  0043EC  6AEE               	clrf	postinc0,c
   898  0043EE  06E8               	decf	wreg,f,c
   899  0043F0  E1FD               	bnz	clear_2
   900                           
   901                           ; Clear objects allocated to BANK1 (236 bytes)
   902  0043F2  EE01  F000         	lfsr	0,__pbssBANK1
   903  0043F6  0EEC               	movlw	236
   904  0043F8                     clear_3:
   905  0043F8  6AEE               	clrf	postinc0,c
   906  0043FA  06E8               	decf	wreg,f,c
   907  0043FC  E1FD               	bnz	clear_3
   908                           
   909                           ; Clear objects allocated to BANK0 (24 bytes)
   910  0043FE  EE00  F0E7         	lfsr	0,__pbssBANK0
   911  004402  0E18               	movlw	24
   912  004404                     clear_4:
   913  004404  6AEE               	clrf	postinc0,c
   914  004406  06E8               	decf	wreg,f,c
   915  004408  E1FD               	bnz	clear_4
   916                           
   917                           ; Clear objects allocated to COMRAM (9 bytes)
   918  00440A  EE00  F04D         	lfsr	0,__pbssCOMRAM
   919  00440E  0E09               	movlw	9
   920  004410                     clear_5:
   921  004410  6AEE               	clrf	postinc0,c
   922  004412  06E8               	decf	wreg,f,c
   923  004414  E1FD               	bnz	clear_5
   924  004416                     end_of_initialization:
   925                           	callstack 0
   926  004416                     __end_of__initialization:
   927                           	callstack 0
   928  004416  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   929  004418  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   930  00441A  0100               	movlb	0
   931  00441C  EFC4  F02B         	goto	_main	;jump to C main() function
   932                           
   933                           	psect	bssCOMRAM
   934  00004D                     __pbssCOMRAM:
   935                           	callstack 0
   936  00004D                     _FatFs:
   937                           	callstack 0
   938  00004D                     	ds	2
   939  00004F                     troca_de_tela@last_state:
   940                           	callstack 0
   941  00004F                     	ds	1
   942  000050                     troca_de_tela@state:
   943                           	callstack 0
   944  000050                     	ds	1
   945  000051                     verifica_dados_operacionais@contador_atual:
   946                           	callstack 0
   947  000051                     	ds	1
   948  000052                     _tarefa_em_execucao:
   949                           	callstack 0
   950  000052                     	ds	1
   951  000053                     escrita_sdcard@f_fix:
   952                           	callstack 0
   953  000053                     	ds	1
   954  000054                     _is_it_rmc_string:
   955                           	callstack 0
   956  000054                     	ds	1
   957  000055                     _is_it_gga_string:
   958                           	callstack 0
   959  000055                     	ds	1
   960                           
   961                           	psect	bssBANK0
   962  0000E7                     __pbssBANK0:
   963                           	callstack 0
   964  0000E7                     _fence_flag:
   965                           	callstack 0
   966  0000E7                     	ds	3
   967  0000EA                     _time_atualizacao:
   968                           	callstack 0
   969  0000EA                     	ds	2
   970  0000EC                     _rmc_index:
   971                           	callstack 0
   972  0000EC                     	ds	2
   973  0000EE                     _gga_index:
   974                           	callstack 0
   975  0000EE                     	ds	2
   976  0000F0                     verifica_dados_operacionais@contador_anterior:
   977                           	callstack 0
   978  0000F0                     	ds	1
   979  0000F1                     _flag_anomalia:
   980                           	callstack 0
   981  0000F1                     	ds	1
   982  0000F2                     _sinaliza_int_timer:
   983                           	callstack 0
   984  0000F2                     	ds	1
   985  0000F3                     _data_uart_recebe:
   986                           	callstack 0
   987  0000F3                     	ds	1
   988  0000F4                     _estado:
   989                           	callstack 0
   990  0000F4                     	ds	1
   991  0000F5                     _fence:
   992                           	callstack 0
   993  0000F5                     	ds	1
   994  0000F6                     _data_hoje:
   995                           	callstack 0
   996  0000F6                     	ds	1
   997  0000F7                     	ds	1
   998  0000F8                     _comma_counter_rmc:
   999                           	callstack 0
  1000  0000F8                     	ds	1
  1001  0000F9                     _comma_counter_gga:
  1002                           	callstack 0
  1003  0000F9                     	ds	1
  1004  0000FA                     _E_W:
  1005                           	callstack 0
  1006  0000FA                     	ds	1
  1007  0000FB                     _n_s:
  1008                           	callstack 0
  1009  0000FB                     	ds	1
  1010  0000FC                     _Term:
  1011                           	callstack 0
  1012  0000FC                     	ds	1
  1013  0000FD                     _SentenceType:
  1014                           	callstack 0
  1015  0000FD                     	ds	1
  1016  0000FE                     _char_number:
  1017                           	callstack 0
  1018  0000FE                     	ds	1
  1019                           
  1020                           	psect	dataBANK0
  1021  0000FF                     __pdataBANK0:
  1022                           	callstack 0
  1023  0000FF                     	ds	1
  1024                           
  1025                           	psect	bssBANK1
  1026  000100                     __pbssBANK1:
  1027                           	callstack 0
  1028  000100                     _poligono_ext:
  1029                           	callstack 0
  1030  000100                     	ds	16
  1031  000110                     _dado:
  1032                           	callstack 0
  1033  000110                     	ds	10
  1034  00011A                     _rawAltitude:
  1035                           	callstack 0
  1036  00011A                     	ds	7
  1037  000121                     	ds	6
  1038  000127                     _dados_vel:
  1039                           	callstack 0
  1040  000127                     	ds	6
  1041  00012D                     _tempo_tarefa:
  1042                           	callstack 0
  1043  00012D                     	ds	6
  1044  000133                     _tempo_backup:
  1045                           	callstack 0
  1046  000133                     	ds	6
  1047  000139                     _p_tarefas:
  1048                           	callstack 0
  1049  000139                     	ds	6
  1050  00013F                     _rawCourse:
  1051                           	callstack 0
  1052  00013F                     	ds	6
  1053  000145                     _sentence:
  1054                           	callstack 0
  1055  000145                     	ds	6
  1056  00014B                     _gps_flag:
  1057                           	callstack 0
  1058  00014B                     	ds	6
  1059  000151                     verifica_dados_operacionais@velocidade_atual_int:
  1060                           	callstack 0
  1061  000151                     	ds	4
  1062  000155                     	ds	4
  1063  000159                     _rmc_code:
  1064                           	callstack 0
  1065  000159                     	ds	3
  1066  00015C                     _gga_code:
  1067                           	callstack 0
  1068  00015C                     	ds	3
  1069  00015F                     _rawSatellites:
  1070                           	callstack 0
  1071  00015F                     	ds	3
  1072  000162                     _temp_buff_lat:
  1073                           	callstack 0
  1074  000162                     	ds	2
  1075  000164                     _temp_buff_long:
  1076                           	callstack 0
  1077  000164                     	ds	2
  1078  000166                     verifica_dados_operacionais@velocidade_atual:
  1079                           	callstack 0
  1080  000166                     	ds	2
  1081  000168                     _point_buff_gps_long:
  1082                           	callstack 0
  1083  000168                     	ds	2
  1084  00016A                     _point_buff_gps_lat:
  1085                           	callstack 0
  1086  00016A                     	ds	2
  1087  00016C                     _time_recovery:
  1088                           	callstack 0
  1089  00016C                     	ds	2
  1090  00016E                     _time_sd:
  1091                           	callstack 0
  1092  00016E                     	ds	2
  1093  000170                     _timeout_tarefa:
  1094                           	callstack 0
  1095  000170                     	ds	2
  1096  000172                     _fsid:
  1097                           	callstack 0
  1098  000172                     	ds	2
  1099  000174                     _teste:
  1100                           	callstack 0
  1101  000174                     	ds	2
  1102  000176                     _GPGGA_ok:
  1103                           	callstack 0
  1104  000176                     	ds	2
  1105  000178                     _GPRMC_ok:
  1106                           	callstack 0
  1107  000178                     	ds	2
  1108  00017A                     _data_buff:
  1109                           	callstack 0
  1110  00017A                     	ds	2
  1111  00017C                     _fil:
  1112                           	callstack 0
  1113  00017C                     	ds	28
  1114  000198                     _lo:
  1115                           	callstack 0
  1116  000198                     	ds	13
  1117  0001A5                     _rawLongitude:
  1118                           	callstack 0
  1119  0001A5                     	ds	13
  1120  0001B2                     _lt:
  1121                           	callstack 0
  1122  0001B2                     	ds	12
  1123  0001BE                     _rawLatitude:
  1124                           	callstack 0
  1125  0001BE                     	ds	12
  1126  0001CA                     _hora:
  1127                           	callstack 0
  1128  0001CA                     	ds	7
  1129  0001D1                     _rawTime:
  1130                           	callstack 0
  1131  0001D1                     	ds	7
  1132  0001D8                     _data:
  1133                           	callstack 0
  1134  0001D8                     	ds	6
  1135  0001DE                     _vel:
  1136                           	callstack 0
  1137  0001DE                     	ds	6
  1138  0001E4                     _rawDate:
  1139                           	callstack 0
  1140  0001E4                     	ds	6
  1141  0001EA                     _rawFix:
  1142                           	callstack 0
  1143  0001EA                     	ds	2
  1144                           
  1145                           	psect	dataBANK1
  1146  0001EC                     __pdataBANK1:
  1147                           	callstack 0
  1148  0001EC                     	ds	7
  1149  0001F3                     escreve_inteiro_lcd@F3223:
  1150                           	callstack 0
  1151  0001F3                     	ds	7
  1152                           
  1153                           	psect	bssBANK2
  1154  000200                     __pbssBANK2:
  1155                           	callstack 0
  1156  000200                     _string_dado:
  1157                           	callstack 0
  1158  000200                     	ds	22
  1159  000216                     _gga_pointers:
  1160                           	callstack 0
  1161  000216                     	ds	20
  1162  00022A                     _rmc_pointers:
  1163                           	callstack 0
  1164  00022A                     	ds	12
  1165  000236                     _buffer:
  1166                           	callstack 0
  1167  000236                     	ds	12
  1168  000242                     _dado_arquivo:
  1169                           	callstack 0
  1170  000242                     	ds	20
  1171  000256                     _filename:
  1172                           	callstack 0
  1173  000256                     	ds	20
  1174  00026A                     _rawSpeed:
  1175                           	callstack 0
  1176  00026A                     	ds	20
  1177                           
  1178                           	psect	dataBANK2
  1179  00027E                     __pdataBANK2:
  1180                           	callstack 0
  1181  00027E                     _dados_long:
  1182                           	callstack 0
  1183  00027E                     	ds	36
  1184  0002A2                     _dados_lat:
  1185                           	callstack 0
  1186  0002A2                     	ds	33
  1187  0002C3                     _dados_data:
  1188                           	callstack 0
  1189  0002C3                     	ds	18
  1190  0002D5                     _dados_hora:
  1191                           	callstack 0
  1192  0002D5                     	ds	18
  1193                           
  1194                           	psect	bssBANK3
  1195  000300                     __pbssBANK3:
  1196                           	callstack 0
  1197  000300                     _gga_buffer:
  1198                           	callstack 0
  1199  000300                     	ds	80
  1200  000350                     _rmc_buffer:
  1201                           	callstack 0
  1202  000350                     	ds	70
  1203                           
  1204                           	psect	bssBIGRAM
  1205  000396                     __pbssBIGRAM:
  1206                           	callstack 0
  1207  000396                     _fs:
  1208                           	callstack 0
  1209  000396                     	ds	544
  1210                           
  1211                           	psect	cstackBANK2
  1212  0002E7                     __pcstackBANK2:
  1213                           	callstack 0
  1214  0002E7                     disparo_gravacao@velocidade:
  1215                           	callstack 0
  1216                           
  1217                           ; 12 bytes @ 0x0
  1218  0002E7                     	ds	12
  1219  0002F3                     disparo_gravacao@fix_gps:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xC
  1223  0002F3                     	ds	2
  1224  0002F5                     disparo_gravacao@v_max:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xE
  1228  0002F5                     	ds	2
  1229  0002F7                     disparo_gravacao@index_max:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x10
  1233  0002F7                     	ds	2
  1234  0002F9                     disparo_gravacao@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x12
  1238  0002F9                     	ds	1
  1239                           
  1240                           	psect	cstackBANK0
  1241  000060                     __pcstackBANK0:
  1242                           	callstack 0
  1243  000060                     ??_get_cluster:
  1244  000060                     ??_auto_mount:
  1245  000060                     put_cluster@clust:
  1246                           	callstack 0
  1247  000060                     f_sync@fp:
  1248                           	callstack 0
  1249  000060                     latitude_to_convert@latitude:
  1250                           	callstack 0
  1251  000060                     longitude_to_convert@longitude:
  1252                           	callstack 0
  1253                           
  1254                           ; 11 bytes @ 0x0
  1255  000060                     	ds	2
  1256  000062                     put_cluster@val:
  1257                           	callstack 0
  1258  000062                     f_sync@tim:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2
  1262  000062                     	ds	2
  1263  000064                     ??_put_cluster:
  1264                           
  1265                           ; 1 bytes @ 0x4
  1266  000064                     	ds	2
  1267  000066                     f_sync@res:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  000066                     	ds	1
  1272  000067                     f_sync@dir:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x7
  1276  000067                     	ds	2
  1277  000069                     latitude_to_convert@j:
  1278                           	callstack 0
  1279  000069                     get_cluster@wc:
  1280                           	callstack 0
  1281  000069                     f_close@fp:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x9
  1285  000069                     	ds	1
  1286  00006A                     latitude_to_convert@i:
  1287                           	callstack 0
  1288  00006A                     _put_cluster$1623:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0xA
  1292  00006A                     	ds	1
  1293  00006B                     longitude_to_convert@j:
  1294                           	callstack 0
  1295  00006B                     get_cluster@fatsect:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0xB
  1299  00006B                     	ds	1
  1300  00006C                     longitude_to_convert@i:
  1301                           	callstack 0
  1302  00006C                     _put_cluster$1624:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0xC
  1306  00006C                     	ds	2
  1307  00006E                     put_cluster@fatsect:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xE
  1311  00006E                     	ds	1
  1312  00006F                     get_cluster@bc:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xF
  1316  00006F                     	ds	2
  1317  000071                     get_cluster@fs:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x11
  1321  000071                     	ds	1
  1322  000072                     put_cluster@bc:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x12
  1326  000072                     	ds	1
  1327  000073                     ??_next_dir_entry:
  1328                           
  1329                           ; 1 bytes @ 0x13
  1330  000073                     	ds	1
  1331  000074                     put_cluster@p:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x14
  1335  000074                     	ds	2
  1336  000076                     put_cluster@fs:
  1337                           	callstack 0
  1338  000076                     auto_mount@maxclust:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x16
  1342  000076                     	ds	2
  1343  000078                     ?_create_chain:
  1344                           	callstack 0
  1345  000078                     remove_chain@clust:
  1346                           	callstack 0
  1347  000078                     create_chain@clust:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x18
  1351  000078                     	ds	2
  1352  00007A                     next_dir_entry@clust:
  1353                           	callstack 0
  1354  00007A                     auto_mount@bootsect:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x1A
  1358  00007A                     	ds	2
  1359  00007C                     remove_chain@nxt:
  1360                           	callstack 0
  1361  00007C                     create_chain@mcl:
  1362                           	callstack 0
  1363  00007C                     next_dir_entry@idx:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x1C
  1367  00007C                     	ds	2
  1368  00007E                     trace_path@dj:
  1369                           	callstack 0
  1370  00007E                     remove_chain@fs:
  1371                           	callstack 0
  1372  00007E                     create_chain@fs:
  1373                           	callstack 0
  1374  00007E                     auto_mount@totalsect:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x1E
  1378  00007E                     	ds	1
  1379  00007F                     trace_path@fn:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x1F
  1383  00007F                     	ds	1
  1384  000080                     create_chain@cstat:
  1385                           	callstack 0
  1386  000080                     trace_path@path:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x20
  1390  000080                     	ds	2
  1391  000082                     trace_path@dir:
  1392                           	callstack 0
  1393  000082                     create_chain@scl:
  1394                           	callstack 0
  1395  000082                     auto_mount@p:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x22
  1399  000082                     	ds	1
  1400  000083                     ??_trace_path:
  1401                           
  1402                           ; 1 bytes @ 0x23
  1403  000083                     	ds	1
  1404  000084                     auto_mount@fmt:
  1405                           	callstack 0
  1406  000084                     create_chain@ncl:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x24
  1410  000084                     	ds	1
  1411  000085                     auto_mount@stat:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x25
  1415  000085                     	ds	1
  1416  000086                     reserve_direntry@dj:
  1417                           	callstack 0
  1418  000086                     f_write@fp:
  1419                           	callstack 0
  1420  000086                     f_lseek@fp:
  1421                           	callstack 0
  1422  000086                     auto_mount@fatsize:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x26
  1426  000086                     	ds	1
  1427  000087                     reserve_direntry@dir:
  1428                           	callstack 0
  1429  000087                     _trace_path$1780:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x27
  1433  000087                     	ds	1
  1434  000088                     ??_reserve_direntry:
  1435  000088                     f_write@buff:
  1436                           	callstack 0
  1437  000088                     f_lseek@ofs:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x28
  1441  000088                     	ds	1
  1442  000089                     _trace_path$1782:
  1443                           	callstack 0
  1444  000089                     f_write@btw:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x29
  1448  000089                     	ds	1
  1449  00008A                     auto_mount@fs:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x2A
  1453  00008A                     	ds	1
  1454  00008B                     f_write@bw:
  1455                           	callstack 0
  1456  00008B                     trace_path@fs:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x2B
  1460  00008B                     	ds	1
  1461  00008C                     ??_f_lseek:
  1462  00008C                     ??_f_write:
  1463  00008C                     reserve_direntry@sector:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x2C
  1467  00008C                     	ds	1
  1468  00008D                     trace_path@clust:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x2D
  1472  00008D                     	ds	2
  1473  00008F                     trace_path@ds:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x2F
  1477  00008F                     	ds	1
  1478  000090                     reserve_direntry@n:
  1479                           	callstack 0
  1480  000090                     trace_path@dptr:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x30
  1484  000090                     	ds	1
  1485  000091                     reserve_direntry@dptr:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  000091                     	ds	2
  1490  000093                     reserve_direntry@c:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x33
  1494  000093                     	ds	1
  1495  000094                     reserve_direntry@clust:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x34
  1499  000094                     	ds	2
  1500  000096                     reserve_direntry@fs:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x36
  1504  000096                     	ds	2
  1505  000098                     f_write@res:
  1506                           	callstack 0
  1507  000098                     f_open@fp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x38
  1511  000098                     	ds	1
  1512  000099                     f_write@wbuff:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x39
  1516  000099                     	ds	1
  1517  00009A                     f_open@path:
  1518                           	callstack 0
  1519  00009A                     f_write@sect:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x3A
  1523  00009A                     	ds	2
  1524  00009C                     f_open@mode:
  1525                           	callstack 0
  1526  00009C                     f_lseek@res:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x3C
  1530  00009C                     	ds	1
  1531  00009D                     ??_f_open:
  1532  00009D                     f_lseek@ifptr:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x3D
  1536  00009D                     	ds	1
  1537  00009E                     f_write@cc:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x3E
  1541  00009E                     	ds	2
  1542  0000A0                     f_write@clust:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x40
  1546  0000A0                     	ds	1
  1547  0000A1                     f_lseek@csize:
  1548                           	callstack 0
  1549  0000A1                     f_open@fn:
  1550                           	callstack 0
  1551                           
  1552                           ; 12 bytes @ 0x41
  1553  0000A1                     	ds	1
  1554  0000A2                     f_write@wcnt:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x42
  1558  0000A2                     	ds	2
  1559  0000A4                     ?_fputc:
  1560                           	callstack 0
  1561  0000A4                     fputc@chr:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x44
  1565  0000A4                     	ds	1
  1566  0000A5                     f_lseek@clust:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x45
  1570  0000A5                     	ds	1
  1571  0000A6                     fputc@fil:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x46
  1575  0000A6                     	ds	2
  1576  0000A8                     fputc@c:
  1577                           	callstack 0
  1578                           
  1579                           ; 1 bytes @ 0x48
  1580  0000A8                     	ds	1
  1581  0000A9                     fputc@bw:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x49
  1585  0000A9                     	ds	2
  1586  0000AB                     ?_fputs:
  1587                           	callstack 0
  1588  0000AB                     fputs@str:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x4B
  1592  0000AB                     	ds	2
  1593  0000AD                     f_open@rs:
  1594                           	callstack 0
  1595  0000AD                     fputs@fil:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x4D
  1599  0000AD                     	ds	2
  1600  0000AF                     fputs@n:
  1601                           	callstack 0
  1602  0000AF                     f_open@dw:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x4F
  1606  0000AF                     	ds	2
  1607  0000B1                     ?_fprintf:
  1608                           	callstack 0
  1609  0000B1                     fprintf@fil:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x51
  1613  0000B1                     	ds	2
  1614  0000B3                     f_open@res:
  1615                           	callstack 0
  1616  0000B3                     fprintf@str:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x53
  1620  0000B3                     	ds	1
  1621  0000B4                     f_open@dir:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x54
  1625  0000B4                     	ds	2
  1626  0000B6                     f_open@dj:
  1627                           	callstack 0
  1628                           
  1629                           ; 14 bytes @ 0x56
  1630  0000B6                     	ds	5
  1631  0000BB                     ??_fprintf:
  1632                           
  1633                           ; 1 bytes @ 0x5B
  1634  0000BB                     	ds	2
  1635  0000BD                     fprintf@s:
  1636                           	callstack 0
  1637                           
  1638                           ; 16 bytes @ 0x5D
  1639  0000BD                     	ds	16
  1640  0000CD                     fprintf@res:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x6D
  1644  0000CD                     	ds	2
  1645  0000CF                     _fprintf$2226:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x6F
  1649  0000CF                     	ds	2
  1650  0000D1                     fprintf@w:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x71
  1654  0000D1                     	ds	2
  1655  0000D3                     fprintf@f:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x73
  1659  0000D3                     	ds	1
  1660  0000D4                     fprintf@r:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x74
  1664  0000D4                     	ds	1
  1665  0000D5                     fprintf@val:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x75
  1669  0000D5                     	ds	4
  1670  0000D9                     fprintf@arp:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x79
  1674  0000D9                     	ds	1
  1675  0000DA                     fprintf@cc:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x7A
  1679  0000DA                     	ds	2
  1680  0000DC                     fprintf@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x7C
  1684  0000DC                     	ds	2
  1685  0000DE                     fprintf@c:
  1686                           	callstack 0
  1687                           
  1688                           ; 1 bytes @ 0x7E
  1689  0000DE                     	ds	1
  1690  0000DF                     ??_disparo_gravacao:
  1691                           
  1692                           ; 1 bytes @ 0x7F
  1693  0000DF                     	ds	5
  1694  0000E4                     ??_escalonador:
  1695                           
  1696                           ; 1 bytes @ 0x84
  1697  0000E4                     	ds	2
  1698  0000E6                     escalonador@cont:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x86
  1702  0000E6                     	ds	1
  1703                           
  1704                           	psect	cstackCOMRAM
  1705  000001                     __pcstackCOMRAM:
  1706                           	callstack 0
  1707  000001                     tratamento_uart@received_char:
  1708                           	callstack 0
  1709  000001                     i2write_timer_zero@timer0:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x0
  1713  000001                     	ds	2
  1714  000003                     ??_isr:
  1715  000003                     
  1716                           ; 1 bytes @ 0x2
  1717  000003                     	ds	6
  1718  000009                     isr@cont:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x8
  1722  000009                     	ds	1
  1723  00000A                     ??_dummy_clocks:
  1724  00000A                     ??_isdigit:
  1725  00000A                     ?_fix:
  1726                           	callstack 0
  1727  00000A                     ?_latitude:
  1728                           	callstack 0
  1729  00000A                     ?_longitude:
  1730                           	callstack 0
  1731  00000A                     ?_rawhora:
  1732                           	callstack 0
  1733  00000A                     ?_rawdata:
  1734                           	callstack 0
  1735  00000A                     ?_Speed:
  1736                           	callstack 0
  1737  00000A                     ?_strlen:
  1738                           	callstack 0
  1739  00000A                     ?_memcmp:
  1740                           	callstack 0
  1741  00000A                     ?_gps_segundos:
  1742                           	callstack 0
  1743  00000A                     ?_gps_minutos:
  1744                           	callstack 0
  1745  00000A                     ?_gps_hora:
  1746                           	callstack 0
  1747  00000A                     ?_gps_dia:
  1748                           	callstack 0
  1749  00000A                     ?_gps_mes:
  1750                           	callstack 0
  1751  00000A                     ?_gps_ano:
  1752                           	callstack 0
  1753  00000A                     ?___wmul:
  1754                           	callstack 0
  1755  00000A                     ?___lwdiv:
  1756                           	callstack 0
  1757  00000A                     ?___lwmod:
  1758                           	callstack 0
  1759  00000A                     ?___ftpack:
  1760                           	callstack 0
  1761  00000A                     ?___lmul:
  1762                           	callstack 0
  1763  00000A                     ?___lldiv:
  1764                           	callstack 0
  1765  00000A                     ?___aldiv:
  1766                           	callstack 0
  1767  00000A                     ?___llmod:
  1768                           	callstack 0
  1769  00000A                     disk_ioctl@cmd:
  1770                           	callstack 0
  1771  00000A                     delay@contador_ext:
  1772                           	callstack 0
  1773  00000A                     get_gpstime@index:
  1774                           	callstack 0
  1775  00000A                     get_latitude@index_lat:
  1776                           	callstack 0
  1777  00000A                     get_longitude@index_long:
  1778                           	callstack 0
  1779  00000A                     get_rawdate@index_date:
  1780                           	callstack 0
  1781  00000A                     get_rawspeed@index_speed:
  1782                           	callstack 0
  1783  00000A                     get_fix@index_fix:
  1784                           	callstack 0
  1785  00000A                     response@buff:
  1786                           	callstack 0
  1787  00000A                     recebe_dado_gps@flag_recebe:
  1788                           	callstack 0
  1789  00000A                     verifica_plausibilidade_long@posicao:
  1790                           	callstack 0
  1791  00000A                     verifica_plausibilidade_lat@posicao:
  1792                           	callstack 0
  1793  00000A                     write_timer_zero@timer0:
  1794                           	callstack 0
  1795  00000A                     data_nome@p_buff:
  1796                           	callstack 0
  1797  00000A                     hora_nome@p_buff:
  1798                           	callstack 0
  1799  00000A                     f_mount@fs:
  1800                           	callstack 0
  1801  00000A                     ___wmul@multiplier:
  1802                           	callstack 0
  1803  00000A                     ___lwdiv@dividend:
  1804                           	callstack 0
  1805  00000A                     ___lwmod@dividend:
  1806                           	callstack 0
  1807  00000A                     memcmp@s1:
  1808                           	callstack 0
  1809  00000A                     memcpy@d1:
  1810                           	callstack 0
  1811  00000A                     memset@p1:
  1812                           	callstack 0
  1813  00000A                     strcat@to:
  1814                           	callstack 0
  1815  00000A                     strlen@s:
  1816                           	callstack 0
  1817  00000A                     ___ftpack@arg:
  1818                           	callstack 0
  1819  00000A                     wait_ready@timeout:
  1820                           	callstack 0
  1821  00000A                     ___lmul@multiplier:
  1822                           	callstack 0
  1823  00000A                     ___lldiv@dividend:
  1824                           	callstack 0
  1825  00000A                     ___aldiv@dividend:
  1826                           	callstack 0
  1827  00000A                     ___llmod@dividend:
  1828                           	callstack 0
  1829                           
  1830                           ; 4 bytes @ 0x9
  1831  00000A                     	ds	1
  1832  00000B                     sdc_disk_status@pdrv:
  1833                           	callstack 0
  1834  00000B                     delay@contador_int:
  1835                           	callstack 0
  1836  00000B                     get_latitude@index:
  1837                           	callstack 0
  1838  00000B                     get_longitude@index:
  1839                           	callstack 0
  1840  00000B                     get_rawdate@index:
  1841                           	callstack 0
  1842  00000B                     get_rawspeed@index:
  1843                           	callstack 0
  1844  00000B                     get_fix@index:
  1845                           	callstack 0
  1846  00000B                     escreve_SPI@dado:
  1847                           	callstack 0
  1848  00000B                     recebe_dado_gps@timeout:
  1849                           	callstack 0
  1850  00000B                     _isdigit$3275:
  1851                           	callstack 0
  1852  00000B                     disk_ioctl@buff:
  1853                           	callstack 0
  1854                           
  1855                           ; 2 bytes @ 0xA
  1856  00000B                     	ds	1
  1857  00000C                     ??_gps_segundos:
  1858  00000C                     ??_gps_minutos:
  1859  00000C                     ??_gps_hora:
  1860  00000C                     ??_gps_dia:
  1861  00000C                     ??_gps_mes:
  1862  00000C                     ??_gps_ano:
  1863  00000C                     escreve_cmd_lcd@comando:
  1864                           	callstack 0
  1865  00000C                     endereco_cursor_lcd@endereco:
  1866                           	callstack 0
  1867  00000C                     escreve_caractere_lcd@data:
  1868                           	callstack 0
  1869  00000C                     dummy_clocks@n:
  1870                           	callstack 0
  1871  00000C                     data_nome@i:
  1872                           	callstack 0
  1873  00000C                     hora_nome@i:
  1874                           	callstack 0
  1875  00000C                     f_mount@drv:
  1876                           	callstack 0
  1877  00000C                     isdigit@c:
  1878                           	callstack 0
  1879  00000C                     ___wmul@multiplicand:
  1880                           	callstack 0
  1881  00000C                     ___lwdiv@divisor:
  1882                           	callstack 0
  1883  00000C                     ___lwmod@divisor:
  1884                           	callstack 0
  1885  00000C                     memcmp@s2:
  1886                           	callstack 0
  1887  00000C                     memcpy@s1:
  1888                           	callstack 0
  1889  00000C                     memset@c:
  1890                           	callstack 0
  1891  00000C                     strcat@from:
  1892                           	callstack 0
  1893  00000C                     strcpy@to:
  1894                           	callstack 0
  1895  00000C                     strlen@cp:
  1896                           	callstack 0
  1897                           
  1898                           ; 2 bytes @ 0xB
  1899  00000C                     	ds	1
  1900  00000D                     ??_init_lcd:
  1901  00000D                     disk_ioctl@pdrv:
  1902                           	callstack 0
  1903  00000D                     posicao_cursor_lcd@coluna:
  1904                           	callstack 0
  1905  00000D                     ___ftpack@exp:
  1906                           	callstack 0
  1907  00000D                     escreve_frase_ram_lcd@buffer:
  1908                           	callstack 0
  1909  00000D                     gps@flag_fix:
  1910                           	callstack 0
  1911  00000D                     dummy_clocks@i:
  1912                           	callstack 0
  1913                           
  1914                           ; 2 bytes @ 0xC
  1915  00000D                     	ds	1
  1916  00000E                     ?_get_fattime:
  1917                           	callstack 0
  1918  00000E                     disk_status@pdrv:
  1919                           	callstack 0
  1920  00000E                     disk_ioctl@res:
  1921                           	callstack 0
  1922  00000E                     posicao_cursor_lcd@linha:
  1923                           	callstack 0
  1924  00000E                     wait_ready@res:
  1925                           	callstack 0
  1926  00000E                     ___ftpack@sign:
  1927                           	callstack 0
  1928  00000E                     ___lwdiv@counter:
  1929                           	callstack 0
  1930  00000E                     ___lwmod@counter:
  1931                           	callstack 0
  1932  00000E                     ___wmul@product:
  1933                           	callstack 0
  1934  00000E                     memcmp@n:
  1935                           	callstack 0
  1936  00000E                     memcpy@n:
  1937                           	callstack 0
  1938  00000E                     memset@n:
  1939                           	callstack 0
  1940  00000E                     strcat@cp:
  1941                           	callstack 0
  1942  00000E                     strcpy@from:
  1943                           	callstack 0
  1944  00000E                     ___lmul@multiplicand:
  1945                           	callstack 0
  1946  00000E                     ___lldiv@divisor:
  1947                           	callstack 0
  1948  00000E                     ___aldiv@divisor:
  1949                           	callstack 0
  1950  00000E                     ___llmod@divisor:
  1951                           	callstack 0
  1952                           
  1953                           ; 4 bytes @ 0xD
  1954  00000E                     	ds	1
  1955  00000F                     ??___ftpack:
  1956  00000F                     disk_status@stat:
  1957                           	callstack 0
  1958  00000F                     posicao_cursor_lcd@endereco:
  1959                           	callstack 0
  1960  00000F                     ___lwdiv@quotient:
  1961                           	callstack 0
  1962  00000F                     command@arg:
  1963                           	callstack 0
  1964                           
  1965                           ; 4 bytes @ 0xE
  1966  00000F                     	ds	1
  1967  000010                     ??_memcmp:
  1968  000010                     ??_mensagem_inicial:
  1969  000010                     ?_atoi:
  1970                           	callstack 0
  1971  000010                     memcpy@tmp:
  1972                           	callstack 0
  1973  000010                     monta_sd@dado:
  1974                           	callstack 0
  1975  000010                     validate@fs:
  1976                           	callstack 0
  1977  000010                     memset@p:
  1978                           	callstack 0
  1979  000010                     strcpy@cp:
  1980                           	callstack 0
  1981  000010                     atoi@s:
  1982                           	callstack 0
  1983                           
  1984                           ; 3 bytes @ 0xF
  1985  000010                     	ds	1
  1986  000011                     utoa@buf:
  1987                           	callstack 0
  1988  000011                     memcpy@d:
  1989                           	callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x10
  1992  000011                     	ds	1
  1993  000012                     ??_get_fattime:
  1994  000012                     make_dirfile@path:
  1995                           	callstack 0
  1996  000012                     ___aldiv@counter:
  1997                           	callstack 0
  1998  000012                     ___llmod@counter:
  1999                           	callstack 0
  2000  000012                     validate@id:
  2001                           	callstack 0
  2002  000012                     ___lmul@product:
  2003                           	callstack 0
  2004  000012                     ___lldiv@quotient:
  2005                           	callstack 0
  2006  000012                     mensagem_inicial@msg_linha_um:
  2007                           	callstack 0
  2008                           
  2009                           ; 17 bytes @ 0x11
  2010  000012                     	ds	1
  2011  000013                     ??_atoi:
  2012  000013                     command@CRC:
  2013                           	callstack 0
  2014  000013                     monta_sd@index:
  2015                           	callstack 0
  2016  000013                     make_dirfile@dirname:
  2017                           	callstack 0
  2018  000013                     ___aldiv@sign:
  2019                           	callstack 0
  2020  000013                     utoa@val:
  2021                           	callstack 0
  2022  000013                     memcpy@s:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x12
  2026  000013                     	ds	1
  2027  000014                     ??_make_dirfile:
  2028  000014                     ??_validate:
  2029  000014                     command@CMD:
  2030                           	callstack 0
  2031  000014                     monta_sd@i:
  2032                           	callstack 0
  2033  000014                     ___aldiv@quotient:
  2034                           	callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x13
  2037  000014                     	ds	1
  2038  000015                     command@argument:
  2039                           	callstack 0
  2040  000015                     atoi@sign:
  2041                           	callstack 0
  2042  000015                     utoa@base:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0x14
  2046  000015                     	ds	1
  2047  000016                     ?_atol:
  2048                           	callstack 0
  2049  000016                     ?_clust2sect:
  2050                           	callstack 0
  2051  000016                     ___lldiv@counter:
  2052                           	callstack 0
  2053  000016                     sdc_disk_read@p_buff:
  2054                           	callstack 0
  2055  000016                     sdc_disk_write@p_buff:
  2056                           	callstack 0
  2057  000016                     clust2sect@clust:
  2058                           	callstack 0
  2059  000016                     _make_dirfile$1733:
  2060                           	callstack 0
  2061  000016                     atoi@a:
  2062                           	callstack 0
  2063  000016                     atol@s:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x15
  2067  000016                     	ds	1
  2068  000017                     ultoa@buf:
  2069                           	callstack 0
  2070  000017                     utoa@v:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x16
  2074  000017                     	ds	1
  2075  000018                     ?___awtoft:
  2076                           	callstack 0
  2077  000018                     make_dirfile@b:
  2078                           	callstack 0
  2079  000018                     sdc_reset@count_nosd:
  2080                           	callstack 0
  2081  000018                     ___awtoft@c:
  2082                           	callstack 0
  2083  000018                     sdc_disk_read@sector:
  2084                           	callstack 0
  2085  000018                     sdc_disk_write@sector:
  2086                           	callstack 0
  2087  000018                     configura_baudrate_uart@baudrate:
  2088                           	callstack 0
  2089  000018                     ultoa@val:
  2090                           	callstack 0
  2091                           
  2092                           ; 4 bytes @ 0x17
  2093  000018                     	ds	1
  2094  000019                     make_dirfile@t:
  2095                           	callstack 0
  2096  000019                     utoa@c:
  2097                           	callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x18
  2100  000019                     	ds	1
  2101  00001A                     ??_atol:
  2102  00001A                     ??_clust2sect:
  2103  00001A                     make_dirfile@a:
  2104                           	callstack 0
  2105  00001A                     sdc_reset@count:
  2106                           	callstack 0
  2107  00001A                     itoa@buf:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x19
  2111  00001A                     	ds	1
  2112  00001B                     make_dirfile@n:
  2113                           	callstack 0
  2114  00001B                     ___awtoft@sign:
  2115                           	callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x1A
  2118  00001B                     	ds	1
  2119  00001C                     ??_configura_baudrate_uart:
  2120  00001C                     ?___ftmul:
  2121                           	callstack 0
  2122  00001C                     sdc_reset@buff:
  2123                           	callstack 0
  2124  00001C                     sdc_disk_read@count:
  2125                           	callstack 0
  2126  00001C                     sdc_disk_write@count:
  2127                           	callstack 0
  2128  00001C                     make_dirfile@c:
  2129                           	callstack 0
  2130  00001C                     itoa@val:
  2131                           	callstack 0
  2132  00001C                     ultoa@base:
  2133                           	callstack 0
  2134  00001C                     ___ftmul@f1:
  2135                           	callstack 0
  2136                           
  2137                           ; 3 bytes @ 0x1B
  2138  00001C                     	ds	1
  2139  00001D                     ??_sdc_disk_initialize:
  2140  00001D                     ??_sdc_disk_read:
  2141  00001D                     ??_sdc_disk_write:
  2142                           
  2143                           ; 1 bytes @ 0x1C
  2144  00001D                     	ds	1
  2145  00001E                     atol@sign:
  2146                           	callstack 0
  2147  00001E                     itoa@base:
  2148                           	callstack 0
  2149  00001E                     ultoa@v:
  2150                           	callstack 0
  2151                           
  2152                           ; 4 bytes @ 0x1D
  2153  00001E                     	ds	1
  2154  00001F                     clust2sect@fs:
  2155                           	callstack 0
  2156  00001F                     ___ftmul@f2:
  2157                           	callstack 0
  2158  00001F                     atol@a:
  2159                           	callstack 0
  2160                           
  2161                           ; 4 bytes @ 0x1E
  2162  00001F                     	ds	1
  2163  000020                     sdc_disk_initialize@stat:
  2164                           	callstack 0
  2165                           
  2166                           ; 1 bytes @ 0x1F
  2167  000020                     	ds	1
  2168  000021                     sdc_disk_initialize@count1:
  2169                           	callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x20
  2172  000021                     	ds	1
  2173  000022                     ??___ftmul:
  2174  000022                     ultoa@c:
  2175                           	callstack 0
  2176  000022                     sdc_disk_read@start_add:
  2177                           	callstack 0
  2178                           
  2179                           ; 4 bytes @ 0x21
  2180  000022                     	ds	1
  2181  000023                     atol@c:
  2182                           	callstack 0
  2183  000023                     ltoa@buf:
  2184                           	callstack 0
  2185  000023                     sdc_disk_initialize@crc_number:
  2186                           	callstack 0
  2187  000023                     sdc_disk_write@count1:
  2188                           	callstack 0
  2189  000023                     mensagem_inicial@msg_dois:
  2190                           	callstack 0
  2191                           
  2192                           ; 17 bytes @ 0x22
  2193  000023                     	ds	1
  2194  000024                     ?_convert_to_int_point_lat:
  2195                           	callstack 0
  2196  000024                     ?_convert_to_int:
  2197                           	callstack 0
  2198  000024                     ?_convert_to_int_point_long:
  2199                           	callstack 0
  2200  000024                     configura_baudrate_uart@x:
  2201                           	callstack 0
  2202  000024                     convert_to_int@p_buff:
  2203                           	callstack 0
  2204  000024                     ltoa@val:
  2205                           	callstack 0
  2206                           
  2207                           ; 4 bytes @ 0x23
  2208  000024                     	ds	1
  2209  000025                     sdc_disk_initialize@buff_i:
  2210                           	callstack 0
  2211  000025                     sdc_disk_write@res:
  2212                           	callstack 0
  2213  000025                     ___ftmul@exp:
  2214                           	callstack 0
  2215                           
  2216                           ; 1 bytes @ 0x24
  2217  000025                     	ds	1
  2218  000026                     sdc_disk_initialize@ocr:
  2219                           	callstack 0
  2220  000026                     sdc_disk_read@length:
  2221                           	callstack 0
  2222  000026                     sdc_disk_write@j:
  2223                           	callstack 0
  2224  000026                     ___ftmul@f3_as_product:
  2225                           	callstack 0
  2226                           
  2227                           ; 3 bytes @ 0x25
  2228  000026                     	ds	1
  2229  000027                     sdc_disk_initialize@count2:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x26
  2233  000027                     	ds	1
  2234  000028                     sdc_disk_read@buff:
  2235                           	callstack 0
  2236  000028                     sdc_disk_write@buff:
  2237                           	callstack 0
  2238  000028                     ltoa@base:
  2239                           	callstack 0
  2240  000028                     convert_to_int_point_lat@convert_str_lat:
  2241                           	callstack 0
  2242  000028                     convert_to_int_point_long@convert_str_long:
  2243                           	callstack 0
  2244                           
  2245                           ; 10 bytes @ 0x27
  2246  000028                     	ds	1
  2247  000029                     sdc_disk_initialize@buff:
  2248                           	callstack 0
  2249  000029                     ___ftmul@cntr:
  2250                           	callstack 0
  2251  000029                     disk_read@buff:
  2252                           	callstack 0
  2253  000029                     disk_write@buff:
  2254                           	callstack 0
  2255                           
  2256                           ; 2 bytes @ 0x28
  2257  000029                     	ds	1
  2258  00002A                     disk_initialize@pdrv:
  2259                           	callstack 0
  2260  00002A                     ___ftmul@sign:
  2261                           	callstack 0
  2262                           
  2263                           ; 1 bytes @ 0x29
  2264  00002A                     	ds	1
  2265  00002B                     ?___fttol:
  2266                           	callstack 0
  2267  00002B                     disk_initialize@stat:
  2268                           	callstack 0
  2269  00002B                     ___fttol@f1:
  2270                           	callstack 0
  2271  00002B                     disk_read@sector:
  2272                           	callstack 0
  2273  00002B                     disk_write@sector:
  2274                           	callstack 0
  2275  00002B                     escreve_inteiro_lcd@valor:
  2276                           	callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x2A
  2279  00002B                     	ds	4
  2280  00002F                     ??___fttol:
  2281  00002F                     disk_read@count:
  2282                           	callstack 0
  2283  00002F                     disk_write@count:
  2284                           	callstack 0
  2285  00002F                     escreve_inteiro_lcd@texto:
  2286                           	callstack 0
  2287                           
  2288                           ; 7 bytes @ 0x2E
  2289  00002F                     	ds	1
  2290  000030                     ??_disk_read:
  2291  000030                     ??_disk_write:
  2292                           
  2293                           ; 1 bytes @ 0x2F
  2294  000030                     	ds	1
  2295  000031                     disk_read@pdrv:
  2296                           	callstack 0
  2297  000031                     disk_write@pdrv:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x30
  2301  000031                     	ds	1
  2302  000032                     convert_to_int_point_long@j:
  2303                           	callstack 0
  2304  000032                     disk_read@result:
  2305                           	callstack 0
  2306  000032                     disk_write@result:
  2307                           	callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x31
  2310  000032                     	ds	1
  2311  000033                     convert_to_int_point_lat@j:
  2312                           	callstack 0
  2313  000033                     convert_to_int_point_long@i:
  2314                           	callstack 0
  2315                           
  2316                           ; 1 bytes @ 0x32
  2317  000033                     	ds	1
  2318  000034                     disk_read@res:
  2319                           	callstack 0
  2320  000034                     disk_write@res:
  2321                           	callstack 0
  2322  000034                     convert_to_int_point_lat@i:
  2323                           	callstack 0
  2324  000034                     ___fttol@sign1:
  2325                           	callstack 0
  2326                           
  2327                           ; 1 bytes @ 0x33
  2328  000034                     	ds	1
  2329  000035                     diferenca@index:
  2330                           	callstack 0
  2331  000035                     move_window@sector:
  2332                           	callstack 0
  2333  000035                     check_fs@sect:
  2334                           	callstack 0
  2335  000035                     ___fttol@lval:
  2336                           	callstack 0
  2337                           
  2338                           ; 4 bytes @ 0x34
  2339  000035                     	ds	1
  2340  000036                     ??_troca_de_tela:
  2341  000036                     diferenca@valor_lat:
  2342                           	callstack 0
  2343                           
  2344                           ; 4 bytes @ 0x35
  2345  000036                     	ds	1
  2346  000037                     troca_de_tela@fix_signal:
  2347                           	callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x36
  2350  000037                     	ds	1
  2351  000038                     get_fattime@f_time:
  2352                           	callstack 0
  2353                           
  2354                           ; 10 bytes @ 0x37
  2355  000038                     	ds	1
  2356  000039                     ??_move_window:
  2357  000039                     ___fttol@exp1:
  2358                           	callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x38
  2361  000039                     	ds	1
  2362  00003A                     diferenca@valor_long:
  2363                           	callstack 0
  2364                           
  2365                           ; 4 bytes @ 0x39
  2366  00003A                     	ds	1
  2367  00003B                     check_fs@fs:
  2368                           	callstack 0
  2369                           
  2370                           ; 2 bytes @ 0x3A
  2371  00003B                     	ds	2
  2372  00003D                     auto_mount@path:
  2373                           	callstack 0
  2374                           
  2375                           ; 1 bytes @ 0x3C
  2376  00003D                     	ds	1
  2377  00003E                     auto_mount@chk_wp:
  2378                           	callstack 0
  2379  00003E                     armazena_ltlo@buffer:
  2380                           	callstack 0
  2381                           
  2382                           ; 1 bytes @ 0x3D
  2383  00003E                     	ds	1
  2384  00003F                     armazena_ltlo@index:
  2385                           	callstack 0
  2386                           
  2387                           ; 1 bytes @ 0x3E
  2388  00003F                     	ds	1
  2389  000040                     armazena_ltlo@j:
  2390                           	callstack 0
  2391                           
  2392                           ; 1 bytes @ 0x3F
  2393  000040                     	ds	1
  2394  000041                     armazena_ltlo@i:
  2395                           	callstack 0
  2396                           
  2397                           ; 1 bytes @ 0x40
  2398  000041                     	ds	1
  2399  000042                     
  2400                           ; 1 bytes @ 0x41
  2401  000042                     	ds	1
  2402  000043                     ??_verifica_fence:
  2403  000043                     move_window@n:
  2404                           	callstack 0
  2405                           
  2406                           ; 1 bytes @ 0x42
  2407  000043                     	ds	1
  2408  000044                     ??_verifica_dados_operacionais:
  2409  000044                     move_window@wsect:
  2410                           	callstack 0
  2411                           
  2412                           ; 4 bytes @ 0x43
  2413  000044                     	ds	4
  2414  000048                     move_window@fs:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x47
  2418  000048                     	ds	2
  2419  00004A                     ?_get_cluster:
  2420                           	callstack 0
  2421  00004A                     sync@fs:
  2422                           	callstack 0
  2423  00004A                     get_cluster@clust:
  2424                           	callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x49
  2427  00004A                     	ds	2
  2428  00004C                     ??_fputs:
  2429  00004C                     next_dir_entry@dj:
  2430                           	callstack 0
  2431  00004C                     f_close@res:
  2432                           	callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x4B
  2435  00004C                     	ds	1
  2436  00004D                     
  2437                           ; 1 bytes @ 0x4C
  2438 ;;
  2439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2440 ;;
  2441 ;; *************** function _main *****************
  2442 ;; Defined at:
  2443 ;;		line 224 in file "main.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels required when called:   18
  2463 ;; This function calls:
  2464 ;;		_escalonador
  2465 ;;		_gps
  2466 ;;		_inicializa_tarefas
  2467 ;;		_inicializa_uart
  2468 ;;		_init_hardware
  2469 ;;		_init_lcd
  2470 ;;		_mensagem_inicial
  2471 ;; This function is called by:
  2472 ;;		Startup code after reset
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text0
  2477  005788                     __ptext0:
  2478                           	callstack 0
  2479  005788                     _main:
  2480                           	callstack 13
  2481                           
  2482                           ;main.c: 226: init_hardware();
  2483                           
  2484                           ;incstack = 0
  2485  005788  ECAD  F02D         	call	_init_hardware	;wreg free
  2486                           
  2487                           ;main.c: 227: T0CONbits.TMR0ON = 0;
  2488  00578C  9ED5               	bcf	213,7,c	;volatile
  2489                           
  2490                           ;main.c: 228: init_lcd();
  2491  00578E  EC07  F023         	call	_init_lcd	;wreg free
  2492                           
  2493                           ;main.c: 229: mensagem_inicial();
  2494  005792  EC56  F023         	call	_mensagem_inicial	;wreg free
  2495                           
  2496                           ;main.c: 230: inicializa_tarefas();
  2497  005796  EC12  F029         	call	_inicializa_tarefas	;wreg free
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 231: inicializa_uart();
  2501  00579A  ECD1  F02C         	call	_inicializa_uart	;wreg free
  2502                           
  2503                           ;main.c: 234: T0CONbits.TMR0ON = 1;
  2504  00579E  8ED5               	bsf	213,7,c	;volatile
  2505  0057A0                     l13838:
  2506                           
  2507                           ;main.c: 236: {;main.c: 238: if ((sinaliza_int_timer == 1) && (3))
  2508  0057A0  0100               	movlb	0	; () banked
  2509  0057A2  05F2               	decf	_sinaliza_int_timer& (0+255),w,b
  2510  0057A4  A4D8               	btfss	status,2,c
  2511  0057A6  D004               	goto	l13844
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 239: {;main.c: 240: sinaliza_int_timer = 0;
  2515  0057A8  0E00               	movlw	0
  2516  0057AA  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;main.c: 241: escalonador();
  2520  0057AC  EC10  F022         	call	_escalonador	;wreg free
  2521  0057B0                     l13844:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 242: };main.c: 243: gps();
  2525  0057B0  EC2E  F02B         	call	_gps	;wreg free
  2526  0057B4  D7F5               	goto	l13838
  2527  0057B6                     __end_of_main:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _mensagem_inicial *****************
  2531 ;; Defined at:
  2532 ;;		line 252 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2537 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0
  2548 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2550 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:       36 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    5
  2554 ;; This function calls:
  2555 ;;		_escreve_cmd_lcd
  2556 ;;		_escreve_frase_ram_lcd
  2557 ;;		_posicao_cursor_lcd
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text1
  2564  0046AC                     __ptext1:
  2565                           	callstack 0
  2566  0046AC                     _mensagem_inicial:
  2567                           	callstack 25
  2568                           
  2569                           ;main.c: 254: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2570                           
  2571                           ;incstack = 0
  2572  0046AC  0E18               	movlw	low mensagem_inicial@F3687
  2573  0046AE  6EF6               	movwf	tblptrl,c
  2574  0046B0                     	if	1	;There is more than 1 active tblptr byte
  2575  0046B0  0E61               	movlw	high mensagem_inicial@F3687
  2576  0046B2  6EF7               	movwf	tblptrh,c
  2577  0046B4                     	endif
  2578  0046B4                     	if	1	;There are 3 active tblptr bytes
  2579  0046B4  0E00               	movlw	low (mensagem_inicial@F3687 shr (0+16))
  2580  0046B6  6EF8               	movwf	tblptru,c
  2581  0046B8                     	endif
  2582  0046B8  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2583  0046BC  0E10               	movlw	16
  2584  0046BE                     u16500:
  2585  0046BE  0009               	tblrd		*+
  2586  0046C0  CFF5 FFDE          	movff	tablat,postinc2
  2587  0046C4  06E8               	decf	wreg,f,c
  2588  0046C6  E2FB               	bc	u16500
  2589                           
  2590                           ;main.c: 255: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2591  0046C8  0E07               	movlw	low mensagem_inicial@F3689
  2592  0046CA  6EF6               	movwf	tblptrl,c
  2593  0046CC                     	if	1	;There is more than 1 active tblptr byte
  2594  0046CC  0E61               	movlw	high mensagem_inicial@F3689
  2595  0046CE  6EF7               	movwf	tblptrh,c
  2596  0046D0                     	endif
  2597  0046D0                     	if	1	;There are 3 active tblptr bytes
  2598  0046D0  0E00               	movlw	low (mensagem_inicial@F3689 shr (0+16))
  2599  0046D2  6EF8               	movwf	tblptru,c
  2600  0046D4                     	endif
  2601  0046D4  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2602  0046D8  0E10               	movlw	16
  2603  0046DA                     u16510:
  2604  0046DA  0009               	tblrd		*+
  2605  0046DC  CFF5 FFDE          	movff	tablat,postinc2
  2606  0046E0  06E8               	decf	wreg,f,c
  2607  0046E2  E2FB               	bc	u16510
  2608                           
  2609                           ;main.c: 257: posicao_cursor_lcd(1,0);
  2610  0046E4  0E00               	movlw	0
  2611  0046E6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2612  0046E8  0E01               	movlw	1
  2613  0046EA  EC5E  F027         	call	_posicao_cursor_lcd
  2614                           
  2615                           ;main.c: 258: escreve_frase_ram_lcd(msg_linha_um);
  2616  0046EE  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2617  0046F0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2618  0046F2  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2619  0046F4  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2620                           
  2621                           ;main.c: 260: posicao_cursor_lcd(2,0);
  2622  0046F8  0E00               	movlw	0
  2623  0046FA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2624  0046FC  0E02               	movlw	2
  2625  0046FE  EC5E  F027         	call	_posicao_cursor_lcd
  2626                           
  2627                           ;main.c: 261: escreve_frase_ram_lcd(msg_dois);
  2628  004702  0E23               	movlw	low mensagem_inicial@msg_dois
  2629  004704  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2630  004706  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2631  004708  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2632                           
  2633                           ;main.c: 262: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2634  00470C  0E3D               	movlw	61
  2635  00470E  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2636  004710  0EE1               	movlw	225
  2637  004712  6E10               	movwf	??_mensagem_inicial^0,c
  2638  004714  0E40               	movlw	64
  2639  004716                     u16677:
  2640  004716  2EE8               	decfsz	wreg,f,c
  2641  004718  D7FE               	bra	u16677
  2642  00471A  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2643  00471C  D7FC               	bra	u16677
  2644  00471E  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2645  004720  D7FA               	bra	u16677
  2646                           
  2647                           ;main.c: 263: escreve_cmd_lcd(0b00000001);
  2648  004722  0E01               	movlw	1
  2649  004724  EC31  F024         	call	_escreve_cmd_lcd
  2650                           
  2651                           ;main.c: 264: posicao_cursor_lcd(1,0);
  2652  004728  0E00               	movlw	0
  2653  00472A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2654  00472C  0E01               	movlw	1
  2655  00472E  EC5E  F027         	call	_posicao_cursor_lcd
  2656                           
  2657                           ;main.c: 265: escreve_frase_ram_lcd("AGUARDE...");
  2658  004732  0EDB               	movlw	low STR_19
  2659  004734  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2660  004736  0E61               	movlw	high STR_19
  2661  004738  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2662  00473A  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2663  00473E  0012               	return		;funcret
  2664  004740                     __end_of_mensagem_inicial:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _init_lcd *****************
  2668 ;; Defined at:
  2669 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    4
  2690 ;; This function calls:
  2691 ;;		_delay
  2692 ;;		_escreve_cmd_lcd
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text2
  2699  00460E                     __ptext2:
  2700                           	callstack 0
  2701  00460E                     _init_lcd:
  2702                           	callstack 26
  2703                           
  2704                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2705                           
  2706                           ;incstack = 0
  2707  00460E  9495               	bcf	149,2,c	;volatile
  2708                           
  2709                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2710  004610  9295               	bcf	149,1,c	;volatile
  2711                           
  2712                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2713  004612  9095               	bcf	149,0,c	;volatile
  2714                           
  2715                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2716  004614  9895               	bcf	149,4,c	;volatile
  2717                           
  2718                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2719  004616  9A95               	bcf	149,5,c	;volatile
  2720                           
  2721                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2722  004618  9C95               	bcf	149,6,c	;volatile
  2723                           
  2724                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2725  00461A  9E95               	bcf	149,7,c	;volatile
  2726                           
  2727                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2728  00461C  9483               	bcf	131,2,c	;volatile
  2729                           
  2730                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2731  00461E  9283               	bcf	131,1,c	;volatile
  2732                           
  2733                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2734  004620  9083               	bcf	131,0,c	;volatile
  2735                           
  2736                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2737  004622  9E83               	bcf	131,7,c	;volatile
  2738                           
  2739                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2740  004624  9C83               	bcf	131,6,c	;volatile
  2741                           
  2742                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2743  004626  8A83               	bsf	131,5,c	;volatile
  2744                           
  2745                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2746  004628  8883               	bsf	131,4,c	;volatile
  2747                           
  2748                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2749  00462A  0EEA               	movlw	234
  2750  00462C  6E0D               	movwf	??_init_lcd^0,c
  2751  00462E  0EC3               	movlw	195
  2752  004630                     u16687:
  2753  004630  2EE8               	decfsz	wreg,f,c
  2754  004632  D7FE               	bra	u16687
  2755  004634  2E0D               	decfsz	??_init_lcd^0,f,c
  2756  004636  D7FC               	bra	u16687
  2757  004638  F000               	nop	
  2758                           
  2759                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2760  00463A  8083               	bsf	131,0,c	;volatile
  2761                           
  2762                           ;display_lcd.c: 108: delay();
  2763  00463C  EC67  F02D         	call	_delay	;wreg free
  2764                           
  2765                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2766  004640  9083               	bcf	131,0,c	;volatile
  2767                           
  2768                           ;display_lcd.c: 110: delay();
  2769  004642  EC67  F02D         	call	_delay	;wreg free
  2770                           
  2771                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2772  004646  0E4E               	movlw	78
  2773  004648  6E0D               	movwf	??_init_lcd^0,c
  2774  00464A  0EEB               	movlw	235
  2775  00464C                     u16697:
  2776  00464C  2EE8               	decfsz	wreg,f,c
  2777  00464E  D7FE               	bra	u16697
  2778  004650  2E0D               	decfsz	??_init_lcd^0,f,c
  2779  004652  D7FC               	bra	u16697
  2780  004654  F000               	nop	
  2781                           
  2782                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2783  004656  8083               	bsf	131,0,c	;volatile
  2784                           
  2785                           ;display_lcd.c: 119: delay();
  2786  004658  EC67  F02D         	call	_delay	;wreg free
  2787                           
  2788                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2789  00465C  9083               	bcf	131,0,c	;volatile
  2790                           
  2791                           ;display_lcd.c: 121: delay();
  2792  00465E  EC67  F02D         	call	_delay	;wreg free
  2793                           
  2794                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2795  004662  0E4E               	movlw	78
  2796  004664  6E0D               	movwf	??_init_lcd^0,c
  2797  004666  0EEB               	movlw	235
  2798  004668                     u16707:
  2799  004668  2EE8               	decfsz	wreg,f,c
  2800  00466A  D7FE               	bra	u16707
  2801  00466C  2E0D               	decfsz	??_init_lcd^0,f,c
  2802  00466E  D7FC               	bra	u16707
  2803  004670  F000               	nop	
  2804                           
  2805                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2806  004672  8083               	bsf	131,0,c	;volatile
  2807                           
  2808                           ;display_lcd.c: 130: delay();
  2809  004674  EC67  F02D         	call	_delay	;wreg free
  2810                           
  2811                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2812  004678  9083               	bcf	131,0,c	;volatile
  2813                           
  2814                           ;display_lcd.c: 132: delay();
  2815  00467A  EC67  F02D         	call	_delay	;wreg free
  2816                           
  2817                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2818  00467E  9E83               	bcf	131,7,c	;volatile
  2819                           
  2820                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2821  004680  9C83               	bcf	131,6,c	;volatile
  2822                           
  2823                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2824  004682  8A83               	bsf	131,5,c	;volatile
  2825                           
  2826                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2827  004684  9883               	bcf	131,4,c	;volatile
  2828                           
  2829                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2830  004686  8083               	bsf	131,0,c	;volatile
  2831                           
  2832                           ;display_lcd.c: 143: delay();
  2833  004688  EC67  F02D         	call	_delay	;wreg free
  2834                           
  2835                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2836  00468C  9083               	bcf	131,0,c	;volatile
  2837                           
  2838                           ;display_lcd.c: 145: delay();
  2839  00468E  EC67  F02D         	call	_delay	;wreg free
  2840                           
  2841                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2842  004692  0E28               	movlw	40
  2843  004694  EC31  F024         	call	_escreve_cmd_lcd
  2844                           
  2845                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2846  004698  0E06               	movlw	6
  2847  00469A  EC31  F024         	call	_escreve_cmd_lcd
  2848                           
  2849                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2850  00469E  0E0E               	movlw	14
  2851  0046A0  EC31  F024         	call	_escreve_cmd_lcd
  2852                           
  2853                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2854  0046A4  0E01               	movlw	1
  2855  0046A6  EC31  F024         	call	_escreve_cmd_lcd
  2856  0046AA  0012               	return		;funcret
  2857  0046AC                     __end_of_init_lcd:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _init_hardware *****************
  2861 ;; Defined at:
  2862 ;;		line 52 in file "bibliotecas/hardware.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    4
  2883 ;; This function calls:
  2884 ;;		_config_timer_dois
  2885 ;;		_config_timer_zero
  2886 ;;		_init_interrupt
  2887 ;;		_init_oscilador
  2888 ;;		_init_ports
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text3
  2895  005B5A                     __ptext3:
  2896                           	callstack 0
  2897  005B5A                     _init_hardware:
  2898                           	callstack 26
  2899                           
  2900                           ;hardware.c: 55: init_oscilador();
  2901                           
  2902                           ;incstack = 0
  2903  005B5A  EC33  F02E         	call	_init_oscilador	;wreg free
  2904                           
  2905                           ;hardware.c: 58: init_ports();
  2906  005B5E  EC85  F02D         	call	_init_ports	;wreg free
  2907                           
  2908                           ;hardware.c: 61: config_timer_zero();
  2909  005B62  EC93  F02D         	call	_config_timer_zero	;wreg free
  2910                           
  2911                           ;hardware.c: 64: config_timer_dois();
  2912  005B66  ECF2  F02D         	call	_config_timer_dois	;wreg free
  2913                           
  2914                           ;hardware.c: 67: init_interrupt();
  2915  005B6A  ECB8  F02D         	call	_init_interrupt	;wreg free
  2916  005B6E  0012               	return		;funcret
  2917  005B70                     __end_of_init_hardware:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _init_ports *****************
  2921 ;; Defined at:
  2922 ;;		line 151 in file "bibliotecas/hardware.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_init_hardware
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text4
  2951  005B0A                     __ptext4:
  2952                           	callstack 0
  2953  005B0A                     _init_ports:
  2954                           	callstack 27
  2955                           
  2956                           ;hardware.c: 153: ADCON1 = 0X0F;
  2957                           
  2958                           ;incstack = 0
  2959  005B0A  0E0F               	movlw	15
  2960  005B0C  6EC1               	movwf	193,c	;volatile
  2961                           
  2962                           ;hardware.c: 154: TRISB = 0b00000001;
  2963  005B0E  0E01               	movlw	1
  2964  005B10  6E93               	movwf	147,c	;volatile
  2965                           
  2966                           ;hardware.c: 155: LATB = 0xFF;
  2967  005B12  688A               	setf	138,c	;volatile
  2968                           
  2969                           ;hardware.c: 156: TRISD = 0x00;
  2970  005B14  0E00               	movlw	0
  2971  005B16  6E95               	movwf	149,c	;volatile
  2972                           
  2973                           ;hardware.c: 157: TRISA = 0b00000111;
  2974  005B18  0E07               	movlw	7
  2975  005B1A  6E92               	movwf	146,c	;volatile
  2976                           
  2977                           ;hardware.c: 158: TRISC = 0x01111111;
  2978  005B1C  0E11               	movlw	17
  2979  005B1E  6E94               	movwf	148,c	;volatile
  2980                           
  2981                           ;hardware.c: 159: TRISE = 0b00000111;
  2982  005B20  0E07               	movlw	7
  2983  005B22  6E96               	movwf	150,c	;volatile
  2984  005B24  0012               	return		;funcret
  2985  005B26                     __end_of_init_ports:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _init_oscilador *****************
  2989 ;; Defined at:
  2990 ;;		line 169 in file "bibliotecas/hardware.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_init_hardware
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text5
  3019  005C66                     __ptext5:
  3020                           	callstack 0
  3021  005C66                     _init_oscilador:
  3022                           	callstack 27
  3023                           
  3024                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3025                           
  3026                           ;incstack = 0
  3027  005C66  88D3               	bsf	211,4,c	;volatile
  3028                           
  3029                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3030  005C68  8AD3               	bsf	211,5,c	;volatile
  3031                           
  3032                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3033  005C6A  8CD3               	bsf	211,6,c	;volatile
  3034  005C6C  0012               	return		;funcret
  3035  005C6E                     __end_of_init_oscilador:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _init_interrupt *****************
  3039 ;; Defined at:
  3040 ;;		line 94 in file "bibliotecas/hardware.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_init_hardware
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text6
  3069  005B70                     __ptext6:
  3070                           	callstack 0
  3071  005B70                     _init_interrupt:
  3072                           	callstack 27
  3073                           
  3074                           ;hardware.c: 96: INTCON = 0b10110000;
  3075                           
  3076                           ;incstack = 0
  3077  005B70  0EB0               	movlw	176
  3078  005B72  6EF2               	movwf	242,c	;volatile
  3079                           
  3080                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3081  005B74  0E00               	movlw	0
  3082  005B76  6EF1               	movwf	241,c	;volatile
  3083                           
  3084                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3085  005B78  0E00               	movlw	0
  3086  005B7A  6EF0               	movwf	240,c	;volatile
  3087                           
  3088                           ;hardware.c: 100: PIE1 = 0b00101000;
  3089  005B7C  0E28               	movlw	40
  3090  005B7E  6E9D               	movwf	157,c	;volatile
  3091  005B80  0012               	return		;funcret
  3092  005B82                     __end_of_init_interrupt:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _config_timer_zero *****************
  3096 ;; Defined at:
  3097 ;;		line 79 in file "bibliotecas/hardware.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    3
  3118 ;; This function calls:
  3119 ;;		_write_timer_zero
  3120 ;; This function is called by:
  3121 ;;		_init_hardware
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text7
  3126  005B26                     __ptext7:
  3127                           	callstack 0
  3128  005B26                     _config_timer_zero:
  3129                           	callstack 26
  3130                           
  3131                           ;hardware.c: 81: T0CON = 0b11000101;
  3132                           
  3133                           ;incstack = 0
  3134  005B26  0EC5               	movlw	197
  3135  005B28  6ED5               	movwf	213,c	;volatile
  3136                           
  3137                           ;hardware.c: 82: SPPCON = 0b00000000;
  3138  005B2A  0E00               	movlw	0
  3139  005B2C  6E65               	movwf	101,c	;volatile
  3140                           
  3141                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3142  005B2E  0E00               	movlw	0
  3143  005B30  6E63               	movwf	99,c	;volatile
  3144                           
  3145                           ;hardware.c: 84: write_timer_zero(0x45);
  3146  005B32  0E00               	movlw	0
  3147  005B34  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3148  005B36  0E45               	movlw	69
  3149  005B38  6E0A               	movwf	write_timer_zero@timer0^0,c
  3150  005B3A  EC0B  F02E         	call	_write_timer_zero	;wreg free
  3151  005B3E  0012               	return		;funcret
  3152  005B40                     __end_of_config_timer_zero:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _write_timer_zero *****************
  3156 ;; Defined at:
  3157 ;;		line 134 in file "bibliotecas/hardware.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  timer0          2    9[COMRAM] unsigned int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_config_timer_zero
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text8
  3186  005C16                     __ptext8:
  3187                           	callstack 0
  3188  005C16                     _write_timer_zero:
  3189                           	callstack 26
  3190                           
  3191                           ;hardware.c: 142: TMR0 = timer0;
  3192                           
  3193                           ;incstack = 0
  3194  005C16  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3195  005C1A  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3196  005C1E  0012               	return		;funcret
  3197  005C20                     __end_of_write_timer_zero:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _config_timer_dois *****************
  3201 ;; Defined at:
  3202 ;;		line 198 in file "bibliotecas/hardware.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    2
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_init_hardware
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text9
  3231  005BE4                     __ptext9:
  3232                           	callstack 0
  3233  005BE4                     _config_timer_dois:
  3234                           	callstack 27
  3235                           
  3236                           ;hardware.c: 200: T2CON = 0b00000100;
  3237                           
  3238                           ;incstack = 0
  3239  005BE4  0E04               	movlw	4
  3240  005BE6  6ECA               	movwf	202,c	;volatile
  3241                           
  3242                           ;hardware.c: 201: TMR2 = 0;
  3243  005BE8  0E00               	movlw	0
  3244  005BEA  6ECC               	movwf	204,c	;volatile
  3245                           
  3246                           ;hardware.c: 202: PR2 = 0x01;
  3247  005BEC  0E01               	movlw	1
  3248  005BEE  6ECB               	movwf	203,c	;volatile
  3249  005BF0  0012               	return		;funcret
  3250  005BF2                     __end_of_config_timer_dois:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _inicializa_tarefas *****************
  3254 ;; Defined at:
  3255 ;;		line 174 in file "main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 3F/1
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text10
  3284  005224                     __ptext10:
  3285                           	callstack 0
  3286  005224                     _inicializa_tarefas:
  3287                           	callstack 28
  3288                           
  3289                           ;main.c: 177: p_tarefas[0] = verifica_dados_operacionais;
  3290                           
  3291                           ;incstack = 0
  3292  005224  0E18               	movlw	low _verifica_dados_operacionais
  3293  005226  0101               	movlb	1	; () banked
  3294  005228  6F39               	movwf	_p_tarefas& (0+255),b
  3295  00522A  0E2F               	movlw	high _verifica_dados_operacionais
  3296  00522C  6F3A               	movwf	(_p_tarefas+1)& (0+255),b
  3297                           
  3298                           ;main.c: 178: p_tarefas[1] = disparo_gravacao;
  3299  00522E  0E10               	movlw	low _disparo_gravacao
  3300  005230  6F3B               	movwf	(_p_tarefas+2)& (0+255),b
  3301  005232  0E28               	movlw	high _disparo_gravacao
  3302  005234  6F3C               	movwf	(_p_tarefas+3)& (0+255),b
  3303                           
  3304                           ;main.c: 179: p_tarefas[2] = troca_de_tela;
  3305  005236  0EFC               	movlw	low _troca_de_tela
  3306  005238  6F3D               	movwf	(_p_tarefas+4)& (0+255),b
  3307  00523A  0E1B               	movlw	high _troca_de_tela
  3308  00523C  6F3E               	movwf	(_p_tarefas+5)& (0+255),b
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 183: tempo_backup[0] = 500;
  3312  00523E  0E01               	movlw	1
  3313  005240  6F34               	movwf	(_tempo_backup+1)& (0+255),b
  3314  005242  0EF4               	movlw	244
  3315  005244  6F33               	movwf	_tempo_backup& (0+255),b
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 184: tempo_backup[1] = 1000;
  3319  005246  0E03               	movlw	3
  3320  005248  6F36               	movwf	(_tempo_backup+3)& (0+255),b
  3321  00524A  0EE8               	movlw	232
  3322  00524C  6F35               	movwf	(_tempo_backup+2)& (0+255),b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;main.c: 185: tempo_backup[2] = 5000;
  3326  00524E  0E13               	movlw	19
  3327  005250  6F38               	movwf	(_tempo_backup+5)& (0+255),b
  3328  005252  0E88               	movlw	136
  3329  005254  6F37               	movwf	(_tempo_backup+4)& (0+255),b
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;main.c: 188: tempo_tarefa[0] = 500;
  3333  005256  0E01               	movlw	1
  3334  005258  6F2E               	movwf	(_tempo_tarefa+1)& (0+255),b
  3335  00525A  0EF4               	movlw	244
  3336  00525C  6F2D               	movwf	_tempo_tarefa& (0+255),b
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 189: tempo_tarefa[1] = 1000;
  3340  00525E  0E03               	movlw	3
  3341  005260  6F30               	movwf	(_tempo_tarefa+3)& (0+255),b
  3342  005262  0EE8               	movlw	232
  3343  005264  6F2F               	movwf	(_tempo_tarefa+2)& (0+255),b
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 190: tempo_tarefa[2] = 5000;
  3347  005266  0E13               	movlw	19
  3348  005268  6F32               	movwf	(_tempo_tarefa+5)& (0+255),b
  3349  00526A  0E88               	movlw	136
  3350  00526C  6F31               	movwf	(_tempo_tarefa+4)& (0+255),b
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 192: tarefa_em_execucao = 0;
  3354  00526E  0E00               	movlw	0
  3355  005270  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3356                           
  3357                           ; BSR set to: 1
  3358  005272  0012               	return		;funcret
  3359  005274                     __end_of_inicializa_tarefas:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _escalonador *****************
  3363 ;; Defined at:
  3364 ;;		line 203 in file "main.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  cont            1  134[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 3F/0
  3375 ;;		On exit  : 3F/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3381 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   17
  3385 ;; This function calls:
  3386 ;;		_disparo_gravacao
  3387 ;;		_troca_de_tela
  3388 ;;		_verifica_dados_operacionais
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text11
  3395  004420                     __ptext11:
  3396                           	callstack 0
  3397  004420                     _escalonador:
  3398                           	callstack 13
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 205: unsigned char cont;;main.c: 206: for(cont = 0; cont<3;cont++)
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;incstack = 0
  3405  004420  0E00               	movlw	0
  3406  004422  6FE6               	movwf	escalonador@cont& (0+255),b
  3407  004424                     l13808:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 207: {;main.c: 208: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3411  004424  51E6               	movf	escalonador@cont& (0+255),w,b
  3412  004426  0D02               	mullw	2
  3413  004428  0E39               	movlw	low _p_tarefas
  3414  00442A  24F3               	addwf	243,w,c
  3415  00442C  6ED9               	movwf	fsr2l,c
  3416  00442E  0E01               	movlw	high _p_tarefas
  3417  004430  20F4               	addwfc	prodh,w,c
  3418  004432  6EDA               	movwf	fsr2h,c
  3419  004434  50DE               	movf	postinc2,w,c
  3420  004436  10DE               	iorwf	postinc2,w,c
  3421  004438  B4D8               	btfsc	status,2,c
  3422  00443A  D042               	goto	l13820
  3423                           
  3424                           ; BSR set to: 0
  3425  00443C  51E6               	movf	escalonador@cont& (0+255),w,b
  3426  00443E  0D02               	mullw	2
  3427  004440  0E2D               	movlw	low _tempo_tarefa
  3428  004442  24F3               	addwf	243,w,c
  3429  004444  6ED9               	movwf	fsr2l,c
  3430  004446  0E01               	movlw	high _tempo_tarefa
  3431  004448  20F4               	addwfc	prodh,w,c
  3432  00444A  6EDA               	movwf	fsr2h,c
  3433  00444C  50DE               	movf	postinc2,w,c
  3434  00444E  10DE               	iorwf	postinc2,w,c
  3435  004450  A4D8               	btfss	status,2,c
  3436  004452  D036               	goto	l13820
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;main.c: 209: {;main.c: 210: tarefa_em_execucao = 1;
  3440  004454  0E01               	movlw	1
  3441  004456  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3442                           
  3443                           ;main.c: 211: timeout_tarefa = 65000;
  3444  004458  0EFD               	movlw	253
  3445  00445A  0101               	movlb	1	; () banked
  3446  00445C  6F71               	movwf	(_timeout_tarefa+1)& (0+255),b
  3447  00445E  0EE8               	movlw	232
  3448  004460  6F70               	movwf	_timeout_tarefa& (0+255),b
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 212: p_tarefas[cont]();
  3452  004462  0100               	movlb	0	; () banked
  3453  004464  51E6               	movf	escalonador@cont& (0+255),w,b
  3454  004466  0D02               	mullw	2
  3455  004468  0E39               	movlw	low _p_tarefas
  3456  00446A  24F3               	addwf	243,w,c
  3457  00446C  6ED9               	movwf	fsr2l,c
  3458  00446E  0E01               	movlw	high _p_tarefas
  3459  004470  20F4               	addwfc	prodh,w,c
  3460  004472  6EDA               	movwf	fsr2h,c
  3461  004474  CFDE F0E4          	movff	postinc2,??_escalonador
  3462  004478  CFDD F0E5          	movff	postdec2,??_escalonador+1
  3463  00447C  D801               	call	u16648
  3464  00447E  D009               	goto	u16649
  3465  004480                     u16648:
  3466  004480  0005               	push	
  3467  004482  6EFA               	movwf	pclath,c
  3468  004484  51E4               	movf	??_escalonador& (0+255),w,b
  3469  004486  6EFD               	movwf	tosl,c
  3470  004488  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  3471  00448A  6EFE               	movwf	tosh,c
  3472  00448C  6AFF               	clrf	tosu,c
  3473  00448E  50FA               	movf	pclath,w,c
  3474  004490  0012               	return		;indir
  3475  004492                     u16649:
  3476                           
  3477                           ;main.c: 213: tarefa_em_execucao = 0;
  3478  004492  0E00               	movlw	0
  3479  004494  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3480                           
  3481                           ;main.c: 214: tempo_tarefa[cont] = tempo_backup[cont];
  3482  004496  0100               	movlb	0	; () banked
  3483  004498  51E6               	movf	escalonador@cont& (0+255),w,b
  3484  00449A  0D02               	mullw	2
  3485  00449C  0E33               	movlw	low _tempo_backup
  3486  00449E  24F3               	addwf	243,w,c
  3487  0044A0  6ED9               	movwf	fsr2l,c
  3488  0044A2  0E01               	movlw	high _tempo_backup
  3489  0044A4  20F4               	addwfc	prodh,w,c
  3490  0044A6  6EDA               	movwf	fsr2h,c
  3491  0044A8  51E6               	movf	escalonador@cont& (0+255),w,b
  3492  0044AA  0D02               	mullw	2
  3493  0044AC  0E2D               	movlw	low _tempo_tarefa
  3494  0044AE  24F3               	addwf	243,w,c
  3495  0044B0  6EE1               	movwf	fsr1l,c
  3496  0044B2  0E01               	movlw	high _tempo_tarefa
  3497  0044B4  20F4               	addwfc	prodh,w,c
  3498  0044B6  6EE2               	movwf	fsr1h,c
  3499  0044B8  CFDE FFE6          	movff	postinc2,postinc1
  3500  0044BC  CFDD FFE5          	movff	postdec2,postdec1
  3501  0044C0                     l13820:
  3502                           
  3503                           ; BSR set to: 0
  3504  0044C0  2BE6               	incf	escalonador@cont& (0+255),f,b
  3505                           
  3506                           ; BSR set to: 0
  3507  0044C2  0E02               	movlw	2
  3508  0044C4  65E6               	cpfsgt	escalonador@cont& (0+255),b
  3509  0044C6  D7AE               	goto	l13808
  3510  0044C8  0012               	return	
  3511  0044CA                     __end_of_escalonador:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _troca_de_tela *****************
  3515 ;; Defined at:
  3516 ;;		line 414 in file "main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  fix_signal      2   54[COMRAM] PTR unsigned char 
  3521 ;;		 -> rawFix(2), 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 3F/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        3 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    6
  3538 ;; This function calls:
  3539 ;;		_escreve_caractere_lcd
  3540 ;;		_escreve_cmd_lcd
  3541 ;;		_escreve_frase_ram_lcd
  3542 ;;		_escreve_inteiro_lcd
  3543 ;;		_fix
  3544 ;;		_mostra_dados_display
  3545 ;;		_posicao_cursor_lcd
  3546 ;;		_recebe_dado_gps
  3547 ;; This function is called by:
  3548 ;;		_inicializa_tarefas
  3549 ;;		_escalonador
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text12
  3554  001BFC                     __ptext12:
  3555                           	callstack 0
  3556  001BFC                     _troca_de_tela:
  3557                           	callstack 23
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;main.c: 416: static unsigned char state = 0;;main.c: 417: static unsigned char last_sta
      +                          te = 0;;main.c: 418: unsigned char *fix_signal;;main.c: 420: if(!PORTEbits.RE0 || (state
      +                           == 1 ))
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;incstack = 0
  3564  001BFC  A084               	btfss	132,0,c	;volatile
  3565  001BFE  D003               	goto	u16140
  3566                           
  3567                           ; BSR set to: 0
  3568  001C00  0450               	decf	troca_de_tela@state^0,w,c
  3569  001C02  A4D8               	btfss	status,2,c
  3570  001C04  D0E2               	goto	l13426
  3571  001C06                     u16140:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;main.c: 421: {;main.c: 423: if(!time_atualizacao)
  3575  001C06  51EA               	movf	_time_atualizacao& (0+255),w,b
  3576  001C08  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3577  001C0A  A4D8               	btfss	status,2,c
  3578  001C0C  D061               	goto	l13386
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 424: {;main.c: 425: if(!fence_flag[2].point)
  3582  001C0E  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3583  001C10  D00C               	goto	l13364
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 426: {;main.c: 427: posicao_cursor_lcd(1,8);
  3587  001C12  0E08               	movlw	8
  3588  001C14  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3589  001C16  0E01               	movlw	1
  3590  001C18  EC5E  F027         	call	_posicao_cursor_lcd
  3591                           
  3592                           ;main.c: 428: escreve_frase_ram_lcd("DENTRO");
  3593  001C1C  0E4F               	movlw	low STR_22
  3594  001C1E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3595  001C20  0E62               	movlw	high STR_22
  3596  001C22  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3597  001C24  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3598                           
  3599                           ;main.c: 429: }
  3600  001C28  D03C               	goto	l13378
  3601  001C2A                     l13364:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;main.c: 430: else;main.c: 431: {;main.c: 432: posicao_cursor_lcd(1,8);
  3605  001C2A  0E08               	movlw	8
  3606  001C2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3607  001C2E  0E01               	movlw	1
  3608  001C30  EC5E  F027         	call	_posicao_cursor_lcd
  3609                           
  3610                           ;main.c: 433: escreve_frase_ram_lcd("FORA");
  3611  001C34  0E61               	movlw	low STR_23
  3612  001C36  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3613  001C38  0E62               	movlw	high STR_23
  3614  001C3A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3615  001C3C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3616                           
  3617                           ;main.c: 434: posicao_cursor_lcd(1,13);
  3618  001C40  0E0D               	movlw	13
  3619  001C42  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3620  001C44  0E01               	movlw	1
  3621  001C46  EC5E  F027         	call	_posicao_cursor_lcd
  3622                           
  3623                           ;main.c: 435: escreve_inteiro_lcd(fence_flag[0].point);
  3624  001C4A  0100               	movlb	0	; () banked
  3625  001C4C  A1E7               	btfss	_fence_flag& (0+255),0,b
  3626  001C4E  D003               	goto	u16170
  3627  001C50  6A36               	clrf	??_troca_de_tela^0,c
  3628  001C52  2A36               	incf	??_troca_de_tela^0,f,c
  3629  001C54  D001               	goto	u16178
  3630  001C56                     u16170:
  3631  001C56  6A36               	clrf	??_troca_de_tela^0,c
  3632  001C58                     u16178:
  3633  001C58  5036               	movf	??_troca_de_tela^0,w,c
  3634  001C5A  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3635  001C5C  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3636  001C5E  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3637  001C60  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3638  001C62  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3639                           
  3640                           ;main.c: 436: posicao_cursor_lcd(1,14);
  3641  001C66  0E0E               	movlw	14
  3642  001C68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3643  001C6A  0E01               	movlw	1
  3644  001C6C  EC5E  F027         	call	_posicao_cursor_lcd
  3645                           
  3646                           ;main.c: 437: escreve_frase_ram_lcd("|");
  3647  001C70  0E7C               	movlw	low STR_24
  3648  001C72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3649  001C74  0E62               	movlw	high STR_24
  3650  001C76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3651  001C78  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3652                           
  3653                           ;main.c: 438: posicao_cursor_lcd(1,15);
  3654  001C7C  0E0F               	movlw	15
  3655  001C7E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3656  001C80  0E01               	movlw	1
  3657  001C82  EC5E  F027         	call	_posicao_cursor_lcd
  3658                           
  3659                           ;main.c: 439: escreve_inteiro_lcd(fence_flag[1].point);
  3660  001C86  0100               	movlb	0	; () banked
  3661  001C88  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3662  001C8A  D003               	goto	u16180
  3663  001C8C  6A36               	clrf	??_troca_de_tela^0,c
  3664  001C8E  2A36               	incf	??_troca_de_tela^0,f,c
  3665  001C90  D001               	goto	u16188
  3666  001C92                     u16180:
  3667  001C92  6A36               	clrf	??_troca_de_tela^0,c
  3668  001C94                     u16188:
  3669  001C94  5036               	movf	??_troca_de_tela^0,w,c
  3670  001C96  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3671  001C98  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3672  001C9A  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3673  001C9C  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3674  001C9E  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3675  001CA2                     l13378:
  3676                           
  3677                           ;main.c: 440: };main.c: 442: fix_signal = fix();
  3678  001CA2  EC29  F02E         	call	_fix	;wreg free
  3679  001CA6  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3680  001CAA  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3681                           
  3682                           ;main.c: 443: posicao_cursor_lcd(2,8);
  3683  001CAE  0E08               	movlw	8
  3684  001CB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3685  001CB2  0E02               	movlw	2
  3686  001CB4  EC5E  F027         	call	_posicao_cursor_lcd
  3687                           
  3688                           ;main.c: 444: escreve_caractere_lcd(fix_signal[0]);
  3689  001CB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3690  001CBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3691  001CC0  50DF               	movf	indf2,w,c
  3692  001CC2  ECEF  F025         	call	_escreve_caractere_lcd
  3693                           
  3694                           ;main.c: 445: time_atualizacao = 10000;
  3695  001CC6  0E27               	movlw	39
  3696  001CC8  0100               	movlb	0	; () banked
  3697  001CCA  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3698  001CCC  0E10               	movlw	16
  3699  001CCE  6FEA               	movwf	_time_atualizacao& (0+255),b
  3700  001CD0                     l13386:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;main.c: 446: };main.c: 448: if(last_state != 1)
  3704  001CD0  044F               	decf	troca_de_tela@last_state^0,w,c
  3705  001CD2  B4D8               	btfsc	status,2,c
  3706  001CD4  D078               	goto	l13424
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 449: {;main.c: 450: state = 1;
  3710  001CD6  0E01               	movlw	1
  3711  001CD8  6E50               	movwf	troca_de_tela@state^0,c
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 451: escreve_cmd_lcd(0b00000001);
  3715  001CDA  0E01               	movlw	1
  3716  001CDC  EC31  F024         	call	_escreve_cmd_lcd
  3717                           
  3718                           ;main.c: 452: posicao_cursor_lcd(1,0);
  3719  001CE0  0E00               	movlw	0
  3720  001CE2  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3721  001CE4  0E01               	movlw	1
  3722  001CE6  EC5E  F027         	call	_posicao_cursor_lcd
  3723                           
  3724                           ;main.c: 453: escreve_frase_ram_lcd("FENCE:");
  3725  001CEA  0E48               	movlw	low STR_25
  3726  001CEC  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3727  001CEE  0E62               	movlw	high STR_25
  3728  001CF0  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3729  001CF2  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3730                           
  3731                           ;main.c: 455: if(!fence_flag[2].point)
  3732  001CF6  0100               	movlb	0	; () banked
  3733  001CF8  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3734  001CFA  D00C               	goto	l13402
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;main.c: 456: {;main.c: 457: posicao_cursor_lcd(1,8);
  3738  001CFC  0E08               	movlw	8
  3739  001CFE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3740  001D00  0E01               	movlw	1
  3741  001D02  EC5E  F027         	call	_posicao_cursor_lcd
  3742                           
  3743                           ;main.c: 458: escreve_frase_ram_lcd("DENTRO");
  3744  001D06  0E4F               	movlw	low STR_22
  3745  001D08  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3746  001D0A  0E62               	movlw	high STR_22
  3747  001D0C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3748  001D0E  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3749                           
  3750                           ;main.c: 459: }
  3751  001D12  D03C               	goto	l13416
  3752  001D14                     l13402:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 460: else;main.c: 461: {;main.c: 462: posicao_cursor_lcd(1,8);
  3756  001D14  0E08               	movlw	8
  3757  001D16  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3758  001D18  0E01               	movlw	1
  3759  001D1A  EC5E  F027         	call	_posicao_cursor_lcd
  3760                           
  3761                           ;main.c: 463: escreve_frase_ram_lcd("FORA");
  3762  001D1E  0E61               	movlw	low STR_23
  3763  001D20  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3764  001D22  0E62               	movlw	high STR_23
  3765  001D24  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3766  001D26  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3767                           
  3768                           ;main.c: 464: posicao_cursor_lcd(1,13);
  3769  001D2A  0E0D               	movlw	13
  3770  001D2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3771  001D2E  0E01               	movlw	1
  3772  001D30  EC5E  F027         	call	_posicao_cursor_lcd
  3773                           
  3774                           ;main.c: 465: escreve_inteiro_lcd(fence_flag[0].point);
  3775  001D34  0100               	movlb	0	; () banked
  3776  001D36  A1E7               	btfss	_fence_flag& (0+255),0,b
  3777  001D38  D003               	goto	u16210
  3778  001D3A  6A36               	clrf	??_troca_de_tela^0,c
  3779  001D3C  2A36               	incf	??_troca_de_tela^0,f,c
  3780  001D3E  D001               	goto	u16218
  3781  001D40                     u16210:
  3782  001D40  6A36               	clrf	??_troca_de_tela^0,c
  3783  001D42                     u16218:
  3784  001D42  5036               	movf	??_troca_de_tela^0,w,c
  3785  001D44  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3786  001D46  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3787  001D48  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3788  001D4A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3789  001D4C  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3790                           
  3791                           ;main.c: 466: posicao_cursor_lcd(1,14);
  3792  001D50  0E0E               	movlw	14
  3793  001D52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3794  001D54  0E01               	movlw	1
  3795  001D56  EC5E  F027         	call	_posicao_cursor_lcd
  3796                           
  3797                           ;main.c: 467: escreve_frase_ram_lcd("|");
  3798  001D5A  0E7C               	movlw	low STR_24
  3799  001D5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3800  001D5E  0E62               	movlw	high STR_24
  3801  001D60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3802  001D62  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3803                           
  3804                           ;main.c: 468: posicao_cursor_lcd(1,15);
  3805  001D66  0E0F               	movlw	15
  3806  001D68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3807  001D6A  0E01               	movlw	1
  3808  001D6C  EC5E  F027         	call	_posicao_cursor_lcd
  3809                           
  3810                           ;main.c: 469: escreve_inteiro_lcd(fence_flag[1].point);
  3811  001D70  0100               	movlb	0	; () banked
  3812  001D72  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3813  001D74  D003               	goto	u16220
  3814  001D76  6A36               	clrf	??_troca_de_tela^0,c
  3815  001D78  2A36               	incf	??_troca_de_tela^0,f,c
  3816  001D7A  D001               	goto	u16228
  3817  001D7C                     u16220:
  3818  001D7C  6A36               	clrf	??_troca_de_tela^0,c
  3819  001D7E                     u16228:
  3820  001D7E  5036               	movf	??_troca_de_tela^0,w,c
  3821  001D80  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3822  001D82  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3823  001D84  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3824  001D86  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3825  001D88  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3826  001D8C                     l13416:
  3827                           
  3828                           ;main.c: 470: };main.c: 471: fix_signal = fix();
  3829  001D8C  EC29  F02E         	call	_fix	;wreg free
  3830  001D90  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3831  001D94  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3832                           
  3833                           ;main.c: 472: posicao_cursor_lcd(2,0);
  3834  001D98  0E00               	movlw	0
  3835  001D9A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3836  001D9C  0E02               	movlw	2
  3837  001D9E  EC5E  F027         	call	_posicao_cursor_lcd
  3838                           
  3839                           ;main.c: 473: escreve_frase_ram_lcd("FIX:");
  3840  001DA2  0E5C               	movlw	low STR_29
  3841  001DA4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3842  001DA6  0E62               	movlw	high STR_29
  3843  001DA8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3844  001DAA  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3845                           
  3846                           ;main.c: 474: posicao_cursor_lcd(2,8);
  3847  001DAE  0E08               	movlw	8
  3848  001DB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3849  001DB2  0E02               	movlw	2
  3850  001DB4  EC5E  F027         	call	_posicao_cursor_lcd
  3851                           
  3852                           ;main.c: 475: escreve_caractere_lcd(fix_signal[0]);
  3853  001DB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3854  001DBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3855  001DC0  50DF               	movf	indf2,w,c
  3856  001DC2  ECEF  F025         	call	_escreve_caractere_lcd
  3857  001DC6                     l13424:
  3858                           
  3859                           ;main.c: 476: };main.c: 477: last_state = 1;
  3860  001DC6  0E01               	movlw	1
  3861  001DC8  6E4F               	movwf	troca_de_tela@last_state^0,c
  3862  001DCA                     l13426:
  3863                           
  3864                           ;main.c: 479: };main.c: 489: if(!PORTEbits.RE1 || (state == 2))
  3865  001DCA  A284               	btfss	132,1,c	;volatile
  3866  001DCC  D004               	goto	u16240
  3867  001DCE  0E02               	movlw	2
  3868  001DD0  1850               	xorwf	troca_de_tela@state^0,w,c
  3869  001DD2  A4D8               	btfss	status,2,c
  3870  001DD4  D033               	goto	l13458
  3871  001DD6                     u16240:
  3872                           
  3873                           ;main.c: 490: {;main.c: 491: if(!time_atualizacao)
  3874  001DD6  0100               	movlb	0	; () banked
  3875  001DD8  51EA               	movf	_time_atualizacao& (0+255),w,b
  3876  001DDA  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3877  001DDC  A4D8               	btfss	status,2,c
  3878  001DDE  D009               	goto	l13438
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 492: {;main.c: 493: recebe_dado_gps();
  3882  001DE0  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  3883                           
  3884                           ;main.c: 494: mostra_dados_display();
  3885  001DE4  ECF2  F02B         	call	_mostra_dados_display	;wreg free
  3886                           
  3887                           ;main.c: 495: time_atualizacao = 2000;
  3888  001DE8  0E07               	movlw	7
  3889  001DEA  0100               	movlb	0	; () banked
  3890  001DEC  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3891  001DEE  0ED0               	movlw	208
  3892  001DF0  6FEA               	movwf	_time_atualizacao& (0+255),b
  3893  001DF2                     l13438:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 496: };main.c: 499: if(last_state != 2)
  3897  001DF2  0E02               	movlw	2
  3898  001DF4  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3899  001DF6  B4D8               	btfsc	status,2,c
  3900  001DF8  D01F               	goto	l13456
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 500: {;main.c: 501: state = 2;
  3904  001DFA  0E02               	movlw	2
  3905  001DFC  6E50               	movwf	troca_de_tela@state^0,c
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 502: escreve_cmd_lcd(0b00000001);
  3909  001DFE  0E01               	movlw	1
  3910  001E00  EC31  F024         	call	_escreve_cmd_lcd
  3911                           
  3912                           ;main.c: 503: posicao_cursor_lcd(1,0);
  3913  001E04  0E00               	movlw	0
  3914  001E06  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3915  001E08  0E01               	movlw	1
  3916  001E0A  EC5E  F027         	call	_posicao_cursor_lcd
  3917                           
  3918                           ;main.c: 504: escreve_frase_ram_lcd("lt:");
  3919  001E0E  0E6F               	movlw	low STR_30
  3920  001E10  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3921  001E12  0E62               	movlw	high STR_30
  3922  001E14  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3923  001E16  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3924                           
  3925                           ;main.c: 505: posicao_cursor_lcd(2,0);
  3926  001E1A  0E00               	movlw	0
  3927  001E1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3928  001E1E  0E02               	movlw	2
  3929  001E20  EC5E  F027         	call	_posicao_cursor_lcd
  3930                           
  3931                           ;main.c: 506: escreve_frase_ram_lcd("lo:");
  3932  001E24  0E6B               	movlw	low STR_31
  3933  001E26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3934  001E28  0E62               	movlw	high STR_31
  3935  001E2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3936  001E2C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3937                           
  3938                           ;main.c: 507: recebe_dado_gps();
  3939  001E30  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  3940                           
  3941                           ;main.c: 508: mostra_dados_display();
  3942  001E34  ECF2  F02B         	call	_mostra_dados_display	;wreg free
  3943  001E38                     l13456:
  3944                           
  3945                           ;main.c: 509: };main.c: 510: last_state = 2;
  3946  001E38  0E02               	movlw	2
  3947  001E3A  6E4F               	movwf	troca_de_tela@last_state^0,c
  3948  001E3C                     l13458:
  3949                           
  3950                           ;main.c: 511: };main.c: 516: if(!state)
  3951  001E3C  5050               	movf	troca_de_tela@state^0,w,c
  3952  001E3E  A4D8               	btfss	status,2,c
  3953  001E40  0012               	return	
  3954                           
  3955                           ;main.c: 517: {;main.c: 518: if(last_state != 4)
  3956  001E42  0E04               	movlw	4
  3957  001E44  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3958  001E46  B4D8               	btfsc	status,2,c
  3959  001E48  D019               	goto	l13468
  3960                           
  3961                           ;main.c: 519: {;main.c: 520: escreve_cmd_lcd(0b00000001);
  3962  001E4A  0E01               	movlw	1
  3963  001E4C  EC31  F024         	call	_escreve_cmd_lcd
  3964                           
  3965                           ;main.c: 521: posicao_cursor_lcd(1,0);
  3966  001E50  0E00               	movlw	0
  3967  001E52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3968  001E54  0E01               	movlw	1
  3969  001E56  EC5E  F027         	call	_posicao_cursor_lcd
  3970                           
  3971                           ;main.c: 522: escreve_frase_ram_lcd("B1:FENCE");
  3972  001E5A  0E2E               	movlw	low STR_32
  3973  001E5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3974  001E5E  0E62               	movlw	high STR_32
  3975  001E60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3976  001E62  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3977                           
  3978                           ;main.c: 523: posicao_cursor_lcd(2,0);
  3979  001E66  0E00               	movlw	0
  3980  001E68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3981  001E6A  0E02               	movlw	2
  3982  001E6C  EC5E  F027         	call	_posicao_cursor_lcd
  3983                           
  3984                           ;main.c: 524: escreve_frase_ram_lcd("B2:LTLO");
  3985  001E70  0E40               	movlw	low STR_33
  3986  001E72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3987  001E74  0E62               	movlw	high STR_33
  3988  001E76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3989  001E78  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3990  001E7C                     l13468:
  3991                           
  3992                           ;main.c: 526: };main.c: 527: last_state = 4;
  3993  001E7C  0E04               	movlw	4
  3994  001E7E  6E4F               	movwf	troca_de_tela@last_state^0,c
  3995  001E80  0012               	return		;funcret
  3996  001E82                     __end_of_troca_de_tela:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _disparo_gravacao *****************
  4000 ;; Defined at:
  4001 ;;		line 351 in file "main.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4006 ;;  index_max       2   16[BANK2 ] unsigned int 
  4007 ;;  v_max           2   14[BANK2 ] unsigned int 
  4008 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4009 ;;		 -> rawFix(2), 
  4010 ;;  i               1   18[BANK2 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 3F/0
  4017 ;;		On exit  : 3F/1
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4022 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4024 ;;Total ram usage:       24 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   16
  4027 ;; This function calls:
  4028 ;;		___wmul
  4029 ;;		_atoi
  4030 ;;		_dados_gps_to_sd
  4031 ;;		_fix
  4032 ;;		_grava_sd
  4033 ;;		_itoa
  4034 ;;		_monta_sd
  4035 ;;		_recebe_dado_gps
  4036 ;;		_verifica_fence
  4037 ;; This function is called by:
  4038 ;;		_inicializa_tarefas
  4039 ;;		_escalonador
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text13
  4044  002810                     __ptext13:
  4045                           	callstack 0
  4046  002810                     _disparo_gravacao:
  4047                           	callstack 13
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;main.c: 356: unsigned char *velocidade[6];;main.c: 358: v_max = atoi(dados_vel[0]);
  4051                           
  4052                           ; BSR set to: 0
  4053                           
  4054                           ;incstack = 0
  4055  002810  C127  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4056  002814  C128  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4057  002818  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4058  00281A  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4059  00281E  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4060  002822  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4061  002826  EC00  F019         	call	_atoi	;wreg free
  4062  00282A  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4063  00282E  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4064                           
  4065                           ;main.c: 359: index_max = 0;
  4066  002832  0E00               	movlw	0
  4067  002834  0102               	movlb	2	; () banked
  4068  002836  6FF8               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4069  002838  0E00               	movlw	0
  4070  00283A  6FF7               	movwf	disparo_gravacao@index_max& (0+255),b
  4071                           
  4072                           ; BSR set to: 2
  4073                           ;main.c: 360: if(!time_sd)
  4074  00283C  0101               	movlb	1	; () banked
  4075  00283E  516E               	movf	_time_sd& (0+255),w,b
  4076  002840  116F               	iorwf	(_time_sd+1)& (0+255),w,b
  4077  002842  A4D8               	btfss	status,2,c
  4078  002844  0012               	return	
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 361: {;main.c: 362: verifica_fence();
  4082  002846  EC8D  F027         	call	_verifica_fence	;wreg free
  4083                           
  4084                           ;main.c: 363: fix_gps = fix();
  4085  00284A  EC29  F02E         	call	_fix	;wreg free
  4086  00284E  C00A  F2F3         	movff	?_fix,disparo_gravacao@fix_gps
  4087  002852  C00B  F2F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4088                           
  4089                           ;main.c: 364: fix_gps[0] = '1';
  4090  002856  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4091  00285A  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4092  00285E  0E31               	movlw	49
  4093  002860  6EDF               	movwf	indf2,c
  4094                           
  4095                           ;main.c: 365: if(*fix_gps == '1')
  4096  002862  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4097  002866  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4098  00286A  0E31               	movlw	49
  4099  00286C  18DE               	xorwf	postinc2,w,c
  4100  00286E  A4D8               	btfss	status,2,c
  4101  002870  D0DC               	goto	l13784
  4102                           
  4103                           ;main.c: 366: {;main.c: 367: if(v_max> 50)
  4104  002872  0102               	movlb	2	; () banked
  4105  002874  51F6               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4106  002876  E104               	bnz	u16590
  4107  002878  0E33               	movlw	51
  4108  00287A  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4109  00287C  A0D8               	btfss	status,0,c
  4110  00287E  D0C2               	goto	l13776
  4111  002880                     u16590:
  4112                           
  4113                           ; BSR set to: 2
  4114                           ;main.c: 368: {;main.c: 369: for(i=1; i<3; i++)
  4115  002880  0E01               	movlw	1
  4116  002882  6FF9               	movwf	disparo_gravacao@i& (0+255),b
  4117  002884                     l13754:
  4118                           
  4119                           ; BSR set to: 2
  4120                           ;main.c: 370: {;main.c: 371: if(v_max < atoi(dados_vel[i]))
  4121  002884  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4122  002886  0D02               	mullw	2
  4123  002888  0E27               	movlw	low _dados_vel
  4124  00288A  24F3               	addwf	243,w,c
  4125  00288C  6ED9               	movwf	fsr2l,c
  4126  00288E  0E01               	movlw	high _dados_vel
  4127  002890  20F4               	addwfc	prodh,w,c
  4128  002892  6EDA               	movwf	fsr2h,c
  4129  002894  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4130  002898  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4131  00289C  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4132  0028A0  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4133  0028A4  0100               	movlb	0	; () banked
  4134  0028A6  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4135  0028A8  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4136  0028AC  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4137  0028B0  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4138  0028B4  EC00  F019         	call	_atoi	;wreg free
  4139  0028B8  5010               	movf	?_atoi^0,w,c
  4140  0028BA  0102               	movlb	2	; () banked
  4141  0028BC  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4142  0028BE  5011               	movf	(?_atoi+1)^0,w,c
  4143  0028C0  59F6               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4144  0028C2  B0D8               	btfsc	status,0,c
  4145  0028C4  D022               	goto	l13760
  4146                           
  4147                           ; BSR set to: 2
  4148                           ;main.c: 372: {;main.c: 373: v_max = atoi(dados_vel[i]);
  4149  0028C6  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4150  0028C8  0D02               	mullw	2
  4151  0028CA  0E27               	movlw	low _dados_vel
  4152  0028CC  24F3               	addwf	243,w,c
  4153  0028CE  6ED9               	movwf	fsr2l,c
  4154  0028D0  0E01               	movlw	high _dados_vel
  4155  0028D2  20F4               	addwfc	prodh,w,c
  4156  0028D4  6EDA               	movwf	fsr2h,c
  4157  0028D6  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4158  0028DA  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4159  0028DE  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4160  0028E2  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4161  0028E6  0100               	movlb	0	; () banked
  4162  0028E8  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4163  0028EA  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4164  0028EE  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4165  0028F2  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4166  0028F6  EC00  F019         	call	_atoi	;wreg free
  4167  0028FA  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4168  0028FE  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4169                           
  4170                           ;main.c: 374: index_max = i;
  4171  002902  C2F9  F2F7         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4172  002906  0102               	movlb	2	; () banked
  4173  002908  6BF8               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4174  00290A                     l13760:
  4175                           
  4176                           ; BSR set to: 2
  4177  00290A  2BF9               	incf	disparo_gravacao@i& (0+255),f,b
  4178                           
  4179                           ; BSR set to: 2
  4180  00290C  0E02               	movlw	2
  4181  00290E  65F9               	cpfsgt	disparo_gravacao@i& (0+255),b
  4182  002910  D7B9               	goto	l13754
  4183                           
  4184                           ; BSR set to: 2
  4185                           ;main.c: 375: };main.c: 377: };main.c: 379: monta_sd(0, dados_hora[index_max]);
  4186  002912  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4187  002916  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4188  00291A  0E00               	movlw	0
  4189  00291C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4190  00291E  0E06               	movlw	6
  4191  002920  6E0C               	movwf	___wmul@multiplicand^0,c
  4192  002922  EC9B  F02C         	call	___wmul	;wreg free
  4193  002926  0ED5               	movlw	low _dados_hora
  4194  002928  240A               	addwf	?___wmul^0,w,c
  4195  00292A  6E10               	movwf	monta_sd@dado^0,c
  4196  00292C  0E02               	movlw	high _dados_hora
  4197  00292E  200B               	addwfc	(?___wmul+1)^0,w,c
  4198  002930  6E11               	movwf	(monta_sd@dado+1)^0,c
  4199  002932  0E00               	movlw	0
  4200  002934  EC03  F00B         	call	_monta_sd
  4201                           
  4202                           ;main.c: 380: monta_sd(1, dados_data[index_max]);
  4203  002938  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4204  00293C  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4205  002940  0E00               	movlw	0
  4206  002942  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4207  002944  0E06               	movlw	6
  4208  002946  6E0C               	movwf	___wmul@multiplicand^0,c
  4209  002948  EC9B  F02C         	call	___wmul	;wreg free
  4210  00294C  0EC3               	movlw	low _dados_data
  4211  00294E  240A               	addwf	?___wmul^0,w,c
  4212  002950  6E10               	movwf	monta_sd@dado^0,c
  4213  002952  0E02               	movlw	high _dados_data
  4214  002954  200B               	addwfc	(?___wmul+1)^0,w,c
  4215  002956  6E11               	movwf	(monta_sd@dado+1)^0,c
  4216  002958  0E01               	movlw	1
  4217  00295A  EC03  F00B         	call	_monta_sd
  4218                           
  4219                           ;main.c: 381: monta_sd(2, dados_lat[index_max]);
  4220  00295E  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4221  002962  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4222  002966  0E00               	movlw	0
  4223  002968  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4224  00296A  0E0B               	movlw	11
  4225  00296C  6E0C               	movwf	___wmul@multiplicand^0,c
  4226  00296E  EC9B  F02C         	call	___wmul	;wreg free
  4227  002972  0EA2               	movlw	low _dados_lat
  4228  002974  240A               	addwf	?___wmul^0,w,c
  4229  002976  6E10               	movwf	monta_sd@dado^0,c
  4230  002978  0E02               	movlw	high _dados_lat
  4231  00297A  200B               	addwfc	(?___wmul+1)^0,w,c
  4232  00297C  6E11               	movwf	(monta_sd@dado+1)^0,c
  4233  00297E  0E02               	movlw	2
  4234  002980  EC03  F00B         	call	_monta_sd
  4235                           
  4236                           ;main.c: 382: monta_sd(3, dados_long[index_max]);
  4237  002984  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4238  002988  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4239  00298C  0E00               	movlw	0
  4240  00298E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4241  002990  0E0C               	movlw	12
  4242  002992  6E0C               	movwf	___wmul@multiplicand^0,c
  4243  002994  EC9B  F02C         	call	___wmul	;wreg free
  4244  002998  0E7E               	movlw	low _dados_long
  4245  00299A  240A               	addwf	?___wmul^0,w,c
  4246  00299C  6E10               	movwf	monta_sd@dado^0,c
  4247  00299E  0E02               	movlw	high _dados_long
  4248  0029A0  200B               	addwfc	(?___wmul+1)^0,w,c
  4249  0029A2  6E11               	movwf	(monta_sd@dado+1)^0,c
  4250  0029A4  0E03               	movlw	3
  4251  0029A6  EC03  F00B         	call	_monta_sd
  4252                           
  4253                           ;main.c: 383: itoa(velocidade, dados_vel[index_max], 10);
  4254  0029AA  0EE7               	movlw	low disparo_gravacao@velocidade
  4255  0029AC  6E1A               	movwf	itoa@buf^0,c
  4256  0029AE  0E02               	movlw	high disparo_gravacao@velocidade
  4257  0029B0  6E1B               	movwf	(itoa@buf+1)^0,c
  4258  0029B2  90D8               	bcf	status,0,c
  4259  0029B4  0102               	movlb	2	; () banked
  4260  0029B6  35F7               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4261  0029B8  6ED9               	movwf	fsr2l,c
  4262  0029BA  35F8               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4263  0029BC  6EDA               	movwf	fsr2h,c
  4264  0029BE  0E27               	movlw	low _dados_vel
  4265  0029C0  26D9               	addwf	fsr2l,f,c
  4266  0029C2  0E01               	movlw	high _dados_vel
  4267  0029C4  22DA               	addwfc	fsr2h,f,c
  4268  0029C6  CFDE F01C          	movff	postinc2,itoa@val
  4269  0029CA  CFDD F01D          	movff	postdec2,itoa@val+1
  4270  0029CE  0E00               	movlw	0
  4271  0029D0  6E1F               	movwf	(itoa@base+1)^0,c
  4272  0029D2  0E0A               	movlw	10
  4273  0029D4  6E1E               	movwf	itoa@base^0,c
  4274  0029D6  ECF5  F02A         	call	_itoa	;wreg free
  4275                           
  4276                           ;main.c: 384: monta_sd(7, velocidade);
  4277  0029DA  0EE7               	movlw	low disparo_gravacao@velocidade
  4278  0029DC  6E10               	movwf	monta_sd@dado^0,c
  4279  0029DE  0E02               	movlw	high disparo_gravacao@velocidade
  4280  0029E0  6E11               	movwf	(monta_sd@dado+1)^0,c
  4281  0029E2  0E07               	movlw	7
  4282  0029E4  EC03  F00B         	call	_monta_sd
  4283                           
  4284                           ;main.c: 386: dados_vel[0] = 50;
  4285  0029E8  0E00               	movlw	0
  4286  0029EA  0101               	movlb	1	; () banked
  4287  0029EC  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4288  0029EE  0E32               	movlw	50
  4289  0029F0  6F27               	movwf	_dados_vel& (0+255),b
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;main.c: 387: dados_vel[1] = 50;
  4293  0029F2  0E00               	movlw	0
  4294  0029F4  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4295  0029F6  0E32               	movlw	50
  4296  0029F8  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 388: dados_vel[2] = 50;
  4300  0029FA  0E00               	movlw	0
  4301  0029FC  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4302  0029FE  0E32               	movlw	50
  4303  002A00  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4304                           
  4305                           ;main.c: 389: }
  4306  002A02  D011               	goto	l13782
  4307  002A04                     l13776:
  4308                           
  4309                           ; BSR set to: 2
  4310                           ;main.c: 390: else;main.c: 391: {;main.c: 392: dados_vel[0] = 50;
  4311  002A04  0E00               	movlw	0
  4312  002A06  0101               	movlb	1	; () banked
  4313  002A08  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4314  002A0A  0E32               	movlw	50
  4315  002A0C  6F27               	movwf	_dados_vel& (0+255),b
  4316                           
  4317                           ;main.c: 393: dados_vel[1] = 50;
  4318  002A0E  0E00               	movlw	0
  4319  002A10  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4320  002A12  0E32               	movlw	50
  4321  002A14  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4322                           
  4323                           ;main.c: 394: dados_vel[2] = 50;
  4324  002A16  0E00               	movlw	0
  4325  002A18  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4326  002A1A  0E32               	movlw	50
  4327  002A1C  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;main.c: 395: recebe_dado_gps();
  4331  002A1E  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  4332                           
  4333                           ;main.c: 396: dados_gps_to_sd();
  4334  002A22  ECFC  F026         	call	_dados_gps_to_sd	;wreg free
  4335  002A26                     l13782:
  4336                           
  4337                           ;main.c: 397: };main.c: 398: grava_sd();
  4338  002A26  ECA0  F02D         	call	_grava_sd	;wreg free
  4339  002A2A                     l13784:
  4340                           
  4341                           ;main.c: 399: };main.c: 402: time_sd = 28000;
  4342  002A2A  0E6D               	movlw	109
  4343  002A2C  0101               	movlb	1	; () banked
  4344  002A2E  6F6F               	movwf	(_time_sd+1)& (0+255),b
  4345  002A30  0E60               	movlw	96
  4346  002A32  6F6E               	movwf	_time_sd& (0+255),b
  4347                           
  4348                           ; BSR set to: 1
  4349  002A34  0012               	return		;funcret
  4350  002A36                     __end_of_disparo_gravacao:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _verifica_dados_operacionais *****************
  4354 ;; Defined at:
  4355 ;;		line 310 in file "main.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 3F/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4371 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4372 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4373 ;;Total ram usage:        6 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    9
  4376 ;; This function calls:
  4377 ;;		_Speed
  4378 ;;		___awtoft
  4379 ;;		___ftmul
  4380 ;;		___fttol
  4381 ;;		_atoi
  4382 ;;		_latitude
  4383 ;;		_longitude
  4384 ;;		_rawdata
  4385 ;;		_rawhora
  4386 ;;		_strcpy
  4387 ;;		_verifica_fence
  4388 ;; This function is called by:
  4389 ;;		_inicializa_tarefas
  4390 ;;		_escalonador
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text14
  4395  002F18                     __ptext14:
  4396                           	callstack 0
  4397  002F18                     _verifica_dados_operacionais:
  4398                           	callstack 20
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;main.c: 312: static unsigned char dado[6];;main.c: 313: static unsigned char contador_a
      +                          tual =0;;main.c: 314: static unsigned char contador_anterior =0;;main.c: 315: static uns
      +                          igned long int velocidade_media;;main.c: 316: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 317: static unsigned char *velocidade_atual;;main.c: 318: verifica_fenc
      +                          e();
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;incstack = 0
  4405  002F18  EC8D  F027         	call	_verifica_fence	;wreg free
  4406                           
  4407                           ;main.c: 320: if(contador_atual >=3)
  4408  002F1C  0E02               	movlw	2
  4409  002F1E  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  4410  002F20  D005               	goto	l13272
  4411                           
  4412                           ;main.c: 321: {;main.c: 322: contador_atual = 0;
  4413  002F22  0E00               	movlw	0
  4414  002F24  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  4415                           
  4416                           ;main.c: 323: contador_anterior = contador_atual;
  4417  002F26  0E00               	movlw	0
  4418  002F28  0100               	movlb	0	; () banked
  4419  002F2A  6FF0               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4420  002F2C                     l13272:
  4421                           
  4422                           ;main.c: 324: };main.c: 326: velocidade_atual = Speed();
  4423  002F2C  EC24  F02E         	call	_Speed	;wreg free
  4424  002F30  C00A  F166         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4425  002F34  C00B  F167         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4426                           
  4427                           ;main.c: 327: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  4428  002F38  0E0E               	movlw	14
  4429  002F3A  6E1F               	movwf	___ftmul@f2^0,c
  4430  002F3C  0EED               	movlw	237
  4431  002F3E  6E20               	movwf	(___ftmul@f2+1)^0,c
  4432  002F40  0E3F               	movlw	63
  4433  002F42  6E21               	movwf	(___ftmul@f2+2)^0,c
  4434  002F44  C166  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4435  002F48  C167  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4436  002F4C  5010               	movf	atoi@s^0,w,c
  4437  002F4E  1011               	iorwf	(atoi@s+1)^0,w,c
  4438  002F50  A4D8               	btfss	status,2,c
  4439  002F52  0E20               	movlw	32
  4440  002F54  6E12               	movwf	(atoi@s+2)^0,c
  4441  002F56  EC00  F019         	call	_atoi	;wreg free
  4442  002F5A  C010  F018         	movff	?_atoi,___awtoft@c
  4443  002F5E  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  4444  002F62  EC12  F02B         	call	___awtoft	;wreg free
  4445  002F66  C018  F01C         	movff	?___awtoft,___ftmul@f1
  4446  002F6A  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  4447  002F6E  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  4448  002F72  EC6C  F01E         	call	___ftmul	;wreg free
  4449  002F76  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4450  002F7A  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4451  002F7E  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4452  002F82  ECD2  F01F         	call	___fttol	;wreg free
  4453  002F86  C02B  F151         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4454  002F8A  C02C  F152         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4455  002F8E  C02D  F153         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4456  002F92  C02E  F154         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4457                           
  4458                           ;main.c: 328: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  4459  002F96  0101               	movlb	1	; () banked
  4460  002F98  512B               	movf	(_dados_vel+4)& (0+255),w,b
  4461  002F9A  6E44               	movwf	??_verifica_dados_operacionais^0,c
  4462  002F9C  512C               	movf	(_dados_vel+5)& (0+255),w,b
  4463  002F9E  6E45               	movwf	(??_verifica_dados_operacionais+1)^0,c
  4464  002FA0  6A46               	clrf	(??_verifica_dados_operacionais+2)^0,c
  4465  002FA2  6A47               	clrf	(??_verifica_dados_operacionais+3)^0,c
  4466  002FA4  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4467  002FA6  5C44               	subwf	??_verifica_dados_operacionais^0,w,c
  4468  002FA8  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4469  002FAA  5845               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  4470  002FAC  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4471  002FAE  5846               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  4472  002FB0  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4473  002FB2  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4474  002FB4  B0D8               	btfsc	status,0,c
  4475  002FB6  0012               	return	
  4476                           
  4477                           ; BSR set to: 1
  4478  002FB8  0E03               	movlw	3
  4479  002FBA  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  4480  002FBC  0012               	return	
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;main.c: 329: {;main.c: 330: if(velocidade_atual_int > dados_vel[contador_anterior])
  4484  002FBE  0100               	movlb	0	; () banked
  4485  002FC0  51F0               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4486  002FC2  0D02               	mullw	2
  4487  002FC4  0E27               	movlw	low _dados_vel
  4488  002FC6  24F3               	addwf	243,w,c
  4489  002FC8  6ED9               	movwf	fsr2l,c
  4490  002FCA  0E01               	movlw	high _dados_vel
  4491  002FCC  20F4               	addwfc	prodh,w,c
  4492  002FCE  6EDA               	movwf	fsr2h,c
  4493  002FD0  CFDE F044          	movff	postinc2,??_verifica_dados_operacionais
  4494  002FD4  CFDD F045          	movff	postdec2,??_verifica_dados_operacionais+1
  4495  002FD8  5044               	movf	??_verifica_dados_operacionais^0,w,c
  4496  002FDA  6E46               	movwf	(??_verifica_dados_operacionais+2)^0,c
  4497  002FDC  5045               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  4498  002FDE  6E47               	movwf	(??_verifica_dados_operacionais+3)^0,c
  4499  002FE0  6A48               	clrf	(??_verifica_dados_operacionais+4)^0,c
  4500  002FE2  6A49               	clrf	(??_verifica_dados_operacionais+5)^0,c
  4501  002FE4  0101               	movlb	1	; () banked
  4502  002FE6  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4503  002FE8  5C46               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  4504  002FEA  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4505  002FEC  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4506  002FEE  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4507  002FF0  5848               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  4508  002FF2  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4509  002FF4  5849               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  4510  002FF6  B0D8               	btfsc	status,0,c
  4511  002FF8  D04C               	goto	l13292
  4512                           
  4513                           ; BSR set to: 1
  4514                           ;main.c: 331: {;main.c: 332: dados_vel[contador_atual] = velocidade_atual_int;
  4515  002FFA  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4516  002FFC  0D02               	mullw	2
  4517  002FFE  0E27               	movlw	low _dados_vel
  4518  003000  24F3               	addwf	243,w,c
  4519  003002  6ED9               	movwf	fsr2l,c
  4520  003004  0E01               	movlw	high _dados_vel
  4521  003006  20F4               	addwfc	prodh,w,c
  4522  003008  6EDA               	movwf	fsr2h,c
  4523  00300A  C151  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  4524  00300E  C152  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;main.c: 333: strcpy(dados_lat[contador_atual], latitude());
  4528  003012  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4529  003014  0D0B               	mullw	11
  4530  003016  0EA2               	movlw	low _dados_lat
  4531  003018  24F3               	addwf	243,w,c
  4532  00301A  6E0C               	movwf	strcpy@to^0,c
  4533  00301C  0E02               	movlw	high _dados_lat
  4534  00301E  20F4               	addwfc	prodh,w,c
  4535  003020  6E0D               	movwf	(strcpy@to+1)^0,c
  4536  003022  EC1F  F02E         	call	_latitude	;wreg free
  4537  003026  C00A  F00E         	movff	?_latitude,strcpy@from
  4538  00302A  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  4539  00302E  ECDB  F02B         	call	_strcpy	;wreg free
  4540                           
  4541                           ;main.c: 334: strcpy(dados_long[contador_atual], longitude());
  4542  003032  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4543  003034  0D0C               	mullw	12
  4544  003036  0E7E               	movlw	low _dados_long
  4545  003038  24F3               	addwf	243,w,c
  4546  00303A  6E0C               	movwf	strcpy@to^0,c
  4547  00303C  0E02               	movlw	high _dados_long
  4548  00303E  20F4               	addwfc	prodh,w,c
  4549  003040  6E0D               	movwf	(strcpy@to+1)^0,c
  4550  003042  EC1A  F02E         	call	_longitude	;wreg free
  4551  003046  C00A  F00E         	movff	?_longitude,strcpy@from
  4552  00304A  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  4553  00304E  ECDB  F02B         	call	_strcpy	;wreg free
  4554                           
  4555                           ;main.c: 335: strcpy(dados_hora[contador_atual], rawhora());
  4556  003052  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4557  003054  0D06               	mullw	6
  4558  003056  0ED5               	movlw	low _dados_hora
  4559  003058  24F3               	addwf	243,w,c
  4560  00305A  6E0C               	movwf	strcpy@to^0,c
  4561  00305C  0E02               	movlw	high _dados_hora
  4562  00305E  20F4               	addwfc	prodh,w,c
  4563  003060  6E0D               	movwf	(strcpy@to+1)^0,c
  4564  003062  EC10  F02E         	call	_rawhora	;wreg free
  4565  003066  C00A  F00E         	movff	?_rawhora,strcpy@from
  4566  00306A  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  4567  00306E  ECDB  F02B         	call	_strcpy	;wreg free
  4568                           
  4569                           ;main.c: 336: strcpy(dados_data[contador_atual], rawdata());
  4570  003072  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4571  003074  0D06               	mullw	6
  4572  003076  0EC3               	movlw	low _dados_data
  4573  003078  24F3               	addwf	243,w,c
  4574  00307A  6E0C               	movwf	strcpy@to^0,c
  4575  00307C  0E02               	movlw	high _dados_data
  4576  00307E  20F4               	addwfc	prodh,w,c
  4577  003080  6E0D               	movwf	(strcpy@to+1)^0,c
  4578  003082  EC15  F02E         	call	_rawdata	;wreg free
  4579  003086  C00A  F00E         	movff	?_rawdata,strcpy@from
  4580  00308A  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  4581  00308E  ECDB  F02B         	call	_strcpy	;wreg free
  4582  003092                     l13292:
  4583                           
  4584                           ;main.c: 337: };main.c: 338: contador_anterior = contador_atual;
  4585  003092  C051  F0F0         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4586                           
  4587                           ;main.c: 339: contador_atual++;
  4588  003096  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  4589  003098  0012               	return		;funcret
  4590  00309A                     __end_of_verifica_dados_operacionais:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _strcpy *****************
  4594 ;; Defined at:
  4595 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  to              2   11[COMRAM] PTR unsigned char 
  4598 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4599 ;;  from            2   13[COMRAM] PTR const unsigned char 
  4600 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4603 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2   11[COMRAM] PTR unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/1
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         4       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    2
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_verifica_dados_operacionais
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text15
  4628  0057B6                     __ptext15:
  4629                           	callstack 0
  4630  0057B6                     _strcpy:
  4631                           	callstack 26
  4632                           
  4633                           ;incstack = 0
  4634  0057B6  C00C  F010         	movff	strcpy@to,strcpy@cp
  4635  0057BA  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  4636  0057BE  D004               	goto	l13248
  4637  0057C0                     l13246:
  4638  0057C0  4A10               	infsnz	strcpy@cp^0,f,c
  4639  0057C2  2A11               	incf	(strcpy@cp+1)^0,f,c
  4640  0057C4  4A0E               	infsnz	strcpy@from^0,f,c
  4641  0057C6  2A0F               	incf	(strcpy@from+1)^0,f,c
  4642  0057C8                     l13248:
  4643  0057C8  C00E  FFD9         	movff	strcpy@from,fsr2l
  4644  0057CC  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  4645  0057D0  C010  FFE1         	movff	strcpy@cp,fsr1l
  4646  0057D4  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  4647  0057D8  CFDF FFE7          	movff	indf2,indf1
  4648  0057DC  50E7               	movf	indf1,w,c
  4649  0057DE  B4D8               	btfsc	status,2,c
  4650  0057E0  0012               	return	
  4651  0057E2  D7EE               	goto	l13246
  4652  0057E4                     __end_of_strcpy:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _rawhora *****************
  4656 ;; Defined at:
  4657 ;;		line 668 in file "bibliotecas/GPS.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2    9[COMRAM] PTR unsigned char 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/1
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4674 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4675 ;;Total ram usage:        2 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    2
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_verifica_dados_operacionais
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text16
  4686  005C20                     __ptext16:
  4687                           	callstack 0
  4688  005C20                     _rawhora:
  4689                           	callstack 26
  4690                           
  4691                           ;GPS.c: 670: return rawTime;
  4692                           
  4693                           ;incstack = 0
  4694  005C20  0ED1               	movlw	low _rawTime
  4695  005C22  6E0A               	movwf	?_rawhora^0,c
  4696  005C24  0E01               	movlw	high _rawTime
  4697  005C26  6E0B               	movwf	(?_rawhora+1)^0,c
  4698  005C28  0012               	return		;funcret
  4699  005C2A                     __end_of_rawhora:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _rawdata *****************
  4703 ;; Defined at:
  4704 ;;		line 673 in file "bibliotecas/GPS.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2    9[COMRAM] PTR unsigned char 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/1
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         2       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4721 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        2 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    2
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_verifica_dados_operacionais
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text17
  4733  005C2A                     __ptext17:
  4734                           	callstack 0
  4735  005C2A                     _rawdata:
  4736                           	callstack 26
  4737                           
  4738                           ;GPS.c: 675: return rawDate;
  4739                           
  4740                           ;incstack = 0
  4741  005C2A  0EE4               	movlw	low _rawDate
  4742  005C2C  6E0A               	movwf	?_rawdata^0,c
  4743  005C2E  0E01               	movlw	high _rawDate
  4744  005C30  6E0B               	movwf	(?_rawdata+1)^0,c
  4745  005C32  0012               	return		;funcret
  4746  005C34                     __end_of_rawdata:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _longitude *****************
  4750 ;; Defined at:
  4751 ;;		line 663 in file "bibliotecas/GPS.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  2    9[COMRAM] PTR unsigned char 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/1
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         2       0       0       0       0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4768 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        2 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    2
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_verifica_dados_operacionais
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text18
  4780  005C34                     __ptext18:
  4781                           	callstack 0
  4782  005C34                     _longitude:
  4783                           	callstack 26
  4784                           
  4785                           ;GPS.c: 665: return rawLongitude;
  4786                           
  4787                           ;incstack = 0
  4788  005C34  0EA5               	movlw	low _rawLongitude
  4789  005C36  6E0A               	movwf	?_longitude^0,c
  4790  005C38  0E01               	movlw	high _rawLongitude
  4791  005C3A  6E0B               	movwf	(?_longitude+1)^0,c
  4792  005C3C  0012               	return		;funcret
  4793  005C3E                     __end_of_longitude:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _latitude *****************
  4797 ;; Defined at:
  4798 ;;		line 658 in file "bibliotecas/GPS.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    9[COMRAM] PTR unsigned char 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 3F/1
  4809 ;;		On exit  : 3F/1
  4810 ;;		Unchanged: 3F/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    2
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_verifica_dados_operacionais
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text19
  4827  005C3E                     __ptext19:
  4828                           	callstack 0
  4829  005C3E                     _latitude:
  4830                           	callstack 26
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;GPS.c: 660: return rawLatitude;
  4834                           
  4835                           ;incstack = 0
  4836  005C3E  0EBE               	movlw	low _rawLatitude
  4837  005C40  6E0A               	movwf	?_latitude^0,c
  4838  005C42  0E01               	movlw	high _rawLatitude
  4839  005C44  6E0B               	movwf	(?_latitude+1)^0,c
  4840                           
  4841                           ; BSR set to: 1
  4842  005C46  0012               	return		;funcret
  4843  005C48                     __end_of_latitude:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function ___fttol *****************
  4847 ;; Defined at:
  4848 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  f1              3   42[COMRAM] float 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  lval            4   52[COMRAM] unsigned long 
  4853 ;;  exp1            1   56[COMRAM] unsigned char 
  4854 ;;  sign1           1   51[COMRAM] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  4   42[COMRAM] long 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4864 ;;      Params:         4       0       0       0       0       0       0       0       0
  4865 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4866 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4867 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4868 ;;Total ram usage:       15 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    2
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_verifica_dados_operacionais
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text20
  4879  003FA4                     __ptext20:
  4880                           	callstack 0
  4881  003FA4                     ___fttol:
  4882                           	callstack 26
  4883                           
  4884                           ; BSR set to: 1
  4885                           ;incstack = 0
  4886  003FA4  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4887  003FA8  6A30               	clrf	(??___fttol+1)^0,c
  4888  003FAA  6A31               	clrf	(??___fttol+2)^0,c
  4889  003FAC  342C               	rlcf	(___fttol@f1+1)^0,w,c
  4890  003FAE  362F               	rlcf	??___fttol^0,f,c
  4891  003FB0  E301               	bnc	u10461
  4892  003FB2  8030               	bsf	(??___fttol+1)^0,0,c
  4893  003FB4                     u10461:
  4894  003FB4  502F               	movf	??___fttol^0,w,c
  4895  003FB6  6E39               	movwf	___fttol@exp1^0,c
  4896  003FB8  5039               	movf	___fttol@exp1^0,w,c
  4897  003FBA  A4D8               	btfss	status,2,c
  4898  003FBC  D009               	goto	l9564
  4899  003FBE                     u10470:
  4900  003FBE  0E00               	movlw	0
  4901  003FC0  6E2B               	movwf	?___fttol^0,c
  4902  003FC2  0E00               	movlw	0
  4903  003FC4  6E2C               	movwf	(?___fttol+1)^0,c
  4904  003FC6  0E00               	movlw	0
  4905  003FC8  6E2D               	movwf	(?___fttol+2)^0,c
  4906  003FCA  0E00               	movlw	0
  4907  003FCC  6E2E               	movwf	(?___fttol+3)^0,c
  4908  003FCE  0012               	return	
  4909  003FD0                     l9564:
  4910  003FD0  0E17               	movlw	23
  4911  003FD2  6E2F               	movwf	??___fttol^0,c
  4912  003FD4  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4913  003FD8  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4914  003FDC  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4915  003FE0  282F               	incf	??___fttol^0,w,c
  4916  003FE2  6E33               	movwf	(??___fttol+4)^0,c
  4917  003FE4  D004               	goto	u10480
  4918  003FE6                     u10485:
  4919  003FE6  90D8               	bcf	status,0,c
  4920  003FE8  3232               	rrcf	(??___fttol+3)^0,f,c
  4921  003FEA  3231               	rrcf	(??___fttol+2)^0,f,c
  4922  003FEC  3230               	rrcf	(??___fttol+1)^0,f,c
  4923  003FEE                     u10480:
  4924  003FEE  2E33               	decfsz	(??___fttol+4)^0,f,c
  4925  003FF0  D7FA               	goto	u10485
  4926  003FF2  5030               	movf	(??___fttol+1)^0,w,c
  4927  003FF4  6E34               	movwf	___fttol@sign1^0,c
  4928  003FF6  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  4929  003FF8  0EFF               	movlw	255
  4930  003FFA  162B               	andwf	___fttol@f1^0,f,c
  4931  003FFC  0EFF               	movlw	255
  4932  003FFE  162C               	andwf	(___fttol@f1+1)^0,f,c
  4933  004000  0E00               	movlw	0
  4934  004002  162D               	andwf	(___fttol@f1+2)^0,f,c
  4935  004004  502B               	movf	___fttol@f1^0,w,c
  4936  004006  6E35               	movwf	___fttol@lval^0,c
  4937  004008  502C               	movf	(___fttol@f1+1)^0,w,c
  4938  00400A  6E36               	movwf	(___fttol@lval+1)^0,c
  4939  00400C  502D               	movf	(___fttol@f1+2)^0,w,c
  4940  00400E  6E37               	movwf	(___fttol@lval+2)^0,c
  4941  004010  6A38               	clrf	(___fttol@lval+3)^0,c
  4942  004012  0E8E               	movlw	142
  4943  004014  5E39               	subwf	___fttol@exp1^0,f,c
  4944  004016  AE39               	btfss	___fttol@exp1^0,7,c
  4945  004018  D00D               	goto	l9586
  4946  00401A  5039               	movf	___fttol@exp1^0,w,c
  4947  00401C  0A80               	xorlw	128
  4948  00401E  0F8F               	addlw	143
  4949  004020  A0D8               	btfss	status,0,c
  4950  004022  D7CD               	goto	u10470
  4951  004024                     l9582:
  4952  004024  90D8               	bcf	status,0,c
  4953  004026  3238               	rrcf	(___fttol@lval+3)^0,f,c
  4954  004028  3237               	rrcf	(___fttol@lval+2)^0,f,c
  4955  00402A  3236               	rrcf	(___fttol@lval+1)^0,f,c
  4956  00402C  3235               	rrcf	___fttol@lval^0,f,c
  4957  00402E  3E39               	incfsz	___fttol@exp1^0,f,c
  4958  004030  D7F9               	goto	l9582
  4959  004032  D00D               	goto	u10520
  4960  004034                     l9586:
  4961  004034  0E17               	movlw	23
  4962  004036  6439               	cpfsgt	___fttol@exp1^0,c
  4963  004038  D007               	goto	l9594
  4964  00403A  D7C1               	goto	u10470
  4965  00403C                     l9592:
  4966  00403C  90D8               	bcf	status,0,c
  4967  00403E  3635               	rlcf	___fttol@lval^0,f,c
  4968  004040  3636               	rlcf	(___fttol@lval+1)^0,f,c
  4969  004042  3637               	rlcf	(___fttol@lval+2)^0,f,c
  4970  004044  3638               	rlcf	(___fttol@lval+3)^0,f,c
  4971  004046  0639               	decf	___fttol@exp1^0,f,c
  4972  004048                     l9594:
  4973  004048  5039               	movf	___fttol@exp1^0,w,c
  4974  00404A  A4D8               	btfss	status,2,c
  4975  00404C  D7F7               	goto	l9592
  4976  00404E                     u10520:
  4977  00404E  5034               	movf	___fttol@sign1^0,w,c
  4978  004050  B4D8               	btfsc	status,2,c
  4979  004052  D008               	goto	l9600
  4980  004054  1E38               	comf	(___fttol@lval+3)^0,f,c
  4981  004056  1E37               	comf	(___fttol@lval+2)^0,f,c
  4982  004058  1E36               	comf	(___fttol@lval+1)^0,f,c
  4983  00405A  6C35               	negf	___fttol@lval^0,c
  4984  00405C  0E00               	movlw	0
  4985  00405E  2236               	addwfc	(___fttol@lval+1)^0,f,c
  4986  004060  2237               	addwfc	(___fttol@lval+2)^0,f,c
  4987  004062  2238               	addwfc	(___fttol@lval+3)^0,f,c
  4988  004064                     l9600:
  4989  004064  C035  F02B         	movff	___fttol@lval,?___fttol
  4990  004068  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4991  00406C  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4992  004070  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4993  004074  0012               	return		;funcret
  4994  004076                     __end_of___fttol:
  4995                           	callstack 0
  4996                           
  4997 ;; *************** function ___ftmul *****************
  4998 ;; Defined at:
  4999 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  f1              3   27[COMRAM] float 
  5002 ;;  f2              3   30[COMRAM] float 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  5005 ;;  sign            1   41[COMRAM] unsigned char 
  5006 ;;  cntr            1   40[COMRAM] unsigned char 
  5007 ;;  exp             1   36[COMRAM] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  3   27[COMRAM] float 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         6       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5020 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:       15 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    3
  5024 ;; This function calls:
  5025 ;;		___ftpack
  5026 ;; This function is called by:
  5027 ;;		_verifica_dados_operacionais
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text21
  5032  003CD8                     __ptext21:
  5033                           	callstack 0
  5034  003CD8                     ___ftmul:
  5035                           	callstack 25
  5036                           
  5037                           ;incstack = 0
  5038  003CD8  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5039  003CDC  6A23               	clrf	(??___ftmul+1)^0,c
  5040  003CDE  6A24               	clrf	(??___ftmul+2)^0,c
  5041  003CE0  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5042  003CE2  3622               	rlcf	??___ftmul^0,f,c
  5043  003CE4  E301               	bnc	u10391
  5044  003CE6  8023               	bsf	(??___ftmul+1)^0,0,c
  5045  003CE8                     u10391:
  5046  003CE8  5022               	movf	??___ftmul^0,w,c
  5047  003CEA  6E25               	movwf	___ftmul@exp^0,c
  5048  003CEC  5025               	movf	___ftmul@exp^0,w,c
  5049  003CEE  A4D8               	btfss	status,2,c
  5050  003CF0  D007               	goto	l9504
  5051  003CF2  0E00               	movlw	0
  5052  003CF4  6E1C               	movwf	?___ftmul^0,c
  5053  003CF6  0E00               	movlw	0
  5054  003CF8  6E1D               	movwf	(?___ftmul+1)^0,c
  5055  003CFA  0E00               	movlw	0
  5056  003CFC  6E1E               	movwf	(?___ftmul+2)^0,c
  5057  003CFE  0012               	return	
  5058  003D00                     l9504:
  5059  003D00  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5060  003D04  6A23               	clrf	(??___ftmul+1)^0,c
  5061  003D06  6A24               	clrf	(??___ftmul+2)^0,c
  5062  003D08  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5063  003D0A  3622               	rlcf	??___ftmul^0,f,c
  5064  003D0C  E301               	bnc	u10411
  5065  003D0E  8023               	bsf	(??___ftmul+1)^0,0,c
  5066  003D10                     u10411:
  5067  003D10  5022               	movf	??___ftmul^0,w,c
  5068  003D12  6E2A               	movwf	___ftmul@sign^0,c
  5069  003D14  502A               	movf	___ftmul@sign^0,w,c
  5070  003D16  A4D8               	btfss	status,2,c
  5071  003D18  D007               	goto	l9510
  5072  003D1A  0E00               	movlw	0
  5073  003D1C  6E1C               	movwf	?___ftmul^0,c
  5074  003D1E  0E00               	movlw	0
  5075  003D20  6E1D               	movwf	(?___ftmul+1)^0,c
  5076  003D22  0E00               	movlw	0
  5077  003D24  6E1E               	movwf	(?___ftmul+2)^0,c
  5078  003D26  0012               	return	
  5079  003D28                     l9510:
  5080  003D28  502A               	movf	___ftmul@sign^0,w,c
  5081  003D2A  0F7B               	addlw	123
  5082  003D2C  2625               	addwf	___ftmul@exp^0,f,c
  5083  003D2E  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5084  003D32  5021               	movf	(___ftmul@f2+2)^0,w,c
  5085  003D34  1A2A               	xorwf	___ftmul@sign^0,f,c
  5086  003D36  0E80               	movlw	128
  5087  003D38  162A               	andwf	___ftmul@sign^0,f,c
  5088  003D3A  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5089  003D3C  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5090  003D3E  0EFF               	movlw	255
  5091  003D40  161F               	andwf	___ftmul@f2^0,f,c
  5092  003D42  0EFF               	movlw	255
  5093  003D44  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5094  003D46  0E00               	movlw	0
  5095  003D48  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5096  003D4A  0E00               	movlw	0
  5097  003D4C  6E26               	movwf	___ftmul@f3_as_product^0,c
  5098  003D4E  0E00               	movlw	0
  5099  003D50  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5100  003D52  0E00               	movlw	0
  5101  003D54  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5102  003D56  0E07               	movlw	7
  5103  003D58  6E29               	movwf	___ftmul@cntr^0,c
  5104  003D5A                     l9524:
  5105  003D5A  A01C               	btfss	___ftmul@f1^0,0,c
  5106  003D5C  D006               	goto	l9528
  5107  003D5E  501F               	movf	___ftmul@f2^0,w,c
  5108  003D60  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5109  003D62  5020               	movf	(___ftmul@f2+1)^0,w,c
  5110  003D64  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5111  003D66  5021               	movf	(___ftmul@f2+2)^0,w,c
  5112  003D68  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5113  003D6A                     l9528:
  5114  003D6A  90D8               	bcf	status,0,c
  5115  003D6C  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5116  003D6E  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5117  003D70  321C               	rrcf	___ftmul@f1^0,f,c
  5118  003D72  90D8               	bcf	status,0,c
  5119  003D74  361F               	rlcf	___ftmul@f2^0,f,c
  5120  003D76  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5121  003D78  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5122  003D7A  2E29               	decfsz	___ftmul@cntr^0,f,c
  5123  003D7C  D7EE               	goto	l9524
  5124  003D7E  0E09               	movlw	9
  5125  003D80  6E29               	movwf	___ftmul@cntr^0,c
  5126  003D82                     l9534:
  5127  003D82  A01C               	btfss	___ftmul@f1^0,0,c
  5128  003D84  D006               	goto	l9538
  5129  003D86  501F               	movf	___ftmul@f2^0,w,c
  5130  003D88  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5131  003D8A  5020               	movf	(___ftmul@f2+1)^0,w,c
  5132  003D8C  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5133  003D8E  5021               	movf	(___ftmul@f2+2)^0,w,c
  5134  003D90  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5135  003D92                     l9538:
  5136  003D92  90D8               	bcf	status,0,c
  5137  003D94  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5138  003D96  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5139  003D98  321C               	rrcf	___ftmul@f1^0,f,c
  5140  003D9A  90D8               	bcf	status,0,c
  5141  003D9C  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5142  003D9E  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5143  003DA0  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5144  003DA2  2E29               	decfsz	___ftmul@cntr^0,f,c
  5145  003DA4  D7EE               	goto	l9534
  5146  003DA6  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5147  003DAA  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5148  003DAE  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5149  003DB2  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5150  003DB6  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5151  003DBA  EC63  F021         	call	___ftpack	;wreg free
  5152  003DBE  C00A  F01C         	movff	?___ftpack,?___ftmul
  5153  003DC2  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5154  003DC6  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5155  003DCA  0012               	return		;funcret
  5156  003DCC                     __end_of___ftmul:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function ___awtoft *****************
  5160 ;; Defined at:
  5161 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  c               2   23[COMRAM] int 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  sign            1   26[COMRAM] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  3   23[COMRAM] float 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5175 ;;      Params:         3       0       0       0       0       0       0       0       0
  5176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5178 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5179 ;;Total ram usage:        4 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    3
  5182 ;; This function calls:
  5183 ;;		___ftpack
  5184 ;; This function is called by:
  5185 ;;		_verifica_dados_operacionais
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text22
  5190  005624                     __ptext22:
  5191                           	callstack 0
  5192  005624                     ___awtoft:
  5193                           	callstack 25
  5194                           
  5195                           ;incstack = 0
  5196  005624  0E00               	movlw	0
  5197  005626  6E1B               	movwf	___awtoft@sign^0,c
  5198  005628  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5199  00562A  D006               	goto	l9554
  5200  00562C  6C18               	negf	___awtoft@c^0,c
  5201  00562E  1E19               	comf	(___awtoft@c+1)^0,f,c
  5202  005630  B0D8               	btfsc	status,0,c
  5203  005632  2A19               	incf	(___awtoft@c+1)^0,f,c
  5204  005634  0E01               	movlw	1
  5205  005636  6E1B               	movwf	___awtoft@sign^0,c
  5206  005638                     l9554:
  5207  005638  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5208  00563C  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5209  005640  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5210  005642  0E8E               	movlw	142
  5211  005644  6E0D               	movwf	___ftpack@exp^0,c
  5212  005646  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5213  00564A  EC63  F021         	call	___ftpack	;wreg free
  5214  00564E  C00A  F018         	movff	?___ftpack,?___awtoft
  5215  005652  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5216  005656  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5217  00565A  0012               	return		;funcret
  5218  00565C                     __end_of___awtoft:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function ___ftpack *****************
  5222 ;; Defined at:
  5223 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  arg             3    9[COMRAM] unsigned um
  5226 ;;  exp             1   12[COMRAM] unsigned char 
  5227 ;;  sign            1   13[COMRAM] unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  3    9[COMRAM] float 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5239 ;;      Params:         5       0       0       0       0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5241 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5242 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5243 ;;Total ram usage:        8 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    2
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		___awtoft
  5250 ;;		___ftmul
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text23
  5255  0042C6                     __ptext23:
  5256                           	callstack 0
  5257  0042C6                     ___ftpack:
  5258                           	callstack 25
  5259                           
  5260                           ;incstack = 0
  5261  0042C6  500D               	movf	___ftpack@exp^0,w,c
  5262  0042C8  B4D8               	btfsc	status,2,c
  5263  0042CA  D005               	goto	u10010
  5264  0042CC  500A               	movf	___ftpack@arg^0,w,c
  5265  0042CE  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5266  0042D0  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5267  0042D2  A4D8               	btfss	status,2,c
  5268  0042D4  D00C               	goto	l9284
  5269  0042D6                     u10010:
  5270  0042D6  0E00               	movlw	0
  5271  0042D8  6E0A               	movwf	?___ftpack^0,c
  5272  0042DA  0E00               	movlw	0
  5273  0042DC  6E0B               	movwf	(?___ftpack+1)^0,c
  5274  0042DE  0E00               	movlw	0
  5275  0042E0  6E0C               	movwf	(?___ftpack+2)^0,c
  5276  0042E2  0012               	return	
  5277  0042E4                     l9282:
  5278  0042E4  2A0D               	incf	___ftpack@exp^0,f,c
  5279  0042E6  90D8               	bcf	status,0,c
  5280  0042E8  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5281  0042EA  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5282  0042EC  320A               	rrcf	___ftpack@arg^0,f,c
  5283  0042EE                     l9284:
  5284  0042EE  0E00               	movlw	0
  5285  0042F0  140A               	andwf	___ftpack@arg^0,w,c
  5286  0042F2  6E0F               	movwf	??___ftpack^0,c
  5287  0042F4  0E00               	movlw	0
  5288  0042F6  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5289  0042F8  6E10               	movwf	(??___ftpack+1)^0,c
  5290  0042FA  0EFE               	movlw	254
  5291  0042FC  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5292  0042FE  6E11               	movwf	(??___ftpack+2)^0,c
  5293  004300  500F               	movf	??___ftpack^0,w,c
  5294  004302  1010               	iorwf	(??___ftpack+1)^0,w,c
  5295  004304  1011               	iorwf	(??___ftpack+2)^0,w,c
  5296  004306  B4D8               	btfsc	status,2,c
  5297  004308  D00C               	goto	l9290
  5298  00430A  D7EC               	goto	l9282
  5299  00430C                     l9286:
  5300  00430C  2A0D               	incf	___ftpack@exp^0,f,c
  5301  00430E  0E01               	movlw	1
  5302  004310  260A               	addwf	___ftpack@arg^0,f,c
  5303  004312  0E00               	movlw	0
  5304  004314  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5305  004316  0E00               	movlw	0
  5306  004318  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5307  00431A  90D8               	bcf	status,0,c
  5308  00431C  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5309  00431E  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5310  004320  320A               	rrcf	___ftpack@arg^0,f,c
  5311  004322                     l9290:
  5312  004322  0E00               	movlw	0
  5313  004324  140A               	andwf	___ftpack@arg^0,w,c
  5314  004326  6E0F               	movwf	??___ftpack^0,c
  5315  004328  0E00               	movlw	0
  5316  00432A  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5317  00432C  6E10               	movwf	(??___ftpack+1)^0,c
  5318  00432E  0EFF               	movlw	255
  5319  004330  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5320  004332  6E11               	movwf	(??___ftpack+2)^0,c
  5321  004334  500F               	movf	??___ftpack^0,w,c
  5322  004336  1010               	iorwf	(??___ftpack+1)^0,w,c
  5323  004338  1011               	iorwf	(??___ftpack+2)^0,w,c
  5324  00433A  B4D8               	btfsc	status,2,c
  5325  00433C  D006               	goto	l9294
  5326  00433E  D7E6               	goto	l9286
  5327  004340                     l9292:
  5328  004340  060D               	decf	___ftpack@exp^0,f,c
  5329  004342  90D8               	bcf	status,0,c
  5330  004344  360A               	rlcf	___ftpack@arg^0,f,c
  5331  004346  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5332  004348  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  5333  00434A                     l9294:
  5334  00434A  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  5335  00434C  D003               	goto	u10050
  5336  00434E  0E02               	movlw	2
  5337  004350  600D               	cpfslt	___ftpack@exp^0,c
  5338  004352  D7F6               	goto	l9292
  5339  004354                     u10050:
  5340  004354  A00D               	btfss	___ftpack@exp^0,0,c
  5341  004356  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  5342  004358  90D8               	bcf	status,0,c
  5343  00435A  320D               	rrcf	___ftpack@exp^0,f,c
  5344  00435C  500D               	movf	___ftpack@exp^0,w,c
  5345  00435E  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  5346  004360  500E               	movf	___ftpack@sign^0,w,c
  5347  004362  A4D8               	btfss	status,2,c
  5348  004364  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  5349  004366  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  5350  00436A  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  5351  00436E  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  5352  004372  0012               	return		;funcret
  5353  004374                     __end_of___ftpack:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function _Speed *****************
  5357 ;; Defined at:
  5358 ;;		line 685 in file "bibliotecas/GPS.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2    9[COMRAM] PTR unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5372 ;;      Params:         2       0       0       0       0       0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5375 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5376 ;;Total ram usage:        2 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    2
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_verifica_dados_operacionais
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text24
  5387  005C48                     __ptext24:
  5388                           	callstack 0
  5389  005C48                     _Speed:
  5390                           	callstack 26
  5391                           
  5392                           ;GPS.c: 687: return rawSpeed;
  5393                           
  5394                           ;incstack = 0
  5395  005C48  0E6A               	movlw	low _rawSpeed
  5396  005C4A  6E0A               	movwf	?_Speed^0,c
  5397  005C4C  0E02               	movlw	high _rawSpeed
  5398  005C4E  6E0B               	movwf	(?_Speed+1)^0,c
  5399  005C50  0012               	return		;funcret
  5400  005C52                     __end_of_Speed:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _mostra_dados_display *****************
  5404 ;; Defined at:
  5405 ;;		line 691 in file "bibliotecas/GPS.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5422 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5423 ;;Total ram usage:        0 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    5
  5426 ;; This function calls:
  5427 ;;		_escreve_frase_ram_lcd
  5428 ;;		_posicao_cursor_lcd
  5429 ;; This function is called by:
  5430 ;;		_troca_de_tela
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text25
  5435  0057E4                     __ptext25:
  5436                           	callstack 0
  5437  0057E4                     _mostra_dados_display:
  5438                           	callstack 23
  5439                           
  5440                           ;GPS.c: 693: posicao_cursor_lcd(1,4);
  5441                           
  5442                           ;incstack = 0
  5443  0057E4  0E04               	movlw	4
  5444  0057E6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5445  0057E8  0E01               	movlw	1
  5446  0057EA  EC5E  F027         	call	_posicao_cursor_lcd
  5447                           
  5448                           ;GPS.c: 694: escreve_frase_ram_lcd(rawLatitude);
  5449  0057EE  0EBE               	movlw	low _rawLatitude
  5450  0057F0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5451  0057F2  0E01               	movlw	high _rawLatitude
  5452  0057F4  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5453  0057F6  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5454                           
  5455                           ;GPS.c: 695: posicao_cursor_lcd(2,4);
  5456  0057FA  0E04               	movlw	4
  5457  0057FC  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5458  0057FE  0E02               	movlw	2
  5459  005800  EC5E  F027         	call	_posicao_cursor_lcd
  5460                           
  5461                           ;GPS.c: 696: escreve_frase_ram_lcd(rawLongitude);
  5462  005804  0EA5               	movlw	low _rawLongitude
  5463  005806  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5464  005808  0E01               	movlw	high _rawLongitude
  5465  00580A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5466  00580C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5467  005810  0012               	return		;funcret
  5468  005812                     __end_of_mostra_dados_display:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _escreve_inteiro_lcd *****************
  5472 ;; Defined at:
  5473 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  valor           4   42[COMRAM] long 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  texto           7   46[COMRAM] unsigned char [7]
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         4       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:       11 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    5
  5494 ;; This function calls:
  5495 ;;		_escreve_frase_ram_lcd
  5496 ;;		_ltoa
  5497 ;; This function is called by:
  5498 ;;		_troca_de_tela
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text26
  5503  005570                     __ptext26:
  5504                           	callstack 0
  5505  005570                     _escreve_inteiro_lcd:
  5506                           	callstack 23
  5507                           
  5508                           ;display_lcd.c: 378: char texto[7] = "000000";
  5509                           
  5510                           ;incstack = 0
  5511  005570  EE21  F0F3         	lfsr	2,escreve_inteiro_lcd@F3223
  5512  005574  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
  5513  005578  0E06               	movlw	6
  5514  00557A                     u15871:
  5515  00557A  CFDB FFE3          	movff	plusw2,plusw1
  5516  00557E  06E8               	decf	wreg,f,c
  5517  005580  E2FC               	bc	u15871
  5518                           
  5519                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  5520  005582  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5521  005584  6E23               	movwf	ltoa@buf^0,c
  5522  005586  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
  5523  00558A  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  5524  00558E  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  5525  005592  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  5526  005596  0E00               	movlw	0
  5527  005598  6E29               	movwf	(ltoa@base+1)^0,c
  5528  00559A  0E0A               	movlw	10
  5529  00559C  6E28               	movwf	ltoa@base^0,c
  5530  00559E  EC35  F02A         	call	_ltoa	;wreg free
  5531                           
  5532                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5533  0055A2  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5534  0055A4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5535  0055A6  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5536  0055A8  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5537  0055AC  0012               	return		;funcret
  5538  0055AE                     __end_of_escreve_inteiro_lcd:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _ltoa *****************
  5542 ;; Defined at:
  5543 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  buf             1   34[COMRAM] PTR unsigned char 
  5546 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5547 ;;  val             4   35[COMRAM] long 
  5548 ;;  base            2   39[COMRAM] int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  cp              1    0        PTR unsigned char 
  5551 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      PTR unsigned char 
  5554 ;; Registers used:
  5555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         7       0       0       0       0       0       0       0       0
  5562 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5564 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5565 ;;Total ram usage:        8 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    4
  5568 ;; This function calls:
  5569 ;;		_ultoa
  5570 ;; This function is called by:
  5571 ;;		_escreve_inteiro_lcd
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text27
  5576  00546A                     __ptext27:
  5577                           	callstack 0
  5578  00546A                     _ltoa:
  5579                           	callstack 23
  5580                           
  5581                           ;incstack = 0
  5582  00546A  AE27               	btfss	(ltoa@val+3)^0,7,c
  5583  00546C  D00E               	goto	l12732
  5584  00546E  5023               	movf	ltoa@buf^0,w,c
  5585  005470  6ED9               	movwf	fsr2l,c
  5586  005472  6ADA               	clrf	fsr2h,c
  5587  005474  0E2D               	movlw	45
  5588  005476  6EDF               	movwf	indf2,c
  5589  005478  2A23               	incf	ltoa@buf^0,f,c
  5590  00547A  1E27               	comf	(ltoa@val+3)^0,f,c
  5591  00547C  1E26               	comf	(ltoa@val+2)^0,f,c
  5592  00547E  1E25               	comf	(ltoa@val+1)^0,f,c
  5593  005480  6C24               	negf	ltoa@val^0,c
  5594  005482  0E00               	movlw	0
  5595  005484  2225               	addwfc	(ltoa@val+1)^0,f,c
  5596  005486  2226               	addwfc	(ltoa@val+2)^0,f,c
  5597  005488  2227               	addwfc	(ltoa@val+3)^0,f,c
  5598  00548A                     l12732:
  5599  00548A  C023  F017         	movff	ltoa@buf,ultoa@buf
  5600  00548E  C024  F018         	movff	ltoa@val,ultoa@val
  5601  005492  C025  F019         	movff	ltoa@val+1,ultoa@val+1
  5602  005496  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
  5603  00549A  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
  5604  00549E  C028  F01C         	movff	ltoa@base,ultoa@base
  5605  0054A2  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
  5606  0054A6  EC5E  F01F         	call	_ultoa	;wreg free
  5607  0054AA  0012               	return		;funcret
  5608  0054AC                     __end_of_ltoa:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _ultoa *****************
  5612 ;; Defined at:
  5613 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  buf             1   22[COMRAM] PTR unsigned char 
  5616 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5617 ;;  val             4   23[COMRAM] unsigned long 
  5618 ;;  base            2   27[COMRAM] int 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  v               4   29[COMRAM] unsigned long 
  5621 ;;  c               1   33[COMRAM] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      PTR unsigned char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5631 ;;      Params:         7       0       0       0       0       0       0       0       0
  5632 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5634 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5635 ;;Total ram usage:       12 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    3
  5638 ;; This function calls:
  5639 ;;		___lldiv
  5640 ;;		___llmod
  5641 ;; This function is called by:
  5642 ;;		_ltoa
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text28
  5647  003EBC                     __ptext28:
  5648                           	callstack 0
  5649  003EBC                     _ultoa:
  5650                           	callstack 23
  5651                           
  5652                           ;incstack = 0
  5653  003EBC  C018  F01E         	movff	ultoa@val,ultoa@v
  5654  003EC0  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
  5655  003EC4  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
  5656  003EC8  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
  5657  003ECC                     l12700:
  5658  003ECC  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
  5659  003ED0  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
  5660  003ED4  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
  5661  003ED8  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
  5662  003EDC  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5663  003EE0  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5664  003EE4  0E00               	movlw	0
  5665  003EE6  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5666  003EE8  0EFF               	movlw	-1
  5667  003EEA  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5668  003EEC  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5669  003EEE  ECFA  F024         	call	___lldiv	;wreg free
  5670  003EF2  C00A  F01E         	movff	?___lldiv,ultoa@v
  5671  003EF6  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
  5672  003EFA  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
  5673  003EFE  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
  5674  003F02  2A17               	incf	ultoa@buf^0,f,c
  5675  003F04  501E               	movf	ultoa@v^0,w,c
  5676  003F06  101F               	iorwf	(ultoa@v+1)^0,w,c
  5677  003F08  1020               	iorwf	(ultoa@v+2)^0,w,c
  5678  003F0A  1021               	iorwf	(ultoa@v+3)^0,w,c
  5679  003F0C  A4D8               	btfss	status,2,c
  5680  003F0E  D7DE               	goto	l12700
  5681  003F10  5017               	movf	ultoa@buf^0,w,c
  5682  003F12  6ED9               	movwf	fsr2l,c
  5683  003F14  6ADA               	clrf	fsr2h,c
  5684  003F16  0E00               	movlw	0
  5685  003F18  6EDF               	movwf	indf2,c
  5686  003F1A  0617               	decf	ultoa@buf^0,f,c
  5687  003F1C                     l12710:
  5688  003F1C  C018  F00A         	movff	ultoa@val,___llmod@dividend
  5689  003F20  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
  5690  003F24  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
  5691  003F28  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
  5692  003F2C  C01C  F00E         	movff	ultoa@base,___llmod@divisor
  5693  003F30  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
  5694  003F34  0E00               	movlw	0
  5695  003F36  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
  5696  003F38  0EFF               	movlw	-1
  5697  003F3A  6E10               	movwf	(___llmod@divisor+2)^0,c
  5698  003F3C  6E11               	movwf	(___llmod@divisor+3)^0,c
  5699  003F3E  ECC9  F026         	call	___llmod	;wreg free
  5700  003F42  500A               	movf	?___llmod^0,w,c
  5701  003F44  6E22               	movwf	ultoa@c^0,c
  5702  003F46  C018  F00A         	movff	ultoa@val,___lldiv@dividend
  5703  003F4A  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
  5704  003F4E  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
  5705  003F52  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
  5706  003F56  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5707  003F5A  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5708  003F5E  0E00               	movlw	0
  5709  003F60  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5710  003F62  0EFF               	movlw	-1
  5711  003F64  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5712  003F66  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5713  003F68  ECFA  F024         	call	___lldiv	;wreg free
  5714  003F6C  C00A  F018         	movff	?___lldiv,ultoa@val
  5715  003F70  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
  5716  003F74  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
  5717  003F78  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
  5718  003F7C  0E09               	movlw	9
  5719  003F7E  6422               	cpfsgt	ultoa@c^0,c
  5720  003F80  D002               	goto	l2468
  5721  003F82  0E07               	movlw	7
  5722  003F84  2622               	addwf	ultoa@c^0,f,c
  5723  003F86                     l2468:
  5724  003F86  0E30               	movlw	48
  5725  003F88  2622               	addwf	ultoa@c^0,f,c
  5726  003F8A  5017               	movf	ultoa@buf^0,w,c
  5727  003F8C  6ED9               	movwf	fsr2l,c
  5728  003F8E  6ADA               	clrf	fsr2h,c
  5729  003F90  C022  FFDF         	movff	ultoa@c,indf2
  5730  003F94  0617               	decf	ultoa@buf^0,f,c
  5731  003F96  5018               	movf	ultoa@val^0,w,c
  5732  003F98  1019               	iorwf	(ultoa@val+1)^0,w,c
  5733  003F9A  101A               	iorwf	(ultoa@val+2)^0,w,c
  5734  003F9C  101B               	iorwf	(ultoa@val+3)^0,w,c
  5735  003F9E  B4D8               	btfsc	status,2,c
  5736  003FA0  0012               	return	
  5737  003FA2  D7BC               	goto	l12710
  5738  003FA4                     __end_of_ultoa:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _escreve_cmd_lcd *****************
  5742 ;; Defined at:
  5743 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  comando         1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  comando         1   11[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    3
  5764 ;; This function calls:
  5765 ;;		_delay
  5766 ;; This function is called by:
  5767 ;;		_init_lcd
  5768 ;;		_mensagem_inicial
  5769 ;;		_troca_de_tela
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text29
  5774  004862                     __ptext29:
  5775                           	callstack 0
  5776  004862                     _escreve_cmd_lcd:
  5777                           	callstack 26
  5778                           
  5779                           ;incstack = 0
  5780                           ;escreve_cmd_lcd@comando stored from wreg
  5781  004862  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  5782                           
  5783                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5784  004864  9483               	bcf	131,2,c	;volatile
  5785                           
  5786                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5787  004866  9283               	bcf	131,1,c	;volatile
  5788                           
  5789                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5790  004868  9083               	bcf	131,0,c	;volatile
  5791                           
  5792                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5793  00486A  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  5794  00486C  D002               	goto	l191
  5795  00486E  8883               	bsf	131,4,c	;volatile
  5796  004870  D001               	goto	l13134
  5797  004872                     l191:
  5798                           
  5799                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5800  004872  9883               	bcf	131,4,c	;volatile
  5801  004874                     l13134:
  5802                           
  5803                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5804  004874  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  5805  004876  D002               	goto	l193
  5806  004878  8A83               	bsf	131,5,c	;volatile
  5807  00487A  D001               	goto	l13138
  5808  00487C                     l193:
  5809                           
  5810                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5811  00487C  9A83               	bcf	131,5,c	;volatile
  5812  00487E                     l13138:
  5813                           
  5814                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5815  00487E  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  5816  004880  D002               	goto	l195
  5817  004882  8C83               	bsf	131,6,c	;volatile
  5818  004884  D001               	goto	l13142
  5819  004886                     l195:
  5820                           
  5821                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5822  004886  9C83               	bcf	131,6,c	;volatile
  5823  004888                     l13142:
  5824                           
  5825                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5826  004888  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  5827  00488A  D002               	goto	l197
  5828  00488C  8E83               	bsf	131,7,c	;volatile
  5829  00488E  D001               	goto	l198
  5830  004890                     l197:
  5831                           
  5832                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5833  004890  9E83               	bcf	131,7,c	;volatile
  5834  004892                     l198:
  5835                           
  5836                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5837  004892  8083               	bsf	131,0,c	;volatile
  5838                           
  5839                           ;display_lcd.c: 181: delay();
  5840  004894  EC67  F02D         	call	_delay	;wreg free
  5841                           
  5842                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5843  004898  9083               	bcf	131,0,c	;volatile
  5844                           
  5845                           ;display_lcd.c: 183: delay();
  5846  00489A  EC67  F02D         	call	_delay	;wreg free
  5847                           
  5848                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5849  00489E  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  5850  0048A0  D002               	goto	l199
  5851  0048A2  8883               	bsf	131,4,c	;volatile
  5852  0048A4  D001               	goto	l200
  5853  0048A6                     l199:
  5854                           
  5855                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5856  0048A6  9883               	bcf	131,4,c	;volatile
  5857  0048A8                     l200:
  5858                           
  5859                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5860  0048A8  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  5861  0048AA  D002               	goto	l201
  5862  0048AC  8A83               	bsf	131,5,c	;volatile
  5863  0048AE  D001               	goto	l202
  5864  0048B0                     l201:
  5865                           
  5866                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5867  0048B0  9A83               	bcf	131,5,c	;volatile
  5868  0048B2                     l202:
  5869                           
  5870                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5871  0048B2  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  5872  0048B4  D002               	goto	l203
  5873  0048B6  8C83               	bsf	131,6,c	;volatile
  5874  0048B8  D001               	goto	l204
  5875  0048BA                     l203:
  5876                           
  5877                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5878  0048BA  9C83               	bcf	131,6,c	;volatile
  5879  0048BC                     l204:
  5880                           
  5881                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5882  0048BC  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  5883  0048BE  D002               	goto	l205
  5884  0048C0  8E83               	bsf	131,7,c	;volatile
  5885  0048C2  D001               	goto	l206
  5886  0048C4                     l205:
  5887                           
  5888                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5889  0048C4  9E83               	bcf	131,7,c	;volatile
  5890  0048C6                     l206:
  5891                           
  5892                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5893  0048C6  8083               	bsf	131,0,c	;volatile
  5894                           
  5895                           ;display_lcd.c: 197: delay();
  5896  0048C8  EC67  F02D         	call	_delay	;wreg free
  5897                           
  5898                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5899  0048CC  9083               	bcf	131,0,c	;volatile
  5900                           
  5901                           ;display_lcd.c: 199: delay();
  5902  0048CE  EC67  F02D         	call	_delay	;wreg free
  5903                           
  5904                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5905  0048D2  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  5906  0048D4  B4D8               	btfsc	status,2,c
  5907  0048D6  D008               	goto	u15860
  5908  0048D8  0E02               	movlw	2
  5909  0048DA  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5910  0048DC  B4D8               	btfsc	status,2,c
  5911  0048DE  D004               	goto	u15860
  5912  0048E0  0E03               	movlw	3
  5913  0048E2  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5914  0048E4  A4D8               	btfss	status,2,c
  5915  0048E6  0012               	return	
  5916  0048E8                     u15860:
  5917                           
  5918                           ;display_lcd.c: 205: { delay(); }
  5919  0048E8  EC67  F02D         	call	_delay	;wreg free
  5920  0048EC  0012               	return		;funcret
  5921  0048EE                     __end_of_escreve_cmd_lcd:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function _verifica_fence *****************
  5925 ;; Defined at:
  5926 ;;		line 277 in file "main.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 3E/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5942 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5943 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5944 ;;Total ram usage:        1 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    8
  5947 ;; This function calls:
  5948 ;;		_latitude_to_convert
  5949 ;;		_longitude_to_convert
  5950 ;;		_monta_sd
  5951 ;;		_recebe_dado_gps
  5952 ;;		_verifica_plausibilidade_lat
  5953 ;;		_verifica_plausibilidade_long
  5954 ;; This function is called by:
  5955 ;;		_verifica_dados_operacionais
  5956 ;;		_disparo_gravacao
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text30
  5961  004F1A                     __ptext30:
  5962                           	callstack 0
  5963  004F1A                     _verifica_fence:
  5964                           	callstack 20
  5965                           
  5966                           ;main.c: 279: recebe_dado_gps();
  5967                           
  5968                           ;incstack = 0
  5969  004F1A  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  5970                           
  5971                           ;main.c: 280: longitude_to_convert();
  5972  004F1E  EC3B  F025         	call	_longitude_to_convert	;wreg free
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;main.c: 281: latitude_to_convert();
  5976  004F22  EC78  F025         	call	_latitude_to_convert	;wreg free
  5977                           
  5978                           ;main.c: 282: fence_flag[0].point = verifica_plausibilidade_long();
  5979  004F26  EC2E  F027         	call	_verifica_plausibilidade_long	;wreg free
  5980  004F2A  6E43               	movwf	??_verifica_fence^0,c
  5981  004F2C  0100               	movlb	0	; () banked
  5982  004F2E  51E7               	movf	_fence_flag& (0+255),w,b
  5983  004F30  1843               	xorwf	??_verifica_fence^0,w,c
  5984  004F32  0BFE               	andlw	-2
  5985  004F34  1843               	xorwf	??_verifica_fence^0,w,c
  5986  004F36  6FE7               	movwf	_fence_flag& (0+255),b
  5987                           
  5988                           ;main.c: 283: fence_flag[1].point = verifica_plausibilidade_lat();
  5989  004F38  ECB5  F025         	call	_verifica_plausibilidade_lat	;wreg free
  5990  004F3C  6E43               	movwf	??_verifica_fence^0,c
  5991  004F3E  0100               	movlb	0	; () banked
  5992  004F40  51E8               	movf	(_fence_flag+1)& (0+255),w,b
  5993  004F42  1843               	xorwf	??_verifica_fence^0,w,c
  5994  004F44  0BFE               	andlw	-2
  5995  004F46  1843               	xorwf	??_verifica_fence^0,w,c
  5996  004F48  6FE8               	movwf	(_fence_flag+1)& (0+255),b
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;main.c: 288: if(fence_flag[0].point || fence_flag[1].point)
  6000  004F4A  B1E7               	btfsc	_fence_flag& (0+255),0,b
  6001  004F4C  D002               	goto	u15900
  6002                           
  6003                           ; BSR set to: 0
  6004  004F4E  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  6005  004F50  D009               	goto	l1573
  6006  004F52                     u15900:
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;main.c: 289: {;main.c: 290: fence_flag[2].point = 1;
  6010  004F52  81E9               	bsf	(_fence_flag+2)& (0+255),0,b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;main.c: 291: monta_sd(4, "0");
  6014  004F54  0E7A               	movlw	low STR_20
  6015  004F56  6E10               	movwf	monta_sd@dado^0,c
  6016  004F58  0E62               	movlw	high STR_20
  6017  004F5A  6E11               	movwf	(monta_sd@dado+1)^0,c
  6018  004F5C  0E04               	movlw	4
  6019  004F5E  EC03  F00B         	call	_monta_sd
  6020                           
  6021                           ;main.c: 292: }
  6022  004F62  0012               	return	
  6023  004F64                     l1573:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;main.c: 293: else;main.c: 294: {;main.c: 295: fence_flag[2].point = 0;
  6027  004F64  91E9               	bcf	(_fence_flag+2)& (0+255),0,b
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;main.c: 296: monta_sd(4, "1");
  6031  004F66  0E2C               	movlw	low (STR_3+8)
  6032  004F68  6E10               	movwf	monta_sd@dado^0,c
  6033  004F6A  0E62               	movlw	high (STR_3+8)
  6034  004F6C  6E11               	movwf	(monta_sd@dado+1)^0,c
  6035  004F6E  0E04               	movlw	4
  6036  004F70  EC03  F00B         	call	_monta_sd
  6037  004F74  0012               	return		;funcret
  6038  004F76                     __end_of_verifica_fence:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function _verifica_plausibilidade_long *****************
  6042 ;; Defined at:
  6043 ;;		line 311 in file "bibliotecas/fence.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  posicao         1    9[COMRAM] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      unsigned char 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 3F/1
  6054 ;;		On exit  : 3F/1
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0
  6058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6061 ;;Total ram usage:        1 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    3
  6064 ;; This function calls:
  6065 ;;		_posicao_long
  6066 ;; This function is called by:
  6067 ;;		_verifica_fence
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text31
  6072  004E5C                     __ptext31:
  6073                           	callstack 0
  6074  004E5C                     _verifica_plausibilidade_long:
  6075                           	callstack 24
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;fence.c: 313: char posicao = posicao_long();
  6079                           
  6080                           ;incstack = 0
  6081  004E5C  EC3A  F02E         	call	_posicao_long	;wreg free
  6082  004E60  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6083                           
  6084                           ;fence.c: 314: switch(posicao)
  6085  004E62  D027               	goto	l13032
  6086  004E64                     l12982:
  6087                           
  6088                           ; BSR set to: 1
  6089                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6090  004E64  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6091  004E66  D00B               	goto	l12992
  6092                           
  6093                           ; BSR set to: 1
  6094  004E68  BF0F               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6095  004E6A  D007               	goto	u15560
  6096  004E6C  510F               	movf	(_poligono_ext+15)& (0+255),w,b
  6097  004E6E  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6098  004E70  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6099  004E72  E105               	bnz	l12992
  6100  004E74  050C               	decf	(_poligono_ext+12)& (0+255),w,b
  6101  004E76  B0D8               	btfsc	status,0,c
  6102  004E78  D002               	goto	l12992
  6103  004E7A                     u15560:
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;fence.c: 320: {;fence.c: 321: return 0;
  6107  004E7A  0E00               	movlw	0
  6108  004E7C  0012               	return	
  6109  004E7E                     l12992:
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6113  004E7E  5104               	movf	(_poligono_ext+4)& (0+255),w,b
  6114  004E80  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6115  004E82  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6116  004E84  1107               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6117  004E86  B4D8               	btfsc	status,2,c
  6118  004E88  D7F8               	goto	u15560
  6119                           
  6120                           ; BSR set to: 1
  6121  004E8A  510C               	movf	(_poligono_ext+12)& (0+255),w,b
  6122  004E8C  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6123  004E8E  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6124  004E90  110F               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6125  004E92  B4D8               	btfsc	status,2,c
  6126  004E94  D7F2               	goto	u15560
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6130  004E96  0E01               	movlw	1
  6131  004E98  0012               	return	
  6132  004E9A                     l13006:
  6133                           
  6134                           ; BSR set to: 1
  6135                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6136  004E9A  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6137  004E9C  D007               	goto	u15590
  6138  004E9E  5107               	movf	(_poligono_ext+7)& (0+255),w,b
  6139  004EA0  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6140  004EA2  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6141  004EA4  E1EC               	bnz	l12992
  6142  004EA6  0504               	decf	(_poligono_ext+4)& (0+255),w,b
  6143  004EA8  B0D8               	btfsc	status,0,c
  6144  004EAA  D7E9               	goto	l12992
  6145  004EAC                     u15590:
  6146                           
  6147                           ; BSR set to: 1
  6148  004EAC  AF0F               	btfss	(_poligono_ext+15)& (0+255),7,b
  6149  004EAE  D7E5               	goto	u15560
  6150  004EB0  D7E6               	goto	l12992
  6151  004EB2                     l13032:
  6152                           
  6153                           ; BSR set to: 1
  6154  004EB2  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6155                           
  6156                           ; Switch size 1, requested type "simple"
  6157                           ; Number of cases is 1, Range of values is 45 to 45
  6158                           ; switch strategies available:
  6159                           ; Name         Instructions Cycles
  6160                           ; simple_byte            4     3 (average)
  6161                           ;	Chosen strategy is simple_byte
  6162  004EB4  0A2D               	xorlw	45	; case 45
  6163  004EB6  B4D8               	btfsc	status,2,c
  6164  004EB8  D7D5               	goto	l12982
  6165  004EBA  D7EF               	goto	l13006
  6166  004EBC                     __end_of_verifica_plausibilidade_long:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _posicao_long *****************
  6170 ;; Defined at:
  6171 ;;		line 646 in file "bibliotecas/GPS.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      unsigned char 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2
  6180 ;; Tracked objects:
  6181 ;;		On entry : 3F/1
  6182 ;;		On exit  : 3F/1
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6185 ;;      Params:         0       0       0       0       0       0       0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6189 ;;Total ram usage:        0 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    2
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_verifica_plausibilidade_long
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text32
  6200  005C74                     __ptext32:
  6201                           	callstack 0
  6202  005C74                     _posicao_long:
  6203                           	callstack 24
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;GPS.c: 649: return rawLongitude[0];
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;incstack = 0
  6210  005C74  51A5               	movf	_rawLongitude& (0+255),w,b
  6211                           
  6212                           ; BSR set to: 1
  6213  005C76  0012               	return		;funcret
  6214  005C78                     __end_of_posicao_long:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _verifica_plausibilidade_lat *****************
  6218 ;; Defined at:
  6219 ;;		line 365 in file "bibliotecas/fence.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  posicao         1    9[COMRAM] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      unsigned char 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 3F/0
  6230 ;;		On exit  : 3F/1
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0
  6234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6236 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6237 ;;Total ram usage:        1 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    3
  6240 ;; This function calls:
  6241 ;;		_posicao_lat
  6242 ;; This function is called by:
  6243 ;;		_verifica_fence
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text33
  6248  004B6A                     __ptext33:
  6249                           	callstack 0
  6250  004B6A                     _verifica_plausibilidade_lat:
  6251                           	callstack 24
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;fence.c: 367: char posicao = posicao_lat();
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;incstack = 0
  6258  004B6A  EC37  F02E         	call	_posicao_lat	;wreg free
  6259  004B6E  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6260                           
  6261                           ;fence.c: 368: switch(posicao)
  6262  004B70  D031               	goto	l13096
  6263  004B72                     l13036:
  6264                           
  6265                           ; BSR set to: 1
  6266                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  6267  004B72  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6268  004B74  D007               	goto	u15630
  6269  004B76  5103               	movf	(_poligono_ext+3)& (0+255),w,b
  6270  004B78  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6271  004B7A  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6272  004B7C  E107               	bnz	l13046
  6273  004B7E  0500               	decf	_poligono_ext& (0+255),w,b
  6274  004B80  B0D8               	btfsc	status,0,c
  6275  004B82  D004               	goto	l13046
  6276  004B84                     u15630:
  6277                           
  6278                           ; BSR set to: 1
  6279  004B84  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6280  004B86  D002               	goto	l13046
  6281  004B88                     u15640:
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;fence.c: 374: {;fence.c: 375: return 0;
  6285  004B88  0E00               	movlw	0
  6286  004B8A  0012               	return	
  6287  004B8C                     l13046:
  6288                           
  6289                           ; BSR set to: 1
  6290                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  6291  004B8C  5100               	movf	_poligono_ext& (0+255),w,b
  6292  004B8E  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6293  004B90  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6294  004B92  1103               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6295  004B94  B4D8               	btfsc	status,2,c
  6296  004B96  D7F8               	goto	u15640
  6297                           
  6298                           ; BSR set to: 1
  6299  004B98  5108               	movf	(_poligono_ext+8)& (0+255),w,b
  6300  004B9A  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6301  004B9C  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6302  004B9E  110B               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6303  004BA0  B4D8               	btfsc	status,2,c
  6304  004BA2  D7F2               	goto	u15640
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  6308  004BA4  0E01               	movlw	1
  6309  004BA6  0012               	return	
  6310  004BA8                     l13060:
  6311                           
  6312                           ; BSR set to: 1
  6313                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6314  004BA8  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6315  004BAA  D009               	goto	l13070
  6316                           
  6317                           ; BSR set to: 1
  6318  004BAC  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6319  004BAE  D7EC               	goto	u15640
  6320  004BB0  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6321  004BB2  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6322  004BB4  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6323  004BB6  E103               	bnz	l13070
  6324  004BB8  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6325  004BBA  A0D8               	btfss	status,0,c
  6326  004BBC  D7E5               	goto	u15640
  6327  004BBE                     l13070:
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  6331  004BBE  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6332                           
  6333                           ; BSR set to: 1
  6334  004BC0  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6335  004BC2  D7E2               	goto	u15640
  6336  004BC4  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6337  004BC6  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6338  004BC8  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6339  004BCA  E1E0               	bnz	l13046
  6340  004BCC  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6341  004BCE  A0D8               	btfss	status,0,c
  6342  004BD0  D7DB               	goto	u15640
  6343  004BD2  D7DC               	goto	l13046
  6344  004BD4                     l13096:
  6345                           
  6346                           ; BSR set to: 1
  6347  004BD4  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6348                           
  6349                           ; Switch size 1, requested type "simple"
  6350                           ; Number of cases is 1, Range of values is 45 to 45
  6351                           ; switch strategies available:
  6352                           ; Name         Instructions Cycles
  6353                           ; simple_byte            4     3 (average)
  6354                           ;	Chosen strategy is simple_byte
  6355  004BD6  0A2D               	xorlw	45	; case 45
  6356  004BD8  B4D8               	btfsc	status,2,c
  6357  004BDA  D7CB               	goto	l13036
  6358  004BDC  D7E5               	goto	l13060
  6359  004BDE                     __end_of_verifica_plausibilidade_lat:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _posicao_lat *****************
  6363 ;; Defined at:
  6364 ;;		line 652 in file "bibliotecas/GPS.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      unsigned char 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2
  6373 ;; Tracked objects:
  6374 ;;		On entry : 3F/0
  6375 ;;		On exit  : 3F/1
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6378 ;;      Params:         0       0       0       0       0       0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    2
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_verifica_plausibilidade_lat
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text34
  6393  005C6E                     __ptext34:
  6394                           	callstack 0
  6395  005C6E                     _posicao_lat:
  6396                           	callstack 24
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;GPS.c: 655: return rawLatitude[0];
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;incstack = 0
  6403  005C6E  0101               	movlb	1	; () banked
  6404  005C70  51BE               	movf	_rawLatitude& (0+255),w,b
  6405                           
  6406                           ; BSR set to: 1
  6407  005C72  0012               	return		;funcret
  6408  005C74                     __end_of_posicao_lat:
  6409                           	callstack 0
  6410                           
  6411 ;; *************** function _recebe_dado_gps *****************
  6412 ;; Defined at:
  6413 ;;		line 558 in file "main.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  timeout         1   10[COMRAM] unsigned char 
  6418 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0
  6429 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6431 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6432 ;;Total ram usage:        2 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    3
  6435 ;; This function calls:
  6436 ;;		_verifica_recep_gps
  6437 ;; This function is called by:
  6438 ;;		_verifica_fence
  6439 ;;		_disparo_gravacao
  6440 ;;		_troca_de_tela
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text35
  6445  005A6E                     __ptext35:
  6446                           	callstack 0
  6447  005A6E                     _recebe_dado_gps:
  6448                           	callstack 24
  6449                           
  6450                           ;main.c: 560: unsigned char flag_recebe = 0;
  6451                           
  6452                           ; BSR set to: 1
  6453                           ;incstack = 0
  6454  005A6E  0E00               	movlw	0
  6455  005A70  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6456                           
  6457                           ;main.c: 561: unsigned char timeout = 10;
  6458  005A72  0E0A               	movlw	10
  6459  005A74  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6460                           
  6461                           ;main.c: 562: while(!flag_recebe && timeout>0)
  6462  005A76  D004               	goto	l12976
  6463  005A78                     l12972:
  6464                           
  6465                           ;main.c: 563: {;main.c: 564: flag_recebe = verifica_recep_gps();
  6466  005A78  EC74  F02C         	call	_verifica_recep_gps	;wreg free
  6467  005A7C  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;main.c: 565: timeout--;
  6471  005A7E  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6472  005A80                     l12976:
  6473  005A80  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6474  005A82  A4D8               	btfss	status,2,c
  6475  005A84  0012               	return	
  6476  005A86  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6477  005A88  B4D8               	btfsc	status,2,c
  6478  005A8A  0012               	return	
  6479  005A8C  D7F5               	goto	l12972
  6480  005A8E                     __end_of_recebe_dado_gps:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _verifica_recep_gps *****************
  6484 ;; Defined at:
  6485 ;;		line 720 in file "bibliotecas/GPS.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      unsigned char 
  6492 ;; Registers used:
  6493 ;;		wreg
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 3F/1
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        0 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    2
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_recebe_dado_gps
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text36
  6514  0058E8                     __ptext36:
  6515                           	callstack 0
  6516  0058E8                     _verifica_recep_gps:
  6517                           	callstack 24
  6518                           
  6519                           ;GPS.c: 722: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6520                           
  6521                           ;incstack = 0
  6522  0058E8  0101               	movlb	1	; () banked
  6523  0058EA  B14B               	btfsc	_gps_flag& (0+255),0,b
  6524                           
  6525                           ; BSR set to: 1
  6526  0058EC  A14C               	btfss	(_gps_flag+1)& (0+255),0,b
  6527  0058EE  D00E               	goto	l12220
  6528                           
  6529                           ; BSR set to: 1
  6530  0058F0  B14D               	btfsc	(_gps_flag+2)& (0+255),0,b
  6531                           
  6532                           ; BSR set to: 1
  6533  0058F2  A14E               	btfss	(_gps_flag+3)& (0+255),0,b
  6534  0058F4  D00B               	goto	l12220
  6535                           
  6536                           ; BSR set to: 1
  6537  0058F6  B14F               	btfsc	(_gps_flag+4)& (0+255),0,b
  6538                           
  6539                           ; BSR set to: 1
  6540  0058F8  A150               	btfss	(_gps_flag+5)& (0+255),0,b
  6541  0058FA  D008               	goto	l12220
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;GPS.c: 723: {;GPS.c: 724: gps_flag[0].flag = 0;
  6545  0058FC  914B               	bcf	_gps_flag& (0+255),0,b
  6546                           
  6547                           ;GPS.c: 725: gps_flag[1].flag = 0;
  6548  0058FE  914C               	bcf	(_gps_flag+1)& (0+255),0,b
  6549                           
  6550                           ;GPS.c: 726: gps_flag[2].flag = 0;
  6551  005900  914D               	bcf	(_gps_flag+2)& (0+255),0,b
  6552                           
  6553                           ;GPS.c: 727: gps_flag[3].flag = 0;
  6554  005902  914E               	bcf	(_gps_flag+3)& (0+255),0,b
  6555                           
  6556                           ;GPS.c: 728: gps_flag[4].flag = 0;
  6557  005904  914F               	bcf	(_gps_flag+4)& (0+255),0,b
  6558                           
  6559                           ;GPS.c: 729: gps_flag[5].flag = 0;
  6560  005906  9150               	bcf	(_gps_flag+5)& (0+255),0,b
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;GPS.c: 730: return 1;
  6564  005908  0E01               	movlw	1
  6565  00590A  0012               	return	
  6566  00590C                     l12220:
  6567                           
  6568                           ; BSR set to: 1
  6569                           ;GPS.c: 732: else;GPS.c: 733: {;GPS.c: 735: return 0;
  6570  00590C  0E00               	movlw	0
  6571                           
  6572                           ; BSR set to: 1
  6573  00590E  0012               	return		;funcret
  6574  005910                     __end_of_verifica_recep_gps:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function _longitude_to_convert *****************
  6578 ;; Defined at:
  6579 ;;		line 627 in file "bibliotecas/GPS.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6584 ;;  i               1   12[BANK0 ] unsigned char 
  6585 ;;  j               1   11[BANK0 ] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 3F/1
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6595 ;;      Params:         0       0       0       0       0       0       0       0       0
  6596 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6598 ;;      Totals:         1      13       0       0       0       0       0       0       0
  6599 ;;Total ram usage:       14 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    7
  6602 ;; This function calls:
  6603 ;;		_armazena_ltlo
  6604 ;; This function is called by:
  6605 ;;		_verifica_fence
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text37
  6610  004A76                     __ptext37:
  6611                           	callstack 0
  6612  004A76                     _longitude_to_convert:
  6613                           	callstack 20
  6614                           
  6615                           ;GPS.c: 629: unsigned char i,j;;GPS.c: 630: unsigned char longitude[11];;GPS.c: 633: j =
      +                           0;
  6616                           
  6617                           ; BSR set to: 1
  6618                           ;incstack = 0
  6619  004A76  0E00               	movlw	0
  6620  004A78  0100               	movlb	0	; () banked
  6621  004A7A  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  6622                           
  6623                           ;GPS.c: 634: for(i=0; i<12; i++)
  6624  004A7C  0E00               	movlw	0
  6625  004A7E  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  6626  004A80                     l12766:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;GPS.c: 635: {;GPS.c: 636: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  6630  004A80  0EA5               	movlw	low _rawLongitude
  6631  004A82  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6632  004A84  6ED9               	movwf	fsr2l,c
  6633  004A86  6ADA               	clrf	fsr2h,c
  6634  004A88  0E01               	movlw	high _rawLongitude
  6635  004A8A  22DA               	addwfc	fsr2h,f,c
  6636  004A8C  50DF               	movf	indf2,w,c
  6637  004A8E  B4D8               	btfsc	status,2,c
  6638  004A90  D024               	goto	l12778
  6639                           
  6640                           ; BSR set to: 0
  6641  004A92  0EA5               	movlw	low _rawLongitude
  6642  004A94  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6643  004A96  6ED9               	movwf	fsr2l,c
  6644  004A98  6ADA               	clrf	fsr2h,c
  6645  004A9A  0E01               	movlw	high _rawLongitude
  6646  004A9C  22DA               	addwfc	fsr2h,f,c
  6647  004A9E  0E2D               	movlw	45
  6648  004AA0  18DE               	xorwf	postinc2,w,c
  6649  004AA2  B4D8               	btfsc	status,2,c
  6650  004AA4  D01A               	goto	l12778
  6651                           
  6652                           ; BSR set to: 0
  6653  004AA6  0EA5               	movlw	low _rawLongitude
  6654  004AA8  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6655  004AAA  6ED9               	movwf	fsr2l,c
  6656  004AAC  6ADA               	clrf	fsr2h,c
  6657  004AAE  0E01               	movlw	high _rawLongitude
  6658  004AB0  22DA               	addwfc	fsr2h,f,c
  6659  004AB2  0E2E               	movlw	46
  6660  004AB4  18DE               	xorwf	postinc2,w,c
  6661  004AB6  B4D8               	btfsc	status,2,c
  6662  004AB8  D010               	goto	l12778
  6663                           
  6664                           ; BSR set to: 0
  6665  004ABA  0E0A               	movlw	10
  6666  004ABC  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  6667  004ABE  D00D               	goto	l12778
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;GPS.c: 637: {;GPS.c: 639: longitude[j] = rawLongitude[i];
  6671  004AC0  0EA5               	movlw	low _rawLongitude
  6672  004AC2  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6673  004AC4  6ED9               	movwf	fsr2l,c
  6674  004AC6  6ADA               	clrf	fsr2h,c
  6675  004AC8  0E01               	movlw	high _rawLongitude
  6676  004ACA  22DA               	addwfc	fsr2h,f,c
  6677  004ACC  516B               	movf	longitude_to_convert@j& (0+255),w,b
  6678  004ACE  0F60               	addlw	low longitude_to_convert@longitude
  6679  004AD0  6EE1               	movwf	fsr1l,c
  6680  004AD2  6AE2               	clrf	fsr1h,c
  6681  004AD4  CFDF FFE7          	movff	indf2,indf1
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;GPS.c: 640: j++;
  6685  004AD8  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  6686  004ADA                     l12778:
  6687                           
  6688                           ; BSR set to: 0
  6689  004ADA  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 0
  6692  004ADC  0E0B               	movlw	11
  6693  004ADE  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  6694  004AE0  D7CF               	goto	l12766
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;GPS.c: 641: };GPS.c: 642: };GPS.c: 643: armazena_ltlo(longitude, 0);
  6698  004AE2  0E60               	movlw	low longitude_to_convert@longitude
  6699  004AE4  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6700  004AE6  0E00               	movlw	0
  6701  004AE8  6E3F               	movwf	armazena_ltlo@index^0,c
  6702  004AEA  EC77  F024         	call	_armazena_ltlo	;wreg free
  6703                           
  6704                           ; BSR set to: 1
  6705  004AEE  0012               	return		;funcret
  6706  004AF0                     __end_of_longitude_to_convert:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _latitude_to_convert *****************
  6710 ;; Defined at:
  6711 ;;		line 602 in file "bibliotecas/GPS.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  6716 ;;  i               1   10[BANK0 ] unsigned char 
  6717 ;;  j               1    9[BANK0 ] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 3F/1
  6724 ;;		On exit  : 3F/1
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         0       0       0       0       0       0       0       0       0
  6728 ;;      Locals:         0      11       0       0       0       0       0       0       0
  6729 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6730 ;;      Totals:         1      11       0       0       0       0       0       0       0
  6731 ;;Total ram usage:       12 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    7
  6734 ;; This function calls:
  6735 ;;		_armazena_ltlo
  6736 ;; This function is called by:
  6737 ;;		_verifica_fence
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text38
  6742  004AF0                     __ptext38:
  6743                           	callstack 0
  6744  004AF0                     _latitude_to_convert:
  6745                           	callstack 20
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;GPS.c: 604: unsigned char i,j;;GPS.c: 605: unsigned char latitude[9];;GPS.c: 608: j = 0
      +                          ;
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;incstack = 0
  6752  004AF0  0E00               	movlw	0
  6753  004AF2  0100               	movlb	0	; () banked
  6754  004AF4  6F69               	movwf	latitude_to_convert@j& (0+255),b
  6755                           
  6756                           ;GPS.c: 609: for(i=0; i<12; i++)
  6757  004AF6  0E00               	movlw	0
  6758  004AF8  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  6759  004AFA                     l12742:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;GPS.c: 610: {;GPS.c: 611: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  6763  004AFA  0EBE               	movlw	low _rawLatitude
  6764  004AFC  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6765  004AFE  6ED9               	movwf	fsr2l,c
  6766  004B00  6ADA               	clrf	fsr2h,c
  6767  004B02  0E01               	movlw	high _rawLatitude
  6768  004B04  22DA               	addwfc	fsr2h,f,c
  6769  004B06  50DF               	movf	indf2,w,c
  6770  004B08  B4D8               	btfsc	status,2,c
  6771  004B0A  D024               	goto	l12754
  6772                           
  6773                           ; BSR set to: 0
  6774  004B0C  0EBE               	movlw	low _rawLatitude
  6775  004B0E  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6776  004B10  6ED9               	movwf	fsr2l,c
  6777  004B12  6ADA               	clrf	fsr2h,c
  6778  004B14  0E01               	movlw	high _rawLatitude
  6779  004B16  22DA               	addwfc	fsr2h,f,c
  6780  004B18  0E2D               	movlw	45
  6781  004B1A  18DE               	xorwf	postinc2,w,c
  6782  004B1C  B4D8               	btfsc	status,2,c
  6783  004B1E  D01A               	goto	l12754
  6784                           
  6785                           ; BSR set to: 0
  6786  004B20  0EBE               	movlw	low _rawLatitude
  6787  004B22  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6788  004B24  6ED9               	movwf	fsr2l,c
  6789  004B26  6ADA               	clrf	fsr2h,c
  6790  004B28  0E01               	movlw	high _rawLatitude
  6791  004B2A  22DA               	addwfc	fsr2h,f,c
  6792  004B2C  0E2E               	movlw	46
  6793  004B2E  18DE               	xorwf	postinc2,w,c
  6794  004B30  B4D8               	btfsc	status,2,c
  6795  004B32  D010               	goto	l12754
  6796                           
  6797                           ; BSR set to: 0
  6798  004B34  0E09               	movlw	9
  6799  004B36  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  6800  004B38  D00D               	goto	l12754
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;GPS.c: 612: {;GPS.c: 613: latitude[j] = rawLatitude[i];
  6804  004B3A  0EBE               	movlw	low _rawLatitude
  6805  004B3C  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6806  004B3E  6ED9               	movwf	fsr2l,c
  6807  004B40  6ADA               	clrf	fsr2h,c
  6808  004B42  0E01               	movlw	high _rawLatitude
  6809  004B44  22DA               	addwfc	fsr2h,f,c
  6810  004B46  5169               	movf	latitude_to_convert@j& (0+255),w,b
  6811  004B48  0F60               	addlw	low latitude_to_convert@latitude
  6812  004B4A  6EE1               	movwf	fsr1l,c
  6813  004B4C  6AE2               	clrf	fsr1h,c
  6814  004B4E  CFDF FFE7          	movff	indf2,indf1
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;GPS.c: 614: j++;
  6818  004B52  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  6819  004B54                     l12754:
  6820                           
  6821                           ; BSR set to: 0
  6822  004B54  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  6823                           
  6824                           ; BSR set to: 0
  6825  004B56  0E0B               	movlw	11
  6826  004B58  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  6827  004B5A  D7CF               	goto	l12742
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;GPS.c: 615: };GPS.c: 616: };GPS.c: 617: armazena_ltlo(latitude, 1);
  6831  004B5C  0E60               	movlw	low latitude_to_convert@latitude
  6832  004B5E  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6833  004B60  0E01               	movlw	1
  6834  004B62  6E3F               	movwf	armazena_ltlo@index^0,c
  6835  004B64  EC77  F024         	call	_armazena_ltlo	;wreg free
  6836                           
  6837                           ; BSR set to: 1
  6838  004B68  0012               	return		;funcret
  6839  004B6A                     __end_of_latitude_to_convert:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function _armazena_ltlo *****************
  6843 ;; Defined at:
  6844 ;;		line 64 in file "bibliotecas/fence.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  6847 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  6848 ;;  index           1   62[COMRAM] unsigned char 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  i               1   64[COMRAM] unsigned char 
  6851 ;;  j               1   63[COMRAM] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 3F/0
  6858 ;;		On exit  : 3F/1
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6861 ;;      Params:         2       0       0       0       0       0       0       0       0
  6862 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6864 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6865 ;;Total ram usage:        4 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    6
  6868 ;; This function calls:
  6869 ;;		_diferenca
  6870 ;; This function is called by:
  6871 ;;		_latitude_to_convert
  6872 ;;		_longitude_to_convert
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text39
  6877  0048EE                     __ptext39:
  6878                           	callstack 0
  6879  0048EE                     _armazena_ltlo:
  6880                           	callstack 20
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  6884                           
  6885                           ; BSR set to: 1
  6886                           ;incstack = 0
  6887  0048EE  D038               	goto	l12188
  6888  0048F0                     l12150:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;fence.c: 75: j = 0;
  6892  0048F0  0E00               	movlw	0
  6893  0048F2  6E40               	movwf	armazena_ltlo@j^0,c
  6894                           
  6895                           ;fence.c: 76: for(i=0; i<10; i++)
  6896  0048F4  0E00               	movlw	0
  6897  0048F6  6E41               	movwf	armazena_ltlo@i^0,c
  6898  0048F8                     l12156:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  6902  0048F8  503E               	movf	armazena_ltlo@buffer^0,w,c
  6903  0048FA  6ED9               	movwf	fsr2l,c
  6904  0048FC  6ADA               	clrf	fsr2h,c
  6905  0048FE  50DF               	movf	indf2,w,c
  6906  004900  B4D8               	btfsc	status,2,c
  6907  004902  D00C               	goto	l12162
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  6911  004904  503E               	movf	armazena_ltlo@buffer^0,w,c
  6912  004906  6ED9               	movwf	fsr2l,c
  6913  004908  6ADA               	clrf	fsr2h,c
  6914  00490A  0E10               	movlw	low _dado
  6915  00490C  2440               	addwf	armazena_ltlo@j^0,w,c
  6916  00490E  6EE1               	movwf	fsr1l,c
  6917  004910  6AE2               	clrf	fsr1h,c
  6918  004912  0E01               	movlw	high _dado
  6919  004914  22E2               	addwfc	fsr1h,f,c
  6920  004916  CFDF FFE7          	movff	indf2,indf1
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;fence.c: 82: j++;
  6924  00491A  2A40               	incf	armazena_ltlo@j^0,f,c
  6925  00491C                     l12162:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;fence.c: 83: };fence.c: 85: buffer++;
  6929  00491C  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6930                           
  6931                           ; BSR set to: 0
  6932  00491E  2A41               	incf	armazena_ltlo@i^0,f,c
  6933                           
  6934                           ; BSR set to: 0
  6935  004920  0E09               	movlw	9
  6936  004922  6441               	cpfsgt	armazena_ltlo@i^0,c
  6937  004924  D7E9               	goto	l12156
  6938  004926  D021               	goto	l12190
  6939  004928                     l12168:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;fence.c: 91: j = 0;
  6943  004928  0E00               	movlw	0
  6944  00492A  6E40               	movwf	armazena_ltlo@j^0,c
  6945                           
  6946                           ;fence.c: 92: for(i=0; i<11; i++)
  6947  00492C  0E00               	movlw	0
  6948  00492E  6E41               	movwf	armazena_ltlo@i^0,c
  6949  004930                     l12174:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  6953  004930  503E               	movf	armazena_ltlo@buffer^0,w,c
  6954  004932  6ED9               	movwf	fsr2l,c
  6955  004934  6ADA               	clrf	fsr2h,c
  6956  004936  50DF               	movf	indf2,w,c
  6957  004938  B4D8               	btfsc	status,2,c
  6958  00493A  D00C               	goto	l12180
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  6962  00493C  503E               	movf	armazena_ltlo@buffer^0,w,c
  6963  00493E  6ED9               	movwf	fsr2l,c
  6964  004940  6ADA               	clrf	fsr2h,c
  6965  004942  0E10               	movlw	low _dado
  6966  004944  2440               	addwf	armazena_ltlo@j^0,w,c
  6967  004946  6EE1               	movwf	fsr1l,c
  6968  004948  6AE2               	clrf	fsr1h,c
  6969  00494A  0E01               	movlw	high _dado
  6970  00494C  22E2               	addwfc	fsr1h,f,c
  6971  00494E  CFDF FFE7          	movff	indf2,indf1
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;fence.c: 98: j++;
  6975  004952  2A40               	incf	armazena_ltlo@j^0,f,c
  6976  004954                     l12180:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;fence.c: 99: };fence.c: 101: buffer++;
  6980  004954  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6981                           
  6982                           ; BSR set to: 0
  6983  004956  2A41               	incf	armazena_ltlo@i^0,f,c
  6984                           
  6985                           ; BSR set to: 0
  6986  004958  0E0A               	movlw	10
  6987  00495A  6441               	cpfsgt	armazena_ltlo@i^0,c
  6988  00495C  D7E9               	goto	l12174
  6989  00495E  D005               	goto	l12190
  6990  004960                     l12188:
  6991                           
  6992                           ; BSR set to: 0
  6993  004960  503F               	movf	armazena_ltlo@index^0,w,c
  6994                           
  6995                           ; Switch size 1, requested type "simple"
  6996                           ; Number of cases is 1, Range of values is 1 to 1
  6997                           ; switch strategies available:
  6998                           ; Name         Instructions Cycles
  6999                           ; simple_byte            4     3 (average)
  7000                           ;	Chosen strategy is simple_byte
  7001  004962  0A01               	xorlw	1	; case 1
  7002  004964  B4D8               	btfsc	status,2,c
  7003  004966  D7C4               	goto	l12150
  7004  004968  D7DF               	goto	l12168
  7005  00496A                     l12190:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;fence.c: 108: diferenca(index);
  7009  00496A  503F               	movf	armazena_ltlo@index^0,w,c
  7010  00496C  EC3B  F020         	call	_diferenca
  7011                           
  7012                           ; BSR set to: 1
  7013  004970  0012               	return		;funcret
  7014  004972                     __end_of_armazena_ltlo:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function _diferenca *****************
  7018 ;; Defined at:
  7019 ;;		line 145 in file "bibliotecas/fence.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  index           1    wreg     unsigned char 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  index           1   52[COMRAM] unsigned char 
  7024 ;;  valor_long      4   57[COMRAM] unsigned long 
  7025 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 3F/0
  7032 ;;		On exit  : 3F/1
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0
  7036 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7038 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7039 ;;Total ram usage:        9 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    5
  7042 ;; This function calls:
  7043 ;;		_convert_to_int
  7044 ;;		_convert_to_int_point_lat
  7045 ;;		_convert_to_int_point_long
  7046 ;; This function is called by:
  7047 ;;		_armazena_ltlo
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text40
  7052  004076                     __ptext40:
  7053                           	callstack 0
  7054  004076                     _diferenca:
  7055                           	callstack 20
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;incstack = 0
  7059                           ;diferenca@index stored from wreg
  7060  004076  6E35               	movwf	diferenca@index^0,c
  7061                           
  7062                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7063  004078  D062               	goto	l12078
  7064  00407A                     l12064:
  7065                           
  7066                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7067  00407A  EC14  F028         	call	_convert_to_int_point_lat	;wreg free
  7068  00407E  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7069  004082  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7070  004086  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7071  00408A  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7072                           
  7073                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7074  00408E  0E55               	movlw	low _fence_diff_lat
  7075  004090  6E24               	movwf	convert_to_int@p_buff^0,c
  7076  004092  0E61               	movlw	high _fence_diff_lat
  7077  004094  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7078  004096  ECC0  F02C         	call	_convert_to_int	;wreg free
  7079  00409A  5036               	movf	diferenca@valor_lat^0,w,c
  7080  00409C  5C24               	subwf	?_convert_to_int^0,w,c
  7081  00409E  0101               	movlb	1	; () banked
  7082  0040A0  6F00               	movwf	_poligono_ext& (0+255),b
  7083  0040A2  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7084  0040A4  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7085  0040A6  6F01               	movwf	(_poligono_ext+1)& (0+255),b
  7086  0040A8  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7087  0040AA  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7088  0040AC  6F02               	movwf	(_poligono_ext+2)& (0+255),b
  7089  0040AE  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7090  0040B0  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7091  0040B2  6F03               	movwf	(_poligono_ext+3)& (0+255),b
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7095  0040B4  0E69               	movlw	low (_fence_diff_lat+20)
  7096  0040B6  6E24               	movwf	convert_to_int@p_buff^0,c
  7097  0040B8  0E61               	movlw	high (_fence_diff_lat+20)
  7098  0040BA  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7099  0040BC  ECC0  F02C         	call	_convert_to_int	;wreg free
  7100  0040C0  5036               	movf	diferenca@valor_lat^0,w,c
  7101  0040C2  5C24               	subwf	?_convert_to_int^0,w,c
  7102  0040C4  0101               	movlb	1	; () banked
  7103  0040C6  6F08               	movwf	(_poligono_ext+8)& (0+255),b
  7104  0040C8  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7105  0040CA  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7106  0040CC  6F09               	movwf	(_poligono_ext+9)& (0+255),b
  7107  0040CE  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7108  0040D0  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7109  0040D2  6F0A               	movwf	(_poligono_ext+10)& (0+255),b
  7110  0040D4  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7111  0040D6  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7112  0040D8  6F0B               	movwf	(_poligono_ext+11)& (0+255),b
  7113                           
  7114                           ;fence.c: 157: break;
  7115  0040DA  0012               	return	
  7116  0040DC                     l12070:
  7117                           
  7118                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7119  0040DC  ECE8  F027         	call	_convert_to_int_point_long	;wreg free
  7120  0040E0  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7121  0040E4  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7122  0040E8  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7123  0040EC  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7124                           
  7125                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7126  0040F0  0E29               	movlw	low _fence_diff_long
  7127  0040F2  6E24               	movwf	convert_to_int@p_buff^0,c
  7128  0040F4  0E61               	movlw	high _fence_diff_long
  7129  0040F6  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7130  0040F8  ECC0  F02C         	call	_convert_to_int	;wreg free
  7131  0040FC  503A               	movf	diferenca@valor_long^0,w,c
  7132  0040FE  5C24               	subwf	?_convert_to_int^0,w,c
  7133  004100  0101               	movlb	1	; () banked
  7134  004102  6F04               	movwf	(_poligono_ext+4)& (0+255),b
  7135  004104  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7136  004106  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7137  004108  6F05               	movwf	(_poligono_ext+5)& (0+255),b
  7138  00410A  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7139  00410C  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7140  00410E  6F06               	movwf	(_poligono_ext+6)& (0+255),b
  7141  004110  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7142  004112  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7143  004114  6F07               	movwf	(_poligono_ext+7)& (0+255),b
  7144                           
  7145                           ; BSR set to: 1
  7146                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7147  004116  0E3F               	movlw	low (_fence_diff_long+22)
  7148  004118  6E24               	movwf	convert_to_int@p_buff^0,c
  7149  00411A  0E61               	movlw	high (_fence_diff_long+22)
  7150  00411C  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7151  00411E  ECC0  F02C         	call	_convert_to_int	;wreg free
  7152  004122  503A               	movf	diferenca@valor_long^0,w,c
  7153  004124  5C24               	subwf	?_convert_to_int^0,w,c
  7154  004126  0101               	movlb	1	; () banked
  7155  004128  6F0C               	movwf	(_poligono_ext+12)& (0+255),b
  7156  00412A  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7157  00412C  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7158  00412E  6F0D               	movwf	(_poligono_ext+13)& (0+255),b
  7159  004130  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7160  004132  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7161  004134  6F0E               	movwf	(_poligono_ext+14)& (0+255),b
  7162  004136  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7163  004138  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7164  00413A  6F0F               	movwf	(_poligono_ext+15)& (0+255),b
  7165                           
  7166                           ;fence.c: 165: break;
  7167  00413C  0012               	return	
  7168  00413E                     l12078:
  7169  00413E  5035               	movf	diferenca@index^0,w,c
  7170                           
  7171                           ; Switch size 1, requested type "simple"
  7172                           ; Number of cases is 1, Range of values is 1 to 1
  7173                           ; switch strategies available:
  7174                           ; Name         Instructions Cycles
  7175                           ; simple_byte            4     3 (average)
  7176                           ;	Chosen strategy is simple_byte
  7177  004140  0A01               	xorlw	1	; case 1
  7178  004142  B4D8               	btfsc	status,2,c
  7179  004144  D79A               	goto	l12064
  7180  004146  D7CA               	goto	l12070
  7181  004148                     __end_of_diferenca:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _convert_to_int_point_long *****************
  7185 ;; Defined at:
  7186 ;;		line 455 in file "bibliotecas/fence.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;		None
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7191 ;;  p               3    0        PTR unsigned char 
  7192 ;;  i               1   50[COMRAM] unsigned char 
  7193 ;;  j               1   49[COMRAM] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  4   35[COMRAM] unsigned long 
  7196 ;; Registers used:
  7197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7203 ;;      Params:         4       0       0       0       0       0       0       0       0
  7204 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7206 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7207 ;;Total ram usage:       16 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    4
  7210 ;; This function calls:
  7211 ;;		_atol
  7212 ;; This function is called by:
  7213 ;;		_diferenca
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text41
  7218  004FD0                     __ptext41:
  7219                           	callstack 0
  7220  004FD0                     _convert_to_int_point_long:
  7221                           	callstack 20
  7222                           
  7223                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  7224                           
  7225                           ; BSR set to: 1
  7226                           ;incstack = 0
  7227  004FD0  0E00               	movlw	0
  7228  004FD2  6E32               	movwf	convert_to_int_point_long@j^0,c
  7229                           
  7230                           ;fence.c: 463: for(i=0; i<10;i++)
  7231  004FD4  0E00               	movlw	0
  7232  004FD6  6E33               	movwf	convert_to_int_point_long@i^0,c
  7233  004FD8                     l11584:
  7234                           
  7235                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  7236  004FD8  0E10               	movlw	low _dado
  7237  004FDA  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7238  004FDC  6ED9               	movwf	fsr2l,c
  7239  004FDE  6ADA               	clrf	fsr2h,c
  7240  004FE0  0E01               	movlw	high _dado
  7241  004FE2  22DA               	addwfc	fsr2h,f,c
  7242  004FE4  50DF               	movf	indf2,w,c
  7243  004FE6  B4D8               	btfsc	status,2,c
  7244  004FE8  D00D               	goto	l11590
  7245                           
  7246                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  7247  004FEA  0E10               	movlw	low _dado
  7248  004FEC  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7249  004FEE  6ED9               	movwf	fsr2l,c
  7250  004FF0  6ADA               	clrf	fsr2h,c
  7251  004FF2  0E01               	movlw	high _dado
  7252  004FF4  22DA               	addwfc	fsr2h,f,c
  7253  004FF6  5032               	movf	convert_to_int_point_long@j^0,w,c
  7254  004FF8  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7255  004FFA  6EE1               	movwf	fsr1l,c
  7256  004FFC  6AE2               	clrf	fsr1h,c
  7257  004FFE  CFDF FFE7          	movff	indf2,indf1
  7258                           
  7259                           ;fence.c: 469: j++;
  7260  005002  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7261  005004                     l11590:
  7262  005004  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7263  005006  0E09               	movlw	9
  7264  005008  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7265  00500A  D7E6               	goto	l11584
  7266                           
  7267                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  7268  00500C  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7269  00500E  6E16               	movwf	atol@s^0,c
  7270  005010  6A17               	clrf	(atol@s+1)^0,c
  7271  005012  EC42  F01C         	call	_atol	;wreg free
  7272  005016  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7273  00501A  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7274  00501E  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7275  005022  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7276  005026  0012               	return		;funcret
  7277  005028                     __end_of_convert_to_int_point_long:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _convert_to_int_point_lat *****************
  7281 ;; Defined at:
  7282 ;;		line 428 in file "bibliotecas/fence.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7287 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7288 ;;		 -> NULL(0), 
  7289 ;;  i               1   51[COMRAM] unsigned char 
  7290 ;;  j               1   50[COMRAM] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  4   35[COMRAM] long 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7300 ;;      Params:         4       0       0       0       0       0       0       0       0
  7301 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7303 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7304 ;;Total ram usage:       17 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    4
  7307 ;; This function calls:
  7308 ;;		_atol
  7309 ;; This function is called by:
  7310 ;;		_diferenca
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text42
  7315  005028                     __ptext42:
  7316                           	callstack 0
  7317  005028                     _convert_to_int_point_lat:
  7318                           	callstack 20
  7319                           
  7320                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  7321                           
  7322                           ;incstack = 0
  7323  005028  0E00               	movlw	0
  7324  00502A  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7325                           
  7326                           ;fence.c: 436: for(i=0; i<10;i++)
  7327  00502C  0E00               	movlw	0
  7328  00502E  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7329  005030                     l11558:
  7330                           
  7331                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  7332  005030  0E10               	movlw	low _dado
  7333  005032  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7334  005034  6ED9               	movwf	fsr2l,c
  7335  005036  6ADA               	clrf	fsr2h,c
  7336  005038  0E01               	movlw	high _dado
  7337  00503A  22DA               	addwfc	fsr2h,f,c
  7338  00503C  50DF               	movf	indf2,w,c
  7339  00503E  B4D8               	btfsc	status,2,c
  7340  005040  D00D               	goto	l11564
  7341                           
  7342                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  7343  005042  0E10               	movlw	low _dado
  7344  005044  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7345  005046  6ED9               	movwf	fsr2l,c
  7346  005048  6ADA               	clrf	fsr2h,c
  7347  00504A  0E01               	movlw	high _dado
  7348  00504C  22DA               	addwfc	fsr2h,f,c
  7349  00504E  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7350  005050  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7351  005052  6EE1               	movwf	fsr1l,c
  7352  005054  6AE2               	clrf	fsr1h,c
  7353  005056  CFDF FFE7          	movff	indf2,indf1
  7354                           
  7355                           ;fence.c: 442: j++;
  7356  00505A  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7357  00505C                     l11564:
  7358  00505C  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7359  00505E  0E09               	movlw	9
  7360  005060  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7361  005062  D7E6               	goto	l11558
  7362                           
  7363                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  7364  005064  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7365  005066  6E16               	movwf	atol@s^0,c
  7366  005068  6A17               	clrf	(atol@s+1)^0,c
  7367  00506A  EC42  F01C         	call	_atol	;wreg free
  7368  00506E  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7369  005072  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7370  005076  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7371  00507A  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7372  00507E  0012               	return		;funcret
  7373  005080                     __end_of_convert_to_int_point_lat:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _convert_to_int *****************
  7377 ;; Defined at:
  7378 ;;		line 420 in file "bibliotecas/fence.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7381 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  4   35[COMRAM] long 
  7386 ;; Registers used:
  7387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7393 ;;      Params:         4       0       0       0       0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7396 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7397 ;;Total ram usage:        4 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    4
  7400 ;; This function calls:
  7401 ;;		_atol
  7402 ;; This function is called by:
  7403 ;;		_diferenca
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text43
  7408  005980                     __ptext43:
  7409                           	callstack 0
  7410  005980                     _convert_to_int:
  7411                           	callstack 20
  7412                           
  7413                           ;fence.c: 423: p_buff++;
  7414                           
  7415                           ;incstack = 0
  7416  005980  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7417  005982  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7418                           
  7419                           ;fence.c: 424: return atol(p_buff);
  7420  005984  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7421  005988  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7422  00598C  EC42  F01C         	call	_atol	;wreg free
  7423  005990  C016  F024         	movff	?_atol,?_convert_to_int
  7424  005994  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7425  005998  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7426  00599C  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7427  0059A0  0012               	return		;funcret
  7428  0059A2                     __end_of_convert_to_int:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _atol *****************
  7432 ;; Defined at:
  7433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7436 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  a               4   30[COMRAM] long 
  7439 ;;  c               1   34[COMRAM] unsigned char 
  7440 ;;  sign            1   29[COMRAM] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  4   21[COMRAM] long 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7450 ;;      Params:         4       0       0       0       0       0       0       0       0
  7451 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7452 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7453 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7454 ;;Total ram usage:       14 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    3
  7457 ;; This function calls:
  7458 ;;		___lmul
  7459 ;;		_isdigit
  7460 ;; This function is called by:
  7461 ;;		_convert_to_int
  7462 ;;		_convert_to_int_point_lat
  7463 ;;		_convert_to_int_point_long
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text44
  7468  003884                     __ptext44:
  7469                           	callstack 0
  7470  003884                     _atol:
  7471                           	callstack 20
  7472                           
  7473                           ;incstack = 0
  7474  003884  C016  FFF6         	movff	atol@s,tblptrl
  7475  003888  C017  FFF7         	movff	atol@s+1,tblptrh
  7476  00388C  6AF8               	clrf	tblptru,c
  7477  00388E  0E07               	movlw	(high __ramtop+-1)
  7478  003890  64F7               	cpfsgt	tblptrh,c
  7479  003892  D003               	bra	u12777
  7480  003894  0008               	tblrd		*
  7481  003896  50F5               	movf	tablat,w,c
  7482  003898  D005               	bra	u12770
  7483  00389A                     u12777:
  7484  00389A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7485  00389E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7486  0038A2  50E7               	movf	indf1,w,c
  7487  0038A4                     u12770:
  7488  0038A4  6E23               	movwf	atol@c^0,c
  7489  0038A6  4A16               	infsnz	atol@s^0,f,c
  7490  0038A8  2A17               	incf	(atol@s+1)^0,f,c
  7491  0038AA  0E20               	movlw	32
  7492  0038AC  1823               	xorwf	atol@c^0,w,c
  7493  0038AE  B4D8               	btfsc	status,2,c
  7494  0038B0  D7E9               	goto	_atol
  7495  0038B2  0E09               	movlw	9
  7496  0038B4  1823               	xorwf	atol@c^0,w,c
  7497  0038B6  B4D8               	btfsc	status,2,c
  7498  0038B8  D7E5               	goto	_atol
  7499  0038BA  0E00               	movlw	0
  7500  0038BC  6E1F               	movwf	atol@a^0,c
  7501  0038BE  0E00               	movlw	0
  7502  0038C0  6E20               	movwf	(atol@a+1)^0,c
  7503  0038C2  0E00               	movlw	0
  7504  0038C4  6E21               	movwf	(atol@a+2)^0,c
  7505  0038C6  0E00               	movlw	0
  7506  0038C8  6E22               	movwf	(atol@a+3)^0,c
  7507  0038CA  0E00               	movlw	0
  7508  0038CC  6E1E               	movwf	atol@sign^0,c
  7509  0038CE  0E2D               	movlw	45
  7510  0038D0  1823               	xorwf	atol@c^0,w,c
  7511  0038D2  A4D8               	btfss	status,2,c
  7512  0038D4  D015               	goto	l11288
  7513  0038D6  2A1E               	incf	atol@sign^0,f,c
  7514  0038D8                     l11284:
  7515  0038D8  C016  FFF6         	movff	atol@s,tblptrl
  7516  0038DC  C017  FFF7         	movff	atol@s+1,tblptrh
  7517  0038E0  6AF8               	clrf	tblptru,c
  7518  0038E2  0E07               	movlw	(high __ramtop+-1)
  7519  0038E4  64F7               	cpfsgt	tblptrh,c
  7520  0038E6  D003               	bra	u12817
  7521  0038E8  0008               	tblrd		*
  7522  0038EA  50F5               	movf	tablat,w,c
  7523  0038EC  D005               	bra	u12810
  7524  0038EE                     u12817:
  7525  0038EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7526  0038F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7527  0038F6  50E7               	movf	indf1,w,c
  7528  0038F8                     u12810:
  7529  0038F8  6E23               	movwf	atol@c^0,c
  7530  0038FA  4A16               	infsnz	atol@s^0,f,c
  7531  0038FC  2A17               	incf	(atol@s+1)^0,f,c
  7532  0038FE  D028               	goto	l11300
  7533  003900                     l11288:
  7534  003900  0E2B               	movlw	43
  7535  003902  1823               	xorwf	atol@c^0,w,c
  7536  003904  B4D8               	btfsc	status,2,c
  7537  003906  D7E8               	goto	l11284
  7538  003908  D023               	goto	l11300
  7539  00390A                     l11294:
  7540  00390A  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7541  00390E  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7542  003912  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7543  003916  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7544  00391A  0E0A               	movlw	10
  7545  00391C  6E0E               	movwf	___lmul@multiplicand^0,c
  7546  00391E  0E00               	movlw	0
  7547  003920  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7548  003922  0E00               	movlw	0
  7549  003924  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7550  003926  0E00               	movlw	0
  7551  003928  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7552  00392A  EC6C  F028         	call	___lmul	;wreg free
  7553  00392E  C023  F01A         	movff	atol@c,??_atol
  7554  003932  0ED0               	movlw	208
  7555  003934  261A               	addwf	??_atol^0,f,c
  7556  003936  501A               	movf	??_atol^0,w,c
  7557  003938  240A               	addwf	?___lmul^0,w,c
  7558  00393A  6E1F               	movwf	atol@a^0,c
  7559  00393C  0E00               	movlw	0
  7560  00393E  200B               	addwfc	(?___lmul+1)^0,w,c
  7561  003940  6E20               	movwf	(atol@a+1)^0,c
  7562  003942  0E00               	movlw	0
  7563  003944  200C               	addwfc	(?___lmul+2)^0,w,c
  7564  003946  6E21               	movwf	(atol@a+2)^0,c
  7565  003948  0E00               	movlw	0
  7566  00394A  200D               	addwfc	(?___lmul+3)^0,w,c
  7567  00394C  6E22               	movwf	(atol@a+3)^0,c
  7568  00394E  D7C4               	goto	l11284
  7569  003950                     l11300:
  7570  003950  5023               	movf	atol@c^0,w,c
  7571  003952  EC76  F02D         	call	_isdigit
  7572  003956  B0D8               	btfsc	status,0,c
  7573  003958  D7D8               	goto	l11294
  7574  00395A  501E               	movf	atol@sign^0,w,c
  7575  00395C  B4D8               	btfsc	status,2,c
  7576  00395E  D01A               	goto	l2436
  7577  003960  C01F  F01A         	movff	atol@a,??_atol
  7578  003964  C020  F01B         	movff	atol@a+1,??_atol+1
  7579  003968  C021  F01C         	movff	atol@a+2,??_atol+2
  7580  00396C  C022  F01D         	movff	atol@a+3,??_atol+3
  7581  003970  1E1A               	comf	??_atol^0,f,c
  7582  003972  1E1B               	comf	(??_atol+1)^0,f,c
  7583  003974  1E1C               	comf	(??_atol+2)^0,f,c
  7584  003976  1E1D               	comf	(??_atol+3)^0,f,c
  7585  003978  2A1A               	incf	??_atol^0,f,c
  7586  00397A  0E00               	movlw	0
  7587  00397C  221B               	addwfc	(??_atol+1)^0,f,c
  7588  00397E  221C               	addwfc	(??_atol+2)^0,f,c
  7589  003980  221D               	addwfc	(??_atol+3)^0,f,c
  7590  003982  C01A  F016         	movff	??_atol,?_atol
  7591  003986  C01B  F017         	movff	??_atol+1,?_atol+1
  7592  00398A  C01C  F018         	movff	??_atol+2,?_atol+2
  7593  00398E  C01D  F019         	movff	??_atol+3,?_atol+3
  7594  003992  0012               	return	
  7595  003994                     l2436:
  7596  003994  C01F  F016         	movff	atol@a,?_atol
  7597  003998  C020  F017         	movff	atol@a+1,?_atol+1
  7598  00399C  C021  F018         	movff	atol@a+2,?_atol+2
  7599  0039A0  C022  F019         	movff	atol@a+3,?_atol+3
  7600  0039A4  0012               	return		;funcret
  7601  0039A6                     __end_of_atol:
  7602                           	callstack 0
  7603                           
  7604 ;; *************** function _itoa *****************
  7605 ;; Defined at:
  7606 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7609 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7610 ;;  val             2   27[COMRAM] int 
  7611 ;;  base            2   29[COMRAM] int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  cp              2    0        PTR unsigned char 
  7614 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2   25[COMRAM] PTR unsigned char 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 3F/2
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7624 ;;      Params:         6       0       0       0       0       0       0       0       0
  7625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7627 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7628 ;;Total ram usage:        8 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    4
  7631 ;; This function calls:
  7632 ;;		_utoa
  7633 ;; This function is called by:
  7634 ;;		_disparo_gravacao
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text45
  7639  0055EA                     __ptext45:
  7640                           	callstack 0
  7641  0055EA                     _itoa:
  7642                           	callstack 24
  7643                           
  7644                           ; BSR set to: 2
  7645                           
  7646                           ;incstack = 0
  7647  0055EA  AE1D               	btfss	(itoa@val+1)^0,7,c
  7648  0055EC  D00C               	goto	l13726
  7649                           
  7650                           ; BSR set to: 2
  7651  0055EE  C01A  FFD9         	movff	itoa@buf,fsr2l
  7652  0055F2  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  7653  0055F6  0E2D               	movlw	45
  7654  0055F8  6EDF               	movwf	indf2,c
  7655                           
  7656                           ; BSR set to: 2
  7657  0055FA  4A1A               	infsnz	itoa@buf^0,f,c
  7658  0055FC  2A1B               	incf	(itoa@buf+1)^0,f,c
  7659                           
  7660                           ; BSR set to: 2
  7661  0055FE  6C1C               	negf	itoa@val^0,c
  7662  005600  1E1D               	comf	(itoa@val+1)^0,f,c
  7663  005602  B0D8               	btfsc	status,0,c
  7664  005604  2A1D               	incf	(itoa@val+1)^0,f,c
  7665  005606                     l13726:
  7666                           
  7667                           ; BSR set to: 2
  7668  005606  C01A  F011         	movff	itoa@buf,utoa@buf
  7669  00560A  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  7670  00560E  C01C  F013         	movff	itoa@val,utoa@val
  7671  005612  C01D  F014         	movff	itoa@val+1,utoa@val+1
  7672  005616  C01E  F015         	movff	itoa@base,utoa@base
  7673  00561A  C01F  F016         	movff	itoa@base+1,utoa@base+1
  7674  00561E  EC65  F022         	call	_utoa	;wreg free
  7675  005622  0012               	return		;funcret
  7676  005624                     __end_of_itoa:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function _utoa *****************
  7680 ;; Defined at:
  7681 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7684 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7685 ;;  val             2   18[COMRAM] unsigned int 
  7686 ;;  base            2   20[COMRAM] int 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  v               2   22[COMRAM] unsigned int 
  7689 ;;  c               1   24[COMRAM] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2   16[COMRAM] PTR unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 3F/2
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7699 ;;      Params:         6       0       0       0       0       0       0       0       0
  7700 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7702 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7703 ;;Total ram usage:        9 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    3
  7706 ;; This function calls:
  7707 ;;		___lwdiv
  7708 ;;		___lwmod
  7709 ;; This function is called by:
  7710 ;;		_itoa
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text46
  7715  0044CA                     __ptext46:
  7716                           	callstack 0
  7717  0044CA                     _utoa:
  7718                           	callstack 24
  7719                           
  7720                           ; BSR set to: 2
  7721                           
  7722                           ;incstack = 0
  7723  0044CA  C013  F017         	movff	utoa@val,utoa@v
  7724  0044CE  C014  F018         	movff	utoa@val+1,utoa@v+1
  7725  0044D2                     l13690:
  7726  0044D2  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  7727  0044D6  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  7728  0044DA  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7729  0044DE  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7730  0044E2  EC97  F028         	call	___lwdiv	;wreg free
  7731  0044E6  C00A  F017         	movff	?___lwdiv,utoa@v
  7732  0044EA  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  7733  0044EE  4A11               	infsnz	utoa@buf^0,f,c
  7734  0044F0  2A12               	incf	(utoa@buf+1)^0,f,c
  7735  0044F2  5017               	movf	utoa@v^0,w,c
  7736  0044F4  1018               	iorwf	(utoa@v+1)^0,w,c
  7737  0044F6  A4D8               	btfss	status,2,c
  7738  0044F8  D7EC               	goto	l13690
  7739  0044FA  C011  FFD9         	movff	utoa@buf,fsr2l
  7740  0044FE  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7741  004502  0E00               	movlw	0
  7742  004504  6EDF               	movwf	indf2,c
  7743  004506  0611               	decf	utoa@buf^0,f,c
  7744  004508  A0D8               	btfss	status,0,c
  7745  00450A  0612               	decf	(utoa@buf+1)^0,f,c
  7746  00450C                     l13700:
  7747  00450C  C013  F00A         	movff	utoa@val,___lwmod@dividend
  7748  004510  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  7749  004514  C015  F00C         	movff	utoa@base,___lwmod@divisor
  7750  004518  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  7751  00451C  EC56  F02A         	call	___lwmod	;wreg free
  7752  004520  500A               	movf	?___lwmod^0,w,c
  7753  004522  6E19               	movwf	utoa@c^0,c
  7754  004524  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  7755  004528  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  7756  00452C  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7757  004530  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7758  004534  EC97  F028         	call	___lwdiv	;wreg free
  7759  004538  C00A  F013         	movff	?___lwdiv,utoa@val
  7760  00453C  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  7761  004540  0E09               	movlw	9
  7762  004542  6419               	cpfsgt	utoa@c^0,c
  7763  004544  D002               	goto	l2454
  7764  004546  0E07               	movlw	7
  7765  004548  2619               	addwf	utoa@c^0,f,c
  7766  00454A                     l2454:
  7767  00454A  0E30               	movlw	48
  7768  00454C  2619               	addwf	utoa@c^0,f,c
  7769  00454E  C011  FFD9         	movff	utoa@buf,fsr2l
  7770  004552  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7771  004556  C019  FFDF         	movff	utoa@c,indf2
  7772  00455A  0611               	decf	utoa@buf^0,f,c
  7773  00455C  A0D8               	btfss	status,0,c
  7774  00455E  0612               	decf	(utoa@buf+1)^0,f,c
  7775  004560  5013               	movf	utoa@val^0,w,c
  7776  004562  1014               	iorwf	(utoa@val+1)^0,w,c
  7777  004564  A4D8               	btfss	status,2,c
  7778  004566  D7D2               	goto	l13700
  7779                           
  7780                           ;	Return value of _utoa is never used
  7781  004568  4A11               	infsnz	utoa@buf^0,f,c
  7782  00456A  2A12               	incf	(utoa@buf+1)^0,f,c
  7783  00456C  0012               	return		;funcret
  7784  00456E                     __end_of_utoa:
  7785                           	callstack 0
  7786                           
  7787 ;; *************** function ___lwmod *****************
  7788 ;; Defined at:
  7789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  dividend        2    9[COMRAM] unsigned int 
  7792 ;;  divisor         2   11[COMRAM] unsigned int 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  counter         1   13[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  2    9[COMRAM] unsigned int 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/2
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7804 ;;      Params:         4       0       0       0       0       0       0       0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7807 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7808 ;;Total ram usage:        5 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    2
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_utoa
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text47
  7819  0054AC                     __ptext47:
  7820                           	callstack 0
  7821  0054AC                     ___lwmod:
  7822                           	callstack 24
  7823                           
  7824                           ;incstack = 0
  7825  0054AC  500C               	movf	___lwmod@divisor^0,w,c
  7826  0054AE  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  7827  0054B0  B4D8               	btfsc	status,2,c
  7828  0054B2  D018               	goto	l2234
  7829  0054B4  0E01               	movlw	1
  7830  0054B6  6E0E               	movwf	___lwmod@counter^0,c
  7831  0054B8  D004               	goto	l12688
  7832  0054BA                     l12686:
  7833  0054BA  90D8               	bcf	status,0,c
  7834  0054BC  360C               	rlcf	___lwmod@divisor^0,f,c
  7835  0054BE  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  7836  0054C0  2A0E               	incf	___lwmod@counter^0,f,c
  7837  0054C2                     l12688:
  7838  0054C2  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  7839  0054C4  D7FA               	goto	l12686
  7840  0054C6                     u15050:
  7841  0054C6  500C               	movf	___lwmod@divisor^0,w,c
  7842  0054C8  5C0A               	subwf	___lwmod@dividend^0,w,c
  7843  0054CA  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7844  0054CC  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  7845  0054CE  A0D8               	btfss	status,0,c
  7846  0054D0  D004               	goto	l12694
  7847  0054D2  500C               	movf	___lwmod@divisor^0,w,c
  7848  0054D4  5E0A               	subwf	___lwmod@dividend^0,f,c
  7849  0054D6  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7850  0054D8  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  7851  0054DA                     l12694:
  7852  0054DA  90D8               	bcf	status,0,c
  7853  0054DC  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  7854  0054DE  320C               	rrcf	___lwmod@divisor^0,f,c
  7855  0054E0  2E0E               	decfsz	___lwmod@counter^0,f,c
  7856  0054E2  D7F1               	goto	u15050
  7857  0054E4                     l2234:
  7858  0054E4  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  7859  0054E8  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  7860  0054EC  0012               	return		;funcret
  7861  0054EE                     __end_of___lwmod:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function ___lwdiv *****************
  7865 ;; Defined at:
  7866 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  dividend        2    9[COMRAM] unsigned int 
  7869 ;;  divisor         2   11[COMRAM] unsigned int 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  quotient        2   14[COMRAM] unsigned int 
  7872 ;;  counter         1   13[COMRAM] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  2    9[COMRAM] unsigned int 
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/2
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7882 ;;      Params:         4       0       0       0       0       0       0       0       0
  7883 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7885 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7886 ;;Total ram usage:        7 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    2
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_utoa
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text48
  7897  00512E                     __ptext48:
  7898                           	callstack 0
  7899  00512E                     ___lwdiv:
  7900                           	callstack 24
  7901                           
  7902                           ;incstack = 0
  7903  00512E  0E00               	movlw	0
  7904  005130  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7905  005132  0E00               	movlw	0
  7906  005134  6E0F               	movwf	___lwdiv@quotient^0,c
  7907  005136  500C               	movf	___lwdiv@divisor^0,w,c
  7908  005138  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7909  00513A  B4D8               	btfsc	status,2,c
  7910  00513C  D01C               	goto	l2224
  7911  00513E  0E01               	movlw	1
  7912  005140  6E0E               	movwf	___lwdiv@counter^0,c
  7913  005142  D004               	goto	l12668
  7914  005144                     l12666:
  7915  005144  90D8               	bcf	status,0,c
  7916  005146  360C               	rlcf	___lwdiv@divisor^0,f,c
  7917  005148  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7918  00514A  2A0E               	incf	___lwdiv@counter^0,f,c
  7919  00514C                     l12668:
  7920  00514C  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  7921  00514E  D7FA               	goto	l12666
  7922  005150                     u15020:
  7923  005150  90D8               	bcf	status,0,c
  7924  005152  360F               	rlcf	___lwdiv@quotient^0,f,c
  7925  005154  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7926  005156  500C               	movf	___lwdiv@divisor^0,w,c
  7927  005158  5C0A               	subwf	___lwdiv@dividend^0,w,c
  7928  00515A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7929  00515C  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7930  00515E  A0D8               	btfss	status,0,c
  7931  005160  D005               	goto	l12678
  7932  005162  500C               	movf	___lwdiv@divisor^0,w,c
  7933  005164  5E0A               	subwf	___lwdiv@dividend^0,f,c
  7934  005166  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7935  005168  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7936  00516A  800F               	bsf	___lwdiv@quotient^0,0,c
  7937  00516C                     l12678:
  7938  00516C  90D8               	bcf	status,0,c
  7939  00516E  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7940  005170  320C               	rrcf	___lwdiv@divisor^0,f,c
  7941  005172  2E0E               	decfsz	___lwdiv@counter^0,f,c
  7942  005174  D7ED               	goto	u15020
  7943  005176                     l2224:
  7944  005176  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  7945  00517A  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7946  00517E  0012               	return		;funcret
  7947  005180                     __end_of___lwdiv:
  7948                           	callstack 0
  7949                           
  7950 ;; *************** function _grava_sd *****************
  7951 ;; Defined at:
  7952 ;;		line 539 in file "main.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      void 
  7959 ;; Registers used:
  7960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/1
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7969 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7970 ;;Total ram usage:        0 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:   15
  7973 ;; This function calls:
  7974 ;;		_desliga_SPI
  7975 ;;		_desliga_uart
  7976 ;;		_escrita_sdcard
  7977 ;;		_inicializa_SPI
  7978 ;;		_inicializa_uart
  7979 ;; This function is called by:
  7980 ;;		_disparo_gravacao
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text49
  7985  005B40                     __ptext49:
  7986                           	callstack 0
  7987  005B40                     _grava_sd:
  7988                           	callstack 13
  7989                           
  7990                           ;main.c: 541: PORTBbits.RB3 = 0;
  7991                           
  7992                           ;incstack = 0
  7993  005B40  9681               	bcf	129,3,c	;volatile
  7994                           
  7995                           ;main.c: 542: desliga_uart();
  7996  005B42  ECC1  F02D         	call	_desliga_uart	;wreg free
  7997                           
  7998                           ;main.c: 543: inicializa_SPI();
  7999  005B46  EC47  F02D         	call	_inicializa_SPI	;wreg free
  8000                           
  8001                           ;main.c: 544: escrita_sdcard();
  8002  005B4A  EC08  F01B         	call	_escrita_sdcard	;wreg free
  8003                           
  8004                           ;main.c: 545: desliga_SPI();
  8005  005B4E  ECE3  F02D         	call	_desliga_SPI	;wreg free
  8006                           
  8007                           ;main.c: 546: inicializa_uart();
  8008  005B52  ECD1  F02C         	call	_inicializa_uart	;wreg free
  8009                           
  8010                           ;main.c: 547: PORTBbits.RB3 = 1;
  8011  005B56  8681               	bsf	129,3,c	;volatile
  8012  005B58  0012               	return		;funcret
  8013  005B5A                     __end_of_grava_sd:
  8014                           	callstack 0
  8015                           
  8016 ;; *************** function _inicializa_uart *****************
  8017 ;; Defined at:
  8018 ;;		line 206 in file "bibliotecas/uart.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0, cstack
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/1
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    4
  8039 ;; This function calls:
  8040 ;;		_configura_baudrate_uart
  8041 ;; This function is called by:
  8042 ;;		_main
  8043 ;;		_grava_sd
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text50
  8048  0059A2                     __ptext50:
  8049                           	callstack 0
  8050  0059A2                     _inicializa_uart:
  8051                           	callstack 26
  8052                           
  8053                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8054                           
  8055                           ;incstack = 0
  8056  0059A2  9C94               	bcf	148,6,c	;volatile
  8057                           
  8058                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8059  0059A4  9E94               	bcf	148,7,c	;volatile
  8060                           
  8061                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8062  0059A6  0E80               	movlw	128
  8063  0059A8  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8064  0059AA  0E25               	movlw	37
  8065  0059AC  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8066  0059AE  0E00               	movlw	0
  8067  0059B0  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8068  0059B2  0E00               	movlw	0
  8069  0059B4  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8070  0059B6  ECE8  F01D         	call	_configura_baudrate_uart	;wreg free
  8071                           
  8072                           ;uart.c: 213: TXSTA = 0x20;
  8073  0059BA  0E20               	movlw	32
  8074  0059BC  6EAC               	movwf	172,c	;volatile
  8075                           
  8076                           ;uart.c: 214: RCSTA = 0x90;
  8077  0059BE  0E90               	movlw	144
  8078  0059C0  6EAB               	movwf	171,c	;volatile
  8079  0059C2  0012               	return		;funcret
  8080  0059C4                     __end_of_inicializa_uart:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function _configura_baudrate_uart *****************
  8084 ;; Defined at:
  8085 ;;		line 50 in file "bibliotecas/uart.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  baudrate        4   23[COMRAM] const long 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  x               2   35[COMRAM] unsigned int 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      unsigned char 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/1
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8099 ;;      Params:         4       0       0       0       0       0       0       0       0
  8100 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8101 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8102 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8103 ;;Total ram usage:       14 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    3
  8106 ;; This function calls:
  8107 ;;		___aldiv
  8108 ;; This function is called by:
  8109 ;;		_inicializa_uart
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text51
  8114  003BD0                     __ptext51:
  8115                           	callstack 0
  8116  003BD0                     _configura_baudrate_uart:
  8117                           	callstack 26
  8118                           
  8119                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8120                           
  8121                           ;incstack = 0
  8122  003BD0  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8123  003BD4  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8124  003BD8  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8125  003BDC  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8126  003BE0  0E06               	movlw	6
  8127  003BE2                     u14955:
  8128  003BE2  90D8               	bcf	status,0,c
  8129  003BE4  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8130  003BE6  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8131  003BE8  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8132  003BEA  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8133  003BEC  2EE8               	decfsz	wreg,f,c
  8134  003BEE  D7F9               	goto	u14955
  8135  003BF0  501C               	movf	??_configura_baudrate_uart^0,w,c
  8136  003BF2  0800               	sublw	0
  8137  003BF4  6E0A               	movwf	___aldiv@dividend^0,c
  8138  003BF6  0E6C               	movlw	108
  8139  003BF8  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8140  003BFA  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8141  003BFC  0EDC               	movlw	220
  8142  003BFE  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8143  003C00  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8144  003C02  0E02               	movlw	2
  8145  003C04  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8146  003C06  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8147  003C08  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8148  003C0C  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8149  003C10  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8150  003C14  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8151  003C18  0E06               	movlw	6
  8152  003C1A                     u14965:
  8153  003C1A  90D8               	bcf	status,0,c
  8154  003C1C  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8155  003C1E  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8156  003C20  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8157  003C22  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8158  003C24  2EE8               	decfsz	wreg,f,c
  8159  003C26  D7F9               	goto	u14965
  8160  003C28  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8161  003C2C  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8162  003C30  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8163  003C34  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8164  003C38  ECA4  F020         	call	___aldiv	;wreg free
  8165  003C3C  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8166  003C40  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8167                           
  8168                           ;uart.c: 55: if(x > 255)
  8169  003C44  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8170  003C46  A0D8               	btfss	status,0,c
  8171  003C48  D03B               	goto	l12656
  8172                           
  8173                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8174  003C4A  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8175  003C4E  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8176  003C52  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8177  003C56  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8178  003C5A  0E04               	movlw	4
  8179  003C5C                     u14985:
  8180  003C5C  90D8               	bcf	status,0,c
  8181  003C5E  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8182  003C60  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8183  003C62  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8184  003C64  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8185  003C66  2EE8               	decfsz	wreg,f,c
  8186  003C68  D7F9               	goto	u14985
  8187  003C6A  501C               	movf	??_configura_baudrate_uart^0,w,c
  8188  003C6C  0800               	sublw	0
  8189  003C6E  6E0A               	movwf	___aldiv@dividend^0,c
  8190  003C70  0E6C               	movlw	108
  8191  003C72  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8192  003C74  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8193  003C76  0EDC               	movlw	220
  8194  003C78  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8195  003C7A  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8196  003C7C  0E02               	movlw	2
  8197  003C7E  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8198  003C80  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8199  003C82  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8200  003C86  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8201  003C8A  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8202  003C8E  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8203  003C92  0E04               	movlw	4
  8204  003C94                     u14995:
  8205  003C94  90D8               	bcf	status,0,c
  8206  003C96  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8207  003C98  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8208  003C9A  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8209  003C9C  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8210  003C9E  2EE8               	decfsz	wreg,f,c
  8211  003CA0  D7F9               	goto	u14995
  8212  003CA2  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8213  003CA6  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8214  003CAA  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8215  003CAE  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8216  003CB2  ECA4  F020         	call	___aldiv	;wreg free
  8217  003CB6  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8218  003CBA  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8219                           
  8220                           ;uart.c: 58: BRGH = 1;
  8221  003CBE  84AC               	bsf	4012,2,c	;volatile
  8222  003CC0                     l12656:
  8223                           
  8224                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8225  003CC0  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8226  003CC2  B0D8               	btfsc	status,0,c
  8227  003CC4  0012               	return	
  8228                           
  8229                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8230  003CC6  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8231                           
  8232                           ;uart.c: 63: SYNC = 0;
  8233  003CCA  98AC               	bcf	4012,4,c	;volatile
  8234                           
  8235                           ;uart.c: 64: SPEN = 1;
  8236  003CCC  8EAB               	bsf	4011,7,c	;volatile
  8237                           
  8238                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8239  003CCE  8E94               	bsf	148,7,c	;volatile
  8240                           
  8241                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8242  003CD0  9C94               	bcf	148,6,c	;volatile
  8243                           
  8244                           ;uart.c: 67: CREN = 1;
  8245  003CD2  88AB               	bsf	4011,4,c	;volatile
  8246                           
  8247                           ;uart.c: 68: TXEN = 1;
  8248  003CD4  8AAC               	bsf	4012,5,c	;volatile
  8249                           
  8250                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8251  003CD6  0012               	return		;funcret
  8252  003CD8                     __end_of_configura_baudrate_uart:
  8253                           	callstack 0
  8254                           
  8255 ;; *************** function ___aldiv *****************
  8256 ;; Defined at:
  8257 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  dividend        4    9[COMRAM] long 
  8260 ;;  divisor         4   13[COMRAM] long 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  quotient        4   19[COMRAM] long 
  8263 ;;  sign            1   18[COMRAM] unsigned char 
  8264 ;;  counter         1   17[COMRAM] unsigned char 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  4    9[COMRAM] long 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/1
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8274 ;;      Params:         8       0       0       0       0       0       0       0       0
  8275 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8277 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8278 ;;Total ram usage:       14 bytes
  8279 ;; Hardware stack levels used:    1
  8280 ;; Hardware stack levels required when called:    2
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_configura_baudrate_uart
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text52
  8289  004148                     __ptext52:
  8290                           	callstack 0
  8291  004148                     ___aldiv:
  8292                           	callstack 26
  8293                           
  8294                           ;incstack = 0
  8295  004148  0E00               	movlw	0
  8296  00414A  6E13               	movwf	___aldiv@sign^0,c
  8297  00414C  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8298  00414E  D00A               	goto	l12088
  8299  004150  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8300  004152  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8301  004154  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8302  004156  6C0E               	negf	___aldiv@divisor^0,c
  8303  004158  0E00               	movlw	0
  8304  00415A  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8305  00415C  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8306  00415E  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8307  004160  0E01               	movlw	1
  8308  004162  6E13               	movwf	___aldiv@sign^0,c
  8309  004164                     l12088:
  8310  004164  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8311  004166  D00A               	goto	l12094
  8312  004168  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8313  00416A  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8314  00416C  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8315  00416E  6C0A               	negf	___aldiv@dividend^0,c
  8316  004170  0E00               	movlw	0
  8317  004172  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8318  004174  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8319  004176  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8320  004178  0E01               	movlw	1
  8321  00417A  1A13               	xorwf	___aldiv@sign^0,f,c
  8322  00417C                     l12094:
  8323  00417C  0E00               	movlw	0
  8324  00417E  6E14               	movwf	___aldiv@quotient^0,c
  8325  004180  0E00               	movlw	0
  8326  004182  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8327  004184  0E00               	movlw	0
  8328  004186  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8329  004188  0E00               	movlw	0
  8330  00418A  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8331  00418C  500E               	movf	___aldiv@divisor^0,w,c
  8332  00418E  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8333  004190  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8334  004192  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8335  004194  B4D8               	btfsc	status,2,c
  8336  004196  D02A               	goto	l12116
  8337  004198  0E01               	movlw	1
  8338  00419A  6E12               	movwf	___aldiv@counter^0,c
  8339  00419C  D006               	goto	l12102
  8340  00419E                     l12100:
  8341  00419E  90D8               	bcf	status,0,c
  8342  0041A0  360E               	rlcf	___aldiv@divisor^0,f,c
  8343  0041A2  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8344  0041A4  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8345  0041A6  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8346  0041A8  2A12               	incf	___aldiv@counter^0,f,c
  8347  0041AA                     l12102:
  8348  0041AA  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8349  0041AC  D7F8               	goto	l12100
  8350  0041AE                     u14050:
  8351  0041AE  90D8               	bcf	status,0,c
  8352  0041B0  3614               	rlcf	___aldiv@quotient^0,f,c
  8353  0041B2  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8354  0041B4  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8355  0041B6  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8356  0041B8  500E               	movf	___aldiv@divisor^0,w,c
  8357  0041BA  5C0A               	subwf	___aldiv@dividend^0,w,c
  8358  0041BC  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8359  0041BE  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8360  0041C0  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8361  0041C2  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8362  0041C4  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8363  0041C6  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8364  0041C8  A0D8               	btfss	status,0,c
  8365  0041CA  D009               	goto	l12112
  8366  0041CC  500E               	movf	___aldiv@divisor^0,w,c
  8367  0041CE  5E0A               	subwf	___aldiv@dividend^0,f,c
  8368  0041D0  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8369  0041D2  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8370  0041D4  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8371  0041D6  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8372  0041D8  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8373  0041DA  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8374  0041DC  8014               	bsf	___aldiv@quotient^0,0,c
  8375  0041DE                     l12112:
  8376  0041DE  90D8               	bcf	status,0,c
  8377  0041E0  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8378  0041E2  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8379  0041E4  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8380  0041E6  320E               	rrcf	___aldiv@divisor^0,f,c
  8381  0041E8  2E12               	decfsz	___aldiv@counter^0,f,c
  8382  0041EA  D7E1               	goto	u14050
  8383  0041EC                     l12116:
  8384  0041EC  5013               	movf	___aldiv@sign^0,w,c
  8385  0041EE  B4D8               	btfsc	status,2,c
  8386  0041F0  D008               	goto	l12120
  8387  0041F2  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8388  0041F4  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8389  0041F6  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8390  0041F8  6C14               	negf	___aldiv@quotient^0,c
  8391  0041FA  0E00               	movlw	0
  8392  0041FC  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8393  0041FE  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8394  004200  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8395  004202                     l12120:
  8396  004202  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8397  004206  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8398  00420A  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8399  00420E  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8400  004212  0012               	return		;funcret
  8401  004214                     __end_of___aldiv:
  8402                           	callstack 0
  8403                           
  8404 ;; *************** function _inicializa_SPI *****************
  8405 ;; Defined at:
  8406 ;;		line 48 in file "bibliotecas/SPI.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;		None
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/1
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8420 ;;      Params:         0       0       0       0       0       0       0       0       0
  8421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8424 ;;Total ram usage:        0 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    2
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_grava_sd
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text53
  8435  005A8E                     __ptext53:
  8436                           	callstack 0
  8437  005A8E                     _inicializa_SPI:
  8438                           	callstack 25
  8439                           
  8440                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8441                           
  8442                           ;incstack = 0
  8443  005A8E  9293               	bcf	147,1,c	;volatile
  8444                           
  8445                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8446  005A90  9A93               	bcf	147,5,c	;volatile
  8447                           
  8448                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8449  005A92  8093               	bsf	147,0,c	;volatile
  8450                           
  8451                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8452  005A94  9E94               	bcf	148,7,c	;volatile
  8453                           
  8454                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8455  005A96  8A8A               	bsf	138,5,c	;volatile
  8456                           
  8457                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8458  005A98  0E3F               	movlw	63
  8459  005A9A  16C7               	andwf	199,f,c	;volatile
  8460                           
  8461                           ;SPI.c: 57: SSPCON1 = 0x00;
  8462  005A9C  0E00               	movlw	0
  8463  005A9E  6EC6               	movwf	198,c	;volatile
  8464                           
  8465                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8466  005AA0  9EC7               	bcf	199,7,c	;volatile
  8467                           
  8468                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8469  005AA2  8CC7               	bsf	199,6,c	;volatile
  8470                           
  8471                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8472  005AA4  98C6               	bcf	198,4,c	;volatile
  8473                           
  8474                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8475  005AA6  0E03               	movlw	3
  8476  005AA8  6EC6               	movwf	198,c	;volatile
  8477                           
  8478                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8479  005AAA  8AC6               	bsf	198,5,c	;volatile
  8480  005AAC  0012               	return		;funcret
  8481  005AAE                     __end_of_inicializa_SPI:
  8482                           	callstack 0
  8483                           
  8484 ;; *************** function _escrita_sdcard *****************
  8485 ;; Defined at:
  8486 ;;		line 208 in file "bibliotecas/SDCard.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  fix_gps         3    0        PTR unsigned char 
  8491 ;;  bw              2    0        unsigned short 
  8492 ;;  j               1    0        unsigned char 
  8493 ;;  i               1    0        unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/1
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:   14
  8510 ;; This function calls:
  8511 ;;		_data_nome
  8512 ;;		_f_close
  8513 ;;		_f_lseek
  8514 ;;		_f_mount
  8515 ;;		_f_open
  8516 ;;		_fprintf
  8517 ;;		_gps
  8518 ;;		_hora_nome
  8519 ;;		_strcat
  8520 ;; This function is called by:
  8521 ;;		_grava_sd
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text54
  8526  003610                     __ptext54:
  8527                           	callstack 0
  8528  003610                     _escrita_sdcard:
  8529                           	callstack 13
  8530                           
  8531                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 217: f_mount(0,&fs);
  8532                           
  8533                           ;incstack = 0
  8534  003610  0E96               	movlw	low _fs
  8535  003612  6E0A               	movwf	f_mount@fs^0,c
  8536  003614  0E03               	movlw	high _fs
  8537  003616  6E0B               	movwf	(f_mount@fs+1)^0,c
  8538  003618  0E00               	movlw	0
  8539  00361A  ECA8  F029         	call	_f_mount
  8540                           
  8541                           ;SDCard.c: 218: if(!f_fix)
  8542  00361E  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8543  003620  A4D8               	btfss	status,2,c
  8544  003622  D023               	goto	l12938
  8545                           
  8546                           ;SDCard.c: 219: {;SDCard.c: 220: gps();
  8547  003624  EC2E  F02B         	call	_gps	;wreg free
  8548                           
  8549                           ;SDCard.c: 221: if(data[0] != ' ' && hora[0] != ' ')
  8550  003628  0E20               	movlw	32
  8551  00362A  0101               	movlb	1	; () banked
  8552  00362C  19D8               	xorwf	_data& (0+255),w,b
  8553  00362E  B4D8               	btfsc	status,2,c
  8554  003630  D01C               	goto	l12938
  8555                           
  8556                           ; BSR set to: 1
  8557  003632  0E20               	movlw	32
  8558  003634  19CA               	xorwf	_hora& (0+255),w,b
  8559  003636  B4D8               	btfsc	status,2,c
  8560  003638  D018               	goto	l12938
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;SDCard.c: 222: {;SDCard.c: 223: data_nome(data);
  8564  00363A  0ED8               	movlw	low _data
  8565  00363C  6E0A               	movwf	data_nome@p_buff^0,c
  8566  00363E  0E01               	movlw	high _data
  8567  003640  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8568  003642  EC5F  F02C         	call	_data_nome	;wreg free
  8569                           
  8570                           ;SDCard.c: 224: hora_nome(hora);
  8571  003646  0ECA               	movlw	low _hora
  8572  003648  6E0A               	movwf	hora_nome@p_buff^0,c
  8573  00364A  0E01               	movlw	high _hora
  8574  00364C  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8575  00364E  EC35  F02C         	call	_hora_nome	;wreg free
  8576                           
  8577                           ; BSR set to: 1
  8578                           ;SDCard.c: 226: strcat(filename, ".tlm");
  8579  003652  0E56               	movlw	low _filename
  8580  003654  6E0A               	movwf	strcat@to^0,c
  8581  003656  0E02               	movlw	high _filename
  8582  003658  6E0B               	movwf	(strcat@to+1)^0,c
  8583  00365A  0E66               	movlw	low STR_11
  8584  00365C  6E0C               	movwf	strcat@from^0,c
  8585  00365E  0E62               	movlw	high STR_11
  8586  003660  6E0D               	movwf	(strcat@from+1)^0,c
  8587  003662  ECF0  F029         	call	_strcat	;wreg free
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;SDCard.c: 227: f_fix = 1;
  8591  003666  0E01               	movlw	1
  8592  003668  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8593  00366A                     l12938:
  8594                           
  8595                           ;SDCard.c: 228: };SDCard.c: 229: };SDCard.c: 231: if(f_fix)
  8596  00366A  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8597  00366C  B4D8               	btfsc	status,2,c
  8598  00366E  0012               	return	
  8599                           
  8600                           ;SDCard.c: 232: {;SDCard.c: 233: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8601  003670  0E7C               	movlw	low _fil
  8602  003672  0100               	movlb	0	; () banked
  8603  003674  6F98               	movwf	f_open@fp& (0+255),b
  8604  003676  0E01               	movlw	high _fil
  8605  003678  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8606  00367A  0E56               	movlw	low _filename
  8607  00367C  6F9A               	movwf	f_open@path& (0+255),b
  8608  00367E  0E02               	movlw	high _filename
  8609  003680  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8610  003682  0E02               	movlw	2
  8611  003684  6F9C               	movwf	f_open@mode& (0+255),b
  8612  003686  EC66  F009         	call	_f_open	;wreg free
  8613  00368A  0900               	iorlw	0
  8614  00368C  A4D8               	btfss	status,2,c
  8615  00368E  D051               	goto	l12952
  8616                           
  8617                           ;SDCard.c: 234: {;SDCard.c: 236: f_lseek(&fil, ((&fil)->fsize));
  8618  003690  0E7C               	movlw	low _fil
  8619  003692  0100               	movlb	0	; () banked
  8620  003694  6F86               	movwf	f_lseek@fp& (0+255),b
  8621  003696  0E01               	movlw	high _fil
  8622  003698  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  8623  00369A  C186  F088         	movff	_fil+10,f_lseek@ofs
  8624  00369E  C187  F089         	movff	_fil+11,f_lseek@ofs+1
  8625  0036A2  C188  F08A         	movff	_fil+12,f_lseek@ofs+2
  8626  0036A6  C189  F08B         	movff	_fil+13,f_lseek@ofs+3
  8627  0036AA  EC79  F005         	call	_f_lseek	;wreg free
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;SDCard.c: 237: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8631  0036AE  0E7C               	movlw	low _fil
  8632  0036B0  6FB1               	movwf	fprintf@fil& (0+255),b
  8633  0036B2  0E01               	movlw	high _fil
  8634  0036B4  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8635  0036B6  0EA2               	movlw	low STR_12
  8636  0036B8  6FB3               	movwf	fprintf@str& (0+255),b
  8637  0036BA  0E61               	movlw	high STR_12
  8638  0036BC  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8639  0036BE  0EDE               	movlw	low _vel
  8640  0036C0  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8641  0036C2  0E01               	movlw	high _vel
  8642  0036C4  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8643  0036C6  0EB2               	movlw	low _lt
  8644  0036C8  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  8645  0036CA  0E01               	movlw	high _lt
  8646  0036CC  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  8647  0036CE  0E98               	movlw	low _lo
  8648  0036D0  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  8649  0036D2  0E01               	movlw	high _lo
  8650  0036D4  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  8651  0036D6  ECBF  F007         	call	_fprintf	;wreg free
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;SDCard.c: 238: fprintf(&fil, "r0;c0;k0;");
  8655  0036DA  0E7C               	movlw	low _fil
  8656  0036DC  6FB1               	movwf	fprintf@fil& (0+255),b
  8657  0036DE  0E01               	movlw	high _fil
  8658  0036E0  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8659  0036E2  0EFC               	movlw	low STR_13
  8660  0036E4  6FB3               	movwf	fprintf@str& (0+255),b
  8661  0036E6  0E61               	movlw	high STR_13
  8662  0036E8  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8663  0036EA  ECBF  F007         	call	_fprintf	;wreg free
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;SDCard.c: 239: fprintf(&fil, "h%s;dN/A;", hora);
  8667  0036EE  0E7C               	movlw	low _fil
  8668  0036F0  6FB1               	movwf	fprintf@fil& (0+255),b
  8669  0036F2  0E01               	movlw	high _fil
  8670  0036F4  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8671  0036F6  0E06               	movlw	low STR_14
  8672  0036F8  6FB3               	movwf	fprintf@str& (0+255),b
  8673  0036FA  0E62               	movlw	high STR_14
  8674  0036FC  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8675  0036FE  0ECA               	movlw	low _hora
  8676  003700  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8677  003702  0E01               	movlw	high _hora
  8678  003704  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8679  003706  ECBF  F007         	call	_fprintf	;wreg free
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;SDCard.c: 240: fprintf(&fil, "f%c;\n", fence);
  8683  00370A  0E7C               	movlw	low _fil
  8684  00370C  6FB1               	movwf	fprintf@fil& (0+255),b
  8685  00370E  0E01               	movlw	high _fil
  8686  003710  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8687  003712  0E56               	movlw	low STR_15
  8688  003714  6FB3               	movwf	fprintf@str& (0+255),b
  8689  003716  0E62               	movlw	high STR_15
  8690  003718  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8691  00371A  C0F5  F0B5         	movff	_fence,?_fprintf+4
  8692  00371E  6BB6               	clrf	(?_fprintf+5)& (0+255),b
  8693  003720  ECBF  F007         	call	_fprintf	;wreg free
  8694                           
  8695                           ;SDCard.c: 243: f_close(&fil);
  8696  003724  0E7C               	movlw	low _fil
  8697  003726  6F69               	movwf	f_close@fp& (0+255),b
  8698  003728  0E01               	movlw	high _fil
  8699  00372A  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8700  00372C  EC1F  F02C         	call	_f_close	;wreg free
  8701                           
  8702                           ;SDCard.c: 244: }
  8703  003730  0012               	return	
  8704  003732                     l12952:
  8705                           
  8706                           ;SDCard.c: 245: else;SDCard.c: 246: {;SDCard.c: 247: f_open(&fil, filename, 0x08 );
  8707  003732  0E7C               	movlw	low _fil
  8708  003734  0100               	movlb	0	; () banked
  8709  003736  6F98               	movwf	f_open@fp& (0+255),b
  8710  003738  0E01               	movlw	high _fil
  8711  00373A  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8712  00373C  0E56               	movlw	low _filename
  8713  00373E  6F9A               	movwf	f_open@path& (0+255),b
  8714  003740  0E02               	movlw	high _filename
  8715  003742  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8716  003744  0E08               	movlw	8
  8717  003746  6F9C               	movwf	f_open@mode& (0+255),b
  8718  003748  EC66  F009         	call	_f_open	;wreg free
  8719                           
  8720                           ;SDCard.c: 248: f_close(&fil);
  8721  00374C  0E7C               	movlw	low _fil
  8722  00374E  0100               	movlb	0	; () banked
  8723  003750  6F69               	movwf	f_close@fp& (0+255),b
  8724  003752  0E01               	movlw	high _fil
  8725  003754  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8726  003756  EC1F  F02C         	call	_f_close	;wreg free
  8727  00375A  0012               	return		;funcret
  8728  00375C                     __end_of_escrita_sdcard:
  8729                           	callstack 0
  8730                           
  8731 ;; *************** function _strcat *****************
  8732 ;; Defined at:
  8733 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  to              2    9[COMRAM] PTR unsigned char 
  8736 ;;		 -> filename(20), 
  8737 ;;  from            2   11[COMRAM] PTR const unsigned char 
  8738 ;;		 -> STR_11(5), 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  cp              2   13[COMRAM] PTR unsigned char 
  8741 ;;		 -> filename(20), 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  2    9[COMRAM] PTR unsigned char 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8746 ;; Tracked objects:
  8747 ;;		On entry : 3F/1
  8748 ;;		On exit  : 3F/1
  8749 ;;		Unchanged: 3F/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8751 ;;      Params:         4       0       0       0       0       0       0       0       0
  8752 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8754 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8755 ;;Total ram usage:        6 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    2
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_escrita_sdcard
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text55
  8766  0053E0                     __ptext55:
  8767                           	callstack 0
  8768  0053E0                     _strcat:
  8769                           	callstack 24
  8770                           
  8771                           ; BSR set to: 1
  8772                           
  8773                           ;incstack = 0
  8774  0053E0  C00A  F00E         	movff	strcat@to,strcat@cp
  8775  0053E4  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  8776  0053E8  D002               	goto	l12396
  8777  0053EA                     l12394:
  8778                           
  8779                           ; BSR set to: 1
  8780  0053EA  4A0E               	infsnz	strcat@cp^0,f,c
  8781  0053EC  2A0F               	incf	(strcat@cp+1)^0,f,c
  8782  0053EE                     l12396:
  8783                           
  8784                           ; BSR set to: 1
  8785  0053EE  C00E  FFD9         	movff	strcat@cp,fsr2l
  8786  0053F2  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8787  0053F6  50DF               	movf	indf2,w,c
  8788  0053F8  B4D8               	btfsc	status,2,c
  8789  0053FA  D005               	goto	l12400
  8790  0053FC  D7F6               	goto	l12394
  8791  0053FE                     l12398:
  8792                           
  8793                           ; BSR set to: 1
  8794  0053FE  4A0E               	infsnz	strcat@cp^0,f,c
  8795  005400  2A0F               	incf	(strcat@cp+1)^0,f,c
  8796  005402  4A0C               	infsnz	strcat@from^0,f,c
  8797  005404  2A0D               	incf	(strcat@from+1)^0,f,c
  8798  005406                     l12400:
  8799                           
  8800                           ; BSR set to: 1
  8801  005406  C00C  FFF6         	movff	strcat@from,tblptrl
  8802  00540A  C00D  FFF7         	movff	strcat@from+1,tblptrh
  8803  00540E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8804  00540E  6AF8               	clrf	tblptru,c
  8805  005410                     	endif
  8806  005410                     	if	0	;tblptru may be non-zero
  8807  005410                     	endif
  8808  005410  C00E  FFD9         	movff	strcat@cp,fsr2l
  8809  005414  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8810  005418  0008               	tblrd		*
  8811  00541A  CFF5 FFDF          	movff	tablat,indf2
  8812  00541E  50DF               	movf	indf2,w,c
  8813  005420  B4D8               	btfsc	status,2,c
  8814  005422  0012               	return	
  8815  005424  D7EC               	goto	l12398
  8816  005426                     __end_of_strcat:
  8817                           	callstack 0
  8818                           
  8819 ;; *************** function _hora_nome *****************
  8820 ;; Defined at:
  8821 ;;		line 414 in file "bibliotecas/SDCard.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  8824 ;;		 -> hora(7), 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  i               1   11[COMRAM] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 3F/1
  8833 ;;		On exit  : 3F/1
  8834 ;;		Unchanged: 3F/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8836 ;;      Params:         2       0       0       0       0       0       0       0       0
  8837 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8839 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8840 ;;Total ram usage:        3 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    2
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_escrita_sdcard
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text56
  8851  00586A                     __ptext56:
  8852                           	callstack 0
  8853  00586A                     _hora_nome:
  8854                           	callstack 24
  8855                           
  8856                           ; BSR set to: 1
  8857                           ;SDCard.c: 416: unsigned char i;;SDCard.c: 417: for(i=4; i<8;i++)
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;incstack = 0
  8861  00586A  0E04               	movlw	4
  8862  00586C  6E0C               	movwf	hora_nome@i^0,c
  8863  00586E                     l12384:
  8864                           
  8865                           ; BSR set to: 1
  8866                           ;SDCard.c: 418: {;SDCard.c: 419: filename[i] = *p_buff;
  8867  00586E  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  8868  005872  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  8869  005876  0E56               	movlw	low _filename
  8870  005878  240C               	addwf	hora_nome@i^0,w,c
  8871  00587A  6EE1               	movwf	fsr1l,c
  8872  00587C  6AE2               	clrf	fsr1h,c
  8873  00587E  0E02               	movlw	high _filename
  8874  005880  22E2               	addwfc	fsr1h,f,c
  8875  005882  CFDF FFE7          	movff	indf2,indf1
  8876                           
  8877                           ; BSR set to: 1
  8878                           ;SDCard.c: 420: p_buff++;
  8879  005886  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  8880  005888  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  8881                           
  8882                           ; BSR set to: 1
  8883  00588A  2A0C               	incf	hora_nome@i^0,f,c
  8884                           
  8885                           ; BSR set to: 1
  8886  00588C  0E07               	movlw	7
  8887  00588E  640C               	cpfsgt	hora_nome@i^0,c
  8888  005890  D7EE               	goto	l12384
  8889  005892  0012               	return	
  8890  005894                     __end_of_hora_nome:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function _gps *****************
  8894 ;; Defined at:
  8895 ;;		line 92 in file "bibliotecas/GPS.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  flag_fix        2   12[COMRAM] PTR unsigned char 
  8900 ;;		 -> rawFix(2), 
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0
  8911 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8912 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8913 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8914 ;;Total ram usage:        3 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:    3
  8917 ;; This function calls:
  8918 ;;		_fix
  8919 ;;		_get_fix
  8920 ;;		_get_gpstime
  8921 ;;		_get_latitude
  8922 ;;		_get_longitude
  8923 ;;		_get_rawdate
  8924 ;;		_get_rawspeed
  8925 ;; This function is called by:
  8926 ;;		_escrita_sdcard
  8927 ;;		_main
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text57
  8932  00565C                     __ptext57:
  8933                           	callstack 0
  8934  00565C                     _gps:
  8935                           	callstack 27
  8936                           
  8937                           ;GPS.c: 94: unsigned char *flag_fix;;GPS.c: 95: get_fix();
  8938                           
  8939                           ; BSR set to: 1
  8940                           ;incstack = 0
  8941  00565C  EC94  F02B         	call	_get_fix	;wreg free
  8942                           
  8943                           ;GPS.c: 96: flag_fix = fix();
  8944  005660  EC29  F02E         	call	_fix	;wreg free
  8945  005664  C00A  F00D         	movff	?_fix,gps@flag_fix
  8946  005668  C00B  F00E         	movff	?_fix+1,gps@flag_fix+1
  8947                           
  8948                           ;GPS.c: 97: if(flag_fix[0] == '1')
  8949  00566C  C00D  FFD9         	movff	gps@flag_fix,fsr2l
  8950  005670  C00E  FFDA         	movff	gps@flag_fix+1,fsr2h
  8951  005674  0E31               	movlw	49
  8952  005676  18DE               	xorwf	postinc2,w,c
  8953  005678  A4D8               	btfss	status,2,c
  8954  00567A  0012               	return	
  8955                           
  8956                           ;GPS.c: 98: {;GPS.c: 99: get_gpstime();
  8957  00567C  EC4A  F02C         	call	_get_gpstime	;wreg free
  8958                           
  8959                           ;GPS.c: 100: get_latitude();
  8960  005680  EC84  F029         	call	_get_latitude	;wreg free
  8961                           
  8962                           ;GPS.c: 101: get_longitude();
  8963  005684  EC60  F029         	call	_get_longitude	;wreg free
  8964                           
  8965                           ;GPS.c: 102: get_rawdate();
  8966  005688  EC7C  F02B         	call	_get_rawdate	;wreg free
  8967                           
  8968                           ;GPS.c: 103: get_rawspeed();
  8969  00568C  EC64  F02B         	call	_get_rawspeed	;wreg free
  8970  005690  0012               	return		;funcret
  8971  005692                     __end_of_gps:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _get_rawspeed *****************
  8975 ;; Defined at:
  8976 ;;		line 310 in file "bibliotecas/GPS.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  index           1   10[COMRAM] unsigned char 
  8981 ;;  index_speed     1    9[COMRAM] unsigned char 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8986 ;; Tracked objects:
  8987 ;;		On entry : 3F/1
  8988 ;;		On exit  : 3F/1
  8989 ;;		Unchanged: 3F/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0
  8992 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8994 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8995 ;;Total ram usage:        2 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    2
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_gps
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text58
  9006  0056C8                     __ptext58:
  9007                           	callstack 0
  9008  0056C8                     _get_rawspeed:
  9009                           	callstack 27
  9010                           
  9011                           ; BSR set to: 1
  9012                           ;GPS.c: 312: unsigned char index_speed, index;;GPS.c: 314: index_speed = 0;
  9013                           
  9014                           ;incstack = 0
  9015  0056C8  0E00               	movlw	0
  9016  0056CA  6E0A               	movwf	get_rawspeed@index_speed^0,c
  9017                           
  9018                           ;GPS.c: 316: for(index = 39; index<44; index++)
  9019  0056CC  0E27               	movlw	39
  9020  0056CE  6E0B               	movwf	get_rawspeed@index^0,c
  9021  0056D0                     l11710:
  9022                           
  9023                           ; BSR set to: 1
  9024                           ;GPS.c: 317: {;GPS.c: 318: rawSpeed[index_speed] = rmc_buffer[index];
  9025  0056D0  0E50               	movlw	low _rmc_buffer
  9026  0056D2  240B               	addwf	get_rawspeed@index^0,w,c
  9027  0056D4  6ED9               	movwf	fsr2l,c
  9028  0056D6  6ADA               	clrf	fsr2h,c
  9029  0056D8  0E03               	movlw	high _rmc_buffer
  9030  0056DA  22DA               	addwfc	fsr2h,f,c
  9031  0056DC  0E6A               	movlw	low _rawSpeed
  9032  0056DE  240A               	addwf	get_rawspeed@index_speed^0,w,c
  9033  0056E0  6EE1               	movwf	fsr1l,c
  9034  0056E2  6AE2               	clrf	fsr1h,c
  9035  0056E4  0E02               	movlw	high _rawSpeed
  9036  0056E6  22E2               	addwfc	fsr1h,f,c
  9037  0056E8  CFDF FFE7          	movff	indf2,indf1
  9038                           
  9039                           ; BSR set to: 1
  9040                           ;GPS.c: 319: index_speed++;
  9041  0056EC  2A0A               	incf	get_rawspeed@index_speed^0,f,c
  9042                           
  9043                           ; BSR set to: 1
  9044  0056EE  2A0B               	incf	get_rawspeed@index^0,f,c
  9045                           
  9046                           ; BSR set to: 1
  9047  0056F0  0E2B               	movlw	43
  9048  0056F2  640B               	cpfsgt	get_rawspeed@index^0,c
  9049  0056F4  D7ED               	goto	l11710
  9050  0056F6  0012               	return	
  9051  0056F8                     __end_of_get_rawspeed:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function _get_rawdate *****************
  9055 ;; Defined at:
  9056 ;;		line 295 in file "bibliotecas/GPS.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;		None
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  index           1   10[COMRAM] unsigned char 
  9061 ;;  index_date      1    9[COMRAM] unsigned char 
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 3F/1
  9068 ;;		On exit  : 3F/1
  9069 ;;		Unchanged: 3F/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0
  9072 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9074 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9075 ;;Total ram usage:        2 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    2
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_gps
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text59
  9086  0056F8                     __ptext59:
  9087                           	callstack 0
  9088  0056F8                     _get_rawdate:
  9089                           	callstack 27
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;GPS.c: 297: unsigned char index_date, index;;GPS.c: 299: index_date = 0;
  9093                           
  9094                           ; BSR set to: 1
  9095                           ;incstack = 0
  9096  0056F8  0E00               	movlw	0
  9097  0056FA  6E0A               	movwf	get_rawdate@index_date^0,c
  9098                           
  9099                           ;GPS.c: 301: for(index = 46; index<52; index++)
  9100  0056FC  0E2E               	movlw	46
  9101  0056FE  6E0B               	movwf	get_rawdate@index^0,c
  9102  005700                     l11696:
  9103                           
  9104                           ; BSR set to: 1
  9105                           ;GPS.c: 302: {;GPS.c: 303: rawDate[index_date] = rmc_buffer[index];
  9106  005700  0E50               	movlw	low _rmc_buffer
  9107  005702  240B               	addwf	get_rawdate@index^0,w,c
  9108  005704  6ED9               	movwf	fsr2l,c
  9109  005706  6ADA               	clrf	fsr2h,c
  9110  005708  0E03               	movlw	high _rmc_buffer
  9111  00570A  22DA               	addwfc	fsr2h,f,c
  9112  00570C  0EE4               	movlw	low _rawDate
  9113  00570E  240A               	addwf	get_rawdate@index_date^0,w,c
  9114  005710  6EE1               	movwf	fsr1l,c
  9115  005712  6AE2               	clrf	fsr1h,c
  9116  005714  0E01               	movlw	high _rawDate
  9117  005716  22E2               	addwfc	fsr1h,f,c
  9118  005718  CFDF FFE7          	movff	indf2,indf1
  9119                           
  9120                           ; BSR set to: 1
  9121                           ;GPS.c: 304: index_date++;
  9122  00571C  2A0A               	incf	get_rawdate@index_date^0,f,c
  9123                           
  9124                           ; BSR set to: 1
  9125  00571E  2A0B               	incf	get_rawdate@index^0,f,c
  9126                           
  9127                           ; BSR set to: 1
  9128  005720  0E33               	movlw	51
  9129  005722  640B               	cpfsgt	get_rawdate@index^0,c
  9130  005724  D7ED               	goto	l11696
  9131  005726  0012               	return	
  9132  005728                     __end_of_get_rawdate:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function _get_longitude *****************
  9136 ;; Defined at:
  9137 ;;		line 273 in file "bibliotecas/GPS.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;		None
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  index           1   10[COMRAM] unsigned char 
  9142 ;;  index_long      1    9[COMRAM] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 3F/1
  9149 ;;		On exit  : 3F/1
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0
  9153 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9155 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9156 ;;Total ram usage:        2 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    2
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_gps
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text60
  9167  0052C0                     __ptext60:
  9168                           	callstack 0
  9169  0052C0                     _get_longitude:
  9170                           	callstack 27
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;GPS.c: 275: unsigned char index_long, index;;GPS.c: 277: index_long = 1;
  9174                           
  9175                           ; BSR set to: 1
  9176                           ;incstack = 0
  9177  0052C0  0E01               	movlw	1
  9178  0052C2  6E0A               	movwf	get_longitude@index_long^0,c
  9179                           
  9180                           ;GPS.c: 279: for(index = 23; index<34; index++)
  9181  0052C4  0E17               	movlw	23
  9182  0052C6  6E0B               	movwf	get_longitude@index^0,c
  9183  0052C8                     l11676:
  9184                           
  9185                           ; BSR set to: 1
  9186                           ;GPS.c: 280: {;GPS.c: 281: rawLongitude[index_long] = gga_buffer[index];
  9187  0052C8  0E00               	movlw	low _gga_buffer
  9188  0052CA  240B               	addwf	get_longitude@index^0,w,c
  9189  0052CC  6ED9               	movwf	fsr2l,c
  9190  0052CE  6ADA               	clrf	fsr2h,c
  9191  0052D0  0E03               	movlw	high _gga_buffer
  9192  0052D2  22DA               	addwfc	fsr2h,f,c
  9193  0052D4  0EA5               	movlw	low _rawLongitude
  9194  0052D6  240A               	addwf	get_longitude@index_long^0,w,c
  9195  0052D8  6EE1               	movwf	fsr1l,c
  9196  0052DA  6AE2               	clrf	fsr1h,c
  9197  0052DC  0E01               	movlw	high _rawLongitude
  9198  0052DE  22E2               	addwfc	fsr1h,f,c
  9199  0052E0  CFDF FFE7          	movff	indf2,indf1
  9200                           
  9201                           ; BSR set to: 1
  9202                           ;GPS.c: 282: index_long++;
  9203  0052E4  2A0A               	incf	get_longitude@index_long^0,f,c
  9204                           
  9205                           ; BSR set to: 1
  9206  0052E6  2A0B               	incf	get_longitude@index^0,f,c
  9207                           
  9208                           ; BSR set to: 1
  9209  0052E8  0E21               	movlw	33
  9210  0052EA  640B               	cpfsgt	get_longitude@index^0,c
  9211  0052EC  D7ED               	goto	l11676
  9212                           
  9213                           ; BSR set to: 1
  9214                           ;GPS.c: 283: };GPS.c: 284: if(gga_buffer[32] == 'E')
  9215  0052EE  0E45               	movlw	69
  9216  0052F0  0103               	movlb	3	; () banked
  9217  0052F2  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  9218  0052F4  A4D8               	btfss	status,2,c
  9219  0052F6  D004               	goto	l11688
  9220                           
  9221                           ; BSR set to: 3
  9222                           ;GPS.c: 285: {;GPS.c: 286: rawLongitude[0] = '0';
  9223  0052F8  0E30               	movlw	48
  9224  0052FA  0101               	movlb	1	; () banked
  9225  0052FC  6FA5               	movwf	_rawLongitude& (0+255),b
  9226                           
  9227                           ;GPS.c: 287: }
  9228  0052FE  0012               	return	
  9229  005300                     l11688:
  9230                           
  9231                           ; BSR set to: 3
  9232                           ;GPS.c: 288: else;GPS.c: 289: {;GPS.c: 290: rawLongitude[0] = '-';
  9233  005300  0E2D               	movlw	45
  9234  005302  0101               	movlb	1	; () banked
  9235  005304  6FA5               	movwf	_rawLongitude& (0+255),b
  9236                           
  9237                           ; BSR set to: 1
  9238  005306  0012               	return		;funcret
  9239  005308                     __end_of_get_longitude:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _get_latitude *****************
  9243 ;; Defined at:
  9244 ;;		line 249 in file "bibliotecas/GPS.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  time_buffer    15    0        unsigned char [15]
  9249 ;;  index           1   10[COMRAM] unsigned char 
  9250 ;;  index_lat       1    9[COMRAM] unsigned char 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      void 
  9253 ;; Registers used:
  9254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 3F/1
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9260 ;;      Params:         0       0       0       0       0       0       0       0       0
  9261 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9263 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9264 ;;Total ram usage:        2 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    2
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_gps
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text61
  9275  005308                     __ptext61:
  9276                           	callstack 0
  9277  005308                     _get_latitude:
  9278                           	callstack 27
  9279                           
  9280                           ;GPS.c: 251: unsigned char index_lat, index;;GPS.c: 252: unsigned char time_buffer[15];;
      +                          GPS.c: 254: index_lat = 1;
  9281                           
  9282                           ; BSR set to: 1
  9283                           ;incstack = 0
  9284  005308  0E01               	movlw	1
  9285  00530A  6E0A               	movwf	get_latitude@index_lat^0,c
  9286                           
  9287                           ;GPS.c: 256: for(index = 10; index<20; index++)
  9288  00530C  0E0A               	movlw	10
  9289  00530E  6E0B               	movwf	get_latitude@index^0,c
  9290  005310                     l11656:
  9291                           
  9292                           ;GPS.c: 257: {;GPS.c: 258: rawLatitude[index_lat] = gga_buffer[index];
  9293  005310  0E00               	movlw	low _gga_buffer
  9294  005312  240B               	addwf	get_latitude@index^0,w,c
  9295  005314  6ED9               	movwf	fsr2l,c
  9296  005316  6ADA               	clrf	fsr2h,c
  9297  005318  0E03               	movlw	high _gga_buffer
  9298  00531A  22DA               	addwfc	fsr2h,f,c
  9299  00531C  0EBE               	movlw	low _rawLatitude
  9300  00531E  240A               	addwf	get_latitude@index_lat^0,w,c
  9301  005320  6EE1               	movwf	fsr1l,c
  9302  005322  6AE2               	clrf	fsr1h,c
  9303  005324  0E01               	movlw	high _rawLatitude
  9304  005326  22E2               	addwfc	fsr1h,f,c
  9305  005328  CFDF FFE7          	movff	indf2,indf1
  9306                           
  9307                           ;GPS.c: 259: index_lat++;
  9308  00532C  2A0A               	incf	get_latitude@index_lat^0,f,c
  9309  00532E  2A0B               	incf	get_latitude@index^0,f,c
  9310  005330  0E13               	movlw	19
  9311  005332  640B               	cpfsgt	get_latitude@index^0,c
  9312  005334  D7ED               	goto	l11656
  9313                           
  9314                           ;GPS.c: 260: };GPS.c: 261: if(gga_buffer[21] == 'N')
  9315  005336  0E4E               	movlw	78
  9316  005338  0103               	movlb	3	; () banked
  9317  00533A  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  9318  00533C  A4D8               	btfss	status,2,c
  9319  00533E  D004               	goto	l11668
  9320                           
  9321                           ; BSR set to: 3
  9322                           ;GPS.c: 262: {;GPS.c: 263: rawLatitude[0] = '0';
  9323  005340  0E30               	movlw	48
  9324  005342  0101               	movlb	1	; () banked
  9325  005344  6FBE               	movwf	_rawLatitude& (0+255),b
  9326                           
  9327                           ;GPS.c: 264: }
  9328  005346  0012               	return	
  9329  005348                     l11668:
  9330                           
  9331                           ; BSR set to: 3
  9332                           ;GPS.c: 265: else;GPS.c: 266: {;GPS.c: 267: rawLatitude[0] = '-';
  9333  005348  0E2D               	movlw	45
  9334  00534A  0101               	movlb	1	; () banked
  9335  00534C  6FBE               	movwf	_rawLatitude& (0+255),b
  9336                           
  9337                           ; BSR set to: 1
  9338  00534E  0012               	return		;funcret
  9339  005350                     __end_of_get_latitude:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function _get_gpstime *****************
  9343 ;; Defined at:
  9344 ;;		line 229 in file "bibliotecas/GPS.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  time_buffer    15    0        unsigned char [15]
  9349 ;;  index           1    9[COMRAM] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0
  9360 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9362 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9363 ;;Total ram usage:        1 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    2
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_gps
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text62
  9374  005894                     __ptext62:
  9375                           	callstack 0
  9376  005894                     _get_gpstime:
  9377                           	callstack 27
  9378                           
  9379                           ;GPS.c: 231: unsigned char index;;GPS.c: 232: unsigned char time_buffer[15];;GPS.c: 236:
      +                           for(index = 0; index<6; index++)
  9380                           
  9381                           ; BSR set to: 1
  9382                           ;incstack = 0
  9383  005894  0E00               	movlw	0
  9384  005896  6E0A               	movwf	get_gpstime@index^0,c
  9385  005898                     l11644:
  9386                           
  9387                           ;GPS.c: 237: {;GPS.c: 238: rawTime[index] = gga_buffer[index];
  9388  005898  0E00               	movlw	low _gga_buffer
  9389  00589A  240A               	addwf	get_gpstime@index^0,w,c
  9390  00589C  6ED9               	movwf	fsr2l,c
  9391  00589E  6ADA               	clrf	fsr2h,c
  9392  0058A0  0E03               	movlw	high _gga_buffer
  9393  0058A2  22DA               	addwfc	fsr2h,f,c
  9394  0058A4  0ED1               	movlw	low _rawTime
  9395  0058A6  240A               	addwf	get_gpstime@index^0,w,c
  9396  0058A8  6EE1               	movwf	fsr1l,c
  9397  0058AA  6AE2               	clrf	fsr1h,c
  9398  0058AC  0E01               	movlw	high _rawTime
  9399  0058AE  22E2               	addwfc	fsr1h,f,c
  9400  0058B0  CFDF FFE7          	movff	indf2,indf1
  9401  0058B4  2A0A               	incf	get_gpstime@index^0,f,c
  9402  0058B6  0E05               	movlw	5
  9403  0058B8  640A               	cpfsgt	get_gpstime@index^0,c
  9404  0058BA  D7EE               	goto	l11644
  9405  0058BC  0012               	return	
  9406  0058BE                     __end_of_get_gpstime:
  9407                           	callstack 0
  9408                           
  9409 ;; *************** function _get_fix *****************
  9410 ;; Defined at:
  9411 ;;		line 324 in file "bibliotecas/GPS.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  index           1   10[COMRAM] unsigned char 
  9416 ;;  index_fix       1    9[COMRAM] unsigned char 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  1    wreg      void 
  9419 ;; Registers used:
  9420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9426 ;;      Params:         0       0       0       0       0       0       0       0       0
  9427 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9429 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9430 ;;Total ram usage:        2 bytes
  9431 ;; Hardware stack levels used:    1
  9432 ;; Hardware stack levels required when called:    2
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_gps
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text63
  9441  005728                     __ptext63:
  9442                           	callstack 0
  9443  005728                     _get_fix:
  9444                           	callstack 27
  9445                           
  9446                           ;GPS.c: 326: unsigned char index_fix, index;;GPS.c: 328: index_fix = 0;
  9447                           
  9448                           ;incstack = 0
  9449  005728  0E00               	movlw	0
  9450  00572A  6E0A               	movwf	get_fix@index_fix^0,c
  9451                           
  9452                           ;GPS.c: 330: for(index = 37; index<39; index++)
  9453  00572C  0E25               	movlw	37
  9454  00572E  6E0B               	movwf	get_fix@index^0,c
  9455  005730                     l11626:
  9456                           
  9457                           ;GPS.c: 331: {;GPS.c: 332: rawFix[index_fix] = gga_buffer[index];
  9458  005730  0E00               	movlw	low _gga_buffer
  9459  005732  240B               	addwf	get_fix@index^0,w,c
  9460  005734  6ED9               	movwf	fsr2l,c
  9461  005736  6ADA               	clrf	fsr2h,c
  9462  005738  0E03               	movlw	high _gga_buffer
  9463  00573A  22DA               	addwfc	fsr2h,f,c
  9464  00573C  0EEA               	movlw	low _rawFix
  9465  00573E  240A               	addwf	get_fix@index_fix^0,w,c
  9466  005740  6EE1               	movwf	fsr1l,c
  9467  005742  6AE2               	clrf	fsr1h,c
  9468  005744  0E01               	movlw	high _rawFix
  9469  005746  22E2               	addwfc	fsr1h,f,c
  9470  005748  CFDF FFE7          	movff	indf2,indf1
  9471                           
  9472                           ;GPS.c: 333: index_fix++;
  9473  00574C  2A0A               	incf	get_fix@index_fix^0,f,c
  9474  00574E  2A0B               	incf	get_fix@index^0,f,c
  9475  005750  0E26               	movlw	38
  9476  005752  640B               	cpfsgt	get_fix@index^0,c
  9477  005754  D7ED               	goto	l11626
  9478  005756  0012               	return	
  9479  005758                     __end_of_get_fix:
  9480                           	callstack 0
  9481                           
  9482 ;; *************** function _fix *****************
  9483 ;; Defined at:
  9484 ;;		line 679 in file "bibliotecas/GPS.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;		None
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  2    9[COMRAM] PTR unsigned char 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9498 ;;      Params:         2       0       0       0       0       0       0       0       0
  9499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9502 ;;Total ram usage:        2 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    2
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_gps
  9509 ;;		_disparo_gravacao
  9510 ;;		_troca_de_tela
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text64
  9515  005C52                     __ptext64:
  9516                           	callstack 0
  9517  005C52                     _fix:
  9518                           	callstack 27
  9519                           
  9520                           ;GPS.c: 681: return rawFix;
  9521                           
  9522                           ;incstack = 0
  9523  005C52  0EEA               	movlw	low _rawFix
  9524  005C54  6E0A               	movwf	?_fix^0,c
  9525  005C56  0E01               	movlw	high _rawFix
  9526  005C58  6E0B               	movwf	(?_fix+1)^0,c
  9527  005C5A  0012               	return		;funcret
  9528  005C5C                     __end_of_fix:
  9529                           	callstack 0
  9530                           
  9531 ;; *************** function _fprintf *****************
  9532 ;; Defined at:
  9533 ;;		line 1816 in file "bibliotecas/tff.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9536 ;;		 -> fil(28), 
  9537 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9538 ;;		 -> STR_15(6), STR_14(10), STR_13(10), STR_12(15), 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  s              16   93[BANK0 ] unsigned char [16]
  9541 ;;  val             4  117[BANK0 ] unsigned long 
  9542 ;;  i               2  124[BANK0 ] int 
  9543 ;;  cc              2  122[BANK0 ] int 
  9544 ;;  w               2  113[BANK0 ] int 
  9545 ;;  res             2  109[BANK0 ] int 
  9546 ;;  c               1  126[BANK0 ] unsigned char 
  9547 ;;  arp             1  121[BANK0 ] PTR void [1]
  9548 ;;		 -> ?_fprintf(2), 
  9549 ;;  r               1  116[BANK0 ] unsigned char 
  9550 ;;  f               1  115[BANK0 ] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2   81[BANK0 ] int 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 3F/0
  9557 ;;		On exit  : 3F/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9560 ;;      Params:         0      10       0       0       0       0       0       0       0
  9561 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9562 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9563 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9564 ;;Total ram usage:       46 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:   13
  9567 ;; This function calls:
  9568 ;;		___lldiv
  9569 ;;		___llmod
  9570 ;;		___wmul
  9571 ;;		_fputc
  9572 ;;		_fputs
  9573 ;; This function is called by:
  9574 ;;		_escrita_sdcard
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text65
  9579  000F7E                     __ptext65:
  9580                           	callstack 0
  9581  000F7E                     _fprintf:
  9582                           	callstack 13
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9586                           
  9587                           ;incstack = 0
  9588  000F7E  0EB5               	movlw	low (?_fprintf+4)
  9589  000F80  6FD9               	movwf	fprintf@arp& (0+255),b
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9593  000F82  0E00               	movlw	0
  9594  000F84  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9595  000F86  0E00               	movlw	0
  9596  000F88  6FCD               	movwf	fprintf@res& (0+255),b
  9597  000F8A  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9598  000F8E  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9599  000F92                     l12486:
  9600                           
  9601                           ; BSR set to: 0
  9602  000F92  29DA               	incf	fprintf@cc& (0+255),w,b
  9603  000F94  E103               	bnz	l12490
  9604  000F96  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9605  000F98  B4D8               	btfsc	status,2,c
  9606  000F9A  0012               	return	
  9607  000F9C                     l12490:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;tff.c: 1832: c = *str++;
  9611  000F9C  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9612  000FA0  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9613  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9614  000FA4  6AF8               	clrf	tblptru,c
  9615  000FA6                     	endif
  9616  000FA6                     	if	0	;tblptru may be non-zero
  9617  000FA6                     	endif
  9618  000FA6  0008               	tblrd		*
  9619  000FA8  CFF5 F0DE          	movff	tablat,fprintf@c
  9620                           
  9621                           ; BSR set to: 0
  9622  000FAC  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9623  000FAE  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;tff.c: 1833: if (c == 0) break;
  9627  000FB0  51DE               	movf	fprintf@c& (0+255),w,b
  9628  000FB2  B4D8               	btfsc	status,2,c
  9629  000FB4  0012               	return	
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;tff.c: 1834: if (c != '%') {
  9633  000FB6  0E25               	movlw	37
  9634  000FB8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9635  000FBA  B4D8               	btfsc	status,2,c
  9636  000FBC  D017               	goto	l12506
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;tff.c: 1835: cc = fputc(c, fil);
  9640  000FBE  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9641  000FC2  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9642  000FC4  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9643  000FC8  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9644  000FCC  EC98  F02A         	call	_fputc	;wreg free
  9645  000FD0  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9646  000FD4  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9650  000FD8  29DA               	incf	fprintf@cc& (0+255),w,b
  9651  000FDA  E103               	bnz	u14690
  9652  000FDC  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9653  000FDE  B4D8               	btfsc	status,2,c
  9654  000FE0  D170               	goto	l12630
  9655  000FE2                     u14690:
  9656                           
  9657                           ; BSR set to: 0
  9658  000FE2  0E00               	movlw	0
  9659  000FE4  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9660  000FE6  0E01               	movlw	1
  9661  000FE8  6FDA               	movwf	fprintf@cc& (0+255),b
  9662  000FEA  D16B               	goto	l12630
  9663  000FEC                     l12506:
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9667  000FEC  0E00               	movlw	0
  9668  000FEE  6FD3               	movwf	fprintf@f& (0+255),b
  9669  000FF0  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9670  000FF4  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;tff.c: 1840: c = *str++;
  9674  000FF6  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9675  000FFA  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9676  000FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9677  000FFE  6AF8               	clrf	tblptru,c
  9678  001000                     	endif
  9679  001000                     	if	0	;tblptru may be non-zero
  9680  001000                     	endif
  9681  001000  0008               	tblrd		*
  9682  001002  CFF5 F0DE          	movff	tablat,fprintf@c
  9683                           
  9684                           ; BSR set to: 0
  9685  001006  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9686  001008  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;tff.c: 1841: if (c == '0') {
  9690  00100A  0E30               	movlw	48
  9691  00100C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9692  00100E  A4D8               	btfss	status,2,c
  9693  001010  D023               	goto	l12526
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;tff.c: 1842: f = 1; c = *str++;
  9697  001012  0E01               	movlw	1
  9698  001014  6FD3               	movwf	fprintf@f& (0+255),b
  9699  001016                     l12516:
  9700                           
  9701                           ; BSR set to: 0
  9702  001016  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9703  00101A  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9704  00101E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9705  00101E  6AF8               	clrf	tblptru,c
  9706  001020                     	endif
  9707  001020                     	if	0	;tblptru may be non-zero
  9708  001020                     	endif
  9709  001020  0008               	tblrd		*
  9710  001022  CFF5 F0DE          	movff	tablat,fprintf@c
  9711                           
  9712                           ; BSR set to: 0
  9713  001026  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9714  001028  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9715  00102A  D016               	goto	l12526
  9716  00102C                     l12520:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9720  00102C  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9721  001030  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9722  001034  0E00               	movlw	0
  9723  001036  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9724  001038  0E0A               	movlw	10
  9725  00103A  6E0C               	movwf	___wmul@multiplicand^0,c
  9726  00103C  EC9B  F02C         	call	___wmul	;wreg free
  9727  001040  0100               	movlb	0	; () banked
  9728  001042  51DE               	movf	fprintf@c& (0+255),w,b
  9729  001044  260A               	addwf	?___wmul^0,f,c
  9730  001046  0E00               	movlw	0
  9731  001048  220B               	addwfc	(?___wmul+1)^0,f,c
  9732  00104A  0ED0               	movlw	208
  9733  00104C  240A               	addwf	?___wmul^0,w,c
  9734  00104E  6FD1               	movwf	fprintf@w& (0+255),b
  9735  001050  0EFF               	movlw	255
  9736  001052  200B               	addwfc	(?___wmul+1)^0,w,c
  9737  001054  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9738  001056  D7DF               	goto	l12516
  9739  001058                     l12526:
  9740                           
  9741                           ; BSR set to: 0
  9742  001058  0E2F               	movlw	47
  9743  00105A  65DE               	cpfsgt	fprintf@c& (0+255),b
  9744  00105C  D003               	goto	u14720
  9745                           
  9746                           ; BSR set to: 0
  9747  00105E  0E39               	movlw	57
  9748  001060  65DE               	cpfsgt	fprintf@c& (0+255),b
  9749  001062  D7E4               	goto	l12520
  9750  001064                     u14720:
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9754  001064  0E6C               	movlw	108
  9755  001066  19DE               	xorwf	fprintf@c& (0+255),w,b
  9756  001068  A4D8               	btfss	status,2,c
  9757  00106A  D00B               	goto	l12538
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;tff.c: 1849: f |= 2; c = *str++;
  9761  00106C  83D3               	bsf	fprintf@f& (0+255),1,b
  9762                           
  9763                           ; BSR set to: 0
  9764  00106E  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9765  001072  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9766  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9767  001076  6AF8               	clrf	tblptru,c
  9768  001078                     	endif
  9769  001078                     	if	0	;tblptru may be non-zero
  9770  001078                     	endif
  9771  001078  0008               	tblrd		*
  9772  00107A  CFF5 F0DE          	movff	tablat,fprintf@c
  9773                           
  9774                           ; BSR set to: 0
  9775  00107E  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9776  001080  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9777  001082                     l12538:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9781  001082  0E73               	movlw	115
  9782  001084  19DE               	xorwf	fprintf@c& (0+255),w,b
  9783  001086  A4D8               	btfss	status,2,c
  9784  001088  D014               	goto	l12544
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9788  00108A  51D9               	movf	fprintf@arp& (0+255),w,b
  9789  00108C  6ED9               	movwf	fsr2l,c
  9790  00108E  6ADA               	clrf	fsr2h,c
  9791  001090  CFDE F0AB          	movff	postinc2,fputs@str
  9792  001094  CFDD F0AC          	movff	postdec2,fputs@str+1
  9793  001098  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9794  00109C  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9795  0010A0  EC40  F028         	call	_fputs	;wreg free
  9796  0010A4  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9797  0010A8  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9798                           
  9799                           ; BSR set to: 0
  9800  0010AC  0E02               	movlw	2
  9801  0010AE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9802                           
  9803                           ;tff.c: 1853: continue;
  9804  0010B0  D108               	goto	l12630
  9805  0010B2                     l12544:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9809  0010B2  0E63               	movlw	99
  9810  0010B4  19DE               	xorwf	fprintf@c& (0+255),w,b
  9811  0010B6  A4D8               	btfss	status,2,c
  9812  0010B8  D01B               	goto	l12554
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9816  0010BA  51D9               	movf	fprintf@arp& (0+255),w,b
  9817  0010BC  6ED9               	movwf	fsr2l,c
  9818  0010BE  6ADA               	clrf	fsr2h,c
  9819  0010C0  50DF               	movf	indf2,w,c
  9820  0010C2  6FBB               	movwf	??_fprintf& (0+255),b
  9821  0010C4  51BB               	movf	??_fprintf& (0+255),w,b
  9822  0010C6  6FA4               	movwf	fputc@chr& (0+255),b
  9823  0010C8  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9824  0010CA  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9825  0010CE  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9826  0010D2  EC98  F02A         	call	_fputc	;wreg free
  9827  0010D6  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9828  0010DA  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9829                           
  9830                           ; BSR set to: 0
  9831  0010DE  0E02               	movlw	2
  9832  0010E0  27D9               	addwf	fprintf@arp& (0+255),f,b
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9836  0010E2  29DA               	incf	fprintf@cc& (0+255),w,b
  9837  0010E4  E104               	bnz	u14760
  9838  0010E6  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9839  0010E8  A4D8               	btfss	status,2,c
  9840  0010EA  D77B               	goto	u14690
  9841  0010EC  D0EA               	goto	l12630
  9842  0010EE                     u14760:
  9843  0010EE  D779               	goto	u14690
  9844  0010F0                     l12554:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9848  0010F0  0E00               	movlw	0
  9849  0010F2  6FD4               	movwf	fprintf@r& (0+255),b
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;tff.c: 1861: if (c == 'd') r = 10;
  9853  0010F4  0E64               	movlw	100
  9854  0010F6  19DE               	xorwf	fprintf@c& (0+255),w,b
  9855  0010F8  A4D8               	btfss	status,2,c
  9856  0010FA  D002               	goto	l12560
  9857                           
  9858                           ; BSR set to: 0
  9859  0010FC  0E0A               	movlw	10
  9860  0010FE  6FD4               	movwf	fprintf@r& (0+255),b
  9861  001100                     l12560:
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;tff.c: 1862: if (c == 'u') r = 10;
  9865  001100  0E75               	movlw	117
  9866  001102  19DE               	xorwf	fprintf@c& (0+255),w,b
  9867  001104  A4D8               	btfss	status,2,c
  9868  001106  D002               	goto	l12564
  9869                           
  9870                           ; BSR set to: 0
  9871  001108  0E0A               	movlw	10
  9872  00110A  6FD4               	movwf	fprintf@r& (0+255),b
  9873  00110C                     l12564:
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;tff.c: 1863: if (c == 'X') r = 16;
  9877  00110C  0E58               	movlw	88
  9878  00110E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9879  001110  A4D8               	btfss	status,2,c
  9880  001112  D002               	goto	l1274
  9881                           
  9882                           ; BSR set to: 0
  9883  001114  0E10               	movlw	16
  9884  001116  6FD4               	movwf	fprintf@r& (0+255),b
  9885  001118                     l1274:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;tff.c: 1864: if (r == 0) break;
  9889  001118  51D4               	movf	fprintf@r& (0+255),w,b
  9890  00111A  B4D8               	btfsc	status,2,c
  9891  00111C  0012               	return	
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;tff.c: 1865: if (f & 2) {
  9895  00111E  A3D3               	btfss	fprintf@f& (0+255),1,b
  9896  001120  D00D               	goto	l12574
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9900  001122  51D9               	movf	fprintf@arp& (0+255),w,b
  9901  001124  6ED9               	movwf	fsr2l,c
  9902  001126  6ADA               	clrf	fsr2h,c
  9903  001128  CFDE F0D5          	movff	postinc2,fprintf@val
  9904  00112C  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9905  001130  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9906  001134  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9907                           
  9908                           ; BSR set to: 0
  9909  001138  0E04               	movlw	4
  9910  00113A  D01F               	goto	L1
  9911  00113C                     l12574:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9915  00113C  0E64               	movlw	100
  9916  00113E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9917  001140  B4D8               	btfsc	status,2,c
  9918  001142  D00E               	goto	l12580
  9919                           
  9920                           ; BSR set to: 0
  9921  001144  51D9               	movf	fprintf@arp& (0+255),w,b
  9922  001146  6ED9               	movwf	fsr2l,c
  9923  001148  6ADA               	clrf	fsr2h,c
  9924  00114A  CFDE F0BB          	movff	postinc2,??_fprintf
  9925  00114E  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9926  001152  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9927  001156  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9928  00115A  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9929  00115C  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9930  00115E  D00C               	goto	l12582
  9931  001160                     l12580:
  9932                           
  9933                           ; BSR set to: 0
  9934  001160  51D9               	movf	fprintf@arp& (0+255),w,b
  9935  001162  6ED9               	movwf	fsr2l,c
  9936  001164  6ADA               	clrf	fsr2h,c
  9937  001166  CFDE F0D5          	movff	postinc2,fprintf@val
  9938  00116A  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9939  00116E  0E00               	movlw	0
  9940  001170  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9941  001172  0EFF               	movlw	-1
  9942  001174  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9943  001176  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9944  001178                     l12582:
  9945                           
  9946                           ; BSR set to: 0
  9947  001178  0E02               	movlw	2
  9948  00117A                     L1:
  9949  00117A  27D9               	addwf	fprintf@arp& (0+255),f,b
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9953  00117C  0E64               	movlw	100
  9954  00117E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9955  001180  A4D8               	btfss	status,2,c
  9956  001182  D00E               	goto	l12592
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;tff.c: 1872: if (val >= 0x80000000) {
  9960  001184  0E80               	movlw	128
  9961  001186  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9962  001188  A0D8               	btfss	status,0,c
  9963  00118A  D00A               	goto	l12592
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;tff.c: 1873: val = 0 - val;
  9967  00118C  6DD5               	negf	fprintf@val& (0+255),b
  9968  00118E  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9969  001190  B0D8               	btfsc	status,0,c
  9970  001192  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9971  001194  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9972  001196  B0D8               	btfsc	status,0,c
  9973  001198  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9974  00119A  0E00               	movlw	0
  9975  00119C  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;tff.c: 1874: f |= 4;
  9979  00119E  85D3               	bsf	fprintf@f& (0+255),2,b
  9980  0011A0                     l12592:
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9984  0011A0  0E00               	movlw	0
  9985  0011A2  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9986  0011A4  0E0F               	movlw	15
  9987  0011A6  6FDC               	movwf	fprintf@i& (0+255),b
  9988                           
  9989                           ; BSR set to: 0
  9990  0011A8  0E00               	movlw	0
  9991  0011AA  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9992  0011AC                     l12596:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9996  0011AC  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
  9997  0011B0  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
  9998  0011B4  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
  9999  0011B8  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
 10000  0011BC  51D4               	movf	fprintf@r& (0+255),w,b
 10001  0011BE  6E0E               	movwf	___llmod@divisor^0,c
 10002  0011C0  6A0F               	clrf	(___llmod@divisor+1)^0,c
 10003  0011C2  6A10               	clrf	(___llmod@divisor+2)^0,c
 10004  0011C4  6A11               	clrf	(___llmod@divisor+3)^0,c
 10005  0011C6  ECC9  F026         	call	___llmod	;wreg free
 10006  0011CA  500A               	movf	?___llmod^0,w,c
 10007  0011CC  0F30               	addlw	48
 10008  0011CE  0100               	movlb	0	; () banked
 10009  0011D0  6FDE               	movwf	fprintf@c& (0+255),b
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;tff.c: 1880: if (c > '9') c += 7;
 10013  0011D2  0E39               	movlw	57
 10014  0011D4  65DE               	cpfsgt	fprintf@c& (0+255),b
 10015  0011D6  D002               	goto	l12602
 10016                           
 10017                           ; BSR set to: 0
 10018  0011D8  0E07               	movlw	7
 10019  0011DA  27DE               	addwf	fprintf@c& (0+255),f,b
 10020  0011DC                     l12602:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;tff.c: 1881: s[--i] = c;
 10024  0011DC  07DC               	decf	fprintf@i& (0+255),f,b
 10025  0011DE  A0D8               	btfss	status,0,c
 10026  0011E0  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10027  0011E2  51DC               	movf	fprintf@i& (0+255),w,b
 10028  0011E4  0FBD               	addlw	low fprintf@s
 10029  0011E6  6ED9               	movwf	fsr2l,c
 10030  0011E8  6ADA               	clrf	fsr2h,c
 10031  0011EA  C0DE  FFDF         	movff	fprintf@c,indf2
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;tff.c: 1882: val /= r;
 10035  0011EE  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
 10036  0011F2  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
 10037  0011F6  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
 10038  0011FA  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
 10039  0011FE  51D4               	movf	fprintf@r& (0+255),w,b
 10040  001200  6E0E               	movwf	___lldiv@divisor^0,c
 10041  001202  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 10042  001204  6A10               	clrf	(___lldiv@divisor+2)^0,c
 10043  001206  6A11               	clrf	(___lldiv@divisor+3)^0,c
 10044  001208  ECFA  F024         	call	___lldiv	;wreg free
 10045  00120C  C00A  F0D5         	movff	?___lldiv,fprintf@val
 10046  001210  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
 10047  001214  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
 10048  001218  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
 10049                           
 10050                           ;tff.c: 1883: } while (i && val);
 10051  00121C  0100               	movlb	0	; () banked
 10052  00121E  51DC               	movf	fprintf@i& (0+255),w,b
 10053  001220  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10054  001222  B4D8               	btfsc	status,2,c
 10055  001224  D006               	goto	u14870
 10056                           
 10057                           ; BSR set to: 0
 10058  001226  51D5               	movf	fprintf@val& (0+255),w,b
 10059  001228  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
 10060  00122A  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
 10061  00122C  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
 10062  00122E  A4D8               	btfss	status,2,c
 10063  001230  D7BD               	goto	l12596
 10064  001232                     u14870:
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
 10068  001232  51DC               	movf	fprintf@i& (0+255),w,b
 10069  001234  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10070  001236  A4D8               	btfss	status,2,c
 10071                           
 10072                           ; BSR set to: 0
 10073  001238  A5D3               	btfss	fprintf@f& (0+255),2,b
 10074  00123A  D009               	goto	l12616
 10075                           
 10076                           ; BSR set to: 0
 10077  00123C  07DC               	decf	fprintf@i& (0+255),f,b
 10078  00123E  A0D8               	btfss	status,0,c
 10079  001240  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10080  001242  51DC               	movf	fprintf@i& (0+255),w,b
 10081  001244  0FBD               	addlw	low fprintf@s
 10082  001246  6ED9               	movwf	fsr2l,c
 10083  001248  6ADA               	clrf	fsr2h,c
 10084  00124A  0E2D               	movlw	45
 10085  00124C  6EDF               	movwf	indf2,c
 10086  00124E                     l12616:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
 10090  00124E  51D1               	movf	fprintf@w& (0+255),w,b
 10091  001250  080F               	sublw	15
 10092  001252  6FD1               	movwf	fprintf@w& (0+255),b
 10093  001254  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10094  001256  A0D8               	btfss	status,0,c
 10095  001258  2AE8               	incf	wreg,f,c
 10096  00125A  0800               	sublw	0
 10097  00125C  6FD2               	movwf	(fprintf@w+1)& (0+255),b
 10098                           
 10099                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
 10100  00125E  D013               	goto	l12624
 10101  001260                     l1291:
 10102                           
 10103                           ; BSR set to: 0
 10104  001260  B1D3               	btfsc	fprintf@f& (0+255),0,b
 10105  001262  D004               	goto	l12620
 10106                           
 10107                           ; BSR set to: 0
 10108  001264  0E00               	movlw	0
 10109  001266  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10110  001268  0E20               	movlw	32
 10111  00126A  D003               	goto	L2
 10112  00126C                     l12620:
 10113                           
 10114                           ; BSR set to: 0
 10115  00126C  0E00               	movlw	0
 10116  00126E  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10117  001270  0E30               	movlw	48
 10118  001272                     L2:
 10119  001272  6FCF               	movwf	_fprintf$2226& (0+255),b
 10120                           
 10121                           ; BSR set to: 0
 10122  001274  07DC               	decf	fprintf@i& (0+255),f,b
 10123  001276  A0D8               	btfss	status,0,c
 10124  001278  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10125  00127A  51DC               	movf	fprintf@i& (0+255),w,b
 10126  00127C  0FBD               	addlw	low fprintf@s
 10127  00127E  6ED9               	movwf	fsr2l,c
 10128  001280  6ADA               	clrf	fsr2h,c
 10129  001282  C0CF  FFDF         	movff	_fprintf$2226,indf2
 10130  001286                     l12624:
 10131                           
 10132                           ; BSR set to: 0
 10133  001286  51DC               	movf	fprintf@i& (0+255),w,b
 10134  001288  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10135  00128A  B4D8               	btfsc	status,2,c
 10136  00128C  D00A               	goto	u14920
 10137                           
 10138                           ; BSR set to: 0
 10139  00128E  51DC               	movf	fprintf@i& (0+255),w,b
 10140  001290  5DD1               	subwf	fprintf@w& (0+255),w,b
 10141  001292  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10142  001294  0A80               	xorlw	128
 10143  001296  6FBB               	movwf	??_fprintf& (0+255),b
 10144  001298  51DD               	movf	(fprintf@i+1)& (0+255),w,b
 10145  00129A  0A80               	xorlw	128
 10146  00129C  59BB               	subwfb	??_fprintf& (0+255),w,b
 10147  00129E  A0D8               	btfss	status,0,c
 10148  0012A0  D7DF               	goto	l1291
 10149  0012A2                     u14920:
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;tff.c: 1887: cc = fputs(&s[i], fil);
 10153  0012A2  51DC               	movf	fprintf@i& (0+255),w,b
 10154  0012A4  0FBD               	addlw	low fprintf@s
 10155  0012A6  6FBB               	movwf	??_fprintf& (0+255),b
 10156  0012A8  C0BB  F0AB         	movff	??_fprintf,fputs@str
 10157  0012AC  6BAC               	clrf	(fputs@str+1)& (0+255),b
 10158  0012AE  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
 10159  0012B2  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
 10160  0012B6  EC40  F028         	call	_fputs	;wreg free
 10161  0012BA  C0AB  F0DA         	movff	?_fputs,fprintf@cc
 10162  0012BE  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
 10163  0012C2                     l12630:
 10164                           
 10165                           ; BSR set to: 0
 10166  0012C2  51DA               	movf	fprintf@cc& (0+255),w,b
 10167  0012C4  27CD               	addwf	fprintf@res& (0+255),f,b
 10168  0012C6  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
 10169  0012C8  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
 10170  0012CA  D663               	goto	l12486
 10171  0012CC                     __end_of_fprintf:
 10172                           	callstack 0
 10173                           
 10174 ;; *************** function _fputs *****************
 10175 ;; Defined at:
 10176 ;;		line 1796 in file "bibliotecas/tff.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  str             2   75[BANK0 ] PTR const unsigned char 
 10179 ;;		 -> fprintf@s(16), ?_fprintf(2), lo(13), lt(12), 
 10180 ;;		 -> vel(6), hora(7), 
 10181 ;;  fil             2   77[BANK0 ] PTR struct _FIL
 10182 ;;		 -> fil(28), 
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  n               2   79[BANK0 ] int 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  2   75[BANK0 ] int 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 3F/0
 10191 ;;		On exit  : 3F/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10194 ;;      Params:         0       4       0       0       0       0       0       0       0
 10195 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10196 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10197 ;;      Totals:         1       6       0       0       0       0       0       0       0
 10198 ;;Total ram usage:        7 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:   12
 10201 ;; This function calls:
 10202 ;;		_fputc
 10203 ;; This function is called by:
 10204 ;;		_fprintf
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           	psect	text66
 10209  005080                     __ptext66:
 10210                           	callstack 0
 10211  005080                     _fputs:
 10212                           	callstack 13
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;incstack = 0
 10219  005080  0E00               	movlw	0
 10220  005082  6FB0               	movwf	(fputs@n+1)& (0+255),b
 10221  005084  0E00               	movlw	0
 10222  005086  6FAF               	movwf	fputs@n& (0+255),b
 10223  005088  D01B               	goto	l12060
 10224  00508A                     l12054:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
 10228  00508A  C0AB  FFD9         	movff	fputs@str,fsr2l
 10229  00508E  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10230  005092  50DF               	movf	indf2,w,c
 10231  005094  6E4C               	movwf	??_fputs^0,c
 10232  005096  504C               	movf	??_fputs^0,w,c
 10233  005098  6FA4               	movwf	fputc@chr& (0+255),b
 10234  00509A  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10235  00509C  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10236  0050A0  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10237  0050A4  EC98  F02A         	call	_fputc	;wreg free
 10238  0050A8  29A4               	incf	?_fputc& (0+255),w,b
 10239  0050AA  E106               	bnz	l12058
 10240  0050AC  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10241  0050AE  A4D8               	btfss	status,2,c
 10242  0050B0  D003               	goto	l12058
 10243                           
 10244                           ; BSR set to: 0
 10245  0050B2  69AB               	setf	?_fputs& (0+255),b
 10246  0050B4  69AC               	setf	(?_fputs+1)& (0+255),b
 10247  0050B6  0012               	return	
 10248  0050B8                     l12058:
 10249                           
 10250                           ; BSR set to: 0
 10251  0050B8  4BAB               	infsnz	fputs@str& (0+255),f,b
 10252  0050BA  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10253  0050BC  4BAF               	infsnz	fputs@n& (0+255),f,b
 10254  0050BE  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10255  0050C0                     l12060:
 10256                           
 10257                           ; BSR set to: 0
 10258  0050C0  C0AB  FFD9         	movff	fputs@str,fsr2l
 10259  0050C4  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10260  0050C8  50DF               	movf	indf2,w,c
 10261  0050CA  A4D8               	btfss	status,2,c
 10262  0050CC  D7DE               	goto	l12054
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;tff.c: 1806: };tff.c: 1807: return n;
 10266  0050CE  C0AF  F0AB         	movff	fputs@n,?_fputs
 10267  0050D2  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10268                           
 10269                           ; BSR set to: 0
 10270  0050D6  0012               	return		;funcret
 10271  0050D8                     __end_of_fputs:
 10272                           	callstack 0
 10273                           
 10274 ;; *************** function _fputc *****************
 10275 ;; Defined at:
 10276 ;;		line 1769 in file "bibliotecas/tff.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  chr             2   68[BANK0 ] int 
 10279 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10280 ;;		 -> fil(28), 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  bw              2   73[BANK0 ] unsigned int 
 10283 ;;  c               1   72[BANK0 ] unsigned char 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  2   68[BANK0 ] int 
 10286 ;; Registers used:
 10287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 3F/0
 10290 ;;		On exit  : 3F/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10293 ;;      Params:         0       4       0       0       0       0       0       0       0
 10294 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10296 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10297 ;;Total ram usage:        7 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:   11
 10300 ;; This function calls:
 10301 ;;		_f_write
 10302 ;; This function is called by:
 10303 ;;		_fputs
 10304 ;;		_fprintf
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text67
 10309  005530                     __ptext67:
 10310                           	callstack 0
 10311  005530                     _fputc:
 10312                           	callstack 13
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;incstack = 0
 10319  005530  51A6               	movf	fputc@fil& (0+255),w,b
 10320  005532  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10321  005534  A4D8               	btfss	status,2,c
 10322  005536  D005               	goto	l1241
 10323  005538                     u13270:
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;tff.c: 1783: return chr;
 10327  005538  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10328  00553C  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10329  005540  0012               	return	
 10330  005542                     l1241:
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10334  005542  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10338  005546  C0A6  F086         	movff	fputc@fil,f_write@fp
 10339  00554A  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10340  00554E  0EA8               	movlw	low fputc@c
 10341  005550  6F88               	movwf	f_write@buff& (0+255),b
 10342  005552  0E00               	movlw	0
 10343  005554  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10344  005556  0E01               	movlw	1
 10345  005558  6F89               	movwf	f_write@btw& (0+255),b
 10346  00555A  0EA9               	movlw	low fputc@bw
 10347  00555C  6F8B               	movwf	f_write@bw& (0+255),b
 10348  00555E  EC09  F000         	call	_f_write	;wreg free
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;tff.c: 1787: return bw ? chr : -1;
 10352  005562  51A9               	movf	fputc@bw& (0+255),w,b
 10353  005564  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10354  005566  A4D8               	btfss	status,2,c
 10355  005568  D7E7               	goto	u13270
 10356                           
 10357                           ; BSR set to: 0
 10358  00556A  69A4               	setf	?_fputc& (0+255),b
 10359  00556C  69A5               	setf	(?_fputc+1)& (0+255),b
 10360                           
 10361                           ; BSR set to: 0
 10362  00556E  0012               	return		;funcret
 10363  005570                     __end_of_fputc:
 10364                           	callstack 0
 10365                           
 10366 ;; *************** function _f_write *****************
 10367 ;; Defined at:
 10368 ;;		line 999 in file "bibliotecas/tff.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10371 ;;		 -> fil(28), 
 10372 ;;  buff            1   40[BANK0 ] PTR const void 
 10373 ;;		 -> fputc@c(1), 
 10374 ;;  btw             2   41[BANK0 ] unsigned int 
 10375 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10376 ;;		 -> fputc@bw(2), 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  sect            4   58[BANK0 ] unsigned long 
 10379 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10380 ;;  clust           2   64[BANK0 ] unsigned short 
 10381 ;;  cc              2   62[BANK0 ] unsigned int 
 10382 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10383 ;;		 -> fputc@c(1), 
 10384 ;;  res             1   56[BANK0 ] enum E155
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      enum E155
 10387 ;; Registers used:
 10388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10389 ;; Tracked objects:
 10390 ;;		On entry : 3F/0
 10391 ;;		On exit  : 3F/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10394 ;;      Params:         0       6       0       0       0       0       0       0       0
 10395 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10396 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10397 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10398 ;;Total ram usage:       30 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:   10
 10401 ;; This function calls:
 10402 ;;		_clust2sect
 10403 ;;		_create_chain
 10404 ;;		_disk_write
 10405 ;;		_memcpy
 10406 ;;		_move_window
 10407 ;;		_validate
 10408 ;; This function is called by:
 10409 ;;		_fputc
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text68
 10414  000012                     __ptext68:
 10415                           	callstack 0
 10416  000012                     _f_write:
 10417                           	callstack 13
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;incstack = 0
 10424  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;tff.c: 1013: *bw = 0;
 10428  000016  518B               	movf	f_write@bw& (0+255),w,b
 10429  000018  6ED9               	movwf	fsr2l,c
 10430  00001A  6ADA               	clrf	fsr2h,c
 10431  00001C  0E00               	movlw	0
 10432  00001E  6EDE               	movwf	postinc2,c
 10433  000020  0E00               	movlw	0
 10434  000022  6EDD               	movwf	postdec2,c
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10438  000024  EE20 F004          	lfsr	2,4
 10439  000028  5186               	movf	f_write@fp& (0+255),w,b
 10440  00002A  26D9               	addwf	fsr2l,f,c
 10441  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10442  00002E  22DA               	addwfc	fsr2h,f,c
 10443  000030  CFDE F010          	movff	postinc2,validate@fs
 10444  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10445  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10446  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10447  000040  CFDE F012          	movff	postinc2,validate@id
 10448  000044  CFDD F013          	movff	postdec2,validate@id+1
 10449  000048  ECCC  F029         	call	_validate	;wreg free
 10450  00004C  0100               	movlb	0	; () banked
 10451  00004E  6F98               	movwf	f_write@res& (0+255),b
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;tff.c: 1015: if (res != FR_OK) return res;
 10455  000050  5198               	movf	f_write@res& (0+255),w,b
 10456  000052  A4D8               	btfss	status,2,c
 10457  000054  0012               	return	
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10461  000056  EE20 F002          	lfsr	2,2
 10462  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10463  00005C  26D9               	addwf	fsr2l,f,c
 10464  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10465  000060  22DA               	addwfc	fsr2h,f,c
 10466  000062  BEDF               	btfsc	indf2,7,c
 10467  000064  0012               	return	
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10471  000066  EE20 F002          	lfsr	2,2
 10472  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10473  00006C  26D9               	addwf	fsr2l,f,c
 10474  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10475  000070  22DA               	addwfc	fsr2h,f,c
 10476  000072  A2DF               	btfss	indf2,1,c
 10477  000074  0012               	return	
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10481  000076  EE20 F00A          	lfsr	2,10
 10482  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10483  00007C  26D9               	addwf	fsr2l,f,c
 10484  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10485  000080  22DA               	addwfc	fsr2h,f,c
 10486  000082  EE10 F00A          	lfsr	1,10
 10487  000086  5186               	movf	f_write@fp& (0+255),w,b
 10488  000088  26E1               	addwf	fsr1l,f,c
 10489  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10490  00008C  22E2               	addwfc	fsr1h,f,c
 10491  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10492  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10493  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10494  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10495  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10496  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10497  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10498  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10499  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10500  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10501  0000AA  0E00               	movlw	0
 10502  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10503  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10504  0000B0  0E00               	movlw	0
 10505  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10506  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10507  0000B6  50DE               	movf	postinc2,w,c
 10508  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10509  0000BA  50DE               	movf	postinc2,w,c
 10510  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10511  0000BE  50DE               	movf	postinc2,w,c
 10512  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10513  0000C2  50DE               	movf	postinc2,w,c
 10514  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10515  0000C6  A0D8               	btfss	status,0,c
 10516  0000C8  0012               	return	
 10517  0000CA  D22D               	goto	l11256
 10518  0000CC                     l11180:
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10522  0000CC  EE20 F006          	lfsr	2,6
 10523  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10524  0000D2  26D9               	addwf	fsr2l,f,c
 10525  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10526  0000D6  22DA               	addwfc	fsr2h,f,c
 10527  0000D8  0EFF               	movlw	255
 10528  0000DA  14DE               	andwf	postinc2,w,c
 10529  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10530  0000DE  0E01               	movlw	1
 10531  0000E0  14DE               	andwf	postinc2,w,c
 10532  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10533  0000E4  0E00               	movlw	0
 10534  0000E6  14DE               	andwf	postinc2,w,c
 10535  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10536  0000EA  0E00               	movlw	0
 10537  0000EC  14DE               	andwf	postinc2,w,c
 10538  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10539  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10540  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10541  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10542  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10543  0000F8  A4D8               	btfss	status,2,c
 10544  0000FA  D15E               	goto	l11232
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10548  0000FC  EE20 F004          	lfsr	2,4
 10549  000100  5186               	movf	f_write@fp& (0+255),w,b
 10550  000102  26D9               	addwf	fsr2l,f,c
 10551  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10552  000106  22DA               	addwfc	fsr2h,f,c
 10553  000108  EE10 F01D          	lfsr	1,29
 10554  00010C  50DE               	movf	postinc2,w,c
 10555  00010E  26E1               	addwf	fsr1l,f,c
 10556  000110  50DD               	movf	postdec2,w,c
 10557  000112  22E2               	addwfc	fsr1h,f,c
 10558  000114  EE20 F003          	lfsr	2,3
 10559  000118  5186               	movf	f_write@fp& (0+255),w,b
 10560  00011A  26D9               	addwf	fsr2l,f,c
 10561  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10562  00011E  22DA               	addwfc	fsr2h,f,c
 10563  000120  50E6               	movf	postinc1,w,c
 10564  000122  5CDE               	subwf	postinc2,w,c
 10565  000124  A0D8               	btfss	status,0,c
 10566  000126  D06B               	goto	l11204
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;tff.c: 1024: if (fp->fptr == 0) {
 10570  000128  EE20 F006          	lfsr	2,6
 10571  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10572  00012E  26D9               	addwf	fsr2l,f,c
 10573  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10574  000132  22DA               	addwfc	fsr2h,f,c
 10575  000134  50DE               	movf	postinc2,w,c
 10576  000136  10DE               	iorwf	postinc2,w,c
 10577  000138  10DE               	iorwf	postinc2,w,c
 10578  00013A  10DE               	iorwf	postinc2,w,c
 10579  00013C  A4D8               	btfss	status,2,c
 10580  00013E  D023               	goto	l11192
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;tff.c: 1025: clust = fp->org_clust;
 10584  000140  EE20 F00E          	lfsr	2,14
 10585  000144  5186               	movf	f_write@fp& (0+255),w,b
 10586  000146  26D9               	addwf	fsr2l,f,c
 10587  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10588  00014A  22DA               	addwfc	fsr2h,f,c
 10589  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10590  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;tff.c: 1026: if (clust == 0)
 10594  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10595  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10596  000158  A4D8               	btfss	status,2,c
 10597  00015A  D025               	goto	l11194
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10601  00015C  0E00               	movlw	0
 10602  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10603  000160  0E00               	movlw	0
 10604  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10605  000164  ECC1  F016         	call	_create_chain	;wreg free
 10606  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10607  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10608  000170  EE20 F00E          	lfsr	2,14
 10609  000174  5186               	movf	f_write@fp& (0+255),w,b
 10610  000176  26D9               	addwf	fsr2l,f,c
 10611  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10612  00017A  22DA               	addwfc	fsr2h,f,c
 10613  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10614  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10615  000184  D010               	goto	l11194
 10616  000186                     l11192:
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10620  000186  EE20 F010          	lfsr	2,16
 10621  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10622  00018C  26D9               	addwf	fsr2l,f,c
 10623  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10624  000190  22DA               	addwfc	fsr2h,f,c
 10625  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10626  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10627  00019A  ECC1  F016         	call	_create_chain	;wreg free
 10628  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10629  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10630  0001A6                     l11194:
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10634  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10635  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10636  0001AA  B4D8               	btfsc	status,2,c
 10637  0001AC  D1C0               	goto	u12750
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10641  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10642  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10643  0001B2  B4D8               	btfsc	status,2,c
 10644  0001B4  D1EF               	goto	l11266
 10645                           
 10646                           ; BSR set to: 0
 10647  0001B6  EE20 F004          	lfsr	2,4
 10648  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10649  0001BC  26D9               	addwf	fsr2l,f,c
 10650  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10651  0001C0  22DA               	addwfc	fsr2h,f,c
 10652  0001C2  EE10 F016          	lfsr	1,22
 10653  0001C6  50DE               	movf	postinc2,w,c
 10654  0001C8  26E1               	addwf	fsr1l,f,c
 10655  0001CA  50DD               	movf	postdec2,w,c
 10656  0001CC  22E2               	addwfc	fsr1h,f,c
 10657  0001CE  50E6               	movf	postinc1,w,c
 10658  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10659  0001D2  50E6               	movf	postinc1,w,c
 10660  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10661  0001D6  B0D8               	btfsc	status,0,c
 10662  0001D8  D1DD               	goto	l11266
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;tff.c: 1033: fp->curr_clust = clust;
 10666  0001DA  EE20 F010          	lfsr	2,16
 10667  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10668  0001E0  26D9               	addwf	fsr2l,f,c
 10669  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10670  0001E4  22DA               	addwfc	fsr2h,f,c
 10671  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10672  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10673                           
 10674                           ;tff.c: 1034: fp->csect = 0;
 10675  0001EE  EE20 F003          	lfsr	2,3
 10676  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10677  0001F4  26D9               	addwf	fsr2l,f,c
 10678  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10679  0001F8  22DA               	addwfc	fsr2h,f,c
 10680  0001FA  0E00               	movlw	0
 10681  0001FC  6EDF               	movwf	indf2,c
 10682  0001FE                     l11204:
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10686  0001FE  EE20 F010          	lfsr	2,16
 10687  000202  5186               	movf	f_write@fp& (0+255),w,b
 10688  000204  26D9               	addwf	fsr2l,f,c
 10689  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10690  000208  22DA               	addwfc	fsr2h,f,c
 10691  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10692  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10693  000212  EC0A  F021         	call	_clust2sect	;wreg free
 10694  000216  0100               	movlb	0	; () banked
 10695  000218  EE20 F003          	lfsr	2,3
 10696  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10697  00021E  26D9               	addwf	fsr2l,f,c
 10698  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10699  000222  22DA               	addwfc	fsr2h,f,c
 10700  000224  50DF               	movf	indf2,w,c
 10701  000226  6F8C               	movwf	??_f_write& (0+255),b
 10702  000228  518C               	movf	??_f_write& (0+255),w,b
 10703  00022A  2416               	addwf	?_clust2sect^0,w,c
 10704  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10705  00022E  0E00               	movlw	0
 10706  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10707  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10708  000234  0E00               	movlw	0
 10709  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10710  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10711  00023A  0E00               	movlw	0
 10712  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10713  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;tff.c: 1037: cc = btw / 512U;
 10717  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10718  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10719  000248  0E09               	movlw	9
 10720  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10721  00024C                     u12665:
 10722  00024C  90D8               	bcf	status,0,c
 10723  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10724  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10725  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10726  000254  D7FB               	goto	u12665
 10727  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10728  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;tff.c: 1038: if (cc) {
 10732  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10733  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10734  000262  B4D8               	btfsc	status,2,c
 10735  000264  D06A               	goto	l11222
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10739  000266  EE20 F003          	lfsr	2,3
 10740  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10741  00026C  26D9               	addwf	fsr2l,f,c
 10742  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10743  000270  22DA               	addwfc	fsr2h,f,c
 10744  000272  50DF               	movf	indf2,w,c
 10745  000274  6F8C               	movwf	??_f_write& (0+255),b
 10746  000276  518C               	movf	??_f_write& (0+255),w,b
 10747  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10748  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10749  00027C  0E00               	movlw	0
 10750  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10751  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10752  000282  EE20 F004          	lfsr	2,4
 10753  000286  5186               	movf	f_write@fp& (0+255),w,b
 10754  000288  26D9               	addwf	fsr2l,f,c
 10755  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10756  00028C  22DA               	addwfc	fsr2h,f,c
 10757  00028E  EE10 F01D          	lfsr	1,29
 10758  000292  50DE               	movf	postinc2,w,c
 10759  000294  26E1               	addwf	fsr1l,f,c
 10760  000296  50DD               	movf	postdec2,w,c
 10761  000298  22E2               	addwfc	fsr1h,f,c
 10762  00029A  50E7               	movf	indf1,w,c
 10763  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10764  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10765  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10766  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10767  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10768  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10769  0002A8  B0D8               	btfsc	status,0,c
 10770  0002AA  D01C               	goto	l11214
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10774  0002AC  EE20 F004          	lfsr	2,4
 10775  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10776  0002B2  26D9               	addwf	fsr2l,f,c
 10777  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10778  0002B6  22DA               	addwfc	fsr2h,f,c
 10779  0002B8  EE10 F01D          	lfsr	1,29
 10780  0002BC  50DE               	movf	postinc2,w,c
 10781  0002BE  26E1               	addwf	fsr1l,f,c
 10782  0002C0  50DD               	movf	postdec2,w,c
 10783  0002C2  22E2               	addwfc	fsr1h,f,c
 10784  0002C4  50E7               	movf	indf1,w,c
 10785  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10786  0002C8  EE20 F003          	lfsr	2,3
 10787  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10788  0002CE  26D9               	addwf	fsr2l,f,c
 10789  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10790  0002D2  22DA               	addwfc	fsr2h,f,c
 10791  0002D4  50DF               	movf	indf2,w,c
 10792  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10793  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10794  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10795  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10796  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10797  0002E0  A0D8               	btfss	status,0,c
 10798  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10799  0002E4                     l11214:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10803  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10804  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10805  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10806  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10807  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10808  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10809  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10810  0002FE  0E00               	movlw	0
 10811  000300  EC3A  F029         	call	_disk_write
 10812  000304  0900               	iorlw	0
 10813  000306  A4D8               	btfss	status,2,c
 10814  000308  D145               	goto	l11266
 10815                           
 10816                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10817  00030A  0100               	movlb	0	; () banked
 10818  00030C  EE20 F003          	lfsr	2,3
 10819  000310  5186               	movf	f_write@fp& (0+255),w,b
 10820  000312  26D9               	addwf	fsr2l,f,c
 10821  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10822  000316  22DA               	addwfc	fsr2h,f,c
 10823  000318  519E               	movf	f_write@cc& (0+255),w,b
 10824  00031A  26DF               	addwf	indf2,f,c
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;tff.c: 1044: wcnt = 512U * cc;
 10828  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10829  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10830  000324  0E09               	movlw	9
 10831  000326                     u12705:
 10832  000326  90D8               	bcf	status,0,c
 10833  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10834  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10835  00032C  2EE8               	decfsz	wreg,f,c
 10836  00032E  D7FB               	goto	u12705
 10837  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10838  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10839                           
 10840                           ;tff.c: 1045: continue;
 10841  000338  D0DC               	goto	l11248
 10842  00033A                     l11222:
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10846  00033A  EE20 F00A          	lfsr	2,10
 10847  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10848  000340  26D9               	addwf	fsr2l,f,c
 10849  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10850  000344  22DA               	addwfc	fsr2h,f,c
 10851  000346  EE10 F006          	lfsr	1,6
 10852  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10853  00034C  26E1               	addwf	fsr1l,f,c
 10854  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10855  000350  22E2               	addwfc	fsr1h,f,c
 10856  000352  50DE               	movf	postinc2,w,c
 10857  000354  5CE6               	subwf	postinc1,w,c
 10858  000356  50DE               	movf	postinc2,w,c
 10859  000358  58E6               	subwfb	postinc1,w,c
 10860  00035A  50DE               	movf	postinc2,w,c
 10861  00035C  58E6               	subwfb	postinc1,w,c
 10862  00035E  50DE               	movf	postinc2,w,c
 10863  000360  58E6               	subwfb	postinc1,w,c
 10864  000362  A0D8               	btfss	status,0,c
 10865  000364  D022               	goto	l11230
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10869  000366  0E00               	movlw	0
 10870  000368  6E35               	movwf	move_window@sector^0,c
 10871  00036A  0E00               	movlw	0
 10872  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10873  00036E  0E00               	movlw	0
 10874  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10875  000372  0E00               	movlw	0
 10876  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10877  000376  EC1B  F015         	call	_move_window	;wreg free
 10878  00037A  0900               	iorlw	0
 10879  00037C  B4D8               	btfsc	status,2,c
 10880  00037E  D10A               	goto	l11266
 10881                           
 10882                           ;tff.c: 1049: fp->fs->winsect = sect;
 10883  000380  0100               	movlb	0	; () banked
 10884  000382  EE20 F004          	lfsr	2,4
 10885  000386  5186               	movf	f_write@fp& (0+255),w,b
 10886  000388  26D9               	addwf	fsr2l,f,c
 10887  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10888  00038C  22DA               	addwfc	fsr2h,f,c
 10889  00038E  EE10 F004          	lfsr	1,4
 10890  000392  50DE               	movf	postinc2,w,c
 10891  000394  26E1               	addwf	fsr1l,f,c
 10892  000396  50DD               	movf	postdec2,w,c
 10893  000398  22E2               	addwfc	fsr1h,f,c
 10894  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10895  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10896  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10897  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10898  0003AA                     l11230:
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10902  0003AA  EE20 F003          	lfsr	2,3
 10903  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10904  0003B0  26D9               	addwf	fsr2l,f,c
 10905  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10906  0003B4  22DA               	addwfc	fsr2h,f,c
 10907  0003B6  2ADF               	incf	indf2,f,c
 10908  0003B8                     l11232:
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10912  0003B8  EE20 F010          	lfsr	2,16
 10913  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10914  0003BE  26D9               	addwf	fsr2l,f,c
 10915  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10916  0003C2  22DA               	addwfc	fsr2h,f,c
 10917  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10918  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10919  0003CC  EC0A  F021         	call	_clust2sect	;wreg free
 10920  0003D0  0100               	movlb	0	; () banked
 10921  0003D2  EE20 F003          	lfsr	2,3
 10922  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10923  0003D8  26D9               	addwf	fsr2l,f,c
 10924  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10925  0003DC  22DA               	addwfc	fsr2h,f,c
 10926  0003DE  50DF               	movf	indf2,w,c
 10927  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10928  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10929  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10930  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10931  0003E8  0E00               	movlw	0
 10932  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10933  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10934  0003EE  0E00               	movlw	0
 10935  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10936  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10937  0003F4  0E00               	movlw	0
 10938  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10939  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10940  0003FA  0EFF               	movlw	255
 10941  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10942  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10943  000400  0EFF               	movlw	255
 10944  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10945  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10946  000406  0EFF               	movlw	255
 10947  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10948  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10949  00040C  0EFF               	movlw	255
 10950  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10951  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10955  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10956  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10957  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10958  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10959  000422  EC1B  F015         	call	_move_window	;wreg free
 10960  000426  0900               	iorlw	0
 10961  000428  B4D8               	btfsc	status,2,c
 10962  00042A  D0B4               	goto	l11266
 10963                           
 10964                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10965  00042C  0EFF               	movlw	255
 10966  00042E  0100               	movlb	0	; () banked
 10967  000430  6F8C               	movwf	??_f_write& (0+255),b
 10968  000432  0E01               	movlw	1
 10969  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10970  000436  EE20 F006          	lfsr	2,6
 10971  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10972  00043C  26D9               	addwf	fsr2l,f,c
 10973  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10974  000440  22DA               	addwfc	fsr2h,f,c
 10975  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10976  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10977  00044A  518C               	movf	??_f_write& (0+255),w,b
 10978  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10979  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10980  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10981  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10982  000454  0800               	sublw	0
 10983  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10984  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10985  00045A  A0D8               	btfss	status,0,c
 10986  00045C  2AE8               	incf	wreg,f,c
 10987  00045E  0802               	sublw	2
 10988  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10992  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10993  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10994  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10995  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10996  00046A  B0D8               	btfsc	status,0,c
 10997  00046C  D004               	goto	l11244
 10998                           
 10999                           ; BSR set to: 0
 11000  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 11001  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 11002  000476                     l11244:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 11006  000476  0EFF               	movlw	255
 11007  000478  6F8C               	movwf	??_f_write& (0+255),b
 11008  00047A  0E01               	movlw	1
 11009  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 11010  00047E  EE20 F006          	lfsr	2,6
 11011  000482  5186               	movf	f_write@fp& (0+255),w,b
 11012  000484  26D9               	addwf	fsr2l,f,c
 11013  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11014  000488  22DA               	addwfc	fsr2h,f,c
 11015  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 11016  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 11017  000492  518C               	movf	??_f_write& (0+255),w,b
 11018  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 11019  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 11020  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 11021  00049A  EE20 F004          	lfsr	2,4
 11022  00049E  5186               	movf	f_write@fp& (0+255),w,b
 11023  0004A0  26D9               	addwf	fsr2l,f,c
 11024  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11025  0004A4  22DA               	addwfc	fsr2h,f,c
 11026  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 11027  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 11028  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 11029  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 11030  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 11031  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 11032  0004B6  0E20               	movlw	32
 11033  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 11034  0004BA  6E0A               	movwf	memcpy@d1^0,c
 11035  0004BC  0E00               	movlw	0
 11036  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 11037  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 11038  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 11039  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 11040  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 11041  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 11042  0004D0  EC13  F02A         	call	_memcpy	;wreg free
 11043                           
 11044                           ;tff.c: 1058: fp->fs->winflag = 1;
 11045  0004D4  0100               	movlb	0	; () banked
 11046  0004D6  EE20 F004          	lfsr	2,4
 11047  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 11048  0004DC  26D9               	addwf	fsr2l,f,c
 11049  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11050  0004E0  22DA               	addwfc	fsr2h,f,c
 11051  0004E2  EE10 F01F          	lfsr	1,31
 11052  0004E6  50DE               	movf	postinc2,w,c
 11053  0004E8  26E1               	addwf	fsr1l,f,c
 11054  0004EA  50DD               	movf	postdec2,w,c
 11055  0004EC  22E2               	addwfc	fsr1h,f,c
 11056  0004EE  0E01               	movlw	1
 11057  0004F0  6EE7               	movwf	indf1,c
 11058  0004F2                     l11248:
 11059                           
 11060                           ; BSR set to: 0
 11061  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 11062  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 11063                           
 11064                           ; BSR set to: 0
 11065  0004F6  EE20 F006          	lfsr	2,6
 11066  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 11067  0004FC  26D9               	addwf	fsr2l,f,c
 11068  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11069  000500  22DA               	addwfc	fsr2h,f,c
 11070  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 11071  000504  26DE               	addwf	postinc2,f,c
 11072  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11073  000508  22DE               	addwfc	postinc2,f,c
 11074  00050A  0E00               	movlw	0
 11075  00050C  22DE               	addwfc	postinc2,f,c
 11076  00050E  22DE               	addwfc	postinc2,f,c
 11077                           
 11078                           ; BSR set to: 0
 11079  000510  518B               	movf	f_write@bw& (0+255),w,b
 11080  000512  6ED9               	movwf	fsr2l,c
 11081  000514  6ADA               	clrf	fsr2h,c
 11082  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 11083  000518  26DE               	addwf	postinc2,f,c
 11084  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11085  00051C  22DD               	addwfc	postdec2,f,c
 11086                           
 11087                           ; BSR set to: 0
 11088  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 11089  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 11090  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11091  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 11092  000526                     l11256:
 11093                           
 11094                           ; BSR set to: 0
 11095  000526  5189               	movf	f_write@btw& (0+255),w,b
 11096  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 11097  00052A  A4D8               	btfss	status,2,c
 11098  00052C  D5CF               	goto	l11180
 11099  00052E                     u12750:
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 11103  00052E  EE20 F006          	lfsr	2,6
 11104  000532  5186               	movf	f_write@fp& (0+255),w,b
 11105  000534  26D9               	addwf	fsr2l,f,c
 11106  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11107  000538  22DA               	addwfc	fsr2h,f,c
 11108  00053A  EE10 F00A          	lfsr	1,10
 11109  00053E  5186               	movf	f_write@fp& (0+255),w,b
 11110  000540  26E1               	addwf	fsr1l,f,c
 11111  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11112  000544  22E2               	addwfc	fsr1h,f,c
 11113  000546  50DE               	movf	postinc2,w,c
 11114  000548  5CE6               	subwf	postinc1,w,c
 11115  00054A  50DE               	movf	postinc2,w,c
 11116  00054C  58E6               	subwfb	postinc1,w,c
 11117  00054E  50DE               	movf	postinc2,w,c
 11118  000550  58E6               	subwfb	postinc1,w,c
 11119  000552  50DE               	movf	postinc2,w,c
 11120  000554  58E6               	subwfb	postinc1,w,c
 11121  000556  B0D8               	btfsc	status,0,c
 11122  000558  D014               	goto	l11262
 11123                           
 11124                           ; BSR set to: 0
 11125  00055A  EE20 F006          	lfsr	2,6
 11126  00055E  5186               	movf	f_write@fp& (0+255),w,b
 11127  000560  26D9               	addwf	fsr2l,f,c
 11128  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11129  000564  22DA               	addwfc	fsr2h,f,c
 11130  000566  EE10 F00A          	lfsr	1,10
 11131  00056A  5186               	movf	f_write@fp& (0+255),w,b
 11132  00056C  26E1               	addwf	fsr1l,f,c
 11133  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11134  000570  22E2               	addwfc	fsr1h,f,c
 11135  000572  CFDE FFE6          	movff	postinc2,postinc1
 11136  000576  CFDE FFE6          	movff	postinc2,postinc1
 11137  00057A  CFDE FFE6          	movff	postinc2,postinc1
 11138  00057E  CFDE FFE6          	movff	postinc2,postinc1
 11139  000582                     l11262:
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;tff.c: 1062: fp->flag |= 0x20;
 11143  000582  EE20 F002          	lfsr	2,2
 11144  000586  5186               	movf	f_write@fp& (0+255),w,b
 11145  000588  26D9               	addwf	fsr2l,f,c
 11146  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11147  00058C  22DA               	addwfc	fsr2h,f,c
 11148  00058E  0E00               	movlw	0
 11149  000590  8ADB               	bsf	plusw2,5,c
 11150  000592  0012               	return	
 11151  000594                     l11266:
 11152                           
 11153                           ;tff.c: 1066: fp->flag |= 0x80;
 11154  000594  0100               	movlb	0	; () banked
 11155  000596  EE20 F002          	lfsr	2,2
 11156  00059A  5186               	movf	f_write@fp& (0+255),w,b
 11157  00059C  26D9               	addwf	fsr2l,f,c
 11158  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11159  0005A0  22DA               	addwfc	fsr2h,f,c
 11160  0005A2  0E00               	movlw	0
 11161  0005A4  8EDB               	bsf	plusw2,7,c
 11162                           
 11163                           ; BSR set to: 0
 11164  0005A6  0012               	return		;funcret
 11165  0005A8                     __end_of_f_write:
 11166                           	callstack 0
 11167                           
 11168 ;; *************** function ___llmod *****************
 11169 ;; Defined at:
 11170 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  dividend        4    9[COMRAM] unsigned long 
 11173 ;;  divisor         4   13[COMRAM] unsigned long 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  counter         1   17[COMRAM] unsigned char 
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  4    9[COMRAM] unsigned long 
 11178 ;; Registers used:
 11179 ;;		wreg, status,2, status,0
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11185 ;;      Params:         8       0       0       0       0       0       0       0       0
 11186 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11188 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11189 ;;Total ram usage:        9 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    2
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_fprintf
 11196 ;;		_ultoa
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text69
 11201  004D92                     __ptext69:
 11202                           	callstack 0
 11203  004D92                     ___llmod:
 11204                           	callstack 23
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;incstack = 0
 11208  004D92  500E               	movf	___llmod@divisor^0,w,c
 11209  004D94  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 11210  004D96  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 11211  004D98  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 11212  004D9A  B4D8               	btfsc	status,2,c
 11213  004D9C  D024               	goto	l2153
 11214  004D9E  0E01               	movlw	1
 11215  004DA0  6E12               	movwf	___llmod@counter^0,c
 11216  004DA2  D006               	goto	l12130
 11217  004DA4                     l12128:
 11218  004DA4  90D8               	bcf	status,0,c
 11219  004DA6  360E               	rlcf	___llmod@divisor^0,f,c
 11220  004DA8  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 11221  004DAA  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 11222  004DAC  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 11223  004DAE  2A12               	incf	___llmod@counter^0,f,c
 11224  004DB0                     l12130:
 11225  004DB0  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 11226  004DB2  D7F8               	goto	l12128
 11227  004DB4                     u14090:
 11228  004DB4  500E               	movf	___llmod@divisor^0,w,c
 11229  004DB6  5C0A               	subwf	___llmod@dividend^0,w,c
 11230  004DB8  500F               	movf	(___llmod@divisor+1)^0,w,c
 11231  004DBA  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 11232  004DBC  5010               	movf	(___llmod@divisor+2)^0,w,c
 11233  004DBE  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 11234  004DC0  5011               	movf	(___llmod@divisor+3)^0,w,c
 11235  004DC2  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 11236  004DC4  A0D8               	btfss	status,0,c
 11237  004DC6  D008               	goto	l12136
 11238  004DC8  500E               	movf	___llmod@divisor^0,w,c
 11239  004DCA  5E0A               	subwf	___llmod@dividend^0,f,c
 11240  004DCC  500F               	movf	(___llmod@divisor+1)^0,w,c
 11241  004DCE  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 11242  004DD0  5010               	movf	(___llmod@divisor+2)^0,w,c
 11243  004DD2  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 11244  004DD4  5011               	movf	(___llmod@divisor+3)^0,w,c
 11245  004DD6  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 11246  004DD8                     l12136:
 11247  004DD8  90D8               	bcf	status,0,c
 11248  004DDA  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 11249  004DDC  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 11250  004DDE  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 11251  004DE0  320E               	rrcf	___llmod@divisor^0,f,c
 11252  004DE2  2E12               	decfsz	___llmod@counter^0,f,c
 11253  004DE4  D7E7               	goto	u14090
 11254  004DE6                     l2153:
 11255  004DE6  C00A  F00A         	movff	___llmod@dividend,?___llmod
 11256  004DEA  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 11257  004DEE  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 11258  004DF2  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 11259  004DF6  0012               	return		;funcret
 11260  004DF8                     __end_of___llmod:
 11261                           	callstack 0
 11262                           
 11263 ;; *************** function _f_open *****************
 11264 ;; Defined at:
 11265 ;;		line 833 in file "bibliotecas/tff.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 11268 ;;		 -> fil(28), 
 11269 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 11270 ;;		 -> STR_16(13), filename(20), 
 11271 ;;  mode            1   60[BANK0 ] unsigned char 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  dw              4   79[BANK0 ] unsigned long 
 11274 ;;  rs              2   77[BANK0 ] unsigned short 
 11275 ;;  dj             14   86[BANK0 ] struct _DIR_E
 11276 ;;  fn             12   65[BANK0 ] unsigned char [12]
 11277 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 11278 ;;		 -> NULL(0), fs(544), 
 11279 ;;  res             1   83[BANK0 ] enum E155
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      enum E3231
 11282 ;; Registers used:
 11283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 3F/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11289 ;;      Params:         0       5       0       0       0       0       0       0       0
 11290 ;;      Locals:         0      35       0       0       0       0       0       0       0
 11291 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11292 ;;      Totals:         0      44       0       0       0       0       0       0       0
 11293 ;;Total ram usage:       44 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:   11
 11296 ;; This function calls:
 11297 ;;		_auto_mount
 11298 ;;		_get_fattime
 11299 ;;		_memcpy
 11300 ;;		_memset
 11301 ;;		_move_window
 11302 ;;		_remove_chain
 11303 ;;		_reserve_direntry
 11304 ;;		_trace_path
 11305 ;; This function is called by:
 11306 ;;		_escrita_sdcard
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text70
 11311  0012CC                     __ptext70:
 11312                           	callstack 0
 11313  0012CC                     _f_open:
 11314                           	callstack 15
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 11318                           
 11319                           ;incstack = 0
 11320  0012CC  EE20 F004          	lfsr	2,4
 11321  0012D0  5198               	movf	f_open@fp& (0+255),w,b
 11322  0012D2  26D9               	addwf	fsr2l,f,c
 11323  0012D4  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11324  0012D6  22DA               	addwfc	fsr2h,f,c
 11325  0012D8  0E00               	movlw	0
 11326  0012DA  6EDE               	movwf	postinc2,c
 11327  0012DC  0E00               	movlw	0
 11328  0012DE  6EDD               	movwf	postdec2,c
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11332  0012E0  0E1F               	movlw	31
 11333  0012E2  179C               	andwf	f_open@mode& (0+255),f,b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11337  0012E4  0E9A               	movlw	low f_open@path
 11338  0012E6  6E3D               	movwf	auto_mount@path^0,c
 11339  0012E8  519C               	movf	f_open@mode& (0+255),w,b
 11340  0012EA  0B1E               	andlw	30
 11341  0012EC  6E3E               	movwf	auto_mount@chk_wp^0,c
 11342  0012EE  ECD4  F002         	call	_auto_mount	;wreg free
 11343  0012F2  0100               	movlb	0	; () banked
 11344  0012F4  6FB3               	movwf	f_open@res& (0+255),b
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;tff.c: 853: if (res != FR_OK) return res;
 11348  0012F6  51B3               	movf	f_open@res& (0+255),w,b
 11349  0012F8  B4D8               	btfsc	status,2,c
 11350  0012FA  D002               	goto	l12256
 11351  0012FC                     u14250:
 11352                           
 11353                           ; BSR set to: 0
 11354  0012FC  51B3               	movf	f_open@res& (0+255),w,b
 11355  0012FE  0012               	return	
 11356  001300                     l12256:
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11360  001300  0EB6               	movlw	low f_open@dj
 11361  001302  6F7E               	movwf	trace_path@dj& (0+255),b
 11362  001304  0EA1               	movlw	low f_open@fn
 11363  001306  6F7F               	movwf	trace_path@fn& (0+255),b
 11364  001308  C09A  F080         	movff	f_open@path,trace_path@path
 11365  00130C  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11366  001310  0EB4               	movlw	low f_open@dir
 11367  001312  6F82               	movwf	trace_path@dir& (0+255),b
 11368  001314  EC41  F00F         	call	_trace_path	;wreg free
 11369  001318  0100               	movlb	0	; () banked
 11370  00131A  6FB3               	movwf	f_open@res& (0+255),b
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11374  00131C  C09C  F09D         	movff	f_open@mode,??_f_open
 11375  001320  0E1C               	movlw	28
 11376  001322  179D               	andwf	??_f_open& (0+255),f,b
 11377  001324  B4D8               	btfsc	status,2,c
 11378  001326  D0E0               	goto	l12318
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11382  001328  51B3               	movf	f_open@res& (0+255),w,b
 11383  00132A  B4D8               	btfsc	status,2,c
 11384  00132C  D035               	goto	l1099
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11388  00132E  0E02               	movlw	2
 11389  001330  19B3               	xorwf	f_open@res& (0+255),w,b
 11390  001332  A4D8               	btfss	status,2,c
 11391  001334  D7E3               	goto	u14250
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11395  001336  0EB6               	movlw	low f_open@dj
 11396  001338  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11397  00133A  0EB4               	movlw	low f_open@dir
 11398  00133C  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11399  00133E  EC81  F010         	call	_reserve_direntry	;wreg free
 11400  001342  0100               	movlb	0	; () banked
 11401  001344  6FB3               	movwf	f_open@res& (0+255),b
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;tff.c: 864: if (res != FR_OK) return res;
 11405  001346  51B3               	movf	f_open@res& (0+255),w,b
 11406  001348  A4D8               	btfss	status,2,c
 11407  00134A  D7D8               	goto	u14250
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;tff.c: 865: memset(dir, 0, 32);
 11411  00134C  C0B4  F00A         	movff	f_open@dir,memset@p1
 11412  001350  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11413  001354  0E00               	movlw	0
 11414  001356  6E0D               	movwf	(memset@c+1)^0,c
 11415  001358  0E00               	movlw	0
 11416  00135A  6E0C               	movwf	memset@c^0,c
 11417  00135C  0E00               	movlw	0
 11418  00135E  6E0F               	movwf	(memset@n+1)^0,c
 11419  001360  0E20               	movlw	32
 11420  001362  6E0E               	movwf	memset@n^0,c
 11421  001364  EC09  F02C         	call	_memset	;wreg free
 11422                           
 11423                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11424  001368  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11425  00136C  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11426  001370  0EA1               	movlw	low f_open@fn
 11427  001372  6E0C               	movwf	memcpy@s1^0,c
 11428  001374  6A0D               	clrf	(memcpy@s1+1)^0,c
 11429  001376  0E00               	movlw	0
 11430  001378  6E0F               	movwf	(memcpy@n+1)^0,c
 11431  00137A  0E0B               	movlw	11
 11432  00137C  6E0E               	movwf	memcpy@n^0,c
 11433  00137E  EC13  F02A         	call	_memcpy	;wreg free
 11434                           
 11435                           ;tff.c: 867: dir[12] = fn[11];
 11436  001382  0100               	movlb	0	; () banked
 11437  001384  EE20 F00C          	lfsr	2,12
 11438  001388  51B4               	movf	f_open@dir& (0+255),w,b
 11439  00138A  26D9               	addwf	fsr2l,f,c
 11440  00138C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11441  00138E  22DA               	addwfc	fsr2h,f,c
 11442  001390  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;tff.c: 868: mode |= 0x08;
 11446  001394  879C               	bsf	f_open@mode& (0+255),3,b
 11447                           
 11448                           ;tff.c: 869: }
 11449  001396  D07B               	goto	l12306
 11450  001398                     l1099:
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11454  001398  A59C               	btfss	f_open@mode& (0+255),2,b
 11455  00139A  D002               	goto	l12286
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;tff.c: 872: return FR_EXIST;
 11459  00139C  0E07               	movlw	7
 11460  00139E  0012               	return	
 11461  0013A0                     l12286:
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11465  0013A0  51B4               	movf	f_open@dir& (0+255),w,b
 11466  0013A2  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11467  0013A4  B4D8               	btfsc	status,2,c
 11468  0013A6  D00C               	goto	u14320
 11469                           
 11470                           ; BSR set to: 0
 11471  0013A8  EE20 F00B          	lfsr	2,11
 11472  0013AC  51B4               	movf	f_open@dir& (0+255),w,b
 11473  0013AE  26D9               	addwf	fsr2l,f,c
 11474  0013B0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11475  0013B2  22DA               	addwfc	fsr2h,f,c
 11476  0013B4  50DF               	movf	indf2,w,c
 11477  0013B6  6F9D               	movwf	??_f_open& (0+255),b
 11478  0013B8  0E11               	movlw	17
 11479  0013BA  179D               	andwf	??_f_open& (0+255),f,b
 11480  0013BC  B4D8               	btfsc	status,2,c
 11481  0013BE  D002               	goto	l1104
 11482  0013C0                     u14320:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;tff.c: 874: return FR_DENIED;
 11486  0013C0  0E06               	movlw	6
 11487  0013C2  0012               	return	
 11488  0013C4                     l1104:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;tff.c: 875: if (mode & 0x08) {
 11492  0013C4  A79C               	btfss	f_open@mode& (0+255),3,b
 11493  0013C6  D063               	goto	l12306
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11497  0013C8  EE20 F01A          	lfsr	2,26
 11498  0013CC  51B4               	movf	f_open@dir& (0+255),w,b
 11499  0013CE  26D9               	addwf	fsr2l,f,c
 11500  0013D0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11501  0013D2  22DA               	addwfc	fsr2h,f,c
 11502  0013D4  CFDE F0AD          	movff	postinc2,f_open@rs
 11503  0013D8  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11504                           
 11505                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11506  0013DC  EE20 F01A          	lfsr	2,26
 11507  0013E0  51B4               	movf	f_open@dir& (0+255),w,b
 11508  0013E2  26D9               	addwf	fsr2l,f,c
 11509  0013E4  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11510  0013E6  22DA               	addwfc	fsr2h,f,c
 11511  0013E8  0E00               	movlw	0
 11512  0013EA  6EDE               	movwf	postinc2,c
 11513  0013EC  0E00               	movlw	0
 11514  0013EE  6EDD               	movwf	postdec2,c
 11515                           
 11516                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11517  0013F0  EE20 F01C          	lfsr	2,28
 11518  0013F4  51B4               	movf	f_open@dir& (0+255),w,b
 11519  0013F6  26D9               	addwf	fsr2l,f,c
 11520  0013F8  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11521  0013FA  22DA               	addwfc	fsr2h,f,c
 11522  0013FC  6ADE               	clrf	postinc2,c
 11523  0013FE  6ADE               	clrf	postinc2,c
 11524  001400  6ADE               	clrf	postinc2,c
 11525  001402  6ADD               	clrf	postdec2,c
 11526                           
 11527                           ;tff.c: 884: dj.fs->winflag = 1;
 11528  001404  EE20 F01F          	lfsr	2,31
 11529  001408  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11530  00140A  26D9               	addwf	fsr2l,f,c
 11531  00140C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11532  00140E  22DA               	addwfc	fsr2h,f,c
 11533  001410  0E01               	movlw	1
 11534  001412  6EDF               	movwf	indf2,c
 11535                           
 11536                           ;tff.c: 885: dw = dj.fs->winsect;
 11537  001414  EE20 F004          	lfsr	2,4
 11538  001418  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11539  00141A  26D9               	addwf	fsr2l,f,c
 11540  00141C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11541  00141E  22DA               	addwfc	fsr2h,f,c
 11542  001420  CFDE F0AF          	movff	postinc2,f_open@dw
 11543  001424  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11544  001428  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11545  00142C  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11549  001430  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11550  001434  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11551  001438  ECB7  F022         	call	_remove_chain	;wreg free
 11552  00143C  0900               	iorlw	0
 11553  00143E  B4D8               	btfsc	status,2,c
 11554  001440  D00D               	goto	u14350
 11555  001442  C0AF  F035         	movff	f_open@dw,move_window@sector
 11556  001446  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11557  00144A  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11558  00144E  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11559  001452  EC1B  F015         	call	_move_window	;wreg free
 11560  001456  0900               	iorlw	0
 11561  001458  A4D8               	btfss	status,2,c
 11562  00145A  D002               	goto	l12304
 11563  00145C                     u14350:
 11564                           
 11565                           ;tff.c: 887: return FR_RW_ERROR;
 11566  00145C  0E08               	movlw	8
 11567  00145E  0012               	return	
 11568  001460                     l12304:
 11569                           
 11570                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11571  001460  0EFF               	movlw	255
 11572  001462  0100               	movlb	0	; () banked
 11573  001464  6F9D               	movwf	??_f_open& (0+255),b
 11574  001466  0EFF               	movlw	255
 11575  001468  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11576  00146A  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11577  00146E  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11578  001472  519D               	movf	??_f_open& (0+255),w,b
 11579  001474  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11580  001476  519E               	movf	(??_f_open+1)& (0+255),w,b
 11581  001478  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11582  00147A  EE20 F018          	lfsr	2,24
 11583  00147E  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11584  001480  26D9               	addwf	fsr2l,f,c
 11585  001482  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11586  001484  22DA               	addwfc	fsr2h,f,c
 11587  001486  C09F  FFDE         	movff	??_f_open+2,postinc2
 11588  00148A  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11589  00148E                     l12306:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11593  00148E  A79C               	btfss	f_open@mode& (0+255),3,b
 11594  001490  D046               	goto	l12338
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;tff.c: 892: dir[11] = 0;
 11598  001492  EE20 F00B          	lfsr	2,11
 11599  001496  51B4               	movf	f_open@dir& (0+255),w,b
 11600  001498  26D9               	addwf	fsr2l,f,c
 11601  00149A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11602  00149C  22DA               	addwfc	fsr2h,f,c
 11603  00149E  0E00               	movlw	0
 11604  0014A0  6EDF               	movwf	indf2,c
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;tff.c: 893: dw = get_fattime();
 11608  0014A2  EC5E  F01A         	call	_get_fattime	;wreg free
 11609  0014A6  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11610  0014AA  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11611  0014AE  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11612  0014B2  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11613                           
 11614                           ; BSR set to: 1
 11615                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11616  0014B6  0100               	movlb	0	; () banked
 11617  0014B8  EE20 F00E          	lfsr	2,14
 11618  0014BC  51B4               	movf	f_open@dir& (0+255),w,b
 11619  0014BE  26D9               	addwf	fsr2l,f,c
 11620  0014C0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11621  0014C2  22DA               	addwfc	fsr2h,f,c
 11622  0014C4  C0AF  FFDE         	movff	f_open@dw,postinc2
 11623  0014C8  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11624  0014CC  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11625  0014D0  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;tff.c: 895: dj.fs->winflag = 1;
 11629  0014D4  EE20 F01F          	lfsr	2,31
 11630  0014D8  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11631  0014DA  26D9               	addwf	fsr2l,f,c
 11632  0014DC  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11633  0014DE  22DA               	addwfc	fsr2h,f,c
 11634  0014E0  0E01               	movlw	1
 11635  0014E2  6EDF               	movwf	indf2,c
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;tff.c: 896: mode |= 0x20;
 11639  0014E4  8B9C               	bsf	f_open@mode& (0+255),5,b
 11640  0014E6  D01B               	goto	l12338
 11641  0014E8                     l12318:
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11645  0014E8  51B3               	movf	f_open@res& (0+255),w,b
 11646  0014EA  A4D8               	btfss	status,2,c
 11647  0014EC  D707               	goto	u14250
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11651  0014EE  51B4               	movf	f_open@dir& (0+255),w,b
 11652  0014F0  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11653  0014F2  B4D8               	btfsc	status,2,c
 11654  0014F4  D008               	goto	u14390
 11655                           
 11656                           ; BSR set to: 0
 11657  0014F6  EE20 F00B          	lfsr	2,11
 11658  0014FA  51B4               	movf	f_open@dir& (0+255),w,b
 11659  0014FC  26D9               	addwf	fsr2l,f,c
 11660  0014FE  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11661  001500  22DA               	addwfc	fsr2h,f,c
 11662  001502  A8DF               	btfss	indf2,4,c
 11663  001504  D002               	goto	l1114
 11664  001506                     u14390:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;tff.c: 904: return FR_NO_FILE;
 11668  001506  0E02               	movlw	2
 11669  001508  0012               	return	
 11670  00150A                     l1114:
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11674  00150A  A39C               	btfss	f_open@mode& (0+255),1,b
 11675  00150C  D008               	goto	l12338
 11676                           
 11677                           ; BSR set to: 0
 11678  00150E  EE20 F00B          	lfsr	2,11
 11679  001512  51B4               	movf	f_open@dir& (0+255),w,b
 11680  001514  26D9               	addwf	fsr2l,f,c
 11681  001516  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11682  001518  22DA               	addwfc	fsr2h,f,c
 11683  00151A  B0DF               	btfsc	indf2,0,c
 11684  00151C  D751               	goto	u14320
 11685  00151E                     l12338:
 11686                           
 11687                           ; BSR set to: 0
 11688                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11689  00151E  EE20 F004          	lfsr	2,4
 11690  001522  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11691  001524  26D9               	addwf	fsr2l,f,c
 11692  001526  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11693  001528  22DA               	addwfc	fsr2h,f,c
 11694  00152A  EE10 F016          	lfsr	1,22
 11695  00152E  5198               	movf	f_open@fp& (0+255),w,b
 11696  001530  26E1               	addwf	fsr1l,f,c
 11697  001532  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11698  001534  22E2               	addwfc	fsr1h,f,c
 11699  001536  CFDE FFE6          	movff	postinc2,postinc1
 11700  00153A  CFDE FFE6          	movff	postinc2,postinc1
 11701  00153E  CFDE FFE6          	movff	postinc2,postinc1
 11702  001542  CFDE FFE6          	movff	postinc2,postinc1
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;tff.c: 910: fp->dir_ptr = dir;
 11706  001546  EE20 F01A          	lfsr	2,26
 11707  00154A  5198               	movf	f_open@fp& (0+255),w,b
 11708  00154C  26D9               	addwf	fsr2l,f,c
 11709  00154E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11710  001550  22DA               	addwfc	fsr2h,f,c
 11711  001552  C0B4  FFDE         	movff	f_open@dir,postinc2
 11712  001556  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;tff.c: 912: fp->flag = mode;
 11716  00155A  EE20 F002          	lfsr	2,2
 11717  00155E  5198               	movf	f_open@fp& (0+255),w,b
 11718  001560  26D9               	addwf	fsr2l,f,c
 11719  001562  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11720  001564  22DA               	addwfc	fsr2h,f,c
 11721  001566  C09C  FFDF         	movff	f_open@mode,indf2
 11722                           
 11723                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11724  00156A  EE20 F01A          	lfsr	2,26
 11725  00156E  51B4               	movf	f_open@dir& (0+255),w,b
 11726  001570  26D9               	addwf	fsr2l,f,c
 11727  001572  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11728  001574  22DA               	addwfc	fsr2h,f,c
 11729  001576  EE10 F00E          	lfsr	1,14
 11730  00157A  5198               	movf	f_open@fp& (0+255),w,b
 11731  00157C  26E1               	addwf	fsr1l,f,c
 11732  00157E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11733  001580  22E2               	addwfc	fsr1h,f,c
 11734  001582  CFDE FFE6          	movff	postinc2,postinc1
 11735  001586  CFDD FFE5          	movff	postdec2,postdec1
 11736                           
 11737                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11738  00158A  EE20 F01C          	lfsr	2,28
 11739  00158E  51B4               	movf	f_open@dir& (0+255),w,b
 11740  001590  26D9               	addwf	fsr2l,f,c
 11741  001592  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11742  001594  22DA               	addwfc	fsr2h,f,c
 11743  001596  EE10 F00A          	lfsr	1,10
 11744  00159A  5198               	movf	f_open@fp& (0+255),w,b
 11745  00159C  26E1               	addwf	fsr1l,f,c
 11746  00159E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11747  0015A0  22E2               	addwfc	fsr1h,f,c
 11748  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 11749  0015A6  CFDE FFE6          	movff	postinc2,postinc1
 11750  0015AA  CFDE FFE6          	movff	postinc2,postinc1
 11751  0015AE  CFDE FFE6          	movff	postinc2,postinc1
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11755  0015B2  EE20 F006          	lfsr	2,6
 11756  0015B6  5198               	movf	f_open@fp& (0+255),w,b
 11757  0015B8  26D9               	addwf	fsr2l,f,c
 11758  0015BA  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11759  0015BC  22DA               	addwfc	fsr2h,f,c
 11760  0015BE  6ADE               	clrf	postinc2,c
 11761  0015C0  6ADE               	clrf	postinc2,c
 11762  0015C2  6ADE               	clrf	postinc2,c
 11763  0015C4  6ADD               	clrf	postdec2,c
 11764                           
 11765                           ; BSR set to: 0
 11766  0015C6  EE20 F003          	lfsr	2,3
 11767  0015CA  5198               	movf	f_open@fp& (0+255),w,b
 11768  0015CC  26D9               	addwf	fsr2l,f,c
 11769  0015CE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11770  0015D0  22DA               	addwfc	fsr2h,f,c
 11771  0015D2  0EFF               	movlw	255
 11772  0015D4  6EDF               	movwf	indf2,c
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11776  0015D6  EE20 F004          	lfsr	2,4
 11777  0015DA  5198               	movf	f_open@fp& (0+255),w,b
 11778  0015DC  26D9               	addwf	fsr2l,f,c
 11779  0015DE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11780  0015E0  22DA               	addwfc	fsr2h,f,c
 11781  0015E2  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11782  0015E6  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11783                           
 11784                           ; BSR set to: 0
 11785  0015EA  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11786  0015EE  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11787  0015F2  C098  FFE1         	movff	f_open@fp,fsr1l
 11788  0015F6  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11789  0015FA  CFDE FFE6          	movff	postinc2,postinc1
 11790  0015FE  CFDD FFE5          	movff	postdec2,postdec1
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;tff.c: 922: return FR_OK;
 11794  001602  0E00               	movlw	0
 11795  001604  0012               	return		;funcret
 11796  001606                     __end_of_f_open:
 11797                           	callstack 0
 11798                           
 11799 ;; *************** function _trace_path *****************
 11800 ;; Defined at:
 11801 ;;		line 502 in file "bibliotecas/tff.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11804 ;;		 -> f_open@dj(14), 
 11805 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11806 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11807 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11808 ;;		 -> STR_16(13), filename(20), 
 11809 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11810 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11813 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11814 ;;  clust           2   45[BANK0 ] unsigned short 
 11815 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11816 ;;		 -> NULL(0), fs(544), 
 11817 ;;  ds              1   47[BANK0 ] unsigned char 
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      enum E155
 11820 ;; Registers used:
 11821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11822 ;; Tracked objects:
 11823 ;;		On entry : 3F/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11827 ;;      Params:         0       5       0       0       0       0       0       0       0
 11828 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11829 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11830 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11831 ;;Total ram usage:       20 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:   10
 11834 ;; This function calls:
 11835 ;;		_clust2sect
 11836 ;;		_make_dirfile
 11837 ;;		_memcmp
 11838 ;;		_move_window
 11839 ;;		_next_dir_entry
 11840 ;; This function is called by:
 11841 ;;		_f_open
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text71
 11846  001E82                     __ptext71:
 11847                           	callstack 0
 11848  001E82                     _trace_path:
 11849                           	callstack 15
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;tff.c: 512: FATFS *fs = FatFs;
 11853                           
 11854                           ;incstack = 0
 11855  001E82  C04D  F08B         	movff	_FatFs,trace_path@fs
 11856  001E86  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;tff.c: 515: dj->fs = fs;
 11860  001E8A  517E               	movf	trace_path@dj& (0+255),w,b
 11861  001E8C  6ED9               	movwf	fsr2l,c
 11862  001E8E  6ADA               	clrf	fsr2h,c
 11863  001E90  0E04               	movlw	4
 11864  001E92  26D9               	addwf	fsr2l,f,c
 11865  001E94  C08B  FFDE         	movff	trace_path@fs,postinc2
 11866  001E98  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;tff.c: 516: clust = fs->dirbase;
 11870  001E9C  EE20 F00C          	lfsr	2,12
 11871  001EA0  518B               	movf	trace_path@fs& (0+255),w,b
 11872  001EA2  26D9               	addwf	fsr2l,f,c
 11873  001EA4  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11874  001EA6  22DA               	addwfc	fsr2h,f,c
 11875  001EA8  CFDE F08D          	movff	postinc2,trace_path@clust
 11876  001EAC  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11880  001EB0  517E               	movf	trace_path@dj& (0+255),w,b
 11881  001EB2  6ED9               	movwf	fsr2l,c
 11882  001EB4  6ADA               	clrf	fsr2h,c
 11883  001EB6  0E06               	movlw	6
 11884  001EB8  26D9               	addwf	fsr2l,f,c
 11885  001EBA  0E00               	movlw	0
 11886  001EBC  6EDE               	movwf	postinc2,c
 11887  001EBE  0E00               	movlw	0
 11888  001EC0  6EDD               	movwf	postdec2,c
 11889  001EC2  517E               	movf	trace_path@dj& (0+255),w,b
 11890  001EC4  6EE1               	movwf	fsr1l,c
 11891  001EC6  6AE2               	clrf	fsr1h,c
 11892  001EC8  0E08               	movlw	8
 11893  001ECA  26E1               	addwf	fsr1l,f,c
 11894  001ECC  CFDE FFE6          	movff	postinc2,postinc1
 11895  001ED0  CFDD FFE5          	movff	postdec2,postdec1
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;tff.c: 525: dj->sect = clust;
 11899  001ED4  518D               	movf	trace_path@clust& (0+255),w,b
 11900  001ED6  6F83               	movwf	??_trace_path& (0+255),b
 11901  001ED8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11902  001EDA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11903  001EDC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11904  001EDE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11905  001EE0  517E               	movf	trace_path@dj& (0+255),w,b
 11906  001EE2  6ED9               	movwf	fsr2l,c
 11907  001EE4  6ADA               	clrf	fsr2h,c
 11908  001EE6  0E0A               	movlw	10
 11909  001EE8  26D9               	addwf	fsr2l,f,c
 11910  001EEA  C083  FFDE         	movff	??_trace_path,postinc2
 11911  001EEE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11912  001EF2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11913  001EF6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11917  001EFA  517E               	movf	trace_path@dj& (0+255),w,b
 11918  001EFC  6ED9               	movwf	fsr2l,c
 11919  001EFE  6ADA               	clrf	fsr2h,c
 11920  001F00  0E02               	movlw	2
 11921  001F02  26D9               	addwf	fsr2l,f,c
 11922  001F04  0E00               	movlw	0
 11923  001F06  6EDE               	movwf	postinc2,c
 11924  001F08  0E00               	movlw	0
 11925  001F0A  6EDD               	movwf	postdec2,c
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;tff.c: 529: if (*path == '\0') {
 11929  001F0C  C080  FFF6         	movff	trace_path@path,tblptrl
 11930  001F10  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11931  001F14  6AF8               	clrf	tblptru,c
 11932  001F16  0E07               	movlw	(high __ramtop+-1)
 11933  001F18  64F7               	cpfsgt	tblptrh,c
 11934  001F1A  D003               	bra	u13497
 11935  001F1C  0008               	tblrd		*
 11936  001F1E  50F5               	movf	tablat,w,c
 11937  001F20  D005               	bra	u13490
 11938  001F22                     u13497:
 11939  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11940  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11941  001F2A  50E7               	movf	indf1,w,c
 11942  001F2C                     u13490:
 11943  001F2C  0900               	iorlw	0
 11944  001F2E  A4D8               	btfss	status,2,c
 11945  001F30  D00A               	goto	l11768
 11946                           
 11947                           ;tff.c: 530: *dir = (0); return FR_OK;
 11948  001F32  0100               	movlb	0	; () banked
 11949  001F34  5182               	movf	trace_path@dir& (0+255),w,b
 11950  001F36  6ED9               	movwf	fsr2l,c
 11951  001F38  6ADA               	clrf	fsr2h,c
 11952  001F3A  0E00               	movlw	0
 11953  001F3C  6EDE               	movwf	postinc2,c
 11954  001F3E  0E00               	movlw	0
 11955  001F40  6EDD               	movwf	postdec2,c
 11956  001F42                     l11764:
 11957                           
 11958                           ; BSR set to: 0
 11959  001F42  0E00               	movlw	0
 11960  001F44  0012               	return	
 11961  001F46                     l11768:
 11962                           
 11963                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11964  001F46  0E80               	movlw	low trace_path@path
 11965  001F48  6E12               	movwf	make_dirfile@path^0,c
 11966  001F4A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11967  001F4E  ECB1  F019         	call	_make_dirfile	;wreg free
 11968  001F52  0100               	movlb	0	; () banked
 11969  001F54  6F8F               	movwf	trace_path@ds& (0+255),b
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11973  001F56  058F               	decf	trace_path@ds& (0+255),w,b
 11974  001F58  A4D8               	btfss	status,2,c
 11975  001F5A  D002               	goto	l11776
 11976                           
 11977                           ; BSR set to: 0
 11978  001F5C  0E04               	movlw	4
 11979  001F5E  0012               	return	
 11980  001F60                     l11776:
 11981                           
 11982                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11983  001F60  0100               	movlb	0	; () banked
 11984  001F62  517E               	movf	trace_path@dj& (0+255),w,b
 11985  001F64  6ED9               	movwf	fsr2l,c
 11986  001F66  6ADA               	clrf	fsr2h,c
 11987  001F68  0E0A               	movlw	10
 11988  001F6A  26D9               	addwf	fsr2l,f,c
 11989  001F6C  CFDE F035          	movff	postinc2,move_window@sector
 11990  001F70  CFDE F036          	movff	postinc2,move_window@sector+1
 11991  001F74  CFDE F037          	movff	postinc2,move_window@sector+2
 11992  001F78  CFDE F038          	movff	postinc2,move_window@sector+3
 11993  001F7C  EC1B  F015         	call	_move_window	;wreg free
 11994  001F80  0900               	iorlw	0
 11995  001F82  A4D8               	btfss	status,2,c
 11996  001F84  D002               	goto	l11782
 11997  001F86  0E08               	movlw	8
 11998  001F88  0012               	return	
 11999  001F8A                     l11782:
 12000                           
 12001                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 12002  001F8A  0100               	movlb	0	; () banked
 12003  001F8C  517E               	movf	trace_path@dj& (0+255),w,b
 12004  001F8E  6ED9               	movwf	fsr2l,c
 12005  001F90  6ADA               	clrf	fsr2h,c
 12006  001F92  0E02               	movlw	2
 12007  001F94  26D9               	addwf	fsr2l,f,c
 12008  001F96  CFDE F083          	movff	postinc2,??_trace_path
 12009  001F9A  CFDD F084          	movff	postdec2,??_trace_path+1
 12010  001F9E  0E0F               	movlw	15
 12011  001FA0  1783               	andwf	??_trace_path& (0+255),f,b
 12012  001FA2  0E00               	movlw	0
 12013  001FA4  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 12014  001FA6  0E05               	movlw	5
 12015  001FA8                     u13535:
 12016  001FA8  90D8               	bcf	status,0,c
 12017  001FAA  3783               	rlcf	??_trace_path& (0+255),f,b
 12018  001FAC  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 12019  001FAE  2EE8               	decfsz	wreg,f,c
 12020  001FB0  D7FB               	goto	u13535
 12021  001FB2  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 12022  001FB6  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 12023  001FBA  5183               	movf	??_trace_path& (0+255),w,b
 12024  001FBC  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 12025  001FBE  5184               	movf	(??_trace_path+1)& (0+255),w,b
 12026  001FC0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 12027  001FC2  0E20               	movlw	32
 12028  001FC4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 12029  001FC6  6F90               	movwf	trace_path@dptr& (0+255),b
 12030  001FC8  0E00               	movlw	0
 12031  001FCA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 12032  001FCC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;tff.c: 539: if (dptr[0] == 0)
 12036  001FCE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12037  001FD2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12038  001FD6  50DF               	movf	indf2,w,c
 12039  001FD8  A4D8               	btfss	status,2,c
 12040  001FDA  D00D               	goto	l11794
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12044  001FDC  518F               	movf	trace_path@ds& (0+255),w,b
 12045  001FDE  B4D8               	btfsc	status,2,c
 12046  001FE0  D004               	goto	l11790
 12047                           
 12048                           ; BSR set to: 0
 12049  001FE2  0E00               	movlw	0
 12050  001FE4  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12051  001FE6  0E03               	movlw	3
 12052  001FE8  D003               	goto	L3
 12053  001FEA                     l11790:
 12054                           
 12055                           ; BSR set to: 0
 12056  001FEA  0E00               	movlw	0
 12057  001FEC  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12058  001FEE  0E02               	movlw	2
 12059  001FF0                     L3:
 12060  001FF0  6F87               	movwf	_trace_path$1780& (0+255),b
 12061                           
 12062                           ; BSR set to: 0
 12063  001FF2  5187               	movf	_trace_path$1780& (0+255),w,b
 12064  001FF4  0012               	return	
 12065  001FF6                     l11794:
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 12069  001FF6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12070  001FFA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12071  001FFE  0EE5               	movlw	229
 12072  002000  18DE               	xorwf	postinc2,w,c
 12073  002002  B4D8               	btfsc	status,2,c
 12074  002004  D019               	goto	l11802
 12075                           
 12076                           ; BSR set to: 0
 12077  002006  EE20 F00B          	lfsr	2,11
 12078  00200A  5190               	movf	trace_path@dptr& (0+255),w,b
 12079  00200C  26D9               	addwf	fsr2l,f,c
 12080  00200E  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12081  002010  22DA               	addwfc	fsr2h,f,c
 12082  002012  B6DF               	btfsc	indf2,3,c
 12083  002014  D011               	goto	l11802
 12084                           
 12085                           ; BSR set to: 0
 12086  002016  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 12087  00201A  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 12088  00201E  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 12089  002022  6A0D               	clrf	(memcmp@s2+1)^0,c
 12090  002024  0E00               	movlw	0
 12091  002026  6E0F               	movwf	(memcmp@n+1)^0,c
 12092  002028  0E0B               	movlw	11
 12093  00202A  6E0E               	movwf	memcmp@n^0,c
 12094  00202C  ECA0  F023         	call	_memcmp	;wreg free
 12095  002030  500A               	movf	?_memcmp^0,w,c
 12096  002032  100B               	iorwf	(?_memcmp+1)^0,w,c
 12097  002034  B4D8               	btfsc	status,2,c
 12098  002036  D015               	goto	l11812
 12099  002038                     l11802:
 12100                           
 12101                           ;tff.c: 544: if (!next_dir_entry(dj))
 12102  002038  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 12103  00203C  EC4D  F018         	call	_next_dir_entry	;wreg free
 12104  002040  0900               	iorlw	0
 12105  002042  A4D8               	btfss	status,2,c
 12106  002044  D78D               	goto	l11776
 12107                           
 12108                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12109  002046  0100               	movlb	0	; () banked
 12110  002048  518F               	movf	trace_path@ds& (0+255),w,b
 12111  00204A  B4D8               	btfsc	status,2,c
 12112  00204C  D004               	goto	l11808
 12113                           
 12114                           ; BSR set to: 0
 12115  00204E  0E00               	movlw	0
 12116  002050  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12117  002052  0E03               	movlw	3
 12118  002054  D003               	goto	L4
 12119  002056                     l11808:
 12120                           
 12121                           ; BSR set to: 0
 12122  002056  0E00               	movlw	0
 12123  002058  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12124  00205A  0E02               	movlw	2
 12125  00205C                     L4:
 12126  00205C  6F89               	movwf	_trace_path$1782& (0+255),b
 12127                           
 12128                           ; BSR set to: 0
 12129  00205E  5189               	movf	_trace_path$1782& (0+255),w,b
 12130  002060  0012               	return	
 12131  002062                     l11812:
 12132                           
 12133                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 12134  002062  0100               	movlb	0	; () banked
 12135  002064  518F               	movf	trace_path@ds& (0+255),w,b
 12136  002066  A4D8               	btfss	status,2,c
 12137  002068  D008               	goto	l11820
 12138                           
 12139                           ; BSR set to: 0
 12140  00206A  5182               	movf	trace_path@dir& (0+255),w,b
 12141  00206C  6ED9               	movwf	fsr2l,c
 12142  00206E  6ADA               	clrf	fsr2h,c
 12143  002070  C090  FFDE         	movff	trace_path@dptr,postinc2
 12144  002074  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 12145  002078  D764               	goto	l11764
 12146  00207A                     l11820:
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 12150  00207A  EE20 F00B          	lfsr	2,11
 12151  00207E  5190               	movf	trace_path@dptr& (0+255),w,b
 12152  002080  26D9               	addwf	fsr2l,f,c
 12153  002082  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12154  002084  22DA               	addwfc	fsr2h,f,c
 12155  002086  B8DF               	btfsc	indf2,4,c
 12156  002088  D002               	goto	l11826
 12157                           
 12158                           ; BSR set to: 0
 12159  00208A  0E03               	movlw	3
 12160  00208C  0012               	return	
 12161  00208E                     l11826:
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 12165  00208E  EE20 F01A          	lfsr	2,26
 12166  002092  5190               	movf	trace_path@dptr& (0+255),w,b
 12167  002094  26D9               	addwf	fsr2l,f,c
 12168  002096  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12169  002098  22DA               	addwfc	fsr2h,f,c
 12170  00209A  CFDE F08D          	movff	postinc2,trace_path@clust
 12171  00209E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 12175  0020A2  517E               	movf	trace_path@dj& (0+255),w,b
 12176  0020A4  6ED9               	movwf	fsr2l,c
 12177  0020A6  6ADA               	clrf	fsr2h,c
 12178  0020A8  0E06               	movlw	6
 12179  0020AA  26D9               	addwf	fsr2l,f,c
 12180  0020AC  C08D  FFDE         	movff	trace_path@clust,postinc2
 12181  0020B0  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 12182  0020B4  517E               	movf	trace_path@dj& (0+255),w,b
 12183  0020B6  6EE1               	movwf	fsr1l,c
 12184  0020B8  6AE2               	clrf	fsr1h,c
 12185  0020BA  0E08               	movlw	8
 12186  0020BC  26E1               	addwf	fsr1l,f,c
 12187  0020BE  CFDE FFE6          	movff	postinc2,postinc1
 12188  0020C2  CFDD FFE5          	movff	postdec2,postdec1
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;tff.c: 555: dj->sect = clust2sect(clust);
 12192  0020C6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 12193  0020CA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 12194  0020CE  EC0A  F021         	call	_clust2sect	;wreg free
 12195  0020D2  0100               	movlb	0	; () banked
 12196  0020D4  517E               	movf	trace_path@dj& (0+255),w,b
 12197  0020D6  6ED9               	movwf	fsr2l,c
 12198  0020D8  6ADA               	clrf	fsr2h,c
 12199  0020DA  0E0A               	movlw	10
 12200  0020DC  26D9               	addwf	fsr2l,f,c
 12201  0020DE  C016  FFDE         	movff	?_clust2sect,postinc2
 12202  0020E2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12203  0020E6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12204  0020EA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;tff.c: 556: dj->index = 2;
 12208  0020EE  517E               	movf	trace_path@dj& (0+255),w,b
 12209  0020F0  6ED9               	movwf	fsr2l,c
 12210  0020F2  6ADA               	clrf	fsr2h,c
 12211  0020F4  0E02               	movlw	2
 12212  0020F6  26D9               	addwf	fsr2l,f,c
 12213  0020F8  0E02               	movlw	2
 12214  0020FA  6EDE               	movwf	postinc2,c
 12215  0020FC  0E00               	movlw	0
 12216  0020FE  6EDD               	movwf	postdec2,c
 12217                           
 12218                           ;tff.c: 557: }
 12219  002100  D722               	goto	l11768
 12220  002102                     __end_of_trace_path:
 12221                           	callstack 0
 12222                           
 12223 ;; *************** function _make_dirfile *****************
 12224 ;; Defined at:
 12225 ;;		line 439 in file "bibliotecas/tff.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 12228 ;;		 -> trace_path@path(2), 
 12229 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 12230 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;  c               1   27[COMRAM] unsigned char 
 12233 ;;  n               1   26[COMRAM] unsigned char 
 12234 ;;  a               1   25[COMRAM] unsigned char 
 12235 ;;  t               1   24[COMRAM] unsigned char 
 12236 ;;  b               1   23[COMRAM] unsigned char 
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  1    wreg      unsigned char 
 12239 ;; Registers used:
 12240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12246 ;;      Params:         2       0       0       0       0       0       0       0       0
 12247 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12248 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12249 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12250 ;;Total ram usage:       11 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:    3
 12253 ;; This function calls:
 12254 ;;		_memset
 12255 ;; This function is called by:
 12256 ;;		_trace_path
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text72
 12261  003362                     __ptext72:
 12262                           	callstack 0
 12263  003362                     _make_dirfile:
 12264                           	callstack 21
 12265                           
 12266                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 12267                           
 12268                           ;incstack = 0
 12269  003362  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 12270  003366  6A0B               	clrf	(memset@p1+1)^0,c
 12271  003368  0E00               	movlw	0
 12272  00336A  6E0D               	movwf	(memset@c+1)^0,c
 12273  00336C  0E20               	movlw	32
 12274  00336E  6E0C               	movwf	memset@c^0,c
 12275  003370  0E00               	movlw	0
 12276  003372  6E0F               	movwf	(memset@n+1)^0,c
 12277  003374  0E0B               	movlw	11
 12278  003376  6E0E               	movwf	memset@n^0,c
 12279  003378  EC09  F02C         	call	_memset	;wreg free
 12280                           
 12281                           ;tff.c: 448: a = 0; b = 0x18;
 12282  00337C  0E00               	movlw	0
 12283  00337E  6E1A               	movwf	make_dirfile@a^0,c
 12284  003380  0E18               	movlw	24
 12285  003382  6E18               	movwf	make_dirfile@b^0,c
 12286                           
 12287                           ;tff.c: 449: n = 0; t = 8;
 12288  003384  0E00               	movlw	0
 12289  003386  6E1B               	movwf	make_dirfile@n^0,c
 12290  003388  0E08               	movlw	8
 12291  00338A  6E19               	movwf	make_dirfile@t^0,c
 12292  00338C                     l11398:
 12293                           
 12294                           ;tff.c: 451: c = *(*path)++;
 12295  00338C  5012               	movf	make_dirfile@path^0,w,c
 12296  00338E  6ED9               	movwf	fsr2l,c
 12297  003390  6ADA               	clrf	fsr2h,c
 12298  003392  CFDF F014          	movff	indf2,??_make_dirfile
 12299  003396  0E01               	movlw	1
 12300  003398  26DE               	addwf	postinc2,f,c
 12301  00339A  CFDF F015          	movff	indf2,??_make_dirfile+1
 12302  00339E  0E00               	movlw	0
 12303  0033A0  22DD               	addwfc	postdec2,f,c
 12304  0033A2  C014  FFF6         	movff	??_make_dirfile,tblptrl
 12305  0033A6  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 12306  0033AA  6AF8               	clrf	tblptru,c
 12307  0033AC  0E07               	movlw	(high __ramtop+-1)
 12308  0033AE  64F7               	cpfsgt	tblptrh,c
 12309  0033B0  D003               	bra	u12947
 12310  0033B2  0008               	tblrd		*
 12311  0033B4  50F5               	movf	tablat,w,c
 12312  0033B6  D005               	bra	u12940
 12313  0033B8                     u12947:
 12314  0033B8  CFF6 FFE1          	movff	tblptrl,fsr1l
 12315  0033BC  CFF7 FFE2          	movff	tblptrh,fsr1h
 12316  0033C0  50E7               	movf	indf1,w,c
 12317  0033C2                     u12940:
 12318  0033C2  6E1C               	movwf	make_dirfile@c^0,c
 12319                           
 12320                           ;tff.c: 452: if (c == '\0' || c == '/') {
 12321  0033C4  501C               	movf	make_dirfile@c^0,w,c
 12322  0033C6  B4D8               	btfsc	status,2,c
 12323  0033C8  D004               	goto	u12960
 12324  0033CA  0E2F               	movlw	47
 12325  0033CC  181C               	xorwf	make_dirfile@c^0,w,c
 12326  0033CE  A4D8               	btfss	status,2,c
 12327  0033D0  D012               	goto	l11418
 12328  0033D2                     u12960:
 12329                           
 12330                           ;tff.c: 453: if (n == 0) break;
 12331  0033D2  501B               	movf	make_dirfile@n^0,w,c
 12332  0033D4  B4D8               	btfsc	status,2,c
 12333  0033D6  D070               	goto	l11506
 12334  0033D8  501A               	movf	make_dirfile@a^0,w,c
 12335  0033DA  1418               	andwf	make_dirfile@b^0,w,c
 12336  0033DC  6E14               	movwf	??_make_dirfile^0,c
 12337  0033DE  5014               	movf	??_make_dirfile^0,w,c
 12338  0033E0  6E16               	movwf	_make_dirfile$1733^0,c
 12339  0033E2  6A17               	clrf	(_make_dirfile$1733+1)^0,c
 12340  0033E4  5013               	movf	make_dirfile@dirname^0,w,c
 12341  0033E6  6ED9               	movwf	fsr2l,c
 12342  0033E8  6ADA               	clrf	fsr2h,c
 12343  0033EA  0E0B               	movlw	11
 12344  0033EC  26D9               	addwf	fsr2l,f,c
 12345  0033EE  C016  FFDF         	movff	_make_dirfile$1733,indf2
 12346                           
 12347                           ;tff.c: 455: return c;
 12348  0033F2  501C               	movf	make_dirfile@c^0,w,c
 12349  0033F4  0012               	return	
 12350  0033F6                     l11418:
 12351                           
 12352                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12353  0033F6  0E20               	movlw	32
 12354  0033F8  641C               	cpfsgt	make_dirfile@c^0,c
 12355  0033FA  D05E               	goto	l11506
 12356  0033FC  0E7F               	movlw	127
 12357  0033FE  181C               	xorwf	make_dirfile@c^0,w,c
 12358  003400  B4D8               	btfsc	status,2,c
 12359  003402  D05A               	goto	l11506
 12360                           
 12361                           ;tff.c: 458: if (c == '.') {
 12362  003404  0E2E               	movlw	46
 12363  003406  181C               	xorwf	make_dirfile@c^0,w,c
 12364  003408  A4D8               	btfss	status,2,c
 12365  00340A  D00C               	goto	l11448
 12366                           
 12367                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12368  00340C  B01A               	btfsc	make_dirfile@a^0,0,c
 12369  00340E  D054               	goto	l11506
 12370  003410  501B               	movf	make_dirfile@n^0,w,c
 12371  003412  B4D8               	btfsc	status,2,c
 12372  003414  D051               	goto	l11506
 12373  003416  0E09               	movlw	9
 12374  003418  601B               	cpfslt	make_dirfile@n^0,c
 12375  00341A  D04E               	goto	l11506
 12376                           
 12377                           ;tff.c: 460: n = 8; t = 11; continue;
 12378  00341C  0E08               	movlw	8
 12379  00341E  6E1B               	movwf	make_dirfile@n^0,c
 12380  003420  0E0B               	movlw	11
 12381  003422  D7B3               	goto	L5
 12382  003424                     l11448:
 12383                           
 12384                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12385  003424  0E22               	movlw	34
 12386  003426  181C               	xorwf	make_dirfile@c^0,w,c
 12387  003428  B4D8               	btfsc	status,2,c
 12388  00342A  D046               	goto	l11506
 12389                           
 12390                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12391  00342C  0E2A               	movlw	42
 12392  00342E  601C               	cpfslt	make_dirfile@c^0,c
 12393  003430  D001               	goto	l11456
 12394  003432  D035               	goto	l987
 12395  003434                     l11456:
 12396                           
 12397                           ;tff.c: 473: if (c <= ',') break;
 12398  003434  0E2D               	movlw	45
 12399  003436  601C               	cpfslt	make_dirfile@c^0,c
 12400  003438  D001               	goto	l11460
 12401  00343A  D03E               	goto	l11506
 12402  00343C                     l11460:
 12403                           
 12404                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12405  00343C  0E3A               	movlw	58
 12406  00343E  601C               	cpfslt	make_dirfile@c^0,c
 12407  003440  D001               	goto	l11464
 12408  003442  D02D               	goto	l987
 12409  003444                     l11464:
 12410                           
 12411                           ;tff.c: 475: if (c <= '?') break;
 12412  003444  0E40               	movlw	64
 12413  003446  601C               	cpfslt	make_dirfile@c^0,c
 12414  003448  D001               	goto	l990
 12415  00344A  D036               	goto	l11506
 12416  00344C                     l990:
 12417                           
 12418                           ;tff.c: 476: if (!(a & 1)) {
 12419  00344C  B01A               	btfsc	make_dirfile@a^0,0,c
 12420  00344E  D027               	goto	l987
 12421                           
 12422                           ;tff.c: 477: if (c == '|') break;
 12423  003450  0E7C               	movlw	124
 12424  003452  181C               	xorwf	make_dirfile@c^0,w,c
 12425  003454  B4D8               	btfsc	status,2,c
 12426  003456  D030               	goto	l11506
 12427                           
 12428                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12429  003458  0E5A               	movlw	90
 12430  00345A  641C               	cpfsgt	make_dirfile@c^0,c
 12431  00345C  D004               	goto	l11478
 12432  00345E  0E5E               	movlw	94
 12433  003460  601C               	cpfslt	make_dirfile@c^0,c
 12434  003462  D001               	goto	l11478
 12435  003464  D029               	goto	l11506
 12436  003466                     l11478:
 12437  003466  0E40               	movlw	64
 12438  003468  641C               	cpfsgt	make_dirfile@c^0,c
 12439  00346A  D00A               	goto	l11488
 12440  00346C  0E5B               	movlw	91
 12441  00346E  601C               	cpfslt	make_dirfile@c^0,c
 12442  003470  D007               	goto	l11488
 12443                           
 12444                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12445  003472  0E08               	movlw	8
 12446  003474  1819               	xorwf	make_dirfile@t^0,w,c
 12447  003476  A4D8               	btfss	status,2,c
 12448  003478  D002               	goto	l11486
 12449  00347A  9618               	bcf	make_dirfile@b^0,3,c
 12450  00347C  D001               	goto	l11488
 12451  00347E                     l11486:
 12452  00347E  9818               	bcf	make_dirfile@b^0,4,c
 12453  003480                     l11488:
 12454                           
 12455                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12456  003480  0E60               	movlw	96
 12457  003482  641C               	cpfsgt	make_dirfile@c^0,c
 12458  003484  D00C               	goto	l987
 12459  003486  0E7B               	movlw	123
 12460  003488  601C               	cpfslt	make_dirfile@c^0,c
 12461  00348A  D009               	goto	l987
 12462                           
 12463                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12464  00348C  0E20               	movlw	32
 12465  00348E  5E1C               	subwf	make_dirfile@c^0,f,c
 12466  003490  0E08               	movlw	8
 12467  003492  1819               	xorwf	make_dirfile@t^0,w,c
 12468  003494  A4D8               	btfss	status,2,c
 12469  003496  D002               	goto	l11496
 12470  003498  861A               	bsf	make_dirfile@a^0,3,c
 12471  00349A  D001               	goto	l987
 12472  00349C                     l11496:
 12473  00349C  881A               	bsf	make_dirfile@a^0,4,c
 12474  00349E                     l987:
 12475                           
 12476                           ;tff.c: 487: a &= 0xFE;
 12477  00349E  901A               	bcf	make_dirfile@a^0,0,c
 12478                           
 12479                           ;tff.c: 489: if (n >= t) break;
 12480  0034A0  5019               	movf	make_dirfile@t^0,w,c
 12481  0034A2  5C1B               	subwf	make_dirfile@n^0,w,c
 12482  0034A4  B0D8               	btfsc	status,0,c
 12483  0034A6  D008               	goto	l11506
 12484                           
 12485                           ;tff.c: 490: dirname[n++] = c;
 12486  0034A8  5013               	movf	make_dirfile@dirname^0,w,c
 12487  0034AA  241B               	addwf	make_dirfile@n^0,w,c
 12488  0034AC  6ED9               	movwf	fsr2l,c
 12489  0034AE  6ADA               	clrf	fsr2h,c
 12490  0034B0  C01C  FFDF         	movff	make_dirfile@c,indf2
 12491  0034B4  2A1B               	incf	make_dirfile@n^0,f,c
 12492  0034B6  D76A               	goto	l11398
 12493  0034B8                     l11506:
 12494                           
 12495                           ;tff.c: 492: return 1;
 12496  0034B8  0E01               	movlw	1
 12497  0034BA  0012               	return		;funcret
 12498  0034BC                     __end_of_make_dirfile:
 12499                           	callstack 0
 12500                           
 12501 ;; *************** function _reserve_direntry *****************
 12502 ;; Defined at:
 12503 ;;		line 568 in file "bibliotecas/tff.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12506 ;;		 -> f_open@dj(14), 
 12507 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12508 ;;		 -> f_open@dir(2), 
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;  sector          4   44[BANK0 ] unsigned long 
 12511 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12512 ;;		 -> NULL(0), fs(544), 
 12513 ;;  clust           2   52[BANK0 ] unsigned short 
 12514 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12515 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12516 ;;  c               1   51[BANK0 ] unsigned char 
 12517 ;;  n               1   48[BANK0 ] unsigned char 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      enum E155
 12520 ;; Registers used:
 12521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12522 ;; Tracked objects:
 12523 ;;		On entry : 3F/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12527 ;;      Params:         0       2       0       0       0       0       0       0       0
 12528 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12529 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12530 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12531 ;;Total ram usage:       18 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:   10
 12534 ;; This function calls:
 12535 ;;		_clust2sect
 12536 ;;		_create_chain
 12537 ;;		_disk_write
 12538 ;;		_memset
 12539 ;;		_move_window
 12540 ;;		_next_dir_entry
 12541 ;; This function is called by:
 12542 ;;		_f_open
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           	psect	text73
 12547  002102                     __ptext73:
 12548                           	callstack 0
 12549  002102                     _reserve_direntry:
 12550                           	callstack 15
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12554                           
 12555                           ;incstack = 0
 12556  002102  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12557  002104  6ED9               	movwf	fsr2l,c
 12558  002106  6ADA               	clrf	fsr2h,c
 12559  002108  0E04               	movlw	4
 12560  00210A  26D9               	addwf	fsr2l,f,c
 12561  00210C  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12562  002110  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12563                           
 12564                           ;tff.c: 580: clust = dj->sclust;
 12565  002114  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12566  002116  6ED9               	movwf	fsr2l,c
 12567  002118  6ADA               	clrf	fsr2h,c
 12568  00211A  0E06               	movlw	6
 12569  00211C  26D9               	addwf	fsr2l,f,c
 12570  00211E  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12571  002122  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;tff.c: 581: if (clust != 0) {
 12575  002126  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12576  002128  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12577  00212A  B4D8               	btfsc	status,2,c
 12578  00212C  D01E               	goto	l11842
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;tff.c: 582: dj->clust = clust;
 12582  00212E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12583  002130  6ED9               	movwf	fsr2l,c
 12584  002132  6ADA               	clrf	fsr2h,c
 12585  002134  0E08               	movlw	8
 12586  002136  26D9               	addwf	fsr2l,f,c
 12587  002138  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12588  00213C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12592  002140  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12593  002144  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12594  002148  EC0A  F021         	call	_clust2sect	;wreg free
 12595  00214C  0100               	movlb	0	; () banked
 12596  00214E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12597  002150  6ED9               	movwf	fsr2l,c
 12598  002152  6ADA               	clrf	fsr2h,c
 12599  002154  0E0A               	movlw	10
 12600  002156  26D9               	addwf	fsr2l,f,c
 12601  002158  C016  FFDE         	movff	?_clust2sect,postinc2
 12602  00215C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12603  002160  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12604  002164  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12605                           
 12606                           ;tff.c: 584: } else {
 12607  002168  D013               	goto	l11844
 12608  00216A                     l11842:
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;tff.c: 585: dj->sect = fs->dirbase;
 12612  00216A  EE20 F00C          	lfsr	2,12
 12613  00216E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12614  002170  26D9               	addwf	fsr2l,f,c
 12615  002172  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12616  002174  22DA               	addwfc	fsr2h,f,c
 12617  002176  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12618  002178  6EE1               	movwf	fsr1l,c
 12619  00217A  6AE2               	clrf	fsr1h,c
 12620  00217C  0E0A               	movlw	10
 12621  00217E  26E1               	addwf	fsr1l,f,c
 12622  002180  CFDE FFE6          	movff	postinc2,postinc1
 12623  002184  CFDE FFE6          	movff	postinc2,postinc1
 12624  002188  CFDE FFE6          	movff	postinc2,postinc1
 12625  00218C  CFDE FFE6          	movff	postinc2,postinc1
 12626  002190                     l11844:
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12630  002190  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12631  002192  6ED9               	movwf	fsr2l,c
 12632  002194  6ADA               	clrf	fsr2h,c
 12633  002196  0E02               	movlw	2
 12634  002198  26D9               	addwf	fsr2l,f,c
 12635  00219A  0E00               	movlw	0
 12636  00219C  6EDE               	movwf	postinc2,c
 12637  00219E  0E00               	movlw	0
 12638  0021A0  6EDD               	movwf	postdec2,c
 12639  0021A2                     l11846:
 12640                           
 12641                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12642  0021A2  0100               	movlb	0	; () banked
 12643  0021A4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12644  0021A6  6ED9               	movwf	fsr2l,c
 12645  0021A8  6ADA               	clrf	fsr2h,c
 12646  0021AA  0E0A               	movlw	10
 12647  0021AC  26D9               	addwf	fsr2l,f,c
 12648  0021AE  CFDE F035          	movff	postinc2,move_window@sector
 12649  0021B2  CFDE F036          	movff	postinc2,move_window@sector+1
 12650  0021B6  CFDE F037          	movff	postinc2,move_window@sector+2
 12651  0021BA  CFDE F038          	movff	postinc2,move_window@sector+3
 12652  0021BE  EC1B  F015         	call	_move_window	;wreg free
 12653  0021C2  0900               	iorlw	0
 12654  0021C4  A4D8               	btfss	status,2,c
 12655  0021C6  D002               	goto	l11852
 12656  0021C8                     u13640:
 12657  0021C8  0E08               	movlw	8
 12658  0021CA  0012               	return	
 12659  0021CC                     l11852:
 12660                           
 12661                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12662  0021CC  0100               	movlb	0	; () banked
 12663  0021CE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12664  0021D0  6ED9               	movwf	fsr2l,c
 12665  0021D2  6ADA               	clrf	fsr2h,c
 12666  0021D4  0E02               	movlw	2
 12667  0021D6  26D9               	addwf	fsr2l,f,c
 12668  0021D8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12669  0021DC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12670  0021E0  0E0F               	movlw	15
 12671  0021E2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12672  0021E4  0E00               	movlw	0
 12673  0021E6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12674  0021E8  0E05               	movlw	5
 12675  0021EA                     u13655:
 12676  0021EA  90D8               	bcf	status,0,c
 12677  0021EC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12678  0021EE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12679  0021F0  2EE8               	decfsz	wreg,f,c
 12680  0021F2  D7FB               	goto	u13655
 12681  0021F4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12682  0021F8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12683  0021FC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12684  0021FE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12685  002200  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12686  002202  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12687  002204  0E20               	movlw	32
 12688  002206  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12689  002208  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12690  00220A  0E00               	movlw	0
 12691  00220C  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12692  00220E  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;tff.c: 592: c = dptr[0];
 12696  002210  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12697  002214  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12698  002218  50DF               	movf	indf2,w,c
 12699  00221A  6F93               	movwf	reserve_direntry@c& (0+255),b
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12703  00221C  5193               	movf	reserve_direntry@c& (0+255),w,b
 12704  00221E  B4D8               	btfsc	status,2,c
 12705  002220  D004               	goto	u13670
 12706                           
 12707                           ; BSR set to: 0
 12708  002222  0EE5               	movlw	229
 12709  002224  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12710  002226  A4D8               	btfss	status,2,c
 12711  002228  D009               	goto	l11866
 12712  00222A                     u13670:
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12716  00222A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12717  00222C  6ED9               	movwf	fsr2l,c
 12718  00222E  6ADA               	clrf	fsr2h,c
 12719  002230  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12720  002234  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12721  002238                     l11862:
 12722                           
 12723                           ; BSR set to: 0
 12724  002238  0E00               	movlw	0
 12725  00223A  0012               	return	
 12726  00223C                     l11866:
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12730  00223C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12731  002240  EC4D  F018         	call	_next_dir_entry	;wreg free
 12732  002244  0900               	iorlw	0
 12733  002246  A4D8               	btfss	status,2,c
 12734  002248  D7AC               	goto	l11846
 12735                           
 12736                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12737  00224A  0100               	movlb	0	; () banked
 12738  00224C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12739  00224E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12740  002250  B4D8               	btfsc	status,2,c
 12741  002252  D013               	goto	u13700
 12742                           
 12743                           ; BSR set to: 0
 12744  002254  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12745  002256  6ED9               	movwf	fsr2l,c
 12746  002258  6ADA               	clrf	fsr2h,c
 12747  00225A  0E08               	movlw	8
 12748  00225C  26D9               	addwf	fsr2l,f,c
 12749  00225E  CFDE F078          	movff	postinc2,create_chain@clust
 12750  002262  CFDD F079          	movff	postdec2,create_chain@clust+1
 12751  002266  ECC1  F016         	call	_create_chain	;wreg free
 12752  00226A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12753  00226E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12754  002272  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12755  002274  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12756  002276  A4D8               	btfss	status,2,c
 12757  002278  D002               	goto	l11876
 12758  00227A                     u13700:
 12759                           
 12760                           ; BSR set to: 0
 12761  00227A  0E06               	movlw	6
 12762  00227C  0012               	return	
 12763  00227E                     l11876:
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12767  00227E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12768  002280  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12769  002282  B4D8               	btfsc	status,2,c
 12770  002284  D7A1               	goto	u13640
 12771                           
 12772                           ; BSR set to: 0
 12773  002286  0E00               	movlw	0
 12774  002288  6E35               	movwf	move_window@sector^0,c
 12775  00228A  0E00               	movlw	0
 12776  00228C  6E36               	movwf	(move_window@sector+1)^0,c
 12777  00228E  0E00               	movlw	0
 12778  002290  6E37               	movwf	(move_window@sector+2)^0,c
 12779  002292  0E00               	movlw	0
 12780  002294  6E38               	movwf	(move_window@sector+3)^0,c
 12781  002296  EC1B  F015         	call	_move_window	;wreg free
 12782  00229A  0900               	iorlw	0
 12783  00229C  B4D8               	btfsc	status,2,c
 12784  00229E  D794               	goto	u13640
 12785                           
 12786                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12787  0022A0  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12788  0022A4  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12789  0022A8  EC0A  F021         	call	_clust2sect	;wreg free
 12790  0022AC  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12791  0022B0  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12792  0022B4  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12793  0022B8  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12794  0022BC  0100               	movlb	0	; () banked
 12795  0022BE  EE20 F004          	lfsr	2,4
 12796  0022C2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12797  0022C4  26D9               	addwf	fsr2l,f,c
 12798  0022C6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12799  0022C8  22DA               	addwfc	fsr2h,f,c
 12800  0022CA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12801  0022CE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12802  0022D2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12803  0022D6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12804                           
 12805                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12806  0022DA  0E20               	movlw	32
 12807  0022DC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12808  0022DE  6E0A               	movwf	memset@p1^0,c
 12809  0022E0  0E00               	movlw	0
 12810  0022E2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12811  0022E4  6E0B               	movwf	(memset@p1+1)^0,c
 12812  0022E6  0E00               	movlw	0
 12813  0022E8  6E0D               	movwf	(memset@c+1)^0,c
 12814  0022EA  0E00               	movlw	0
 12815  0022EC  6E0C               	movwf	memset@c^0,c
 12816  0022EE  0E02               	movlw	2
 12817  0022F0  6E0F               	movwf	(memset@n+1)^0,c
 12818  0022F2  0E00               	movlw	0
 12819  0022F4  6E0E               	movwf	memset@n^0,c
 12820  0022F6  EC09  F02C         	call	_memset	;wreg free
 12821                           
 12822                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12823  0022FA  0100               	movlb	0	; () banked
 12824  0022FC  EE20 F01D          	lfsr	2,29
 12825  002300  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12826  002302  26D9               	addwf	fsr2l,f,c
 12827  002304  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12828  002306  22DA               	addwfc	fsr2h,f,c
 12829  002308  50DF               	movf	indf2,w,c
 12830  00230A  6F90               	movwf	reserve_direntry@n& (0+255),b
 12831  00230C  D01E               	goto	l11898
 12832  00230E                     l11888:
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12836  00230E  0E20               	movlw	32
 12837  002310  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12838  002312  6E29               	movwf	disk_write@buff^0,c
 12839  002314  0E00               	movlw	0
 12840  002316  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12841  002318  6E2A               	movwf	(disk_write@buff+1)^0,c
 12842  00231A  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12843  00231E  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12844  002322  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12845  002326  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12846  00232A  0E01               	movlw	1
 12847  00232C  6E2F               	movwf	disk_write@count^0,c
 12848  00232E  0E00               	movlw	0
 12849  002330  EC3A  F029         	call	_disk_write
 12850  002334  0900               	iorlw	0
 12851  002336  A4D8               	btfss	status,2,c
 12852  002338  D747               	goto	u13640
 12853                           
 12854                           ;tff.c: 608: sector++;
 12855  00233A  0E01               	movlw	1
 12856  00233C  0100               	movlb	0	; () banked
 12857  00233E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12858  002340  0E00               	movlw	0
 12859  002342  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12860  002344  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12861  002346  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12862                           
 12863                           ; BSR set to: 0
 12864  002348  0790               	decf	reserve_direntry@n& (0+255),f,b
 12865  00234A                     l11898:
 12866                           
 12867                           ; BSR set to: 0
 12868  00234A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12869  00234C  A4D8               	btfss	status,2,c
 12870  00234E  D7DF               	goto	l11888
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12874  002350  EE20 F01F          	lfsr	2,31
 12875  002354  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12876  002356  26D9               	addwf	fsr2l,f,c
 12877  002358  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12878  00235A  22DA               	addwfc	fsr2h,f,c
 12879  00235C  0E01               	movlw	1
 12880  00235E  6EDF               	movwf	indf2,c
 12881                           
 12882                           ;tff.c: 611: *dir = fs->win;
 12883  002360  0E20               	movlw	32
 12884  002362  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12885  002364  6F88               	movwf	??_reserve_direntry& (0+255),b
 12886  002366  0E00               	movlw	0
 12887  002368  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12888  00236A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12889  00236C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12890  00236E  6ED9               	movwf	fsr2l,c
 12891  002370  6ADA               	clrf	fsr2h,c
 12892  002372  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12893  002376  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12894  00237A  D75E               	goto	l11862
 12895  00237C                     __end_of_reserve_direntry:
 12896                           	callstack 0
 12897                           
 12898 ;; *************** function _next_dir_entry *****************
 12899 ;; Defined at:
 12900 ;;		line 359 in file "bibliotecas/tff.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12903 ;;		 -> f_open@dj(14), 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;  idx             2   28[BANK0 ] unsigned short 
 12906 ;;  clust           2   26[BANK0 ] unsigned short 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      enum E105
 12909 ;; Registers used:
 12910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12916 ;;      Params:         1       0       0       0       0       0       0       0       0
 12917 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12918 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12919 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12920 ;;Total ram usage:       12 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    9
 12923 ;; This function calls:
 12924 ;;		_clust2sect
 12925 ;;		_get_cluster
 12926 ;; This function is called by:
 12927 ;;		_trace_path
 12928 ;;		_reserve_direntry
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text74
 12933  00309A                     __ptext74:
 12934                           	callstack 0
 12935  00309A                     _next_dir_entry:
 12936                           	callstack 15
 12937                           
 12938                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12939                           
 12940                           ;incstack = 0
 12941  00309A  504C               	movf	next_dir_entry@dj^0,w,c
 12942  00309C  6ED9               	movwf	fsr2l,c
 12943  00309E  6ADA               	clrf	fsr2h,c
 12944  0030A0  0E02               	movlw	2
 12945  0030A2  26D9               	addwf	fsr2l,f,c
 12946  0030A4  CFDE F073          	movff	postinc2,??_next_dir_entry
 12947  0030A8  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12948  0030AC  0E01               	movlw	1
 12949  0030AE  0100               	movlb	0	; () banked
 12950  0030B0  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12951  0030B2  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12952  0030B4  0E00               	movlw	0
 12953  0030B6  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12954  0030B8  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;tff.c: 368: if ((idx & 15) == 0) {
 12958  0030BA  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12959  0030BE  0E0F               	movlw	15
 12960  0030C0  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12961  0030C2  A4D8               	btfss	status,2,c
 12962  0030C4  D092               	goto	l11382
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;tff.c: 369: dj->sect++;
 12966  0030C6  504C               	movf	next_dir_entry@dj^0,w,c
 12967  0030C8  6ED9               	movwf	fsr2l,c
 12968  0030CA  6ADA               	clrf	fsr2h,c
 12969  0030CC  0E0A               	movlw	10
 12970  0030CE  26D9               	addwf	fsr2l,f,c
 12971  0030D0  2ADE               	incf	postinc2,f,c
 12972  0030D2  0E00               	movlw	0
 12973  0030D4  22DE               	addwfc	postinc2,f,c
 12974  0030D6  22DE               	addwfc	postinc2,f,c
 12975  0030D8  22DE               	addwfc	postinc2,f,c
 12976                           
 12977                           ;tff.c: 370: if (dj->clust == 0) {
 12978  0030DA  504C               	movf	next_dir_entry@dj^0,w,c
 12979  0030DC  6ED9               	movwf	fsr2l,c
 12980  0030DE  6ADA               	clrf	fsr2h,c
 12981  0030E0  0E08               	movlw	8
 12982  0030E2  26D9               	addwf	fsr2l,f,c
 12983  0030E4  50DE               	movf	postinc2,w,c
 12984  0030E6  10DE               	iorwf	postinc2,w,c
 12985  0030E8  A4D8               	btfss	status,2,c
 12986  0030EA  D013               	goto	l11366
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12990  0030EC  504C               	movf	next_dir_entry@dj^0,w,c
 12991  0030EE  6ED9               	movwf	fsr2l,c
 12992  0030F0  6ADA               	clrf	fsr2h,c
 12993  0030F2  0E04               	movlw	4
 12994  0030F4  26D9               	addwf	fsr2l,f,c
 12995  0030F6  EE10 F002          	lfsr	1,2
 12996  0030FA  50DE               	movf	postinc2,w,c
 12997  0030FC  26E1               	addwf	fsr1l,f,c
 12998  0030FE  50DD               	movf	postdec2,w,c
 12999  003100  22E2               	addwfc	fsr1h,f,c
 13000  003102  50E6               	movf	postinc1,w,c
 13001  003104  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 13002  003106  50E6               	movf	postinc1,w,c
 13003  003108  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 13004  00310A  A0D8               	btfss	status,0,c
 13005  00310C  D06E               	goto	l11382
 13006  00310E                     u12890:
 13007                           
 13008                           ; BSR set to: 0
 13009  00310E  0E00               	movlw	0
 13010  003110  0012               	return	
 13011  003112                     l11366:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 13015  003112  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 13016  003116  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 13017  00311A  0E04               	movlw	4
 13018  00311C  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 13019  00311E                     u12905:
 13020  00311E  90D8               	bcf	status,0,c
 13021  003120  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 13022  003122  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 13023  003124  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 13024  003126  D7FB               	goto	u12905
 13025  003128  0EFF               	movlw	255
 13026  00312A  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 13027  00312C  0EFF               	movlw	255
 13028  00312E  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 13029  003130  504C               	movf	next_dir_entry@dj^0,w,c
 13030  003132  6ED9               	movwf	fsr2l,c
 13031  003134  6ADA               	clrf	fsr2h,c
 13032  003136  0E04               	movlw	4
 13033  003138  26D9               	addwf	fsr2l,f,c
 13034  00313A  EE10 F01D          	lfsr	1,29
 13035  00313E  50DE               	movf	postinc2,w,c
 13036  003140  26E1               	addwf	fsr1l,f,c
 13037  003142  50DD               	movf	postdec2,w,c
 13038  003144  22E2               	addwfc	fsr1h,f,c
 13039  003146  50E7               	movf	indf1,w,c
 13040  003148  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 13041  00314A  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 13042  00314C  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 13043  00314E  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 13044  003150  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 13045  003152  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 13046  003154  5173               	movf	??_next_dir_entry& (0+255),w,b
 13047  003156  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 13048  003158  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 13049  00315A  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 13050  00315C  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 13051  00315E  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 13052  003160  A4D8               	btfss	status,2,c
 13053  003162  D043               	goto	l11382
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;tff.c: 374: clust = get_cluster(dj->clust);
 13057  003164  504C               	movf	next_dir_entry@dj^0,w,c
 13058  003166  6ED9               	movwf	fsr2l,c
 13059  003168  6ADA               	clrf	fsr2h,c
 13060  00316A  0E08               	movlw	8
 13061  00316C  26D9               	addwf	fsr2l,f,c
 13062  00316E  CFDE F04A          	movff	postinc2,get_cluster@clust
 13063  003172  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 13064  003176  ECF4  F012         	call	_get_cluster	;wreg free
 13065  00317A  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 13066  00317E  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 13067                           
 13068                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 13069  003182  0100               	movlb	0	; () banked
 13070  003184  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 13071  003186  E104               	bnz	u12920
 13072  003188  0E02               	movlw	2
 13073  00318A  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13074  00318C  A0D8               	btfss	status,0,c
 13075  00318E  D7BF               	goto	u12890
 13076  003190                     u12920:
 13077                           
 13078                           ; BSR set to: 0
 13079  003190  504C               	movf	next_dir_entry@dj^0,w,c
 13080  003192  6ED9               	movwf	fsr2l,c
 13081  003194  6ADA               	clrf	fsr2h,c
 13082  003196  0E04               	movlw	4
 13083  003198  26D9               	addwf	fsr2l,f,c
 13084  00319A  EE10 F016          	lfsr	1,22
 13085  00319E  50DE               	movf	postinc2,w,c
 13086  0031A0  26E1               	addwf	fsr1l,f,c
 13087  0031A2  50DD               	movf	postdec2,w,c
 13088  0031A4  22E2               	addwfc	fsr1h,f,c
 13089  0031A6  50E6               	movf	postinc1,w,c
 13090  0031A8  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13091  0031AA  50E6               	movf	postinc1,w,c
 13092  0031AC  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 13093  0031AE  B0D8               	btfsc	status,0,c
 13094  0031B0  D7AE               	goto	u12890
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;tff.c: 377: dj->clust = clust;
 13098  0031B2  504C               	movf	next_dir_entry@dj^0,w,c
 13099  0031B4  6ED9               	movwf	fsr2l,c
 13100  0031B6  6ADA               	clrf	fsr2h,c
 13101  0031B8  0E08               	movlw	8
 13102  0031BA  26D9               	addwf	fsr2l,f,c
 13103  0031BC  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 13104  0031C0  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;tff.c: 378: dj->sect = clust2sect(clust);
 13108  0031C4  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 13109  0031C8  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 13110  0031CC  EC0A  F021         	call	_clust2sect	;wreg free
 13111  0031D0  504C               	movf	next_dir_entry@dj^0,w,c
 13112  0031D2  6ED9               	movwf	fsr2l,c
 13113  0031D4  6ADA               	clrf	fsr2h,c
 13114  0031D6  0E0A               	movlw	10
 13115  0031D8  26D9               	addwf	fsr2l,f,c
 13116  0031DA  C016  FFDE         	movff	?_clust2sect,postinc2
 13117  0031DE  C017  FFDE         	movff	?_clust2sect+1,postinc2
 13118  0031E2  C018  FFDE         	movff	?_clust2sect+2,postinc2
 13119  0031E6  C019  FFDE         	movff	?_clust2sect+3,postinc2
 13120  0031EA                     l11382:
 13121                           
 13122                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 13123  0031EA  504C               	movf	next_dir_entry@dj^0,w,c
 13124  0031EC  6ED9               	movwf	fsr2l,c
 13125  0031EE  6ADA               	clrf	fsr2h,c
 13126  0031F0  0E02               	movlw	2
 13127  0031F2  26D9               	addwf	fsr2l,f,c
 13128  0031F4  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 13129  0031F8  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 13130                           
 13131                           ;tff.c: 383: return TRUE;
 13132  0031FC  0E01               	movlw	1
 13133  0031FE  0012               	return		;funcret
 13134  003200                     __end_of_next_dir_entry:
 13135                           	callstack 0
 13136                           
 13137 ;; *************** function _clust2sect *****************
 13138 ;; Defined at:
 13139 ;;		line 339 in file "bibliotecas/tff.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;  clust           2   21[COMRAM] unsigned short 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 13144 ;;		 -> NULL(0), fs(544), 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  4   21[COMRAM] unsigned long 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13154 ;;      Params:         4       0       0       0       0       0       0       0       0
 13155 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13156 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13157 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13158 ;;Total ram usage:       11 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    3
 13161 ;; This function calls:
 13162 ;;		___lmul
 13163 ;; This function is called by:
 13164 ;;		_next_dir_entry
 13165 ;;		_trace_path
 13166 ;;		_reserve_direntry
 13167 ;;		_f_write
 13168 ;;		_f_read
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           	psect	text75
 13173  004214                     __ptext75:
 13174                           	callstack 0
 13175  004214                     _clust2sect:
 13176                           	callstack 19
 13177                           
 13178                           ;tff.c: 343: FATFS *fs = FatFs;
 13179                           
 13180                           ;incstack = 0
 13181  004214  C04D  F01F         	movff	_FatFs,clust2sect@fs
 13182  004218  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 13183                           
 13184                           ;tff.c: 346: clust -= 2;
 13185  00421C  0E02               	movlw	2
 13186  00421E  5E16               	subwf	clust2sect@clust^0,f,c
 13187  004220  0E00               	movlw	0
 13188  004222  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 13189                           
 13190                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 13191  004224  0EFE               	movlw	254
 13192  004226  6E1A               	movwf	??_clust2sect^0,c
 13193  004228  0EFF               	movlw	255
 13194  00422A  6E1B               	movwf	(??_clust2sect+1)^0,c
 13195  00422C  EE20 F016          	lfsr	2,22
 13196  004230  501F               	movf	clust2sect@fs^0,w,c
 13197  004232  26D9               	addwf	fsr2l,f,c
 13198  004234  5020               	movf	(clust2sect@fs+1)^0,w,c
 13199  004236  22DA               	addwfc	fsr2h,f,c
 13200  004238  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13201  00423C  CFDD F01D          	movff	postdec2,??_clust2sect+3
 13202  004240  501A               	movf	??_clust2sect^0,w,c
 13203  004242  261C               	addwf	(??_clust2sect+2)^0,f,c
 13204  004244  501B               	movf	(??_clust2sect+1)^0,w,c
 13205  004246  221D               	addwfc	(??_clust2sect+3)^0,f,c
 13206  004248  501C               	movf	(??_clust2sect+2)^0,w,c
 13207  00424A  5C16               	subwf	clust2sect@clust^0,w,c
 13208  00424C  501D               	movf	(??_clust2sect+3)^0,w,c
 13209  00424E  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 13210  004250  A0D8               	btfss	status,0,c
 13211  004252  D009               	goto	l10888
 13212  004254  0E00               	movlw	0
 13213  004256  6E16               	movwf	?_clust2sect^0,c
 13214  004258  0E00               	movlw	0
 13215  00425A  6E17               	movwf	(?_clust2sect+1)^0,c
 13216  00425C  0E00               	movlw	0
 13217  00425E  6E18               	movwf	(?_clust2sect+2)^0,c
 13218  004260  0E00               	movlw	0
 13219  004262  6E19               	movwf	(?_clust2sect+3)^0,c
 13220  004264  0012               	return	
 13221  004266                     l10888:
 13222                           
 13223                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 13224  004266  EE20 F010          	lfsr	2,16
 13225  00426A  501F               	movf	clust2sect@fs^0,w,c
 13226  00426C  26D9               	addwf	fsr2l,f,c
 13227  00426E  5020               	movf	(clust2sect@fs+1)^0,w,c
 13228  004270  22DA               	addwfc	fsr2h,f,c
 13229  004272  CFDE F01A          	movff	postinc2,??_clust2sect
 13230  004276  CFDE F01B          	movff	postinc2,??_clust2sect+1
 13231  00427A  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13232  00427E  CFDE F01D          	movff	postinc2,??_clust2sect+3
 13233  004282  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 13234  004286  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 13235  00428A  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 13236  00428C  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 13237  00428E  EE20 F01D          	lfsr	2,29
 13238  004292  501F               	movf	clust2sect@fs^0,w,c
 13239  004294  26D9               	addwf	fsr2l,f,c
 13240  004296  5020               	movf	(clust2sect@fs+1)^0,w,c
 13241  004298  22DA               	addwfc	fsr2h,f,c
 13242  00429A  50DF               	movf	indf2,w,c
 13243  00429C  6E1E               	movwf	(??_clust2sect+4)^0,c
 13244  00429E  501E               	movf	(??_clust2sect+4)^0,w,c
 13245  0042A0  6E0E               	movwf	___lmul@multiplicand^0,c
 13246  0042A2  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13247  0042A4  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13248  0042A6  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13249  0042A8  EC6C  F028         	call	___lmul	;wreg free
 13250  0042AC  501A               	movf	??_clust2sect^0,w,c
 13251  0042AE  240A               	addwf	?___lmul^0,w,c
 13252  0042B0  6E16               	movwf	?_clust2sect^0,c
 13253  0042B2  501B               	movf	(??_clust2sect+1)^0,w,c
 13254  0042B4  200B               	addwfc	(?___lmul+1)^0,w,c
 13255  0042B6  6E17               	movwf	(?_clust2sect+1)^0,c
 13256  0042B8  501C               	movf	(??_clust2sect+2)^0,w,c
 13257  0042BA  200C               	addwfc	(?___lmul+2)^0,w,c
 13258  0042BC  6E18               	movwf	(?_clust2sect+2)^0,c
 13259  0042BE  501D               	movf	(??_clust2sect+3)^0,w,c
 13260  0042C0  200D               	addwfc	(?___lmul+3)^0,w,c
 13261  0042C2  6E19               	movwf	(?_clust2sect+3)^0,c
 13262  0042C4  0012               	return		;funcret
 13263  0042C6                     __end_of_clust2sect:
 13264                           	callstack 0
 13265                           
 13266 ;; *************** function _remove_chain *****************
 13267 ;; Defined at:
 13268 ;;		line 250 in file "bibliotecas/tff.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  clust           2   24[BANK0 ] unsigned short 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 13273 ;;		 -> NULL(0), fs(544), 
 13274 ;;  nxt             2   28[BANK0 ] unsigned short 
 13275 ;; Return value:  Size  Location     Type
 13276 ;;                  1    wreg      enum E105
 13277 ;; Registers used:
 13278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13279 ;; Tracked objects:
 13280 ;;		On entry : 3F/0
 13281 ;;		On exit  : 0/0
 13282 ;;		Unchanged: 0/0
 13283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13284 ;;      Params:         0       2       0       0       0       0       0       0       0
 13285 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13286 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13287 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13288 ;;Total ram usage:        8 bytes
 13289 ;; Hardware stack levels used:    1
 13290 ;; Hardware stack levels required when called:    9
 13291 ;; This function calls:
 13292 ;;		_get_cluster
 13293 ;;		_put_cluster
 13294 ;; This function is called by:
 13295 ;;		_f_open
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           	psect	text76
 13300  00456E                     __ptext76:
 13301                           	callstack 0
 13302  00456E                     _remove_chain:
 13303                           	callstack 16
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 13307                           
 13308                           ;incstack = 0
 13309  00456E  C04D  F07E         	movff	_FatFs,remove_chain@fs
 13310  004572  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 13311                           
 13312                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 13313  004576  D037               	goto	l11740
 13314  004578                     l11720:
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;tff.c: 259: nxt = get_cluster(clust);
 13318  004578  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 13319  00457C  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 13320  004580  ECF4  F012         	call	_get_cluster	;wreg free
 13321  004584  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 13322  004588  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 13323                           
 13324                           ;tff.c: 260: if (nxt == 1) return FALSE;
 13325  00458C  0100               	movlb	0	; () banked
 13326  00458E  057C               	decf	remove_chain@nxt& (0+255),w,b
 13327  004590  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 13328  004592  A4D8               	btfss	status,2,c
 13329  004594  D002               	goto	l11728
 13330  004596                     u13440:
 13331  004596  0E00               	movlw	0
 13332  004598  0012               	return	
 13333  00459A                     l11728:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13337  00459A  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13338  00459E  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13339  0045A2  0E00               	movlw	0
 13340  0045A4  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13341  0045A6  0E00               	movlw	0
 13342  0045A8  6F62               	movwf	put_cluster@val& (0+255),b
 13343  0045AA  ECBE  F011         	call	_put_cluster	;wreg free
 13344  0045AE  0900               	iorlw	0
 13345  0045B0  B4D8               	btfsc	status,2,c
 13346  0045B2  D7F1               	goto	u13440
 13347                           
 13348                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13349  0045B4  0100               	movlb	0	; () banked
 13350  0045B6  EE20 F01A          	lfsr	2,26
 13351  0045BA  517E               	movf	remove_chain@fs& (0+255),w,b
 13352  0045BC  26D9               	addwf	fsr2l,f,c
 13353  0045BE  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13354  0045C0  22DA               	addwfc	fsr2h,f,c
 13355  0045C2  28DE               	incf	postinc2,w,c
 13356  0045C4  E103               	bnz	u13460
 13357  0045C6  28DE               	incf	postinc2,w,c
 13358  0045C8  B4D8               	btfsc	status,2,c
 13359  0045CA  D009               	goto	l11738
 13360  0045CC                     u13460:
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;tff.c: 263: fs->free_clust++;
 13364  0045CC  EE20 F01A          	lfsr	2,26
 13365  0045D0  517E               	movf	remove_chain@fs& (0+255),w,b
 13366  0045D2  26D9               	addwf	fsr2l,f,c
 13367  0045D4  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13368  0045D6  22DA               	addwfc	fsr2h,f,c
 13369  0045D8  2ADE               	incf	postinc2,f,c
 13370  0045DA  0E00               	movlw	0
 13371  0045DC  22DD               	addwfc	postdec2,f,c
 13372  0045DE                     l11738:
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13376  0045DE  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13377  0045E2  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13378  0045E6                     l11740:
 13379                           
 13380                           ; BSR set to: 0
 13381  0045E6  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13382  0045E8  E104               	bnz	u13470
 13383  0045EA  0E02               	movlw	2
 13384  0045EC  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13385  0045EE  A0D8               	btfss	status,0,c
 13386  0045F0  D00C               	goto	u13480
 13387  0045F2                     u13470:
 13388                           
 13389                           ; BSR set to: 0
 13390  0045F2  EE20 F016          	lfsr	2,22
 13391  0045F6  517E               	movf	remove_chain@fs& (0+255),w,b
 13392  0045F8  26D9               	addwf	fsr2l,f,c
 13393  0045FA  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13394  0045FC  22DA               	addwfc	fsr2h,f,c
 13395  0045FE  50DE               	movf	postinc2,w,c
 13396  004600  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13397  004602  50DE               	movf	postinc2,w,c
 13398  004604  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13399  004606  A0D8               	btfss	status,0,c
 13400  004608  D7B7               	goto	l11720
 13401  00460A                     u13480:
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13405  00460A  0E01               	movlw	1
 13406  00460C  0012               	return		;funcret
 13407  00460E                     __end_of_remove_chain:
 13408                           	callstack 0
 13409                           
 13410 ;; *************** function _memcpy *****************
 13411 ;; Defined at:
 13412 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  d1              2    9[COMRAM] PTR void 
 13415 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13416 ;;  s1              2   11[COMRAM] PTR const void 
 13417 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13418 ;;		 -> fs(544), 
 13419 ;;  n               2   13[COMRAM] unsigned int 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13422 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13423 ;;		 -> fs(544), 
 13424 ;;  d               2   16[COMRAM] PTR unsigned char 
 13425 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13426 ;;  tmp             1   15[COMRAM] unsigned char 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  2    9[COMRAM] PTR void 
 13429 ;; Registers used:
 13430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13436 ;;      Params:         6       0       0       0       0       0       0       0       0
 13437 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13439 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13440 ;;Total ram usage:       11 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    2
 13443 ;; This function calls:
 13444 ;;		Nothing
 13445 ;; This function is called by:
 13446 ;;		_f_open
 13447 ;;		_f_write
 13448 ;;		_f_read
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text77
 13453  005426                     __ptext77:
 13454                           	callstack 0
 13455  005426                     _memcpy:
 13456                           	callstack 20
 13457                           
 13458                           ;incstack = 0
 13459  005426  C00C  F013         	movff	memcpy@s1,memcpy@s
 13460  00542A  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13461  00542E  C00A  F011         	movff	memcpy@d1,memcpy@d
 13462  005432  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13463  005436  D010               	goto	l10922
 13464  005438                     l10914:
 13465  005438  C013  FFD9         	movff	memcpy@s,fsr2l
 13466  00543C  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13467  005440  50DF               	movf	indf2,w,c
 13468  005442  6E10               	movwf	memcpy@tmp^0,c
 13469  005444  4A13               	infsnz	memcpy@s^0,f,c
 13470  005446  2A14               	incf	(memcpy@s+1)^0,f,c
 13471  005448  C011  FFD9         	movff	memcpy@d,fsr2l
 13472  00544C  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13473  005450  C010  FFDF         	movff	memcpy@tmp,indf2
 13474  005454  4A11               	infsnz	memcpy@d^0,f,c
 13475  005456  2A12               	incf	(memcpy@d+1)^0,f,c
 13476  005458                     l10922:
 13477  005458  060E               	decf	memcpy@n^0,f,c
 13478  00545A  A0D8               	btfss	status,0,c
 13479  00545C  060F               	decf	(memcpy@n+1)^0,f,c
 13480  00545E  280E               	incf	memcpy@n^0,w,c
 13481  005460  E1EB               	bnz	l10914
 13482  005462  280F               	incf	(memcpy@n+1)^0,w,c
 13483  005464  B4D8               	btfsc	status,2,c
 13484  005466  0012               	return	
 13485  005468  D7E7               	goto	l10914
 13486  00546A                     __end_of_memcpy:
 13487                           	callstack 0
 13488                           
 13489 ;; *************** function _auto_mount *****************
 13490 ;; Defined at:
 13491 ;;		line 652 in file "bibliotecas/tff.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13494 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13495 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13498 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13499 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13500 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13501 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13502 ;;		 -> NULL(0), fs(544), 
 13503 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13504 ;;		 -> STR_16(13), filename(20), 
 13505 ;;  stat            1   37[BANK0 ] unsigned char 
 13506 ;;  fmt             1   36[BANK0 ] unsigned char 
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  1    wreg      enum E155
 13509 ;; Registers used:
 13510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13511 ;; Tracked objects:
 13512 ;;		On entry : 3F/0
 13513 ;;		On exit  : 3E/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13516 ;;      Params:         2       0       0       0       0       0       0       0       0
 13517 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13518 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13519 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13520 ;;Total ram usage:       46 bytes
 13521 ;; Hardware stack levels used:    1
 13522 ;; Hardware stack levels required when called:    8
 13523 ;; This function calls:
 13524 ;;		___lldiv
 13525 ;;		___lmul
 13526 ;;		_check_fs
 13527 ;;		_disk_initialize
 13528 ;;		_disk_status
 13529 ;;		_memset
 13530 ;; This function is called by:
 13531 ;;		_f_open
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text78
 13536  0005A8                     __ptext78:
 13537                           	callstack 0
 13538  0005A8                     _auto_mount:
 13539                           	callstack 17
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13543                           
 13544                           ;incstack = 0
 13545  0005A8  503D               	movf	auto_mount@path^0,w,c
 13546  0005AA  6ED9               	movwf	fsr2l,c
 13547  0005AC  6ADA               	clrf	fsr2h,c
 13548  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13549  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13550                           
 13551                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13552  0005B6  D003               	goto	l11910
 13553  0005B8                     l11908:
 13554  0005B8  0100               	movlb	0	; () banked
 13555  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13556  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13557  0005BE                     l11910:
 13558                           
 13559                           ; BSR set to: 0
 13560  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13561  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13562  0005C6  6AF8               	clrf	tblptru,c
 13563  0005C8  0E07               	movlw	(high __ramtop+-1)
 13564  0005CA  64F7               	cpfsgt	tblptrh,c
 13565  0005CC  D003               	bra	u13757
 13566  0005CE  0008               	tblrd		*
 13567  0005D0  50F5               	movf	tablat,w,c
 13568  0005D2  D005               	bra	u13750
 13569  0005D4                     u13757:
 13570  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13571  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13572  0005DC  50E7               	movf	indf1,w,c
 13573  0005DE                     u13750:
 13574  0005DE  0A20               	xorlw	32
 13575  0005E0  B4D8               	btfsc	status,2,c
 13576  0005E2  D7EA               	goto	l11908
 13577                           
 13578                           ;tff.c: 665: if (*p == '/') p++;
 13579  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13580  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13581  0005EC  6AF8               	clrf	tblptru,c
 13582  0005EE  0E07               	movlw	(high __ramtop+-1)
 13583  0005F0  64F7               	cpfsgt	tblptrh,c
 13584  0005F2  D003               	bra	u13777
 13585  0005F4  0008               	tblrd		*
 13586  0005F6  50F5               	movf	tablat,w,c
 13587  0005F8  D005               	bra	u13770
 13588  0005FA                     u13777:
 13589  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13590  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13591  000602  50E7               	movf	indf1,w,c
 13592  000604                     u13770:
 13593  000604  0A2F               	xorlw	47
 13594  000606  A4D8               	btfss	status,2,c
 13595  000608  D003               	goto	l11916
 13596  00060A  0100               	movlb	0	; () banked
 13597  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13598  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13599  000610                     l11916:
 13600                           
 13601                           ;tff.c: 666: *path = p;
 13602  000610  503D               	movf	auto_mount@path^0,w,c
 13603  000612  6ED9               	movwf	fsr2l,c
 13604  000614  6ADA               	clrf	fsr2h,c
 13605  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13606  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13607                           
 13608                           ;tff.c: 669: fs = FatFs;
 13609  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13610  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13611                           
 13612                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13613  000626  0100               	movlb	0	; () banked
 13614  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13615  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13616  00062C  A4D8               	btfss	status,2,c
 13617  00062E  D002               	goto	l11926
 13618                           
 13619                           ; BSR set to: 0
 13620  000630  0E0A               	movlw	10
 13621  000632  0012               	return	
 13622  000634                     l11926:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;tff.c: 672: if (fs->fs_type) {
 13626  000634  EE20 F01C          	lfsr	2,28
 13627  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13628  00063A  26D9               	addwf	fsr2l,f,c
 13629  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13630  00063E  22DA               	addwfc	fsr2h,f,c
 13631  000640  50DF               	movf	indf2,w,c
 13632  000642  B4D8               	btfsc	status,2,c
 13633  000644  D00F               	goto	l11944
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;tff.c: 673: stat = disk_status(0);
 13637  000646  0E00               	movlw	0
 13638  000648  ECAC  F02B         	call	_disk_status
 13639  00064C  0100               	movlb	0	; () banked
 13640  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;tff.c: 674: if (!(stat & 0x01)) {
 13644  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13645  000652  D008               	goto	l11944
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13649  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13650  000656  A4D8               	btfss	status,2,c
 13651                           
 13652                           ; BSR set to: 0
 13653  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13654  00065A  D002               	goto	l11940
 13655  00065C                     u13830:
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13659  00065C  0E09               	movlw	9
 13660  00065E  0012               	return	
 13661  000660                     l11940:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;tff.c: 679: return FR_OK;
 13665  000660  0E00               	movlw	0
 13666  000662  0012               	return	
 13667  000664                     l11944:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13671  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13672  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13673  00066C  0E00               	movlw	0
 13674  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13675  000670  0E00               	movlw	0
 13676  000672  6E0C               	movwf	memset@c^0,c
 13677  000674  0E02               	movlw	2
 13678  000676  6E0F               	movwf	(memset@n+1)^0,c
 13679  000678  0E20               	movlw	32
 13680  00067A  6E0E               	movwf	memset@n^0,c
 13681  00067C  EC09  F02C         	call	_memset	;wreg free
 13682                           
 13683                           ;tff.c: 686: stat = disk_initialize(0);
 13684  000680  0E00               	movlw	0
 13685  000682  EC88  F02C         	call	_disk_initialize
 13686  000686  0100               	movlb	0	; () banked
 13687  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;tff.c: 687: if (stat & 0x01)
 13691  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13692  00068C  D002               	goto	l11954
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;tff.c: 688: return FR_NOT_READY;
 13696  00068E  0E01               	movlw	1
 13697  000690  0012               	return	
 13698  000692                     l11954:
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13702  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13703  000694  B4D8               	btfsc	status,2,c
 13704  000696  D002               	goto	l11962
 13705                           
 13706                           ; BSR set to: 0
 13707  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13708  00069A  D7E0               	goto	u13830
 13709  00069C                     l11962:
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13713  00069C  0E00               	movlw	0
 13714  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13715  0006A0  0E00               	movlw	0
 13716  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13717  0006A4  0E00               	movlw	0
 13718  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13719  0006A8  0E00               	movlw	0
 13720  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13721  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13722  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13723  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13724  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13725  0006BC  ECB9  F024         	call	_check_fs	;wreg free
 13726  0006C0  0100               	movlb	0	; () banked
 13727  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;tff.c: 697: if (fmt == 1) {
 13731  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13732  0006C6  A4D8               	btfss	status,2,c
 13733  0006C8  D023               	goto	l11972
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;tff.c: 699: if (fs->win[446+4]) {
 13737  0006CA  EE21 F0E2          	lfsr	2,482
 13738  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13739  0006D0  26D9               	addwf	fsr2l,f,c
 13740  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13741  0006D4  22DA               	addwfc	fsr2h,f,c
 13742  0006D6  50DF               	movf	indf2,w,c
 13743  0006D8  B4D8               	btfsc	status,2,c
 13744  0006DA  D01A               	goto	l11972
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13748  0006DC  EE21 F0E6          	lfsr	2,486
 13749  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13750  0006E2  26D9               	addwf	fsr2l,f,c
 13751  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13752  0006E6  22DA               	addwfc	fsr2h,f,c
 13753  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13754  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13755  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13756  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;tff.c: 701: fmt = check_fs(bootsect);
 13760  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13761  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13762  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13763  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13764  000708  ECB9  F024         	call	_check_fs	;wreg free
 13765  00070C  0100               	movlb	0	; () banked
 13766  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13767  000710                     l11972:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13771  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13772  000712  A4D8               	btfss	status,2,c
 13773  000714  D00C               	goto	u13900
 13774                           
 13775                           ; BSR set to: 0
 13776  000716  EE20 F02B          	lfsr	2,43
 13777  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13778  00071C  26D9               	addwf	fsr2l,f,c
 13779  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13780  000720  22DA               	addwfc	fsr2h,f,c
 13781  000722  50DE               	movf	postinc2,w,c
 13782  000724  E104               	bnz	u13900
 13783  000726  0E02               	movlw	2
 13784  000728  18DE               	xorwf	postinc2,w,c
 13785  00072A  B4D8               	btfsc	status,2,c
 13786  00072C  D002               	goto	l11980
 13787  00072E                     u13900:
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13791  00072E  0E0B               	movlw	11
 13792  000730  0012               	return	
 13793  000732                     l11980:
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13797  000732  EE20 F036          	lfsr	2,54
 13798  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13799  000738  26D9               	addwf	fsr2l,f,c
 13800  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13801  00073C  22DA               	addwfc	fsr2h,f,c
 13802  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13803  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13804  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13805  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13806  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13807  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13811  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13812  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13813  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13814  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13815  00075A  A4D8               	btfss	status,2,c
 13816  00075C  D00E               	goto	l1074
 13817                           
 13818                           ; BSR set to: 0
 13819  00075E  EE20 F044          	lfsr	2,68
 13820  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13821  000764  26D9               	addwf	fsr2l,f,c
 13822  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13823  000768  22DA               	addwfc	fsr2h,f,c
 13824  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13825  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13826  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13827  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13828  00077A                     l1074:
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13832  00077A  EE20 F014          	lfsr	2,20
 13833  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13834  000780  26D9               	addwf	fsr2l,f,c
 13835  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13836  000784  22DA               	addwfc	fsr2h,f,c
 13837  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13838  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13842  00078E  EE20 F030          	lfsr	2,48
 13843  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13844  000794  26D9               	addwf	fsr2l,f,c
 13845  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13846  000798  22DA               	addwfc	fsr2h,f,c
 13847  00079A  EE10 F01E          	lfsr	1,30
 13848  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13849  0007A0  26E1               	addwf	fsr1l,f,c
 13850  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13851  0007A4  22E2               	addwfc	fsr1h,f,c
 13852  0007A6  CFDF FFE7          	movff	indf2,indf1
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;tff.c: 712: fatsize *= fs->n_fats;
 13856  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13857  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13858  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13859  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13860  0007BA  EE20 F01E          	lfsr	2,30
 13861  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13862  0007C0  26D9               	addwf	fsr2l,f,c
 13863  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13864  0007C4  22DA               	addwfc	fsr2h,f,c
 13865  0007C6  50DF               	movf	indf2,w,c
 13866  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13867  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13868  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13869  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13870  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13871  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13872  0007D4  EC6C  F028         	call	___lmul	;wreg free
 13873  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13874  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13875  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13876  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13877                           
 13878                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13879  0007E8  0100               	movlb	0	; () banked
 13880  0007EA  EE20 F02E          	lfsr	2,46
 13881  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13882  0007F0  26D9               	addwf	fsr2l,f,c
 13883  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13884  0007F4  22DA               	addwfc	fsr2h,f,c
 13885  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13886  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13887  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13888  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13889  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13890  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13891  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13892  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13893  00080A  0E00               	movlw	0
 13894  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13895  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13896  000810  0E00               	movlw	0
 13897  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13898  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13899  000816  EE20 F008          	lfsr	2,8
 13900  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13901  00081C  26D9               	addwf	fsr2l,f,c
 13902  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13903  000820  22DA               	addwfc	fsr2h,f,c
 13904  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13905  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13906  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13907  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;tff.c: 714: fs->csize = fs->win[13];
 13911  000832  EE20 F02D          	lfsr	2,45
 13912  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13913  000838  26D9               	addwf	fsr2l,f,c
 13914  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13915  00083C  22DA               	addwfc	fsr2h,f,c
 13916  00083E  EE10 F01D          	lfsr	1,29
 13917  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13918  000844  26E1               	addwf	fsr1l,f,c
 13919  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13920  000848  22E2               	addwfc	fsr1h,f,c
 13921  00084A  CFDF FFE7          	movff	indf2,indf1
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13925  00084E  EE20 F031          	lfsr	2,49
 13926  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13927  000854  26D9               	addwf	fsr2l,f,c
 13928  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13929  000858  22DA               	addwfc	fsr2h,f,c
 13930  00085A  EE10 F002          	lfsr	1,2
 13931  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13932  000860  26E1               	addwf	fsr1l,f,c
 13933  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13934  000864  22E2               	addwfc	fsr1h,f,c
 13935  000866  CFDE FFE6          	movff	postinc2,postinc1
 13936  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13940  00086E  EE20 F033          	lfsr	2,51
 13941  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13942  000874  26D9               	addwf	fsr2l,f,c
 13943  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13944  000878  22DA               	addwfc	fsr2h,f,c
 13945  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13946  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13947  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13948  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13949  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13950  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13954  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13955  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13956  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13957  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13958  000896  A4D8               	btfss	status,2,c
 13959  000898  D00E               	goto	l12002
 13960                           
 13961                           ; BSR set to: 0
 13962  00089A  EE20 F040          	lfsr	2,64
 13963  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13964  0008A0  26D9               	addwf	fsr2l,f,c
 13965  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13966  0008A4  22DA               	addwfc	fsr2h,f,c
 13967  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13968  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13969  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13970  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13971  0008B6                     l12002:
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13975  0008B6  EE20 F002          	lfsr	2,2
 13976  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13977  0008BC  26D9               	addwf	fsr2l,f,c
 13978  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13979  0008C0  22DA               	addwfc	fsr2h,f,c
 13980  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13981  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13982  0008CA  0E04               	movlw	4
 13983  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13984  0008CE                     u13935:
 13985  0008CE  90D8               	bcf	status,0,c
 13986  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13987  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13988  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13989  0008D6  D7FB               	goto	u13935
 13990  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13991  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13992  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13993  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13994  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13995  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13996  0008E4  EE20 F02E          	lfsr	2,46
 13997  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 13998  0008EA  26D9               	addwf	fsr2l,f,c
 13999  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14000  0008EE  22DA               	addwfc	fsr2h,f,c
 14001  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 14002  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 14003  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 14004  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14005  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 14006  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14007  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 14008  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 14009  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 14010  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 14011  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 14012  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 14013  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 14014  00090E  0E00               	movlw	0
 14015  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 14016  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 14017  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 14018  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14019  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 14020  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14021  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14022  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 14023  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14024  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14025  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 14026  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 14027  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14028  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 14029  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 14030  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 14031  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 14032  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 14033  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14034  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 14035  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 14036  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14037  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 14038  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 14039  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 14040  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 14041  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 14042  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 14043  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 14044  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 14045  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 14046  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 14047  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 14048  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 14049  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 14050  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 14051  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 14052  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 14053  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 14054  00095E  EE20 F01D          	lfsr	2,29
 14055  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 14056  000964  26D9               	addwf	fsr2l,f,c
 14057  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14058  000968  22DA               	addwfc	fsr2h,f,c
 14059  00096A  50DF               	movf	indf2,w,c
 14060  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 14061  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 14062  000970  6E0E               	movwf	___lldiv@divisor^0,c
 14063  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 14064  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 14065  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 14066  000978  ECFA  F024         	call	___lldiv	;wreg free
 14067  00097C  0E02               	movlw	2
 14068  00097E  240A               	addwf	?___lldiv^0,w,c
 14069  000980  0100               	movlb	0	; () banked
 14070  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 14071  000984  0E00               	movlw	0
 14072  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 14073  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 14074  00098A  0E00               	movlw	0
 14075  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 14076  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 14077  000990  0E00               	movlw	0
 14078  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 14079  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 14080  000996  EE20 F016          	lfsr	2,22
 14081  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 14082  00099C  26D9               	addwf	fsr2l,f,c
 14083  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14084  0009A0  22DA               	addwfc	fsr2h,f,c
 14085  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 14086  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;tff.c: 722: fmt = 1;
 14090  0009AA  0E01               	movlw	1
 14091  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 14095  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14096  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14097  0009B2  E106               	bnz	u13940
 14098  0009B4  0EF7               	movlw	247
 14099  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14100  0009B8  0E0F               	movlw	15
 14101  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14102  0009BC  A0D8               	btfss	status,0,c
 14103  0009BE  D002               	goto	l12010
 14104  0009C0                     u13940:
 14105                           
 14106                           ; BSR set to: 0
 14107  0009C0  0E02               	movlw	2
 14108  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 14109  0009C4                     l12010:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 14113  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14114  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14115  0009C8  E107               	bnz	u13950
 14116  0009CA  0EF7               	movlw	247
 14117  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14118  0009CE  0EFF               	movlw	255
 14119  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14120  0009D2  B0D8               	btfsc	status,0,c
 14121  0009D4  D6AC               	goto	u13900
 14122  0009D6  D001               	goto	l12016
 14123  0009D8                     u13950:
 14124  0009D8  D6AA               	goto	u13900
 14125  0009DA                     l12016:
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 14129  0009DA  EE20 F008          	lfsr	2,8
 14130  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 14131  0009E0  26D9               	addwf	fsr2l,f,c
 14132  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14133  0009E4  22DA               	addwfc	fsr2h,f,c
 14134  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 14135  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 14136  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 14137  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 14138  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14139  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 14140  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 14141  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14142  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14143  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 14144  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14145  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14146  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14147  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14148  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14149  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14150  000A0E  EE20 F00C          	lfsr	2,12
 14151  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 14152  000A14  26D9               	addwf	fsr2l,f,c
 14153  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14154  000A18  22DA               	addwfc	fsr2h,f,c
 14155  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 14156  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 14157  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 14158  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 14159                           
 14160                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 14161  000A2A  EE20 F008          	lfsr	2,8
 14162  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 14163  000A30  26D9               	addwf	fsr2l,f,c
 14164  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14165  000A34  22DA               	addwfc	fsr2h,f,c
 14166  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 14167  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 14168  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 14169  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 14170  000A46  EE20 F002          	lfsr	2,2
 14171  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 14172  000A4C  26D9               	addwf	fsr2l,f,c
 14173  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14174  000A50  22DA               	addwfc	fsr2h,f,c
 14175  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 14176  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 14177  000A5A  0E04               	movlw	4
 14178  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14179  000A5E                     u13965:
 14180  000A5E  90D8               	bcf	status,0,c
 14181  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 14182  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 14183  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 14184  000A66  D7FB               	goto	u13965
 14185  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14186  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 14187  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14188  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14189  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14190  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 14191  000A74  0E00               	movlw	0
 14192  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14193  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14194  000A7A  0E00               	movlw	0
 14195  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14196  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14197  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14198  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 14199  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 14200  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14201  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 14202  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 14203  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14204  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 14205  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14206  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14207  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 14208  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14209  000A98  EE20 F010          	lfsr	2,16
 14210  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 14211  000A9E  26D9               	addwf	fsr2l,f,c
 14212  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14213  000AA2  22DA               	addwfc	fsr2h,f,c
 14214  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 14215  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 14216  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 14217  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 14218                           
 14219                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 14220  000AB4  EE20 F01A          	lfsr	2,26
 14221  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 14222  000ABA  26D9               	addwf	fsr2l,f,c
 14223  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14224  000ABE  22DA               	addwfc	fsr2h,f,c
 14225  000AC0  0EFF               	movlw	255
 14226  000AC2  6EDE               	movwf	postinc2,c
 14227  000AC4  0EFF               	movlw	255
 14228  000AC6  6EDD               	movwf	postdec2,c
 14229                           
 14230                           ;tff.c: 754: fs->fs_type = fmt;
 14231  000AC8  EE20 F01C          	lfsr	2,28
 14232  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 14233  000ACE  26D9               	addwf	fsr2l,f,c
 14234  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14235  000AD2  22DA               	addwfc	fsr2h,f,c
 14236  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;tff.c: 755: fs->id = ++fsid;
 14240  000AD8  0101               	movlb	1	; () banked
 14241  000ADA  4B72               	infsnz	_fsid& (0+255),f,b
 14242  000ADC  2B73               	incf	(_fsid+1)& (0+255),f,b
 14243  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 14244  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 14245  000AE6  C172  FFDE         	movff	_fsid,postinc2
 14246  000AEA  C173  FFDD         	movff	_fsid+1,postdec2
 14247                           
 14248                           ;tff.c: 756: return FR_OK;
 14249  000AEE  0E00               	movlw	0
 14250  000AF0  0012               	return		;funcret
 14251  000AF2                     __end_of_auto_mount:
 14252                           	callstack 0
 14253                           
 14254 ;; *************** function _memset *****************
 14255 ;; Defined at:
 14256 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;  p1              2    9[COMRAM] PTR void 
 14259 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14260 ;;  c               2   11[COMRAM] int 
 14261 ;;  n               2   13[COMRAM] unsigned int 
 14262 ;; Auto vars:     Size  Location     Type
 14263 ;;  p               2   15[COMRAM] PTR unsigned char 
 14264 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  2    9[COMRAM] PTR void 
 14267 ;; Registers used:
 14268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14274 ;;      Params:         6       0       0       0       0       0       0       0       0
 14275 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14277 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14278 ;;Total ram usage:        8 bytes
 14279 ;; Hardware stack levels used:    1
 14280 ;; Hardware stack levels required when called:    2
 14281 ;; This function calls:
 14282 ;;		Nothing
 14283 ;; This function is called by:
 14284 ;;		_make_dirfile
 14285 ;;		_reserve_direntry
 14286 ;;		_auto_mount
 14287 ;;		_f_open
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text79
 14292  005812                     __ptext79:
 14293                           	callstack 0
 14294  005812                     _memset:
 14295                           	callstack 21
 14296                           
 14297                           ;incstack = 0
 14298  005812  C00A  F010         	movff	memset@p1,memset@p
 14299  005816  C00B  F011         	movff	memset@p1+1,memset@p+1
 14300  00581A  D008               	goto	l11140
 14301  00581C                     l11136:
 14302  00581C  C010  FFD9         	movff	memset@p,fsr2l
 14303  005820  C011  FFDA         	movff	memset@p+1,fsr2h
 14304  005824  C00C  FFDF         	movff	memset@c,indf2
 14305  005828  4A10               	infsnz	memset@p^0,f,c
 14306  00582A  2A11               	incf	(memset@p+1)^0,f,c
 14307  00582C                     l11140:
 14308  00582C  060E               	decf	memset@n^0,f,c
 14309  00582E  A0D8               	btfss	status,0,c
 14310  005830  060F               	decf	(memset@n+1)^0,f,c
 14311  005832  280E               	incf	memset@n^0,w,c
 14312  005834  E1F3               	bnz	l11136
 14313  005836  280F               	incf	(memset@n+1)^0,w,c
 14314  005838  B4D8               	btfsc	status,2,c
 14315  00583A  0012               	return	
 14316  00583C  D7EF               	goto	l11136
 14317  00583E                     __end_of_memset:
 14318                           	callstack 0
 14319                           
 14320 ;; *************** function _disk_initialize *****************
 14321 ;; Defined at:
 14322 ;;		line 59 in file "bibliotecas/diskio.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  pdrv            1    wreg     unsigned char 
 14325 ;; Auto vars:     Size  Location     Type
 14326 ;;  pdrv            1   41[COMRAM] unsigned char 
 14327 ;;  result          2    0        int 
 14328 ;;  stat            1   42[COMRAM] unsigned char 
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  1    wreg      unsigned char 
 14331 ;; Registers used:
 14332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0
 14339 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14341 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14342 ;;Total ram usage:        2 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:    7
 14345 ;; This function calls:
 14346 ;;		_sdc_disk_initialize
 14347 ;; This function is called by:
 14348 ;;		_auto_mount
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text80
 14353  005910                     __ptext80:
 14354                           	callstack 0
 14355  005910                     _disk_initialize:
 14356                           	callstack 17
 14357                           
 14358                           ;incstack = 0
 14359                           ;disk_initialize@pdrv stored from wreg
 14360  005910  6E2A               	movwf	disk_initialize@pdrv^0,c
 14361                           
 14362                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14363  005912  D005               	goto	l11328
 14364  005914                     l11310:
 14365                           
 14366                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14367  005914  EC8A  F00C         	call	_sdc_disk_initialize	;wreg free
 14368  005918  6E2B               	movwf	disk_initialize@stat^0,c
 14369  00591A                     l11312:
 14370                           
 14371                           ;diskio.c: 72: return stat;
 14372  00591A  502B               	movf	disk_initialize@stat^0,w,c
 14373  00591C  0012               	return	
 14374  00591E                     l11328:
 14375  00591E  502A               	movf	disk_initialize@pdrv^0,w,c
 14376                           
 14377                           ; Switch size 1, requested type "simple"
 14378                           ; Number of cases is 3, Range of values is 0 to 2
 14379                           ; switch strategies available:
 14380                           ; Name         Instructions Cycles
 14381                           ; simple_byte           10     6 (average)
 14382                           ;	Chosen strategy is simple_byte
 14383  005920  0A00               	xorlw	0	; case 0
 14384  005922  B4D8               	btfsc	status,2,c
 14385  005924  D7F7               	goto	l11310
 14386  005926  0A01               	xorlw	1	; case 1
 14387  005928  B4D8               	btfsc	status,2,c
 14388  00592A  D7F4               	goto	l11310
 14389  00592C  0A03               	xorlw	3	; case 2
 14390  00592E  B4D8               	btfsc	status,2,c
 14391  005930  D7F4               	goto	l11312
 14392                           
 14393                           ;diskio.c: 88: return 0x01;
 14394  005932  0E01               	movlw	1
 14395  005934  0012               	return		;funcret
 14396  005936                     __end_of_disk_initialize:
 14397                           	callstack 0
 14398                           
 14399 ;; *************** function _sdc_disk_initialize *****************
 14400 ;; Defined at:
 14401 ;;		line 275 in file "bibliotecas/diskio.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;		None
 14404 ;; Auto vars:     Size  Location     Type
 14405 ;;  count2          2   38[COMRAM] int 
 14406 ;;  crc_number      2   34[COMRAM] int 
 14407 ;;  count1          2   32[COMRAM] int 
 14408 ;;  i               2    0        int 
 14409 ;;  buff            1   40[COMRAM] unsigned char 
 14410 ;;  ocr             1   37[COMRAM] unsigned char 
 14411 ;;  buff_i          1   36[COMRAM] unsigned char 
 14412 ;;  stat            1   31[COMRAM] unsigned char 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  1    wreg      unsigned char 
 14415 ;; Registers used:
 14416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14422 ;;      Params:         0       0       0       0       0       0       0       0       0
 14423 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14424 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14425 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14426 ;;Total ram usage:       13 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:    6
 14429 ;; This function calls:
 14430 ;;		_command
 14431 ;;		_dummy_clocks
 14432 ;;		_escreve_frase_ram_lcd
 14433 ;;		_posicao_cursor_lcd
 14434 ;;		_proceed
 14435 ;;		_response
 14436 ;;		_sdc_reset
 14437 ;; This function is called by:
 14438 ;;		_disk_initialize
 14439 ;; This function uses a non-reentrant model
 14440 ;;
 14441                           
 14442                           	psect	text81
 14443  001914                     __ptext81:
 14444                           	callstack 0
 14445  001914                     _sdc_disk_initialize:
 14446                           	callstack 17
 14447                           
 14448                           ;incstack = 0
 14449  001914  0E00               	movlw	0
 14450  001916  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14451  001918  0E00               	movlw	0
 14452  00191A  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14453  00191C  0E00               	movlw	0
 14454  00191E  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14455  001920  0E00               	movlw	0
 14456  001922  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14457                           
 14458                           ;diskio.c: 280: BYTE buff = 0;
 14459  001924  0E00               	movlw	0
 14460  001926  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14461                           
 14462                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14463  001928  0E10               	movlw	16
 14464  00192A  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14465  00192C  0E94               	movlw	148
 14466  00192E                     u16717:
 14467  00192E  2EE8               	decfsz	wreg,f,c
 14468  001930  D7FE               	bra	u16717
 14469  001932  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14470  001934  D7FC               	bra	u16717
 14471  001936  D000               	nop2	
 14472                           
 14473                           ;diskio.c: 284: dummy_clocks(100);
 14474  001938  0E64               	movlw	100
 14475  00193A  ECD7  F02A         	call	_dummy_clocks
 14476                           
 14477                           ;diskio.c: 287: sdc_reset();
 14478  00193E  ECE9  F023         	call	_sdc_reset	;wreg free
 14479                           
 14480                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14481  001942  0EAA               	movlw	170
 14482  001944  6E0F               	movwf	command@arg^0,c
 14483  001946  0E01               	movlw	1
 14484  001948  6E10               	movwf	(command@arg+1)^0,c
 14485  00194A  0E00               	movlw	0
 14486  00194C  6E11               	movwf	(command@arg+2)^0,c
 14487  00194E  0E00               	movlw	0
 14488  001950  6E12               	movwf	(command@arg+3)^0,c
 14489  001952  0E87               	movlw	135
 14490  001954  6E13               	movwf	command@CRC^0,c
 14491  001956  0E48               	movlw	72
 14492  001958  ECBB  F027         	call	_command
 14493                           
 14494                           ;diskio.c: 289: proceed();
 14495  00195C  ECFF  F02D         	call	_proceed	;wreg free
 14496  001960                     l10948:
 14497                           
 14498                           ;diskio.c: 291: buff_i = response();
 14499  001960  ECF9  F02D         	call	_response	;wreg free
 14500  001964  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14501                           
 14502                           ;diskio.c: 292: if(buff_i == 1)
 14503  001966  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14504  001968  A4D8               	btfss	status,2,c
 14505  00196A  D004               	goto	l10954
 14506                           
 14507                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14508  00196C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14509  00196E  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14510  001970  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14511                           
 14512                           ;diskio.c: 295: }
 14513  001972  D006               	goto	l10958
 14514  001974                     l10954:
 14515                           
 14516                           ;diskio.c: 296: else if(buff_i==0xAA)
 14517  001974  0EAA               	movlw	170
 14518  001976  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14519  001978  A4D8               	btfss	status,2,c
 14520  00197A  D002               	goto	l10958
 14521                           
 14522                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14523  00197C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14524  00197E  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14525  001980                     l10958:
 14526                           
 14527                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14528  001980  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14529  001982  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14530                           
 14531                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14532  001984  0EAA               	movlw	170
 14533  001986  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14534  001988  E103               	bnz	u12290
 14535  00198A  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14536  00198C  B4D8               	btfsc	status,2,c
 14537  00198E  D008               	goto	u12300
 14538  001990                     u12290:
 14539  001990  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14540  001992  D7E6               	goto	l10948
 14541  001994  0EE8               	movlw	232
 14542  001996  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14543  001998  0E03               	movlw	3
 14544  00199A  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14545  00199C  A0D8               	btfss	status,0,c
 14546  00199E  D7E0               	goto	l10948
 14547  0019A0                     u12300:
 14548                           
 14549                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14550  0019A0  0EAA               	movlw	170
 14551  0019A2  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14552  0019A4  E102               	bnz	u12311
 14553  0019A6  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14554  0019A8  A4D8               	btfss	status,2,c
 14555  0019AA                     u12311:
 14556  0019AA  D099               	goto	l11036
 14557  0019AC                     u12310:
 14558                           
 14559                           ;diskio.c: 310: count2 = 0;
 14560                           
 14561                           ;diskio.c: 309: do{
 14562  0019AC  0E00               	movlw	0
 14563  0019AE  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14564  0019B0  0E00               	movlw	0
 14565  0019B2  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14566  0019B4                     
 14567                           ;diskio.c: 319: dummy_clocks(10);
 14568  0019B4  0E0A               	movlw	10
 14569  0019B6  ECD7  F02A         	call	_dummy_clocks
 14570                           
 14571                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14572  0019BA  0E00               	movlw	0
 14573  0019BC  6E0F               	movwf	command@arg^0,c
 14574  0019BE  0E00               	movlw	0
 14575  0019C0  6E10               	movwf	(command@arg+1)^0,c
 14576  0019C2  0E00               	movlw	0
 14577  0019C4  6E11               	movwf	(command@arg+2)^0,c
 14578  0019C6  0E00               	movlw	0
 14579  0019C8  6E12               	movwf	(command@arg+3)^0,c
 14580  0019CA  0E00               	movlw	0
 14581  0019CC  6E13               	movwf	command@CRC^0,c
 14582  0019CE  0E77               	movlw	119
 14583  0019D0  ECBB  F027         	call	_command
 14584                           
 14585                           ;diskio.c: 323: proceed();
 14586  0019D4  ECFF  F02D         	call	_proceed	;wreg free
 14587  0019D8                     l10978:
 14588                           
 14589                           ;diskio.c: 325: buff = response();
 14590  0019D8  ECF9  F02D         	call	_response	;wreg free
 14591  0019DC  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14592                           
 14593                           ;diskio.c: 326: count2++;
 14594  0019DE  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14595  0019E0  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14596                           
 14597                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14598  0019E2  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14599  0019E4  B4D8               	btfsc	status,2,c
 14600  0019E6  D008               	goto	u12330
 14601  0019E8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14602  0019EA  D7F6               	goto	l10978
 14603  0019EC  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14604  0019EE  E104               	bnz	u12330
 14605  0019F0  0E0A               	movlw	10
 14606  0019F2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14607  0019F4  A0D8               	btfss	status,0,c
 14608  0019F6  D7F0               	goto	l10978
 14609  0019F8                     u12330:
 14610                           
 14611                           ;diskio.c: 328: count2 = 0;
 14612  0019F8  0E00               	movlw	0
 14613  0019FA  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14614  0019FC  0E00               	movlw	0
 14615  0019FE  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14616                           
 14617                           ;diskio.c: 332: dummy_clocks(10);
 14618  001A00  0E0A               	movlw	10
 14619  001A02  ECD7  F02A         	call	_dummy_clocks
 14620                           
 14621                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14622  001A06  0E00               	movlw	0
 14623  001A08  6E0F               	movwf	command@arg^0,c
 14624  001A0A  0E00               	movlw	0
 14625  001A0C  6E10               	movwf	(command@arg+1)^0,c
 14626  001A0E  0E00               	movlw	0
 14627  001A10  6E11               	movwf	(command@arg+2)^0,c
 14628  001A12  0E40               	movlw	64
 14629  001A14  6E12               	movwf	(command@arg+3)^0,c
 14630  001A16  0E00               	movlw	0
 14631  001A18  6E13               	movwf	command@CRC^0,c
 14632  001A1A  0E69               	movlw	105
 14633  001A1C  ECBB  F027         	call	_command
 14634                           
 14635                           ;diskio.c: 334: proceed();
 14636  001A20  ECFF  F02D         	call	_proceed	;wreg free
 14637                           
 14638                           ;diskio.c: 335: buff = response();
 14639  001A24  ECF9  F02D         	call	_response	;wreg free
 14640  001A28  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14641                           
 14642                           ;diskio.c: 336: count2++;
 14643  001A2A  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14644  001A2C  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14645                           
 14646                           ;diskio.c: 337: }while(buff!=0X00);
 14647  001A2E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14648  001A30  A4D8               	btfss	status,2,c
 14649  001A32  D7C0               	goto	l10968
 14650                           
 14651                           ;diskio.c: 342: dummy_clocks(10);
 14652  001A34  0E0A               	movlw	10
 14653  001A36  ECD7  F02A         	call	_dummy_clocks
 14654                           
 14655                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14656  001A3A  0E00               	movlw	0
 14657  001A3C  6E0F               	movwf	command@arg^0,c
 14658  001A3E  0E00               	movlw	0
 14659  001A40  6E10               	movwf	(command@arg+1)^0,c
 14660  001A42  0E00               	movlw	0
 14661  001A44  6E11               	movwf	(command@arg+2)^0,c
 14662  001A46  0E00               	movlw	0
 14663  001A48  6E12               	movwf	(command@arg+3)^0,c
 14664  001A4A  0EFF               	movlw	255
 14665  001A4C  6E13               	movwf	command@CRC^0,c
 14666  001A4E  0E7A               	movlw	122
 14667  001A50  ECBB  F027         	call	_command
 14668                           
 14669                           ;diskio.c: 344: proceed();
 14670  001A54  ECFF  F02D         	call	_proceed	;wreg free
 14671  001A58                     l11002:
 14672                           
 14673                           ;diskio.c: 346: buff = response();
 14674  001A58  ECF9  F02D         	call	_response	;wreg free
 14675  001A5C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14676                           
 14677                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14678  001A5E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14679  001A60  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14680  001A62  0B80               	andlw	128
 14681  001A64  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14682                           
 14683                           ;diskio.c: 348: count2++;
 14684  001A66  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14685  001A68  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14686                           
 14687                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14688  001A6A  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14689  001A6C  B4D8               	btfsc	status,2,c
 14690  001A6E  D00B               	goto	u12370
 14691  001A70  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14692  001A72  B4D8               	btfsc	status,2,c
 14693  001A74  D008               	goto	u12370
 14694  001A76  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14695  001A78  D7EF               	goto	l11002
 14696  001A7A  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14697  001A7C  E104               	bnz	u12370
 14698  001A7E  0E0A               	movlw	10
 14699  001A80  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14700  001A82  A0D8               	btfss	status,0,c
 14701  001A84  D7E9               	goto	l11002
 14702  001A86                     u12370:
 14703                           
 14704                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14705  001A86  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14706  001A88  B4D8               	btfsc	status,2,c
 14707  001A8A  D003               	goto	u12390
 14708  001A8C  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14709  001A8E  A4D8               	btfss	status,2,c
 14710  001A90  D78D               	goto	u12310
 14711  001A92                     u12390:
 14712                           
 14713                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14714  001A92  0E10               	movlw	16
 14715  001A94  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14716  001A96  0E94               	movlw	148
 14717  001A98                     u16727:
 14718  001A98  2EE8               	decfsz	wreg,f,c
 14719  001A9A  D7FE               	bra	u16727
 14720  001A9C  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14721  001A9E  D7FC               	bra	u16727
 14722  001AA0  D000               	nop2	
 14723                           
 14724                           ;diskio.c: 356: stat = 0X00;
 14725  001AA2  0E00               	movlw	0
 14726  001AA4  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14727                           
 14728                           ;diskio.c: 358: if(!ocr)
 14729  001AA6  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14730  001AA8  A4D8               	btfss	status,2,c
 14731  001AAA  D0A6               	goto	u12490
 14732                           
 14733                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14734  001AAC  0E0A               	movlw	10
 14735  001AAE  ECD7  F02A         	call	_dummy_clocks
 14736                           
 14737                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14738  001AB2  0E00               	movlw	0
 14739  001AB4  6E0F               	movwf	command@arg^0,c
 14740  001AB6  0E02               	movlw	2
 14741  001AB8  6E10               	movwf	(command@arg+1)^0,c
 14742  001ABA  0E00               	movlw	0
 14743  001ABC  6E11               	movwf	(command@arg+2)^0,c
 14744  001ABE  0E00               	movlw	0
 14745  001AC0  6E12               	movwf	(command@arg+3)^0,c
 14746  001AC2  0EFF               	movlw	255
 14747  001AC4  6E13               	movwf	command@CRC^0,c
 14748  001AC6  0E50               	movlw	80
 14749  001AC8  ECBB  F027         	call	_command
 14750                           
 14751                           ;diskio.c: 363: proceed();
 14752  001ACC  ECFF  F02D         	call	_proceed	;wreg free
 14753  001AD0                     
 14754                           ;diskio.c: 367: buff = response();
 14755  001AD0  ECF9  F02D         	call	_response	;wreg free
 14756  001AD4  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14757                           
 14758                           ;diskio.c: 368: }while(buff!=0X00);
 14759  001AD6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14760  001AD8  B4D8               	btfsc	status,2,c
 14761  001ADA  D08E               	goto	u12490
 14762  001ADC  D7F9               	goto	l11030
 14763  001ADE                     l11036:
 14764                           
 14765                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14766  001ADE  0E00               	movlw	0
 14767  001AE0  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14768  001AE2  0E00               	movlw	0
 14769  001AE4  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14770                           
 14771                           ;diskio.c: 378: dummy_clocks(1);
 14772  001AE6  0E01               	movlw	1
 14773  001AE8  ECD7  F02A         	call	_dummy_clocks
 14774                           
 14775                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14776  001AEC  0E00               	movlw	0
 14777  001AEE  6E0F               	movwf	command@arg^0,c
 14778  001AF0  0E00               	movlw	0
 14779  001AF2  6E10               	movwf	(command@arg+1)^0,c
 14780  001AF4  0E00               	movlw	0
 14781  001AF6  6E11               	movwf	(command@arg+2)^0,c
 14782  001AF8  0E00               	movlw	0
 14783  001AFA  6E12               	movwf	(command@arg+3)^0,c
 14784  001AFC  0EFF               	movlw	255
 14785  001AFE  6E13               	movwf	command@CRC^0,c
 14786  001B00  0E69               	movlw	105
 14787  001B02  ECBB  F027         	call	_command
 14788                           
 14789                           ;diskio.c: 380: proceed();
 14790  001B06  ECFF  F02D         	call	_proceed	;wreg free
 14791  001B0A                     l11046:
 14792                           
 14793                           ;diskio.c: 382: buff = response();
 14794  001B0A  ECF9  F02D         	call	_response	;wreg free
 14795  001B0E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14796                           
 14797                           ;diskio.c: 383: count2++;
 14798  001B10  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14799  001B12  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14800                           
 14801                           ;diskio.c: 384: if(buff==0x00)
 14802  001B14  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14803  001B16  A4D8               	btfss	status,2,c
 14804  001B18  D00B               	goto	l11056
 14805                           
 14806                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14807  001B1A  0E00               	movlw	0
 14808  001B1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14809  001B1E  0E01               	movlw	1
 14810  001B20  EC5E  F027         	call	_posicao_cursor_lcd
 14811                           
 14812                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14813  001B24  0E24               	movlw	low STR_3
 14814  001B26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14815  001B28  0E62               	movlw	high STR_3
 14816  001B2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14817  001B2C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14818  001B30                     l11056:
 14819                           
 14820                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14821  001B30  0E10               	movlw	16
 14822  001B32  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14823  001B34  0E94               	movlw	148
 14824  001B36                     u16737:
 14825  001B36  2EE8               	decfsz	wreg,f,c
 14826  001B38  D7FE               	bra	u16737
 14827  001B3A  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14828  001B3C  D7FC               	bra	u16737
 14829  001B3E  D000               	nop2	
 14830                           
 14831                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14832  001B40  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14833  001B42  B4D8               	btfsc	status,2,c
 14834  001B44  D008               	goto	u12440
 14835  001B46  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14836  001B48  D7E0               	goto	l11046
 14837  001B4A  0E10               	movlw	16
 14838  001B4C  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14839  001B4E  0E27               	movlw	39
 14840  001B50  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14841  001B52  A0D8               	btfss	status,0,c
 14842  001B54  D7DA               	goto	l11046
 14843  001B56                     u12440:
 14844                           
 14845                           ;diskio.c: 393: if(count2==10)
 14846  001B56  0E0A               	movlw	10
 14847  001B58  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14848  001B5A  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14849  001B5C  A4D8               	btfss	status,2,c
 14850  001B5E  D034               	goto	u12480
 14851                           
 14852                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14853  001B60  0E00               	movlw	0
 14854  001B62  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14855  001B64  0E00               	movlw	0
 14856  001B66  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14857                           
 14858                           ;diskio.c: 396: dummy_clocks(10);
 14859  001B68  0E0A               	movlw	10
 14860  001B6A  ECD7  F02A         	call	_dummy_clocks
 14861                           
 14862                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14863  001B6E  0E00               	movlw	0
 14864  001B70  6E0F               	movwf	command@arg^0,c
 14865  001B72  0E00               	movlw	0
 14866  001B74  6E10               	movwf	(command@arg+1)^0,c
 14867  001B76  0E00               	movlw	0
 14868  001B78  6E11               	movwf	(command@arg+2)^0,c
 14869  001B7A  0E00               	movlw	0
 14870  001B7C  6E12               	movwf	(command@arg+3)^0,c
 14871  001B7E  0EFF               	movlw	255
 14872  001B80  6E13               	movwf	command@CRC^0,c
 14873  001B82  0E41               	movlw	65
 14874  001B84  ECBB  F027         	call	_command
 14875                           
 14876                           ;diskio.c: 398: proceed();
 14877  001B88  ECFF  F02D         	call	_proceed	;wreg free
 14878  001B8C                     l11072:
 14879                           
 14880                           ;diskio.c: 400: buff = response();
 14881  001B8C  ECF9  F02D         	call	_response	;wreg free
 14882  001B90  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14883                           
 14884                           ;diskio.c: 401: count2++;
 14885  001B92  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14886  001B94  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14887                           
 14888                           ;diskio.c: 402: if(buff==0x00)
 14889  001B96  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14890  001B98  A4D8               	btfss	status,2,c
 14891  001B9A  D00B               	goto	l11082
 14892                           
 14893                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14894  001B9C  0E00               	movlw	0
 14895  001B9E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14896  001BA0  0E01               	movlw	1
 14897  001BA2  EC5E  F027         	call	_posicao_cursor_lcd
 14898                           
 14899                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14900  001BA6  0EE6               	movlw	low STR_4
 14901  001BA8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14902  001BAA  0E61               	movlw	high STR_4
 14903  001BAC  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14904  001BAE  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14905  001BB2                     l11082:
 14906                           
 14907                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14908  001BB2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14909  001BB4  B4D8               	btfsc	status,2,c
 14910  001BB6  D008               	goto	u12480
 14911  001BB8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14912  001BBA  D7E8               	goto	l11072
 14913  001BBC  0E10               	movlw	16
 14914  001BBE  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14915  001BC0  0E27               	movlw	39
 14916  001BC2  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14917  001BC4  A0D8               	btfss	status,0,c
 14918  001BC6  D7E2               	goto	l11072
 14919  001BC8                     u12480:
 14920                           
 14921                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14922  001BC8  0E0A               	movlw	10
 14923  001BCA  ECD7  F02A         	call	_dummy_clocks
 14924                           
 14925                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14926  001BCE  0E00               	movlw	0
 14927  001BD0  6E0F               	movwf	command@arg^0,c
 14928  001BD2  0E02               	movlw	2
 14929  001BD4  6E10               	movwf	(command@arg+1)^0,c
 14930  001BD6  0E00               	movlw	0
 14931  001BD8  6E11               	movwf	(command@arg+2)^0,c
 14932  001BDA  0E00               	movlw	0
 14933  001BDC  6E12               	movwf	(command@arg+3)^0,c
 14934  001BDE  0EFF               	movlw	255
 14935  001BE0  6E13               	movwf	command@CRC^0,c
 14936  001BE2  0E50               	movlw	80
 14937  001BE4  ECBB  F027         	call	_command
 14938                           
 14939                           ;diskio.c: 414: proceed();
 14940  001BE8  ECFF  F02D         	call	_proceed	;wreg free
 14941  001BEC                     
 14942                           ;diskio.c: 418: buff = response();
 14943  001BEC  ECF9  F02D         	call	_response	;wreg free
 14944  001BF0  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14945                           
 14946                           ;diskio.c: 419: }while(buff!=0X00);
 14947  001BF2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14948  001BF4  A4D8               	btfss	status,2,c
 14949  001BF6  D7FA               	goto	l11090
 14950  001BF8                     u12490:
 14951                           
 14952                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14953  001BF8  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14954  001BFA  0012               	return		;funcret
 14955  001BFC                     __end_of_sdc_disk_initialize:
 14956                           	callstack 0
 14957                           
 14958 ;; *************** function _sdc_reset *****************
 14959 ;; Defined at:
 14960 ;;		line 238 in file "bibliotecas/diskio.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;		None
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  teste          10    0        unsigned char [10]
 14965 ;;  count           2   25[COMRAM] int 
 14966 ;;  count_nosd      2   23[COMRAM] int 
 14967 ;;  i               2    0        int 
 14968 ;;  receive         2    0        unsigned int 
 14969 ;;  buff            1   27[COMRAM] unsigned char 
 14970 ;;  stat            1    0        unsigned char 
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      void 
 14973 ;; Registers used:
 14974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14980 ;;      Params:         0       0       0       0       0       0       0       0       0
 14981 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14983 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14984 ;;Total ram usage:        7 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; Hardware stack levels required when called:    5
 14987 ;; This function calls:
 14988 ;;		_command
 14989 ;;		_escreve_frase_ram_lcd
 14990 ;;		_posicao_cursor_lcd
 14991 ;;		_proceed
 14992 ;;		_response
 14993 ;; This function is called by:
 14994 ;;		_sdc_disk_initialize
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text82
 14999  0047D2                     __ptext82:
 15000                           	callstack 0
 15001  0047D2                     _sdc_reset:
 15002                           	callstack 17
 15003                           
 15004                           ;incstack = 0
 15005  0047D2  0E00               	movlw	0
 15006  0047D4  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15007  0047D6  0E00               	movlw	0
 15008  0047D8  6E1A               	movwf	sdc_reset@count^0,c
 15009  0047DA  0E00               	movlw	0
 15010  0047DC  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 15011  0047DE  0E00               	movlw	0
 15012  0047E0  6E18               	movwf	sdc_reset@count_nosd^0,c
 15013  0047E2                     l10778:
 15014                           
 15015                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 15016  0047E2  0E00               	movlw	0
 15017  0047E4  6E0F               	movwf	command@arg^0,c
 15018  0047E6  0E00               	movlw	0
 15019  0047E8  6E10               	movwf	(command@arg+1)^0,c
 15020  0047EA  0E00               	movlw	0
 15021  0047EC  6E11               	movwf	(command@arg+2)^0,c
 15022  0047EE  0E00               	movlw	0
 15023  0047F0  6E12               	movwf	(command@arg+3)^0,c
 15024  0047F2  0E95               	movlw	149
 15025  0047F4  6E13               	movwf	command@CRC^0,c
 15026  0047F6  0E40               	movlw	64
 15027  0047F8  ECBB  F027         	call	_command
 15028                           
 15029                           ;diskio.c: 249: proceed();
 15030  0047FC  ECFF  F02D         	call	_proceed	;wreg free
 15031  004800                     l10782:
 15032                           
 15033                           ;diskio.c: 251: buff = response();
 15034  004800  ECF9  F02D         	call	_response	;wreg free
 15035  004804  6E1C               	movwf	sdc_reset@buff^0,c
 15036                           
 15037                           ;diskio.c: 252: count++;
 15038  004806  4A1A               	infsnz	sdc_reset@count^0,f,c
 15039  004808  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 15040                           
 15041                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 15042  00480A  041C               	decf	sdc_reset@buff^0,w,c
 15043  00480C  B4D8               	btfsc	status,2,c
 15044  00480E  D008               	goto	u12020
 15045  004810  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 15046  004812  D7F6               	goto	l10782
 15047  004814  501B               	movf	(sdc_reset@count+1)^0,w,c
 15048  004816  E104               	bnz	u12020
 15049  004818  0E0A               	movlw	10
 15050  00481A  5C1A               	subwf	sdc_reset@count^0,w,c
 15051  00481C  A0D8               	btfss	status,0,c
 15052  00481E  D7F0               	goto	l10782
 15053  004820                     u12020:
 15054                           
 15055                           ;diskio.c: 254: count = 0;
 15056  004820  0E00               	movlw	0
 15057  004822  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15058  004824  0E00               	movlw	0
 15059  004826  6E1A               	movwf	sdc_reset@count^0,c
 15060                           
 15061                           ;diskio.c: 255: if(buff != 0x01)
 15062  004828  041C               	decf	sdc_reset@buff^0,w,c
 15063  00482A  B4D8               	btfsc	status,2,c
 15064  00482C  D016               	goto	l10800
 15065                           
 15066                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 15067  00482E  0E00               	movlw	0
 15068  004830  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15069  004832  0E01               	movlw	1
 15070  004834  EC5E  F027         	call	_posicao_cursor_lcd
 15071                           
 15072                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 15073  004838  0EF1               	movlw	low STR_1
 15074  00483A  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15075  00483C  0E61               	movlw	high STR_1
 15076  00483E  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15077  004840  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15078                           
 15079                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 15080  004844  0E00               	movlw	0
 15081  004846  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15082  004848  0E02               	movlw	2
 15083  00484A  EC5E  F027         	call	_posicao_cursor_lcd
 15084                           
 15085                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 15086  00484E  0E92               	movlw	low STR_2
 15087  004850  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15088  004852  0E61               	movlw	high STR_2
 15089  004854  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15090  004856  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15091  00485A                     l10800:
 15092                           
 15093                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 15094  00485A  041C               	decf	sdc_reset@buff^0,w,c
 15095  00485C  B4D8               	btfsc	status,2,c
 15096  00485E  0012               	return	
 15097  004860  D7C0               	goto	l10778
 15098  004862                     __end_of_sdc_reset:
 15099                           	callstack 0
 15100                           
 15101 ;; *************** function _posicao_cursor_lcd *****************
 15102 ;; Defined at:
 15103 ;;		line 271 in file "bibliotecas/display_lcd.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  linha           1    wreg     unsigned char 
 15106 ;;  coluna          1   12[COMRAM] unsigned char 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  linha           1   13[COMRAM] unsigned char 
 15109 ;;  endereco        1   14[COMRAM] unsigned char 
 15110 ;; Return value:  Size  Location     Type
 15111 ;;                  1    wreg      void 
 15112 ;; Registers used:
 15113 ;;		wreg, status,2, status,0, cstack
 15114 ;; Tracked objects:
 15115 ;;		On entry : 0/0
 15116 ;;		On exit  : 0/0
 15117 ;;		Unchanged: 0/0
 15118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15119 ;;      Params:         1       0       0       0       0       0       0       0       0
 15120 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15122 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15123 ;;Total ram usage:        3 bytes
 15124 ;; Hardware stack levels used:    1
 15125 ;; Hardware stack levels required when called:    4
 15126 ;; This function calls:
 15127 ;;		_endereco_cursor_lcd
 15128 ;; This function is called by:
 15129 ;;		_sdc_reset
 15130 ;;		_sdc_disk_initialize
 15131 ;;		_mostra_dados_display
 15132 ;;		_mensagem_inicial
 15133 ;;		_troca_de_tela
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text83
 15138  004EBC                     __ptext83:
 15139                           	callstack 0
 15140  004EBC                     _posicao_cursor_lcd:
 15141                           	callstack 25
 15142                           
 15143                           ;incstack = 0
 15144                           ;posicao_cursor_lcd@linha stored from wreg
 15145  004EBC  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 15146                           
 15147                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 15148  004EBE  0E11               	movlw	17
 15149  004EC0  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 15150  004EC2  0012               	return	
 15151  004EC4  D01B               	goto	l10642
 15152  004EC6                     l232:
 15153                           
 15154                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 15155  004EC6  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 15156                           
 15157                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 15158  004ECA  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15159  004ECC  EC5F  F026         	call	_endereco_cursor_lcd
 15160                           
 15161                           ;display_lcd.c: 284: break;
 15162  004ED0  D022               	goto	l10644
 15163  004ED2                     l10626:
 15164                           
 15165                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 15166  004ED2  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15167  004ED4  0F40               	addlw	64
 15168  004ED6  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15169                           
 15170                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 15171  004ED8  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15172  004EDA  EC5F  F026         	call	_endereco_cursor_lcd
 15173                           
 15174                           ;display_lcd.c: 289: break;
 15175  004EDE  D01B               	goto	l10644
 15176  004EE0                     l10630:
 15177                           
 15178                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 15179  004EE0  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15180  004EE2  0F14               	addlw	20
 15181  004EE4  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15182                           
 15183                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 15184  004EE6  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15185  004EE8  EC5F  F026         	call	_endereco_cursor_lcd
 15186                           
 15187                           ;display_lcd.c: 294: break;
 15188  004EEC  D014               	goto	l10644
 15189  004EEE                     l10634:
 15190                           
 15191                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 15192  004EEE  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15193  004EF0  0F54               	addlw	84
 15194  004EF2  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15195                           
 15196                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 15197  004EF4  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15198  004EF6  EC5F  F026         	call	_endereco_cursor_lcd
 15199                           
 15200                           ;display_lcd.c: 303: break;
 15201                           
 15202                           ;display_lcd.c: 299: break;
 15203  004EFA  D00D               	goto	l10644
 15204  004EFC                     l10642:
 15205  004EFC  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 15206                           
 15207                           ; Switch size 1, requested type "simple"
 15208                           ; Number of cases is 4, Range of values is 1 to 4
 15209                           ; switch strategies available:
 15210                           ; Name         Instructions Cycles
 15211                           ; simple_byte           13     7 (average)
 15212                           ;	Chosen strategy is simple_byte
 15213  004EFE  0A01               	xorlw	1	; case 1
 15214  004F00  B4D8               	btfsc	status,2,c
 15215  004F02  D7E1               	goto	l232
 15216  004F04  0A03               	xorlw	3	; case 2
 15217  004F06  B4D8               	btfsc	status,2,c
 15218  004F08  D7E4               	goto	l10626
 15219  004F0A  0A01               	xorlw	1	; case 3
 15220  004F0C  B4D8               	btfsc	status,2,c
 15221  004F0E  D7E8               	goto	l10630
 15222  004F10  0A07               	xorlw	7	; case 4
 15223  004F12  B4D8               	btfsc	status,2,c
 15224  004F14  D7EC               	goto	l10634
 15225  004F16                     l10644:
 15226                           
 15227                           ;display_lcd.c: 306: coluna++;
 15228  004F16  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 15229                           
 15230                           ;display_lcd.c: 307: }
 15231  004F18  0012               	return	
 15232  004F1A                     __end_of_posicao_cursor_lcd:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function _endereco_cursor_lcd *****************
 15236 ;; Defined at:
 15237 ;;		line 218 in file "bibliotecas/display_lcd.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;  endereco        1    wreg     unsigned char 
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;  endereco        1   11[COMRAM] unsigned char 
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  1    wreg      void 
 15244 ;; Registers used:
 15245 ;;		wreg, status,2, status,0, cstack
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15251 ;;      Params:         0       0       0       0       0       0       0       0       0
 15252 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15254 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15255 ;;Total ram usage:        1 bytes
 15256 ;; Hardware stack levels used:    1
 15257 ;; Hardware stack levels required when called:    3
 15258 ;; This function calls:
 15259 ;;		_delay
 15260 ;; This function is called by:
 15261 ;;		_posicao_cursor_lcd
 15262 ;; This function uses a non-reentrant model
 15263 ;;
 15264                           
 15265                           	psect	text84
 15266  004CBE                     __ptext84:
 15267                           	callstack 0
 15268  004CBE                     _endereco_cursor_lcd:
 15269                           	callstack 25
 15270                           
 15271                           ;incstack = 0
 15272                           ;endereco_cursor_lcd@endereco stored from wreg
 15273  004CBE  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 15274                           
 15275                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 15276  004CC0  9483               	bcf	131,2,c	;volatile
 15277                           
 15278                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 15279  004CC2  9283               	bcf	131,1,c	;volatile
 15280                           
 15281                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 15282  004CC4  9083               	bcf	131,0,c	;volatile
 15283                           
 15284                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 15285  004CC6  8E83               	bsf	131,7,c	;volatile
 15286                           
 15287                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 15288  004CC8  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 15289  004CCA  D002               	goto	l213
 15290  004CCC  8883               	bsf	131,4,c	;volatile
 15291  004CCE  D001               	goto	l10480
 15292  004CD0                     l213:
 15293                           
 15294                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 15295  004CD0  9883               	bcf	131,4,c	;volatile
 15296  004CD2                     l10480:
 15297                           
 15298                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 15299  004CD2  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 15300  004CD4  D002               	goto	l215
 15301  004CD6  8A83               	bsf	131,5,c	;volatile
 15302  004CD8  D001               	goto	l10484
 15303  004CDA                     l215:
 15304                           
 15305                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 15306  004CDA  9A83               	bcf	131,5,c	;volatile
 15307  004CDC                     l10484:
 15308                           
 15309                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 15310  004CDC  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 15311  004CDE  D002               	goto	l217
 15312  004CE0  8C83               	bsf	131,6,c	;volatile
 15313  004CE2  D001               	goto	l218
 15314  004CE4                     l217:
 15315                           
 15316                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 15317  004CE4  9C83               	bcf	131,6,c	;volatile
 15318  004CE6                     l218:
 15319                           
 15320                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 15321  004CE6  8083               	bsf	131,0,c	;volatile
 15322                           
 15323                           ;display_lcd.c: 236: delay();
 15324  004CE8  EC67  F02D         	call	_delay	;wreg free
 15325                           
 15326                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15327  004CEC  9083               	bcf	131,0,c	;volatile
 15328                           
 15329                           ;display_lcd.c: 238: delay();
 15330  004CEE  EC67  F02D         	call	_delay	;wreg free
 15331                           
 15332                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15333  004CF2  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15334  004CF4  D002               	goto	l219
 15335  004CF6  8883               	bsf	131,4,c	;volatile
 15336  004CF8  D001               	goto	l220
 15337  004CFA                     l219:
 15338                           
 15339                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15340  004CFA  9883               	bcf	131,4,c	;volatile
 15341  004CFC                     l220:
 15342                           
 15343                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15344  004CFC  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15345  004CFE  D002               	goto	l221
 15346  004D00  8A83               	bsf	131,5,c	;volatile
 15347  004D02  D001               	goto	l222
 15348  004D04                     l221:
 15349                           
 15350                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15351  004D04  9A83               	bcf	131,5,c	;volatile
 15352  004D06                     l222:
 15353                           
 15354                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15355  004D06  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15356  004D08  D002               	goto	l223
 15357  004D0A  8C83               	bsf	131,6,c	;volatile
 15358  004D0C  D001               	goto	l224
 15359  004D0E                     l223:
 15360                           
 15361                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15362  004D0E  9C83               	bcf	131,6,c	;volatile
 15363  004D10                     l224:
 15364                           
 15365                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15366  004D10  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15367  004D12  D002               	goto	l225
 15368  004D14  8E83               	bsf	131,7,c	;volatile
 15369  004D16  D001               	goto	l226
 15370  004D18                     l225:
 15371                           
 15372                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15373  004D18  9E83               	bcf	131,7,c	;volatile
 15374  004D1A                     l226:
 15375                           
 15376                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15377  004D1A  8083               	bsf	131,0,c	;volatile
 15378                           
 15379                           ;display_lcd.c: 252: delay();
 15380  004D1C  EC67  F02D         	call	_delay	;wreg free
 15381                           
 15382                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15383  004D20  9083               	bcf	131,0,c	;volatile
 15384                           
 15385                           ;display_lcd.c: 254: delay();
 15386  004D22  EC67  F02D         	call	_delay	;wreg free
 15387  004D26  0012               	return		;funcret
 15388  004D28                     __end_of_endereco_cursor_lcd:
 15389                           	callstack 0
 15390                           
 15391 ;; *************** function _escreve_frase_ram_lcd *****************
 15392 ;; Defined at:
 15393 ;;		line 445 in file "bibliotecas/display_lcd.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 15396 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 15397 ;;		 -> STR_29(5), STR_28(2), STR_27(5), STR_26(7), 
 15398 ;;		 -> STR_25(7), STR_24(2), STR_23(5), STR_22(7), 
 15399 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 15400 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 15401 ;;		 -> STR_5(15), rawLongitude(13), rawLatitude(12), escreve_inteiro_lcd@texto(7), 
 15402 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;		None
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      void 
 15407 ;; Registers used:
 15408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15414 ;;      Params:         2       0       0       0       0       0       0       0       0
 15415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15417 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15418 ;;Total ram usage:        2 bytes
 15419 ;; Hardware stack levels used:    1
 15420 ;; Hardware stack levels required when called:    4
 15421 ;; This function calls:
 15422 ;;		_escreve_caractere_lcd
 15423 ;; This function is called by:
 15424 ;;		_sdc_reset
 15425 ;;		_sdc_disk_initialize
 15426 ;;		_escreve_inteiro_lcd
 15427 ;;		_mostra_dados_display
 15428 ;;		_mensagem_inicial
 15429 ;;		_troca_de_tela
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text85
 15434  005180                     __ptext85:
 15435                           	callstack 0
 15436  005180                     _escreve_frase_ram_lcd:
 15437                           	callstack 25
 15438                           
 15439                           ;display_lcd.c: 447: while(*buffer)
 15440                           
 15441                           ;incstack = 0
 15442  005180  D014               	goto	l10654
 15443  005182                     l10650:
 15444                           
 15445                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 15446  005182  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15447  005186  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15448  00518A  6AF8               	clrf	tblptru,c
 15449  00518C  0E07               	movlw	(high __ramtop+-1)
 15450  00518E  64F7               	cpfsgt	tblptrh,c
 15451  005190  D003               	bra	u11797
 15452  005192  0008               	tblrd		*
 15453  005194  50F5               	movf	tablat,w,c
 15454  005196  D005               	bra	u11790
 15455  005198                     u11797:
 15456  005198  CFF6 FFE1          	movff	tblptrl,fsr1l
 15457  00519C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15458  0051A0  50E7               	movf	indf1,w,c
 15459  0051A2                     u11790:
 15460  0051A2  ECEF  F025         	call	_escreve_caractere_lcd
 15461                           
 15462                           ;display_lcd.c: 450: buffer++;
 15463  0051A6  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 15464  0051A8  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 15465  0051AA                     l10654:
 15466  0051AA  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15467  0051AE  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15468  0051B2  6AF8               	clrf	tblptru,c
 15469  0051B4  0E07               	movlw	(high __ramtop+-1)
 15470  0051B6  64F7               	cpfsgt	tblptrh,c
 15471  0051B8  D003               	bra	u11807
 15472  0051BA  0008               	tblrd		*
 15473  0051BC  50F5               	movf	tablat,w,c
 15474  0051BE  D005               	bra	u11800
 15475  0051C0                     u11807:
 15476  0051C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 15477  0051C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 15478  0051C8  50E7               	movf	indf1,w,c
 15479  0051CA                     u11800:
 15480  0051CA  0900               	iorlw	0
 15481  0051CC  B4D8               	btfsc	status,2,c
 15482  0051CE  0012               	return	
 15483  0051D0  D7D8               	goto	l10650
 15484  0051D2                     __end_of_escreve_frase_ram_lcd:
 15485                           	callstack 0
 15486                           
 15487 ;; *************** function _escreve_caractere_lcd *****************
 15488 ;; Defined at:
 15489 ;;		line 323 in file "bibliotecas/display_lcd.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;  data            1    wreg     unsigned char 
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;  data            1   11[COMRAM] unsigned char 
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1    wreg      void 
 15496 ;; Registers used:
 15497 ;;		wreg, status,2, status,0, cstack
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0
 15504 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15506 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15507 ;;Total ram usage:        1 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:    3
 15510 ;; This function calls:
 15511 ;;		_delay
 15512 ;; This function is called by:
 15513 ;;		_escreve_frase_ram_lcd
 15514 ;;		_troca_de_tela
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           	psect	text86
 15519  004BDE                     __ptext86:
 15520                           	callstack 0
 15521  004BDE                     _escreve_caractere_lcd:
 15522                           	callstack 25
 15523                           
 15524                           ;incstack = 0
 15525                           ;escreve_caractere_lcd@data stored from wreg
 15526  004BDE  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 15527                           
 15528                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 15529  004BE0  9483               	bcf	131,2,c	;volatile
 15530                           
 15531                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 15532  004BE2  8283               	bsf	131,1,c	;volatile
 15533                           
 15534                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 15535  004BE4  9083               	bcf	131,0,c	;volatile
 15536                           
 15537                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 15538  004BE6  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 15539  004BE8  D002               	goto	l242
 15540  004BEA  8883               	bsf	131,4,c	;volatile
 15541  004BEC  D001               	goto	l10512
 15542  004BEE                     l242:
 15543                           
 15544                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 15545  004BEE  9883               	bcf	131,4,c	;volatile
 15546  004BF0                     l10512:
 15547                           
 15548                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 15549  004BF0  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 15550  004BF2  D002               	goto	l244
 15551  004BF4  8A83               	bsf	131,5,c	;volatile
 15552  004BF6  D001               	goto	l10516
 15553  004BF8                     l244:
 15554                           
 15555                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 15556  004BF8  9A83               	bcf	131,5,c	;volatile
 15557  004BFA                     l10516:
 15558                           
 15559                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 15560  004BFA  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 15561  004BFC  D002               	goto	l246
 15562  004BFE  8C83               	bsf	131,6,c	;volatile
 15563  004C00  D001               	goto	l10520
 15564  004C02                     l246:
 15565                           
 15566                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 15567  004C02  9C83               	bcf	131,6,c	;volatile
 15568  004C04                     l10520:
 15569                           
 15570                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 15571  004C04  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 15572  004C06  D002               	goto	l248
 15573  004C08  8E83               	bsf	131,7,c	;volatile
 15574  004C0A  D001               	goto	l249
 15575  004C0C                     l248:
 15576                           
 15577                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 15578  004C0C  9E83               	bcf	131,7,c	;volatile
 15579  004C0E                     l249:
 15580                           
 15581                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 15582  004C0E  8083               	bsf	131,0,c	;volatile
 15583                           
 15584                           ;display_lcd.c: 342: delay();
 15585  004C10  EC67  F02D         	call	_delay	;wreg free
 15586                           
 15587                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 15588  004C14  9083               	bcf	131,0,c	;volatile
 15589                           
 15590                           ;display_lcd.c: 344: delay();
 15591  004C16  EC67  F02D         	call	_delay	;wreg free
 15592                           
 15593                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 15594  004C1A  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 15595  004C1C  D002               	goto	l250
 15596  004C1E  8883               	bsf	131,4,c	;volatile
 15597  004C20  D001               	goto	l251
 15598  004C22                     l250:
 15599                           
 15600                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 15601  004C22  9883               	bcf	131,4,c	;volatile
 15602  004C24                     l251:
 15603                           
 15604                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 15605  004C24  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 15606  004C26  D002               	goto	l252
 15607  004C28  8A83               	bsf	131,5,c	;volatile
 15608  004C2A  D001               	goto	l253
 15609  004C2C                     l252:
 15610                           
 15611                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 15612  004C2C  9A83               	bcf	131,5,c	;volatile
 15613  004C2E                     l253:
 15614                           
 15615                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 15616  004C2E  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 15617  004C30  D002               	goto	l254
 15618  004C32  8C83               	bsf	131,6,c	;volatile
 15619  004C34  D001               	goto	l255
 15620  004C36                     l254:
 15621                           
 15622                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 15623  004C36  9C83               	bcf	131,6,c	;volatile
 15624  004C38                     l255:
 15625                           
 15626                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 15627  004C38  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 15628  004C3A  D002               	goto	l256
 15629  004C3C  8E83               	bsf	131,7,c	;volatile
 15630  004C3E  D001               	goto	l257
 15631  004C40                     l256:
 15632                           
 15633                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 15634  004C40  9E83               	bcf	131,7,c	;volatile
 15635  004C42                     l257:
 15636                           
 15637                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 15638  004C42  8083               	bsf	131,0,c	;volatile
 15639                           
 15640                           ;display_lcd.c: 359: delay();
 15641  004C44  EC67  F02D         	call	_delay	;wreg free
 15642                           
 15643                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 15644  004C48  9083               	bcf	131,0,c	;volatile
 15645                           
 15646                           ;display_lcd.c: 361: delay();
 15647  004C4A  EC67  F02D         	call	_delay	;wreg free
 15648  004C4E  0012               	return		;funcret
 15649  004C50                     __end_of_escreve_caractere_lcd:
 15650                           	callstack 0
 15651                           
 15652 ;; *************** function _delay *****************
 15653 ;; Defined at:
 15654 ;;		line 45 in file "bibliotecas/display_lcd.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;  contador_int    1   10[COMRAM] unsigned char 
 15659 ;;  contador_ext    1    9[COMRAM] unsigned char 
 15660 ;; Return value:  Size  Location     Type
 15661 ;;                  1    wreg      void 
 15662 ;; Registers used:
 15663 ;;		wreg, status,2, status,0
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15669 ;;      Params:         0       0       0       0       0       0       0       0       0
 15670 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15671 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15672 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15673 ;;Total ram usage:        2 bytes
 15674 ;; Hardware stack levels used:    1
 15675 ;; Hardware stack levels required when called:    2
 15676 ;; This function calls:
 15677 ;;		Nothing
 15678 ;; This function is called by:
 15679 ;;		_init_lcd
 15680 ;;		_escreve_cmd_lcd
 15681 ;;		_endereco_cursor_lcd
 15682 ;;		_escreve_caractere_lcd
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text87
 15687  005ACE                     __ptext87:
 15688                           	callstack 0
 15689  005ACE                     _delay:
 15690                           	callstack 25
 15691                           
 15692                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 15693                           
 15694                           ;incstack = 0
 15695  005ACE  0E00               	movlw	0
 15696  005AD0  6E0A               	movwf	delay@contador_ext^0,c
 15697  005AD2                     l181:
 15698                           
 15699                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 15700  005AD2  F000               	nop	
 15701                           
 15702                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 15703  005AD4  0E00               	movlw	0
 15704  005AD6  6E0B               	movwf	delay@contador_int^0,c
 15705  005AD8                     l183:
 15706                           
 15707                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 15708  005AD8  F000               	nop	
 15709  005ADA  2A0B               	incf	delay@contador_int^0,f,c
 15710  005ADC  0E31               	movlw	49
 15711  005ADE  640B               	cpfsgt	delay@contador_int^0,c
 15712  005AE0  D7FB               	goto	l183
 15713  005AE2  2A0A               	incf	delay@contador_ext^0,f,c
 15714  005AE4  0E63               	movlw	99
 15715  005AE6  640A               	cpfsgt	delay@contador_ext^0,c
 15716  005AE8  D7F4               	goto	l181
 15717  005AEA  0012               	return	
 15718  005AEC                     __end_of_delay:
 15719                           	callstack 0
 15720                           
 15721 ;; *************** function _check_fs *****************
 15722 ;; Defined at:
 15723 ;;		line 624 in file "bibliotecas/tff.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;  sect            4   52[COMRAM] unsigned long 
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15728 ;;		 -> NULL(0), fs(544), 
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  1    wreg      unsigned char 
 15731 ;; Registers used:
 15732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 3F/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15738 ;;      Params:         4       0       0       0       0       0       0       0       0
 15739 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15740 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15741 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15742 ;;Total ram usage:        8 bytes
 15743 ;; Hardware stack levels used:    1
 15744 ;; Hardware stack levels required when called:    7
 15745 ;; This function calls:
 15746 ;;		_disk_read
 15747 ;;		_memcmp
 15748 ;; This function is called by:
 15749 ;;		_auto_mount
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text88
 15754  004972                     __ptext88:
 15755                           	callstack 0
 15756  004972                     _check_fs:
 15757                           	callstack 17
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;tff.c: 628: FATFS *fs = FatFs;
 15761                           
 15762                           ;incstack = 0
 15763  004972  C04D  F03B         	movff	_FatFs,check_fs@fs
 15764  004976  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15768  00497A  0E20               	movlw	32
 15769  00497C  243B               	addwf	check_fs@fs^0,w,c
 15770  00497E  6E29               	movwf	disk_read@buff^0,c
 15771  004980  0E00               	movlw	0
 15772  004982  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15773  004984  6E2A               	movwf	(disk_read@buff+1)^0,c
 15774  004986  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15775  00498A  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15776  00498E  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15777  004992  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15778  004996  0E01               	movlw	1
 15779  004998  6E2F               	movwf	disk_read@count^0,c
 15780  00499A  0E00               	movlw	0
 15781  00499C  EC28  F026         	call	_disk_read
 15782  0049A0  0900               	iorlw	0
 15783  0049A2  B4D8               	btfsc	status,2,c
 15784  0049A4  D002               	goto	l11518
 15785  0049A6                     u13200:
 15786  0049A6                     l11514:
 15787                           
 15788                           ;tff.c: 631: return 2;
 15789  0049A6  0E02               	movlw	2
 15790  0049A8  0012               	return	
 15791  0049AA                     l11518:
 15792                           
 15793                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15794  0049AA  EE22 F01E          	lfsr	2,542
 15795  0049AE  503B               	movf	check_fs@fs^0,w,c
 15796  0049B0  26D9               	addwf	fsr2l,f,c
 15797  0049B2  503C               	movf	(check_fs@fs+1)^0,w,c
 15798  0049B4  22DA               	addwfc	fsr2h,f,c
 15799  0049B6  0E55               	movlw	85
 15800  0049B8  18DE               	xorwf	postinc2,w,c
 15801  0049BA  E1F5               	bnz	l11514
 15802  0049BC  0EAA               	movlw	170
 15803  0049BE  18DE               	xorwf	postinc2,w,c
 15804  0049C0  A4D8               	btfss	status,2,c
 15805  0049C2  D7F1               	goto	u13200
 15806                           
 15807                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15808  0049C4  0E56               	movlw	86
 15809  0049C6  243B               	addwf	check_fs@fs^0,w,c
 15810  0049C8  6E0A               	movwf	memcmp@s1^0,c
 15811  0049CA  0E00               	movlw	0
 15812  0049CC  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15813  0049CE  6E0B               	movwf	(memcmp@s1+1)^0,c
 15814  0049D0  0E73               	movlw	low STR_17
 15815  0049D2  6E0C               	movwf	memcmp@s2^0,c
 15816  0049D4  0E62               	movlw	high STR_17
 15817  0049D6  6E0D               	movwf	(memcmp@s2+1)^0,c
 15818  0049D8  0E00               	movlw	0
 15819  0049DA  6E0F               	movwf	(memcmp@n+1)^0,c
 15820  0049DC  0E03               	movlw	3
 15821  0049DE  6E0E               	movwf	memcmp@n^0,c
 15822  0049E0  ECA0  F023         	call	_memcmp	;wreg free
 15823  0049E4  500A               	movf	?_memcmp^0,w,c
 15824  0049E6  100B               	iorwf	(?_memcmp+1)^0,w,c
 15825  0049E8  A4D8               	btfss	status,2,c
 15826  0049EA  D002               	goto	l11530
 15827                           
 15828                           ;tff.c: 636: return 0;
 15829  0049EC  0E00               	movlw	0
 15830  0049EE  0012               	return	
 15831  0049F0                     l11530:
 15832                           
 15833                           ;tff.c: 641: return 1;
 15834  0049F0  0E01               	movlw	1
 15835  0049F2  0012               	return		;funcret
 15836  0049F4                     __end_of_check_fs:
 15837                           	callstack 0
 15838                           
 15839 ;; *************** function _memcmp *****************
 15840 ;; Defined at:
 15841 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  s1              2    9[COMRAM] PTR const void 
 15844 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15845 ;;  s2              2   11[COMRAM] PTR const void 
 15846 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15847 ;;  n               2   13[COMRAM] unsigned int 
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  2    9[COMRAM] int 
 15852 ;; Registers used:
 15853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 0/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15859 ;;      Params:         6       0       0       0       0       0       0       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15861 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15862 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15863 ;;Total ram usage:        8 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:    2
 15866 ;; This function calls:
 15867 ;;		Nothing
 15868 ;; This function is called by:
 15869 ;;		_trace_path
 15870 ;;		_check_fs
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text89
 15875  004740                     __ptext89:
 15876                           	callstack 0
 15877  004740                     _memcmp:
 15878                           	callstack 22
 15879                           
 15880                           ;incstack = 0
 15881  004740  D03B               	goto	l11152
 15882  004742                     l11144:
 15883  004742  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15884  004746  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15885  00474A  50DF               	movf	indf2,w,c
 15886  00474C  6E10               	movwf	??_memcmp^0,c
 15887  00474E  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15888  004752  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15889  004756  6AF8               	clrf	tblptru,c
 15890  004758  0E07               	movlw	(high __ramtop+-1)
 15891  00475A  64F7               	cpfsgt	tblptrh,c
 15892  00475C  D003               	bra	u12517
 15893  00475E  0008               	tblrd		*
 15894  004760  50F5               	movf	tablat,w,c
 15895  004762  D005               	bra	u12510
 15896  004764                     u12517:
 15897  004764  CFF6 FFE1          	movff	tblptrl,fsr1l
 15898  004768  CFF7 FFE2          	movff	tblptrh,fsr1h
 15899  00476C  50E7               	movf	indf1,w,c
 15900  00476E                     u12510:
 15901  00476E  1810               	xorwf	??_memcmp^0,w,c
 15902  004770  B4D8               	btfsc	status,2,c
 15903  004772  D01E               	goto	l11150
 15904  004774  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15905  004778  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15906  00477C  50DF               	movf	indf2,w,c
 15907  00477E  6E10               	movwf	??_memcmp^0,c
 15908  004780  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15909  004784  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15910  004788  6AF8               	clrf	tblptru,c
 15911  00478A  0E07               	movlw	(high __ramtop+-1)
 15912  00478C  64F7               	cpfsgt	tblptrh,c
 15913  00478E  D003               	bra	u12537
 15914  004790  0008               	tblrd		*
 15915  004792  50F5               	movf	tablat,w,c
 15916  004794  D005               	bra	u12530
 15917  004796                     u12537:
 15918  004796  CFF6 FFE1          	movff	tblptrl,fsr1l
 15919  00479A  CFF7 FFE2          	movff	tblptrh,fsr1h
 15920  00479E  50E7               	movf	indf1,w,c
 15921  0047A0                     u12530:
 15922  0047A0  6E11               	movwf	(??_memcmp+1)^0,c
 15923  0047A2  5011               	movf	(??_memcmp+1)^0,w,c
 15924  0047A4  5C10               	subwf	??_memcmp^0,w,c
 15925  0047A6  6E0A               	movwf	?_memcmp^0,c
 15926  0047A8  6A0B               	clrf	(?_memcmp+1)^0,c
 15927  0047AA  A0D8               	btfss	status,0,c
 15928  0047AC  060B               	decf	(?_memcmp+1)^0,f,c
 15929  0047AE  0012               	return	
 15930  0047B0                     l11150:
 15931  0047B0  4A0A               	infsnz	memcmp@s1^0,f,c
 15932  0047B2  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15933  0047B4  4A0C               	infsnz	memcmp@s2^0,f,c
 15934  0047B6  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15935  0047B8                     l11152:
 15936  0047B8  060E               	decf	memcmp@n^0,f,c
 15937  0047BA  A0D8               	btfss	status,0,c
 15938  0047BC  060F               	decf	(memcmp@n+1)^0,f,c
 15939  0047BE  280E               	incf	memcmp@n^0,w,c
 15940  0047C0  E1C0               	bnz	l11144
 15941  0047C2  280F               	incf	(memcmp@n+1)^0,w,c
 15942  0047C4  A4D8               	btfss	status,2,c
 15943  0047C6  D7BD               	goto	l11144
 15944  0047C8  0E00               	movlw	0
 15945  0047CA  6E0B               	movwf	(?_memcmp+1)^0,c
 15946  0047CC  0E00               	movlw	0
 15947  0047CE  6E0A               	movwf	?_memcmp^0,c
 15948  0047D0  0012               	return		;funcret
 15949  0047D2                     __end_of_memcmp:
 15950                           	callstack 0
 15951                           
 15952 ;; *************** function ___lmul *****************
 15953 ;; Defined at:
 15954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;  multiplier      4    9[COMRAM] unsigned long 
 15957 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;  product         4   17[COMRAM] unsigned long 
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  4    9[COMRAM] unsigned long 
 15962 ;; Registers used:
 15963 ;;		wreg, status,2, status,0
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15969 ;;      Params:         8       0       0       0       0       0       0       0       0
 15970 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15972 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15973 ;;Total ram usage:       12 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:    2
 15976 ;; This function calls:
 15977 ;;		Nothing
 15978 ;; This function is called by:
 15979 ;;		_clust2sect
 15980 ;;		_auto_mount
 15981 ;;		_atol
 15982 ;; This function uses a non-reentrant model
 15983 ;;
 15984                           
 15985                           	psect	text90
 15986  0050D8                     __ptext90:
 15987                           	callstack 0
 15988  0050D8                     ___lmul:
 15989                           	callstack 20
 15990                           
 15991                           ;incstack = 0
 15992  0050D8  0E00               	movlw	0
 15993  0050DA  6E12               	movwf	___lmul@product^0,c
 15994  0050DC  0E00               	movlw	0
 15995  0050DE  6E13               	movwf	(___lmul@product+1)^0,c
 15996  0050E0  0E00               	movlw	0
 15997  0050E2  6E14               	movwf	(___lmul@product+2)^0,c
 15998  0050E4  0E00               	movlw	0
 15999  0050E6  6E15               	movwf	(___lmul@product+3)^0,c
 16000  0050E8                     l10768:
 16001  0050E8  A00A               	btfss	___lmul@multiplier^0,0,c
 16002  0050EA  D008               	goto	l10772
 16003  0050EC  500E               	movf	___lmul@multiplicand^0,w,c
 16004  0050EE  2612               	addwf	___lmul@product^0,f,c
 16005  0050F0  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 16006  0050F2  2213               	addwfc	(___lmul@product+1)^0,f,c
 16007  0050F4  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 16008  0050F6  2214               	addwfc	(___lmul@product+2)^0,f,c
 16009  0050F8  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 16010  0050FA  2215               	addwfc	(___lmul@product+3)^0,f,c
 16011  0050FC                     l10772:
 16012  0050FC  90D8               	bcf	status,0,c
 16013  0050FE  360E               	rlcf	___lmul@multiplicand^0,f,c
 16014  005100  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16015  005102  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16016  005104  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16017  005106  90D8               	bcf	status,0,c
 16018  005108  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 16019  00510A  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 16020  00510C  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 16021  00510E  320A               	rrcf	___lmul@multiplier^0,f,c
 16022  005110  500A               	movf	___lmul@multiplier^0,w,c
 16023  005112  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 16024  005114  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 16025  005116  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 16026  005118  A4D8               	btfss	status,2,c
 16027  00511A  D7E6               	goto	l10768
 16028  00511C  C012  F00A         	movff	___lmul@product,?___lmul
 16029  005120  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 16030  005124  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 16031  005128  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 16032  00512C  0012               	return		;funcret
 16033  00512E                     __end_of___lmul:
 16034                           	callstack 0
 16035                           
 16036 ;; *************** function _f_mount *****************
 16037 ;; Defined at:
 16038 ;;		line 794 in file "bibliotecas/tff.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;  drv             1    wreg     unsigned char 
 16041 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 16042 ;;		 -> fs(544), 
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;  drv             1   11[COMRAM] unsigned char 
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  1    wreg      enum E3231
 16047 ;; Registers used:
 16048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/1
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16054 ;;      Params:         2       0       0       0       0       0       0       0       0
 16055 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16057 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16058 ;;Total ram usage:        3 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:    2
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_escrita_sdcard
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text91
 16069  005350                     __ptext91:
 16070                           	callstack 0
 16071  005350                     _f_mount:
 16072                           	callstack 24
 16073                           
 16074                           ;incstack = 0
 16075                           ;f_mount@drv stored from wreg
 16076  005350  6E0C               	movwf	f_mount@drv^0,c
 16077                           
 16078                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 16079  005352  500C               	movf	f_mount@drv^0,w,c
 16080  005354  B4D8               	btfsc	status,2,c
 16081  005356  D002               	goto	l12230
 16082  005358  0E05               	movlw	5
 16083  00535A  0012               	return	
 16084  00535C                     l12230:
 16085                           
 16086                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 16087  00535C  504D               	movf	_FatFs^0,w,c
 16088  00535E  104E               	iorwf	(_FatFs+1)^0,w,c
 16089  005360  B4D8               	btfsc	status,2,c
 16090  005362  D008               	goto	l12234
 16091  005364  EE20 F01C          	lfsr	2,28
 16092  005368  504D               	movf	_FatFs^0,w,c
 16093  00536A  26D9               	addwf	fsr2l,f,c
 16094  00536C  504E               	movf	(_FatFs+1)^0,w,c
 16095  00536E  22DA               	addwfc	fsr2h,f,c
 16096  005370  0E00               	movlw	0
 16097  005372  6EDF               	movwf	indf2,c
 16098  005374                     l12234:
 16099                           
 16100                           ;tff.c: 803: FatFs = fs;
 16101  005374  C00A  F04D         	movff	f_mount@fs,_FatFs
 16102  005378  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 16103                           
 16104                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 16105  00537C  500A               	movf	f_mount@fs^0,w,c
 16106  00537E  100B               	iorwf	(f_mount@fs+1)^0,w,c
 16107  005380  B4D8               	btfsc	status,2,c
 16108  005382  D008               	goto	l12240
 16109  005384  EE20 F01C          	lfsr	2,28
 16110  005388  500A               	movf	f_mount@fs^0,w,c
 16111  00538A  26D9               	addwf	fsr2l,f,c
 16112  00538C  500B               	movf	(f_mount@fs+1)^0,w,c
 16113  00538E  22DA               	addwfc	fsr2h,f,c
 16114  005390  0E00               	movlw	0
 16115  005392  6EDF               	movwf	indf2,c
 16116  005394                     l12240:
 16117                           
 16118                           ;tff.c: 806: return FR_OK;
 16119  005394  0E00               	movlw	0
 16120  005396  0012               	return		;funcret
 16121  005398                     __end_of_f_mount:
 16122                           	callstack 0
 16123                           
 16124 ;; *************** function _f_lseek *****************
 16125 ;; Defined at:
 16126 ;;		line 1140 in file "bibliotecas/tff.c"
 16127 ;; Parameters:    Size  Location     Type
 16128 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 16129 ;;		 -> fil(28), 
 16130 ;;  ofs             4   40[BANK0 ] unsigned long 
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  csize           4   65[BANK0 ] unsigned long 
 16133 ;;  ifptr           4   61[BANK0 ] unsigned long 
 16134 ;;  clust           2   69[BANK0 ] unsigned short 
 16135 ;;  res             1   60[BANK0 ] enum E155
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      enum E3231
 16138 ;; Registers used:
 16139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16140 ;; Tracked objects:
 16141 ;;		On entry : 3F/0
 16142 ;;		On exit  : 3F/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16145 ;;      Params:         0       6       0       0       0       0       0       0       0
 16146 ;;      Locals:         0      11       0       0       0       0       0       0       0
 16147 ;;      Temps:          0      16       0       0       0       0       0       0       0
 16148 ;;      Totals:         0      33       0       0       0       0       0       0       0
 16149 ;;Total ram usage:       33 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:   10
 16152 ;; This function calls:
 16153 ;;		___lldiv
 16154 ;;		_create_chain
 16155 ;;		_get_cluster
 16156 ;;		_validate
 16157 ;; This function is called by:
 16158 ;;		_escrita_sdcard
 16159 ;; This function uses a non-reentrant model
 16160 ;;
 16161                           
 16162                           	psect	text92
 16163  000AF2                     __ptext92:
 16164                           	callstack 0
 16165  000AF2                     _f_lseek:
 16166                           	callstack 16
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 16170                           
 16171                           ;incstack = 0
 16172  000AF2  EE20 F004          	lfsr	2,4
 16173  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 16174  000AF8  26D9               	addwf	fsr2l,f,c
 16175  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16176  000AFC  22DA               	addwfc	fsr2h,f,c
 16177  000AFE  CFDE F010          	movff	postinc2,validate@fs
 16178  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 16179  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 16180  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 16181  000B0E  CFDE F012          	movff	postinc2,validate@id
 16182  000B12  CFDD F013          	movff	postdec2,validate@id+1
 16183  000B16  ECCC  F029         	call	_validate	;wreg free
 16184  000B1A  0100               	movlb	0	; () banked
 16185  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;tff.c: 1151: if (res != FR_OK) return res;
 16189  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 16190  000B20  A4D8               	btfss	status,2,c
 16191  000B22  0012               	return	
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 16195  000B24  EE20 F002          	lfsr	2,2
 16196  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 16197  000B2A  26D9               	addwf	fsr2l,f,c
 16198  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16199  000B2E  22DA               	addwfc	fsr2h,f,c
 16200  000B30  BEDF               	btfsc	indf2,7,c
 16201  000B32  0012               	return	
 16202                           
 16203                           ; BSR set to: 0
 16204                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 16205  000B34  EE20 F00A          	lfsr	2,10
 16206  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 16207  000B3A  26D9               	addwf	fsr2l,f,c
 16208  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16209  000B3E  22DA               	addwfc	fsr2h,f,c
 16210  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 16211  000B42  5CDE               	subwf	postinc2,w,c
 16212  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16213  000B46  58DE               	subwfb	postinc2,w,c
 16214  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16215  000B4A  58DE               	subwfb	postinc2,w,c
 16216  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16217  000B4E  58DE               	subwfb	postinc2,w,c
 16218  000B50  B0D8               	btfsc	status,0,c
 16219  000B52  D016               	goto	l1188
 16220                           
 16221                           ; BSR set to: 0
 16222  000B54  EE20 F002          	lfsr	2,2
 16223  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 16224  000B5A  26D9               	addwf	fsr2l,f,c
 16225  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16226  000B5E  22DA               	addwfc	fsr2h,f,c
 16227  000B60  B2DF               	btfsc	indf2,1,c
 16228  000B62  D00E               	goto	l1188
 16229                           
 16230                           ; BSR set to: 0
 16231  000B64  EE20 F00A          	lfsr	2,10
 16232  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 16233  000B6A  26D9               	addwf	fsr2l,f,c
 16234  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16235  000B6E  22DA               	addwfc	fsr2h,f,c
 16236  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 16237  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 16238  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 16239  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 16240  000B80                     l1188:
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;tff.c: 1159: ifptr = fp->fptr;
 16244  000B80  EE20 F006          	lfsr	2,6
 16245  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 16246  000B86  26D9               	addwf	fsr2l,f,c
 16247  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16248  000B8A  22DA               	addwfc	fsr2h,f,c
 16249  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 16250  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 16251  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 16252  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 16253                           
 16254                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 16255  000B9C  EE20 F006          	lfsr	2,6
 16256  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 16257  000BA2  26D9               	addwf	fsr2l,f,c
 16258  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16259  000BA6  22DA               	addwfc	fsr2h,f,c
 16260  000BA8  6ADE               	clrf	postinc2,c
 16261  000BAA  6ADE               	clrf	postinc2,c
 16262  000BAC  6ADE               	clrf	postinc2,c
 16263  000BAE  6ADD               	clrf	postdec2,c
 16264  000BB0  EE20 F003          	lfsr	2,3
 16265  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 16266  000BB6  26D9               	addwf	fsr2l,f,c
 16267  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16268  000BBA  22DA               	addwfc	fsr2h,f,c
 16269  000BBC  0EFF               	movlw	255
 16270  000BBE  6EDF               	movwf	indf2,c
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;tff.c: 1161: if (ofs > 0) {
 16274  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 16275  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 16276  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 16277  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 16278  000BC8  B4D8               	btfsc	status,2,c
 16279  000BCA  D19D               	goto	l12470
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 16283  000BCC  EE20 F004          	lfsr	2,4
 16284  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 16285  000BD2  26D9               	addwf	fsr2l,f,c
 16286  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16287  000BD6  22DA               	addwfc	fsr2h,f,c
 16288  000BD8  EE10 F01D          	lfsr	1,29
 16289  000BDC  50DE               	movf	postinc2,w,c
 16290  000BDE  26E1               	addwf	fsr1l,f,c
 16291  000BE0  50DD               	movf	postdec2,w,c
 16292  000BE2  22E2               	addwfc	fsr1h,f,c
 16293  000BE4  50E7               	movf	indf1,w,c
 16294  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 16295  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 16296  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 16297  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 16298  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 16299  000BF2  0E09               	movlw	9
 16300  000BF4                     u14525:
 16301  000BF4  90D8               	bcf	status,0,c
 16302  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 16303  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 16304  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 16305  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 16306  000BFE  2EE8               	decfsz	wreg,f,c
 16307  000C00  D7F9               	goto	u14525
 16308  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 16309  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 16310  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 16311  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 16312                           
 16313                           ; BSR set to: 0
 16314                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 16315  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 16316  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 16317  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 16318  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 16319  000C1A  B4D8               	btfsc	status,2,c
 16320  000C1C  D093               	goto	l12428
 16321                           
 16322                           ; BSR set to: 0
 16323  000C1E  0EFF               	movlw	255
 16324  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 16325  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 16326  000C24  0EFF               	movlw	255
 16327  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 16328  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16329  000C2A  0EFF               	movlw	255
 16330  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 16331  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16332  000C30  0EFF               	movlw	255
 16333  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 16334  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16335  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16336  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16337  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16338  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16339  000C46  ECFA  F024         	call	___lldiv	;wreg free
 16340  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 16341  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 16342  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 16343  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 16344  000C5A  0EFF               	movlw	255
 16345  000C5C  0100               	movlb	0	; () banked
 16346  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16347  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 16348  000C62  0EFF               	movlw	255
 16349  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16350  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16351  000C68  0EFF               	movlw	255
 16352  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16353  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16354  000C6E  0EFF               	movlw	255
 16355  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16356  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16357  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16358  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16359  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16360  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16361  000C84  ECFA  F024         	call	___lldiv	;wreg free
 16362  000C88  500A               	movf	?___lldiv^0,w,c
 16363  000C8A  0100               	movlb	0	; () banked
 16364  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 16365  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 16366  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 16367  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 16368  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 16369  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 16370  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 16371  000C9A  A0D8               	btfss	status,0,c
 16372  000C9C  D053               	goto	l12428
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 16376  000C9E  0EFF               	movlw	255
 16377  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 16378  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 16379  000CA4  0EFF               	movlw	255
 16380  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 16381  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16382  000CAA  0EFF               	movlw	255
 16383  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 16384  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16385  000CB0  0EFF               	movlw	255
 16386  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 16387  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16388  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 16389  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 16390  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 16391  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 16392  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 16393  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 16394  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 16395  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 16396  000CC6  0EFF               	movlw	255
 16397  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16398  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 16399  000CCC  0EFF               	movlw	255
 16400  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16401  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 16402  000CD2  0EFF               	movlw	255
 16403  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16404  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 16405  000CD8  0EFF               	movlw	255
 16406  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16407  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 16408  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 16409  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 16410  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 16411  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 16412  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 16413  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 16414  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 16415  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 16416  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 16417  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 16418  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 16419  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 16420  000CF6  EE20 F006          	lfsr	2,6
 16421  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 16422  000CFC  26D9               	addwf	fsr2l,f,c
 16423  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16424  000D00  22DA               	addwfc	fsr2h,f,c
 16425  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 16426  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 16427  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 16428  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 16429                           
 16430                           ;tff.c: 1166: ofs -= fp->fptr;
 16431  000D12  EE20 F006          	lfsr	2,6
 16432  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 16433  000D18  26D9               	addwf	fsr2l,f,c
 16434  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16435  000D1C  22DA               	addwfc	fsr2h,f,c
 16436  000D1E  50DE               	movf	postinc2,w,c
 16437  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16438  000D22  50DE               	movf	postinc2,w,c
 16439  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16440  000D26  50DE               	movf	postinc2,w,c
 16441  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16442  000D2A  50DD               	movf	postdec2,w,c
 16443  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16444                           
 16445                           ;tff.c: 1167: clust = fp->curr_clust;
 16446  000D2E  EE20 F010          	lfsr	2,16
 16447  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 16448  000D34  26D9               	addwf	fsr2l,f,c
 16449  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16450  000D38  22DA               	addwfc	fsr2h,f,c
 16451  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16452  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16453                           
 16454                           ;tff.c: 1168: } else {
 16455  000D42  D030               	goto	l12440
 16456  000D44                     l12428:
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;tff.c: 1169: clust = fp->org_clust;
 16460  000D44  EE20 F00E          	lfsr	2,14
 16461  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 16462  000D4A  26D9               	addwf	fsr2l,f,c
 16463  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16464  000D4E  22DA               	addwfc	fsr2h,f,c
 16465  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16466  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;tff.c: 1171: if (clust == 0) {
 16470  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 16471  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16472  000D5C  A4D8               	btfss	status,2,c
 16473  000D5E  D018               	goto	l1192
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;tff.c: 1172: clust = create_chain(0);
 16477  000D60  0E00               	movlw	0
 16478  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 16479  000D64  0E00               	movlw	0
 16480  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 16481  000D68  ECC1  F016         	call	_create_chain	;wreg free
 16482  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16483  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 16487  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 16488  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16489  000D78  B4D8               	btfsc	status,2,c
 16490  000D7A  D0F8               	goto	l12478
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;tff.c: 1174: fp->org_clust = clust;
 16494  000D7C  EE20 F00E          	lfsr	2,14
 16495  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 16496  000D82  26D9               	addwf	fsr2l,f,c
 16497  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16498  000D86  22DA               	addwfc	fsr2h,f,c
 16499  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16500  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16501  000D90                     l1192:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 16505  000D90  EE20 F010          	lfsr	2,16
 16506  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 16507  000D96  26D9               	addwf	fsr2l,f,c
 16508  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16509  000D9A  22DA               	addwfc	fsr2h,f,c
 16510  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16511  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16512  000DA4                     l12440:
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 16516  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 16517  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16518  000DA8  A4D8               	btfss	status,2,c
 16519  000DAA  D063               	goto	l12462
 16520  000DAC  D0AC               	goto	l12470
 16521  000DAE                     l12444:
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;tff.c: 1182: if (fp->flag & 0x02) {
 16525  000DAE  EE20 F002          	lfsr	2,2
 16526  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 16527  000DB4  26D9               	addwf	fsr2l,f,c
 16528  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16529  000DB8  22DA               	addwfc	fsr2h,f,c
 16530  000DBA  A2DF               	btfss	indf2,1,c
 16531  000DBC  D017               	goto	l12452
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;tff.c: 1183: clust = create_chain(clust);
 16535  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 16536  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 16537  000DC6  ECC1  F016         	call	_create_chain	;wreg free
 16538  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16539  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;tff.c: 1184: if (clust == 0) {
 16543  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 16544  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16545  000DD6  A4D8               	btfss	status,2,c
 16546  000DD8  D013               	goto	l12454
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;tff.c: 1185: ofs = csize; break;
 16550  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 16551  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 16552  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 16553  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 16554  000DEA  D04D               	goto	u14620
 16555  000DEC                     l12452:
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;tff.c: 1189: clust = get_cluster(clust);
 16559  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 16560  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 16561  000DF4  ECF4  F012         	call	_get_cluster	;wreg free
 16562  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 16563  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 16564  000E00                     l12454:
 16565                           
 16566                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 16567  000E00  0100               	movlb	0	; () banked
 16568  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 16569  000E04  E104               	bnz	u14600
 16570  000E06  0E02               	movlw	2
 16571  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16572  000E0A  A0D8               	btfss	status,0,c
 16573  000E0C  D0AF               	goto	l12478
 16574  000E0E                     u14600:
 16575                           
 16576                           ; BSR set to: 0
 16577  000E0E  EE20 F004          	lfsr	2,4
 16578  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 16579  000E14  26D9               	addwf	fsr2l,f,c
 16580  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16581  000E18  22DA               	addwfc	fsr2h,f,c
 16582  000E1A  EE10 F016          	lfsr	1,22
 16583  000E1E  50DE               	movf	postinc2,w,c
 16584  000E20  26E1               	addwf	fsr1l,f,c
 16585  000E22  50DD               	movf	postdec2,w,c
 16586  000E24  22E2               	addwfc	fsr1h,f,c
 16587  000E26  50E6               	movf	postinc1,w,c
 16588  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16589  000E2A  50E6               	movf	postinc1,w,c
 16590  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 16591  000E2E  B0D8               	btfsc	status,0,c
 16592  000E30  D09D               	goto	l12478
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;tff.c: 1191: fp->curr_clust = clust;
 16596  000E32  EE20 F010          	lfsr	2,16
 16597  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 16598  000E38  26D9               	addwf	fsr2l,f,c
 16599  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16600  000E3C  22DA               	addwfc	fsr2h,f,c
 16601  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16602  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16603                           
 16604                           ;tff.c: 1192: fp->fptr += csize;
 16605  000E46  EE20 F006          	lfsr	2,6
 16606  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 16607  000E4C  26D9               	addwf	fsr2l,f,c
 16608  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16609  000E50  22DA               	addwfc	fsr2h,f,c
 16610  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 16611  000E54  26DE               	addwf	postinc2,f,c
 16612  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16613  000E58  22DE               	addwfc	postinc2,f,c
 16614  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16615  000E5C  22DE               	addwfc	postinc2,f,c
 16616  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16617  000E60  22DE               	addwfc	postinc2,f,c
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;tff.c: 1193: ofs -= csize;
 16621  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 16622  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16623  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16624  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16625  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16626  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16627  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16628  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16629  000E72                     l12462:
 16630                           
 16631                           ; BSR set to: 0
 16632  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 16633  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 16634  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16635  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 16636  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16637  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 16638  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16639  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 16640  000E82  A0D8               	btfss	status,0,c
 16641  000E84  D794               	goto	l12444
 16642  000E86                     u14620:
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 16646  000E86  EE20 F006          	lfsr	2,6
 16647  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 16648  000E8C  26D9               	addwf	fsr2l,f,c
 16649  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16650  000E90  22DA               	addwfc	fsr2h,f,c
 16651  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 16652  000E94  26DE               	addwf	postinc2,f,c
 16653  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16654  000E98  22DE               	addwfc	postinc2,f,c
 16655  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16656  000E9C  22DE               	addwfc	postinc2,f,c
 16657  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16658  000EA0  22DE               	addwfc	postinc2,f,c
 16659                           
 16660                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16661  000EA2  EE20 F003          	lfsr	2,3
 16662  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16663  000EA8  26D9               	addwf	fsr2l,f,c
 16664  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16665  000EAC  22DA               	addwfc	fsr2h,f,c
 16666  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16667  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16668  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16669  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16670  000EBE  0E0A               	movlw	10
 16671  000EC0  D005               	goto	u14630
 16672  000EC2                     u14635:
 16673  000EC2  90D8               	bcf	status,0,c
 16674  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16675  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16676  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16677  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16678  000ECC                     u14630:
 16679  000ECC  2EE8               	decfsz	wreg,f,c
 16680  000ECE  D7F9               	goto	u14635
 16681  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16682  000ED2  6EDF               	movwf	indf2,c
 16683                           
 16684                           ; BSR set to: 0
 16685                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16686  000ED4  0EFF               	movlw	255
 16687  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16688  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16689  000EDA  0E01               	movlw	1
 16690  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16691  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16692  000EE0  0E00               	movlw	0
 16693  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16694  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16695  000EE6  0E00               	movlw	0
 16696  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16697  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16698  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16699  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16700  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16701  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16702  000EF4  B4D8               	btfsc	status,2,c
 16703  000EF6  D007               	goto	l12470
 16704                           
 16705                           ; BSR set to: 0
 16706  000EF8  EE20 F003          	lfsr	2,3
 16707  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16708  000EFE  26D9               	addwf	fsr2l,f,c
 16709  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16710  000F02  22DA               	addwfc	fsr2h,f,c
 16711  000F04  2ADF               	incf	indf2,f,c
 16712  000F06                     l12470:
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16716  000F06  EE20 F006          	lfsr	2,6
 16717  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16718  000F0C  26D9               	addwf	fsr2l,f,c
 16719  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16720  000F10  22DA               	addwfc	fsr2h,f,c
 16721  000F12  EE10 F00A          	lfsr	1,10
 16722  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16723  000F18  26E1               	addwf	fsr1l,f,c
 16724  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16725  000F1C  22E2               	addwfc	fsr1h,f,c
 16726  000F1E  50DE               	movf	postinc2,w,c
 16727  000F20  5CE6               	subwf	postinc1,w,c
 16728  000F22  50DE               	movf	postinc2,w,c
 16729  000F24  58E6               	subwfb	postinc1,w,c
 16730  000F26  50DE               	movf	postinc2,w,c
 16731  000F28  58E6               	subwfb	postinc1,w,c
 16732  000F2A  50DE               	movf	postinc2,w,c
 16733  000F2C  58E6               	subwfb	postinc1,w,c
 16734  000F2E  B0D8               	btfsc	status,0,c
 16735  000F30  0012               	return	
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16739  000F32  EE20 F006          	lfsr	2,6
 16740  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16741  000F38  26D9               	addwf	fsr2l,f,c
 16742  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16743  000F3C  22DA               	addwfc	fsr2h,f,c
 16744  000F3E  EE10 F00A          	lfsr	1,10
 16745  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16746  000F44  26E1               	addwf	fsr1l,f,c
 16747  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16748  000F48  22E2               	addwfc	fsr1h,f,c
 16749  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16750  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16751  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16752  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;tff.c: 1204: fp->flag |= 0x20;
 16756  000F5A  EE20 F002          	lfsr	2,2
 16757  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16758  000F60  26D9               	addwf	fsr2l,f,c
 16759  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16760  000F64  22DA               	addwfc	fsr2h,f,c
 16761  000F66  0E00               	movlw	0
 16762  000F68  8ADB               	bsf	plusw2,5,c
 16763  000F6A  0012               	return	
 16764  000F6C                     l12478:
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;tff.c: 1211: fp->flag |= 0x80;
 16768  000F6C  EE20 F002          	lfsr	2,2
 16769  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16770  000F72  26D9               	addwf	fsr2l,f,c
 16771  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16772  000F76  22DA               	addwfc	fsr2h,f,c
 16773  000F78  0E00               	movlw	0
 16774  000F7A  8EDB               	bsf	plusw2,7,c
 16775                           
 16776                           ; BSR set to: 0
 16777  000F7C  0012               	return		;funcret
 16778  000F7E                     __end_of_f_lseek:
 16779                           	callstack 0
 16780                           
 16781 ;; *************** function _create_chain *****************
 16782 ;; Defined at:
 16783 ;;		line 283 in file "bibliotecas/tff.c"
 16784 ;; Parameters:    Size  Location     Type
 16785 ;;  clust           2   24[BANK0 ] unsigned short 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  ncl             2   36[BANK0 ] unsigned short 
 16788 ;;  scl             2   34[BANK0 ] unsigned short 
 16789 ;;  cstat           2   32[BANK0 ] unsigned short 
 16790 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16791 ;;		 -> NULL(0), fs(544), 
 16792 ;;  mcl             2   28[BANK0 ] unsigned short 
 16793 ;; Return value:  Size  Location     Type
 16794 ;;                  2   24[BANK0 ] unsigned short 
 16795 ;; Registers used:
 16796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16797 ;; Tracked objects:
 16798 ;;		On entry : 3F/0
 16799 ;;		On exit  : 3F/0
 16800 ;;		Unchanged: 0/0
 16801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16802 ;;      Params:         0       2       0       0       0       0       0       0       0
 16803 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16804 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16805 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16806 ;;Total ram usage:       14 bytes
 16807 ;; Hardware stack levels used:    1
 16808 ;; Hardware stack levels required when called:    9
 16809 ;; This function calls:
 16810 ;;		_get_cluster
 16811 ;;		_put_cluster
 16812 ;; This function is called by:
 16813 ;;		_reserve_direntry
 16814 ;;		_f_write
 16815 ;;		_f_lseek
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text93
 16820  002D82                     __ptext93:
 16821                           	callstack 0
 16822  002D82                     _create_chain:
 16823                           	callstack 13
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;incstack = 0
 16830  002D82  C04D  F07E         	movff	_FatFs,create_chain@fs
 16831  002D86  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;tff.c: 291: mcl = fs->max_clust;
 16835  002D8A  EE20 F016          	lfsr	2,22
 16836  002D8E  517E               	movf	create_chain@fs& (0+255),w,b
 16837  002D90  26D9               	addwf	fsr2l,f,c
 16838  002D92  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16839  002D94  22DA               	addwfc	fsr2h,f,c
 16840  002D96  CFDE F07C          	movff	postinc2,create_chain@mcl
 16841  002D9A  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;tff.c: 292: if (clust == 0) {
 16845  002D9E  5178               	movf	create_chain@clust& (0+255),w,b
 16846  002DA0  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16847  002DA2  A4D8               	btfss	status,2,c
 16848  002DA4  D01B               	goto	l10816
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;tff.c: 293: scl = fs->last_clust;
 16852  002DA6  EE20 F018          	lfsr	2,24
 16853  002DAA  517E               	movf	create_chain@fs& (0+255),w,b
 16854  002DAC  26D9               	addwf	fsr2l,f,c
 16855  002DAE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16856  002DB0  22DA               	addwfc	fsr2h,f,c
 16857  002DB2  CFDE F082          	movff	postinc2,create_chain@scl
 16858  002DB6  CFDD F083          	movff	postdec2,create_chain@scl+1
 16859                           
 16860                           ; BSR set to: 0
 16861                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16862  002DBA  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16863  002DBC  E104               	bnz	u12060
 16864  002DBE  0E02               	movlw	2
 16865  002DC0  5D82               	subwf	create_chain@scl& (0+255),w,b
 16866  002DC2  A0D8               	btfss	status,0,c
 16867  002DC4  D006               	goto	u12070
 16868  002DC6                     u12060:
 16869                           
 16870                           ; BSR set to: 0
 16871  002DC6  517C               	movf	create_chain@mcl& (0+255),w,b
 16872  002DC8  5D82               	subwf	create_chain@scl& (0+255),w,b
 16873  002DCA  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16874  002DCC  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16875  002DCE  A0D8               	btfss	status,0,c
 16876  002DD0  D02B               	goto	l913
 16877  002DD2                     u12070:
 16878                           
 16879                           ; BSR set to: 0
 16880  002DD2  0E00               	movlw	0
 16881  002DD4  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16882  002DD6  0E01               	movlw	1
 16883  002DD8  6F82               	movwf	create_chain@scl& (0+255),b
 16884  002DDA  D026               	goto	l913
 16885  002DDC                     l10816:
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16889  002DDC  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16890  002DE0  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16891  002DE4  ECF4  F012         	call	_get_cluster	;wreg free
 16892  002DE8  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16893  002DEC  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16894                           
 16895                           ;tff.c: 298: if (cstat < 2) return 1;
 16896  002DF0  0100               	movlb	0	; () banked
 16897  002DF2  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16898  002DF4  E10A               	bnz	l10824
 16899  002DF6  0E02               	movlw	2
 16900  002DF8  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16901  002DFA  B0D8               	btfsc	status,0,c
 16902  002DFC  D006               	goto	l10824
 16903  002DFE                     u12080:
 16904  002DFE  0E00               	movlw	0
 16905  002E00  0100               	movlb	0	; () banked
 16906  002E02  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16907  002E04  0E01               	movlw	1
 16908  002E06  6F78               	movwf	?_create_chain& (0+255),b
 16909  002E08  0012               	return	
 16910  002E0A                     l10824:
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16914  002E0A  517C               	movf	create_chain@mcl& (0+255),w,b
 16915  002E0C  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16916  002E0E  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16917  002E10  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16918  002E12  B0D8               	btfsc	status,0,c
 16919  002E14  D005               	goto	l916
 16920                           
 16921                           ; BSR set to: 0
 16922  002E16  C080  F078         	movff	create_chain@cstat,?_create_chain
 16923  002E1A  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16924  002E1E  0012               	return	
 16925  002E20                     l916:
 16926                           
 16927                           ; BSR set to: 0
 16928                           ;tff.c: 300: scl = clust;
 16929  002E20  C078  F082         	movff	create_chain@clust,create_chain@scl
 16930  002E24  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16931  002E28                     l913:
 16932                           
 16933                           ; BSR set to: 0
 16934                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16935  002E28  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16936  002E2C  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16937  002E30                     l10828:
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;tff.c: 305: ncl++;
 16941  002E30  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16942  002E32  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;tff.c: 306: if (ncl >= mcl) {
 16946  002E34  517C               	movf	create_chain@mcl& (0+255),w,b
 16947  002E36  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16948  002E38  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16949  002E3A  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16950  002E3C  A0D8               	btfss	status,0,c
 16951  002E3E  D00F               	goto	l10840
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;tff.c: 307: ncl = 2;
 16955  002E40  0E00               	movlw	0
 16956  002E42  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16957  002E44  0E02               	movlw	2
 16958  002E46  6F84               	movwf	create_chain@ncl& (0+255),b
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;tff.c: 308: if (ncl > scl) return 0;
 16962  002E48  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16963  002E4A  E109               	bnz	l10840
 16964  002E4C  0E02               	movlw	2
 16965  002E4E  5D82               	subwf	create_chain@scl& (0+255),w,b
 16966  002E50  B0D8               	btfsc	status,0,c
 16967  002E52  D005               	goto	l10840
 16968  002E54                     u12110:
 16969                           
 16970                           ; BSR set to: 0
 16971  002E54  0E00               	movlw	0
 16972  002E56  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16973  002E58  0E00               	movlw	0
 16974  002E5A  6F78               	movwf	?_create_chain& (0+255),b
 16975  002E5C  0012               	return	
 16976  002E5E                     l10840:
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16980  002E5E  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16981  002E62  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16982  002E66  ECF4  F012         	call	_get_cluster	;wreg free
 16983  002E6A  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16984  002E6E  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16985                           
 16986                           ;tff.c: 311: if (cstat == 0) break;
 16987  002E72  0100               	movlb	0	; () banked
 16988  002E74  5180               	movf	create_chain@cstat& (0+255),w,b
 16989  002E76  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16990  002E78  B4D8               	btfsc	status,2,c
 16991  002E7A  D00C               	goto	l10858
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;tff.c: 312: if (cstat == 1) return 1;
 16995  002E7C  0580               	decf	create_chain@cstat& (0+255),w,b
 16996  002E7E  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16997  002E80  B4D8               	btfsc	status,2,c
 16998  002E82  D7BD               	goto	u12080
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;tff.c: 313: if (ncl == scl) return 0;
 17002  002E84  5182               	movf	create_chain@scl& (0+255),w,b
 17003  002E86  1984               	xorwf	create_chain@ncl& (0+255),w,b
 17004  002E88  E1D3               	bnz	l10828
 17005  002E8A  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 17006  002E8C  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 17007  002E8E  B4D8               	btfsc	status,2,c
 17008  002E90  D7E1               	goto	u12110
 17009  002E92  D7CE               	goto	l10828
 17010  002E94                     l10858:
 17011                           
 17012                           ; BSR set to: 0
 17013                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 17014  002E94  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 17015  002E98  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 17016  002E9C  0EFF               	movlw	255
 17017  002E9E  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 17018  002EA0  6962               	setf	put_cluster@val& (0+255),b
 17019  002EA2  ECBE  F011         	call	_put_cluster	;wreg free
 17020  002EA6  0900               	iorlw	0
 17021  002EA8  B4D8               	btfsc	status,2,c
 17022  002EAA  D7A9               	goto	u12080
 17023                           
 17024                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 17025  002EAC  0100               	movlb	0	; () banked
 17026  002EAE  5178               	movf	create_chain@clust& (0+255),w,b
 17027  002EB0  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 17028  002EB2  B4D8               	btfsc	status,2,c
 17029  002EB4  D00D               	goto	l10872
 17030                           
 17031                           ; BSR set to: 0
 17032  002EB6  C078  F060         	movff	create_chain@clust,put_cluster@clust
 17033  002EBA  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 17034  002EBE  C084  F062         	movff	create_chain@ncl,put_cluster@val
 17035  002EC2  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 17036  002EC6  ECBE  F011         	call	_put_cluster	;wreg free
 17037  002ECA  0900               	iorlw	0
 17038  002ECC  B4D8               	btfsc	status,2,c
 17039  002ECE  D797               	goto	u12080
 17040  002ED0                     l10872:
 17041                           
 17042                           ;tff.c: 319: fs->last_clust = ncl;
 17043  002ED0  0100               	movlb	0	; () banked
 17044  002ED2  EE20 F018          	lfsr	2,24
 17045  002ED6  517E               	movf	create_chain@fs& (0+255),w,b
 17046  002ED8  26D9               	addwf	fsr2l,f,c
 17047  002EDA  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17048  002EDC  22DA               	addwfc	fsr2h,f,c
 17049  002EDE  C084  FFDE         	movff	create_chain@ncl,postinc2
 17050  002EE2  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 17051                           
 17052                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 17053  002EE6  EE20 F01A          	lfsr	2,26
 17054  002EEA  517E               	movf	create_chain@fs& (0+255),w,b
 17055  002EEC  26D9               	addwf	fsr2l,f,c
 17056  002EEE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17057  002EF0  22DA               	addwfc	fsr2h,f,c
 17058  002EF2  28DE               	incf	postinc2,w,c
 17059  002EF4  E103               	bnz	u12180
 17060  002EF6  28DE               	incf	postinc2,w,c
 17061  002EF8  B4D8               	btfsc	status,2,c
 17062  002EFA  D009               	goto	l10876
 17063  002EFC                     u12180:
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;tff.c: 321: fs->free_clust--;
 17067  002EFC  EE20 F01A          	lfsr	2,26
 17068  002F00  517E               	movf	create_chain@fs& (0+255),w,b
 17069  002F02  26D9               	addwf	fsr2l,f,c
 17070  002F04  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17071  002F06  22DA               	addwfc	fsr2h,f,c
 17072  002F08  06DE               	decf	postinc2,f,c
 17073  002F0A  0E00               	movlw	0
 17074  002F0C  5ADD               	subwfb	postdec2,f,c
 17075  002F0E                     l10876:
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;tff.c: 325: };tff.c: 327: return ncl;
 17079  002F0E  C084  F078         	movff	create_chain@ncl,?_create_chain
 17080  002F12  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 17081                           
 17082                           ; BSR set to: 0
 17083  002F16  0012               	return		;funcret
 17084  002F18                     __end_of_create_chain:
 17085                           	callstack 0
 17086                           
 17087 ;; *************** function _put_cluster *****************
 17088 ;; Defined at:
 17089 ;;		line 198 in file "bibliotecas/tff.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;  clust           2    0[BANK0 ] unsigned short 
 17092 ;;  val             2    2[BANK0 ] unsigned short 
 17093 ;; Auto vars:     Size  Location     Type
 17094 ;;  fatsect         4   14[BANK0 ] unsigned long 
 17095 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 17096 ;;		 -> NULL(0), fs(544), 
 17097 ;;  p               2   20[BANK0 ] PTR unsigned char 
 17098 ;;		 -> fs.win(512), NULL(0), fs(544), 
 17099 ;;  bc              2   18[BANK0 ] unsigned short 
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      enum E105
 17102 ;; Registers used:
 17103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17104 ;; Tracked objects:
 17105 ;;		On entry : 3F/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17109 ;;      Params:         0       4       0       0       0       0       0       0       0
 17110 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17111 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17112 ;;      Totals:         0      24       0       0       0       0       0       0       0
 17113 ;;Total ram usage:       24 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:    8
 17116 ;; This function calls:
 17117 ;;		___wmul
 17118 ;;		_move_window
 17119 ;; This function is called by:
 17120 ;;		_remove_chain
 17121 ;;		_create_chain
 17122 ;; This function uses a non-reentrant model
 17123 ;;
 17124                           
 17125                           	psect	text94
 17126  00237C                     __ptext94:
 17127                           	callstack 0
 17128  00237C                     _put_cluster:
 17129                           	callstack 13
 17130                           
 17131                           ; BSR set to: 0
 17132                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 17133                           
 17134                           ; BSR set to: 0
 17135                           ;incstack = 0
 17136  00237C  C04D  F076         	movff	_FatFs,put_cluster@fs
 17137  002380  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;tff.c: 209: fatsect = fs->fatbase;
 17141  002384  EE20 F008          	lfsr	2,8
 17142  002388  5176               	movf	put_cluster@fs& (0+255),w,b
 17143  00238A  26D9               	addwf	fsr2l,f,c
 17144  00238C  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17145  00238E  22DA               	addwfc	fsr2h,f,c
 17146  002390  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 17147  002394  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 17148  002398  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 17149  00239C  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 17150                           
 17151                           ;tff.c: 210: switch (fs->fs_type) {
 17152  0023A0  D10B               	goto	l10758
 17153  0023A2                     l10706:
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 17157  0023A2  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 17158  0023A6  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 17159  0023AA  0E00               	movlw	0
 17160  0023AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17161  0023AE  0E03               	movlw	3
 17162  0023B0  6E0C               	movwf	___wmul@multiplicand^0,c
 17163  0023B2  EC9B  F02C         	call	___wmul	;wreg free
 17164  0023B6  90D8               	bcf	status,0,c
 17165  0023B8  300B               	rrcf	(?___wmul+1)^0,w,c
 17166  0023BA  0100               	movlb	0	; () banked
 17167  0023BC  6F64               	movwf	??_put_cluster& (0+255),b
 17168  0023BE  300A               	rrcf	?___wmul^0,w,c
 17169  0023C0  6F72               	movwf	put_cluster@bc& (0+255),b
 17170  0023C2  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 17171                           
 17172                           ; BSR set to: 0
 17173                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17174  0023C6  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17175  0023CA  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17176  0023CE  0E09               	movlw	9
 17177  0023D0  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17178  0023D2                     u11915:
 17179  0023D2  90D8               	bcf	status,0,c
 17180  0023D4  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17181  0023D6  3364               	rrcf	??_put_cluster& (0+255),f,b
 17182  0023D8  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17183  0023DA  D7FB               	goto	u11915
 17184  0023DC  5164               	movf	??_put_cluster& (0+255),w,b
 17185  0023DE  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17186  0023E0  6E35               	movwf	move_window@sector^0,c
 17187  0023E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17188  0023E4  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17189  0023E6  6E36               	movwf	(move_window@sector+1)^0,c
 17190  0023E8  0E00               	movlw	0
 17191  0023EA  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17192  0023EC  6E37               	movwf	(move_window@sector+2)^0,c
 17193  0023EE  0E00               	movlw	0
 17194  0023F0  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17195  0023F2  6E38               	movwf	(move_window@sector+3)^0,c
 17196  0023F4  EC1B  F015         	call	_move_window	;wreg free
 17197  0023F8  0900               	iorlw	0
 17198  0023FA  A4D8               	btfss	status,2,c
 17199  0023FC  D002               	goto	l10714
 17200  0023FE                     u11920:
 17201  0023FE  0E00               	movlw	0
 17202  002400  0012               	return	
 17203  002402                     l10714:
 17204                           
 17205                           ;tff.c: 214: p = &fs->win[bc % 512U];
 17206  002402  0EFF               	movlw	255
 17207  002404  0100               	movlb	0	; () banked
 17208  002406  6F64               	movwf	??_put_cluster& (0+255),b
 17209  002408  0E01               	movlw	1
 17210  00240A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17211  00240C  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17212  002410  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17213  002414  5164               	movf	??_put_cluster& (0+255),w,b
 17214  002416  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17215  002418  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17216  00241A  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17217  00241C  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17218  002420  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17219  002424  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17220  002426  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17221  002428  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17222  00242A  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17223  00242C  0E20               	movlw	32
 17224  00242E  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17225  002430  6F74               	movwf	put_cluster@p& (0+255),b
 17226  002432  0E00               	movlw	0
 17227  002434  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17228  002436  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 17232  002438  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17233  00243A  D004               	goto	l10720
 17234                           
 17235                           ; BSR set to: 0
 17236  00243C  C062  F06A         	movff	put_cluster@val,_put_cluster$1623
 17237  002440  6B6B               	clrf	(_put_cluster$1623+1)& (0+255),b
 17238  002442  D01A               	goto	l10722
 17239  002444                     l10720:
 17240                           
 17241                           ; BSR set to: 0
 17242  002444  5162               	movf	put_cluster@val& (0+255),w,b
 17243  002446  6F64               	movwf	??_put_cluster& (0+255),b
 17244  002448  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 17245  00244A  3B64               	swapf	??_put_cluster& (0+255),f,b
 17246  00244C  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 17247  00244E  0EF0               	movlw	240
 17248  002450  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 17249  002452  5164               	movf	??_put_cluster& (0+255),w,b
 17250  002454  0B0F               	andlw	15
 17251  002456  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 17252  002458  0EF0               	movlw	240
 17253  00245A  1764               	andwf	??_put_cluster& (0+255),f,b
 17254  00245C  C074  FFD9         	movff	put_cluster@p,fsr2l
 17255  002460  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17256  002464  50DF               	movf	indf2,w,c
 17257  002466  0B0F               	andlw	15
 17258  002468  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17259  00246A  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 17260  00246C  5164               	movf	??_put_cluster& (0+255),w,b
 17261  00246E  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 17262  002470  6F6A               	movwf	_put_cluster$1623& (0+255),b
 17263  002472  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17264  002474  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 17265  002476  6F6B               	movwf	(_put_cluster$1623+1)& (0+255),b
 17266  002478                     l10722:
 17267                           
 17268                           ; BSR set to: 0
 17269  002478  C074  FFD9         	movff	put_cluster@p,fsr2l
 17270  00247C  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17271  002480  C06A  FFDF         	movff	_put_cluster$1623,indf2
 17272                           
 17273                           ; BSR set to: 0
 17274                           ;tff.c: 216: bc++;
 17275  002484  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 17276  002486  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 17277                           
 17278                           ; BSR set to: 0
 17279                           ;tff.c: 217: fs->winflag = 1;
 17280  002488  EE20 F01F          	lfsr	2,31
 17281  00248C  5176               	movf	put_cluster@fs& (0+255),w,b
 17282  00248E  26D9               	addwf	fsr2l,f,c
 17283  002490  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17284  002492  22DA               	addwfc	fsr2h,f,c
 17285  002494  0E01               	movlw	1
 17286  002496  6EDF               	movwf	indf2,c
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17290  002498  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17291  00249C  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17292  0024A0  0E09               	movlw	9
 17293  0024A2  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17294  0024A4                     u11945:
 17295  0024A4  90D8               	bcf	status,0,c
 17296  0024A6  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17297  0024A8  3364               	rrcf	??_put_cluster& (0+255),f,b
 17298  0024AA  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17299  0024AC  D7FB               	goto	u11945
 17300  0024AE  5164               	movf	??_put_cluster& (0+255),w,b
 17301  0024B0  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17302  0024B2  6E35               	movwf	move_window@sector^0,c
 17303  0024B4  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17304  0024B6  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17305  0024B8  6E36               	movwf	(move_window@sector+1)^0,c
 17306  0024BA  0E00               	movlw	0
 17307  0024BC  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17308  0024BE  6E37               	movwf	(move_window@sector+2)^0,c
 17309  0024C0  0E00               	movlw	0
 17310  0024C2  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17311  0024C4  6E38               	movwf	(move_window@sector+3)^0,c
 17312  0024C6  EC1B  F015         	call	_move_window	;wreg free
 17313  0024CA  0900               	iorlw	0
 17314  0024CC  B4D8               	btfsc	status,2,c
 17315  0024CE  D797               	goto	u11920
 17316                           
 17317                           ;tff.c: 219: p = &fs->win[bc % 512U];
 17318  0024D0  0EFF               	movlw	255
 17319  0024D2  0100               	movlb	0	; () banked
 17320  0024D4  6F64               	movwf	??_put_cluster& (0+255),b
 17321  0024D6  0E01               	movlw	1
 17322  0024D8  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17323  0024DA  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17324  0024DE  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17325  0024E2  5164               	movf	??_put_cluster& (0+255),w,b
 17326  0024E4  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17327  0024E6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17328  0024E8  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17329  0024EA  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17330  0024EE  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17331  0024F2  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17332  0024F4  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17333  0024F6  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17334  0024F8  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17335  0024FA  0E20               	movlw	32
 17336  0024FC  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17337  0024FE  6F74               	movwf	put_cluster@p& (0+255),b
 17338  002500  0E00               	movlw	0
 17339  002502  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17340  002504  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 17344  002506  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17345  002508  D00E               	goto	l10740
 17346                           
 17347                           ; BSR set to: 0
 17348  00250A  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 17349  00250E  0E0F               	movlw	15
 17350  002510  1764               	andwf	??_put_cluster& (0+255),f,b
 17351  002512  C074  FFD9         	movff	put_cluster@p,fsr2l
 17352  002516  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17353  00251A  50DF               	movf	indf2,w,c
 17354  00251C  0BF0               	andlw	240
 17355  00251E  1164               	iorwf	??_put_cluster& (0+255),w,b
 17356  002520  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17357  002522  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17358  002524  D00C               	goto	L6
 17359  002526                     l10740:
 17360                           
 17361                           ; BSR set to: 0
 17362  002526  C062  F064         	movff	put_cluster@val,??_put_cluster
 17363  00252A  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 17364  00252E  0E04               	movlw	4
 17365  002530  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17366  002532                     u11975:
 17367  002532  90D8               	bcf	status,0,c
 17368  002534  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17369  002536  3364               	rrcf	??_put_cluster& (0+255),f,b
 17370  002538  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17371  00253A  D7FB               	goto	u11975
 17372  00253C  5164               	movf	??_put_cluster& (0+255),w,b
 17373  00253E                     L6:
 17374  00253E  6F6C               	movwf	_put_cluster$1624& (0+255),b
 17375  002540  6B6D               	clrf	(_put_cluster$1624+1)& (0+255),b
 17376                           
 17377                           ; BSR set to: 0
 17378  002542  C074  FFD9         	movff	put_cluster@p,fsr2l
 17379  002546  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17380  00254A  C06C  FFDF         	movff	_put_cluster$1624,indf2
 17381                           
 17382                           ;tff.c: 221: break;
 17383  00254E  D042               	goto	l10760
 17384  002550                     l10744:
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 17388  002550  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 17389  002552  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17390  002554  6E35               	movwf	move_window@sector^0,c
 17391  002556  0E00               	movlw	0
 17392  002558  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17393  00255A  6E36               	movwf	(move_window@sector+1)^0,c
 17394  00255C  0E00               	movlw	0
 17395  00255E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17396  002560  6E37               	movwf	(move_window@sector+2)^0,c
 17397  002562  0E00               	movlw	0
 17398  002564  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17399  002566  6E38               	movwf	(move_window@sector+3)^0,c
 17400  002568  EC1B  F015         	call	_move_window	;wreg free
 17401  00256C  0900               	iorlw	0
 17402  00256E  B4D8               	btfsc	status,2,c
 17403  002570  D746               	goto	u11920
 17404                           
 17405                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 17406  002572  0EFF               	movlw	255
 17407  002574  0100               	movlb	0	; () banked
 17408  002576  6F64               	movwf	??_put_cluster& (0+255),b
 17409  002578  0E01               	movlw	1
 17410  00257A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17411  00257C  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 17412  002580  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 17413  002584  90D8               	bcf	status,0,c
 17414  002586  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 17415  002588  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 17416  00258A  5164               	movf	??_put_cluster& (0+255),w,b
 17417  00258C  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17418  00258E  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17419  002590  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17420  002592  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17421  002596  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17422  00259A  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17423  00259C  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17424  00259E  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17425  0025A0  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17426  0025A2  0E20               	movlw	32
 17427  0025A4  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17428  0025A6  6ED9               	movwf	fsr2l,c
 17429  0025A8  0E00               	movlw	0
 17430  0025AA  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17431  0025AC  6EDA               	movwf	fsr2h,c
 17432  0025AE  C062  FFDE         	movff	put_cluster@val,postinc2
 17433  0025B2  C063  FFDD         	movff	put_cluster@val+1,postdec2
 17434                           
 17435                           ;tff.c: 226: break;
 17436  0025B6  D00E               	goto	l10760
 17437  0025B8                     l10758:
 17438                           
 17439                           ; BSR set to: 0
 17440  0025B8  EE20 F01C          	lfsr	2,28
 17441  0025BC  5176               	movf	put_cluster@fs& (0+255),w,b
 17442  0025BE  26D9               	addwf	fsr2l,f,c
 17443  0025C0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17444  0025C2  22DA               	addwfc	fsr2h,f,c
 17445  0025C4  50DF               	movf	indf2,w,c
 17446                           
 17447                           ; Switch size 1, requested type "simple"
 17448                           ; Number of cases is 2, Range of values is 1 to 2
 17449                           ; switch strategies available:
 17450                           ; Name         Instructions Cycles
 17451                           ; simple_byte            7     4 (average)
 17452                           ;	Chosen strategy is simple_byte
 17453  0025C6  0A01               	xorlw	1	; case 1
 17454  0025C8  B4D8               	btfsc	status,2,c
 17455  0025CA  D6EB               	goto	l10706
 17456  0025CC  0A03               	xorlw	3	; case 2
 17457  0025CE  B4D8               	btfsc	status,2,c
 17458  0025D0  D7BF               	goto	l10744
 17459  0025D2  D715               	goto	u11920
 17460  0025D4                     l10760:
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;tff.c: 236: fs->winflag = 1;
 17464  0025D4  EE20 F01F          	lfsr	2,31
 17465  0025D8  5176               	movf	put_cluster@fs& (0+255),w,b
 17466  0025DA  26D9               	addwf	fsr2l,f,c
 17467  0025DC  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17468  0025DE  22DA               	addwfc	fsr2h,f,c
 17469  0025E0  0E01               	movlw	1
 17470  0025E2  6EDF               	movwf	indf2,c
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;tff.c: 237: return TRUE;
 17474  0025E4  0E01               	movlw	1
 17475  0025E6  0012               	return		;funcret
 17476  0025E8                     __end_of_put_cluster:
 17477                           	callstack 0
 17478                           
 17479 ;; *************** function _get_cluster *****************
 17480 ;; Defined at:
 17481 ;;		line 155 in file "bibliotecas/tff.c"
 17482 ;; Parameters:    Size  Location     Type
 17483 ;;  clust           2   73[COMRAM] unsigned short 
 17484 ;; Auto vars:     Size  Location     Type
 17485 ;;  fatsect         4   11[BANK0 ] unsigned long 
 17486 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 17487 ;;		 -> NULL(0), fs(544), 
 17488 ;;  bc              2   15[BANK0 ] unsigned short 
 17489 ;;  wc              2    9[BANK0 ] unsigned short 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  2   73[COMRAM] unsigned short 
 17492 ;; Registers used:
 17493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17494 ;; Tracked objects:
 17495 ;;		On entry : 3F/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17499 ;;      Params:         2       0       0       0       0       0       0       0       0
 17500 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17501 ;;      Temps:          0       9       0       0       0       0       0       0       0
 17502 ;;      Totals:         2      19       0       0       0       0       0       0       0
 17503 ;;Total ram usage:       21 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; Hardware stack levels required when called:    8
 17506 ;; This function calls:
 17507 ;;		___wmul
 17508 ;;		_move_window
 17509 ;; This function is called by:
 17510 ;;		_remove_chain
 17511 ;;		_create_chain
 17512 ;;		_next_dir_entry
 17513 ;;		_f_lseek
 17514 ;;		_f_read
 17515 ;; This function uses a non-reentrant model
 17516 ;;
 17517                           
 17518                           	psect	text95
 17519  0025E8                     __ptext95:
 17520                           	callstack 0
 17521  0025E8                     _get_cluster:
 17522                           	callstack 13
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 17526                           
 17527                           ;incstack = 0
 17528  0025E8  C04D  F071         	movff	_FatFs,get_cluster@fs
 17529  0025EC  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 17530                           
 17531                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 17532  0025F0  504B               	movf	(get_cluster@clust+1)^0,w,c
 17533  0025F2  E104               	bnz	u11820
 17534  0025F4  0E02               	movlw	2
 17535  0025F6  5C4A               	subwf	get_cluster@clust^0,w,c
 17536  0025F8  A0D8               	btfss	status,0,c
 17537  0025FA  D105               	goto	l10698
 17538  0025FC                     u11820:
 17539                           
 17540                           ; BSR set to: 0
 17541  0025FC  EE20 F016          	lfsr	2,22
 17542  002600  5171               	movf	get_cluster@fs& (0+255),w,b
 17543  002602  26D9               	addwf	fsr2l,f,c
 17544  002604  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17545  002606  22DA               	addwfc	fsr2h,f,c
 17546  002608  50DE               	movf	postinc2,w,c
 17547  00260A  5C4A               	subwf	get_cluster@clust^0,w,c
 17548  00260C  50DE               	movf	postinc2,w,c
 17549  00260E  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 17550  002610  B0D8               	btfsc	status,0,c
 17551  002612  D0F9               	goto	l10698
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;tff.c: 165: fatsect = fs->fatbase;
 17555  002614  EE20 F008          	lfsr	2,8
 17556  002618  5171               	movf	get_cluster@fs& (0+255),w,b
 17557  00261A  26D9               	addwf	fsr2l,f,c
 17558  00261C  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17559  00261E  22DA               	addwfc	fsr2h,f,c
 17560  002620  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 17561  002624  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 17562  002628  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 17563  00262C  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 17564                           
 17565                           ;tff.c: 166: switch (fs->fs_type) {
 17566  002630  D0DD               	goto	l10696
 17567  002632                     l10662:
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 17571  002632  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 17572  002636  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 17573  00263A  0E00               	movlw	0
 17574  00263C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17575  00263E  0E03               	movlw	3
 17576  002640  6E0C               	movwf	___wmul@multiplicand^0,c
 17577  002642  EC9B  F02C         	call	___wmul	;wreg free
 17578  002646  90D8               	bcf	status,0,c
 17579  002648  300B               	rrcf	(?___wmul+1)^0,w,c
 17580  00264A  0100               	movlb	0	; () banked
 17581  00264C  6F60               	movwf	??_get_cluster& (0+255),b
 17582  00264E  300A               	rrcf	?___wmul^0,w,c
 17583  002650  6F6F               	movwf	get_cluster@bc& (0+255),b
 17584  002652  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 17588  002656  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17589  00265A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17590  00265E  0E09               	movlw	9
 17591  002660  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17592  002662                     u11845:
 17593  002662  90D8               	bcf	status,0,c
 17594  002664  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17595  002666  3360               	rrcf	??_get_cluster& (0+255),f,b
 17596  002668  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17597  00266A  D7FB               	goto	u11845
 17598  00266C  5160               	movf	??_get_cluster& (0+255),w,b
 17599  00266E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17600  002670  6E35               	movwf	move_window@sector^0,c
 17601  002672  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17602  002674  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17603  002676  6E36               	movwf	(move_window@sector+1)^0,c
 17604  002678  0E00               	movlw	0
 17605  00267A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17606  00267C  6E37               	movwf	(move_window@sector+2)^0,c
 17607  00267E  0E00               	movlw	0
 17608  002680  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17609  002682  6E38               	movwf	(move_window@sector+3)^0,c
 17610  002684  EC1B  F015         	call	_move_window	;wreg free
 17611  002688  0900               	iorlw	0
 17612  00268A  B4D8               	btfsc	status,2,c
 17613  00268C  D0BC               	goto	l10698
 17614                           
 17615                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 17616  00268E  0EFF               	movlw	255
 17617  002690  0100               	movlb	0	; () banked
 17618  002692  6F60               	movwf	??_get_cluster& (0+255),b
 17619  002694  0E01               	movlw	1
 17620  002696  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17621  002698  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17622  00269C  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17623  0026A0  5160               	movf	??_get_cluster& (0+255),w,b
 17624  0026A2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17625  0026A4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17626  0026A6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17627  0026A8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17628  0026AC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17629  0026B0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17630  0026B2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17631  0026B4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17632  0026B6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17633  0026B8  0E20               	movlw	32
 17634  0026BA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17635  0026BC  6ED9               	movwf	fsr2l,c
 17636  0026BE  0E00               	movlw	0
 17637  0026C0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17638  0026C2  6EDA               	movwf	fsr2h,c
 17639  0026C4  50DF               	movf	indf2,w,c
 17640  0026C6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17641  0026C8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17642  0026CA  6F69               	movwf	get_cluster@wc& (0+255),b
 17643  0026CC  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 17644                           
 17645                           ; BSR set to: 0
 17646  0026CE  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 17647  0026D0  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 17648                           
 17649                           ; BSR set to: 0
 17650                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 17651  0026D2  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17652  0026D6  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17653  0026DA  0E09               	movlw	9
 17654  0026DC  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17655  0026DE                     u11865:
 17656  0026DE  90D8               	bcf	status,0,c
 17657  0026E0  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17658  0026E2  3360               	rrcf	??_get_cluster& (0+255),f,b
 17659  0026E4  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17660  0026E6  D7FB               	goto	u11865
 17661  0026E8  5160               	movf	??_get_cluster& (0+255),w,b
 17662  0026EA  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17663  0026EC  6E35               	movwf	move_window@sector^0,c
 17664  0026EE  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17665  0026F0  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17666  0026F2  6E36               	movwf	(move_window@sector+1)^0,c
 17667  0026F4  0E00               	movlw	0
 17668  0026F6  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17669  0026F8  6E37               	movwf	(move_window@sector+2)^0,c
 17670  0026FA  0E00               	movlw	0
 17671  0026FC  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17672  0026FE  6E38               	movwf	(move_window@sector+3)^0,c
 17673  002700  EC1B  F015         	call	_move_window	;wreg free
 17674  002704  0900               	iorlw	0
 17675  002706  B4D8               	btfsc	status,2,c
 17676  002708  D07E               	goto	l10698
 17677                           
 17678                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17679  00270A  0EFF               	movlw	255
 17680  00270C  0100               	movlb	0	; () banked
 17681  00270E  6F60               	movwf	??_get_cluster& (0+255),b
 17682  002710  0E01               	movlw	1
 17683  002712  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17684  002714  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17685  002718  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17686  00271C  5160               	movf	??_get_cluster& (0+255),w,b
 17687  00271E  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17688  002720  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17689  002722  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17690  002724  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17691  002728  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17692  00272C  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17693  00272E  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17694  002730  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17695  002732  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17696  002734  0E20               	movlw	32
 17697  002736  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17698  002738  6ED9               	movwf	fsr2l,c
 17699  00273A  0E00               	movlw	0
 17700  00273C  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17701  00273E  6EDA               	movwf	fsr2h,c
 17702  002740  50DF               	movf	indf2,w,c
 17703  002742  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17704  002744  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17705  002746  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17706  002748  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17707  00274A  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17708  00274C  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17709  00274E  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17710  002750  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17714  002752  B04A               	btfsc	get_cluster@clust^0,0,c
 17715  002754  D007               	goto	l10682
 17716                           
 17717                           ; BSR set to: 0
 17718  002756  0EFF               	movlw	255
 17719  002758  1569               	andwf	get_cluster@wc& (0+255),w,b
 17720  00275A  6E4A               	movwf	?_get_cluster^0,c
 17721  00275C  0E0F               	movlw	15
 17722  00275E  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17723  002760  6E4B               	movwf	(?_get_cluster+1)^0,c
 17724  002762  0012               	return	
 17725  002764                     l10682:
 17726                           
 17727                           ; BSR set to: 0
 17728  002764  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17729  002768  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17730  00276C  0E04               	movlw	4
 17731  00276E  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17732  002770                     u11895:
 17733  002770  90D8               	bcf	status,0,c
 17734  002772  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17735  002774  3360               	rrcf	??_get_cluster& (0+255),f,b
 17736  002776  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17737  002778  D7FB               	goto	u11895
 17738  00277A  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17739  00277E  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17740  002782  0012               	return	
 17741  002784                     l10686:
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17745  002784  504B               	movf	(get_cluster@clust+1)^0,w,c
 17746  002786  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17747  002788  6E35               	movwf	move_window@sector^0,c
 17748  00278A  0E00               	movlw	0
 17749  00278C  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17750  00278E  6E36               	movwf	(move_window@sector+1)^0,c
 17751  002790  0E00               	movlw	0
 17752  002792  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17753  002794  6E37               	movwf	(move_window@sector+2)^0,c
 17754  002796  0E00               	movlw	0
 17755  002798  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17756  00279A  6E38               	movwf	(move_window@sector+3)^0,c
 17757  00279C  EC1B  F015         	call	_move_window	;wreg free
 17758  0027A0  0900               	iorlw	0
 17759  0027A2  B4D8               	btfsc	status,2,c
 17760  0027A4  D030               	goto	l10698
 17761                           
 17762                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17763  0027A6  0EFF               	movlw	255
 17764  0027A8  0100               	movlb	0	; () banked
 17765  0027AA  6F60               	movwf	??_get_cluster& (0+255),b
 17766  0027AC  0E01               	movlw	1
 17767  0027AE  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17768  0027B0  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17769  0027B4  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17770  0027B8  90D8               	bcf	status,0,c
 17771  0027BA  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17772  0027BC  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17773  0027BE  5160               	movf	??_get_cluster& (0+255),w,b
 17774  0027C0  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17775  0027C2  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17776  0027C4  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17777  0027C6  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17778  0027CA  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17779  0027CE  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17780  0027D0  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17781  0027D2  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17782  0027D4  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17783  0027D6  0E20               	movlw	32
 17784  0027D8  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17785  0027DA  6ED9               	movwf	fsr2l,c
 17786  0027DC  0E00               	movlw	0
 17787  0027DE  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17788  0027E0  6EDA               	movwf	fsr2h,c
 17789  0027E2  CFDE F04A          	movff	postinc2,?_get_cluster
 17790  0027E6  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17791  0027EA  0012               	return	
 17792  0027EC                     l10696:
 17793                           
 17794                           ; BSR set to: 0
 17795  0027EC  EE20 F01C          	lfsr	2,28
 17796  0027F0  5171               	movf	get_cluster@fs& (0+255),w,b
 17797  0027F2  26D9               	addwf	fsr2l,f,c
 17798  0027F4  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17799  0027F6  22DA               	addwfc	fsr2h,f,c
 17800  0027F8  50DF               	movf	indf2,w,c
 17801                           
 17802                           ; Switch size 1, requested type "simple"
 17803                           ; Number of cases is 2, Range of values is 1 to 2
 17804                           ; switch strategies available:
 17805                           ; Name         Instructions Cycles
 17806                           ; simple_byte            7     4 (average)
 17807                           ;	Chosen strategy is simple_byte
 17808  0027FA  0A01               	xorlw	1	; case 1
 17809  0027FC  B4D8               	btfsc	status,2,c
 17810  0027FE  D719               	goto	l10662
 17811  002800  0A03               	xorlw	3	; case 2
 17812  002802  B4D8               	btfsc	status,2,c
 17813  002804  D7BF               	goto	l10686
 17814  002806                     l10698:
 17815                           
 17816                           ;tff.c: 184: };tff.c: 186: return 1;
 17817  002806  0E00               	movlw	0
 17818  002808  6E4B               	movwf	(?_get_cluster+1)^0,c
 17819  00280A  0E01               	movlw	1
 17820  00280C  6E4A               	movwf	?_get_cluster^0,c
 17821  00280E  0012               	return		;funcret
 17822  002810                     __end_of_get_cluster:
 17823                           	callstack 0
 17824                           
 17825 ;; *************** function ___lldiv *****************
 17826 ;; Defined at:
 17827 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 17828 ;; Parameters:    Size  Location     Type
 17829 ;;  dividend        4    9[COMRAM] unsigned long 
 17830 ;;  divisor         4   13[COMRAM] unsigned long 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;  quotient        4   17[COMRAM] unsigned long 
 17833 ;;  counter         1   21[COMRAM] unsigned char 
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  4    9[COMRAM] unsigned long 
 17836 ;; Registers used:
 17837 ;;		wreg, status,2, status,0
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/0
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17843 ;;      Params:         8       0       0       0       0       0       0       0       0
 17844 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17846 ;;      Totals:        13       0       0       0       0       0       0       0       0
 17847 ;;Total ram usage:       13 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:    2
 17850 ;; This function calls:
 17851 ;;		Nothing
 17852 ;; This function is called by:
 17853 ;;		_auto_mount
 17854 ;;		_f_lseek
 17855 ;;		_fprintf
 17856 ;;		_ultoa
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text96
 17861  0049F4                     __ptext96:
 17862                           	callstack 0
 17863  0049F4                     ___lldiv:
 17864                           	callstack 23
 17865                           
 17866                           ;incstack = 0
 17867  0049F4  0E00               	movlw	0
 17868  0049F6  6E12               	movwf	___lldiv@quotient^0,c
 17869  0049F8  0E00               	movlw	0
 17870  0049FA  6E13               	movwf	(___lldiv@quotient+1)^0,c
 17871  0049FC  0E00               	movlw	0
 17872  0049FE  6E14               	movwf	(___lldiv@quotient+2)^0,c
 17873  004A00  0E00               	movlw	0
 17874  004A02  6E15               	movwf	(___lldiv@quotient+3)^0,c
 17875  004A04  500E               	movf	___lldiv@divisor^0,w,c
 17876  004A06  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 17877  004A08  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 17878  004A0A  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 17879  004A0C  B4D8               	btfsc	status,2,c
 17880  004A0E  D02A               	goto	l1772
 17881  004A10  0E01               	movlw	1
 17882  004A12  6E16               	movwf	___lldiv@counter^0,c
 17883  004A14  D006               	goto	l11606
 17884  004A16                     l11604:
 17885  004A16  90D8               	bcf	status,0,c
 17886  004A18  360E               	rlcf	___lldiv@divisor^0,f,c
 17887  004A1A  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 17888  004A1C  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 17889  004A1E  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 17890  004A20  2A16               	incf	___lldiv@counter^0,f,c
 17891  004A22                     l11606:
 17892  004A22  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 17893  004A24  D7F8               	goto	l11604
 17894  004A26                     u13340:
 17895  004A26  90D8               	bcf	status,0,c
 17896  004A28  3612               	rlcf	___lldiv@quotient^0,f,c
 17897  004A2A  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 17898  004A2C  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 17899  004A2E  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 17900  004A30  500E               	movf	___lldiv@divisor^0,w,c
 17901  004A32  5C0A               	subwf	___lldiv@dividend^0,w,c
 17902  004A34  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17903  004A36  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 17904  004A38  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17905  004A3A  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 17906  004A3C  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17907  004A3E  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 17908  004A40  A0D8               	btfss	status,0,c
 17909  004A42  D009               	goto	l11616
 17910  004A44  500E               	movf	___lldiv@divisor^0,w,c
 17911  004A46  5E0A               	subwf	___lldiv@dividend^0,f,c
 17912  004A48  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17913  004A4A  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 17914  004A4C  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17915  004A4E  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 17916  004A50  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17917  004A52  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 17918  004A54  8012               	bsf	___lldiv@quotient^0,0,c
 17919  004A56                     l11616:
 17920  004A56  90D8               	bcf	status,0,c
 17921  004A58  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 17922  004A5A  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 17923  004A5C  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 17924  004A5E  320E               	rrcf	___lldiv@divisor^0,f,c
 17925  004A60  2E16               	decfsz	___lldiv@counter^0,f,c
 17926  004A62  D7E1               	goto	u13340
 17927  004A64                     l1772:
 17928  004A64  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 17929  004A68  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 17930  004A6C  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 17931  004A70  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 17932  004A74  0012               	return		;funcret
 17933  004A76                     __end_of___lldiv:
 17934                           	callstack 0
 17935                           
 17936 ;; *************** function _f_close *****************
 17937 ;; Defined at:
 17938 ;;		line 1116 in file "bibliotecas/tff.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17941 ;;		 -> fil(28), 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;  res             1   75[COMRAM] enum E155
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      enum E3231
 17946 ;; Registers used:
 17947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17948 ;; Tracked objects:
 17949 ;;		On entry : 3F/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17953 ;;      Params:         0       2       0       0       0       0       0       0       0
 17954 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17956 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17957 ;;Total ram usage:        3 bytes
 17958 ;; Hardware stack levels used:    1
 17959 ;; Hardware stack levels required when called:   10
 17960 ;; This function calls:
 17961 ;;		_f_sync
 17962 ;; This function is called by:
 17963 ;;		_escrita_sdcard
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967                           	psect	text97
 17968  00583E                     __ptext97:
 17969                           	callstack 0
 17970  00583E                     _f_close:
 17971                           	callstack 16
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17975                           
 17976                           ;incstack = 0
 17977  00583E  C069  F060         	movff	f_close@fp,f_sync@fp
 17978  005842  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17979  005846  ECAE  F01B         	call	_f_sync	;wreg free
 17980  00584A  6E4C               	movwf	f_close@res^0,c
 17981                           
 17982                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17983  00584C  504C               	movf	f_close@res^0,w,c
 17984  00584E  A4D8               	btfss	status,2,c
 17985  005850  0012               	return	
 17986  005852  0100               	movlb	0	; () banked
 17987  005854  EE20 F004          	lfsr	2,4
 17988  005858  5169               	movf	f_close@fp& (0+255),w,b
 17989  00585A  26D9               	addwf	fsr2l,f,c
 17990  00585C  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17991  00585E  22DA               	addwfc	fsr2h,f,c
 17992  005860  0E00               	movlw	0
 17993  005862  6EDE               	movwf	postinc2,c
 17994  005864  0E00               	movlw	0
 17995  005866  6EDD               	movwf	postdec2,c
 17996  005868  0012               	return		;funcret
 17997  00586A                     __end_of_f_close:
 17998                           	callstack 0
 17999                           
 18000 ;; *************** function _f_sync *****************
 18001 ;; Defined at:
 18002 ;;		line 1077 in file "bibliotecas/tff.c"
 18003 ;; Parameters:    Size  Location     Type
 18004 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 18005 ;;		 -> fil(28), 
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;  tim             4    2[BANK0 ] unsigned long 
 18008 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 18009 ;;		 -> NULL(0), fs(544), 
 18010 ;;  res             1    6[BANK0 ] enum E155
 18011 ;; Return value:  Size  Location     Type
 18012 ;;                  1    wreg      enum E155
 18013 ;; Registers used:
 18014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18015 ;; Tracked objects:
 18016 ;;		On entry : 3F/0
 18017 ;;		On exit  : 0/0
 18018 ;;		Unchanged: 0/0
 18019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18020 ;;      Params:         0       2       0       0       0       0       0       0       0
 18021 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18023 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18024 ;;Total ram usage:        9 bytes
 18025 ;; Hardware stack levels used:    1
 18026 ;; Hardware stack levels required when called:    9
 18027 ;; This function calls:
 18028 ;;		_get_fattime
 18029 ;;		_move_window
 18030 ;;		_sync
 18031 ;;		_validate
 18032 ;; This function is called by:
 18033 ;;		_f_close
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037                           	psect	text98
 18038  00375C                     __ptext98:
 18039                           	callstack 0
 18040  00375C                     _f_sync:
 18041                           	callstack 16
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 18045                           
 18046                           ;incstack = 0
 18047  00375C  EE20 F004          	lfsr	2,4
 18048  003760  5160               	movf	f_sync@fp& (0+255),w,b
 18049  003762  26D9               	addwf	fsr2l,f,c
 18050  003764  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18051  003766  22DA               	addwfc	fsr2h,f,c
 18052  003768  CFDE F010          	movff	postinc2,validate@fs
 18053  00376C  CFDD F011          	movff	postdec2,validate@fs+1
 18054  003770  C060  FFD9         	movff	f_sync@fp,fsr2l
 18055  003774  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 18056  003778  CFDE F012          	movff	postinc2,validate@id
 18057  00377C  CFDD F013          	movff	postdec2,validate@id+1
 18058  003780  ECCC  F029         	call	_validate	;wreg free
 18059  003784  0100               	movlb	0	; () banked
 18060  003786  6F66               	movwf	f_sync@res& (0+255),b
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;tff.c: 1087: if (res == FR_OK) {
 18064  003788  5166               	movf	f_sync@res& (0+255),w,b
 18065  00378A  A4D8               	btfss	status,2,c
 18066  00378C  D079               	goto	l12048
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;tff.c: 1088: if (fp->flag & 0x20) {
 18070  00378E  EE20 F002          	lfsr	2,2
 18071  003792  5160               	movf	f_sync@fp& (0+255),w,b
 18072  003794  26D9               	addwf	fsr2l,f,c
 18073  003796  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18074  003798  22DA               	addwfc	fsr2h,f,c
 18075  00379A  AADF               	btfss	indf2,5,c
 18076  00379C  D071               	goto	l12048
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 18080  00379E  EE20 F016          	lfsr	2,22
 18081  0037A2  5160               	movf	f_sync@fp& (0+255),w,b
 18082  0037A4  26D9               	addwf	fsr2l,f,c
 18083  0037A6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18084  0037A8  22DA               	addwfc	fsr2h,f,c
 18085  0037AA  CFDE F035          	movff	postinc2,move_window@sector
 18086  0037AE  CFDE F036          	movff	postinc2,move_window@sector+1
 18087  0037B2  CFDE F037          	movff	postinc2,move_window@sector+2
 18088  0037B6  CFDE F038          	movff	postinc2,move_window@sector+3
 18089  0037BA  EC1B  F015         	call	_move_window	;wreg free
 18090  0037BE  0900               	iorlw	0
 18091  0037C0  A4D8               	btfss	status,2,c
 18092  0037C2  D002               	goto	l12034
 18093                           
 18094                           ;tff.c: 1091: return FR_RW_ERROR;
 18095  0037C4  0E08               	movlw	8
 18096  0037C6  0012               	return	
 18097  0037C8                     l12034:
 18098                           
 18099                           ;tff.c: 1092: dir = fp->dir_ptr;
 18100  0037C8  0100               	movlb	0	; () banked
 18101  0037CA  EE20 F01A          	lfsr	2,26
 18102  0037CE  5160               	movf	f_sync@fp& (0+255),w,b
 18103  0037D0  26D9               	addwf	fsr2l,f,c
 18104  0037D2  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18105  0037D4  22DA               	addwfc	fsr2h,f,c
 18106  0037D6  CFDE F067          	movff	postinc2,f_sync@dir
 18107  0037DA  CFDD F068          	movff	postdec2,f_sync@dir+1
 18108                           
 18109                           ;tff.c: 1093: dir[11] |= 0x20;
 18110  0037DE  EE20 F00B          	lfsr	2,11
 18111  0037E2  5167               	movf	f_sync@dir& (0+255),w,b
 18112  0037E4  26D9               	addwf	fsr2l,f,c
 18113  0037E6  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18114  0037E8  22DA               	addwfc	fsr2h,f,c
 18115  0037EA  0E00               	movlw	0
 18116  0037EC  8ADB               	bsf	plusw2,5,c
 18117                           
 18118                           ; BSR set to: 0
 18119                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 18120  0037EE  EE20 F00A          	lfsr	2,10
 18121  0037F2  5160               	movf	f_sync@fp& (0+255),w,b
 18122  0037F4  26D9               	addwf	fsr2l,f,c
 18123  0037F6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18124  0037F8  22DA               	addwfc	fsr2h,f,c
 18125  0037FA  EE10 F01C          	lfsr	1,28
 18126  0037FE  5167               	movf	f_sync@dir& (0+255),w,b
 18127  003800  26E1               	addwf	fsr1l,f,c
 18128  003802  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18129  003804  22E2               	addwfc	fsr1h,f,c
 18130  003806  CFDE FFE6          	movff	postinc2,postinc1
 18131  00380A  CFDE FFE6          	movff	postinc2,postinc1
 18132  00380E  CFDE FFE6          	movff	postinc2,postinc1
 18133  003812  CFDE FFE6          	movff	postinc2,postinc1
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 18137  003816  EE20 F00E          	lfsr	2,14
 18138  00381A  5160               	movf	f_sync@fp& (0+255),w,b
 18139  00381C  26D9               	addwf	fsr2l,f,c
 18140  00381E  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18141  003820  22DA               	addwfc	fsr2h,f,c
 18142  003822  EE10 F01A          	lfsr	1,26
 18143  003826  5167               	movf	f_sync@dir& (0+255),w,b
 18144  003828  26E1               	addwf	fsr1l,f,c
 18145  00382A  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18146  00382C  22E2               	addwfc	fsr1h,f,c
 18147  00382E  CFDE FFE6          	movff	postinc2,postinc1
 18148  003832  CFDD FFE5          	movff	postdec2,postdec1
 18149                           
 18150                           ; BSR set to: 0
 18151                           ;tff.c: 1099: tim = get_fattime();
 18152  003836  EC5E  F01A         	call	_get_fattime	;wreg free
 18153  00383A  C00E  F062         	movff	?_get_fattime,f_sync@tim
 18154  00383E  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 18155  003842  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 18156  003846  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 18160  00384A  0100               	movlb	0	; () banked
 18161  00384C  EE20 F016          	lfsr	2,22
 18162  003850  5167               	movf	f_sync@dir& (0+255),w,b
 18163  003852  26D9               	addwf	fsr2l,f,c
 18164  003854  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18165  003856  22DA               	addwfc	fsr2h,f,c
 18166  003858  C062  FFDE         	movff	f_sync@tim,postinc2
 18167  00385C  C063  FFDE         	movff	f_sync@tim+1,postinc2
 18168  003860  C064  FFDE         	movff	f_sync@tim+2,postinc2
 18169  003864  C065  FFDE         	movff	f_sync@tim+3,postinc2
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 18173  003868  EE20 F002          	lfsr	2,2
 18174  00386C  5160               	movf	f_sync@fp& (0+255),w,b
 18175  00386E  26D9               	addwf	fsr2l,f,c
 18176  003870  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18177  003872  22DA               	addwfc	fsr2h,f,c
 18178  003874  0EDF               	movlw	223
 18179  003876  16DF               	andwf	indf2,f,c
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;tff.c: 1102: res = sync();
 18183  003878  ECE9  F028         	call	_sync	;wreg free
 18184  00387C  0100               	movlb	0	; () banked
 18185  00387E  6F66               	movwf	f_sync@res& (0+255),b
 18186  003880                     l12048:
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 18190  003880  5166               	movf	f_sync@res& (0+255),w,b
 18191  003882  0012               	return		;funcret
 18192  003884                     __end_of_f_sync:
 18193                           	callstack 0
 18194                           
 18195 ;; *************** function _validate *****************
 18196 ;; Defined at:
 18197 ;;		line 767 in file "bibliotecas/tff.c"
 18198 ;; Parameters:    Size  Location     Type
 18199 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 18200 ;;		 -> NULL(0), fs(544), 
 18201 ;;  id              2   17[COMRAM] unsigned short 
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;		None
 18204 ;; Return value:  Size  Location     Type
 18205 ;;                  1    wreg      enum E155
 18206 ;; Registers used:
 18207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18208 ;; Tracked objects:
 18209 ;;		On entry : 3F/0
 18210 ;;		On exit  : 0/0
 18211 ;;		Unchanged: 0/0
 18212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18213 ;;      Params:         4       0       0       0       0       0       0       0       0
 18214 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18215 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18216 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18217 ;;Total ram usage:        6 bytes
 18218 ;; Hardware stack levels used:    1
 18219 ;; Hardware stack levels required when called:    4
 18220 ;; This function calls:
 18221 ;;		_disk_status
 18222 ;; This function is called by:
 18223 ;;		_f_write
 18224 ;;		_f_sync
 18225 ;;		_f_lseek
 18226 ;;		_f_read
 18227 ;; This function uses a non-reentrant model
 18228 ;;
 18229                           
 18230                           	psect	text99
 18231  005398                     __ptext99:
 18232                           	callstack 0
 18233  005398                     _validate:
 18234                           	callstack 18
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 18238                           
 18239                           ;incstack = 0
 18240  005398  5010               	movf	validate@fs^0,w,c
 18241  00539A  1011               	iorwf	(validate@fs+1)^0,w,c
 18242  00539C  B4D8               	btfsc	status,2,c
 18243  00539E  D014               	goto	u12220
 18244                           
 18245                           ; BSR set to: 0
 18246  0053A0  EE20 F01C          	lfsr	2,28
 18247  0053A4  5010               	movf	validate@fs^0,w,c
 18248  0053A6  26D9               	addwf	fsr2l,f,c
 18249  0053A8  5011               	movf	(validate@fs+1)^0,w,c
 18250  0053AA  22DA               	addwfc	fsr2h,f,c
 18251  0053AC  50DF               	movf	indf2,w,c
 18252  0053AE  B4D8               	btfsc	status,2,c
 18253  0053B0  D00B               	goto	u12220
 18254                           
 18255                           ; BSR set to: 0
 18256  0053B2  C010  FFD9         	movff	validate@fs,fsr2l
 18257  0053B6  C011  FFDA         	movff	validate@fs+1,fsr2h
 18258  0053BA  5012               	movf	validate@id^0,w,c
 18259  0053BC  18DE               	xorwf	postinc2,w,c
 18260  0053BE  E104               	bnz	u12220
 18261  0053C0  5013               	movf	(validate@id+1)^0,w,c
 18262  0053C2  18DE               	xorwf	postinc2,w,c
 18263  0053C4  B4D8               	btfsc	status,2,c
 18264  0053C6  D002               	goto	l10902
 18265  0053C8                     u12220:
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;tff.c: 773: return FR_INVALID_OBJECT;
 18269  0053C8  0E0C               	movlw	12
 18270  0053CA  0012               	return	
 18271  0053CC                     l10902:
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;tff.c: 774: if (disk_status(0) & 0x01)
 18275  0053CC  0E00               	movlw	0
 18276  0053CE  ECAC  F02B         	call	_disk_status
 18277  0053D2  6E14               	movwf	??_validate^0,c
 18278  0053D4  A014               	btfss	??_validate^0,0,c
 18279  0053D6  D002               	goto	l10908
 18280                           
 18281                           ;tff.c: 775: return FR_NOT_READY;
 18282  0053D8  0E01               	movlw	1
 18283  0053DA  0012               	return	
 18284  0053DC                     l10908:
 18285                           
 18286                           ;tff.c: 777: return FR_OK;
 18287  0053DC  0E00               	movlw	0
 18288  0053DE  0012               	return		;funcret
 18289  0053E0                     __end_of_validate:
 18290                           	callstack 0
 18291                           
 18292 ;; *************** function _disk_status *****************
 18293 ;; Defined at:
 18294 ;;		line 27 in file "bibliotecas/diskio.c"
 18295 ;; Parameters:    Size  Location     Type
 18296 ;;  pdrv            1    wreg     unsigned char 
 18297 ;; Auto vars:     Size  Location     Type
 18298 ;;  pdrv            1   13[COMRAM] unsigned char 
 18299 ;;  result          2    0        int 
 18300 ;;  stat            1   14[COMRAM] unsigned char 
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  1    wreg      unsigned char 
 18303 ;; Registers used:
 18304 ;;		wreg, status,2, status,0, cstack
 18305 ;; Tracked objects:
 18306 ;;		On entry : 3F/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18310 ;;      Params:         0       0       0       0       0       0       0       0       0
 18311 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18313 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18314 ;;Total ram usage:        4 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; Hardware stack levels required when called:    3
 18317 ;; This function calls:
 18318 ;;		_sdc_disk_status
 18319 ;; This function is called by:
 18320 ;;		_auto_mount
 18321 ;;		_validate
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text100
 18326  005758                     __ptext100:
 18327                           	callstack 0
 18328  005758                     _disk_status:
 18329                           	callstack 18
 18330                           
 18331                           ;incstack = 0
 18332                           ;disk_status@pdrv stored from wreg
 18333  005758  6E0E               	movwf	disk_status@pdrv^0,c
 18334                           
 18335                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 18336  00575A  D00A               	goto	l10612
 18337  00575C                     l10594:
 18338                           
 18339                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 18340  00575C  500E               	movf	disk_status@pdrv^0,w,c
 18341  00575E  ECD3  F02D         	call	_sdc_disk_status
 18342  005762  6E0F               	movwf	disk_status@stat^0,c
 18343  005764                     l10596:
 18344                           
 18345                           ;diskio.c: 39: return stat;
 18346  005764  500F               	movf	disk_status@stat^0,w,c
 18347  005766  0012               	return	
 18348  005768                     l10600:
 18349  005768  500E               	movf	disk_status@pdrv^0,w,c
 18350  00576A  ECD3  F02D         	call	_sdc_disk_status
 18351  00576E  D7FA               	goto	l10596
 18352  005770                     l10612:
 18353  005770  500E               	movf	disk_status@pdrv^0,w,c
 18354                           
 18355                           ; Switch size 1, requested type "simple"
 18356                           ; Number of cases is 3, Range of values is 0 to 2
 18357                           ; switch strategies available:
 18358                           ; Name         Instructions Cycles
 18359                           ; simple_byte           10     6 (average)
 18360                           ;	Chosen strategy is simple_byte
 18361  005772  0A00               	xorlw	0	; case 0
 18362  005774  B4D8               	btfsc	status,2,c
 18363  005776  D7F2               	goto	l10594
 18364  005778  0A01               	xorlw	1	; case 1
 18365  00577A  B4D8               	btfsc	status,2,c
 18366  00577C  D7F5               	goto	l10600
 18367  00577E  0A03               	xorlw	3	; case 2
 18368  005780  B4D8               	btfsc	status,2,c
 18369  005782  D7F0               	goto	l10596
 18370                           
 18371                           ;diskio.c: 50: return 0x01;
 18372  005784  0E01               	movlw	1
 18373  005786  0012               	return		;funcret
 18374  005788                     __end_of_disk_status:
 18375                           	callstack 0
 18376                           
 18377 ;; *************** function _sdc_disk_status *****************
 18378 ;; Defined at:
 18379 ;;		line 588 in file "bibliotecas/diskio.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;  pdrv            1    wreg     unsigned char 
 18382 ;; Auto vars:     Size  Location     Type
 18383 ;;  pdrv            1   10[COMRAM] unsigned char 
 18384 ;;  stat            1    0        unsigned char 
 18385 ;;  cont            1    0        unsigned char 
 18386 ;;  buff            1    0        unsigned char 
 18387 ;; Return value:  Size  Location     Type
 18388 ;;                  1    wreg      unsigned char 
 18389 ;; Registers used:
 18390 ;;		wreg, status,2
 18391 ;; Tracked objects:
 18392 ;;		On entry : 0/0
 18393 ;;		On exit  : 0/0
 18394 ;;		Unchanged: 0/0
 18395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18396 ;;      Params:         0       0       0       0       0       0       0       0       0
 18397 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18399 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18400 ;;Total ram usage:        2 bytes
 18401 ;; Hardware stack levels used:    1
 18402 ;; Hardware stack levels required when called:    2
 18403 ;; This function calls:
 18404 ;;		Nothing
 18405 ;; This function is called by:
 18406 ;;		_disk_status
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text101
 18411  005BA6                     __ptext101:
 18412                           	callstack 0
 18413  005BA6                     _sdc_disk_status:
 18414                           	callstack 18
 18415                           
 18416                           ;incstack = 0
 18417                           ;sdc_disk_status@pdrv stored from wreg
 18418  005BA6  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 18419                           
 18420                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 18421  005BA8  500B               	movf	sdc_disk_status@pdrv^0,w,c
 18422  005BAA  B4D8               	btfsc	status,2,c
 18423  005BAC  D002               	goto	l10470
 18424  005BAE  0E01               	movlw	1
 18425  005BB0  0012               	return	
 18426  005BB2                     l10470:
 18427                           
 18428                           ;diskio.c: 595: return FR_OK;
 18429  005BB2  0E00               	movlw	0
 18430  005BB4  0012               	return		;funcret
 18431  005BB6                     __end_of_sdc_disk_status:
 18432                           	callstack 0
 18433                           
 18434 ;; *************** function _sync *****************
 18435 ;; Defined at:
 18436 ;;		line 119 in file "bibliotecas/tff.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;		None
 18439 ;; Auto vars:     Size  Location     Type
 18440 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 18441 ;;		 -> NULL(0), fs(544), 
 18442 ;; Return value:  Size  Location     Type
 18443 ;;                  1    wreg      enum E155
 18444 ;; Registers used:
 18445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18446 ;; Tracked objects:
 18447 ;;		On entry : 3F/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18451 ;;      Params:         0       0       0       0       0       0       0       0       0
 18452 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18454 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18455 ;;Total ram usage:        2 bytes
 18456 ;; Hardware stack levels used:    1
 18457 ;; Hardware stack levels required when called:    8
 18458 ;; This function calls:
 18459 ;;		_disk_ioctl
 18460 ;;		_move_window
 18461 ;; This function is called by:
 18462 ;;		_f_sync
 18463 ;; This function uses a non-reentrant model
 18464 ;;
 18465                           
 18466                           	psect	text102
 18467  0051D2                     __ptext102:
 18468                           	callstack 0
 18469  0051D2                     _sync:
 18470                           	callstack 16
 18471                           
 18472                           ; BSR set to: 0
 18473                           ;tff.c: 121: FATFS *fs = FatFs;
 18474                           
 18475                           ;incstack = 0
 18476  0051D2  C04D  F04A         	movff	_FatFs,sync@fs
 18477  0051D6  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;tff.c: 124: fs->winflag = 1;
 18481  0051DA  EE20 F01F          	lfsr	2,31
 18482  0051DE  504A               	movf	sync@fs^0,w,c
 18483  0051E0  26D9               	addwf	fsr2l,f,c
 18484  0051E2  504B               	movf	(sync@fs+1)^0,w,c
 18485  0051E4  22DA               	addwfc	fsr2h,f,c
 18486  0051E6  0E01               	movlw	1
 18487  0051E8  6EDF               	movwf	indf2,c
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 18491  0051EA  0E00               	movlw	0
 18492  0051EC  6E35               	movwf	move_window@sector^0,c
 18493  0051EE  0E00               	movlw	0
 18494  0051F0  6E36               	movwf	(move_window@sector+1)^0,c
 18495  0051F2  0E00               	movlw	0
 18496  0051F4  6E37               	movwf	(move_window@sector+2)^0,c
 18497  0051F6  0E00               	movlw	0
 18498  0051F8  6E38               	movwf	(move_window@sector+3)^0,c
 18499  0051FA  EC1B  F015         	call	_move_window	;wreg free
 18500  0051FE  0900               	iorlw	0
 18501  005200  A4D8               	btfss	status,2,c
 18502  005202  D002               	goto	l11344
 18503  005204                     u12850:
 18504  005204  0E08               	movlw	8
 18505  005206  0012               	return	
 18506  005208                     l11344:
 18507                           
 18508                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 18509  005208  0E00               	movlw	0
 18510  00520A  6E0A               	movwf	disk_ioctl@cmd^0,c
 18511  00520C  0E00               	movlw	0
 18512  00520E  6E0B               	movwf	disk_ioctl@buff^0,c
 18513  005210  0E00               	movlw	0
 18514  005212  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 18515  005214  0E00               	movlw	0
 18516  005216  EC57  F02D         	call	_disk_ioctl
 18517  00521A  0900               	iorlw	0
 18518  00521C  A4D8               	btfss	status,2,c
 18519  00521E  D7F2               	goto	u12850
 18520                           
 18521                           ;tff.c: 143: return FR_OK;
 18522  005220  0E00               	movlw	0
 18523  005222  0012               	return		;funcret
 18524  005224                     __end_of_sync:
 18525                           	callstack 0
 18526                           
 18527 ;; *************** function _move_window *****************
 18528 ;; Defined at:
 18529 ;;		line 77 in file "bibliotecas/tff.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;  sector          4   52[COMRAM] unsigned long 
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;  n               1   66[COMRAM] unsigned char 
 18534 ;;  wsect           4   67[COMRAM] unsigned long 
 18535 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 18536 ;;		 -> NULL(0), fs(544), 
 18537 ;; Return value:  Size  Location     Type
 18538 ;;                  1    wreg      enum E105
 18539 ;; Registers used:
 18540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18541 ;; Tracked objects:
 18542 ;;		On entry : 0/0
 18543 ;;		On exit  : 0/0
 18544 ;;		Unchanged: 0/0
 18545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18546 ;;      Params:         4       0       0       0       0       0       0       0       0
 18547 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18548 ;;      Temps:         10       0       0       0       0       0       0       0       0
 18549 ;;      Totals:        21       0       0       0       0       0       0       0       0
 18550 ;;Total ram usage:       21 bytes
 18551 ;; Hardware stack levels used:    1
 18552 ;; Hardware stack levels required when called:    7
 18553 ;; This function calls:
 18554 ;;		_disk_read
 18555 ;;		_disk_write
 18556 ;; This function is called by:
 18557 ;;		_sync
 18558 ;;		_get_cluster
 18559 ;;		_put_cluster
 18560 ;;		_trace_path
 18561 ;;		_reserve_direntry
 18562 ;;		_f_open
 18563 ;;		_f_write
 18564 ;;		_f_sync
 18565 ;;		_f_read
 18566 ;; This function uses a non-reentrant model
 18567 ;;
 18568                           
 18569                           	psect	text103
 18570  002A36                     __ptext103:
 18571                           	callstack 0
 18572  002A36                     _move_window:
 18573                           	callstack 15
 18574                           
 18575                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 18576                           
 18577                           ;incstack = 0
 18578  002A36  C04D  F048         	movff	_FatFs,move_window@fs
 18579  002A3A  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 18580                           
 18581                           ;tff.c: 85: wsect = fs->winsect;
 18582  002A3E  EE20 F004          	lfsr	2,4
 18583  002A42  5048               	movf	move_window@fs^0,w,c
 18584  002A44  26D9               	addwf	fsr2l,f,c
 18585  002A46  5049               	movf	(move_window@fs+1)^0,w,c
 18586  002A48  22DA               	addwfc	fsr2h,f,c
 18587  002A4A  CFDE F044          	movff	postinc2,move_window@wsect
 18588  002A4E  CFDE F045          	movff	postinc2,move_window@wsect+1
 18589  002A52  CFDE F046          	movff	postinc2,move_window@wsect+2
 18590  002A56  CFDE F047          	movff	postinc2,move_window@wsect+3
 18591                           
 18592                           ;tff.c: 86: if (wsect != sector) {
 18593  002A5A  5035               	movf	move_window@sector^0,w,c
 18594  002A5C  1844               	xorwf	move_window@wsect^0,w,c
 18595  002A5E  E10A               	bnz	u11710
 18596  002A60  5036               	movf	(move_window@sector+1)^0,w,c
 18597  002A62  1845               	xorwf	(move_window@wsect+1)^0,w,c
 18598  002A64  E107               	bnz	u11710
 18599  002A66  5037               	movf	(move_window@sector+2)^0,w,c
 18600  002A68  1846               	xorwf	(move_window@wsect+2)^0,w,c
 18601  002A6A  E104               	bnz	u11710
 18602  002A6C  5038               	movf	(move_window@sector+3)^0,w,c
 18603  002A6E  1847               	xorwf	(move_window@wsect+3)^0,w,c
 18604  002A70  B4D8               	btfsc	status,2,c
 18605  002A72  D0B4               	goto	l10582
 18606  002A74                     u11710:
 18607                           
 18608                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 18609  002A74  EE20 F01F          	lfsr	2,31
 18610  002A78  5048               	movf	move_window@fs^0,w,c
 18611  002A7A  26D9               	addwf	fsr2l,f,c
 18612  002A7C  5049               	movf	(move_window@fs+1)^0,w,c
 18613  002A7E  22DA               	addwfc	fsr2h,f,c
 18614  002A80  50DF               	movf	indf2,w,c
 18615  002A82  B4D8               	btfsc	status,2,c
 18616  002A84  D081               	goto	l10572
 18617                           
 18618                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 18619  002A86  0E20               	movlw	32
 18620  002A88  2448               	addwf	move_window@fs^0,w,c
 18621  002A8A  6E29               	movwf	disk_write@buff^0,c
 18622  002A8C  0E00               	movlw	0
 18623  002A8E  2049               	addwfc	(move_window@fs+1)^0,w,c
 18624  002A90  6E2A               	movwf	(disk_write@buff+1)^0,c
 18625  002A92  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18626  002A96  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18627  002A9A  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18628  002A9E  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18629  002AA2  0E01               	movlw	1
 18630  002AA4  6E2F               	movwf	disk_write@count^0,c
 18631  002AA6  0E00               	movlw	0
 18632  002AA8  EC3A  F029         	call	_disk_write
 18633  002AAC  0900               	iorlw	0
 18634  002AAE  B4D8               	btfsc	status,2,c
 18635  002AB0  D002               	goto	l10556
 18636  002AB2                     u11730:
 18637                           
 18638                           ;tff.c: 91: return FALSE;
 18639  002AB2  0E00               	movlw	0
 18640  002AB4  0012               	return	
 18641  002AB6                     l10556:
 18642                           
 18643                           ;tff.c: 92: fs->winflag = 0;
 18644  002AB6  EE20 F01F          	lfsr	2,31
 18645  002ABA  5048               	movf	move_window@fs^0,w,c
 18646  002ABC  26D9               	addwf	fsr2l,f,c
 18647  002ABE  5049               	movf	(move_window@fs+1)^0,w,c
 18648  002AC0  22DA               	addwfc	fsr2h,f,c
 18649  002AC2  0E00               	movlw	0
 18650  002AC4  6EDF               	movwf	indf2,c
 18651                           
 18652                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 18653  002AC6  EE20 F008          	lfsr	2,8
 18654  002ACA  5048               	movf	move_window@fs^0,w,c
 18655  002ACC  26D9               	addwf	fsr2l,f,c
 18656  002ACE  5049               	movf	(move_window@fs+1)^0,w,c
 18657  002AD0  22DA               	addwfc	fsr2h,f,c
 18658  002AD2  CFDE F039          	movff	postinc2,??_move_window
 18659  002AD6  CFDE F03A          	movff	postinc2,??_move_window+1
 18660  002ADA  CFDE F03B          	movff	postinc2,??_move_window+2
 18661  002ADE  CFDE F03C          	movff	postinc2,??_move_window+3
 18662  002AE2  EE20 F014          	lfsr	2,20
 18663  002AE6  5048               	movf	move_window@fs^0,w,c
 18664  002AE8  26D9               	addwf	fsr2l,f,c
 18665  002AEA  5049               	movf	(move_window@fs+1)^0,w,c
 18666  002AEC  22DA               	addwfc	fsr2h,f,c
 18667  002AEE  CFDE F03D          	movff	postinc2,??_move_window+4
 18668  002AF2  CFDD F03E          	movff	postdec2,??_move_window+5
 18669  002AF6  503D               	movf	(??_move_window+4)^0,w,c
 18670  002AF8  2439               	addwf	??_move_window^0,w,c
 18671  002AFA  6E3F               	movwf	(??_move_window+6)^0,c
 18672  002AFC  503E               	movf	(??_move_window+5)^0,w,c
 18673  002AFE  203A               	addwfc	(??_move_window+1)^0,w,c
 18674  002B00  6E40               	movwf	(??_move_window+7)^0,c
 18675  002B02  0E00               	movlw	0
 18676  002B04  203B               	addwfc	(??_move_window+2)^0,w,c
 18677  002B06  6E41               	movwf	(??_move_window+8)^0,c
 18678  002B08  0E00               	movlw	0
 18679  002B0A  203C               	addwfc	(??_move_window+3)^0,w,c
 18680  002B0C  6E42               	movwf	(??_move_window+9)^0,c
 18681  002B0E  503F               	movf	(??_move_window+6)^0,w,c
 18682  002B10  5C44               	subwf	move_window@wsect^0,w,c
 18683  002B12  5040               	movf	(??_move_window+7)^0,w,c
 18684  002B14  5845               	subwfb	(move_window@wsect+1)^0,w,c
 18685  002B16  5041               	movf	(??_move_window+8)^0,w,c
 18686  002B18  5846               	subwfb	(move_window@wsect+2)^0,w,c
 18687  002B1A  5042               	movf	(??_move_window+9)^0,w,c
 18688  002B1C  5847               	subwfb	(move_window@wsect+3)^0,w,c
 18689  002B1E  B0D8               	btfsc	status,0,c
 18690  002B20  D033               	goto	l10572
 18691                           
 18692                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 18693  002B22  EE20 F01E          	lfsr	2,30
 18694  002B26  5048               	movf	move_window@fs^0,w,c
 18695  002B28  26D9               	addwf	fsr2l,f,c
 18696  002B2A  5049               	movf	(move_window@fs+1)^0,w,c
 18697  002B2C  22DA               	addwfc	fsr2h,f,c
 18698  002B2E  50DF               	movf	indf2,w,c
 18699  002B30  6E43               	movwf	move_window@n^0,c
 18700  002B32                     l10560:
 18701  002B32  0E02               	movlw	2
 18702  002B34  6043               	cpfslt	move_window@n^0,c
 18703  002B36  D001               	goto	l10564
 18704  002B38  D027               	goto	l10572
 18705  002B3A                     l10564:
 18706                           
 18707                           ;tff.c: 95: wsect += fs->sects_fat;
 18708  002B3A  EE20 F014          	lfsr	2,20
 18709  002B3E  5048               	movf	move_window@fs^0,w,c
 18710  002B40  26D9               	addwf	fsr2l,f,c
 18711  002B42  5049               	movf	(move_window@fs+1)^0,w,c
 18712  002B44  22DA               	addwfc	fsr2h,f,c
 18713  002B46  CFDE F039          	movff	postinc2,??_move_window
 18714  002B4A  CFDD F03A          	movff	postdec2,??_move_window+1
 18715  002B4E  5039               	movf	??_move_window^0,w,c
 18716  002B50  2644               	addwf	move_window@wsect^0,f,c
 18717  002B52  503A               	movf	(??_move_window+1)^0,w,c
 18718  002B54  2245               	addwfc	(move_window@wsect+1)^0,f,c
 18719  002B56  0E00               	movlw	0
 18720  002B58  2246               	addwfc	(move_window@wsect+2)^0,f,c
 18721  002B5A  0E00               	movlw	0
 18722  002B5C  2247               	addwfc	(move_window@wsect+3)^0,f,c
 18723                           
 18724                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 18725  002B5E  0E20               	movlw	32
 18726  002B60  2448               	addwf	move_window@fs^0,w,c
 18727  002B62  6E29               	movwf	disk_write@buff^0,c
 18728  002B64  0E00               	movlw	0
 18729  002B66  2049               	addwfc	(move_window@fs+1)^0,w,c
 18730  002B68  6E2A               	movwf	(disk_write@buff+1)^0,c
 18731  002B6A  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18732  002B6E  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18733  002B72  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18734  002B76  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18735  002B7A  0E01               	movlw	1
 18736  002B7C  6E2F               	movwf	disk_write@count^0,c
 18737  002B7E  0E00               	movlw	0
 18738  002B80  EC3A  F029         	call	_disk_write
 18739  002B84  0643               	decf	move_window@n^0,f,c
 18740  002B86  D7D5               	goto	l10560
 18741  002B88                     l10572:
 18742                           
 18743                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 18744  002B88  5035               	movf	move_window@sector^0,w,c
 18745  002B8A  1036               	iorwf	(move_window@sector+1)^0,w,c
 18746  002B8C  1037               	iorwf	(move_window@sector+2)^0,w,c
 18747  002B8E  1038               	iorwf	(move_window@sector+3)^0,w,c
 18748  002B90  B4D8               	btfsc	status,2,c
 18749  002B92  D024               	goto	l10582
 18750                           
 18751                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 18752  002B94  0E20               	movlw	32
 18753  002B96  2448               	addwf	move_window@fs^0,w,c
 18754  002B98  6E29               	movwf	disk_read@buff^0,c
 18755  002B9A  0E00               	movlw	0
 18756  002B9C  2049               	addwfc	(move_window@fs+1)^0,w,c
 18757  002B9E  6E2A               	movwf	(disk_read@buff+1)^0,c
 18758  002BA0  C035  F02B         	movff	move_window@sector,disk_read@sector
 18759  002BA4  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 18760  002BA8  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 18761  002BAC  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 18762  002BB0  0E01               	movlw	1
 18763  002BB2  6E2F               	movwf	disk_read@count^0,c
 18764  002BB4  0E00               	movlw	0
 18765  002BB6  EC28  F026         	call	_disk_read
 18766  002BBA  0900               	iorlw	0
 18767  002BBC  A4D8               	btfss	status,2,c
 18768  002BBE  D779               	goto	u11730
 18769                           
 18770                           ;tff.c: 104: fs->winsect = sector;
 18771  002BC0  EE20 F004          	lfsr	2,4
 18772  002BC4  5048               	movf	move_window@fs^0,w,c
 18773  002BC6  26D9               	addwf	fsr2l,f,c
 18774  002BC8  5049               	movf	(move_window@fs+1)^0,w,c
 18775  002BCA  22DA               	addwfc	fsr2h,f,c
 18776  002BCC  C035  FFDE         	movff	move_window@sector,postinc2
 18777  002BD0  C036  FFDE         	movff	move_window@sector+1,postinc2
 18778  002BD4  C037  FFDE         	movff	move_window@sector+2,postinc2
 18779  002BD8  C038  FFDE         	movff	move_window@sector+3,postinc2
 18780  002BDC                     l10582:
 18781                           
 18782                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18783  002BDC  0E01               	movlw	1
 18784  002BDE  0012               	return		;funcret
 18785  002BE0                     __end_of_move_window:
 18786                           	callstack 0
 18787                           
 18788 ;; *************** function _disk_write *****************
 18789 ;; Defined at:
 18790 ;;		line 150 in file "bibliotecas/diskio.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;  pdrv            1    wreg     unsigned char 
 18793 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18794 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18795 ;;  sector          4   42[COMRAM] unsigned long 
 18796 ;;  count           1   46[COMRAM] unsigned char 
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;  pdrv            1   48[COMRAM] unsigned char 
 18799 ;;  result          2   49[COMRAM] int 
 18800 ;;  res             1   51[COMRAM] enum E25
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  1    wreg      enum E25
 18803 ;; Registers used:
 18804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18810 ;;      Params:         7       0       0       0       0       0       0       0       0
 18811 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18812 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18813 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18814 ;;Total ram usage:       12 bytes
 18815 ;; Hardware stack levels used:    1
 18816 ;; Hardware stack levels required when called:    6
 18817 ;; This function calls:
 18818 ;;		_sdc_disk_write
 18819 ;; This function is called by:
 18820 ;;		_move_window
 18821 ;;		_reserve_direntry
 18822 ;;		_f_write
 18823 ;; This function uses a non-reentrant model
 18824 ;;
 18825                           
 18826                           	psect	text104
 18827  005274                     __ptext104:
 18828                           	callstack 0
 18829  005274                     _disk_write:
 18830                           	callstack 15
 18831                           
 18832                           ;incstack = 0
 18833                           ;disk_write@pdrv stored from wreg
 18834  005274  6E31               	movwf	disk_write@pdrv^0,c
 18835                           
 18836                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18837  005276  D018               	goto	l10436
 18838  005278                     l10414:
 18839                           
 18840                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18841  005278  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18842  00527C  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18843  005280  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18844  005284  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18845  005288  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18846  00528C  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18847  005290  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18848  005294  ECF0  F015         	call	_sdc_disk_write	;wreg free
 18849  005298  6E30               	movwf	??_disk_write^0,c
 18850  00529A  5030               	movf	??_disk_write^0,w,c
 18851  00529C  6E32               	movwf	disk_write@result^0,c
 18852  00529E  6A33               	clrf	(disk_write@result+1)^0,c
 18853                           
 18854                           ;diskio.c: 165: res = result;
 18855  0052A0  C032  F034         	movff	disk_write@result,disk_write@res
 18856  0052A4                     l10418:
 18857                           
 18858                           ;diskio.c: 168: return res;
 18859  0052A4  5034               	movf	disk_write@res^0,w,c
 18860  0052A6  0012               	return	
 18861  0052A8                     l10436:
 18862  0052A8  5031               	movf	disk_write@pdrv^0,w,c
 18863                           
 18864                           ; Switch size 1, requested type "simple"
 18865                           ; Number of cases is 3, Range of values is 0 to 2
 18866                           ; switch strategies available:
 18867                           ; Name         Instructions Cycles
 18868                           ; simple_byte           10     6 (average)
 18869                           ;	Chosen strategy is simple_byte
 18870  0052AA  0A00               	xorlw	0	; case 0
 18871  0052AC  B4D8               	btfsc	status,2,c
 18872  0052AE  D7E4               	goto	l10414
 18873  0052B0  0A01               	xorlw	1	; case 1
 18874  0052B2  B4D8               	btfsc	status,2,c
 18875  0052B4  D7E1               	goto	l10414
 18876  0052B6  0A03               	xorlw	3	; case 2
 18877  0052B8  B4D8               	btfsc	status,2,c
 18878  0052BA  D7F4               	goto	l10418
 18879                           
 18880                           ;diskio.c: 189: return RES_PARERR;
 18881  0052BC  0E04               	movlw	4
 18882  0052BE  0012               	return		;funcret
 18883  0052C0                     __end_of_disk_write:
 18884                           	callstack 0
 18885                           
 18886 ;; *************** function _sdc_disk_write *****************
 18887 ;; Defined at:
 18888 ;;		line 509 in file "bibliotecas/diskio.c"
 18889 ;; Parameters:    Size  Location     Type
 18890 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18891 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18892 ;;  sector          4   23[COMRAM] unsigned long 
 18893 ;;  count           1   27[COMRAM] unsigned char 
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;  j               2   37[COMRAM] int 
 18896 ;;  count1          2   34[COMRAM] int 
 18897 ;;  i               2    0        int 
 18898 ;;  buff            1   39[COMRAM] unsigned char 
 18899 ;;  res             1   36[COMRAM] enum E25
 18900 ;; Return value:  Size  Location     Type
 18901 ;;                  1    wreg      enum E25
 18902 ;; Registers used:
 18903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18904 ;; Tracked objects:
 18905 ;;		On entry : 0/0
 18906 ;;		On exit  : 0/0
 18907 ;;		Unchanged: 0/0
 18908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18909 ;;      Params:         7       0       0       0       0       0       0       0       0
 18910 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18911 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18912 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18913 ;;Total ram usage:       19 bytes
 18914 ;; Hardware stack levels used:    1
 18915 ;; Hardware stack levels required when called:    5
 18916 ;; This function calls:
 18917 ;;		_command
 18918 ;;		_dummy_clocks
 18919 ;;		_escreve_SPI
 18920 ;;		_leitura_SPI
 18921 ;;		_proceed
 18922 ;;		_response
 18923 ;; This function is called by:
 18924 ;;		_disk_write
 18925 ;; This function uses a non-reentrant model
 18926 ;;
 18927                           
 18928                           	psect	text105
 18929  002BE0                     __ptext105:
 18930                           	callstack 0
 18931  002BE0                     _sdc_disk_write:
 18932                           	callstack 15
 18933                           
 18934                           ;incstack = 0
 18935  002BE0  0E00               	movlw	0
 18936  002BE2  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18937  002BE4  0E00               	movlw	0
 18938  002BE6  6E23               	movwf	sdc_disk_write@count1^0,c
 18939                           
 18940                           ;diskio.c: 515: if(count>1)
 18941  002BE8  0E01               	movlw	1
 18942  002BEA  641C               	cpfsgt	sdc_disk_write@count^0,c
 18943  002BEC  D065               	goto	l144
 18944                           
 18945                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18946  002BEE  9E8B               	bcf	139,7,c	;volatile
 18947                           
 18948                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18949  002BF0  9A8A               	bcf	138,5,c	;volatile
 18950                           
 18951                           ;diskio.c: 519: dummy_clocks(10);
 18952  002BF2  0E0A               	movlw	10
 18953  002BF4  ECD7  F02A         	call	_dummy_clocks
 18954                           
 18955                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18956  002BF8  501C               	movf	sdc_disk_write@count^0,w,c
 18957  002BFA  6E0F               	movwf	command@arg^0,c
 18958  002BFC  6A10               	clrf	(command@arg+1)^0,c
 18959  002BFE  6A11               	clrf	(command@arg+2)^0,c
 18960  002C00  6A12               	clrf	(command@arg+3)^0,c
 18961  002C02  0EFF               	movlw	255
 18962  002C04  6E13               	movwf	command@CRC^0,c
 18963  002C06  0E57               	movlw	87
 18964  002C08  ECBB  F027         	call	_command
 18965                           
 18966                           ;diskio.c: 521: proceed();
 18967  002C0C  ECFF  F02D         	call	_proceed	;wreg free
 18968  002C10                     l10302:
 18969                           
 18970                           ;diskio.c: 523: buff = response();
 18971  002C10  ECF9  F02D         	call	_response	;wreg free
 18972  002C14  6E28               	movwf	sdc_disk_write@buff^0,c
 18973                           
 18974                           ;diskio.c: 524: }while(buff!=0X00);
 18975  002C16  5028               	movf	sdc_disk_write@buff^0,w,c
 18976  002C18  A4D8               	btfss	status,2,c
 18977  002C1A  D7FA               	goto	l10302
 18978                           
 18979                           ;diskio.c: 526: dummy_clocks(10);
 18980  002C1C  0E0A               	movlw	10
 18981  002C1E  ECD7  F02A         	call	_dummy_clocks
 18982                           
 18983                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18984  002C22  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18985  002C26  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18986  002C2A  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18987  002C2E  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18988  002C32  0E09               	movlw	9
 18989  002C34                     u11465:
 18990  002C34  90D8               	bcf	status,0,c
 18991  002C36  361D               	rlcf	??_sdc_disk_write^0,f,c
 18992  002C38  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18993  002C3A  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18994  002C3C  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18995  002C3E  2EE8               	decfsz	wreg,f,c
 18996  002C40  D7F9               	goto	u11465
 18997  002C42  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18998  002C46  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 18999  002C4A  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19000  002C4E  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19001  002C52  0EFF               	movlw	255
 19002  002C54  6E13               	movwf	command@CRC^0,c
 19003  002C56  0E59               	movlw	89
 19004  002C58  ECBB  F027         	call	_command
 19005                           
 19006                           ;diskio.c: 528: proceed();
 19007  002C5C  ECFF  F02D         	call	_proceed	;wreg free
 19008  002C60                     l10310:
 19009                           
 19010                           ;diskio.c: 530: buff = response();
 19011  002C60  ECF9  F02D         	call	_response	;wreg free
 19012  002C64  6E28               	movwf	sdc_disk_write@buff^0,c
 19013                           
 19014                           ;diskio.c: 531: }while(buff!=0X00);
 19015  002C66  5028               	movf	sdc_disk_write@buff^0,w,c
 19016  002C68  A4D8               	btfss	status,2,c
 19017  002C6A  D7FA               	goto	l10310
 19018                           
 19019                           ;diskio.c: 533: dummy_clocks(1);
 19020  002C6C  0E01               	movlw	1
 19021  002C6E  ECD7  F02A         	call	_dummy_clocks
 19022                           
 19023                           ;diskio.c: 534: escreve_SPI(0XFC);
 19024  002C72  0EFC               	movlw	252
 19025  002C74  ECDB  F02D         	call	_escreve_SPI
 19026                           
 19027                           ;diskio.c: 535: for(j=0;j<512;j++)
 19028  002C78  0E00               	movlw	0
 19029  002C7A  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19030  002C7C  0E00               	movlw	0
 19031  002C7E  6E26               	movwf	sdc_disk_write@j^0,c
 19032  002C80                     l10324:
 19033                           
 19034                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 19035  002C80  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19036  002C84  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19037  002C88  50DF               	movf	indf2,w,c
 19038  002C8A  ECDB  F02D         	call	_escreve_SPI
 19039                           
 19040                           ;diskio.c: 538: p_buff++;
 19041  002C8E  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19042  002C90  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19043  002C92  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19044  002C94  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19045  002C96  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19046  002C98  D7F3               	goto	l10324
 19047  002C9A  0E02               	movlw	2
 19048  002C9C  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19049  002C9E  A0D8               	btfss	status,0,c
 19050  002CA0  D7EF               	goto	l10324
 19051                           
 19052                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 19053  002CA2  EC05  F02E         	call	_leitura_SPI	;wreg free
 19054                           
 19055                           ;diskio.c: 541: leitura_SPI();
 19056  002CA6  EC05  F02E         	call	_leitura_SPI	;wreg free
 19057                           
 19058                           ;diskio.c: 543: dummy_clocks(1);
 19059  002CAA  0E01               	movlw	1
 19060  002CAC  ECD7  F02A         	call	_dummy_clocks
 19061                           
 19062                           ;diskio.c: 544: escreve_SPI(0XFD);
 19063  002CB0  0EFD               	movlw	253
 19064  002CB2  ECDB  F02D         	call	_escreve_SPI
 19065                           
 19066                           ;diskio.c: 546: }
 19067  002CB6  D063               	goto	u11520
 19068  002CB8                     l144:
 19069                           
 19070                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 19071  002CB8  9E8B               	bcf	139,7,c	;volatile
 19072                           
 19073                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 19074  002CBA  9A8A               	bcf	138,5,c	;volatile
 19075                           
 19076                           ;diskio.c: 551: dummy_clocks(10);
 19077  002CBC  0E0A               	movlw	10
 19078  002CBE  ECD7  F02A         	call	_dummy_clocks
 19079                           
 19080                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 19081  002CC2  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 19082  002CC6  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 19083  002CCA  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 19084  002CCE  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 19085  002CD2  0E09               	movlw	9
 19086  002CD4                     u11495:
 19087  002CD4  90D8               	bcf	status,0,c
 19088  002CD6  361D               	rlcf	??_sdc_disk_write^0,f,c
 19089  002CD8  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 19090  002CDA  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 19091  002CDC  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 19092  002CDE  2EE8               	decfsz	wreg,f,c
 19093  002CE0  D7F9               	goto	u11495
 19094  002CE2  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19095  002CE6  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19096  002CEA  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19097  002CEE  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19098  002CF2  0E00               	movlw	0
 19099  002CF4  6E13               	movwf	command@CRC^0,c
 19100  002CF6  0E58               	movlw	88
 19101  002CF8  ECBB  F027         	call	_command
 19102                           
 19103                           ;diskio.c: 553: proceed();
 19104  002CFC  ECFF  F02D         	call	_proceed	;wreg free
 19105  002D00                     l10342:
 19106                           
 19107                           ;diskio.c: 555: buff = response();
 19108  002D00  ECF9  F02D         	call	_response	;wreg free
 19109  002D04  6E28               	movwf	sdc_disk_write@buff^0,c
 19110                           
 19111                           ;diskio.c: 556: }while(buff!=0X00);
 19112  002D06  5028               	movf	sdc_disk_write@buff^0,w,c
 19113  002D08  A4D8               	btfss	status,2,c
 19114  002D0A  D7FA               	goto	l10342
 19115                           
 19116                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 19117  002D0C  9A8A               	bcf	138,5,c	;volatile
 19118                           
 19119                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 19120  002D0E  9E8B               	bcf	139,7,c	;volatile
 19121                           
 19122                           ;diskio.c: 560: dummy_clocks(1);
 19123  002D10  0E01               	movlw	1
 19124  002D12  ECD7  F02A         	call	_dummy_clocks
 19125                           
 19126                           ;diskio.c: 561: escreve_SPI(0XFE);
 19127  002D16  0EFE               	movlw	254
 19128  002D18  ECDB  F02D         	call	_escreve_SPI
 19129                           
 19130                           ;diskio.c: 562: for(j=0;j<512;j++)
 19131  002D1C  0E00               	movlw	0
 19132  002D1E  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19133  002D20  0E00               	movlw	0
 19134  002D22  6E26               	movwf	sdc_disk_write@j^0,c
 19135  002D24                     l10356:
 19136                           
 19137                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 19138  002D24  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19139  002D28  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19140  002D2C  50DF               	movf	indf2,w,c
 19141  002D2E  ECDB  F02D         	call	_escreve_SPI
 19142                           
 19143                           ;diskio.c: 565: p_buff++;
 19144  002D32  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19145  002D34  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19146  002D36  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19147  002D38  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19148  002D3A  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19149  002D3C  D7F3               	goto	l10356
 19150  002D3E  0E02               	movlw	2
 19151  002D40  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19152  002D42  A0D8               	btfss	status,0,c
 19153  002D44  D7EF               	goto	l10356
 19154                           
 19155                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 19156  002D46  EC05  F02E         	call	_leitura_SPI	;wreg free
 19157                           
 19158                           ;diskio.c: 568: leitura_SPI();
 19159  002D4A  EC05  F02E         	call	_leitura_SPI	;wreg free
 19160                           
 19161                           ;diskio.c: 570: dummy_clocks(10);
 19162  002D4E  0E0A               	movlw	10
 19163  002D50  ECD7  F02A         	call	_dummy_clocks
 19164                           
 19165                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 19166  002D54  0E00               	movlw	0
 19167  002D56  6E0F               	movwf	command@arg^0,c
 19168  002D58  0E00               	movlw	0
 19169  002D5A  6E10               	movwf	(command@arg+1)^0,c
 19170  002D5C  0E00               	movlw	0
 19171  002D5E  6E11               	movwf	(command@arg+2)^0,c
 19172  002D60  0E00               	movlw	0
 19173  002D62  6E12               	movwf	(command@arg+3)^0,c
 19174  002D64  0E00               	movlw	0
 19175  002D66  6E13               	movwf	command@CRC^0,c
 19176  002D68  0E4D               	movlw	77
 19177  002D6A  ECBB  F027         	call	_command
 19178                           
 19179                           ;diskio.c: 572: proceed();
 19180  002D6E  ECFF  F02D         	call	_proceed	;wreg free
 19181  002D72                     l10372:
 19182                           
 19183                           ;diskio.c: 574: buff = response();
 19184  002D72  ECF9  F02D         	call	_response	;wreg free
 19185  002D76  6E28               	movwf	sdc_disk_write@buff^0,c
 19186                           
 19187                           ;diskio.c: 575: }while(buff!=0X00 );
 19188  002D78  5028               	movf	sdc_disk_write@buff^0,w,c
 19189  002D7A  A4D8               	btfss	status,2,c
 19190  002D7C  D7FA               	goto	l10372
 19191  002D7E                     u11520:
 19192                           
 19193                           ;diskio.c: 576: };diskio.c: 577: return res;
 19194  002D7E  5025               	movf	sdc_disk_write@res^0,w,c
 19195  002D80  0012               	return		;funcret
 19196  002D82                     __end_of_sdc_disk_write:
 19197                           	callstack 0
 19198                           
 19199 ;; *************** function _disk_read *****************
 19200 ;; Defined at:
 19201 ;;		line 97 in file "bibliotecas/diskio.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  pdrv            1    wreg     unsigned char 
 19204 ;;  buff            2   40[COMRAM] PTR unsigned char 
 19205 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19206 ;;  sector          4   42[COMRAM] unsigned long 
 19207 ;;  count           1   46[COMRAM] unsigned char 
 19208 ;; Auto vars:     Size  Location     Type
 19209 ;;  pdrv            1   48[COMRAM] unsigned char 
 19210 ;;  result          2   49[COMRAM] int 
 19211 ;;  res             1   51[COMRAM] enum E25
 19212 ;; Return value:  Size  Location     Type
 19213 ;;                  1    wreg      enum E25
 19214 ;; Registers used:
 19215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19216 ;; Tracked objects:
 19217 ;;		On entry : 0/0
 19218 ;;		On exit  : 0/0
 19219 ;;		Unchanged: 0/0
 19220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19221 ;;      Params:         7       0       0       0       0       0       0       0       0
 19222 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19223 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19224 ;;      Totals:        12       0       0       0       0       0       0       0       0
 19225 ;;Total ram usage:       12 bytes
 19226 ;; Hardware stack levels used:    1
 19227 ;; Hardware stack levels required when called:    6
 19228 ;; This function calls:
 19229 ;;		_sdc_disk_read
 19230 ;; This function is called by:
 19231 ;;		_move_window
 19232 ;;		_check_fs
 19233 ;;		_f_read
 19234 ;; This function uses a non-reentrant model
 19235 ;;
 19236                           
 19237                           	psect	text106
 19238  004C50                     __ptext106:
 19239                           	callstack 0
 19240  004C50                     _disk_read:
 19241                           	callstack 15
 19242                           
 19243                           ;incstack = 0
 19244                           ;disk_read@pdrv stored from wreg
 19245  004C50  6E31               	movwf	disk_read@pdrv^0,c
 19246                           
 19247                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 19248  004C52  D029               	goto	l10406
 19249  004C54                     l10382:
 19250                           
 19251                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 19252  004C54  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19253  004C58  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19254  004C5C  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19255  004C60  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19256  004C64  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19257  004C68  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19258  004C6C  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19259  004C70  ECD3  F01C         	call	_sdc_disk_read	;wreg free
 19260  004C74  6E30               	movwf	??_disk_read^0,c
 19261  004C76  5030               	movf	??_disk_read^0,w,c
 19262  004C78  6E32               	movwf	disk_read@result^0,c
 19263  004C7A  6A33               	clrf	(disk_read@result+1)^0,c
 19264                           
 19265                           ;diskio.c: 115: res = result;
 19266  004C7C  C032  F034         	movff	disk_read@result,disk_read@res
 19267  004C80                     l10386:
 19268                           
 19269                           ;diskio.c: 117: return res;
 19270  004C80  5034               	movf	disk_read@res^0,w,c
 19271  004C82  0012               	return	
 19272  004C84                     l10390:
 19273                           
 19274                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 19275  004C84  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19276  004C88  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19277  004C8C  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19278  004C90  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19279  004C94  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19280  004C98  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19281  004C9C  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19282  004CA0  ECD3  F01C         	call	_sdc_disk_read	;wreg free
 19283  004CA4  D7E7               	goto	L7
 19284  004CA6                     l10406:
 19285  004CA6  5031               	movf	disk_read@pdrv^0,w,c
 19286                           
 19287                           ; Switch size 1, requested type "simple"
 19288                           ; Number of cases is 3, Range of values is 0 to 2
 19289                           ; switch strategies available:
 19290                           ; Name         Instructions Cycles
 19291                           ; simple_byte           10     6 (average)
 19292                           ;	Chosen strategy is simple_byte
 19293  004CA8  0A00               	xorlw	0	; case 0
 19294  004CAA  B4D8               	btfsc	status,2,c
 19295  004CAC  D7D3               	goto	l10382
 19296  004CAE  0A01               	xorlw	1	; case 1
 19297  004CB0  B4D8               	btfsc	status,2,c
 19298  004CB2  D7E8               	goto	l10390
 19299  004CB4  0A03               	xorlw	3	; case 2
 19300  004CB6  B4D8               	btfsc	status,2,c
 19301  004CB8  D7E3               	goto	l10386
 19302                           
 19303                           ;diskio.c: 141: return RES_PARERR;
 19304  004CBA  0E04               	movlw	4
 19305  004CBC  0012               	return		;funcret
 19306  004CBE                     __end_of_disk_read:
 19307                           	callstack 0
 19308                           
 19309 ;; *************** function _sdc_disk_read *****************
 19310 ;; Defined at:
 19311 ;;		line 439 in file "bibliotecas/diskio.c"
 19312 ;; Parameters:    Size  Location     Type
 19313 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 19314 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19315 ;;  sector          4   23[COMRAM] unsigned long 
 19316 ;;  count           1   27[COMRAM] unsigned char 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  start_add       4   33[COMRAM] unsigned long 
 19319 ;;  length          2   37[COMRAM] int 
 19320 ;;  count1          2    0        int 
 19321 ;;  i               2    0        int 
 19322 ;;  buff            1   39[COMRAM] unsigned char 
 19323 ;;  ptr             1    0        unsigned char 
 19324 ;;  res             1    0        enum E25
 19325 ;; Return value:  Size  Location     Type
 19326 ;;                  1    wreg      enum E25
 19327 ;; Registers used:
 19328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19329 ;; Tracked objects:
 19330 ;;		On entry : 0/0
 19331 ;;		On exit  : 0/0
 19332 ;;		Unchanged: 0/0
 19333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19334 ;;      Params:         7       0       0       0       0       0       0       0       0
 19335 ;;      Locals:         8       0       0       0       0       0       0       0       0
 19336 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19337 ;;      Totals:        19       0       0       0       0       0       0       0       0
 19338 ;;Total ram usage:       19 bytes
 19339 ;; Hardware stack levels used:    1
 19340 ;; Hardware stack levels required when called:    5
 19341 ;; This function calls:
 19342 ;;		_command
 19343 ;;		_dummy_clocks
 19344 ;;		_proceed
 19345 ;;		_response
 19346 ;; This function is called by:
 19347 ;;		_disk_read
 19348 ;; This function uses a non-reentrant model
 19349 ;;
 19350                           
 19351                           	psect	text107
 19352  0039A6                     __ptext107:
 19353                           	callstack 0
 19354  0039A6                     _sdc_disk_read:
 19355                           	callstack 15
 19356                           
 19357                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 19358                           
 19359                           ;incstack = 0
 19360  0039A6  0E0A               	movlw	10
 19361  0039A8  ECD7  F02A         	call	_dummy_clocks
 19362                           
 19363                           ;diskio.c: 452: start_add = sector*512;
 19364  0039AC  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 19365  0039B0  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 19366  0039B4  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 19367  0039B8  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 19368  0039BC  0E09               	movlw	9
 19369  0039BE                     u11375:
 19370  0039BE  90D8               	bcf	status,0,c
 19371  0039C0  361D               	rlcf	??_sdc_disk_read^0,f,c
 19372  0039C2  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 19373  0039C4  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 19374  0039C6  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 19375  0039C8  2EE8               	decfsz	wreg,f,c
 19376  0039CA  D7F9               	goto	u11375
 19377  0039CC  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 19378  0039D0  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 19379  0039D4  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 19380  0039D8  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 19381                           
 19382                           ;diskio.c: 455: if(sector != 1)
 19383  0039DC  0418               	decf	sdc_disk_read@sector^0,w,c
 19384  0039DE  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 19385  0039E0  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 19386  0039E2  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 19387  0039E4  B4D8               	btfsc	status,2,c
 19388  0039E6  D01B               	goto	l10252
 19389                           
 19390                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 19391  0039E8  0E0A               	movlw	10
 19392  0039EA  ECD7  F02A         	call	_dummy_clocks
 19393                           
 19394                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 19395  0039EE  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 19396  0039F2  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 19397  0039F6  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 19398  0039FA  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 19399  0039FE  0E00               	movlw	0
 19400  003A00  6E13               	movwf	command@CRC^0,c
 19401  003A02  0E52               	movlw	82
 19402  003A04  ECBB  F027         	call	_command
 19403                           
 19404                           ;diskio.c: 459: proceed();
 19405  003A08  ECFF  F02D         	call	_proceed	;wreg free
 19406  003A0C                     l10246:
 19407                           
 19408                           ;diskio.c: 461: buff = response();
 19409  003A0C  ECF9  F02D         	call	_response	;wreg free
 19410  003A10  6E28               	movwf	sdc_disk_read@buff^0,c
 19411                           
 19412                           ;diskio.c: 462: }while(buff!=0X00);
 19413  003A12  5028               	movf	sdc_disk_read@buff^0,w,c
 19414  003A14  A4D8               	btfss	status,2,c
 19415  003A16  D7FA               	goto	l10246
 19416  003A18                     u11390:
 19417                           
 19418                           ;diskio.c: 463: proceed();
 19419  003A18  ECFF  F02D         	call	_proceed	;wreg free
 19420                           
 19421                           ;diskio.c: 464: }
 19422  003A1C  D01C               	goto	l10264
 19423  003A1E                     l10252:
 19424                           
 19425                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 19426  003A1E  0E0A               	movlw	10
 19427  003A20  ECD7  F02A         	call	_dummy_clocks
 19428                           
 19429                           ;diskio.c: 468: command(0X51,sector ,0X00);
 19430  003A24  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 19431  003A28  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 19432  003A2C  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 19433  003A30  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 19434  003A34  0E00               	movlw	0
 19435  003A36  6E13               	movwf	command@CRC^0,c
 19436  003A38  0E51               	movlw	81
 19437  003A3A  ECBB  F027         	call	_command
 19438                           
 19439                           ;diskio.c: 469: proceed();
 19440  003A3E  ECFF  F02D         	call	_proceed	;wreg free
 19441  003A42                     l10256:
 19442                           
 19443                           ;diskio.c: 471: buff = response();
 19444  003A42  ECF9  F02D         	call	_response	;wreg free
 19445  003A46  6E28               	movwf	sdc_disk_read@buff^0,c
 19446                           
 19447                           ;diskio.c: 472: }while(buff!=0X00);
 19448  003A48  5028               	movf	sdc_disk_read@buff^0,w,c
 19449  003A4A  B4D8               	btfsc	status,2,c
 19450  003A4C  D7E5               	goto	u11390
 19451  003A4E  D7F9               	goto	l10256
 19452  003A50                     l10262:
 19453                           
 19454                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 19455  003A50  ECF9  F02D         	call	_response	;wreg free
 19456  003A54  6E28               	movwf	sdc_disk_read@buff^0,c
 19457  003A56                     l10264:
 19458  003A56  0EFE               	movlw	254
 19459  003A58  1828               	xorwf	sdc_disk_read@buff^0,w,c
 19460  003A5A  A4D8               	btfss	status,2,c
 19461  003A5C  D7F9               	goto	l10262
 19462                           
 19463                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 19464  003A5E  0E00               	movlw	0
 19465  003A60  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 19466  003A62  0E00               	movlw	0
 19467  003A64  6E26               	movwf	sdc_disk_read@length^0,c
 19468                           
 19469                           ;diskio.c: 484: while ( length < 512 )
 19470  003A66  D00B               	goto	l10272
 19471  003A68                     l10268:
 19472                           
 19473                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 19474  003A68  5026               	movf	sdc_disk_read@length^0,w,c
 19475  003A6A  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 19476  003A6C  6ED9               	movwf	fsr2l,c
 19477  003A6E  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 19478  003A70  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 19479  003A72  6EDA               	movwf	fsr2h,c
 19480  003A74  ECF9  F02D         	call	_response	;wreg free
 19481  003A78  6EDF               	movwf	indf2,c
 19482                           
 19483                           ;diskio.c: 487: length++;
 19484  003A7A  4A26               	infsnz	sdc_disk_read@length^0,f,c
 19485  003A7C  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 19486  003A7E                     l10272:
 19487  003A7E  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 19488  003A80  D7F3               	goto	l10268
 19489  003A82  0E02               	movlw	2
 19490  003A84  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 19491  003A86  A0D8               	btfss	status,0,c
 19492  003A88  D7EF               	goto	l10268
 19493                           
 19494                           ;diskio.c: 491: dummy_clocks(10);
 19495  003A8A  0E0A               	movlw	10
 19496  003A8C  ECD7  F02A         	call	_dummy_clocks
 19497                           
 19498                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 19499  003A90  0E00               	movlw	0
 19500  003A92  6E0F               	movwf	command@arg^0,c
 19501  003A94  0E00               	movlw	0
 19502  003A96  6E10               	movwf	(command@arg+1)^0,c
 19503  003A98  0E00               	movlw	0
 19504  003A9A  6E11               	movwf	(command@arg+2)^0,c
 19505  003A9C  0E00               	movlw	0
 19506  003A9E  6E12               	movwf	(command@arg+3)^0,c
 19507  003AA0  0E00               	movlw	0
 19508  003AA2  6E13               	movwf	command@CRC^0,c
 19509  003AA4  0E4C               	movlw	76
 19510  003AA6  ECBB  F027         	call	_command
 19511                           
 19512                           ;diskio.c: 494: proceed();
 19513  003AAA  ECFF  F02D         	call	_proceed	;wreg free
 19514  003AAE                     l10282:
 19515                           
 19516                           ;diskio.c: 496: buff = response();
 19517  003AAE  ECF9  F02D         	call	_response	;wreg free
 19518  003AB2  6E28               	movwf	sdc_disk_read@buff^0,c
 19519                           
 19520                           ;diskio.c: 497: }while(buff!=0xFF);
 19521  003AB4  2828               	incf	sdc_disk_read@buff^0,w,c
 19522  003AB6  A4D8               	btfss	status,2,c
 19523  003AB8  D7FA               	goto	l10282
 19524                           
 19525                           ;diskio.c: 500: return RES_OK;
 19526  003ABA  0E00               	movlw	0
 19527  003ABC  0012               	return		;funcret
 19528  003ABE                     __end_of_sdc_disk_read:
 19529                           	callstack 0
 19530                           
 19531 ;; *************** function _response *****************
 19532 ;; Defined at:
 19533 ;;		line 61 in file "bibliotecas/SDCard.c"
 19534 ;; Parameters:    Size  Location     Type
 19535 ;;		None
 19536 ;; Auto vars:     Size  Location     Type
 19537 ;;  buff            1    9[COMRAM] unsigned char 
 19538 ;; Return value:  Size  Location     Type
 19539 ;;                  1    wreg      unsigned char 
 19540 ;; Registers used:
 19541 ;;		wreg, status,2, cstack
 19542 ;; Tracked objects:
 19543 ;;		On entry : 0/0
 19544 ;;		On exit  : 0/0
 19545 ;;		Unchanged: 0/0
 19546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19547 ;;      Params:         0       0       0       0       0       0       0       0       0
 19548 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19549 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19550 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19551 ;;Total ram usage:        1 bytes
 19552 ;; Hardware stack levels used:    1
 19553 ;; Hardware stack levels required when called:    3
 19554 ;; This function calls:
 19555 ;;		_leitura_SPI
 19556 ;; This function is called by:
 19557 ;;		_sdc_reset
 19558 ;;		_sdc_disk_initialize
 19559 ;;		_sdc_disk_read
 19560 ;;		_sdc_disk_write
 19561 ;; This function uses a non-reentrant model
 19562 ;;
 19563                           
 19564                           	psect	text108
 19565  005BF2                     __ptext108:
 19566                           	callstack 0
 19567  005BF2                     _response:
 19568                           	callstack 16
 19569                           
 19570                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 19571                           
 19572                           ;incstack = 0
 19573  005BF2  9A8A               	bcf	138,5,c	;volatile
 19574                           
 19575                           ;SDCard.c: 65: buff= leitura_SPI();
 19576  005BF4  EC05  F02E         	call	_leitura_SPI	;wreg free
 19577  005BF8  6E0A               	movwf	response@buff^0,c
 19578                           
 19579                           ;SDCard.c: 66: return buff;
 19580  005BFA  500A               	movf	response@buff^0,w,c
 19581  005BFC  0012               	return		;funcret
 19582  005BFE                     __end_of_response:
 19583                           	callstack 0
 19584                           
 19585 ;; *************** function _proceed *****************
 19586 ;; Defined at:
 19587 ;;		line 94 in file "bibliotecas/SDCard.c"
 19588 ;; Parameters:    Size  Location     Type
 19589 ;;		None
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;		None
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  1    wreg      void 
 19594 ;; Registers used:
 19595 ;;		wreg, cstack
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/0
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19601 ;;      Params:         0       0       0       0       0       0       0       0       0
 19602 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19604 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19605 ;;Total ram usage:        0 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:    3
 19608 ;; This function calls:
 19609 ;;		_escreve_SPI
 19610 ;; This function is called by:
 19611 ;;		_sdc_reset
 19612 ;;		_sdc_disk_initialize
 19613 ;;		_sdc_disk_read
 19614 ;;		_sdc_disk_write
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text109
 19619  005BFE                     __ptext109:
 19620                           	callstack 0
 19621  005BFE                     _proceed:
 19622                           	callstack 16
 19623                           
 19624                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 19625                           
 19626                           ;incstack = 0
 19627  005BFE  9A8A               	bcf	138,5,c	;volatile
 19628                           
 19629                           ;SDCard.c: 97: escreve_SPI(0xFF);
 19630  005C00  0EFF               	movlw	255
 19631  005C02  ECDB  F02D         	call	_escreve_SPI
 19632                           
 19633                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 19634  005C06  8A8A               	bsf	138,5,c	;volatile
 19635  005C08  0012               	return		;funcret
 19636  005C0A                     __end_of_proceed:
 19637                           	callstack 0
 19638                           
 19639 ;; *************** function _command *****************
 19640 ;; Defined at:
 19641 ;;		line 127 in file "bibliotecas/SDCard.c"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;  CMD             1    wreg     unsigned char 
 19644 ;;  arg             4   14[COMRAM] unsigned long 
 19645 ;;  CRC             1   18[COMRAM] unsigned char 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;  CMD             1   19[COMRAM] unsigned char 
 19648 ;;  argument        1   20[COMRAM] unsigned char 
 19649 ;; Return value:  Size  Location     Type
 19650 ;;                  1    wreg      void 
 19651 ;; Registers used:
 19652 ;;		wreg, status,2, status,0, cstack
 19653 ;; Tracked objects:
 19654 ;;		On entry : 0/0
 19655 ;;		On exit  : 0/0
 19656 ;;		Unchanged: 0/0
 19657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19658 ;;      Params:         5       0       0       0       0       0       0       0       0
 19659 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19661 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19662 ;;Total ram usage:        7 bytes
 19663 ;; Hardware stack levels used:    1
 19664 ;; Hardware stack levels required when called:    4
 19665 ;; This function calls:
 19666 ;;		_dummy_clocks
 19667 ;;		_escreve_SPI
 19668 ;;		_wait_ready
 19669 ;; This function is called by:
 19670 ;;		_sdc_reset
 19671 ;;		_sdc_disk_initialize
 19672 ;;		_sdc_disk_read
 19673 ;;		_sdc_disk_write
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           	psect	text110
 19678  004F76                     __ptext110:
 19679                           	callstack 0
 19680  004F76                     _command:
 19681                           	callstack 15
 19682                           
 19683                           ;incstack = 0
 19684                           ;command@CMD stored from wreg
 19685  004F76  6E14               	movwf	command@CMD^0,c
 19686                           
 19687                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 19688  004F78  EC49  F02B         	call	_wait_ready	;wreg free
 19689  004F7C  0AFF               	xorlw	255
 19690  004F7E  A4D8               	btfss	status,2,c
 19691  004F80  D004               	goto	l702
 19692  004F82  D008               	goto	u11360
 19693  004F84                     l10196:
 19694                           
 19695                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 19696  004F84  0E0A               	movlw	10
 19697  004F86  ECD7  F02A         	call	_dummy_clocks
 19698  004F8A                     l702:
 19699  004F8A  EC49  F02B         	call	_wait_ready	;wreg free
 19700  004F8E  0AFF               	xorlw	255
 19701  004F90  A4D8               	btfss	status,2,c
 19702  004F92  D7F8               	goto	l10196
 19703  004F94                     u11360:
 19704                           
 19705                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 19706  004F94  0EFF               	movlw	255
 19707  004F96  ECDB  F02D         	call	_escreve_SPI
 19708                           
 19709                           ;SDCard.c: 139: escreve_SPI(CMD);
 19710  004F9A  5014               	movf	command@CMD^0,w,c
 19711  004F9C  ECDB  F02D         	call	_escreve_SPI
 19712                           
 19713                           ;SDCard.c: 140: argument = arg>>24;
 19714  004FA0  C012  F015         	movff	command@arg+3,command@argument
 19715                           
 19716                           ;SDCard.c: 141: escreve_SPI(argument);
 19717  004FA4  5015               	movf	command@argument^0,w,c
 19718  004FA6  ECDB  F02D         	call	_escreve_SPI
 19719                           
 19720                           ;SDCard.c: 142: argument = arg>>16;
 19721  004FAA  C011  F015         	movff	command@arg+2,command@argument
 19722                           
 19723                           ;SDCard.c: 143: escreve_SPI(argument);
 19724  004FAE  5015               	movf	command@argument^0,w,c
 19725  004FB0  ECDB  F02D         	call	_escreve_SPI
 19726                           
 19727                           ;SDCard.c: 144: argument = arg>>8;
 19728  004FB4  C010  F015         	movff	command@arg+1,command@argument
 19729                           
 19730                           ;SDCard.c: 145: escreve_SPI(argument);
 19731  004FB8  5015               	movf	command@argument^0,w,c
 19732  004FBA  ECDB  F02D         	call	_escreve_SPI
 19733                           
 19734                           ;SDCard.c: 146: argument = arg;
 19735  004FBE  C00F  F015         	movff	command@arg,command@argument
 19736                           
 19737                           ;SDCard.c: 147: escreve_SPI(argument);
 19738  004FC2  5015               	movf	command@argument^0,w,c
 19739  004FC4  ECDB  F02D         	call	_escreve_SPI
 19740                           
 19741                           ;SDCard.c: 148: escreve_SPI(CRC);
 19742  004FC8  5013               	movf	command@CRC^0,w,c
 19743  004FCA  ECDB  F02D         	call	_escreve_SPI
 19744  004FCE  0012               	return		;funcret
 19745  004FD0                     __end_of_command:
 19746                           	callstack 0
 19747                           
 19748 ;; *************** function _wait_ready *****************
 19749 ;; Defined at:
 19750 ;;		line 107 in file "bibliotecas/SDCard.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;		None
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;  msg            10    0        unsigned char [10]
 19755 ;;  timeout         4    9[COMRAM] unsigned long 
 19756 ;;  res             1   13[COMRAM] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  1    wreg      unsigned char 
 19759 ;; Registers used:
 19760 ;;		wreg, status,2, status,0, cstack
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0
 19767 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19769 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19770 ;;Total ram usage:        5 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    3
 19773 ;; This function calls:
 19774 ;;		_leitura_SPI
 19775 ;; This function is called by:
 19776 ;;		_command
 19777 ;; This function uses a non-reentrant model
 19778 ;;
 19779                           
 19780                           	psect	text111
 19781  005692                     __ptext111:
 19782                           	callstack 0
 19783  005692                     _wait_ready:
 19784                           	callstack 15
 19785                           
 19786                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19787                           
 19788                           ;incstack = 0
 19789  005692  0EFF               	movlw	255
 19790  005694  6E0A               	movwf	wait_ready@timeout^0,c
 19791  005696  0E7F               	movlw	127
 19792  005698  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19793  00569A  0E00               	movlw	0
 19794  00569C  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19795  00569E  0E00               	movlw	0
 19796  0056A0  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19797  0056A2                     l10182:
 19798                           
 19799                           ;SDCard.c: 114: res = leitura_SPI();
 19800  0056A2  EC05  F02E         	call	_leitura_SPI	;wreg free
 19801  0056A6  6E0E               	movwf	wait_ready@res^0,c
 19802                           
 19803                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19804  0056A8  280E               	incf	wait_ready@res^0,w,c
 19805  0056AA  B4D8               	btfsc	status,2,c
 19806  0056AC  D00B               	goto	u11340
 19807  0056AE  060A               	decf	wait_ready@timeout^0,f,c
 19808  0056B0  0E00               	movlw	0
 19809  0056B2  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19810  0056B4  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19811  0056B6  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19812  0056B8  500A               	movf	wait_ready@timeout^0,w,c
 19813  0056BA  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19814  0056BC  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19815  0056BE  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19816  0056C0  A4D8               	btfss	status,2,c
 19817  0056C2  D7EF               	goto	l10182
 19818  0056C4                     u11340:
 19819                           
 19820                           ;SDCard.c: 117: return res;
 19821  0056C4  500E               	movf	wait_ready@res^0,w,c
 19822  0056C6  0012               	return		;funcret
 19823  0056C8                     __end_of_wait_ready:
 19824                           	callstack 0
 19825                           
 19826 ;; *************** function _escreve_SPI *****************
 19827 ;; Defined at:
 19828 ;;		line 105 in file "bibliotecas/SPI.c"
 19829 ;; Parameters:    Size  Location     Type
 19830 ;;  dado            1    wreg     unsigned char 
 19831 ;; Auto vars:     Size  Location     Type
 19832 ;;  dado            1   10[COMRAM] unsigned char 
 19833 ;;  TempVar         1    0        unsigned char 
 19834 ;; Return value:  Size  Location     Type
 19835 ;;                  1    wreg      void 
 19836 ;; Registers used:
 19837 ;;		wreg
 19838 ;; Tracked objects:
 19839 ;;		On entry : 0/0
 19840 ;;		On exit  : 0/0
 19841 ;;		Unchanged: 0/0
 19842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19843 ;;      Params:         0       0       0       0       0       0       0       0       0
 19844 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19846 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19847 ;;Total ram usage:        2 bytes
 19848 ;; Hardware stack levels used:    1
 19849 ;; Hardware stack levels required when called:    2
 19850 ;; This function calls:
 19851 ;;		Nothing
 19852 ;; This function is called by:
 19853 ;;		_sdc_disk_write
 19854 ;;		_proceed
 19855 ;;		_command
 19856 ;; This function uses a non-reentrant model
 19857 ;;
 19858                           
 19859                           	psect	text112
 19860  005BB6                     __ptext112:
 19861                           	callstack 0
 19862  005BB6                     _escreve_SPI:
 19863                           	callstack 16
 19864                           
 19865                           ;incstack = 0
 19866                           ;escreve_SPI@dado stored from wreg
 19867  005BB6  6E0B               	movwf	escreve_SPI@dado^0,c
 19868  005BB8  50C9               	movf	201,w,c	;volatile
 19869                           
 19870                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19871  005BBA  969E               	bcf	158,3,c	;volatile
 19872                           
 19873                           ;SPI.c: 111: SSPBUF = dado;
 19874  005BBC  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19875  005BC0                     l806:
 19876  005BC0  B69E               	btfsc	158,3,c	;volatile
 19877  005BC2  0012               	return	
 19878  005BC4  D7FD               	goto	l806
 19879  005BC6                     __end_of_escreve_SPI:
 19880                           	callstack 0
 19881                           
 19882 ;; *************** function _dummy_clocks *****************
 19883 ;; Defined at:
 19884 ;;		line 76 in file "bibliotecas/SDCard.c"
 19885 ;; Parameters:    Size  Location     Type
 19886 ;;  n               1    wreg     unsigned char 
 19887 ;; Auto vars:     Size  Location     Type
 19888 ;;  n               1   11[COMRAM] unsigned char 
 19889 ;;  i               2   12[COMRAM] unsigned int 
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      void 
 19892 ;; Registers used:
 19893 ;;		wreg, status,2, status,0, cstack
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0
 19900 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19901 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19902 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19903 ;;Total ram usage:        5 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:    3
 19906 ;; This function calls:
 19907 ;;		_leitura_SPI
 19908 ;; This function is called by:
 19909 ;;		_sdc_disk_initialize
 19910 ;;		_sdc_disk_read
 19911 ;;		_sdc_disk_write
 19912 ;;		_command
 19913 ;; This function uses a non-reentrant model
 19914 ;;
 19915                           
 19916                           	psect	text113
 19917  0055AE                     __ptext113:
 19918                           	callstack 0
 19919  0055AE                     _dummy_clocks:
 19920                           	callstack 16
 19921                           
 19922                           ;incstack = 0
 19923                           ;dummy_clocks@n stored from wreg
 19924  0055AE  6E0C               	movwf	dummy_clocks@n^0,c
 19925                           
 19926                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19927  0055B0  0E10               	movlw	16
 19928  0055B2  6E0A               	movwf	??_dummy_clocks^0,c
 19929  0055B4  0E94               	movlw	148
 19930  0055B6                     u16747:
 19931  0055B6  2EE8               	decfsz	wreg,f,c
 19932  0055B8  D7FE               	bra	u16747
 19933  0055BA  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19934  0055BC  D7FC               	bra	u16747
 19935  0055BE  D000               	nop2	
 19936                           
 19937                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19938  0055C0  0E00               	movlw	0
 19939  0055C2  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19940  0055C4  0E00               	movlw	0
 19941  0055C6  6E0D               	movwf	dummy_clocks@i^0,c
 19942  0055C8  D006               	goto	l10174
 19943  0055CA                     l686:
 19944                           
 19945                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19946  0055CA  8A8A               	bsf	138,5,c	;volatile
 19947                           
 19948                           ;SDCard.c: 83: leitura_SPI();
 19949  0055CC  EC05  F02E         	call	_leitura_SPI	;wreg free
 19950                           
 19951                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19952  0055D0  9A8A               	bcf	138,5,c	;volatile
 19953  0055D2  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19954  0055D4  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19955  0055D6                     l10174:
 19956  0055D6  500C               	movf	dummy_clocks@n^0,w,c
 19957  0055D8  6E0A               	movwf	??_dummy_clocks^0,c
 19958  0055DA  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19959  0055DC  500A               	movf	??_dummy_clocks^0,w,c
 19960  0055DE  5C0D               	subwf	dummy_clocks@i^0,w,c
 19961  0055E0  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19962  0055E2  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19963  0055E4  B0D8               	btfsc	status,0,c
 19964  0055E6  0012               	return	
 19965  0055E8  D7F0               	goto	l686
 19966  0055EA                     __end_of_dummy_clocks:
 19967                           	callstack 0
 19968                           
 19969 ;; *************** function _leitura_SPI *****************
 19970 ;; Defined at:
 19971 ;;		line 90 in file "bibliotecas/SPI.c"
 19972 ;; Parameters:    Size  Location     Type
 19973 ;;		None
 19974 ;; Auto vars:     Size  Location     Type
 19975 ;;		None
 19976 ;; Return value:  Size  Location     Type
 19977 ;;                  1    wreg      unsigned char 
 19978 ;; Registers used:
 19979 ;;		wreg, status,2
 19980 ;; Tracked objects:
 19981 ;;		On entry : 0/0
 19982 ;;		On exit  : 0/0
 19983 ;;		Unchanged: 0/0
 19984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19985 ;;      Params:         0       0       0       0       0       0       0       0       0
 19986 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19987 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19988 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19989 ;;Total ram usage:        0 bytes
 19990 ;; Hardware stack levels used:    1
 19991 ;; Hardware stack levels required when called:    2
 19992 ;; This function calls:
 19993 ;;		Nothing
 19994 ;; This function is called by:
 19995 ;;		_sdc_disk_write
 19996 ;;		_response
 19997 ;;		_dummy_clocks
 19998 ;;		_wait_ready
 19999 ;; This function uses a non-reentrant model
 20000 ;;
 20001                           
 20002                           	psect	text114
 20003  005C0A                     __ptext114:
 20004                           	callstack 0
 20005  005C0A                     _leitura_SPI:
 20006                           	callstack 16
 20007                           
 20008                           ;SPI.c: 92: SSPBUF = 0xFF;
 20009                           
 20010                           ;incstack = 0
 20011  005C0A  68C9               	setf	201,c	;volatile
 20012                           
 20013                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 20014  005C0C  90C7               	bcf	199,0,c	;volatile
 20015  005C0E                     l800:
 20016  005C0E  A0C7               	btfss	199,0,c	;volatile
 20017  005C10  D7FE               	goto	l800
 20018                           
 20019                           ;SPI.c: 95: return (SSPBUF);
 20020  005C12  50C9               	movf	201,w,c	;volatile
 20021  005C14  0012               	return		;funcret
 20022  005C16                     __end_of_leitura_SPI:
 20023                           	callstack 0
 20024                           
 20025 ;; *************** function _disk_ioctl *****************
 20026 ;; Defined at:
 20027 ;;		line 198 in file "bibliotecas/diskio.c"
 20028 ;; Parameters:    Size  Location     Type
 20029 ;;  pdrv            1    wreg     unsigned char 
 20030 ;;  cmd             1    9[COMRAM] unsigned char 
 20031 ;;  buff            2   10[COMRAM] PTR void 
 20032 ;;		 -> NULL(0), 
 20033 ;; Auto vars:     Size  Location     Type
 20034 ;;  pdrv            1   12[COMRAM] unsigned char 
 20035 ;;  result          2    0        int 
 20036 ;;  res             1   13[COMRAM] enum E25
 20037 ;; Return value:  Size  Location     Type
 20038 ;;                  1    wreg      enum E25
 20039 ;; Registers used:
 20040 ;;		wreg, status,2, status,0
 20041 ;; Tracked objects:
 20042 ;;		On entry : 0/0
 20043 ;;		On exit  : 0/0
 20044 ;;		Unchanged: 0/0
 20045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20046 ;;      Params:         3       0       0       0       0       0       0       0       0
 20047 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20048 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20049 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20050 ;;Total ram usage:        5 bytes
 20051 ;; Hardware stack levels used:    1
 20052 ;; Hardware stack levels required when called:    2
 20053 ;; This function calls:
 20054 ;;		Nothing
 20055 ;; This function is called by:
 20056 ;;		_sync
 20057 ;; This function uses a non-reentrant model
 20058 ;;
 20059                           
 20060                           	psect	text115
 20061  005AAE                     __ptext115:
 20062                           	callstack 0
 20063  005AAE                     _disk_ioctl:
 20064                           	callstack 21
 20065                           
 20066                           ;incstack = 0
 20067                           ;disk_ioctl@pdrv stored from wreg
 20068  005AAE  6E0D               	movwf	disk_ioctl@pdrv^0,c
 20069                           
 20070                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 20071  005AB0  D002               	goto	l11104
 20072  005AB2                     l68:
 20073                           
 20074                           ;diskio.c: 212: return res;
 20075  005AB2  500E               	movf	disk_ioctl@res^0,w,c
 20076  005AB4  0012               	return	
 20077  005AB6                     l11104:
 20078  005AB6  500D               	movf	disk_ioctl@pdrv^0,w,c
 20079                           
 20080                           ; Switch size 1, requested type "simple"
 20081                           ; Number of cases is 3, Range of values is 0 to 2
 20082                           ; switch strategies available:
 20083                           ; Name         Instructions Cycles
 20084                           ; simple_byte           10     6 (average)
 20085                           ;	Chosen strategy is simple_byte
 20086  005AB8  0A00               	xorlw	0	; case 0
 20087  005ABA  B4D8               	btfsc	status,2,c
 20088  005ABC  D7FA               	goto	l68
 20089  005ABE  0A01               	xorlw	1	; case 1
 20090  005AC0  B4D8               	btfsc	status,2,c
 20091  005AC2  D7F7               	goto	l68
 20092  005AC4  0A03               	xorlw	3	; case 2
 20093  005AC6  B4D8               	btfsc	status,2,c
 20094  005AC8  D7F4               	goto	l68
 20095                           
 20096                           ;diskio.c: 227: return RES_PARERR;
 20097  005ACA  0E04               	movlw	4
 20098  005ACC  0012               	return		;funcret
 20099  005ACE                     __end_of_disk_ioctl:
 20100                           	callstack 0
 20101                           
 20102 ;; *************** function _get_fattime *****************
 20103 ;; Defined at:
 20104 ;;		line 810 in file "bibliotecas/tff.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;		None
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;  f_time         10   55[COMRAM] struct .
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  4   13[COMRAM] unsigned long 
 20111 ;; Registers used:
 20112 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 3F/0
 20115 ;;		On exit  : 3F/1
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20118 ;;      Params:         4       0       0       0       0       0       0       0       0
 20119 ;;      Locals:        10       0       0       0       0       0       0       0       0
 20120 ;;      Temps:         38       0       0       0       0       0       0       0       0
 20121 ;;      Totals:        52       0       0       0       0       0       0       0       0
 20122 ;;Total ram usage:       52 bytes
 20123 ;; Hardware stack levels used:    1
 20124 ;; Hardware stack levels required when called:    3
 20125 ;; This function calls:
 20126 ;;		_gps_ano
 20127 ;;		_gps_dia
 20128 ;;		_gps_hora
 20129 ;;		_gps_mes
 20130 ;;		_gps_minutos
 20131 ;;		_gps_segundos
 20132 ;; This function is called by:
 20133 ;;		_f_open
 20134 ;;		_f_sync
 20135 ;; This function uses a non-reentrant model
 20136 ;;
 20137                           
 20138                           	psect	text116
 20139  0034BC                     __ptext116:
 20140                           	callstack 0
 20141  0034BC                     _get_fattime:
 20142                           	callstack 22
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 20146                           
 20147                           ;incstack = 0
 20148  0034BC  ECAE  F02C         	call	_gps_hora	;wreg free
 20149  0034C0  0EFD               	movlw	253
 20150  0034C2  240A               	addwf	?_gps_hora^0,w,c
 20151  0034C4  6E38               	movwf	get_fattime@f_time^0,c
 20152  0034C6  0EFF               	movlw	255
 20153  0034C8  200B               	addwfc	(?_gps_hora+1)^0,w,c
 20154  0034CA  6E39               	movwf	(get_fattime@f_time+1)^0,c
 20155                           
 20156                           ;tff.c: 815: f_time.min = gps_minutos();
 20157  0034CC  ECF3  F02C         	call	_gps_minutos	;wreg free
 20158  0034D0  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 20159  0034D4  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 20160                           
 20161                           ;tff.c: 816: f_time.seg = gps_segundos();
 20162  0034D8  ECE2  F02C         	call	_gps_segundos	;wreg free
 20163  0034DC  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 20164  0034E0  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 20165                           
 20166                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 20167  0034E4  EC26  F02D         	call	_gps_ano	;wreg free
 20168  0034E8  0ED0               	movlw	208
 20169  0034EA  240A               	addwf	?_gps_ano^0,w,c
 20170  0034EC  6E40               	movwf	(get_fattime@f_time+8)^0,c
 20171  0034EE  0E07               	movlw	7
 20172  0034F0  200B               	addwfc	(?_gps_ano+1)^0,w,c
 20173  0034F2  6E41               	movwf	(get_fattime@f_time+9)^0,c
 20174                           
 20175                           ;tff.c: 818: f_time.mes = gps_mes();
 20176  0034F4  EC04  F02D         	call	_gps_mes	;wreg free
 20177  0034F8  500A               	movf	?_gps_mes^0,w,c
 20178  0034FA  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 20179                           
 20180                           ;tff.c: 819: f_time.dia = gps_dia();
 20181  0034FC  EC15  F02D         	call	_gps_dia	;wreg free
 20182  003500  500A               	movf	?_gps_dia^0,w,c
 20183  003502  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 20184                           
 20185                           ; BSR set to: 1
 20186                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 20187  003504  90D8               	bcf	status,0,c
 20188  003506  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 20189  003508  6E13               	movwf	(??_get_fattime+1)^0,c
 20190  00350A  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 20191  00350C  6E12               	movwf	??_get_fattime^0,c
 20192  00350E  503A               	movf	(get_fattime@f_time+2)^0,w,c
 20193  003510  6E14               	movwf	(??_get_fattime+2)^0,c
 20194  003512  503B               	movf	(get_fattime@f_time+3)^0,w,c
 20195  003514  6E15               	movwf	(??_get_fattime+3)^0,c
 20196  003516  6A16               	clrf	(??_get_fattime+4)^0,c
 20197  003518  6A17               	clrf	(??_get_fattime+5)^0,c
 20198  00351A  0E05               	movlw	5
 20199  00351C                     u13235:
 20200  00351C  90D8               	bcf	status,0,c
 20201  00351E  3614               	rlcf	(??_get_fattime+2)^0,f,c
 20202  003520  3615               	rlcf	(??_get_fattime+3)^0,f,c
 20203  003522  3616               	rlcf	(??_get_fattime+4)^0,f,c
 20204  003524  3617               	rlcf	(??_get_fattime+5)^0,f,c
 20205  003526  2EE8               	decfsz	wreg,f,c
 20206  003528  D7F9               	goto	u13235
 20207  00352A  5038               	movf	get_fattime@f_time^0,w,c
 20208  00352C  6E18               	movwf	(??_get_fattime+6)^0,c
 20209  00352E  5039               	movf	(get_fattime@f_time+1)^0,w,c
 20210  003530  6E19               	movwf	(??_get_fattime+7)^0,c
 20211  003532  6A1A               	clrf	(??_get_fattime+8)^0,c
 20212  003534  6A1B               	clrf	(??_get_fattime+9)^0,c
 20213  003536  0E0B               	movlw	11
 20214  003538                     u13245:
 20215  003538  90D8               	bcf	status,0,c
 20216  00353A  3618               	rlcf	(??_get_fattime+6)^0,f,c
 20217  00353C  3619               	rlcf	(??_get_fattime+7)^0,f,c
 20218  00353E  361A               	rlcf	(??_get_fattime+8)^0,f,c
 20219  003540  361B               	rlcf	(??_get_fattime+9)^0,f,c
 20220  003542  2EE8               	decfsz	wreg,f,c
 20221  003544  D7F9               	goto	u13245
 20222  003546  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 20223  00354A  6A1D               	clrf	(??_get_fattime+11)^0,c
 20224  00354C  6A1E               	clrf	(??_get_fattime+12)^0,c
 20225  00354E  6A1F               	clrf	(??_get_fattime+13)^0,c
 20226  003550  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 20227  003554  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 20228  003558  6A1D               	clrf	(??_get_fattime+11)^0,c
 20229  00355A  6A1C               	clrf	(??_get_fattime+10)^0,c
 20230  00355C  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 20231  003560  6A21               	clrf	(??_get_fattime+15)^0,c
 20232  003562  6A22               	clrf	(??_get_fattime+16)^0,c
 20233  003564  6A23               	clrf	(??_get_fattime+17)^0,c
 20234  003566  0E15               	movlw	21
 20235  003568                     u13255:
 20236  003568  90D8               	bcf	status,0,c
 20237  00356A  3620               	rlcf	(??_get_fattime+14)^0,f,c
 20238  00356C  3621               	rlcf	(??_get_fattime+15)^0,f,c
 20239  00356E  3622               	rlcf	(??_get_fattime+16)^0,f,c
 20240  003570  3623               	rlcf	(??_get_fattime+17)^0,f,c
 20241  003572  2EE8               	decfsz	wreg,f,c
 20242  003574  D7F9               	goto	u13255
 20243  003576  0EC4               	movlw	196
 20244  003578  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 20245  00357A  6E24               	movwf	(??_get_fattime+18)^0,c
 20246  00357C  0EFF               	movlw	255
 20247  00357E  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 20248  003580  6E25               	movwf	(??_get_fattime+19)^0,c
 20249  003582  6A26               	clrf	(??_get_fattime+20)^0,c
 20250  003584  6A27               	clrf	(??_get_fattime+21)^0,c
 20251  003586  0E19               	movlw	25
 20252  003588                     u13265:
 20253  003588  90D8               	bcf	status,0,c
 20254  00358A  3624               	rlcf	(??_get_fattime+18)^0,f,c
 20255  00358C  3625               	rlcf	(??_get_fattime+19)^0,f,c
 20256  00358E  3626               	rlcf	(??_get_fattime+20)^0,f,c
 20257  003590  3627               	rlcf	(??_get_fattime+21)^0,f,c
 20258  003592  2EE8               	decfsz	wreg,f,c
 20259  003594  D7F9               	goto	u13265
 20260  003596  5020               	movf	(??_get_fattime+14)^0,w,c
 20261  003598  1024               	iorwf	(??_get_fattime+18)^0,w,c
 20262  00359A  6E28               	movwf	(??_get_fattime+22)^0,c
 20263  00359C  5021               	movf	(??_get_fattime+15)^0,w,c
 20264  00359E  1025               	iorwf	(??_get_fattime+19)^0,w,c
 20265  0035A0  6E29               	movwf	(??_get_fattime+23)^0,c
 20266  0035A2  5022               	movf	(??_get_fattime+16)^0,w,c
 20267  0035A4  1026               	iorwf	(??_get_fattime+20)^0,w,c
 20268  0035A6  6E2A               	movwf	(??_get_fattime+24)^0,c
 20269  0035A8  5023               	movf	(??_get_fattime+17)^0,w,c
 20270  0035AA  1027               	iorwf	(??_get_fattime+21)^0,w,c
 20271  0035AC  6E2B               	movwf	(??_get_fattime+25)^0,c
 20272  0035AE  501C               	movf	(??_get_fattime+10)^0,w,c
 20273  0035B0  1028               	iorwf	(??_get_fattime+22)^0,w,c
 20274  0035B2  6E2C               	movwf	(??_get_fattime+26)^0,c
 20275  0035B4  501D               	movf	(??_get_fattime+11)^0,w,c
 20276  0035B6  1029               	iorwf	(??_get_fattime+23)^0,w,c
 20277  0035B8  6E2D               	movwf	(??_get_fattime+27)^0,c
 20278  0035BA  501E               	movf	(??_get_fattime+12)^0,w,c
 20279  0035BC  102A               	iorwf	(??_get_fattime+24)^0,w,c
 20280  0035BE  6E2E               	movwf	(??_get_fattime+28)^0,c
 20281  0035C0  501F               	movf	(??_get_fattime+13)^0,w,c
 20282  0035C2  102B               	iorwf	(??_get_fattime+25)^0,w,c
 20283  0035C4  6E2F               	movwf	(??_get_fattime+29)^0,c
 20284  0035C6  5018               	movf	(??_get_fattime+6)^0,w,c
 20285  0035C8  102C               	iorwf	(??_get_fattime+26)^0,w,c
 20286  0035CA  6E30               	movwf	(??_get_fattime+30)^0,c
 20287  0035CC  5019               	movf	(??_get_fattime+7)^0,w,c
 20288  0035CE  102D               	iorwf	(??_get_fattime+27)^0,w,c
 20289  0035D0  6E31               	movwf	(??_get_fattime+31)^0,c
 20290  0035D2  501A               	movf	(??_get_fattime+8)^0,w,c
 20291  0035D4  102E               	iorwf	(??_get_fattime+28)^0,w,c
 20292  0035D6  6E32               	movwf	(??_get_fattime+32)^0,c
 20293  0035D8  501B               	movf	(??_get_fattime+9)^0,w,c
 20294  0035DA  102F               	iorwf	(??_get_fattime+29)^0,w,c
 20295  0035DC  6E33               	movwf	(??_get_fattime+33)^0,c
 20296  0035DE  5014               	movf	(??_get_fattime+2)^0,w,c
 20297  0035E0  1030               	iorwf	(??_get_fattime+30)^0,w,c
 20298  0035E2  6E34               	movwf	(??_get_fattime+34)^0,c
 20299  0035E4  5015               	movf	(??_get_fattime+3)^0,w,c
 20300  0035E6  1031               	iorwf	(??_get_fattime+31)^0,w,c
 20301  0035E8  6E35               	movwf	(??_get_fattime+35)^0,c
 20302  0035EA  5016               	movf	(??_get_fattime+4)^0,w,c
 20303  0035EC  1032               	iorwf	(??_get_fattime+32)^0,w,c
 20304  0035EE  6E36               	movwf	(??_get_fattime+36)^0,c
 20305  0035F0  5017               	movf	(??_get_fattime+5)^0,w,c
 20306  0035F2  1033               	iorwf	(??_get_fattime+33)^0,w,c
 20307  0035F4  6E37               	movwf	(??_get_fattime+37)^0,c
 20308  0035F6  5012               	movf	??_get_fattime^0,w,c
 20309  0035F8  1034               	iorwf	(??_get_fattime+34)^0,w,c
 20310  0035FA  6E0E               	movwf	?_get_fattime^0,c
 20311  0035FC  5013               	movf	(??_get_fattime+1)^0,w,c
 20312  0035FE  1035               	iorwf	(??_get_fattime+35)^0,w,c
 20313  003600  6E0F               	movwf	(?_get_fattime+1)^0,c
 20314  003602  0E00               	movlw	0
 20315  003604  1036               	iorwf	(??_get_fattime+36)^0,w,c
 20316  003606  6E10               	movwf	(?_get_fattime+2)^0,c
 20317  003608  0E00               	movlw	0
 20318  00360A  1037               	iorwf	(??_get_fattime+37)^0,w,c
 20319  00360C  6E11               	movwf	(?_get_fattime+3)^0,c
 20320                           
 20321                           ; BSR set to: 1
 20322  00360E  0012               	return		;funcret
 20323  003610                     __end_of_get_fattime:
 20324                           	callstack 0
 20325                           
 20326 ;; *************** function _gps_segundos *****************
 20327 ;; Defined at:
 20328 ;;		line 530 in file "bibliotecas/GPS.c"
 20329 ;; Parameters:    Size  Location     Type
 20330 ;;		None
 20331 ;; Auto vars:     Size  Location     Type
 20332 ;;		None
 20333 ;; Return value:  Size  Location     Type
 20334 ;;                  2    9[COMRAM] unsigned int 
 20335 ;; Registers used:
 20336 ;;		wreg, status,2, status,0, prodl, prodh
 20337 ;; Tracked objects:
 20338 ;;		On entry : 3F/1
 20339 ;;		On exit  : 3F/1
 20340 ;;		Unchanged: 0/0
 20341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20342 ;;      Params:         2       0       0       0       0       0       0       0       0
 20343 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20344 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20345 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20346 ;;Total ram usage:        4 bytes
 20347 ;; Hardware stack levels used:    1
 20348 ;; Hardware stack levels required when called:    2
 20349 ;; This function calls:
 20350 ;;		Nothing
 20351 ;; This function is called by:
 20352 ;;		_get_fattime
 20353 ;; This function uses a non-reentrant model
 20354 ;;
 20355                           
 20356                           	psect	text117
 20357  0059C4                     __ptext117:
 20358                           	callstack 0
 20359  0059C4                     _gps_segundos:
 20360                           	callstack 22
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;GPS.c: 532: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 20364                           
 20365                           ; BSR set to: 1
 20366                           ;incstack = 0
 20367  0059C4  51D5               	movf	(_rawTime+4)& (0+255),w,b
 20368  0059C6  0D0A               	mullw	10
 20369  0059C8  CFF3 F00C          	movff	prodl,??_gps_segundos
 20370  0059CC  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 20371  0059D0  51D6               	movf	(_rawTime+5)& (0+255),w,b
 20372  0059D2  260C               	addwf	??_gps_segundos^0,f,c
 20373  0059D4  0E00               	movlw	0
 20374  0059D6  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 20375  0059D8  0EF0               	movlw	240
 20376  0059DA  240C               	addwf	??_gps_segundos^0,w,c
 20377  0059DC  6E0A               	movwf	?_gps_segundos^0,c
 20378  0059DE  0EFD               	movlw	253
 20379  0059E0  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 20380  0059E2  6E0B               	movwf	(?_gps_segundos+1)^0,c
 20381                           
 20382                           ; BSR set to: 1
 20383  0059E4  0012               	return		;funcret
 20384  0059E6                     __end_of_gps_segundos:
 20385                           	callstack 0
 20386                           
 20387 ;; *************** function _gps_minutos *****************
 20388 ;; Defined at:
 20389 ;;		line 541 in file "bibliotecas/GPS.c"
 20390 ;; Parameters:    Size  Location     Type
 20391 ;;		None
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;		None
 20394 ;; Return value:  Size  Location     Type
 20395 ;;                  2    9[COMRAM] unsigned int 
 20396 ;; Registers used:
 20397 ;;		wreg, status,2, status,0, prodl, prodh
 20398 ;; Tracked objects:
 20399 ;;		On entry : 3F/1
 20400 ;;		On exit  : 3F/1
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20403 ;;      Params:         2       0       0       0       0       0       0       0       0
 20404 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20405 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20406 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20407 ;;Total ram usage:        4 bytes
 20408 ;; Hardware stack levels used:    1
 20409 ;; Hardware stack levels required when called:    2
 20410 ;; This function calls:
 20411 ;;		Nothing
 20412 ;; This function is called by:
 20413 ;;		_get_fattime
 20414 ;; This function uses a non-reentrant model
 20415 ;;
 20416                           
 20417                           	psect	text118
 20418  0059E6                     __ptext118:
 20419                           	callstack 0
 20420  0059E6                     _gps_minutos:
 20421                           	callstack 22
 20422                           
 20423                           ; BSR set to: 1
 20424                           ;GPS.c: 543: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 20425                           
 20426                           ; BSR set to: 1
 20427                           ;incstack = 0
 20428  0059E6  51D3               	movf	(_rawTime+2)& (0+255),w,b
 20429  0059E8  0D0A               	mullw	10
 20430  0059EA  CFF3 F00C          	movff	prodl,??_gps_minutos
 20431  0059EE  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 20432  0059F2  51D4               	movf	(_rawTime+3)& (0+255),w,b
 20433  0059F4  260C               	addwf	??_gps_minutos^0,f,c
 20434  0059F6  0E00               	movlw	0
 20435  0059F8  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 20436  0059FA  0EF0               	movlw	240
 20437  0059FC  240C               	addwf	??_gps_minutos^0,w,c
 20438  0059FE  6E0A               	movwf	?_gps_minutos^0,c
 20439  005A00  0EFD               	movlw	253
 20440  005A02  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 20441  005A04  6E0B               	movwf	(?_gps_minutos+1)^0,c
 20442                           
 20443                           ; BSR set to: 1
 20444  005A06  0012               	return		;funcret
 20445  005A08                     __end_of_gps_minutos:
 20446                           	callstack 0
 20447                           
 20448 ;; *************** function _gps_mes *****************
 20449 ;; Defined at:
 20450 ;;		line 578 in file "bibliotecas/GPS.c"
 20451 ;; Parameters:    Size  Location     Type
 20452 ;;		None
 20453 ;; Auto vars:     Size  Location     Type
 20454 ;;		None
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  2    9[COMRAM] unsigned int 
 20457 ;; Registers used:
 20458 ;;		wreg, status,2, status,0, prodl, prodh
 20459 ;; Tracked objects:
 20460 ;;		On entry : 3F/1
 20461 ;;		On exit  : 3F/1
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20464 ;;      Params:         2       0       0       0       0       0       0       0       0
 20465 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20466 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20467 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20468 ;;Total ram usage:        4 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:    2
 20471 ;; This function calls:
 20472 ;;		Nothing
 20473 ;; This function is called by:
 20474 ;;		_get_fattime
 20475 ;; This function uses a non-reentrant model
 20476 ;;
 20477                           
 20478                           	psect	text119
 20479  005A08                     __ptext119:
 20480                           	callstack 0
 20481  005A08                     _gps_mes:
 20482                           	callstack 22
 20483                           
 20484                           ; BSR set to: 1
 20485                           ;GPS.c: 580: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 20486                           
 20487                           ; BSR set to: 1
 20488                           ;incstack = 0
 20489  005A08  51E6               	movf	(_rawDate+2)& (0+255),w,b
 20490  005A0A  0D0A               	mullw	10
 20491  005A0C  CFF3 F00C          	movff	prodl,??_gps_mes
 20492  005A10  CFF4 F00D          	movff	prodh,??_gps_mes+1
 20493  005A14  51E7               	movf	(_rawDate+3)& (0+255),w,b
 20494  005A16  260C               	addwf	??_gps_mes^0,f,c
 20495  005A18  0E00               	movlw	0
 20496  005A1A  220D               	addwfc	(??_gps_mes+1)^0,f,c
 20497  005A1C  0EF0               	movlw	240
 20498  005A1E  240C               	addwf	??_gps_mes^0,w,c
 20499  005A20  6E0A               	movwf	?_gps_mes^0,c
 20500  005A22  0EFD               	movlw	253
 20501  005A24  200D               	addwfc	(??_gps_mes+1)^0,w,c
 20502  005A26  6E0B               	movwf	(?_gps_mes+1)^0,c
 20503                           
 20504                           ; BSR set to: 1
 20505  005A28  0012               	return		;funcret
 20506  005A2A                     __end_of_gps_mes:
 20507                           	callstack 0
 20508                           
 20509 ;; *************** function _gps_hora *****************
 20510 ;; Defined at:
 20511 ;;		line 553 in file "bibliotecas/GPS.c"
 20512 ;; Parameters:    Size  Location     Type
 20513 ;;		None
 20514 ;; Auto vars:     Size  Location     Type
 20515 ;;		None
 20516 ;; Return value:  Size  Location     Type
 20517 ;;                  2    9[COMRAM] unsigned int 
 20518 ;; Registers used:
 20519 ;;		wreg, status,2, status,0, prodl, prodh
 20520 ;; Tracked objects:
 20521 ;;		On entry : 3F/0
 20522 ;;		On exit  : 3F/1
 20523 ;;		Unchanged: 0/0
 20524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20525 ;;      Params:         2       0       0       0       0       0       0       0       0
 20526 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20527 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20528 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20529 ;;Total ram usage:        4 bytes
 20530 ;; Hardware stack levels used:    1
 20531 ;; Hardware stack levels required when called:    2
 20532 ;; This function calls:
 20533 ;;		Nothing
 20534 ;; This function is called by:
 20535 ;;		_get_fattime
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           	psect	text120
 20540  00595C                     __ptext120:
 20541                           	callstack 0
 20542  00595C                     _gps_hora:
 20543                           	callstack 22
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;GPS.c: 555: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 20547                           
 20548                           ; BSR set to: 1
 20549                           ;incstack = 0
 20550  00595C  0101               	movlb	1	; () banked
 20551  00595E  51D1               	movf	_rawTime& (0+255),w,b
 20552  005960  0D0A               	mullw	10
 20553  005962  CFF3 F00C          	movff	prodl,??_gps_hora
 20554  005966  CFF4 F00D          	movff	prodh,??_gps_hora+1
 20555  00596A  51D2               	movf	(_rawTime+1)& (0+255),w,b
 20556  00596C  260C               	addwf	??_gps_hora^0,f,c
 20557  00596E  0E00               	movlw	0
 20558  005970  220D               	addwfc	(??_gps_hora+1)^0,f,c
 20559  005972  0EF0               	movlw	240
 20560  005974  240C               	addwf	??_gps_hora^0,w,c
 20561  005976  6E0A               	movwf	?_gps_hora^0,c
 20562  005978  0EFD               	movlw	253
 20563  00597A  200D               	addwfc	(??_gps_hora+1)^0,w,c
 20564  00597C  6E0B               	movwf	(?_gps_hora+1)^0,c
 20565                           
 20566                           ; BSR set to: 1
 20567  00597E  0012               	return		;funcret
 20568  005980                     __end_of_gps_hora:
 20569                           	callstack 0
 20570                           
 20571 ;; *************** function _gps_dia *****************
 20572 ;; Defined at:
 20573 ;;		line 565 in file "bibliotecas/GPS.c"
 20574 ;; Parameters:    Size  Location     Type
 20575 ;;		None
 20576 ;; Auto vars:     Size  Location     Type
 20577 ;;		None
 20578 ;; Return value:  Size  Location     Type
 20579 ;;                  2    9[COMRAM] unsigned int 
 20580 ;; Registers used:
 20581 ;;		wreg, status,2, status,0, prodl, prodh
 20582 ;; Tracked objects:
 20583 ;;		On entry : 3F/1
 20584 ;;		On exit  : 3F/1
 20585 ;;		Unchanged: 0/0
 20586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20587 ;;      Params:         2       0       0       0       0       0       0       0       0
 20588 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20589 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20590 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20591 ;;Total ram usage:        4 bytes
 20592 ;; Hardware stack levels used:    1
 20593 ;; Hardware stack levels required when called:    2
 20594 ;; This function calls:
 20595 ;;		Nothing
 20596 ;; This function is called by:
 20597 ;;		_get_fattime
 20598 ;; This function uses a non-reentrant model
 20599 ;;
 20600                           
 20601                           	psect	text121
 20602  005A2A                     __ptext121:
 20603                           	callstack 0
 20604  005A2A                     _gps_dia:
 20605                           	callstack 22
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;GPS.c: 567: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;incstack = 0
 20612  005A2A  51E4               	movf	_rawDate& (0+255),w,b
 20613  005A2C  0D0A               	mullw	10
 20614  005A2E  CFF3 F00C          	movff	prodl,??_gps_dia
 20615  005A32  CFF4 F00D          	movff	prodh,??_gps_dia+1
 20616  005A36  51E5               	movf	(_rawDate+1)& (0+255),w,b
 20617  005A38  260C               	addwf	??_gps_dia^0,f,c
 20618  005A3A  0E00               	movlw	0
 20619  005A3C  220D               	addwfc	(??_gps_dia+1)^0,f,c
 20620  005A3E  0EF0               	movlw	240
 20621  005A40  240C               	addwf	??_gps_dia^0,w,c
 20622  005A42  6E0A               	movwf	?_gps_dia^0,c
 20623  005A44  0EFD               	movlw	253
 20624  005A46  200D               	addwfc	(??_gps_dia+1)^0,w,c
 20625  005A48  6E0B               	movwf	(?_gps_dia+1)^0,c
 20626                           
 20627                           ; BSR set to: 1
 20628  005A4A  0012               	return		;funcret
 20629  005A4C                     __end_of_gps_dia:
 20630                           	callstack 0
 20631                           
 20632 ;; *************** function _gps_ano *****************
 20633 ;; Defined at:
 20634 ;;		line 590 in file "bibliotecas/GPS.c"
 20635 ;; Parameters:    Size  Location     Type
 20636 ;;		None
 20637 ;; Auto vars:     Size  Location     Type
 20638 ;;		None
 20639 ;; Return value:  Size  Location     Type
 20640 ;;                  2    9[COMRAM] unsigned int 
 20641 ;; Registers used:
 20642 ;;		wreg, status,2, status,0, prodl, prodh
 20643 ;; Tracked objects:
 20644 ;;		On entry : 3F/1
 20645 ;;		On exit  : 3F/1
 20646 ;;		Unchanged: 0/0
 20647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20648 ;;      Params:         2       0       0       0       0       0       0       0       0
 20649 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20650 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20651 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20652 ;;Total ram usage:        4 bytes
 20653 ;; Hardware stack levels used:    1
 20654 ;; Hardware stack levels required when called:    2
 20655 ;; This function calls:
 20656 ;;		Nothing
 20657 ;; This function is called by:
 20658 ;;		_get_fattime
 20659 ;; This function uses a non-reentrant model
 20660 ;;
 20661                           
 20662                           	psect	text122
 20663  005A4C                     __ptext122:
 20664                           	callstack 0
 20665  005A4C                     _gps_ano:
 20666                           	callstack 22
 20667                           
 20668                           ; BSR set to: 1
 20669                           ;GPS.c: 592: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 20670                           
 20671                           ; BSR set to: 1
 20672                           ;incstack = 0
 20673  005A4C  51E8               	movf	(_rawDate+4)& (0+255),w,b
 20674  005A4E  0D0A               	mullw	10
 20675  005A50  CFF3 F00C          	movff	prodl,??_gps_ano
 20676  005A54  CFF4 F00D          	movff	prodh,??_gps_ano+1
 20677  005A58  51E9               	movf	(_rawDate+5)& (0+255),w,b
 20678  005A5A  260C               	addwf	??_gps_ano^0,f,c
 20679  005A5C  0E00               	movlw	0
 20680  005A5E  220D               	addwfc	(??_gps_ano+1)^0,f,c
 20681  005A60  0EF0               	movlw	240
 20682  005A62  240C               	addwf	??_gps_ano^0,w,c
 20683  005A64  6E0A               	movwf	?_gps_ano^0,c
 20684  005A66  0EFD               	movlw	253
 20685  005A68  200D               	addwfc	(??_gps_ano+1)^0,w,c
 20686  005A6A  6E0B               	movwf	(?_gps_ano+1)^0,c
 20687                           
 20688                           ; BSR set to: 1
 20689  005A6C  0012               	return		;funcret
 20690  005A6E                     __end_of_gps_ano:
 20691                           	callstack 0
 20692                           
 20693 ;; *************** function _data_nome *****************
 20694 ;; Defined at:
 20695 ;;		line 396 in file "bibliotecas/SDCard.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 20698 ;;		 -> data(6), 
 20699 ;; Auto vars:     Size  Location     Type
 20700 ;;  i               1   11[COMRAM] unsigned char 
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      void 
 20703 ;; Registers used:
 20704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20705 ;; Tracked objects:
 20706 ;;		On entry : 3F/1
 20707 ;;		On exit  : 3F/1
 20708 ;;		Unchanged: 3F/0
 20709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20710 ;;      Params:         2       0       0       0       0       0       0       0       0
 20711 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20713 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20714 ;;Total ram usage:        3 bytes
 20715 ;; Hardware stack levels used:    1
 20716 ;; Hardware stack levels required when called:    2
 20717 ;; This function calls:
 20718 ;;		Nothing
 20719 ;; This function is called by:
 20720 ;;		_escrita_sdcard
 20721 ;; This function uses a non-reentrant model
 20722 ;;
 20723                           
 20724                           	psect	text123
 20725  0058BE                     __ptext123:
 20726                           	callstack 0
 20727  0058BE                     _data_nome:
 20728                           	callstack 24
 20729                           
 20730                           ; BSR set to: 1
 20731                           ;SDCard.c: 398: unsigned char i;;SDCard.c: 399: for(i=0; i<4;i++)
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;incstack = 0
 20735  0058BE  0E00               	movlw	0
 20736  0058C0  6E0C               	movwf	data_nome@i^0,c
 20737  0058C2                     l12370:
 20738                           
 20739                           ; BSR set to: 1
 20740                           ;SDCard.c: 400: {;SDCard.c: 401: filename[i] = *p_buff;
 20741  0058C2  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 20742  0058C6  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 20743  0058CA  0E56               	movlw	low _filename
 20744  0058CC  240C               	addwf	data_nome@i^0,w,c
 20745  0058CE  6EE1               	movwf	fsr1l,c
 20746  0058D0  6AE2               	clrf	fsr1h,c
 20747  0058D2  0E02               	movlw	high _filename
 20748  0058D4  22E2               	addwfc	fsr1h,f,c
 20749  0058D6  CFDF FFE7          	movff	indf2,indf1
 20750                           
 20751                           ; BSR set to: 1
 20752                           ;SDCard.c: 402: p_buff++;
 20753  0058DA  4A0A               	infsnz	data_nome@p_buff^0,f,c
 20754  0058DC  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 20755                           
 20756                           ; BSR set to: 1
 20757  0058DE  2A0C               	incf	data_nome@i^0,f,c
 20758                           
 20759                           ; BSR set to: 1
 20760  0058E0  0E03               	movlw	3
 20761  0058E2  640C               	cpfsgt	data_nome@i^0,c
 20762  0058E4  D7EE               	goto	l12370
 20763  0058E6  0012               	return	
 20764  0058E8                     __end_of_data_nome:
 20765                           	callstack 0
 20766                           
 20767 ;; *************** function _desliga_uart *****************
 20768 ;; Defined at:
 20769 ;;		line 223 in file "bibliotecas/uart.c"
 20770 ;; Parameters:    Size  Location     Type
 20771 ;;		None
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1    wreg      void 
 20776 ;; Registers used:
 20777 ;;		wreg, status,2
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/1
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20783 ;;      Params:         0       0       0       0       0       0       0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20786 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20787 ;;Total ram usage:        0 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:    2
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_grava_sd
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           	psect	text124
 20798  005B82                     __ptext124:
 20799                           	callstack 0
 20800  005B82                     _desliga_uart:
 20801                           	callstack 25
 20802                           
 20803                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;incstack = 0
 20807  005B82  8C94               	bsf	148,6,c	;volatile
 20808                           
 20809                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20810  005B84  8E94               	bsf	148,7,c	;volatile
 20811                           
 20812                           ;uart.c: 230: TXSTA = 0x00;
 20813  005B86  0E00               	movlw	0
 20814  005B88  6EAC               	movwf	172,c	;volatile
 20815                           
 20816                           ;uart.c: 232: RCSTA = 0x00;
 20817  005B8A  0E00               	movlw	0
 20818  005B8C  6EAB               	movwf	171,c	;volatile
 20819                           
 20820                           ;uart.c: 233: RCREG = 0x00;
 20821  005B8E  0E00               	movlw	0
 20822  005B90  6EAE               	movwf	174,c	;volatile
 20823  005B92  0012               	return		;funcret
 20824  005B94                     __end_of_desliga_uart:
 20825                           	callstack 0
 20826                           
 20827 ;; *************** function _desliga_SPI *****************
 20828 ;; Defined at:
 20829 ;;		line 75 in file "bibliotecas/SPI.c"
 20830 ;; Parameters:    Size  Location     Type
 20831 ;;		None
 20832 ;; Auto vars:     Size  Location     Type
 20833 ;;		None
 20834 ;; Return value:  Size  Location     Type
 20835 ;;                  1    wreg      void 
 20836 ;; Registers used:
 20837 ;;		wreg, status,2
 20838 ;; Tracked objects:
 20839 ;;		On entry : 0/1
 20840 ;;		On exit  : 0/0
 20841 ;;		Unchanged: 0/0
 20842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20843 ;;      Params:         0       0       0       0       0       0       0       0       0
 20844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20846 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20847 ;;Total ram usage:        0 bytes
 20848 ;; Hardware stack levels used:    1
 20849 ;; Hardware stack levels required when called:    2
 20850 ;; This function calls:
 20851 ;;		Nothing
 20852 ;; This function is called by:
 20853 ;;		_grava_sd
 20854 ;; This function uses a non-reentrant model
 20855 ;;
 20856                           
 20857                           	psect	text125
 20858  005BC6                     __ptext125:
 20859                           	callstack 0
 20860  005BC6                     _desliga_SPI:
 20861                           	callstack 25
 20862                           
 20863                           ;SPI.c: 77: SSPSTAT = 0x00;
 20864                           
 20865                           ;incstack = 0
 20866  005BC6  0E00               	movlw	0
 20867  005BC8  6EC7               	movwf	199,c	;volatile
 20868                           
 20869                           ;SPI.c: 78: SSPCON1 = 0x00;
 20870  005BCA  0E00               	movlw	0
 20871  005BCC  6EC6               	movwf	198,c	;volatile
 20872                           
 20873                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20874  005BCE  9AC6               	bcf	198,5,c	;volatile
 20875                           
 20876                           ;SPI.c: 80: SSPBUF = 0x00;
 20877  005BD0  0E00               	movlw	0
 20878  005BD2  6EC9               	movwf	201,c	;volatile
 20879  005BD4  0012               	return		;funcret
 20880  005BD6                     __end_of_desliga_SPI:
 20881                           	callstack 0
 20882                           
 20883 ;; *************** function _dados_gps_to_sd *****************
 20884 ;; Defined at:
 20885 ;;		line 702 in file "bibliotecas/GPS.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;		None
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  1    wreg      void 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/1
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20903 ;;Total ram usage:        0 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:    4
 20906 ;; This function calls:
 20907 ;;		_monta_sd
 20908 ;; This function is called by:
 20909 ;;		_disparo_gravacao
 20910 ;; This function uses a non-reentrant model
 20911 ;;
 20912                           
 20913                           	psect	text126
 20914  004DF8                     __ptext126:
 20915                           	callstack 0
 20916  004DF8                     _dados_gps_to_sd:
 20917                           	callstack 24
 20918                           
 20919                           ;GPS.c: 705: monta_sd(0, rawTime);
 20920                           
 20921                           ;incstack = 0
 20922  004DF8  0ED1               	movlw	low _rawTime
 20923  004DFA  6E10               	movwf	monta_sd@dado^0,c
 20924  004DFC  0E01               	movlw	high _rawTime
 20925  004DFE  6E11               	movwf	(monta_sd@dado+1)^0,c
 20926  004E00  0E00               	movlw	0
 20927  004E02  EC03  F00B         	call	_monta_sd
 20928                           
 20929                           ;GPS.c: 706: monta_sd(1, rawDate);
 20930  004E06  0EE4               	movlw	low _rawDate
 20931  004E08  6E10               	movwf	monta_sd@dado^0,c
 20932  004E0A  0E01               	movlw	high _rawDate
 20933  004E0C  6E11               	movwf	(monta_sd@dado+1)^0,c
 20934  004E0E  0E01               	movlw	1
 20935  004E10  EC03  F00B         	call	_monta_sd
 20936                           
 20937                           ;GPS.c: 707: monta_sd(2, rawLatitude);
 20938  004E14  0EBE               	movlw	low _rawLatitude
 20939  004E16  6E10               	movwf	monta_sd@dado^0,c
 20940  004E18  0E01               	movlw	high _rawLatitude
 20941  004E1A  6E11               	movwf	(monta_sd@dado+1)^0,c
 20942  004E1C  0E02               	movlw	2
 20943  004E1E  EC03  F00B         	call	_monta_sd
 20944                           
 20945                           ;GPS.c: 708: monta_sd(3, rawLongitude);
 20946  004E22  0EA5               	movlw	low _rawLongitude
 20947  004E24  6E10               	movwf	monta_sd@dado^0,c
 20948  004E26  0E01               	movlw	high _rawLongitude
 20949  004E28  6E11               	movwf	(monta_sd@dado+1)^0,c
 20950  004E2A  0E03               	movlw	3
 20951  004E2C  EC03  F00B         	call	_monta_sd
 20952                           
 20953                           ;GPS.c: 709: monta_sd(5, rawTime);
 20954  004E30  0ED1               	movlw	low _rawTime
 20955  004E32  6E10               	movwf	monta_sd@dado^0,c
 20956  004E34  0E01               	movlw	high _rawTime
 20957  004E36  6E11               	movwf	(monta_sd@dado+1)^0,c
 20958  004E38  0E05               	movlw	5
 20959  004E3A  EC03  F00B         	call	_monta_sd
 20960                           
 20961                           ;GPS.c: 710: monta_sd(6, rawDate);
 20962  004E3E  0EE4               	movlw	low _rawDate
 20963  004E40  6E10               	movwf	monta_sd@dado^0,c
 20964  004E42  0E01               	movlw	high _rawDate
 20965  004E44  6E11               	movwf	(monta_sd@dado+1)^0,c
 20966  004E46  0E06               	movlw	6
 20967  004E48  EC03  F00B         	call	_monta_sd
 20968                           
 20969                           ;GPS.c: 711: monta_sd(7, rawSpeed);
 20970  004E4C  0E6A               	movlw	low _rawSpeed
 20971  004E4E  6E10               	movwf	monta_sd@dado^0,c
 20972  004E50  0E02               	movlw	high _rawSpeed
 20973  004E52  6E11               	movwf	(monta_sd@dado+1)^0,c
 20974  004E54  0E07               	movlw	7
 20975  004E56  EC03  F00B         	call	_monta_sd
 20976  004E5A  0012               	return		;funcret
 20977  004E5C                     __end_of_dados_gps_to_sd:
 20978                           	callstack 0
 20979                           
 20980 ;; *************** function _monta_sd *****************
 20981 ;; Defined at:
 20982 ;;		line 305 in file "bibliotecas/SDCard.c"
 20983 ;; Parameters:    Size  Location     Type
 20984 ;;  index           1    wreg     unsigned char 
 20985 ;;  dado            2   15[COMRAM] PTR unsigned char 
 20986 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 20987 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 20988 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 20989 ;; Auto vars:     Size  Location     Type
 20990 ;;  index           1   18[COMRAM] unsigned char 
 20991 ;;  i               1   19[COMRAM] unsigned char 
 20992 ;;  size            1    0        unsigned char 
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  1    wreg      void 
 20995 ;; Registers used:
 20996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/2
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21002 ;;      Params:         2       0       0       0       0       0       0       0       0
 21003 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21005 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21006 ;;Total ram usage:        5 bytes
 21007 ;; Hardware stack levels used:    1
 21008 ;; Hardware stack levels required when called:    3
 21009 ;; This function calls:
 21010 ;;		_strlen
 21011 ;; This function is called by:
 21012 ;;		_dados_gps_to_sd
 21013 ;;		_verifica_fence
 21014 ;;		_disparo_gravacao
 21015 ;; This function uses a non-reentrant model
 21016 ;;
 21017                           
 21018                           	psect	text127
 21019  001606                     __ptext127:
 21020                           	callstack 0
 21021  001606                     _monta_sd:
 21022                           	callstack 24
 21023                           
 21024                           ;incstack = 0
 21025                           ;monta_sd@index stored from wreg
 21026  001606  6E13               	movwf	monta_sd@index^0,c
 21027  001608  C010  F00A         	movff	monta_sd@dado,strlen@s
 21028  00160C  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21029  001610  EC77  F02A         	call	_strlen	;wreg free
 21030                           
 21031                           ;SDCard.c: 309: switch(index)
 21032  001614  D165               	goto	l12900
 21033  001616                     l12786:
 21034                           
 21035                           ;SDCard.c: 312: for(i=0; i<7;i++)
 21036  001616  0E00               	movlw	0
 21037  001618  6E14               	movwf	monta_sd@i^0,c
 21038  00161A                     l12792:
 21039                           
 21040                           ;SDCard.c: 313: {;SDCard.c: 314: if(*dado != '\0')
 21041  00161A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21042  00161E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21043  001622  6AF8               	clrf	tblptru,c
 21044  001624  0E07               	movlw	(high __ramtop+-1)
 21045  001626  64F7               	cpfsgt	tblptrh,c
 21046  001628  D003               	bra	u15217
 21047  00162A  0008               	tblrd		*
 21048  00162C  50F5               	movf	tablat,w,c
 21049  00162E  D005               	bra	u15210
 21050  001630                     u15217:
 21051  001630  CFF6 FFE1          	movff	tblptrl,fsr1l
 21052  001634  CFF7 FFE2          	movff	tblptrh,fsr1h
 21053  001638  50E7               	movf	indf1,w,c
 21054  00163A                     u15210:
 21055  00163A  0900               	iorlw	0
 21056  00163C  B4D8               	btfsc	status,2,c
 21057  00163E  D017               	goto	l12796
 21058                           
 21059                           ;SDCard.c: 315: {;SDCard.c: 316: hora[i] = *dado;
 21060  001640  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21061  001644  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21062  001648  6AF8               	clrf	tblptru,c
 21063  00164A  0ECA               	movlw	low _hora
 21064  00164C  2414               	addwf	monta_sd@i^0,w,c
 21065  00164E  6ED9               	movwf	fsr2l,c
 21066  001650  6ADA               	clrf	fsr2h,c
 21067  001652  0E01               	movlw	high _hora
 21068  001654  22DA               	addwfc	fsr2h,f,c
 21069  001656  0E07               	movlw	(high __ramtop+-1)
 21070  001658  64F7               	cpfsgt	tblptrh,c
 21071  00165A  D003               	bra	u15237
 21072  00165C  0008               	tblrd		*
 21073  00165E  50F5               	movf	tablat,w,c
 21074  001660  D005               	bra	u15230
 21075  001662                     u15237:
 21076  001662  CFF6 FFE1          	movff	tblptrl,fsr1l
 21077  001666  CFF7 FFE2          	movff	tblptrh,fsr1h
 21078  00166A  50E7               	movf	indf1,w,c
 21079  00166C                     u15230:
 21080  00166C  6EDF               	movwf	indf2,c
 21081  00166E                     l12796:
 21082                           
 21083                           ;SDCard.c: 317: };SDCard.c: 318: dado++;
 21084  00166E  4A10               	infsnz	monta_sd@dado^0,f,c
 21085  001670  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21086  001672  2A14               	incf	monta_sd@i^0,f,c
 21087  001674  0E06               	movlw	6
 21088  001676  6414               	cpfsgt	monta_sd@i^0,c
 21089  001678  D7D0               	goto	l12792
 21090  00167A  0012               	return	
 21091  00167C                     l12802:
 21092                           
 21093                           ;SDCard.c: 323: for(i=0; i<6;i++)
 21094  00167C  0E00               	movlw	0
 21095  00167E  6E14               	movwf	monta_sd@i^0,c
 21096  001680                     l12808:
 21097                           
 21098                           ;SDCard.c: 324: {;SDCard.c: 325: if(*dado != '\0')
 21099  001680  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21100  001684  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21101  001688  6AF8               	clrf	tblptru,c
 21102  00168A  0E07               	movlw	(high __ramtop+-1)
 21103  00168C  64F7               	cpfsgt	tblptrh,c
 21104  00168E  D003               	bra	u15257
 21105  001690  0008               	tblrd		*
 21106  001692  50F5               	movf	tablat,w,c
 21107  001694  D005               	bra	u15250
 21108  001696                     u15257:
 21109  001696  CFF6 FFE1          	movff	tblptrl,fsr1l
 21110  00169A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21111  00169E  50E7               	movf	indf1,w,c
 21112  0016A0                     u15250:
 21113  0016A0  0900               	iorlw	0
 21114  0016A2  B4D8               	btfsc	status,2,c
 21115  0016A4  D017               	goto	l12812
 21116                           
 21117                           ;SDCard.c: 326: {;SDCard.c: 327: data[i] = *dado;
 21118  0016A6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21119  0016AA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21120  0016AE  6AF8               	clrf	tblptru,c
 21121  0016B0  0ED8               	movlw	low _data
 21122  0016B2  2414               	addwf	monta_sd@i^0,w,c
 21123  0016B4  6ED9               	movwf	fsr2l,c
 21124  0016B6  6ADA               	clrf	fsr2h,c
 21125  0016B8  0E01               	movlw	high _data
 21126  0016BA  22DA               	addwfc	fsr2h,f,c
 21127  0016BC  0E07               	movlw	(high __ramtop+-1)
 21128  0016BE  64F7               	cpfsgt	tblptrh,c
 21129  0016C0  D003               	bra	u15277
 21130  0016C2  0008               	tblrd		*
 21131  0016C4  50F5               	movf	tablat,w,c
 21132  0016C6  D005               	bra	u15270
 21133  0016C8                     u15277:
 21134  0016C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21135  0016CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21136  0016D0  50E7               	movf	indf1,w,c
 21137  0016D2                     u15270:
 21138  0016D2  6EDF               	movwf	indf2,c
 21139  0016D4                     l12812:
 21140                           
 21141                           ;SDCard.c: 328: };SDCard.c: 329: dado++;
 21142  0016D4  4A10               	infsnz	monta_sd@dado^0,f,c
 21143  0016D6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21144  0016D8  2A14               	incf	monta_sd@i^0,f,c
 21145  0016DA  0E05               	movlw	5
 21146  0016DC  6414               	cpfsgt	monta_sd@i^0,c
 21147  0016DE  D7D0               	goto	l12808
 21148  0016E0  0012               	return	
 21149  0016E2                     l12818:
 21150                           
 21151                           ;SDCard.c: 334: for(i=0; i<11;i++)
 21152  0016E2  0E00               	movlw	0
 21153  0016E4  6E14               	movwf	monta_sd@i^0,c
 21154  0016E6                     l12824:
 21155                           
 21156                           ;SDCard.c: 335: {;SDCard.c: 336: if(*dado != '\0')
 21157  0016E6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21158  0016EA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21159  0016EE  6AF8               	clrf	tblptru,c
 21160  0016F0  0E07               	movlw	(high __ramtop+-1)
 21161  0016F2  64F7               	cpfsgt	tblptrh,c
 21162  0016F4  D003               	bra	u15297
 21163  0016F6  0008               	tblrd		*
 21164  0016F8  50F5               	movf	tablat,w,c
 21165  0016FA  D005               	bra	u15290
 21166  0016FC                     u15297:
 21167  0016FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21168  001700  CFF7 FFE2          	movff	tblptrh,fsr1h
 21169  001704  50E7               	movf	indf1,w,c
 21170  001706                     u15290:
 21171  001706  0900               	iorlw	0
 21172  001708  B4D8               	btfsc	status,2,c
 21173  00170A  D017               	goto	l12828
 21174                           
 21175                           ;SDCard.c: 337: {;SDCard.c: 338: lt[i] = *dado;
 21176  00170C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21177  001710  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21178  001714  6AF8               	clrf	tblptru,c
 21179  001716  0EB2               	movlw	low _lt
 21180  001718  2414               	addwf	monta_sd@i^0,w,c
 21181  00171A  6ED9               	movwf	fsr2l,c
 21182  00171C  6ADA               	clrf	fsr2h,c
 21183  00171E  0E01               	movlw	high _lt
 21184  001720  22DA               	addwfc	fsr2h,f,c
 21185  001722  0E07               	movlw	(high __ramtop+-1)
 21186  001724  64F7               	cpfsgt	tblptrh,c
 21187  001726  D003               	bra	u15317
 21188  001728  0008               	tblrd		*
 21189  00172A  50F5               	movf	tablat,w,c
 21190  00172C  D005               	bra	u15310
 21191  00172E                     u15317:
 21192  00172E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21193  001732  CFF7 FFE2          	movff	tblptrh,fsr1h
 21194  001736  50E7               	movf	indf1,w,c
 21195  001738                     u15310:
 21196  001738  6EDF               	movwf	indf2,c
 21197  00173A                     l12828:
 21198                           
 21199                           ;SDCard.c: 339: };SDCard.c: 340: dado++;
 21200  00173A  4A10               	infsnz	monta_sd@dado^0,f,c
 21201  00173C  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21202  00173E  2A14               	incf	monta_sd@i^0,f,c
 21203  001740  0E0A               	movlw	10
 21204  001742  6414               	cpfsgt	monta_sd@i^0,c
 21205  001744  D7D0               	goto	l12824
 21206  001746  0012               	return	
 21207  001748                     l12834:
 21208                           
 21209                           ;SDCard.c: 345: for(i=0; i<12;i++)
 21210  001748  0E00               	movlw	0
 21211  00174A  6E14               	movwf	monta_sd@i^0,c
 21212  00174C                     l12840:
 21213                           
 21214                           ;SDCard.c: 346: {;SDCard.c: 347: if(*dado != '\0')
 21215  00174C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21216  001750  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21217  001754  6AF8               	clrf	tblptru,c
 21218  001756  0E07               	movlw	(high __ramtop+-1)
 21219  001758  64F7               	cpfsgt	tblptrh,c
 21220  00175A  D003               	bra	u15337
 21221  00175C  0008               	tblrd		*
 21222  00175E  50F5               	movf	tablat,w,c
 21223  001760  D005               	bra	u15330
 21224  001762                     u15337:
 21225  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
 21226  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
 21227  00176A  50E7               	movf	indf1,w,c
 21228  00176C                     u15330:
 21229  00176C  0900               	iorlw	0
 21230  00176E  B4D8               	btfsc	status,2,c
 21231  001770  D017               	goto	l12844
 21232                           
 21233                           ;SDCard.c: 348: {;SDCard.c: 349: lo[i] = *dado;
 21234  001772  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21235  001776  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21236  00177A  6AF8               	clrf	tblptru,c
 21237  00177C  0E98               	movlw	low _lo
 21238  00177E  2414               	addwf	monta_sd@i^0,w,c
 21239  001780  6ED9               	movwf	fsr2l,c
 21240  001782  6ADA               	clrf	fsr2h,c
 21241  001784  0E01               	movlw	high _lo
 21242  001786  22DA               	addwfc	fsr2h,f,c
 21243  001788  0E07               	movlw	(high __ramtop+-1)
 21244  00178A  64F7               	cpfsgt	tblptrh,c
 21245  00178C  D003               	bra	u15357
 21246  00178E  0008               	tblrd		*
 21247  001790  50F5               	movf	tablat,w,c
 21248  001792  D005               	bra	u15350
 21249  001794                     u15357:
 21250  001794  CFF6 FFE1          	movff	tblptrl,fsr1l
 21251  001798  CFF7 FFE2          	movff	tblptrh,fsr1h
 21252  00179C  50E7               	movf	indf1,w,c
 21253  00179E                     u15350:
 21254  00179E  6EDF               	movwf	indf2,c
 21255  0017A0                     l12844:
 21256                           
 21257                           ;SDCard.c: 350: };SDCard.c: 351: dado++;
 21258  0017A0  4A10               	infsnz	monta_sd@dado^0,f,c
 21259  0017A2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21260  0017A4  2A14               	incf	monta_sd@i^0,f,c
 21261  0017A6  0E0B               	movlw	11
 21262  0017A8  6414               	cpfsgt	monta_sd@i^0,c
 21263  0017AA  D7D0               	goto	l12840
 21264  0017AC  0012               	return	
 21265  0017AE                     l12850:
 21266                           
 21267                           ;SDCard.c: 357: fence = *dado;
 21268  0017AE  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21269  0017B2  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21270  0017B6  6AF8               	clrf	tblptru,c
 21271  0017B8  0E07               	movlw	(high __ramtop+-1)
 21272  0017BA  64F7               	cpfsgt	tblptrh,c
 21273  0017BC  D003               	bra	u15377
 21274  0017BE  0008               	tblrd		*
 21275  0017C0  50F5               	movf	tablat,w,c
 21276  0017C2  D005               	bra	u15370
 21277  0017C4                     u15377:
 21278  0017C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21279  0017C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21280  0017CC  50E7               	movf	indf1,w,c
 21281  0017CE                     u15370:
 21282  0017CE  0100               	movlb	0	; () banked
 21283  0017D0  6FF5               	movwf	_fence& (0+255),b
 21284                           
 21285                           ;SDCard.c: 358: break;
 21286  0017D2  0012               	return	
 21287  0017D4                     l12852:
 21288                           
 21289                           ;SDCard.c: 361: for(i=0; i<4;i++)
 21290  0017D4  0E00               	movlw	0
 21291  0017D6  6E14               	movwf	monta_sd@i^0,c
 21292  0017D8                     l12858:
 21293                           
 21294                           ;SDCard.c: 362: {;SDCard.c: 363: string_dado.hora_name[i] = *dado;
 21295  0017D8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21296  0017DC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21297  0017E0  6AF8               	clrf	tblptru,c
 21298  0017E2  0E14               	movlw	low (_string_dado+20)
 21299  0017E4  2414               	addwf	monta_sd@i^0,w,c
 21300  0017E6  6ED9               	movwf	fsr2l,c
 21301  0017E8  6ADA               	clrf	fsr2h,c
 21302  0017EA  0E02               	movlw	high (_string_dado+20)
 21303  0017EC  22DA               	addwfc	fsr2h,f,c
 21304  0017EE  0E07               	movlw	(high __ramtop+-1)
 21305  0017F0  64F7               	cpfsgt	tblptrh,c
 21306  0017F2  D003               	bra	u15387
 21307  0017F4  0008               	tblrd		*
 21308  0017F6  50F5               	movf	tablat,w,c
 21309  0017F8  D005               	bra	u15380
 21310  0017FA                     u15387:
 21311  0017FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21312  0017FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21313  001802  50E7               	movf	indf1,w,c
 21314  001804                     u15380:
 21315  001804  6EDF               	movwf	indf2,c
 21316                           
 21317                           ;SDCard.c: 364: dado++;
 21318  001806  4A10               	infsnz	monta_sd@dado^0,f,c
 21319  001808  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21320  00180A  2A14               	incf	monta_sd@i^0,f,c
 21321  00180C  0E03               	movlw	3
 21322  00180E  6414               	cpfsgt	monta_sd@i^0,c
 21323  001810  D7E3               	goto	l12858
 21324  001812  0012               	return	
 21325  001814                     l12866:
 21326                           
 21327                           ;SDCard.c: 370: for(i=0; i<4;i++)
 21328  001814  0E00               	movlw	0
 21329  001816  6E14               	movwf	monta_sd@i^0,c
 21330  001818                     l12872:
 21331                           
 21332                           ;SDCard.c: 371: {;SDCard.c: 372: string_dado.data_name[i] = *dado;
 21333  001818  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21334  00181C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21335  001820  6AF8               	clrf	tblptru,c
 21336  001822  0E12               	movlw	low (_string_dado+18)
 21337  001824  2414               	addwf	monta_sd@i^0,w,c
 21338  001826  6ED9               	movwf	fsr2l,c
 21339  001828  6ADA               	clrf	fsr2h,c
 21340  00182A  0E02               	movlw	high (_string_dado+18)
 21341  00182C  22DA               	addwfc	fsr2h,f,c
 21342  00182E  0E07               	movlw	(high __ramtop+-1)
 21343  001830  64F7               	cpfsgt	tblptrh,c
 21344  001832  D003               	bra	u15407
 21345  001834  0008               	tblrd		*
 21346  001836  50F5               	movf	tablat,w,c
 21347  001838  D005               	bra	u15400
 21348  00183A                     u15407:
 21349  00183A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21350  00183E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21351  001842  50E7               	movf	indf1,w,c
 21352  001844                     u15400:
 21353  001844  6EDF               	movwf	indf2,c
 21354                           
 21355                           ;SDCard.c: 373: dado++;
 21356  001846  4A10               	infsnz	monta_sd@dado^0,f,c
 21357  001848  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21358  00184A  2A14               	incf	monta_sd@i^0,f,c
 21359  00184C  0E03               	movlw	3
 21360  00184E  6414               	cpfsgt	monta_sd@i^0,c
 21361  001850  D7E3               	goto	l12872
 21362  001852  0012               	return	
 21363  001854                     l12880:
 21364                           
 21365                           ;SDCard.c: 378: for(i=0; i<6;i++)
 21366  001854  0E00               	movlw	0
 21367  001856  6E14               	movwf	monta_sd@i^0,c
 21368  001858                     l12886:
 21369                           
 21370                           ;SDCard.c: 379: {;SDCard.c: 380: if(*dado != ' ' && *dado != '\0')
 21371  001858  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21372  00185C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21373  001860  6AF8               	clrf	tblptru,c
 21374  001862  0E07               	movlw	(high __ramtop+-1)
 21375  001864  64F7               	cpfsgt	tblptrh,c
 21376  001866  D003               	bra	u15427
 21377  001868  0008               	tblrd		*
 21378  00186A  50F5               	movf	tablat,w,c
 21379  00186C  D005               	bra	u15420
 21380  00186E                     u15427:
 21381  00186E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21382  001872  CFF7 FFE2          	movff	tblptrh,fsr1h
 21383  001876  50E7               	movf	indf1,w,c
 21384  001878                     u15420:
 21385  001878  0A20               	xorlw	32
 21386  00187A  B4D8               	btfsc	status,2,c
 21387  00187C  D02A               	goto	l12892
 21388  00187E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21389  001882  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21390  001886  6AF8               	clrf	tblptru,c
 21391  001888  0E07               	movlw	(high __ramtop+-1)
 21392  00188A  64F7               	cpfsgt	tblptrh,c
 21393  00188C  D003               	bra	u15447
 21394  00188E  0008               	tblrd		*
 21395  001890  50F5               	movf	tablat,w,c
 21396  001892  D005               	bra	u15440
 21397  001894                     u15447:
 21398  001894  CFF6 FFE1          	movff	tblptrl,fsr1l
 21399  001898  CFF7 FFE2          	movff	tblptrh,fsr1h
 21400  00189C  50E7               	movf	indf1,w,c
 21401  00189E                     u15440:
 21402  00189E  0900               	iorlw	0
 21403  0018A0  B4D8               	btfsc	status,2,c
 21404  0018A2  D017               	goto	l12892
 21405                           
 21406                           ;SDCard.c: 381: {;SDCard.c: 382: vel[i] = *dado;
 21407  0018A4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21408  0018A8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21409  0018AC  6AF8               	clrf	tblptru,c
 21410  0018AE  0EDE               	movlw	low _vel
 21411  0018B0  2414               	addwf	monta_sd@i^0,w,c
 21412  0018B2  6ED9               	movwf	fsr2l,c
 21413  0018B4  6ADA               	clrf	fsr2h,c
 21414  0018B6  0E01               	movlw	high _vel
 21415  0018B8  22DA               	addwfc	fsr2h,f,c
 21416  0018BA  0E07               	movlw	(high __ramtop+-1)
 21417  0018BC  64F7               	cpfsgt	tblptrh,c
 21418  0018BE  D003               	bra	u15467
 21419  0018C0  0008               	tblrd		*
 21420  0018C2  50F5               	movf	tablat,w,c
 21421  0018C4  D005               	bra	u15460
 21422  0018C6                     u15467:
 21423  0018C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21424  0018CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21425  0018CE  50E7               	movf	indf1,w,c
 21426  0018D0                     u15460:
 21427  0018D0  6EDF               	movwf	indf2,c
 21428  0018D2                     l12892:
 21429                           
 21430                           ;SDCard.c: 383: };SDCard.c: 385: dado++;
 21431  0018D2  4A10               	infsnz	monta_sd@dado^0,f,c
 21432  0018D4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21433  0018D6  2A14               	incf	monta_sd@i^0,f,c
 21434  0018D8  0E05               	movlw	5
 21435  0018DA  6414               	cpfsgt	monta_sd@i^0,c
 21436  0018DC  D7BD               	goto	l12886
 21437  0018DE  0012               	return	
 21438  0018E0                     l12900:
 21439  0018E0  5013               	movf	monta_sd@index^0,w,c
 21440                           
 21441                           ; Switch size 1, requested type "simple"
 21442                           ; Number of cases is 8, Range of values is 0 to 7
 21443                           ; switch strategies available:
 21444                           ; Name         Instructions Cycles
 21445                           ; simple_byte           25    13 (average)
 21446                           ;	Chosen strategy is simple_byte
 21447  0018E2  0A00               	xorlw	0	; case 0
 21448  0018E4  B4D8               	btfsc	status,2,c
 21449  0018E6  D697               	goto	l12786
 21450  0018E8  0A01               	xorlw	1	; case 1
 21451  0018EA  B4D8               	btfsc	status,2,c
 21452  0018EC  D6C7               	goto	l12802
 21453  0018EE  0A03               	xorlw	3	; case 2
 21454  0018F0  B4D8               	btfsc	status,2,c
 21455  0018F2  D6F7               	goto	l12818
 21456  0018F4  0A01               	xorlw	1	; case 3
 21457  0018F6  B4D8               	btfsc	status,2,c
 21458  0018F8  D727               	goto	l12834
 21459  0018FA  0A07               	xorlw	7	; case 4
 21460  0018FC  B4D8               	btfsc	status,2,c
 21461  0018FE  D757               	goto	l12850
 21462  001900  0A01               	xorlw	1	; case 5
 21463  001902  B4D8               	btfsc	status,2,c
 21464  001904  D767               	goto	l12852
 21465  001906  0A03               	xorlw	3	; case 6
 21466  001908  B4D8               	btfsc	status,2,c
 21467  00190A  D784               	goto	l12866
 21468  00190C  0A01               	xorlw	1	; case 7
 21469  00190E  A4D8               	btfss	status,2,c
 21470  001910  0012               	return	
 21471  001912  D7A0               	goto	l12880
 21472  001914                     __end_of_monta_sd:
 21473                           	callstack 0
 21474                           
 21475 ;; *************** function _strlen *****************
 21476 ;; Defined at:
 21477 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21478 ;; Parameters:    Size  Location     Type
 21479 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21480 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21481 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21482 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21483 ;; Auto vars:     Size  Location     Type
 21484 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21485 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21486 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21487 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21488 ;; Return value:  Size  Location     Type
 21489 ;;                  2    9[COMRAM] unsigned int 
 21490 ;; Registers used:
 21491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21492 ;; Tracked objects:
 21493 ;;		On entry : 0/2
 21494 ;;		On exit  : 0/0
 21495 ;;		Unchanged: 0/0
 21496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21497 ;;      Params:         2       0       0       0       0       0       0       0       0
 21498 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21500 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21501 ;;Total ram usage:        4 bytes
 21502 ;; Hardware stack levels used:    1
 21503 ;; Hardware stack levels required when called:    2
 21504 ;; This function calls:
 21505 ;;		Nothing
 21506 ;; This function is called by:
 21507 ;;		_monta_sd
 21508 ;; This function uses a non-reentrant model
 21509 ;;
 21510                           
 21511                           	psect	text128
 21512  0054EE                     __ptext128:
 21513                           	callstack 0
 21514  0054EE                     _strlen:
 21515                           	callstack 24
 21516                           
 21517                           ;incstack = 0
 21518  0054EE  C00A  F00C         	movff	strlen@s,strlen@cp
 21519  0054F2  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21520  0054F6  D002               	goto	l12642
 21521  0054F8                     l12640:
 21522  0054F8  4A0C               	infsnz	strlen@cp^0,f,c
 21523  0054FA  2A0D               	incf	(strlen@cp+1)^0,f,c
 21524  0054FC                     l12642:
 21525  0054FC  C00C  FFF6         	movff	strlen@cp,tblptrl
 21526  005500  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21527  005504  6AF8               	clrf	tblptru,c
 21528  005506  0E07               	movlw	(high __ramtop+-1)
 21529  005508  64F7               	cpfsgt	tblptrh,c
 21530  00550A  D003               	bra	u14937
 21531  00550C  0008               	tblrd		*
 21532  00550E  50F5               	movf	tablat,w,c
 21533  005510  D005               	bra	u14930
 21534  005512                     u14937:
 21535  005512  CFF6 FFE1          	movff	tblptrl,fsr1l
 21536  005516  CFF7 FFE2          	movff	tblptrh,fsr1h
 21537  00551A  50E7               	movf	indf1,w,c
 21538  00551C                     u14930:
 21539  00551C  0900               	iorlw	0
 21540  00551E  A4D8               	btfss	status,2,c
 21541  005520  D7EB               	goto	l12640
 21542  005522  500A               	movf	strlen@s^0,w,c
 21543  005524  5C0C               	subwf	strlen@cp^0,w,c
 21544  005526  6E0A               	movwf	?_strlen^0,c
 21545  005528  500B               	movf	(strlen@s+1)^0,w,c
 21546  00552A  580D               	subwfb	(strlen@cp+1)^0,w,c
 21547  00552C  6E0B               	movwf	(?_strlen+1)^0,c
 21548  00552E  0012               	return		;funcret
 21549  005530                     __end_of_strlen:
 21550                           	callstack 0
 21551                           
 21552 ;; *************** function _atoi *****************
 21553 ;; Defined at:
 21554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21555 ;; Parameters:    Size  Location     Type
 21556 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21557 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21558 ;; Auto vars:     Size  Location     Type
 21559 ;;  a               2   21[COMRAM] int 
 21560 ;;  sign            1   20[COMRAM] unsigned char 
 21561 ;; Return value:  Size  Location     Type
 21562 ;;                  2   15[COMRAM] int 
 21563 ;; Registers used:
 21564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21565 ;; Tracked objects:
 21566 ;;		On entry : 0/0
 21567 ;;		On exit  : 0/0
 21568 ;;		Unchanged: 0/0
 21569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21570 ;;      Params:         3       0       0       0       0       0       0       0       0
 21571 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21572 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21573 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21574 ;;Total ram usage:        8 bytes
 21575 ;; Hardware stack levels used:    1
 21576 ;; Hardware stack levels required when called:    3
 21577 ;; This function calls:
 21578 ;;		___wmul
 21579 ;;		_isdigit
 21580 ;; This function is called by:
 21581 ;;		_verifica_dados_operacionais
 21582 ;;		_disparo_gravacao
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           	psect	text129
 21587  003200                     __ptext129:
 21588                           	callstack 0
 21589  003200                     _atoi:
 21590                           	callstack 25
 21591                           
 21592                           ;incstack = 0
 21593  003200  D006               	goto	l13218
 21594  003202                     l13216:
 21595  003202  0E01               	movlw	1
 21596  003204  2610               	addwf	atoi@s^0,f,c
 21597  003206  0E00               	movlw	0
 21598  003208  2211               	addwfc	(atoi@s+1)^0,f,c
 21599  00320A  0E00               	movlw	0
 21600  00320C  2212               	addwfc	(atoi@s+2)^0,f,c
 21601  00320E                     l13218:
 21602  00320E  C010  FFF6         	movff	atoi@s,tblptrl
 21603  003212  C011  FFF7         	movff	atoi@s+1,tblptrh
 21604  003216  C012  FFF8         	movff	atoi@s+2,tblptru
 21605  00321A  BAF8               	btfsc	tblptru,5,c
 21606  00321C  D003               	bra	u15917
 21607  00321E  0008               	tblrd		*
 21608  003220  50F5               	movf	tablat,w,c
 21609  003222  D005               	bra	u15910
 21610  003224                     u15917:
 21611  003224  CFF6 FFE1          	movff	tblptrl,fsr1l
 21612  003228  CFF7 FFE2          	movff	tblptrh,fsr1h
 21613  00322C  50E7               	movf	indf1,w,c
 21614  00322E                     u15910:
 21615  00322E  0A20               	xorlw	32
 21616  003230  B4D8               	btfsc	status,2,c
 21617  003232  D7E7               	goto	l13216
 21618  003234  C010  FFF6         	movff	atoi@s,tblptrl
 21619  003238  C011  FFF7         	movff	atoi@s+1,tblptrh
 21620  00323C  C012  FFF8         	movff	atoi@s+2,tblptru
 21621  003240  BAF8               	btfsc	tblptru,5,c
 21622  003242  D003               	bra	u15937
 21623  003244  0008               	tblrd		*
 21624  003246  50F5               	movf	tablat,w,c
 21625  003248  D005               	bra	u15930
 21626  00324A                     u15937:
 21627  00324A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21628  00324E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21629  003252  50E7               	movf	indf1,w,c
 21630  003254                     u15930:
 21631  003254  0A09               	xorlw	9
 21632  003256  B4D8               	btfsc	status,2,c
 21633  003258  D7D4               	goto	l13216
 21634  00325A  0E00               	movlw	0
 21635  00325C  6E17               	movwf	(atoi@a+1)^0,c
 21636  00325E  0E00               	movlw	0
 21637  003260  6E16               	movwf	atoi@a^0,c
 21638  003262  0E00               	movlw	0
 21639  003264  6E15               	movwf	atoi@sign^0,c
 21640  003266  C010  FFF6         	movff	atoi@s,tblptrl
 21641  00326A  C011  FFF7         	movff	atoi@s+1,tblptrh
 21642  00326E  C012  FFF8         	movff	atoi@s+2,tblptru
 21643  003272  BAF8               	btfsc	tblptru,5,c
 21644  003274  D003               	bra	u15957
 21645  003276  0008               	tblrd		*
 21646  003278  50F5               	movf	tablat,w,c
 21647  00327A  D005               	bra	u15950
 21648  00327C                     u15957:
 21649  00327C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21650  003280  CFF7 FFE2          	movff	tblptrh,fsr1h
 21651  003284  50E7               	movf	indf1,w,c
 21652  003286                     u15950:
 21653  003286  0A2D               	xorlw	45
 21654  003288  A4D8               	btfss	status,2,c
 21655  00328A  D008               	goto	l13230
 21656  00328C  2A15               	incf	atoi@sign^0,f,c
 21657  00328E                     l13228:
 21658  00328E  0E01               	movlw	1
 21659  003290  2610               	addwf	atoi@s^0,f,c
 21660  003292  0E00               	movlw	0
 21661  003294  2211               	addwfc	(atoi@s+1)^0,f,c
 21662  003296  0E00               	movlw	0
 21663  003298  2212               	addwfc	(atoi@s+2)^0,f,c
 21664  00329A  D03A               	goto	l13238
 21665  00329C                     l13230:
 21666  00329C  C010  FFF6         	movff	atoi@s,tblptrl
 21667  0032A0  C011  FFF7         	movff	atoi@s+1,tblptrh
 21668  0032A4  C012  FFF8         	movff	atoi@s+2,tblptru
 21669  0032A8  BAF8               	btfsc	tblptru,5,c
 21670  0032AA  D003               	bra	u15977
 21671  0032AC  0008               	tblrd		*
 21672  0032AE  50F5               	movf	tablat,w,c
 21673  0032B0  D005               	bra	u15970
 21674  0032B2                     u15977:
 21675  0032B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21676  0032B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21677  0032BA  50E7               	movf	indf1,w,c
 21678  0032BC                     u15970:
 21679  0032BC  0A2B               	xorlw	43
 21680  0032BE  B4D8               	btfsc	status,2,c
 21681  0032C0  D7E6               	goto	l13228
 21682  0032C2  D026               	goto	l13238
 21683  0032C4                     l13234:
 21684  0032C4  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21685  0032C8  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21686  0032CC  0E00               	movlw	0
 21687  0032CE  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21688  0032D0  0E0A               	movlw	10
 21689  0032D2  6E0C               	movwf	___wmul@multiplicand^0,c
 21690  0032D4  EC9B  F02C         	call	___wmul	;wreg free
 21691  0032D8  C010  FFF6         	movff	atoi@s,tblptrl
 21692  0032DC  C011  FFF7         	movff	atoi@s+1,tblptrh
 21693  0032E0  C012  FFF8         	movff	atoi@s+2,tblptru
 21694  0032E4  BAF8               	btfsc	tblptru,5,c
 21695  0032E6  D003               	bra	u15997
 21696  0032E8  0008               	tblrd		*
 21697  0032EA  50F5               	movf	tablat,w,c
 21698  0032EC  D005               	bra	u15990
 21699  0032EE                     u15997:
 21700  0032EE  CFF6 FFE1          	movff	tblptrl,fsr1l
 21701  0032F2  CFF7 FFE2          	movff	tblptrh,fsr1h
 21702  0032F6  50E7               	movf	indf1,w,c
 21703  0032F8                     u15990:
 21704  0032F8  6E13               	movwf	??_atoi^0,c
 21705  0032FA  5013               	movf	??_atoi^0,w,c
 21706  0032FC  260A               	addwf	?___wmul^0,f,c
 21707  0032FE  0E00               	movlw	0
 21708  003300  220B               	addwfc	(?___wmul+1)^0,f,c
 21709  003302  0ED0               	movlw	208
 21710  003304  240A               	addwf	?___wmul^0,w,c
 21711  003306  6E16               	movwf	atoi@a^0,c
 21712  003308  0EFF               	movlw	255
 21713  00330A  200B               	addwfc	(?___wmul+1)^0,w,c
 21714  00330C  6E17               	movwf	(atoi@a+1)^0,c
 21715  00330E  D7BF               	goto	l13228
 21716  003310                     l13238:
 21717  003310  C010  FFF6         	movff	atoi@s,tblptrl
 21718  003314  C011  FFF7         	movff	atoi@s+1,tblptrh
 21719  003318  C012  FFF8         	movff	atoi@s+2,tblptru
 21720  00331C  BAF8               	btfsc	tblptru,5,c
 21721  00331E  D003               	bra	u16007
 21722  003320  0008               	tblrd		*
 21723  003322  50F5               	movf	tablat,w,c
 21724  003324  D005               	bra	u16000
 21725  003326                     u16007:
 21726  003326  CFF6 FFE1          	movff	tblptrl,fsr1l
 21727  00332A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21728  00332E  50E7               	movf	indf1,w,c
 21729  003330                     u16000:
 21730  003330  EC76  F02D         	call	_isdigit
 21731  003334  B0D8               	btfsc	status,0,c
 21732  003336  D7C6               	goto	l13234
 21733  003338  5015               	movf	atoi@sign^0,w,c
 21734  00333A  B4D8               	btfsc	status,2,c
 21735  00333C  D00D               	goto	l2422
 21736  00333E  C016  F013         	movff	atoi@a,??_atoi
 21737  003342  C017  F014         	movff	atoi@a+1,??_atoi+1
 21738  003346  1E13               	comf	??_atoi^0,f,c
 21739  003348  1E14               	comf	(??_atoi+1)^0,f,c
 21740  00334A  4A13               	infsnz	??_atoi^0,f,c
 21741  00334C  2A14               	incf	(??_atoi+1)^0,f,c
 21742  00334E  C013  F010         	movff	??_atoi,?_atoi
 21743  003352  C014  F011         	movff	??_atoi+1,?_atoi+1
 21744  003356  0012               	return	
 21745  003358                     l2422:
 21746  003358  C016  F010         	movff	atoi@a,?_atoi
 21747  00335C  C017  F011         	movff	atoi@a+1,?_atoi+1
 21748  003360  0012               	return		;funcret
 21749  003362                     __end_of_atoi:
 21750                           	callstack 0
 21751                           
 21752 ;; *************** function _isdigit *****************
 21753 ;; Defined at:
 21754 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21755 ;; Parameters:    Size  Location     Type
 21756 ;;  c               1    wreg     unsigned char 
 21757 ;; Auto vars:     Size  Location     Type
 21758 ;;  c               1   11[COMRAM] unsigned char 
 21759 ;; Return value:  Size  Location     Type
 21760 ;;		None               void
 21761 ;; Registers used:
 21762 ;;		wreg, status,2, status,0
 21763 ;; Tracked objects:
 21764 ;;		On entry : 0/0
 21765 ;;		On exit  : 0/0
 21766 ;;		Unchanged: 0/0
 21767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21768 ;;      Params:         0       0       0       0       0       0       0       0       0
 21769 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21770 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21771 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21772 ;;Total ram usage:        3 bytes
 21773 ;; Hardware stack levels used:    1
 21774 ;; Hardware stack levels required when called:    2
 21775 ;; This function calls:
 21776 ;;		Nothing
 21777 ;; This function is called by:
 21778 ;;		_atoi
 21779 ;;		_atol
 21780 ;; This function uses a non-reentrant model
 21781 ;;
 21782                           
 21783                           	psect	text130
 21784  005AEC                     __ptext130:
 21785                           	callstack 0
 21786  005AEC                     _isdigit:
 21787                           	callstack 20
 21788                           
 21789                           ;incstack = 0
 21790                           ;isdigit@c stored from wreg
 21791  005AEC  6E0C               	movwf	isdigit@c^0,c
 21792  005AEE  0E00               	movlw	0
 21793  005AF0  6E0B               	movwf	_isdigit$3275^0,c
 21794  005AF2  0E3A               	movlw	58
 21795  005AF4  600C               	cpfslt	isdigit@c^0,c
 21796  005AF6  D005               	goto	l10932
 21797  005AF8  0E2F               	movlw	47
 21798  005AFA  640C               	cpfsgt	isdigit@c^0,c
 21799  005AFC  D002               	goto	l10932
 21800  005AFE  0E01               	movlw	1
 21801  005B00  6E0B               	movwf	_isdigit$3275^0,c
 21802  005B02                     l10932:
 21803  005B02  C00B  F00A         	movff	_isdigit$3275,??_isdigit
 21804  005B06  300A               	rrcf	??_isdigit^0,w,c
 21805  005B08  0012               	return		;funcret
 21806  005B0A                     __end_of_isdigit:
 21807                           	callstack 0
 21808                           
 21809 ;; *************** function ___wmul *****************
 21810 ;; Defined at:
 21811 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21812 ;; Parameters:    Size  Location     Type
 21813 ;;  multiplier      2    9[COMRAM] unsigned int 
 21814 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21815 ;; Auto vars:     Size  Location     Type
 21816 ;;  product         2   13[COMRAM] unsigned int 
 21817 ;; Return value:  Size  Location     Type
 21818 ;;                  2    9[COMRAM] unsigned int 
 21819 ;; Registers used:
 21820 ;;		wreg, status,2, status,0, prodl, prodh
 21821 ;; Tracked objects:
 21822 ;;		On entry : 0/2
 21823 ;;		On exit  : 0/0
 21824 ;;		Unchanged: 0/0
 21825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21826 ;;      Params:         4       0       0       0       0       0       0       0       0
 21827 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21829 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21830 ;;Total ram usage:        6 bytes
 21831 ;; Hardware stack levels used:    1
 21832 ;; Hardware stack levels required when called:    2
 21833 ;; This function calls:
 21834 ;;		Nothing
 21835 ;; This function is called by:
 21836 ;;		_get_cluster
 21837 ;;		_put_cluster
 21838 ;;		_fprintf
 21839 ;;		_atoi
 21840 ;;		_disparo_gravacao
 21841 ;; This function uses a non-reentrant model
 21842 ;;
 21843                           
 21844                           	psect	text131
 21845  005936                     __ptext131:
 21846                           	callstack 0
 21847  005936                     ___wmul:
 21848                           	callstack 25
 21849                           
 21850                           ;incstack = 0
 21851  005936  500A               	movf	___wmul@multiplier^0,w,c
 21852  005938  020C               	mulwf	___wmul@multiplicand^0,c
 21853  00593A  CFF3 F00E          	movff	prodl,___wmul@product
 21854  00593E  CFF4 F00F          	movff	prodh,___wmul@product+1
 21855  005942  500A               	movf	___wmul@multiplier^0,w,c
 21856  005944  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21857  005946  50F3               	movf	243,w,c
 21858  005948  260F               	addwf	(___wmul@product+1)^0,f,c
 21859  00594A  500B               	movf	(___wmul@multiplier+1)^0,w,c
 21860  00594C  020C               	mulwf	___wmul@multiplicand^0,c
 21861  00594E  50F3               	movf	243,w,c
 21862  005950  260F               	addwf	(___wmul@product+1)^0,f,c
 21863  005952  C00E  F00A         	movff	___wmul@product,?___wmul
 21864  005956  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 21865  00595A  0012               	return		;funcret
 21866  00595C                     __end_of___wmul:
 21867                           	callstack 0
 21868                           
 21869 ;; *************** function _isr *****************
 21870 ;; Defined at:
 21871 ;;		line 113 in file "main.c"
 21872 ;; Parameters:    Size  Location     Type
 21873 ;;		None
 21874 ;; Auto vars:     Size  Location     Type
 21875 ;;  cont            1    8[COMRAM] unsigned char 
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  1    wreg      void 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21880 ;; Tracked objects:
 21881 ;;		On entry : 0/0
 21882 ;;		On exit  : 0/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0
 21886 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21887 ;;      Temps:          6       0       0       0       0       0       0       0       0
 21888 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21889 ;;Total ram usage:        7 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:    1
 21892 ;; This function calls:
 21893 ;;		_recebe_dado_uart
 21894 ;;		_tratamento_uart
 21895 ;;		i2_write_timer_zero
 21896 ;; This function is called by:
 21897 ;;		Interrupt level 2
 21898 ;; This function uses a non-reentrant model
 21899 ;;
 21900                           
 21901                           	psect	intcode
 21902  000008                     __pintcode:
 21903                           	callstack 0
 21904  000008                     _isr:
 21905                           	callstack 13
 21906                           
 21907                           ;incstack = 0
 21908  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21909  00000A  EDE6  F01E         	call	int_func,f	;refresh shadow registers
 21910                           
 21911                           	psect	intcode_body
 21912  003DCC                     __pintcode_body:
 21913                           	callstack 13
 21914  003DCC                     int_func:
 21915                           	callstack 13
 21916  003DCC  0006               	pop		; remove dummy address from shadow register refresh
 21917  003DCE  CFD9 F005          	movff	fsr2l,??_isr+2
 21918  003DD2  CFDA F006          	movff	fsr2h,??_isr+3
 21919  003DD6  CFF3 F007          	movff	prodl,??_isr+4
 21920  003DDA  CFF4 F008          	movff	prodh,??_isr+5
 21921                           
 21922                           ;main.c: 115: unsigned char cont;;main.c: 118: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21923  003DDE  BA9D               	btfsc	157,5,c	;volatile
 21924  003DE0  AA9E               	btfss	158,5,c	;volatile
 21925  003DE2  D015               	goto	i2l10092
 21926                           
 21927                           ;main.c: 119: {;main.c: 120: PIR1bits.RCIF = 0;
 21928  003DE4  9A9E               	bcf	158,5,c	;volatile
 21929                           
 21930                           ;main.c: 121: data_uart_recebe = recebe_dado_uart();
 21931  003DE6  ECCA  F02D         	call	_recebe_dado_uart	;wreg free
 21932  003DEA  0100               	movlb	0	; () banked
 21933  003DEC  6FF3               	movwf	_data_uart_recebe& (0+255),b
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;main.c: 122: tratamento_uart(data_uart_recebe);
 21937  003DEE  51F3               	movf	_data_uart_recebe& (0+255),w,b
 21938  003DF0  EC5F  F01D         	call	_tratamento_uart
 21939                           
 21940                           ;main.c: 123: PORTBbits.RB2 = !PORTBbits.RB2;
 21941  003DF4  B481               	btfsc	129,2,c	;volatile
 21942  003DF6  D003               	goto	i2u1117_40
 21943  003DF8  6A03               	clrf	??_isr^0,c
 21944  003DFA  2A03               	incf	??_isr^0,f,c
 21945  003DFC  D001               	goto	i2u1118_48
 21946  003DFE                     i2u1117_40:
 21947  003DFE  6A03               	clrf	??_isr^0,c
 21948  003E00                     i2u1118_48:
 21949  003E00  4603               	rlncf	??_isr^0,f,c
 21950  003E02  4603               	rlncf	??_isr^0,f,c
 21951  003E04  5081               	movf	129,w,c	;volatile
 21952  003E06  1803               	xorwf	??_isr^0,w,c
 21953  003E08  0BFB               	andlw	-5
 21954  003E0A  1803               	xorwf	??_isr^0,w,c
 21955  003E0C  6E81               	movwf	129,c	;volatile
 21956  003E0E                     i2l10092:
 21957                           
 21958                           ;main.c: 124: };main.c: 127: unsigned char cont;;main.c: 129: if (TMR0IF && T0IF)
 21959  003E0E  B4F2               	btfsc	4082,2,c	;volatile
 21960  003E10  A4F2               	btfss	4082,2,c	;volatile
 21961  003E12  D046               	goto	i2l10130
 21962                           
 21963                           ;main.c: 130: {;main.c: 131: INTCONbits.TMR0IF = 0;
 21964  003E14  94F2               	bcf	242,2,c	;volatile
 21965                           
 21966                           ;main.c: 132: sinaliza_int_timer = 1;
 21967  003E16  0E01               	movlw	1
 21968  003E18  0100               	movlb	0	; () banked
 21969  003E1A  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
 21970                           
 21971                           ;main.c: 134: for(cont= 0; cont<3;cont++)
 21972  003E1C  0E00               	movlw	0
 21973  003E1E  6E09               	movwf	isr@cont^0,c
 21974  003E20                     i2l10104:
 21975                           
 21976                           ;main.c: 135: {;main.c: 136: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21977  003E20  5009               	movf	isr@cont^0,w,c
 21978  003E22  0D02               	mullw	2
 21979  003E24  0E2D               	movlw	low _tempo_tarefa
 21980  003E26  24F3               	addwf	243,w,c
 21981  003E28  6ED9               	movwf	fsr2l,c
 21982  003E2A  0E01               	movlw	high _tempo_tarefa
 21983  003E2C  20F4               	addwfc	prodh,w,c
 21984  003E2E  6EDA               	movwf	fsr2h,c
 21985  003E30  50DE               	movf	postinc2,w,c
 21986  003E32  10DE               	iorwf	postinc2,w,c
 21987  003E34  B4D8               	btfsc	status,2,c
 21988  003E36  D00B               	goto	i2l10108
 21989  003E38  5009               	movf	isr@cont^0,w,c
 21990  003E3A  0D02               	mullw	2
 21991  003E3C  0E2D               	movlw	low _tempo_tarefa
 21992  003E3E  24F3               	addwf	243,w,c
 21993  003E40  6ED9               	movwf	fsr2l,c
 21994  003E42  0E01               	movlw	high _tempo_tarefa
 21995  003E44  20F4               	addwfc	prodh,w,c
 21996  003E46  6EDA               	movwf	fsr2h,c
 21997  003E48  06DE               	decf	postinc2,f,c
 21998  003E4A  0E00               	movlw	0
 21999  003E4C  5ADD               	subwfb	postdec2,f,c
 22000  003E4E                     i2l10108:
 22001  003E4E  2A09               	incf	isr@cont^0,f,c
 22002  003E50  0E02               	movlw	2
 22003  003E52  6409               	cpfsgt	isr@cont^0,c
 22004  003E54  D7E5               	goto	i2l10104
 22005                           
 22006                           ;main.c: 138: };main.c: 139: if(time_sd > 0) time_sd--;
 22007  003E56  0101               	movlb	1	; () banked
 22008  003E58  516E               	movf	_time_sd& (0+255),w,b
 22009  003E5A  116F               	iorwf	(_time_sd+1)& (0+255),w,b
 22010  003E5C  B4D8               	btfsc	status,2,c
 22011  003E5E  D003               	goto	i2l10116
 22012                           
 22013                           ; BSR set to: 1
 22014  003E60  076E               	decf	_time_sd& (0+255),f,b
 22015  003E62  A0D8               	btfss	status,0,c
 22016  003E64  076F               	decf	(_time_sd+1)& (0+255),f,b
 22017  003E66                     i2l10116:
 22018                           
 22019                           ; BSR set to: 1
 22020                           ;main.c: 140: if(time_atualizacao > 0) time_atualizacao--;
 22021  003E66  0100               	movlb	0	; () banked
 22022  003E68  51EA               	movf	_time_atualizacao& (0+255),w,b
 22023  003E6A  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22024  003E6C  B4D8               	btfsc	status,2,c
 22025  003E6E  D003               	goto	i2l10120
 22026                           
 22027                           ; BSR set to: 0
 22028  003E70  07EA               	decf	_time_atualizacao& (0+255),f,b
 22029  003E72  A0D8               	btfss	status,0,c
 22030  003E74  07EB               	decf	(_time_atualizacao+1)& (0+255),f,b
 22031  003E76                     i2l10120:
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;main.c: 142: if(tarefa_em_execucao == 1)
 22035  003E76  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22036  003E78  A4D8               	btfss	status,2,c
 22037  003E7A  D00C               	goto	i2l10128
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;main.c: 143: {;main.c: 144: timeout_tarefa--;
 22041  003E7C  0101               	movlb	1	; () banked
 22042  003E7E  0770               	decf	_timeout_tarefa& (0+255),f,b
 22043  003E80  A0D8               	btfss	status,0,c
 22044  003E82  0771               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22045                           
 22046                           ; BSR set to: 1
 22047                           ;main.c: 145: if(!timeout_tarefa)
 22048  003E84  5170               	movf	_timeout_tarefa& (0+255),w,b
 22049  003E86  1171               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22050  003E88  A4D8               	btfss	status,2,c
 22051  003E8A  D004               	goto	i2l10128
 22052                           
 22053                           ; BSR set to: 1
 22054                           ;main.c: 146: {;main.c: 148: PCLATH = 0;
 22055  003E8C  0E00               	movlw	0
 22056  003E8E  6EFA               	movwf	250,c	;volatile
 22057                           
 22058                           ;main.c: 149: PCL = 0;
 22059  003E90  0E00               	movlw	0
 22060  003E92  6EF9               	movwf	249,c	;volatile
 22061  003E94                     i2l10128:
 22062                           
 22063                           ;main.c: 150: };main.c: 151: };main.c: 155: write_timer_zero(0x45);
 22064  003E94  0E00               	movlw	0
 22065  003E96  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22066  003E98  0E45               	movlw	69
 22067  003E9A  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22068  003E9C  EC2E  F02E         	call	i2_write_timer_zero	;wreg free
 22069  003EA0                     i2l10130:
 22070                           
 22071                           ;main.c: 156: };main.c: 158: if (INT0IF && INT0IE)
 22072  003EA0  B2F2               	btfsc	4082,1,c	;volatile
 22073  003EA2  A8F2               	btfss	4082,4,c	;volatile
 22074  003EA4  D001               	goto	i2l1545
 22075                           
 22076                           ;main.c: 159: {;main.c: 160: INT0IF = 0;
 22077  003EA6  92F2               	bcf	4082,1,c	;volatile
 22078  003EA8                     i2l1545:
 22079  003EA8  C008  FFF4         	movff	??_isr+5,prodh
 22080  003EAC  C007  FFF3         	movff	??_isr+4,prodl
 22081  003EB0  C006  FFDA         	movff	??_isr+3,fsr2h
 22082  003EB4  C005  FFD9         	movff	??_isr+2,fsr2l
 22083  003EB8  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22084  003EBA  0011               	retfie		f
 22085  003EBC                     __end_of_isr:
 22086                           	callstack 0
 22087                           
 22088 ;; *************** function i2_write_timer_zero *****************
 22089 ;; Defined at:
 22090 ;;		line 134 in file "bibliotecas/hardware.c"
 22091 ;; Parameters:    Size  Location     Type
 22092 ;;  timer0          2    0[COMRAM] unsigned int 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;		None
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1    wreg      void 
 22097 ;; Registers used:
 22098 ;;		None
 22099 ;; Tracked objects:
 22100 ;;		On entry : 3E/0
 22101 ;;		On exit  : 3E/0
 22102 ;;		Unchanged: 3E/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22104 ;;      Params:         2       0       0       0       0       0       0       0       0
 22105 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22107 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22108 ;;Total ram usage:        2 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; This function calls:
 22111 ;;		Nothing
 22112 ;; This function is called by:
 22113 ;;		_isr
 22114 ;; This function uses a non-reentrant model
 22115 ;;
 22116                           
 22117                           	psect	text133
 22118  005C5C                     __ptext133:
 22119                           	callstack 0
 22120  005C5C                     i2_write_timer_zero:
 22121                           	callstack 13
 22122                           
 22123                           ;hardware.c: 142: TMR0 = timer0;
 22124                           
 22125                           ;incstack = 0
 22126  005C5C  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22127  005C60  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22128  005C64  0012               	return		;funcret
 22129  005C66                     __end_ofi2_write_timer_zero:
 22130                           	callstack 0
 22131                           
 22132 ;; *************** function _tratamento_uart *****************
 22133 ;; Defined at:
 22134 ;;		line 347 in file "bibliotecas/GPS.c"
 22135 ;; Parameters:    Size  Location     Type
 22136 ;;  received_cha    1    wreg     unsigned char 
 22137 ;; Auto vars:     Size  Location     Type
 22138 ;;  received_cha    1    0[COMRAM] unsigned char 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  1    wreg      void 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22143 ;; Tracked objects:
 22144 ;;		On entry : 3F/0
 22145 ;;		On exit  : 3E/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22148 ;;      Params:         0       0       0       0       0       0       0       0       0
 22149 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22151 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22152 ;;Total ram usage:        1 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; This function calls:
 22155 ;;		Nothing
 22156 ;; This function is called by:
 22157 ;;		_isr
 22158 ;; This function uses a non-reentrant model
 22159 ;;
 22160                           
 22161                           	psect	text134
 22162  003ABE                     __ptext134:
 22163                           	callstack 0
 22164  003ABE                     _tratamento_uart:
 22165                           	callstack 13
 22166                           
 22167                           ;incstack = 0
 22168                           ;tratamento_uart@received_char stored from wreg
 22169  003ABE  6E01               	movwf	tratamento_uart@received_char^0,c
 22170                           
 22171                           ;GPS.c: 349: if(received_char =='$'){
 22172  003AC0  0E24               	movlw	36
 22173  003AC2  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22174  003AC4  A4D8               	btfss	status,2,c
 22175  003AC6  D011               	goto	i2l9880
 22176                           
 22177                           ;GPS.c: 350: gga_index = 0;
 22178  003AC8  0E00               	movlw	0
 22179  003ACA  0100               	movlb	0	; () banked
 22180  003ACC  6FEF               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22181  003ACE  0E00               	movlw	0
 22182  003AD0  6FEE               	movwf	_gga_index& (0+255),b	;volatile
 22183                           
 22184                           ;GPS.c: 351: rmc_index = 0;
 22185  003AD2  0E00               	movlw	0
 22186  003AD4  6FED               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22187  003AD6  0E00               	movlw	0
 22188  003AD8  6FEC               	movwf	_rmc_index& (0+255),b	;volatile
 22189                           
 22190                           ;GPS.c: 352: is_it_gga_string = 0;
 22191  003ADA  0E00               	movlw	0
 22192  003ADC  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22193                           
 22194                           ;GPS.c: 353: is_it_rmc_string = 0;
 22195  003ADE  0E00               	movlw	0
 22196  003AE0  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22197                           
 22198                           ;GPS.c: 354: comma_counter_gga = 0;
 22199  003AE2  0E00               	movlw	0
 22200  003AE4  6FF9               	movwf	_comma_counter_gga& (0+255),b
 22201                           
 22202                           ;GPS.c: 355: comma_counter_rmc = 0;
 22203  003AE6  0E00               	movlw	0
 22204  003AE8  6FF8               	movwf	_comma_counter_rmc& (0+255),b
 22205  003AEA                     i2l9880:
 22206                           
 22207                           ;GPS.c: 356: };GPS.c: 358: if(is_it_gga_string == 1)
 22208  003AEA  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22209  003AEC  A4D8               	btfss	status,2,c
 22210  003AEE  D01A               	goto	i2l9890
 22211                           
 22212                           ;GPS.c: 359: {;GPS.c: 360: if(received_char == ',' )
 22213  003AF0  0E2C               	movlw	44
 22214  003AF2  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22215  003AF4  A4D8               	btfss	status,2,c
 22216  003AF6  D00A               	goto	i2l9888
 22217                           
 22218                           ;GPS.c: 361: {;GPS.c: 362: gga_pointers[comma_counter_gga++] = gga_index;
 22219  003AF8  0E16               	movlw	low _gga_pointers
 22220  003AFA  0100               	movlb	0	; () banked
 22221  003AFC  25F9               	addwf	_comma_counter_gga& (0+255),w,b
 22222  003AFE  6ED9               	movwf	fsr2l,c
 22223  003B00  6ADA               	clrf	fsr2h,c
 22224  003B02  0E02               	movlw	high _gga_pointers
 22225  003B04  22DA               	addwfc	fsr2h,f,c
 22226  003B06  C0EE  FFDF         	movff	_gga_index,indf2	;volatile
 22227                           
 22228                           ; BSR set to: 0
 22229  003B0A  2BF9               	incf	_comma_counter_gga& (0+255),f,b
 22230  003B0C                     i2l9888:
 22231                           
 22232                           ;GPS.c: 363: };GPS.c: 364: gga_buffer[gga_index++] = received_char;
 22233  003B0C  0E00               	movlw	low _gga_buffer
 22234  003B0E  0100               	movlb	0	; () banked
 22235  003B10  25EE               	addwf	_gga_index& (0+255),w,b	;volatile
 22236  003B12  6ED9               	movwf	fsr2l,c
 22237  003B14  0E03               	movlw	high _gga_buffer
 22238  003B16  21EF               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22239  003B18  6EDA               	movwf	fsr2h,c
 22240  003B1A  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22241  003B1E  4BEE               	infsnz	_gga_index& (0+255),f,b	;volatile
 22242  003B20  2BEF               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22243                           
 22244                           ;GPS.c: 365: }
 22245  003B22  D01C               	goto	i2l9898
 22246  003B24                     i2l9890:
 22247                           
 22248                           ;GPS.c: 366: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22249  003B24  0E47               	movlw	71
 22250  003B26  0101               	movlb	1	; () banked
 22251  003B28  195C               	xorwf	_gga_code& (0+255),w,b
 22252  003B2A  A4D8               	btfss	status,2,c
 22253  003B2C  D011               	goto	i2l439
 22254                           
 22255                           ; BSR set to: 1
 22256  003B2E  0E47               	movlw	71
 22257  003B30  195D               	xorwf	(_gga_code+1)& (0+255),w,b
 22258  003B32  A4D8               	btfss	status,2,c
 22259  003B34  D00D               	goto	i2l439
 22260                           
 22261                           ; BSR set to: 1
 22262  003B36  0E41               	movlw	65
 22263  003B38  195E               	xorwf	(_gga_code+2)& (0+255),w,b
 22264  003B3A  A4D8               	btfss	status,2,c
 22265  003B3C  D009               	goto	i2l439
 22266                           
 22267                           ; BSR set to: 1
 22268                           ;GPS.c: 367: is_it_gga_string = 1;
 22269  003B3E  0E01               	movlw	1
 22270  003B40  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22271                           
 22272                           ;GPS.c: 368: gga_code[0] = 0;
 22273  003B42  0E00               	movlw	0
 22274  003B44  6F5C               	movwf	_gga_code& (0+255),b
 22275                           
 22276                           ;GPS.c: 369: gga_code[1] = 0;
 22277  003B46  0E00               	movlw	0
 22278  003B48  6F5D               	movwf	(_gga_code+1)& (0+255),b
 22279                           
 22280                           ;GPS.c: 370: gga_code[2] = 0;
 22281  003B4A  0E00               	movlw	0
 22282  003B4C  6F5E               	movwf	(_gga_code+2)& (0+255),b
 22283                           
 22284                           ;GPS.c: 371: }
 22285  003B4E  D006               	goto	i2l9898
 22286  003B50                     i2l439:
 22287                           
 22288                           ; BSR set to: 1
 22289                           ;GPS.c: 372: else{;GPS.c: 373: gga_code[0] = gga_code[1];
 22290  003B50  C15D  F15C         	movff	_gga_code+1,_gga_code
 22291                           
 22292                           ;GPS.c: 374: gga_code[1] = gga_code[2];
 22293  003B54  C15E  F15D         	movff	_gga_code+2,_gga_code+1
 22294                           
 22295                           ;GPS.c: 375: gga_code[2] = received_char;
 22296  003B58  C001  F15E         	movff	tratamento_uart@received_char,_gga_code+2
 22297  003B5C                     i2l9898:
 22298                           
 22299                           ;GPS.c: 376: };GPS.c: 378: if(is_it_rmc_string == 1)
 22300  003B5C  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22301  003B5E  A4D8               	btfss	status,2,c
 22302  003B60  D01A               	goto	i2l9908
 22303                           
 22304                           ;GPS.c: 379: {;GPS.c: 380: if(received_char == ',' )
 22305  003B62  0E2C               	movlw	44
 22306  003B64  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22307  003B66  A4D8               	btfss	status,2,c
 22308  003B68  D00A               	goto	i2l9906
 22309                           
 22310                           ;GPS.c: 381: {;GPS.c: 382: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22311  003B6A  0E2A               	movlw	low _rmc_pointers
 22312  003B6C  0100               	movlb	0	; () banked
 22313  003B6E  25F8               	addwf	_comma_counter_rmc& (0+255),w,b
 22314  003B70  6ED9               	movwf	fsr2l,c
 22315  003B72  6ADA               	clrf	fsr2h,c
 22316  003B74  0E02               	movlw	high _rmc_pointers
 22317  003B76  22DA               	addwfc	fsr2h,f,c
 22318  003B78  C0EC  FFDF         	movff	_rmc_index,indf2	;volatile
 22319                           
 22320                           ; BSR set to: 0
 22321  003B7C  2BF8               	incf	_comma_counter_rmc& (0+255),f,b
 22322  003B7E                     i2l9906:
 22323                           
 22324                           ;GPS.c: 383: };GPS.c: 384: rmc_buffer[rmc_index++] = received_char;
 22325  003B7E  0E50               	movlw	low _rmc_buffer
 22326  003B80  0100               	movlb	0	; () banked
 22327  003B82  25EC               	addwf	_rmc_index& (0+255),w,b	;volatile
 22328  003B84  6ED9               	movwf	fsr2l,c
 22329  003B86  0E03               	movlw	high _rmc_buffer
 22330  003B88  21ED               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22331  003B8A  6EDA               	movwf	fsr2h,c
 22332  003B8C  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22333  003B90  4BEC               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22334  003B92  2BED               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22335                           
 22336                           ;GPS.c: 385: }
 22337  003B94  0012               	return	
 22338  003B96                     i2l9908:
 22339                           
 22340                           ;GPS.c: 386: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22341  003B96  0E52               	movlw	82
 22342  003B98  0101               	movlb	1	; () banked
 22343  003B9A  1959               	xorwf	_rmc_code& (0+255),w,b
 22344  003B9C  A4D8               	btfss	status,2,c
 22345  003B9E  D011               	goto	i2l444
 22346                           
 22347                           ; BSR set to: 1
 22348  003BA0  0E4D               	movlw	77
 22349  003BA2  195A               	xorwf	(_rmc_code+1)& (0+255),w,b
 22350  003BA4  A4D8               	btfss	status,2,c
 22351  003BA6  D00D               	goto	i2l444
 22352                           
 22353                           ; BSR set to: 1
 22354  003BA8  0E43               	movlw	67
 22355  003BAA  195B               	xorwf	(_rmc_code+2)& (0+255),w,b
 22356  003BAC  A4D8               	btfss	status,2,c
 22357  003BAE  D009               	goto	i2l444
 22358                           
 22359                           ; BSR set to: 1
 22360                           ;GPS.c: 387: is_it_rmc_string = 1;
 22361  003BB0  0E01               	movlw	1
 22362  003BB2  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22363                           
 22364                           ;GPS.c: 388: rmc_code[0] = 0;
 22365  003BB4  0E00               	movlw	0
 22366  003BB6  6F59               	movwf	_rmc_code& (0+255),b
 22367                           
 22368                           ;GPS.c: 389: rmc_code[1] = 0;
 22369  003BB8  0E00               	movlw	0
 22370  003BBA  6F5A               	movwf	(_rmc_code+1)& (0+255),b
 22371                           
 22372                           ;GPS.c: 390: rmc_code[2] = 0;
 22373  003BBC  0E00               	movlw	0
 22374  003BBE  6F5B               	movwf	(_rmc_code+2)& (0+255),b
 22375                           
 22376                           ;GPS.c: 391: }
 22377  003BC0  0012               	return	
 22378  003BC2                     i2l444:
 22379                           
 22380                           ; BSR set to: 1
 22381                           ;GPS.c: 392: else{;GPS.c: 393: rmc_code[0] = rmc_code[1];
 22382  003BC2  C15A  F159         	movff	_rmc_code+1,_rmc_code
 22383                           
 22384                           ;GPS.c: 394: rmc_code[1] = rmc_code[2];
 22385  003BC6  C15B  F15A         	movff	_rmc_code+2,_rmc_code+1
 22386                           
 22387                           ;GPS.c: 395: rmc_code[2] = received_char;
 22388  003BCA  C001  F15B         	movff	tratamento_uart@received_char,_rmc_code+2
 22389  003BCE  0012               	return		;funcret
 22390  003BD0                     __end_of_tratamento_uart:
 22391                           	callstack 0
 22392                           
 22393 ;; *************** function _recebe_dado_uart *****************
 22394 ;; Defined at:
 22395 ;;		line 138 in file "bibliotecas/uart.c"
 22396 ;; Parameters:    Size  Location     Type
 22397 ;;		None
 22398 ;; Auto vars:     Size  Location     Type
 22399 ;;		None
 22400 ;; Return value:  Size  Location     Type
 22401 ;;                  1    wreg      unsigned char 
 22402 ;; Registers used:
 22403 ;;		wreg, status,2
 22404 ;; Tracked objects:
 22405 ;;		On entry : 0/0
 22406 ;;		On exit  : 0/0
 22407 ;;		Unchanged: 0/0
 22408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22409 ;;      Params:         0       0       0       0       0       0       0       0       0
 22410 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22412 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22413 ;;Total ram usage:        0 bytes
 22414 ;; Hardware stack levels used:    1
 22415 ;; This function calls:
 22416 ;;		Nothing
 22417 ;; This function is called by:
 22418 ;;		_isr
 22419 ;; This function uses a non-reentrant model
 22420 ;;
 22421                           
 22422                           	psect	text135
 22423  005B94                     __ptext135:
 22424                           	callstack 0
 22425  005B94                     _recebe_dado_uart:
 22426                           	callstack 13
 22427                           
 22428                           ;uart.c: 140: while(RCIF==0);
 22429                           
 22430                           ;incstack = 0
 22431  005B94  AA9E               	btfss	3998,5,c	;volatile
 22432  005B96  D7FE               	goto	_recebe_dado_uart
 22433                           
 22434                           ;uart.c: 141: if(RCSTAbits.OERR)
 22435  005B98  A2AB               	btfss	171,1,c	;volatile
 22436  005B9A  D003               	goto	i2l10018
 22437                           
 22438                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22439  005B9C  98AB               	bcf	4011,4,c	;volatile
 22440                           
 22441                           ;uart.c: 144: __nop();
 22442  005B9E  F000               	nop	
 22443                           
 22444                           ;uart.c: 145: CREN=1;
 22445  005BA0  88AB               	bsf	4011,4,c	;volatile
 22446  005BA2                     i2l10018:
 22447                           
 22448                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22449  005BA2  50AE               	movf	174,w,c	;volatile
 22450  005BA4  0012               	return		;funcret
 22451  005BA6                     __end_of_recebe_dado_uart:
 22452                           	callstack 0
 22453                           
 22454                           	psect	text136
 22455  000000                     __ptext136:
 22456                           	callstack 0
 22457                           
 22458                           	psect	rparam
 22459  0000                     
 22460                           	psect	temp
 22461  000056                     btemp:
 22462                           	callstack 0
 22463  000056                     	ds	1
 22464  0000                     int$flags	set	btemp
 22465  0000                     wtemp8	set	btemp+1
 22466  0000                     ttemp5	set	btemp+1
 22467  0000                     ttemp6	set	btemp+4
 22468  0000                     ttemp7	set	btemp+8
 22469                           
 22470                           	psect	idloc
 22471                           
 22472                           ;Config register IDLOC0 @ 0x200000
 22473                           ;	unspecified, using default values
 22474  200000                     	org	2097152
 22475  200000  FF                 	db	255
 22476                           
 22477                           ;Config register IDLOC1 @ 0x200001
 22478                           ;	unspecified, using default values
 22479  200001                     	org	2097153
 22480  200001  FF                 	db	255
 22481                           
 22482                           ;Config register IDLOC2 @ 0x200002
 22483                           ;	unspecified, using default values
 22484  200002                     	org	2097154
 22485  200002  FF                 	db	255
 22486                           
 22487                           ;Config register IDLOC3 @ 0x200003
 22488                           ;	unspecified, using default values
 22489  200003                     	org	2097155
 22490  200003  FF                 	db	255
 22491                           
 22492                           ;Config register IDLOC4 @ 0x200004
 22493                           ;	unspecified, using default values
 22494  200004                     	org	2097156
 22495  200004  FF                 	db	255
 22496                           
 22497                           ;Config register IDLOC5 @ 0x200005
 22498                           ;	unspecified, using default values
 22499  200005                     	org	2097157
 22500  200005  FF                 	db	255
 22501                           
 22502                           ;Config register IDLOC6 @ 0x200006
 22503                           ;	unspecified, using default values
 22504  200006                     	org	2097158
 22505  200006  FF                 	db	255
 22506                           
 22507                           ;Config register IDLOC7 @ 0x200007
 22508                           ;	unspecified, using default values
 22509  200007                     	org	2097159
 22510  200007  FF                 	db	255
 22511                           
 22512                           	psect	config
 22513                           
 22514                           ;Config register CONFIG1L @ 0x300000
 22515                           ;	unspecified, using default values
 22516                           ;	PLL Prescaler Selection bits
 22517                           ;	PLLDIV = 0x0, unprogrammed default
 22518                           ;	System Clock Postscaler Selection bits
 22519                           ;	CPUDIV = 0x0, unprogrammed default
 22520                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22521                           ;	USBDIV = 0x0, unprogrammed default
 22522  300000                     	org	3145728
 22523  300000  00                 	db	0
 22524                           
 22525                           ;Config register CONFIG1H @ 0x300001
 22526                           ;	unspecified, using default values
 22527                           ;	Oscillator Selection bits
 22528                           ;	FOSC = 0x5, unprogrammed default
 22529                           ;	Fail-Safe Clock Monitor Enable bit
 22530                           ;	FCMEN = 0x0, unprogrammed default
 22531                           ;	Internal/External Oscillator Switchover bit
 22532                           ;	IESO = 0x0, unprogrammed default
 22533  300001                     	org	3145729
 22534  300001  05                 	db	5
 22535                           
 22536                           ;Config register CONFIG2L @ 0x300002
 22537                           ;	unspecified, using default values
 22538                           ;	Power-up Timer Enable bit
 22539                           ;	PWRT = 0x1, unprogrammed default
 22540                           ;	Brown-out Reset Enable bits
 22541                           ;	BOR = 0x3, unprogrammed default
 22542                           ;	Brown-out Reset Voltage bits
 22543                           ;	BORV = 0x3, unprogrammed default
 22544                           ;	USB Voltage Regulator Enable bit
 22545                           ;	VREGEN = 0x0, unprogrammed default
 22546  300002                     	org	3145730
 22547  300002  1F                 	db	31
 22548                           
 22549                           ;Config register CONFIG2H @ 0x300003
 22550                           ;	unspecified, using default values
 22551                           ;	Watchdog Timer Enable bit
 22552                           ;	WDT = 0x1, unprogrammed default
 22553                           ;	Watchdog Timer Postscale Select bits
 22554                           ;	WDTPS = 0xF, unprogrammed default
 22555  300003                     	org	3145731
 22556  300003  1F                 	db	31
 22557                           
 22558                           ; Padding undefined space
 22559  300004                     	org	3145732
 22560  300004  FF                 	db	255
 22561                           
 22562                           ;Config register CONFIG3H @ 0x300005
 22563                           ;	unspecified, using default values
 22564                           ;	CCP2 MUX bit
 22565                           ;	CCP2MX = 0x1, unprogrammed default
 22566                           ;	PORTB A/D Enable bit
 22567                           ;	PBADEN = 0x1, unprogrammed default
 22568                           ;	Low-Power Timer 1 Oscillator Enable bit
 22569                           ;	LPT1OSC = 0x0, unprogrammed default
 22570                           ;	MCLR Pin Enable bit
 22571                           ;	MCLRE = 0x1, unprogrammed default
 22572  300005                     	org	3145733
 22573  300005  83                 	db	131
 22574                           
 22575                           ;Config register CONFIG4L @ 0x300006
 22576                           ;	unspecified, using default values
 22577                           ;	Stack Full/Underflow Reset Enable bit
 22578                           ;	STVREN = 0x1, unprogrammed default
 22579                           ;	Single-Supply ICSP Enable bit
 22580                           ;	LVP = 0x1, unprogrammed default
 22581                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22582                           ;	ICPRT = 0x0, unprogrammed default
 22583                           ;	Extended Instruction Set Enable bit
 22584                           ;	XINST = 0x0, unprogrammed default
 22585                           ;	Background Debugger Enable bit
 22586                           ;	DEBUG = 0x1, unprogrammed default
 22587  300006                     	org	3145734
 22588  300006  85                 	db	133
 22589                           
 22590                           ; Padding undefined space
 22591  300007                     	org	3145735
 22592  300007  FF                 	db	255
 22593                           
 22594                           ;Config register CONFIG5L @ 0x300008
 22595                           ;	unspecified, using default values
 22596                           ;	Code Protection bit
 22597                           ;	CP0 = 0x1, unprogrammed default
 22598                           ;	Code Protection bit
 22599                           ;	CP1 = 0x1, unprogrammed default
 22600                           ;	Code Protection bit
 22601                           ;	CP2 = 0x1, unprogrammed default
 22602                           ;	Code Protection bit
 22603                           ;	CP3 = 0x1, unprogrammed default
 22604  300008                     	org	3145736
 22605  300008  0F                 	db	15
 22606                           
 22607                           ;Config register CONFIG5H @ 0x300009
 22608                           ;	unspecified, using default values
 22609                           ;	Boot Block Code Protection bit
 22610                           ;	CPB = 0x1, unprogrammed default
 22611                           ;	Data EEPROM Code Protection bit
 22612                           ;	CPD = 0x1, unprogrammed default
 22613  300009                     	org	3145737
 22614  300009  C0                 	db	192
 22615                           
 22616                           ;Config register CONFIG6L @ 0x30000A
 22617                           ;	unspecified, using default values
 22618                           ;	Write Protection bit
 22619                           ;	WRT0 = 0x1, unprogrammed default
 22620                           ;	Write Protection bit
 22621                           ;	WRT1 = 0x1, unprogrammed default
 22622                           ;	Write Protection bit
 22623                           ;	WRT2 = 0x1, unprogrammed default
 22624                           ;	Write Protection bit
 22625                           ;	WRT3 = 0x1, unprogrammed default
 22626  30000A                     	org	3145738
 22627  30000A  0F                 	db	15
 22628                           
 22629                           ;Config register CONFIG6H @ 0x30000B
 22630                           ;	unspecified, using default values
 22631                           ;	Configuration Register Write Protection bit
 22632                           ;	WRTC = 0x1, unprogrammed default
 22633                           ;	Boot Block Write Protection bit
 22634                           ;	WRTB = 0x1, unprogrammed default
 22635                           ;	Data EEPROM Write Protection bit
 22636                           ;	WRTD = 0x1, unprogrammed default
 22637  30000B                     	org	3145739
 22638  30000B  E0                 	db	224
 22639                           
 22640                           ;Config register CONFIG7L @ 0x30000C
 22641                           ;	unspecified, using default values
 22642                           ;	Table Read Protection bit
 22643                           ;	EBTR0 = 0x1, unprogrammed default
 22644                           ;	Table Read Protection bit
 22645                           ;	EBTR1 = 0x1, unprogrammed default
 22646                           ;	Table Read Protection bit
 22647                           ;	EBTR2 = 0x1, unprogrammed default
 22648                           ;	Table Read Protection bit
 22649                           ;	EBTR3 = 0x1, unprogrammed default
 22650  30000C                     	org	3145740
 22651  30000C  0F                 	db	15
 22652                           
 22653                           ;Config register CONFIG7H @ 0x30000D
 22654                           ;	unspecified, using default values
 22655                           ;	Boot Block Table Read Protection bit
 22656                           ;	EBTRB = 0x1, unprogrammed default
 22657  30000D                     	org	3145741
 22658  30000D  40                 	db	64
 22659                           tosu	equ	0xFFF
 22660                           tosh	equ	0xFFE
 22661                           tosl	equ	0xFFD
 22662                           stkptr	equ	0xFFC
 22663                           pclatu	equ	0xFFB
 22664                           pclath	equ	0xFFA
 22665                           pcl	equ	0xFF9
 22666                           tblptru	equ	0xFF8
 22667                           tblptrh	equ	0xFF7
 22668                           tblptrl	equ	0xFF6
 22669                           tablat	equ	0xFF5
 22670                           prodh	equ	0xFF4
 22671                           prodl	equ	0xFF3
 22672                           indf0	equ	0xFEF
 22673                           postinc0	equ	0xFEE
 22674                           postdec0	equ	0xFED
 22675                           preinc0	equ	0xFEC
 22676                           plusw0	equ	0xFEB
 22677                           fsr0h	equ	0xFEA
 22678                           fsr0l	equ	0xFE9
 22679                           wreg	equ	0xFE8
 22680                           indf1	equ	0xFE7
 22681                           postinc1	equ	0xFE6
 22682                           postdec1	equ	0xFE5
 22683                           preinc1	equ	0xFE4
 22684                           plusw1	equ	0xFE3
 22685                           fsr1h	equ	0xFE2
 22686                           fsr1l	equ	0xFE1
 22687                           bsr	equ	0xFE0
 22688                           indf2	equ	0xFDF
 22689                           postinc2	equ	0xFDE
 22690                           postdec2	equ	0xFDD
 22691                           preinc2	equ	0xFDC
 22692                           plusw2	equ	0xFDB
 22693                           fsr2h	equ	0xFDA
 22694                           fsr2l	equ	0xFD9
 22695                           status	equ	0xFD8

Data Sizes:
    Strings     257
    Constant    118
    Data        120
    BSS         1089
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     250
    BANK2           256     19     250
    BANK3           256      0     150
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3668	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    troca_de_tela@fix_signal	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), lo(BANK1[13]), lt(BANK1[12]), 
		 -> vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1466_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S795_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S795_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    gps@flag_fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), escreve_inteiro_lcd@texto(COMRAM[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->_verifica_fence
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _gps->_fix
    _gps->_get_fix
    _gps->_get_latitude
    _gps->_get_longitude
    _gps->_get_rawdate
    _gps->_get_rawspeed
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  514292
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  504626
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   26803
                                             67 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        3     3      0   20307
                                             53 COMRAM     3     3      0
              _escreve_caractere_lcd
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6386
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6532
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  457210
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16353
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (5) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426316
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425198
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                                _gps
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _gps                                                  3     3      0     844
                                             11 COMRAM     3     3      0
                                _fix
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        17    17      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0     130
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205014
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2849
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2693
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2693
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _gps
             _fix
             _get_fix
             _get_gpstime
             _get_latitude
             _get_longitude
             _get_rawdate
             _get_rawspeed
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_caractere_lcd
         _delay
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
   _gps
     _fix
     _get_fix
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      96      11       58.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      20        0.0%
DATA                 0      0     59F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jun 01 15:36:37 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 4740                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5AB2                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 0396                                               _lo 0198  
                                             _lt 01B2                              ___wmul@multiplicand 000C  
                                    _put_cluster 237C                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 48A8                                              l201 48B0  
                                            l202 48B2                                              l203 48BA  
                                            l220 4CFC                                              l204 48BC  
                                            l221 4D04                                              l213 4CD0  
                                            l205 48C4                                              l222 4D06  
                                            l206 48C6                                              l223 4D0E  
                                            l215 4CDA                           __size_of_troca_de_tela 0286  
                                            l144 2CB8                                              l224 4D10  
                                            l232 4EC6                                              l225 4D18  
                                            l217 4CE4                                              l250 4C22  
                                            l242 4BEE                                              l226 4D1A  
                                            l218 4CE6                                              l251 4C24  
                                            l219 4CFA                                              l252 4C2C  
                                            l244 4BF8                                              l181 5AD2  
                                            l253 4C2E                                              l254 4C36  
                                            l246 4C02                                              l183 5AD8  
                                            l255 4C38                                              l191 4872  
                                            l256 4C40                                              l248 4C0C  
                                            l257 4C42                                              l249 4C0E  
                                            l193 487C                                              l195 4886  
                                            l197 4890                                              l702 4F8A  
                                            l198 4892                                              l199 48A6  
                                            l800 5C0E                                              l806 5BC0  
                                            l913 2E28                                              l916 2E20  
                                            l686 55CA                                              l990 344C  
                                            l987 349E                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 00FA  
                            _latitude_to_convert 4AF0                                              _fil 017C  
                               ??_init_oscilador 000A                                              _fix 5C52  
                                            _n_s 00FB                                              _gps 565C  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01DE                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 000B  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1104 13C4                                             l1114 150A  
                                           l1241 5542                                             l1074 077A  
                                           l1192 0D90                                             l2224 5176  
                                           l2153 4DE6                                             l1274 1118  
                                           l2234 54E4                                             l1099 1398  
                                           l1291 1260                                             l1188 0B80  
                                           l2422 3358                                             l2436 3994  
                                           l1573 4F64                                             l2454 454A  
                                           l1772 4A64                                             l2468 3F86  
                                           ?_fix 000A                                             ?_gps 0001  
                                           ?_isr 0001                                             l9510 3D28  
                                           l9504 3D00                                             l9600 4064  
                                           l9290 4322                                             l9282 42E4  
                                           l9292 4340                                             l9284 42EE  
                                           l9524 3D5A                                             l9294 434A  
                                           l9286 430C                                             l9534 3D82  
                                           l9528 3D6A                                             l9554 5638  
                                           l9538 3D92                                             l9564 3FD0  
                                           l9582 4024                                             l9592 403C  
                                           l9594 4048                                             l9586 4034  
                          _escreve_caractere_lcd 4BDE                                             STR_1 61F1  
                                           STR_2 6192                                             STR_3 6224  
                                           STR_4 61E6                                             STR_5 61B1  
                                           STR_6 617D                                             STR_7 61C0  
                                           STR_8 621A                                             STR_9 6210  
                                 timer_dois@flag 00F7                                             _BRGH 007D62  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 007E  
                                   trace_path@fn 007F                                     trace_path@ds 008F  
                                   trace_path@fs 008B                                    ?_make_dirfile 0012  
                                           _Term 00FC                                             _dado 0110  
                                           _data 01D8                                             _atoi 3200  
                                           _atol 3884                                             _main 5788  
                                           _fsid 0172                                             _hora 01CA  
                                   ___ftpack@arg 000A                                             _itoa 55EA  
                                   ___ftpack@exp 000D                                             _ltoa 546A  
                        __end_of_fence_diff_long 6155                                             fsr1h 000FE2  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 0056  
                                           _utoa 44CA                                             _sync 51D2  
                                  disk_ioctl@cmd 000A                                    disk_read@buff 0029  
                                  disk_ioctl@res 000E                                   ??_get_latitude 000A  
                                  disk_read@pdrv 0031                             ?_latitude_to_convert 0001  
                                           prodh 000FF4                                             prodl 000FF3  
                   tratamento_uart@received_char 0001                            get_latitude@index_lat 000A  
                                           start 000E                                      gps@flag_fix 000D  
                              disparo_gravacao@i 02F9                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 000C                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014C  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l11002 1A58  
                                          l10310 2C60                                            l10302 2C10  
                                          l11030 1AD0                                            l11104 5AB6  
                                          l12010 09C4                                            l12002 08B6  
                                          l10252 3A1E                                            l10324 2C80  
                                          l11036 1ADE                                            l11140 582C  
                                          l11204 01FE                                            l12100 419E  
                                          l11300 3950                                            l10174 55D6  
                                          l10182 56A2                                            l10262 3A50  
                                          l10246 3A0C                                            l10406 4CA6  
                                          l10342 2D00                                            l10414 5278  
                                          l11150 47B0                                            l11046 1B0A  
                                          l11310 5914                                            l11230 03AA  
                                          l11214 02E4                                            l11222 033A  
                                          l12102 41AA                                            l10272 3A7E  
                                          l10256 3A42                                            l10264 3A56  
                                          l10600 5768                                            l11144 4742  
                                          l11152 47B8                                            l10520 4C04  
                                          l10512 4BF0                                            l11072 1B8C  
                                          l11056 1B30                                            l11312 591A  
                                          l11136 581C                                            l12016 09DA  
                                          l11232 03B8                                            l12120 4202  
                                          l12112 41DE                                            l10282 3AAE  
                                          l10418 52A4                                            l12034 37C8  
                                          l11090 1BEC                                            l11082 1BB2  
                                          l12130 4DB0                                            l10196 4F84  
                                          l10268 3A68                                            l10372 2D72  
                                          l10356 2D24                                            l10436 52A8  
                                          l10612 5770                                            l10516 4BFA  
                                          l11244 0476                                            l11180 00CC  
                                          l12060 50C0                                            l12116 41EC  
                                          l12220 590C                                            l10390 4C84  
                                          l10382 4C54                                            l10470 5BB2  
                                          l12230 535C                                            l10630 4EE0  
                                          l11262 0582                                            l12054 508A  
                                          l12070 40DC                                            l12150 48F0  
                                          l13006 4E9A                                            l10560 2B32  
                                          l11344 5208                                            l12048 3880  
                                          l10720 2444                                            l12240 5394  
                                          l10480 4CD2                                            l10800 485A  
                                          l11328 591E                                            l12304 1460  
                                          l12136 4DD8                                            l12128 4DA4  
                                          l11248 04F2                                            l11192 0186  
                                          l11256 0526                                            l12400 5406  
                                          l12064 407A                                            l13032 4EB2  
                                          l10386 4C80                                            l10722 2478  
                                          l10714 2402                                            l10706 23A2  
                                          l12234 5374                                            l11530 49F0  
                                          l11514 49A6                                            l10650 5182  
                                          l10634 4EEE                                            l10626 4ED2  
                                          l10642 4EFC                                            l11506 34B8  
                                          l11418 33F6                                            l12306 148E  
                                          l11266 0594                                            l11194 01A6  
                                          l12058 50B8                                            l12162 491C  
                                          l10564 2B3A                                            l10556 2AB6  
                                          l10572 2B88                                            l11604 4A16  
                                          l10740 2526                                            l10484 4CDC  
                                          l10644 4F16                                            l11460 343C  
                                          l11284 38D8                                            l12180 4954  
                                          l12156 48F8                                            l13060 4BA8  
                                          l13036 4B72                                            l13230 329C  
                                          l10582 2BDC                                            l10902 53CC  
                                          l11606 4A22                                            l10662 2632  
                                          l11518 49AA                                            l10654 51AA  
                                          l11366 3112                                            l11382 31EA  
                                          l12318 14E8                                            l11710 56D0  
                                          l12094 417C                                            l11294 390A  
                                          l12078 413E                                            l12174 4930  
                                          l12190 496A                                            l13070 4BBE  
                                          l13046 4B8C                                            l13142 4888  
                                          l13134 4874                                            l13216 3202  
                                          l11616 4A56                                            l10744 2550  
                                          l10760 25D4                                            l10840 2E5E  
                                          l10824 2E0A                                            l10816 2DDC  
                                          l12440 0DA4                                            l11720 4578  
                                          l11464 3444                                            l11456 3434  
                                          l11448 3424                                            l12256 1300  
                                          l12520 102C                                            l12088 4164  
                                          l11288 3900                                            l12168 4928  
                                          l13234 32C4                                            l13218 320E  
                                          l12370 58C2                                            l10594 575C  
                                          l10682 2764                                            l10914 5438  
                                          l10922 5458                                            l11802 2038  
                                          l12338 151E                                            l12602 11DC  
                                          l12506 0FEC                                            l11626 5730  
                                          l13138 487E                                            l13402 1D14  
                                          l10932 5B02                                            l13228 328E  
                                          l10596 5764                                            l10908 53DC  
                                          l10828 2E30                                            l12452 0DEC  
                                          l12444 0DAE                                            l12428 0D44  
                                          l10772 50FC                                            l11740 45E6  
                                          l11820 207A                                            l11812 2062  
                                          l12620 126C                                            l12516 1016  
                                          l11644 5898                                            l11564 505C  
                                          l12188 4960                                            l12700 3ECC  
                                          l13238 3310                                            l10686 2784  
                                          l10758 25B8                                            l12454 0E00  
                                          l12462 0E72                                            l12470 0F06  
                                          l10782 4800                                            l11910 05BE  
                                          l11486 347E                                            l11478 3466  
                                          l11398 338C                                            l12286 13A0  
                                          l12526 1058                                            l12630 12C2  
                                          l11558 5030                                            l11590 5004  
                                          l12710 3F1C                                            l13246 57C0  
                                          l12640 54F8                                            l10696 27EC  
                                          l10872 2ED0                                            l10768 50E8  
                                          l11728 459A                                            l11496 349C  
                                          l11488 3480                                            l11808 2056  
                                          l12624 1286                                            l12616 124E  
                                          l12560 1100                                            l12544 10B2  
                                          l11656 5310                                            l12384 586E  
                                          l11584 4FD8                                            l13096 4BD4  
                                          l13248 57C8                                            l13272 2F2C  
                                          l13416 1D8C                                            l13424 1DC6  
                                          l12642 54FC                                            l12802 167C  
                                          l10698 2806                                            l10858 2E94  
                                          l10778 47E2                                            l10954 1974  
                                          l11738 45DE                                            l11842 216A  
                                          l11826 208E                                            l12554 10F0  
                                          l12538 1082                                            l12490 0F9C  
                                          l12394 53EA                                            l13426 1DCA  
                                          l12812 16D4                                            l12900 18E0  
                                          l10876 2F0E                                            l10948 1960  
                                          l11940 0660                                            l11916 0610  
                                          l11908 05B8                                            l11852 21CC  
                                          l11844 2190                                            l11764 1F42  
                                          l12580 1160                                            l12564 110C  
                                          l11668 5348                                            l11676 52C8  
                                          l12396 53EE                                            l13700 450C  
                                          l12732 548A                                            l13292 3092  
                                          l13364 1C2A                                            l12478 0F6C  
                                          l10958 1980                                            l11926 0634  
                                          l11862 2238                                            l11846 21A2  
                                          l11790 1FEA                                            l11782 1F8A  
                                          l12582 1178                                            l12574 113C  
                                          l12486 0F92                                            l12398 53FE  
                                          l12742 4AFA                                            l13438 1DF2  
                                          l12840 174C                                            l12824 16E6  
                                          l12808 1680                                            l10968 19B4  
                                          l11944 0664                                            l10888 4266  
                                          l11776 1F60                                            l11768 1F46  
                                          l12592 11A0                                            l11688 5300  
                                          l11696 5700                                            l12656 3CC0  
                                          l13456 1E38                                            l12850 17AE  
                                          l12834 1748                                            l12818 16E2  
                                          l10978 19D8                                            l11962 069C  
                                          l11954 0692                                            l11866 223C  
                                          l11794 1FF6                                            l12666 5144  
                                          l12754 4B54                                            l13458 1E3C  
                                          l13378 1CA2                                            l13386 1CD0  
                                          l12852 17D4                                            l12844 17A0  
                                          l12828 173A                                            l11980 0732  
                                          l11972 0710                                            l11876 227E  
                                          l12596 11AC                                            l12668 514C  
                                          l13468 1E7C                                            l13820 44C0  
                                          l12678 516C                                            l12694 54DA  
                                          l12686 54BA                                            l13726 5606  
                                          l12766 4A80                                            l12880 1854  
                                          l12872 1818                                            l12792 161A  
                                          l11888 230E                                            l12952 3732  
                                          l12688 54C2                                            l13760 290A  
                                          l13808 4424                                            l12866 1814  
                                          l12858 17D8                                            l12786 1616  
                                          l11898 234A                                            l12938 366A  
                                          l13690 44D2                                            l12778 4ADA  
                                          l13754 2884                                            l12892 18D2  
                                          l12796 166E                                            l12972 5A78  
                                          l13844 57B0                                            l12886 1858  
                                          l12982 4E64                                            l13782 2A26  
                                          l13838 57A0                                            l12976 5A80  
                                          l12992 4E7E                                            l13776 2A04  
                                          l13784 2A2A                                  __end_of___aldiv 4214  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6237                                            ?_ltoa 0023  
                                          STR_11 6266                                            STR_20 627A  
                                          STR_12 61A2                                            STR_21 622C  
                                          STR_13 61FC                                            STR_30 626F  
                                          STR_22 624F                                            STR_14 6206  
                                          STR_31 626B                                            STR_23 6261  
                                          STR_15 6256                                            STR_24 627C  
                                          STR_32 622E                                            STR_16 61CE  
                                          STR_17 6273                                            STR_25 6248  
                                          STR_33 6240                                            STR_26 624F  
                                          STR_18 6277                                            STR_27 6261  
                                          STR_19 61DB                                            STR_28 627C  
                                          STR_29 625C                                     ?_leitura_SPI 0001  
                                          u10010 42D6                                  __end_of___lldiv 4A76  
                                          ?_utoa 0011                                            u10050 4354  
                                          ?_sync 0001                                            u10411 3D10  
                                          u12020 4820                                  __end_of___ftmul 3DCC  
                                          u12110 2E54                                            u10520 404E  
                                          _T0CON 000FD5                                            u11340 56C4  
                                          u12220 53C8                                            u12060 2DC6  
                                          u12300 19A0                                            u10461 3FB4  
                                          u12070 2DD2                                            u12310 19AC  
                                          u10470 3FBE                                            u12311 19AA  
                                          u10391 3CE8                                            u11360 4F94  
                                          u11520 2D7E                                            u12080 2DFE  
                                          u13200 49A6                                            u10480 3FEE  
                                __end_of___llmod 4DF8                                            u12330 19F8  
                                          u12180 2EFC                                            u10485 3FE6  
                                __end_of___fttol 4076                                            u11390 3A18  
                                          u11710 2A74                                            u12510 476E  
                                          u11375 39BE                                            u11800 51CA  
                                          u12440 1B56                                            _T2CON 000FCA  
                                          u11465 2C34                                            u11730 2AB2  
                                          u12530 47A0                                            u12370 1A86  
                                          u12290 1990                                            u14050 41AE  
                                          u13235 351C                                            u13340 4A26  
                                          u11820 25FC                                            u15020 5150  
                                          u13245 3538                                            u12517 4764  
                                          u12390 1A92                                            u13270 5538  
                                          u13255 3568                                            u11495 2CD4  
                                          u11807 51C0                                            u16000 3330  
                                          u11920 23FE                                            u12480 1BC8  
                                          u13440 4596                                            u14320 13C0  
                                          u13265 3588                                            u12537 4796  
                                          u12705 0326                                            u15210 163A  
                                          u12490 1BF8                                            u14250 12FC  
                                          u14090 4DB4                                            u15050 54C6  
                                          u12810 38F8                                            u11915 23D2  
                                          u13460 45CC                                            u13700 227A  
                                          u11845 2662                                            u15310 1738  
                                          u15230 166C                                            u11790 51A2  
                                          u13470 45F2                                            u14350 145C  
                                          u12750 052E                                            u16007 3326  
                                          u13535 1FA8                                            u15400 1844  
                                          u14600 0E0E                                            u13480 460A  
                                          u12920 3190                                            u13640 21C8  
                                          u15217 1630                                            u11865 26DE  
                                          u11945 24A4                                            u12905 311E  
                                          u12665 024C                                            u12817 38EE  
                                          u15330 176C                                            u15250 16A0  
                                          u12850 5204                                            u13490 1F2C  
                                          u12770 38A4                                            u16210 1D40  
                                          u15420 1878                                            u14620 0E86  
                                          u13900 072E                                            u12940 33C2  
                                          u16220 1D7C                                            u16140 1C06  
                                          u15317 172E                                            u15237 1662  
                                          u14525 0BF4                                            u11797 5198  
                                          u15350 179E                                            u15270 16D2  
                                          u14630 0ECC                                            u13830 065C  
                                          u13750 05DE                                            u13670 222A  
                                          u14390 1506                                            u15407 183A  
                                          u11895 2770                                            u11975 2532  
                                          u13655 21EA                                            u15440 189E  
                                          u12960 33D2                                            u14720 1064  
                                          u16240 1DD6                                            u15337 1762  
                                          u15257 1696                                            u13497 1F22  
                                          u12777 389A                                            u15370 17CE  
                                          u15290 1706                                            u13770 0604  
                                          u12890 310E                                            u16218 1D42  
                                          u16170 1C56                                            u15427 186E  
                                          u14635 0EC2                                            u12947 33B8  
                                          u15460 18D0                                            u15380 1804  
                                          u13940 09C0                                            u16228 1D7E  
                                          u16180 1C92                                            u16500 46BE  
                                          u15357 1794                                            u15277 16C8  
                                          u13757 05D4                                            u13950 09D8  
                                          u15630 4B84                                            u16510 46DA  
                                          u15447 1894                                            u13935 08CE  
                                          u14920 12A2                                            u14760 10EE  
                                          u15640 4B88                                            u15560 4E7A  
                                          u15377 17C4                                            u15297 16FC  
                                          u13777 05FA                                            u14930 551C  
                                          u14690 0FE2                                            u16178 1C58  
                                          u15467 18C6                                            u15387 17FA  
                                          u15900 4F52                                            u16188 1C94  
                                          u13965 0A5E                                            u15910 322E  
                                          u14870 1232                                            u15590 4EAC  
                                          u14937 5512                                            u15930 3254  
                                          u14955 3BE2                                            u16707 4668  
                                          u15860 48E8                                            u15917 3224  
                                          u16717 192E                                            u14965 3C1A  
                                          u15950 3286                                            u16590 2880  
                                          u16727 1A98                                            u15871 557A  
                                          u16648 4480                                            u15937 324A  
                                          u16737 1B36                                            u14985 3C5C  
                                          u16649 4492                                            u15970 32BC  
                                          u16747 55B6                                            u14995 3C94  
                                __end_of___lwdiv 5180                                            u15957 327C  
                                          u16677 4716                                            u15990 32F8  
                                          u16687 4630                                            u15977 32B2  
                                          u16697 464C                                            u15997 32EE  
                                __end_of___lwmod 54EE                                            i2l444 3BC2  
                                          i2l439 3B50                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 586A                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 5398  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5C48  
                                  get_cluster@bc 006F                                  __end_of_get_fix 5758  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FD0                                    ___awtoft@sign 001B  
                                          _delay 5ACE                                  clust2sect@clust 0016  
                                          _fence 00F5                                  __end_of_gps_dia 5A4C  
                                __end_of_gps_ano 5A6E                                  __end_of_gps_mes 5A2A  
                                __end_of_fprintf 12CC                                            _fputc 5530  
                                          _fputs 5080                                  __end_of_isdigit 5B0A  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0174  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3EBC                                  __end_of_rawdata 5C34  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5C2A  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5C0A                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 1BFC  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4374  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 3362  
                                   __end_of_atol 39A6                                     __end_of_main 57B6  
                                   clust2sect@fs 001F                                     __end_of_itoa 5624  
                                   __end_of_ltoa 54AC     verifica_dados_operacionais@contador_anterior 00F0  
                                   __end_of_utoa 456E                                     __end_of_sync 5224  
                             _inicializa_tarefas 5224                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000A                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5B94                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 309A  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 5980  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 565C  
                               __end_of___ftpack 4374                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1545 3EA8  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9906 3B7E                                           i2l9908 3B96  
                                         i2l9880 3AEA                                           i2l9890 3B24  
                                         i2l9888 3B0C                                           i2l9898 3B5C  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5BA6                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 49F4  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000B                       __end_of_posicao_cursor_lcd 4F1A  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F18  
                                   _dado_arquivo 0242                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 50D8  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 5936                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 12CC  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5B5A  
                           __size_of_get_gpstime 002A                                           _f_sync 375C  
                                      ??___lwmod 000E                                           _buffer 0236  
                           __size_of_get_rawdate 0030                                 __end_of_latitude 5C48  
                               __end_of_gps_hora 5980                                           _estado 00F4  
                                         _memcmp 4740                                           _memcpy 5426  
                               __end_of_init_lcd 46AC                                           _memset 5812  
                                      ??_f_close 004C                                           _rawFix 01EA  
                                         clear_0 43CE                                           clear_1 43E0  
                                         clear_2 43EC                                           clear_3 43F8  
                                         clear_4 4404                                           clear_5 4410  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 000A                                           _strcat 53E0  
                            _sdc_disk_initialize 1914                                        ??_command 0014  
                                         _strcpy 57B6                                           _strlen 54EE  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 1914  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 237C  
                                      ??_gps_mes 000C                                 __end_of_validate 53E0  
                         __end_of_next_dir_entry 3200                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 5350  
                               __end_of_response 5BFE                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6106  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 59A2                                        ??_proceed 000C  
                               _write_timer_zero 5C16                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 56F8  
                            _escreve_inteiro_lcd 5570                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 4416                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 4FD0                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5C52                                  _tratamento_uart 3ABE  
                    __end_of_endereco_cursor_lcd 4D28                                     __pidataBANK0 5C78  
                                   __pidataBANK1 5BD6                                     __pidataBANK2 4D28  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3BD0  
                                  __end_of_delay 5AEC                                   _escrita_sdcard 3610  
                                hora_nome@p_buff 000A                                    __end_of_fputc 5570  
                                  __end_of_fputs 50D8                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 0044                 __end_of_convert_to_int_point_lat 5080  
                             __size_of_data_nome 002A                                    __end_of_ultoa 3FA4  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 34BC                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000A  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5C66  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000B  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5B5A                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 5910  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02C3  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02D5                                       _dados_long 027E  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51D2  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4AF0  
                      escreve_inteiro_uart@F3215 01EC                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 375C  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3687 6118                            mensagem_inicial@F3689 6107  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 00E7                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10120 3E76  
                                        i2l10104 3E20                                          i2l10018 5BA2  
                                        i2l10130 3EA0                                          i2l10116 3E66  
                                        i2l10108 3E4E                                          i2l10128 3E94  
                                        i2l10092 3E0E                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5AAE  
                                     _disk_write 5274                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 0182                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4214                                   _inicializa_SPI 5A8E  
                                trace_path@clust 008D                                __end_of_data_nome 58E8  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3BD0                                __end_of_diferenca 4148  
                                  _sdc_disk_read 39A6                                     _desliga_uart 5B82  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4CBE  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 4148  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 49F4                                  __size_of___wmul 0026  
                                        ___ftmul 3CD8                                          ___llmod 4D92  
                                        ___fttol 3FA4                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 512E  
                                        ___lwmod 54AC                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 55EA  
                          __size_of_get_latitude 0048                                          _f_close 583E  
                                        __pcinit 4374                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5B0A  
                                        __ramtop 0800                                          _f_mount 5350  
                                        __ptext0 5788                                          __ptext1 46AC  
                                        __ptext2 460E                                          __ptext3 5B5A  
                                        __ptext4 5B0A                                          __ptext5 5C66  
                                        __ptext6 5B70                                          __ptext7 5B26  
                                        __ptext8 5C16                                          __ptext9 5BE4  
                           __end_of_gps_segundos 59E6                                          _f_write 0012  
                                        _get_fix 5728                                          _command 4F76  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 5894  
                                        _gps_dia 5A2A                                          _gps_ano 5A4C  
                                        _gps_mes 5A08                                          _fprintf 0F7E  
                                   __size_of_fix 000A                                     __size_of_gps 0036  
                                        _rawDate 01E4                                          _isdigit 5AEC  
                                   __size_of_isr 3EB4             __size_of_verifica_plausibilidade_lat 0074  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0030                                          _rawTime 01D1  
                               ___aldiv@dividend 000A                                          _rawdata 5C2A  
                                        _rawhora 5C20                                          _time_sd 016E  
                                   _create_chain 2D82                                          _proceed 5BFE  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 016A  
                              __end_of_sdc_reset 4862                           __end_of_inicializa_SPI 5AAE  
                          __end_of_armazena_ltlo 4972                      __end_of_latitude_to_convert 4B6A  
                                     f_lseek@ofs 0088                                   __pintcode_body 3DCC  
                                     f_lseek@res 009C                             end_of_initialization 4416  
                              __end_of_longitude 5C3E             __end_of_verifica_plausibilidade_long 4EBC  
          __size_of_verifica_plausibilidade_long 0060                     _verifica_plausibilidade_long 4E5C  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0006  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000A  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3DCC  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1117_40 3DFE  
                                      i2u1118_48 3E00                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 015F  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 5308                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 6155                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5C20  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5A6E                            __end_of_get_longitude 5308  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 5692  
                                   _get_rawspeed 56C8                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 0226  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1E82  
                             _posicao_cursor_lcd 4EBC                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3CD8  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4A76  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 4862  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 000A                                      ?_clust2sect 0016  
                               _put_cluster$1623 006A                                 _put_cluster$1624 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 3362  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 617D                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1733 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 512E  
                                 _temp_buff_long 0164                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 595C                                   __end_of_f_open 1606  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 3884                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 47D2                                   __end_of_memcpy 546A  
                                 __end_of_memset 583E                __end_of_convert_to_int_point_long 5028  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 5426  
                                 __end_of_strcpy 57E4                                   __end_of_strlen 5530  
                               _time_atualizacao 00EA                              start_initialization 4374  
                                    __end_of_fix 5C5C                                      __end_of_gps 5692  
                                    __end_of_isr 3EBC                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02F7                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5BD6  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5812  
                                _sdc_disk_status 5BA6                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5C5C  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 5910                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5A8E                               _verifica_recep_gps 58E8  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00F3                                wait_ready@timeout 000A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 0084  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                                     hora_nome@i 000C                              __size_of_disk_write 004C  
                                       ??___lmul 0012                            __size_of_gps_segundos 0022  
                                     fprintf@fil 00B1                                       fprintf@arp 00D9  
                                       ??___wmul 000E                                       fprintf@res 00CD  
                                     fprintf@val 00D5                                       fprintf@str 00B3  
                            __end_of_get_fattime 3610                                         ??_f_open 009D  
                            ?_verifica_recep_gps 0001                                         ??_f_sync 004C  
                                    ?_wait_ready 0001                                      __pdataBANK0 00FF  
                                    __pdataBANK1 01EC                                      __pdataBANK2 027E  
                            __end_of_get_cluster 2810                  verifica_dados_operacionais@dado 0121  
                                       ??_memcmp 0010                              __end_of_disk_status 5788  
                                       ??_memcpy 0010                              __size_of_clust2sect 00B2  
                                       ??_memset 0010                              __end_of_get_gpstime 58BE  
                         sdc_disk_read@start_add 0022                             __end_of_remove_chain 460E  
                              ??_dados_gps_to_sd 0015                              __end_of_get_rawdate 5728  
                        sdc_disk_initialize@buff 0029                                    ??_leitura_SPI 000A  
                        __end_of_escreve_cmd_lcd 48EE                                         ??_strcat 000E  
                                       ??_strcpy 0010                                         ??_strlen 000C  
                        sdc_disk_initialize@stat 0020                                      ?_trace_path 007E  
                                  ??_gps_minutos 000C                                     _fprintf$2226 00CF  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 0396  
                                  monta_sd@index 0013                                      __pbssCOMRAM 004D  
                                _trace_path$1780 0087                                  _trace_path$1782 0089  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02E7  
                                 _init_interrupt 5B70                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 44CA  
                    __end_of_sdc_disk_initialize 1BFC                                __size_of_check_fs 0082  
                                   _isdigit$3275 000B                                     check_fs@sect 0035  
                                    _char_number 00FE                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 55AE                                   _init_oscilador 5C66  
                          __end_of_troca_de_tela 1E82                                 ??_escrita_sdcard 004D  
                                      _dados_lat 02A2                              __size_of_init_ports 001C  
                                      _dados_vel 0127                                     _gps_segundos 59C4  
                          _escreve_frase_ram_lcd 5180                                __size_of_grava_sd 001A  
                                      _data_buff 017A                                        _data_hoje 00F6  
                    __end_of_escreve_inteiro_lcd 55AE                                        _data_nome 58BE  
                            __end_of_escreve_SPI 5BC6                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00EE  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 309A  
                    _verifica_dados_operacionais 2F18                                        _diferenca 4076  
                                      __pintcode 0008                                    __pmediumconst 6106  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 5758  
                                      __ptext101 5BA6                                        __ptext110 4F76  
                                      __ptext102 51D2                                        __ptext111 5692  
                                      __ptext103 2A36                                        __ptext120 595C  
                                      __ptext112 5BB6                                        __ptext104 5274  
                                      __ptext121 5A2A                                        __ptext113 55AE  
                                      __ptext105 2BE0                          troca_de_tela@fix_signal 0037  
                                      __ptext130 5AEC                                        __ptext122 5A4C  
                                      __ptext114 5C0A                                        __ptext106 4C50  
                                      __ptext131 5936                                        __ptext123 58BE  
                                      __ptext115 5AAE                                        __ptext107 39A6  
                                      __ptext124 5B82                                        __ptext116 34BC  
                                      __ptext108 5BF2                                        __ptext133 5C5C  
                                      __ptext125 5BC6                                        __ptext117 59C4  
                                      __ptext109 5BFE                                        __ptext134 3ABE  
                                      __ptext126 4DF8                                        __ptext118 59E6  
                                      __ptext135 5B94                                        __ptext127 1606  
                                      __ptext119 5A08                                        __ptext136 0000  
                                      __ptext128 54EE                                        __ptext129 3200  
                              __size_of_monta_sd 030E                                         ?___lldiv 000A  
                                       ?___ftmul 001C                                         ?___llmod 000A  
                              __size_of_validate 0048                                         ?___fttol 002B  
                                       ?___lwdiv 000A                                         ?___lwmod 000A  
                              __size_of_response 000C                                         ?_f_close 0069  
                                      _disk_read 4C50                               _sinaliza_int_timer 00F2  
                                       ?_f_lseek 0086                                         ?_f_mount 000A  
                               _disparo_gravacao 2810                                         ?_f_write 0086  
                         ??_longitude_to_convert 0042                                         ?_get_fix 0001  
                                       ?_command 000F                           __end_of_init_interrupt 5B82  
                                       ?_gps_dia 000A                                         ?_gps_ano 000A  
                                       ?_gps_mes 000A                                         ?_fprintf 00B1  
                                       ?_isdigit 0001                                      _desliga_SPI 5BC6  
                            sdc_disk_read@p_buff 0016                          troca_de_tela@last_state 004F  
                            sdc_disk_read@length 0026                                         ?_rawdata 000A  
                            sdc_disk_read@sector 0018                                         ?_rawhora 000A  
                        __end_of_sdc_disk_status 5BB6                   __size_of_escreve_caractere_lcd 0072  
                                 __size_of_Speed 000A                    __end_of_escreve_caractere_lcd 4C50  
                                       ?_proceed 0001                                        f_close@fp 0069  
                            __end_of_leitura_SPI 5C16                                        _hora_nome 586A  
                               ___lwdiv@quotient 000F                                   __size_of_delay 001E  
                        __end_of_disk_initialize 5936                           __end_of_init_oscilador 5C6E  
                            __end_of_gps_minutos 5A08                                   __size_of_fputc 0040  
                                 __size_of_fputs 0058                              make_dirfile@dirname 0013  
                                     validate@id 0012                                       validate@fs 0010  
                           __end_of_posicao_long 5C78                                        _p_tarefas 0139  
                                 __size_of_ultoa 00E8                          __size_of_verifica_fence 005C  
                                      _rawCourse 013F                                 make_dirfile@path 0012  
                                       _GPGGA_ok 0176                                        _sdc_reset 47D2  
                            __size_of_wait_ready 0036                                  ___aldiv@divisor 000E  
                    latitude_to_convert@latitude 0060                                  ___aldiv@counter 0012  
                                 ___wmul@product 000E                                         _LATBbits 000F8A  
                                      f_lseek@fp 0086                                         _LATCbits 000F8B  
            __end_of_verifica_plausibilidade_lat 4BDE                      _verifica_plausibilidade_lat 4B6A  
                                       _GPRMC_ok 0178                                        f_open@dir 00B4  
                                      f_open@res 00B3                                        _longitude 5C34  
                                       _PIE1bits 000F9D                                      _get_fattime 34BC  
                                   _rawLongitude 01A5                                 ?_recebe_dado_gps 0001  
                                     ?_data_nome 000A                              __size_of_trace_path 0280  
                                      _rmc_index 00EC                                      _get_cluster 25E8  
                                    _disk_status 5758                                    ??_move_window 0039  
                                      f_mount@fs 000A                                         _PIR1bits 000F9E  
                                    _get_gpstime 5894                                       ?_diferenca 0001  
                                  move_window@fs 0048                                      _get_rawdate 56F8  
             verifica_plausibilidade_lat@posicao 000A      verifica_dados_operacionais@velocidade_atual 0166  
    verifica_dados_operacionais@velocidade_media 0155                                ?_write_timer_zero 000A  
                                remove_chain@nxt 007C                                        f_sync@dir 0067  
                                      f_sync@res 0066                                        f_sync@tim 0062  
                       posicao_cursor_lcd@coluna 000D                                       ?_disk_read 0029  
                             ??_write_timer_zero 000C                                        f_write@cc 009E  
                     posicao_cursor_lcd@endereco 000F                                        f_write@bw 008B  
                                      f_write@fp 0086                             _mostra_dados_display 57E4  
                      __size_of_recebe_dado_uart 0012                                      _escalonador 4420  
                              ___wmul@multiplier 000A                                 ?_escreve_cmd_lcd 0001  
                    escreve_frase_ram_lcd@buffer 000D                                 ??_inicializa_SPI 000A  
                                ?_init_interrupt 0001                                     ??_disk_ioctl 000D  
                                   ??_disk_write 0030                              armazena_ltlo@buffer 003E  
                                   f_lseek@clust 00A5                                  _inicializa_uart 59A2  
                                   f_lseek@csize 00A1                                     f_lseek@ifptr 009D  
                               _mensagem_inicial 46AC                                    ??_posicao_lat 000A  
                                     ?_hora_nome 000A                                    _temp_buff_lat 0162  
                                ?_init_oscilador 0001                                     ??_clust2sect 001A  
                              ___lmul@multiplier 000A                                        copy_data0 4388  
                                      copy_data1 43A8                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5BB6                                    _flag_anomalia 00F1  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2BE0  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 007A  
                       escreve_inteiro_lcd@F3223 01F3                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5ACE                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 52C0                                     _SentenceType 00FD  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2BE0  
                                       ___awtoft 5624                                         ___ftpack 42C6  
                             __end_of_clust2sect 42C6                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5C0A                       disparo_gravacao@velocidade 02E7  
                               __size_of_f_write 0596                                 __size_of_get_fix 0030  
                                    _gps_minutos 59E6                                 __size_of_command 005A  
                          __end_of_init_hardware 5B70                                         _check_fs 4972  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 015C                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 016C  
                       _convert_to_int_point_lat 5028                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5224                                 __size_of_rawhora 000A  
                                       __ptext11 4420                                         __ptext20 3FA4  
                                       __ptext12 1BFC                                         __ptext21 3CD8  
                                       __ptext13 2810                                         __ptext30 4F1A  
                                       __ptext22 5624                                         __ptext14 2F18  
                                       __ptext31 4E5C                                         __ptext23 42C6  
                                       __ptext15 57B6                                         __ptext40 4076  
                                       __ptext32 5C74                                         __ptext24 5C48  
                                       __ptext16 5C20                                         __ptext41 4FD0  
                                       __ptext33 4B6A                                         __ptext25 57E4  
                                       __ptext17 5C2A                                         __ptext50 59A2  
                                       __ptext42 5028                                         __ptext34 5C6E  
                                       __ptext26 5570                                         __ptext18 5C34  
                                       __ptext51 3BD0                                         __ptext43 5980  
                                       __ptext35 5A6E                                         __ptext27 546A  
                                       __ptext19 5C3E                                         __ptext60 52C0  
                                       __ptext52 4148                                         __ptext44 3884  
                                       __ptext36 58E8                                         __ptext28 3EBC  
                                       __ptext61 5308                                         __ptext53 5A8E  
                                       __ptext45 55EA                                         __ptext37 4A76  
                                       __ptext29 4862                                         __ptext70 12CC  
                                       __ptext62 5894                                         __ptext54 3610  
                                       __ptext46 44CA                                         __ptext38 4AF0  
                                       __ptext71 1E82                                         __ptext63 5728  
                                       __ptext55 53E0                                         __ptext47 54AC  
                                       __ptext39 48EE                                         __ptext80 5910  
                                       __ptext72 3362                                         __ptext64 5C52  
                                       __ptext56 586A                                         __ptext48 512E  
                                       __ptext81 1914                                         __ptext73 2102  
                                       __ptext65 0F7E                                         __ptext57 565C  
                                       __ptext49 5B40                                         __ptext90 50D8  
                                       __ptext82 47D2                                         __ptext74 309A  
                                       __ptext66 5080                                         __ptext58 56C8  
                                       __ptext91 5350                                         __ptext83 4EBC  
                                       __ptext75 4214                                         __ptext67 5530  
                                       __ptext59 56F8                                         __ptext92 0AF2  
                                       __ptext84 4CBE                                         __ptext76 456E  
                                       __ptext68 0012                                         __ptext93 2D82  
                                       __ptext85 5180                                         __ptext77 5426  
                                       __ptext69 4D92                                         __ptext94 237C  
                                       __ptext86 4BDE                                         __ptext78 05A8  
                                       __ptext95 25E8                                         __ptext87 5ACE  
                                       __ptext79 5812                                         __ptext96 49F4  
                                       __ptext88 4972                                         __ptext97 583E  
                                       __ptext89 4740                                         __ptext98 375C  
                                       __ptext99 5398                                 __size_of_proceed 000C  
                                       _filename 0256                                      _rawAltitude 011A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 0170  
                                   _rmc_pointers 022A                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0048                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5274  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5B40  
                         __end_of_sdc_disk_write 2D82                                        monta_sd@i 0014  
                                       _gps_flag 014B                                         _latitude 5C3E  
                                       _gps_hora 595C                                      _rawLatitude 01BE  
                                       _init_lcd 460E                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 456E                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5C74  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4CBE                               __end_of_init_ports 5B26  
                                       _rawSpeed 026A                                      ??_data_nome 000C  
                              _comma_counter_gga 00F9                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00F8                                  _dados_gps_to_sd 4DF8  
                                       _rmc_code 0159                                         _monta_sd 1606  
                                       _validate 5398                                      ??_diferenca 0035  
                                       _sentence 0145                                     move_window@n 0043  
                                       _response 5BF2                                         f_sync@fp 0060  
                            _point_buff_gps_long 0168                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 59C4                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0004                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 25E8  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5BE4  
                                   _tempo_backup 0133                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5B26  
                                 _verifica_fence 4F1A                                    _armazena_ltlo 48EE  
                                   _poligono_ext 0100                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 012D                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0151                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 56C8                         __end_of_disparo_gravacao 2A36  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3ABE                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000B  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 2102                              ??_config_timer_zero 000C  
                                    _move_window 2A36                                  _fence_diff_long 6129  
                              get_latitude@index 000B                           ??_mostra_dados_display 0010  
                                   _posicao_long 5C74                                    _get_longitude 52C0  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5B94                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5BF2  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5B40                           __end_of_verifica_fence 4F76  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5C6E  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4E5C  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 00FF                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 2102  
                        disparo_gravacao@fix_gps 02F3                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3687 6129                    __end_ofmensagem_inicial@F3689 6118  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02F5  
