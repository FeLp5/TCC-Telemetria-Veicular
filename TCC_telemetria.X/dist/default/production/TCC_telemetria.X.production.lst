

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon May 02 13:47:11 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=3
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=3
   134                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=3
   136                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   137                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   138                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   139                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   140  0000                     
   141                           ; Version 2.30
   142                           ; Generated 26/08/2020 GMT
   143                           ; 
   144                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution. Publication is not required when
   158                           ;        this file is used in an embedded application.
   159                           ; 
   160                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   161                           ;        software without specific prior written permission.
   162                           ; 
   163                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   164                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   165                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   166                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   167                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   168                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   169                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   170                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   171                           ; 
   172                           ; 
   173                           ; Code-generator required, PIC18F4550 Definitions
   174                           ; 
   175                           ; SFR Addresses
   176  0000                     
   177                           	psect	idataCOMRAM
   178  0056A0                     __pidataCOMRAM:
   179                           	callstack 0
   180                           
   181                           ;initializer for leitura_sdcard@size
   182  0056A0  58                 	db	88
   183                           
   184                           	psect	idataBANK1
   185  005690                     __pidataBANK1:
   186                           	callstack 0
   187                           
   188                           ;initializer for escreve_inteiro_lcd@F3223
   189  005690  30                 	db	48
   190  005691  30                 	db	48
   191  005692  30                 	db	48
   192  005693  30                 	db	48
   193  005694  30                 	db	48
   194  005695  30                 	db	48
   195  005696  00                 	db	0
   196                           
   197                           	psect	idataBANK2
   198  005697                     __pidataBANK2:
   199                           	callstack 0
   200                           
   201                           ;initializer for escreve_inteiro_uart@F3215
   202  005697  30                 	db	48
   203  005698  30                 	db	48
   204  005699  30                 	db	48
   205  00569A  30                 	db	48
   206  00569B  30                 	db	48
   207  00569C  30                 	db	48
   208  00569D  00                 	db	0
   209                           
   210                           	psect	mediumconst
   211  006062                     __pmediumconst:
   212                           	callstack 0
   213  006062  00                 	db	0
   214  006063                     _fence_diff_long:
   215                           	callstack 0
   216  006063  2D                 	db	45
   217  006064  30                 	db	48
   218  006065  34                 	db	52
   219  006066  36                 	db	54
   220  006067  33                 	db	51
   221  006068  32                 	db	50
   222  006069  2E                 	db	46
   223  00606A  32                 	db	50
   224  00606B  33                 	db	51
   225  00606C  33                 	db	51
   226  00606D  31                 	db	49
   227  00606E  38                 	db	56
   228  00606F  2D                 	db	45
   229  006070  30                 	db	48
   230  006071  34                 	db	52
   231  006072  36                 	db	54
   232  006073  33                 	db	51
   233  006074  31                 	db	49
   234  006075  2E                 	db	46
   235  006076  37                 	db	55
   236  006077  35                 	db	53
   237  006078  39                 	db	57
   238  006079  30                 	db	48
   239  00607A  37                 	db	55
   240  00607B  2D                 	db	45
   241  00607C  30                 	db	48
   242  00607D  34                 	db	52
   243  00607E  36                 	db	54
   244  00607F  33                 	db	51
   245  006080  31                 	db	49
   246  006081  2E                 	db	46
   247  006082  37                 	db	55
   248  006083  35                 	db	53
   249  006084  39                 	db	57
   250  006085  30                 	db	48
   251  006086  37                 	db	55
   252  006087  2D                 	db	45
   253  006088  30                 	db	48
   254  006089  34                 	db	52
   255  00608A  36                 	db	54
   256  00608B  33                 	db	51
   257  00608C  32                 	db	50
   258  00608D  2E                 	db	46
   259  00608E  32                 	db	50
   260  00608F  33                 	db	51
   261  006090  33                 	db	51
   262  006091  31                 	db	49
   263  006092  38                 	db	56
   264  006093                     __end_of_fence_diff_long:
   265                           	callstack 0
   266  006093                     _fence_diff_lat:
   267                           	callstack 0
   268  006093  2D                 	db	45
   269  006094  32                 	db	50
   270  006095  33                 	db	51
   271  006096  33                 	db	51
   272  006097  39                 	db	57
   273  006098  2E                 	db	46
   274  006099  34                 	db	52
   275  00609A  39                 	db	57
   276  00609B  35                 	db	53
   277  00609C  37                 	db	55
   278  00609D  39                 	db	57
   279  00609E  2D                 	db	45
   280  00609F  32                 	db	50
   281  0060A0  33                 	db	51
   282  0060A1  33                 	db	51
   283  0060A2  39                 	db	57
   284  0060A3  2E                 	db	46
   285  0060A4  34                 	db	52
   286  0060A5  39                 	db	57
   287  0060A6  35                 	db	53
   288  0060A7  37                 	db	55
   289  0060A8  39                 	db	57
   290  0060A9  2D                 	db	45
   291  0060AA  32                 	db	50
   292  0060AB  33                 	db	51
   293  0060AC  33                 	db	51
   294  0060AD  39                 	db	57
   295  0060AE  2E                 	db	46
   296  0060AF  39                 	db	57
   297  0060B0  32                 	db	50
   298  0060B1  32                 	db	50
   299  0060B2  33                 	db	51
   300  0060B3  37                 	db	55
   301  0060B4  2D                 	db	45
   302  0060B5  32                 	db	50
   303  0060B6  33                 	db	51
   304  0060B7  33                 	db	51
   305  0060B8  39                 	db	57
   306  0060B9  2E                 	db	46
   307  0060BA  39                 	db	57
   308  0060BB  32                 	db	50
   309  0060BC  32                 	db	50
   310  0060BD  33                 	db	51
   311  0060BE  37                 	db	55
   312  0060BF                     __end_of_fence_diff_lat:
   313                           	callstack 0
   314  0060BF                     mensagem_inicial@F3661:
   315                           	callstack 0
   316  0060BF  54                 	db	84
   317  0060C0  43                 	db	67
   318  0060C1  43                 	db	67
   319  0060C2  2D                 	db	45
   320  0060C3  2D                 	db	45
   321  0060C4  54                 	db	84
   322  0060C5  45                 	db	69
   323  0060C6  4C                 	db	76
   324  0060C7  45                 	db	69
   325  0060C8  4D                 	db	77
   326  0060C9  54                 	db	84
   327  0060CA  52                 	db	82
   328  0060CB  49                 	db	73
   329  0060CC  41                 	db	65
   330  0060CD  00                 	db	0
   331  0060CE  00                 	db	0
   332  0060CF  00                 	db	0
   333  0060D0                     __end_ofmensagem_inicial@F3661:
   334                           	callstack 0
   335  0060D0                     mensagem_inicial@F3659:
   336                           	callstack 0
   337  0060D0  46                 	db	70
   338  0060D1  41                 	db	65
   339  0060D2  54                 	db	84
   340  0060D3  45                 	db	69
   341  0060D4  43                 	db	67
   342  0060D5  20                 	db	32
   343  0060D6  53                 	db	83
   344  0060D7  54                 	db	84
   345  0060D8  20                 	db	32
   346  0060D9  41                 	db	65
   347  0060DA  4E                 	db	78
   348  0060DB  44                 	db	68
   349  0060DC  52                 	db	82
   350  0060DD  45                 	db	69
   351  0060DE  00                 	db	0
   352  0060DF  00                 	db	0
   353  0060E0  00                 	db	0
   354  0060E1                     __end_ofmensagem_inicial@F3659:
   355                           	callstack 0
   356  0000                     _TMR0	set	4054
   357  0000                     _PORTEbits	set	3972
   358  0000                     _PCL	set	4089
   359  0000                     _PCLATH	set	4090
   360  0000                     _PIE1bits	set	3997
   361  0000                     _RCSTA	set	4011
   362  0000                     _TXSTA	set	4012
   363  0000                     _RCREG	set	4014
   364  0000                     _RCSTAbits	set	4011
   365  0000                     _SPBRG	set	4015
   366  0000                     _PIR1bits	set	3998
   367  0000                     _SSPBUF	set	4041
   368  0000                     _SSPCON1bits	set	4038
   369  0000                     _SSPSTATbits	set	4039
   370  0000                     _SSPCON1	set	4038
   371  0000                     _SSPSTAT	set	4039
   372  0000                     _TRISCbits	set	3988
   373  0000                     _TRISBbits	set	3987
   374  0000                     _PORTBbits	set	3969
   375  0000                     _PR2	set	4043
   376  0000                     _TMR2	set	4044
   377  0000                     _T2CON	set	4042
   378  0000                     _OSCCONbits	set	4051
   379  0000                     _TRISE	set	3990
   380  0000                     _TRISC	set	3988
   381  0000                     _TRISA	set	3986
   382  0000                     _TRISD	set	3989
   383  0000                     _LATB	set	3978
   384  0000                     _TRISB	set	3987
   385  0000                     _ADCON1	set	4033
   386  0000                     _T0CONbits	set	4053
   387  0000                     _INTCONbits	set	4082
   388  0000                     _PIE1	set	3997
   389  0000                     _INTCON3	set	4080
   390  0000                     _INTCON2	set	4081
   391  0000                     _INTCON	set	4082
   392  0000                     _SPPCFG	set	3939
   393  0000                     _SPPCON	set	3941
   394  0000                     _T0CON	set	4053
   395  0000                     _PORTDbits	set	3971
   396  0000                     _TRISDbits	set	3989
   397  0000                     _LATBbits	set	3978
   398  0000                     _LATCbits	set	3979
   399  0000                     _INT0IE	set	32660
   400  0000                     _INT0IF	set	32657
   401  0000                     _T0IF	set	32658
   402  0000                     _TMR0IF	set	32658
   403  0000                     _RCIF	set	31989
   404  0000                     _TXEN	set	32101
   405  0000                     _CREN	set	32092
   406  0000                     _SPEN	set	32095
   407  0000                     _SYNC	set	32100
   408  0000                     _BRGH	set	32098
   409  0060E1                     STR_16:
   410  0060E1  0A                 	db	10
   411  0060E2  76                 	db	118	;'v'
   412  0060E3  25                 	db	37
   413  0060E4  73                 	db	115	;'s'
   414  0060E5  3B                 	db	59	;';'
   415  0060E6  6C                 	db	108	;'l'
   416  0060E7  74                 	db	116	;'t'
   417  0060E8  25                 	db	37
   418  0060E9  73                 	db	115	;'s'
   419  0060EA  3B                 	db	59	;';'
   420  0060EB  6C                 	db	108	;'l'
   421  0060EC  6F                 	db	111	;'o'
   422  0060ED  25                 	db	37
   423  0060EE  73                 	db	115	;'s'
   424  0060EF  3B                 	db	59	;';'
   425  0060F0  72                 	db	114	;'r'
   426  0060F1  25                 	db	37
   427  0060F2  73                 	db	115	;'s'
   428  0060F3  3B                 	db	59	;';'
   429  0060F4  63                 	db	99	;'c'
   430  0060F5  25                 	db	37
   431  0060F6  73                 	db	115	;'s'
   432  0060F7  3B                 	db	59	;';'
   433  0060F8  6B                 	db	107	;'k'
   434  0060F9  25                 	db	37
   435  0060FA  73                 	db	115	;'s'
   436  0060FB  3B                 	db	59	;';'
   437  0060FC  68                 	db	104	;'h'
   438  0060FD  25                 	db	37
   439  0060FE  73                 	db	115	;'s'
   440  0060FF  3B                 	db	59	;';'
   441  006100  64                 	db	100	;'d'
   442  006101  25                 	db	37
   443  006102  73                 	db	115	;'s'
   444  006103  3B                 	db	59	;';'
   445  006104  66                 	db	102	;'f'
   446  006105  25                 	db	37
   447  006106  73                 	db	115	;'s'
   448  006107  00                 	db	0
   449  006108                     STR_20:
   450  006108  73                 	db	115	;'s'
   451  006109  74                 	db	116	;'t'
   452  00610A  72                 	db	114	;'r'
   453  00610B  69                 	db	105	;'i'
   454  00610C  6E                 	db	110	;'n'
   455  00610D  67                 	db	103	;'g'
   456  00610E  5F                 	db	95	;'_'
   457  00610F  64                 	db	100	;'d'
   458  006110  61                 	db	97	;'a'
   459  006111  64                 	db	100	;'d'
   460  006112  6F                 	db	111	;'o'
   461  006113  2E                 	db	46
   462  006114  6F                 	db	111	;'o'
   463  006115  64                 	db	100	;'d'
   464  006116  6F                 	db	111	;'o'
   465  006117  6D                 	db	109	;'m'
   466  006118  65                 	db	101	;'e'
   467  006119  74                 	db	116	;'t'
   468  00611A  72                 	db	114	;'r'
   469  00611B  6F                 	db	111	;'o'
   470  00611C  5F                 	db	95	;'_'
   471  00611D  74                 	db	116	;'t'
   472  00611E  6F                 	db	111	;'o'
   473  00611F  74                 	db	116	;'t'
   474  006120  61                 	db	97	;'a'
   475  006121  6C                 	db	108	;'l'
   476  006122  00                 	db	0
   477  006123  6F                 	db	111	;'o'
   478  006124  20                 	db	32
   479  006125  53                 	db	83	;'S'
   480  006126  69                 	db	105	;'i'
   481  006127  73                 	db	115	;'s'
   482  006128  74                 	db	116	;'t'
   483  006129  65                 	db	101	;'e'
   484  00612A  6D                 	db	109	;'m'
   485  00612B  61                 	db	97	;'a'
   486  00612C  20                 	db	32
   487  00612D  64                 	db	100	;'d'
   488  00612E  65                 	db	101	;'e'
   489  00612F  20                 	db	32
   490  006130  61                 	db	97	;'a'
   491  006131  72                 	db	114	;'r'
   492  006132  71                 	db	113	;'q'
   493  006133  75                 	db	117	;'u'
   494  006134  69                 	db	105	;'i'
   495  006135  76                 	db	118	;'v'
   496  006136  6F                 	db	111	;'o'
   497  006137  00                 	db	0
   498  006138                     STR_33:
   499  006138  42                 	db	66	;'B'
   500  006139  31                 	db	49	;'1'
   501  00613A  3A                 	db	58	;':'
   502  00613B  52                 	db	82	;'R'
   503  00613C  50                 	db	80	;'P'
   504  00613D  4D                 	db	77	;'M'
   505  00613E  20                 	db	32
   506  00613F  20                 	db	32
   507  006140  42                 	db	66	;'B'
   508  006141  32                 	db	50	;'2'
   509  006142  3A                 	db	58	;':'
   510  006143  46                 	db	70	;'F'
   511  006144  45                 	db	69	;'E'
   512  006145  4E                 	db	78	;'N'
   513  006146  43                 	db	67	;'C'
   514  006147  45                 	db	69	;'E'
   515  006148  00                 	db	0
   516  006149                     STR_19:
   517  006149  73                 	db	115	;'s'
   518  00614A  74                 	db	116	;'t'
   519  00614B  72                 	db	114	;'r'
   520  00614C  69                 	db	105	;'i'
   521  00614D  6E                 	db	110	;'n'
   522  00614E  67                 	db	103	;'g'
   523  00614F  5F                 	db	95	;'_'
   524  006150  64                 	db	100	;'d'
   525  006151  61                 	db	97	;'a'
   526  006152  64                 	db	100	;'d'
   527  006153  6F                 	db	111	;'o'
   528  006154  2E                 	db	46
   529  006155  63                 	db	99	;'c'
   530  006156  6F                 	db	111	;'o'
   531  006157  6D                 	db	109	;'m'
   532  006158  62                 	db	98	;'b'
   533  006159  00                 	db	0
   534  00615A                     STR_31:
   535  00615A  42                 	db	66	;'B'
   536  00615B  31                 	db	49	;'1'
   537  00615C  3A                 	db	58	;':'
   538  00615D  52                 	db	82	;'R'
   539  00615E  50                 	db	80	;'P'
   540  00615F  4D                 	db	77	;'M'
   541  006160  20                 	db	32
   542  006161  42                 	db	66	;'B'
   543  006162  32                 	db	50	;'2'
   544  006163  3A                 	db	58	;':'
   545  006164  46                 	db	70	;'F'
   546  006165  45                 	db	69	;'E'
   547  006166  4E                 	db	78	;'N'
   548  006167  43                 	db	67	;'C'
   549  006168  45                 	db	69	;'E'
   550  006169  00                 	db	0
   551  00616A                     STR_21:
   552  00616A  73                 	db	115	;'s'
   553  00616B  74                 	db	116	;'t'
   554  00616C  72                 	db	114	;'r'
   555  00616D  69                 	db	105	;'i'
   556  00616E  6E                 	db	110	;'n'
   557  00616F  67                 	db	103	;'g'
   558  006170  5F                 	db	95	;'_'
   559  006171  64                 	db	100	;'d'
   560  006172  61                 	db	97	;'a'
   561  006173  64                 	db	100	;'d'
   562  006174  6F                 	db	111	;'o'
   563  006175  2E                 	db	46
   564  006176  64                 	db	100	;'d'
   565  006177  74                 	db	116	;'t'
   566  006178  63                 	db	99	;'c'
   567  006179  00                 	db	0
   568  00617A                     STR_17:
   569  00617A  73                 	db	115	;'s'
   570  00617B  74                 	db	116	;'t'
   571  00617C  72                 	db	114	;'r'
   572  00617D  69                 	db	105	;'i'
   573  00617E  6E                 	db	110	;'n'
   574  00617F  67                 	db	103	;'g'
   575  006180  5F                 	db	95	;'_'
   576  006181  64                 	db	100	;'d'
   577  006182  61                 	db	97	;'a'
   578  006183  64                 	db	100	;'d'
   579  006184  6F                 	db	111	;'o'
   580  006185  2E                 	db	46
   581  006186  76                 	db	118	;'v'
   582  006187  65                 	db	101	;'e'
   583  006188  6C                 	db	108	;'l'
   584  006189  00                 	db	0
   585  00618A                     STR_18:
   586  00618A  73                 	db	115	;'s'
   587  00618B  74                 	db	116	;'t'
   588  00618C  72                 	db	114	;'r'
   589  00618D  69                 	db	105	;'i'
   590  00618E  6E                 	db	110	;'n'
   591  00618F  67                 	db	103	;'g'
   592  006190  5F                 	db	95	;'_'
   593  006191  64                 	db	100	;'d'
   594  006192  61                 	db	97	;'a'
   595  006193  64                 	db	100	;'d'
   596  006194  6F                 	db	111	;'o'
   597  006195  2E                 	db	46
   598  006196  72                 	db	114	;'r'
   599  006197  70                 	db	112	;'p'
   600  006198  6D                 	db	109	;'m'
   601  006199  00                 	db	0
   602  00619A                     STR_2:
   603  00619A  49                 	db	73	;'I'
   604  00619B  6E                 	db	110	;'n'
   605  00619C  73                 	db	115	;'s'
   606  00619D  69                 	db	105	;'i'
   607  00619E  72                 	db	114	;'r'
   608  00619F  61                 	db	97	;'a'
   609  0061A0  20                 	db	32
   610  0061A1  6F                 	db	111	;'o'
   611  0061A2  20                 	db	32
   612  0061A3  43                 	db	67	;'C'
   613  0061A4  61                 	db	97	;'a'
   614  0061A5  72                 	db	114	;'r'
   615  0061A6  74                 	db	116	;'t'
   616  0061A7  61                 	db	97	;'a'
   617  0061A8  6F                 	db	111	;'o'
   618  0061A9  00                 	db	0
   619  0061AA  45                 	db	69	;'E'
   620  0061AB  72                 	db	114	;'r'
   621  0061AC  72                 	db	114	;'r'
   622  0061AD  6F                 	db	111	;'o'
   623  0061AE  20                 	db	32
   624  0061AF  61                 	db	97	;'a'
   625  0061B0  6F                 	db	111	;'o'
   626  0061B1  20                 	db	32
   627  0061B2  6D                 	db	109	;'m'
   628  0061B3  6F                 	db	111	;'o'
   629  0061B4  6E                 	db	110	;'n'
   630  0061B5  74                 	db	116	;'t'
   631  0061B6  61                 	db	97	;'a'
   632  0061B7  72                 	db	114	;'r'
   633  0061B8  00                 	db	0
   634  0061B9                     STR_35:
   635  0061B9  52                 	db	82	;'R'
   636  0061BA  45                 	db	69	;'E'
   637  0061BB  47                 	db	71	;'G'
   638  0061BC  49                 	db	73	;'I'
   639  0061BD  41                 	db	65	;'A'
   640  0061BE  4F                 	db	79	;'O'
   641  0061BF  20                 	db	32
   642  0061C0  4E                 	db	78	;'N'
   643  0061C1  45                 	db	69	;'E'
   644  0061C2  47                 	db	71	;'G'
   645  0061C3  41                 	db	65	;'A'
   646  0061C4  44                 	db	68	;'D'
   647  0061C5  41                 	db	65	;'A'
   648  0061C6  00                 	db	0
   649  0061C7  45                 	db	69	;'E'
   650  0061C8  72                 	db	114	;'r'
   651  0061C9  72                 	db	114	;'r'
   652  0061CA  6F                 	db	111	;'o'
   653  0061CB  20                 	db	32
   654  0061CC  61                 	db	97	;'a'
   655  0061CD  6F                 	db	111	;'o'
   656  0061CE  20                 	db	32
   657  0061CF  63                 	db	99	;'c'
   658  0061D0  72                 	db	114	;'r'
   659  0061D1  69                 	db	105	;'i'
   660  0061D2  61                 	db	97	;'a'
   661  0061D3  72                 	db	114	;'r'
   662  0061D4  00                 	db	0
   663  0061D5  65                 	db	101	;'e'
   664  0061D6  78                 	db	120	;'x'
   665  0061D7  74                 	db	116	;'t'
   666  0061D8  66                 	db	102	;'f'
   667  0061D9  65                 	db	101	;'e'
   668  0061DA  6E                 	db	110	;'n'
   669  0061DB  63                 	db	99	;'c'
   670  0061DC  65                 	db	101	;'e'
   671  0061DD  2E                 	db	46
   672  0061DE  74                 	db	116	;'t'
   673  0061DF  78                 	db	120	;'x'
   674  0061E0  74                 	db	116	;'t'
   675  0061E1  00                 	db	0
   676  0061E2                     STR_8:
   677  0061E2  2D                 	db	45
   678  0061E3  30                 	db	48	;'0'
   679  0061E4  34                 	db	52	;'4'
   680  0061E5  36                 	db	54	;'6'
   681  0061E6  33                 	db	51	;'3'
   682  0061E7  31                 	db	49	;'1'
   683  0061E8  2E                 	db	46
   684  0061E9  38                 	db	56	;'8'
   685  0061EA  31                 	db	49	;'1'
   686  0061EB  37                 	db	55	;'7'
   687  0061EC  39                 	db	57	;'9'
   688  0061ED  30                 	db	48	;'0'
   689  0061EE  00                 	db	0
   690  0061EF                     STR_7:
   691  0061EF  2D                 	db	45
   692  0061F0  32                 	db	50	;'2'
   693  0061F1  33                 	db	51	;'3'
   694  0061F2  33                 	db	51	;'3'
   695  0061F3  39                 	db	57	;'9'
   696  0061F4  2E                 	db	46
   697  0061F5  37                 	db	55	;'7'
   698  0061F6  31                 	db	49	;'1'
   699  0061F7  31                 	db	49	;'1'
   700  0061F8  32                 	db	50	;'2'
   701  0061F9  31                 	db	49	;'1'
   702  0061FA  00                 	db	0
   703  0061FB                     STR_4:
   704  0061FB  4D                 	db	77	;'M'
   705  0061FC  4D                 	db	77	;'M'
   706  0061FD  43                 	db	67	;'C'
   707  0061FE  20                 	db	32
   708  0061FF  56                 	db	86	;'V'
   709  006200  65                 	db	101	;'e'
   710  006201  72                 	db	114	;'r'
   711  006202  2E                 	db	46
   712  006203  20                 	db	32
   713  006204  33                 	db	51	;'3'
   714  006205  00                 	db	0
   715  006206                     STR_1:
   716  006206  53                 	db	83	;'S'
   717  006207  65                 	db	101	;'e'
   718  006208  6D                 	db	109	;'m'
   719  006209  20                 	db	32
   720  00620A  43                 	db	67	;'C'
   721  00620B  61                 	db	97	;'a'
   722  00620C  72                 	db	114	;'r'
   723  00620D  74                 	db	116	;'t'
   724  00620E  61                 	db	97	;'a'
   725  00620F  6F                 	db	111	;'o'
   726  006210  00                 	db	0
   727  006211  56                 	db	86	;'V'
   728  006212  65                 	db	101	;'e'
   729  006213  72                 	db	114	;'r'
   730  006214  69                 	db	105	;'i'
   731  006215  66                 	db	102	;'f'
   732  006216  69                 	db	105	;'i'
   733  006217  71                 	db	113	;'q'
   734  006218  75                 	db	117	;'u'
   735  006219  65                 	db	101	;'e'
   736  00621A  00                 	db	0
   737  00621B  6F                 	db	111	;'o'
   738  00621C  20                 	db	32
   739  00621D  61                 	db	97	;'a'
   740  00621E  72                 	db	114	;'r'
   741  00621F  71                 	db	113	;'q'
   742  006220  75                 	db	117	;'u'
   743  006221  69                 	db	105	;'i'
   744  006222  76                 	db	118	;'v'
   745  006223  6F                 	db	111	;'o'
   746  006224  00                 	db	0
   747  006225                     STR_3:
   748  006225  53                 	db	83	;'S'
   749  006226  44                 	db	68	;'D'
   750  006227  20                 	db	32
   751  006228  56                 	db	86	;'V'
   752  006229  45                 	db	69	;'E'
   753  00622A  52                 	db	82	;'R'
   754  00622B  2E                 	db	46
   755  00622C  20                 	db	32
   756  00622D  31                 	db	49	;'1'
   757  00622E  00                 	db	0
   758  00622F  6F                 	db	111	;'o'
   759  006230  20                 	db	32
   760  006231  63                 	db	99	;'c'
   761  006232  61                 	db	97	;'a'
   762  006233  72                 	db	114	;'r'
   763  006234  74                 	db	116	;'t'
   764  006235  61                 	db	97	;'a'
   765  006236  6F                 	db	111	;'o'
   766  006237  00                 	db	0
   767  006238                     STR_32:
   768  006238  42                 	db	66	;'B'
   769  006239  32                 	db	50	;'2'
   770  00623A  3A                 	db	58	;':'
   771  00623B  48                 	db	72	;'H'
   772  00623C  4F                 	db	79	;'O'
   773  00623D  4D                 	db	77	;'M'
   774  00623E  45                 	db	69	;'E'
   775  00623F  00                 	db	0
   776  006240                     STR_36:
   777  006240  4C                 	db	76	;'L'
   778  006241  4F                 	db	79	;'O'
   779  006242  2D                 	db	45
   780  006243  4C                 	db	76	;'L'
   781  006244  54                 	db	84	;'T'
   782  006245  3A                 	db	58	;':'
   783  006246  00                 	db	0
   784  006247                     STR_26:
   785  006247  44                 	db	68	;'D'
   786  006248  45                 	db	69	;'E'
   787  006249  4E                 	db	78	;'N'
   788  00624A  54                 	db	84	;'T'
   789  00624B  52                 	db	82	;'R'
   790  00624C  4F                 	db	79	;'O'
   791  00624D  00                 	db	0
   792  00624E                     STR_6:
   793  00624E  47                 	db	71	;'G'
   794  00624F  50                 	db	80	;'P'
   795  006250  47                 	db	71	;'G'
   796  006251  47                 	db	71	;'G'
   797  006252  41                 	db	65	;'A'
   798  006253  00                 	db	0
   799  006254                     STR_5:
   800  006254  47                 	db	71	;'G'
   801  006255  50                 	db	80	;'P'
   802  006256  52                 	db	82	;'R'
   803  006257  4D                 	db	77	;'M'
   804  006258  43                 	db	67	;'C'
   805  006259  00                 	db	0
   806  00625A                     STR_28:
   807  00625A  56                 	db	86	;'V'
   808  00625B  45                 	db	69	;'E'
   809  00625C  4C                 	db	76	;'L'
   810  00625D  3A                 	db	58	;':'
   811  00625E  00                 	db	0
   812  00625F                     STR_27:
   813  00625F  52                 	db	82	;'R'
   814  006260  50                 	db	80	;'P'
   815  006261  4D                 	db	77	;'M'
   816  006262  3A                 	db	58	;':'
   817  006263  00                 	db	0
   818  006264                     STR_25:
   819  006264  46                 	db	70	;'F'
   820  006265  4F                 	db	79	;'O'
   821  006266  52                 	db	82	;'R'
   822  006267  41                 	db	65	;'A'
   823  006268  00                 	db	0
   824  006269                     STR_15:
   825  006269  2E                 	db	46
   826  00626A  74                 	db	116	;'t'
   827  00626B  6C                 	db	108	;'l'
   828  00626C  6D                 	db	109	;'m'
   829  00626D  00                 	db	0
   830  00626E                     STR_30:
   831  00626E  6C                 	db	108	;'l'
   832  00626F  6F                 	db	111	;'o'
   833  006270  3A                 	db	58	;':'
   834  006271  00                 	db	0
   835  006272                     STR_29:
   836  006272  6C                 	db	108	;'l'
   837  006273  74                 	db	116	;'t'
   838  006274  3A                 	db	58	;':'
   839  006275  00                 	db	0
   840  006276                     STR_23:
   841  006276  46                 	db	70	;'F'
   842  006277  41                 	db	65	;'A'
   843  006278  54                 	db	84	;'T'
   844  006279  00                 	db	0
   845  00627A  0D                 	db	13
   846  00627B  0A                 	db	10
   847  00627C  00                 	db	0
   848  00627D                     STR_37:
   849  00627D  2D                 	db	45
   850  00627E  00                 	db	0
   851  00627F  00                 	db	0	; dummy byte at the end
   852  0000                     
   853                           ; #config settings
   854                           
   855                           	psect	cinit
   856  0042D4                     __pcinit:
   857                           	callstack 0
   858  0042D4                     start_initialization:
   859                           	callstack 0
   860  0042D4                     __initialization:
   861                           	callstack 0
   862                           
   863                           ; Initialize objects allocated to BANK2 (7 bytes)
   864                           ; load TBLPTR registers with __pidataBANK2
   865  0042D4  0E97               	movlw	low __pidataBANK2
   866  0042D6  6EF6               	movwf	tblptrl,c
   867  0042D8  0E56               	movlw	high __pidataBANK2
   868  0042DA  6EF7               	movwf	tblptrh,c
   869  0042DC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   870  0042DE  6EF8               	movwf	tblptru,c
   871  0042E0  EE02  F0BF         	lfsr	0,__pdataBANK2
   872  0042E4  EE10 F007          	lfsr	1,7
   873  0042E8                     copy_data0:
   874  0042E8  0009               	tblrd		*+
   875  0042EA  CFF5 FFEE          	movff	tablat,postinc0
   876  0042EE  50E5               	movf	postdec1,w,c
   877  0042F0  50E1               	movf	fsr1l,w,c
   878  0042F2  E1FA               	bnz	copy_data0
   879                           
   880                           ; Initialize objects allocated to BANK1 (7 bytes)
   881                           ; load TBLPTR registers with __pidataBANK1
   882  0042F4  0E90               	movlw	low __pidataBANK1
   883  0042F6  6EF6               	movwf	tblptrl,c
   884  0042F8  0E56               	movlw	high __pidataBANK1
   885  0042FA  6EF7               	movwf	tblptrh,c
   886  0042FC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   887  0042FE  6EF8               	movwf	tblptru,c
   888  004300  EE01  F0F8         	lfsr	0,__pdataBANK1
   889  004304  EE10 F007          	lfsr	1,7
   890  004308                     copy_data1:
   891  004308  0009               	tblrd		*+
   892  00430A  CFF5 FFEE          	movff	tablat,postinc0
   893  00430E  50E5               	movf	postdec1,w,c
   894  004310  50E1               	movf	fsr1l,w,c
   895  004312  E1FA               	bnz	copy_data1
   896                           
   897                           ; Initialize objects allocated to COMRAM (1 bytes)
   898                           ; load TBLPTR registers with __pidataCOMRAM
   899  004314  0EA0               	movlw	low __pidataCOMRAM
   900  004316  6EF6               	movwf	tblptrl,c
   901  004318  0E56               	movlw	high __pidataCOMRAM
   902  00431A  6EF7               	movwf	tblptrh,c
   903  00431C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   904  00431E  6EF8               	movwf	tblptru,c
   905  004320  0009               	tblrd		*+	;fetch initializer
   906  004322  CFF5 F046          	movff	tablat,__pdataCOMRAM
   907                           
   908                           ; Clear objects allocated to BIGRAM (544 bytes)
   909  004326  EE02  F0C6         	lfsr	0,__pbssBIGRAM
   910  00432A  EE12 F020          	lfsr	1,544
   911  00432E                     clear_0:
   912  00432E  6AEE               	clrf	postinc0,c
   913  004330  50E5               	movf	postdec1,w,c
   914  004332  50E1               	movf	fsr1l,w,c
   915  004334  E1FC               	bnz	clear_0
   916  004336  50E2               	movf	fsr1h,w,c
   917  004338  E1FA               	bnz	clear_0
   918                           
   919                           ; Clear objects allocated to BANK2 (157 bytes)
   920  00433A  EE02  F000         	lfsr	0,__pbssBANK2
   921  00433E  0E9D               	movlw	157
   922  004340                     clear_1:
   923  004340  6AEE               	clrf	postinc0,c
   924  004342  06E8               	decf	wreg,f,c
   925  004344  E1FD               	bnz	clear_1
   926                           
   927                           ; Clear objects allocated to BANK1 (248 bytes)
   928  004346  EE01  F000         	lfsr	0,__pbssBANK1
   929  00434A  0EF8               	movlw	248
   930  00434C                     clear_2:
   931  00434C  6AEE               	clrf	postinc0,c
   932  00434E  06E8               	decf	wreg,f,c
   933  004350  E1FD               	bnz	clear_2
   934                           
   935                           ; Clear objects allocated to BANK0 (6 bytes)
   936  004352  0100               	movlb	0
   937  004354  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   938  004356  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   939  004358  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   940  00435A  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   941  00435C  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   942  00435E  6BF8               	clrf	__pbssBANK0& (0+255),b
   943                           
   944                           ; Clear objects allocated to COMRAM (19 bytes)
   945  004360  EE00  F033         	lfsr	0,__pbssCOMRAM
   946  004364  0E13               	movlw	19
   947  004366                     clear_3:
   948  004366  6AEE               	clrf	postinc0,c
   949  004368  06E8               	decf	wreg,f,c
   950  00436A  E1FD               	bnz	clear_3
   951  00436C                     end_of_initialization:
   952                           	callstack 0
   953  00436C                     __end_of__initialization:
   954                           	callstack 0
   955  00436C  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   956  00436E  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   957  004370  0E00               	movlw	low (__Lmediumconst shr (0+16))
   958  004372  6EF8               	movwf	tblptru,c
   959  004374  0100               	movlb	0
   960  004376  EF6A  F029         	goto	_main	;jump to C main() function
   961                           
   962                           	psect	bssCOMRAM
   963  000033                     __pbssCOMRAM:
   964                           	callstack 0
   965  000033                     _flag:
   966                           	callstack 0
   967  000033                     	ds	3
   968  000036                     _time_atualizacao:
   969                           	callstack 0
   970  000036                     	ds	2
   971  000038                     _FatFs:
   972                           	callstack 0
   973  000038                     	ds	2
   974  00003A                     troca_de_tela@last_state:
   975                           	callstack 0
   976  00003A                     	ds	1
   977  00003B                     troca_de_tela@state:
   978                           	callstack 0
   979  00003B                     	ds	1
   980  00003C                     _tarefa_em_execucao:
   981                           	callstack 0
   982  00003C                     	ds	1
   983  00003D                     _sinaliza_int_timer:
   984                           	callstack 0
   985  00003D                     	ds	1
   986  00003E                     _data_uart_recebe:
   987                           	callstack 0
   988  00003E                     	ds	1
   989  00003F                     _estado:
   990                           	callstack 0
   991  00003F                     	ds	1
   992  000040                     escrita_sdcard@f_fix:
   993                           	callstack 0
   994  000040                     	ds	1
   995  000041                     _data_hoje:
   996                           	callstack 0
   997  000041                     	ds	1
   998  000042                     	ds	1
   999  000043                     _Term:
  1000                           	callstack 0
  1001  000043                     	ds	1
  1002  000044                     _SentenceType:
  1003                           	callstack 0
  1004  000044                     	ds	1
  1005  000045                     _char_number:
  1006                           	callstack 0
  1007  000045                     	ds	1
  1008                           
  1009                           	psect	dataCOMRAM
  1010  000046                     __pdataCOMRAM:
  1011                           	callstack 0
  1012  000046                     	ds	1
  1013                           
  1014                           	psect	bssBANK0
  1015  0000F8                     __pbssBANK0:
  1016                           	callstack 0
  1017  0000F8                     _point_buff_gps_lat:
  1018                           	callstack 0
  1019  0000F8                     	ds	2
  1020  0000FA                     _time_recovery:
  1021                           	callstack 0
  1022  0000FA                     	ds	2
  1023  0000FC                     _time_sd:
  1024                           	callstack 0
  1025  0000FC                     	ds	2
  1026                           
  1027                           	psect	bssBANK1
  1028  000100                     __pbssBANK1:
  1029                           	callstack 0
  1030  000100                     _tempo_tarefa:
  1031                           	callstack 0
  1032  000100                     	ds	8
  1033  000108                     _tempo_backup:
  1034                           	callstack 0
  1035  000108                     	ds	8
  1036  000110                     _p_tarefas:
  1037                           	callstack 0
  1038  000110                     	ds	8
  1039  000118                     _point_buff_gps_long:
  1040                           	callstack 0
  1041  000118                     	ds	2
  1042  00011A                     _timeout_tarefa:
  1043                           	callstack 0
  1044  00011A                     	ds	2
  1045  00011C                     _fsid:
  1046                           	callstack 0
  1047  00011C                     	ds	2
  1048  00011E                     _GPGGA_ok:
  1049                           	callstack 0
  1050  00011E                     	ds	2
  1051  000120                     _GPRMC_ok:
  1052                           	callstack 0
  1053  000120                     	ds	2
  1054  000122                     _data_buff:
  1055                           	callstack 0
  1056  000122                     	ds	2
  1057  000124                     _poligono_ext:
  1058                           	callstack 0
  1059  000124                     	ds	124
  1060  0001A0                     _fil:
  1061                           	callstack 0
  1062  0001A0                     	ds	28
  1063  0001BC                     _buffer:
  1064                           	callstack 0
  1065  0001BC                     	ds	12
  1066  0001C8                     _rawTime:
  1067                           	callstack 0
  1068  0001C8                     	ds	11
  1069  0001D3                     _rawAltitude:
  1070                           	callstack 0
  1071  0001D3                     	ds	7
  1072  0001DA                     _rawDate:
  1073                           	callstack 0
  1074  0001DA                     	ds	7
  1075  0001E1                     _rawCourse:
  1076                           	callstack 0
  1077  0001E1                     	ds	6
  1078  0001E7                     _rawSpeed:
  1079                           	callstack 0
  1080  0001E7                     	ds	6
  1081  0001ED                     _sentence:
  1082                           	callstack 0
  1083  0001ED                     	ds	6
  1084  0001F3                     _rawSatellites:
  1085                           	callstack 0
  1086  0001F3                     	ds	3
  1087  0001F6                     _rawFix:
  1088                           	callstack 0
  1089  0001F6                     	ds	2
  1090                           
  1091                           	psect	dataBANK1
  1092  0001F8                     __pdataBANK1:
  1093                           	callstack 0
  1094  0001F8                     escreve_inteiro_lcd@F3223:
  1095                           	callstack 0
  1096  0001F8                     	ds	7
  1097                           
  1098                           	psect	bssBANK2
  1099  000200                     __pbssBANK2:
  1100                           	callstack 0
  1101  000200                     _string_dado:
  1102                           	callstack 0
  1103  000200                     	ds	73
  1104  000249                     _dado_arquivo:
  1105                           	callstack 0
  1106  000249                     	ds	20
  1107  00025D                     _filename:
  1108                           	callstack 0
  1109  00025D                     	ds	15
  1110  00026C                     _rawLongitude:
  1111                           	callstack 0
  1112  00026C                     	ds	13
  1113  000279                     _rawLatitude:
  1114                           	callstack 0
  1115  000279                     	ds	13
  1116  000286                     _temp_buff_long:
  1117                           	callstack 0
  1118  000286                     	ds	12
  1119  000292                     _temp_buff_lat:
  1120                           	callstack 0
  1121  000292                     	ds	11
  1122                           
  1123                           	psect	dataBANK2
  1124  0002BF                     __pdataBANK2:
  1125                           	callstack 0
  1126  0002BF                     	ds	7
  1127                           
  1128                           	psect	bssBIGRAM
  1129  0002C6                     __pbssBIGRAM:
  1130                           	callstack 0
  1131  0002C6                     _fs:
  1132                           	callstack 0
  1133  0002C6                     	ds	544
  1134                           
  1135                           	psect	cstackBANK2
  1136  00029D                     __pcstackBANK2:
  1137                           	callstack 0
  1138  00029D                     fprintf@s:
  1139                           	callstack 0
  1140                           
  1141                           ; 16 bytes @ 0x0
  1142  00029D                     	ds	16
  1143  0002AD                     fprintf@res:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x10
  1147  0002AD                     	ds	2
  1148  0002AF                     _fprintf$2139:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x12
  1152  0002AF                     	ds	2
  1153  0002B1                     fprintf@w:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x14
  1157  0002B1                     	ds	2
  1158  0002B3                     fprintf@f:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x16
  1162  0002B3                     	ds	1
  1163  0002B4                     fprintf@r:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x17
  1167  0002B4                     	ds	1
  1168  0002B5                     fprintf@val:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x18
  1172  0002B5                     	ds	4
  1173  0002B9                     fprintf@arp:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x1C
  1177  0002B9                     	ds	1
  1178  0002BA                     fprintf@cc:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x1D
  1182  0002BA                     	ds	2
  1183  0002BC                     fprintf@i:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x1F
  1187  0002BC                     	ds	2
  1188  0002BE                     fprintf@c:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x21
  1192  0002BE                     	ds	1
  1193                           
  1194                           	psect	cstackBANK0
  1195  000060                     __pcstackBANK0:
  1196                           	callstack 0
  1197  000060                     ??_get_fattime:
  1198  000060                     configura_baudrate_uart@x:
  1199                           	callstack 0
  1200  000060                     calcula_diff_graus@temp_var_deg:
  1201                           	callstack 0
  1202  000060                     escreve_inteiro_lcd@texto:
  1203                           	callstack 0
  1204  000060                     mensagem_inicial@msg_linha_um:
  1205                           	callstack 0
  1206                           
  1207                           ; 17 bytes @ 0x0
  1208  000060                     	ds	1
  1209  000061                     sdc_disk_read@start_add:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x1
  1213  000061                     	ds	1
  1214  000062                     sdc_disk_initialize@stat:
  1215                           	callstack 0
  1216  000062                     sdc_disk_write@count1:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x2
  1220  000062                     	ds	1
  1221  000063                     sdc_disk_initialize@count1:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3
  1225  000063                     	ds	1
  1226  000064                     sdc_disk_write@res:
  1227                           	callstack 0
  1228  000064                     calcula_diff_graus@point:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x4
  1232  000064                     	ds	1
  1233  000065                     calcula_diff_graus@count:
  1234                           	callstack 0
  1235  000065                     sdc_disk_initialize@crc_number:
  1236                           	callstack 0
  1237  000065                     sdc_disk_read@length:
  1238                           	callstack 0
  1239  000065                     sdc_disk_write@j:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x5
  1243  000065                     	ds	2
  1244  000067                     sdc_disk_initialize@buff_i:
  1245                           	callstack 0
  1246  000067                     sdc_disk_read@buff:
  1247                           	callstack 0
  1248  000067                     sdc_disk_write@buff:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x7
  1252  000067                     	ds	1
  1253  000068                     sdc_disk_initialize@ocr:
  1254                           	callstack 0
  1255  000068                     disk_read@buff:
  1256                           	callstack 0
  1257  000068                     disk_write@buff:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x8
  1261  000068                     	ds	1
  1262  000069                     sdc_disk_initialize@count2:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x9
  1266  000069                     	ds	1
  1267  00006A                     disk_read@sector:
  1268                           	callstack 0
  1269  00006A                     disk_write@sector:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0xA
  1273  00006A                     	ds	1
  1274  00006B                     sdc_disk_initialize@buff:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0xB
  1278  00006B                     	ds	3
  1279  00006E                     disk_read@count:
  1280                           	callstack 0
  1281  00006E                     disk_write@count:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0xE
  1285  00006E                     	ds	1
  1286  00006F                     disk_read@pdrv:
  1287                           	callstack 0
  1288  00006F                     disk_write@pdrv:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0xF
  1292  00006F                     	ds	1
  1293  000070                     disk_read@result:
  1294                           	callstack 0
  1295  000070                     disk_write@result:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x10
  1299  000070                     	ds	1
  1300  000071                     mensagem_inicial@msg_dois:
  1301                           	callstack 0
  1302                           
  1303                           ; 17 bytes @ 0x11
  1304  000071                     	ds	1
  1305  000072                     disk_read@res:
  1306                           	callstack 0
  1307  000072                     disk_write@res:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x12
  1311  000072                     	ds	1
  1312  000073                     move_window@sector:
  1313                           	callstack 0
  1314  000073                     check_fs@sect:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x13
  1318  000073                     	ds	4
  1319  000077                     ??_move_window:
  1320  000077                     check_fs@fs:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x17
  1324  000077                     	ds	2
  1325  000079                     auto_mount@path:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x19
  1329  000079                     	ds	1
  1330  00007A                     auto_mount@chk_wp:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x1A
  1334  00007A                     	ds	1
  1335  00007B                     ??_auto_mount:
  1336                           
  1337                           ; 1 bytes @ 0x1B
  1338  00007B                     	ds	6
  1339  000081                     move_window@n:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x21
  1343  000081                     	ds	1
  1344  000082                     move_window@wsect:
  1345                           	callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x22
  1348  000082                     	ds	4
  1349  000086                     move_window@fs:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x26
  1353  000086                     	ds	2
  1354  000088                     ??_get_cluster:
  1355  000088                     put_cluster@clust:
  1356                           	callstack 0
  1357  000088                     f_sync@fp:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x28
  1361  000088                     	ds	2
  1362  00008A                     put_cluster@val:
  1363                           	callstack 0
  1364  00008A                     f_sync@tim:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x2A
  1368  00008A                     	ds	2
  1369  00008C                     ??_put_cluster:
  1370                           
  1371                           ; 1 bytes @ 0x2C
  1372  00008C                     	ds	2
  1373  00008E                     f_sync@res:
  1374                           	callstack 0
  1375                           
  1376                           ; 1 bytes @ 0x2E
  1377  00008E                     	ds	1
  1378  00008F                     f_sync@dir:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x2F
  1382  00008F                     	ds	2
  1383  000091                     get_cluster@wc:
  1384                           	callstack 0
  1385  000091                     f_close@fp:
  1386                           	callstack 0
  1387  000091                     auto_mount@maxclust:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x31
  1391  000091                     	ds	1
  1392  000092                     _put_cluster$1536:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x32
  1396  000092                     	ds	1
  1397  000093                     f_close@res:
  1398                           	callstack 0
  1399  000093                     get_cluster@fatsect:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x33
  1403  000093                     	ds	1
  1404  000094                     _put_cluster$1537:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x34
  1408  000094                     	ds	1
  1409  000095                     auto_mount@bootsect:
  1410                           	callstack 0
  1411                           
  1412                           ; 4 bytes @ 0x35
  1413  000095                     	ds	1
  1414  000096                     put_cluster@fatsect:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x36
  1418  000096                     	ds	1
  1419  000097                     get_cluster@bc:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x37
  1423  000097                     	ds	2
  1424  000099                     get_cluster@fs:
  1425                           	callstack 0
  1426  000099                     auto_mount@totalsect:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x39
  1430  000099                     	ds	1
  1431  00009A                     put_cluster@bc:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x3A
  1435  00009A                     	ds	1
  1436  00009B                     next_dir_entry@dj:
  1437                           	callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x3B
  1440  00009B                     	ds	1
  1441  00009C                     ??_next_dir_entry:
  1442  00009C                     put_cluster@p:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x3C
  1446  00009C                     	ds	1
  1447  00009D                     auto_mount@p:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x3D
  1451  00009D                     	ds	1
  1452  00009E                     put_cluster@fs:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x3E
  1456  00009E                     	ds	1
  1457  00009F                     auto_mount@fmt:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x3F
  1461  00009F                     	ds	1
  1462  0000A0                     ?_create_chain:
  1463                           	callstack 0
  1464  0000A0                     auto_mount@stat:
  1465                           	callstack 0
  1466  0000A0                     remove_chain@clust:
  1467                           	callstack 0
  1468  0000A0                     create_chain@clust:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x40
  1472  0000A0                     	ds	1
  1473  0000A1                     auto_mount@fatsize:
  1474                           	callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x41
  1477  0000A1                     	ds	1
  1478  0000A2                     
  1479                           ; 1 bytes @ 0x42
  1480  0000A2                     	ds	1
  1481  0000A3                     next_dir_entry@clust:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x43
  1485  0000A3                     	ds	1
  1486  0000A4                     remove_chain@nxt:
  1487                           	callstack 0
  1488  0000A4                     create_chain@mcl:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x44
  1492  0000A4                     	ds	1
  1493  0000A5                     next_dir_entry@idx:
  1494                           	callstack 0
  1495  0000A5                     auto_mount@fs:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x45
  1499  0000A5                     	ds	1
  1500  0000A6                     remove_chain@fs:
  1501                           	callstack 0
  1502  0000A6                     create_chain@fs:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x46
  1506  0000A6                     	ds	1
  1507  0000A7                     trace_path@dj:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x47
  1511  0000A7                     	ds	1
  1512  0000A8                     trace_path@fn:
  1513                           	callstack 0
  1514  0000A8                     create_chain@cstat:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x48
  1518  0000A8                     	ds	1
  1519  0000A9                     trace_path@path:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x49
  1523  0000A9                     	ds	1
  1524  0000AA                     create_chain@scl:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x4A
  1528  0000AA                     	ds	1
  1529  0000AB                     trace_path@dir:
  1530                           	callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x4B
  1533  0000AB                     	ds	1
  1534  0000AC                     ??_trace_path:
  1535  0000AC                     create_chain@ncl:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x4C
  1539  0000AC                     	ds	2
  1540  0000AE                     reserve_direntry@dj:
  1541                           	callstack 0
  1542  0000AE                     f_write@fp:
  1543                           	callstack 0
  1544  0000AE                     f_lseek@fp:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x4E
  1548  0000AE                     	ds	1
  1549  0000AF                     reserve_direntry@dir:
  1550                           	callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x4F
  1553  0000AF                     	ds	1
  1554  0000B0                     ??_reserve_direntry:
  1555  0000B0                     f_write@buff:
  1556                           	callstack 0
  1557  0000B0                     _trace_path$1693:
  1558                           	callstack 0
  1559  0000B0                     f_lseek@ofs:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x50
  1563  0000B0                     	ds	1
  1564  0000B1                     f_write@btw:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x51
  1568  0000B1                     	ds	1
  1569  0000B2                     _trace_path$1695:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x52
  1573  0000B2                     	ds	1
  1574  0000B3                     f_write@bw:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x53
  1578  0000B3                     	ds	1
  1579  0000B4                     ??_f_lseek:
  1580  0000B4                     ??_f_write:
  1581  0000B4                     trace_path@fs:
  1582                           	callstack 0
  1583  0000B4                     reserve_direntry@sector:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x54
  1587  0000B4                     	ds	2
  1588  0000B6                     trace_path@clust:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x56
  1592  0000B6                     	ds	2
  1593  0000B8                     trace_path@ds:
  1594                           	callstack 0
  1595  0000B8                     reserve_direntry@n:
  1596                           	callstack 0
  1597                           
  1598                           ; 1 bytes @ 0x58
  1599  0000B8                     	ds	1
  1600  0000B9                     trace_path@dptr:
  1601                           	callstack 0
  1602  0000B9                     reserve_direntry@dptr:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x59
  1606  0000B9                     	ds	2
  1607  0000BB                     reserve_direntry@c:
  1608                           	callstack 0
  1609                           
  1610                           ; 1 bytes @ 0x5B
  1611  0000BB                     	ds	1
  1612  0000BC                     reserve_direntry@clust:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x5C
  1616  0000BC                     	ds	2
  1617  0000BE                     reserve_direntry@fs:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x5E
  1621  0000BE                     	ds	2
  1622  0000C0                     f_write@res:
  1623                           	callstack 0
  1624  0000C0                     f_open@fp:
  1625                           	callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x60
  1628  0000C0                     	ds	1
  1629  0000C1                     f_write@wbuff:
  1630                           	callstack 0
  1631                           
  1632                           ; 1 bytes @ 0x61
  1633  0000C1                     	ds	1
  1634  0000C2                     f_open@path:
  1635                           	callstack 0
  1636  0000C2                     f_write@sect:
  1637                           	callstack 0
  1638                           
  1639                           ; 4 bytes @ 0x62
  1640  0000C2                     	ds	2
  1641  0000C4                     f_open@mode:
  1642                           	callstack 0
  1643  0000C4                     f_lseek@res:
  1644                           	callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x64
  1647  0000C4                     	ds	1
  1648  0000C5                     ??_f_open:
  1649  0000C5                     f_lseek@ifptr:
  1650                           	callstack 0
  1651                           
  1652                           ; 4 bytes @ 0x65
  1653  0000C5                     	ds	1
  1654  0000C6                     f_write@cc:
  1655                           	callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x66
  1658  0000C6                     	ds	2
  1659  0000C8                     f_write@clust:
  1660                           	callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x68
  1663  0000C8                     	ds	1
  1664  0000C9                     f_lseek@csize:
  1665                           	callstack 0
  1666  0000C9                     f_open@fn:
  1667                           	callstack 0
  1668                           
  1669                           ; 12 bytes @ 0x69
  1670  0000C9                     	ds	1
  1671  0000CA                     f_write@wcnt:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x6A
  1675  0000CA                     	ds	2
  1676  0000CC                     ?_fputc:
  1677                           	callstack 0
  1678  0000CC                     fputc@chr:
  1679                           	callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x6C
  1682  0000CC                     	ds	1
  1683  0000CD                     f_lseek@clust:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x6D
  1687  0000CD                     	ds	1
  1688  0000CE                     fputc@fil:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x6E
  1692  0000CE                     	ds	2
  1693  0000D0                     fputc@c:
  1694                           	callstack 0
  1695                           
  1696                           ; 1 bytes @ 0x70
  1697  0000D0                     	ds	1
  1698  0000D1                     fputc@bw:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x71
  1702  0000D1                     	ds	2
  1703  0000D3                     ?_fputs:
  1704                           	callstack 0
  1705  0000D3                     fputs@str:
  1706                           	callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x73
  1709  0000D3                     	ds	2
  1710  0000D5                     f_open@rs:
  1711                           	callstack 0
  1712  0000D5                     fputs@fil:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x75
  1716  0000D5                     	ds	2
  1717  0000D7                     ??_fputs:
  1718  0000D7                     f_open@dw:
  1719                           	callstack 0
  1720                           
  1721                           ; 4 bytes @ 0x77
  1722  0000D7                     	ds	1
  1723  0000D8                     fputs@n:
  1724                           	callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x78
  1727  0000D8                     	ds	2
  1728  0000DA                     ?_fprintf:
  1729                           	callstack 0
  1730  0000DA                     fprintf@fil:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x7A
  1734  0000DA                     	ds	1
  1735  0000DB                     f_open@res:
  1736                           	callstack 0
  1737                           
  1738                           ; 1 bytes @ 0x7B
  1739  0000DB                     	ds	1
  1740  0000DC                     f_open@dir:
  1741                           	callstack 0
  1742  0000DC                     fprintf@str:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x7C
  1746  0000DC                     	ds	2
  1747  0000DE                     f_open@dj:
  1748                           	callstack 0
  1749                           
  1750                           ; 14 bytes @ 0x7E
  1751  0000DE                     	ds	18
  1752  0000F0                     ??_fprintf:
  1753                           
  1754                           ; 1 bytes @ 0x90
  1755  0000F0                     	ds	2
  1756  0000F2                     
  1757                           ; 1 bytes @ 0x92
  1758  0000F2                     	ds	1
  1759  0000F3                     disparo_gravacao@fix_gps:
  1760                           	callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x93
  1763  0000F3                     	ds	2
  1764  0000F5                     
  1765                           ; 1 bytes @ 0x95
  1766  0000F5                     	ds	2
  1767  0000F7                     escalonador@cont:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x97
  1771  0000F7                     	ds	1
  1772                           
  1773                           	psect	cstackCOMRAM
  1774  000001                     __pcstackCOMRAM:
  1775                           	callstack 0
  1776  000001                     ?_strcmp:
  1777                           	callstack 0
  1778  000001                     stringcpy@str1:
  1779                           	callstack 0
  1780  000001                     strcmp@s1:
  1781                           	callstack 0
  1782  000001                     i2write_timer_zero@timer0:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x0
  1786  000001                     	ds	2
  1787  000003                     stringcpy@str2:
  1788                           	callstack 0
  1789  000003                     strcmp@s2:
  1790                           	callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x2
  1793  000003                     	ds	2
  1794  000005                     ??_strcmp:
  1795  000005                     stringcpy@dir:
  1796                           	callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x4
  1799  000005                     	ds	2
  1800  000007                     ??_stringcpy:
  1801  000007                     strcmp@r:
  1802                           	callstack 0
  1803                           
  1804                           ; 1 bytes @ 0x6
  1805  000007                     	ds	2
  1806  000009                     stringcpy@chr:
  1807                           	callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x8
  1810  000009                     	ds	1
  1811  00000A                     GPSRead@buff:
  1812                           	callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x9
  1815  00000A                     	ds	1
  1816  00000B                     GPSRead@c:
  1817                           	callstack 0
  1818                           
  1819                           ; 1 bytes @ 0xA
  1820  00000B                     	ds	1
  1821  00000C                     ??_isr:
  1822                           
  1823                           ; 1 bytes @ 0xB
  1824  00000C                     	ds	12
  1825  000018                     isr@cont:
  1826                           	callstack 0
  1827                           
  1828                           ; 1 bytes @ 0x17
  1829  000018                     	ds	1
  1830  000019                     ??_dummy_clocks:
  1831  000019                     ??_verifica_diferenca_graus:
  1832  000019                     ??_verifica_diferenca_minutos:
  1833  000019                     ??_isdigit:
  1834  000019                     ?_fix:
  1835                           	callstack 0
  1836  000019                     ?_strlen:
  1837                           	callstack 0
  1838  000019                     ?_memcmp:
  1839                           	callstack 0
  1840  000019                     ?_GPSSecond:
  1841                           	callstack 0
  1842  000019                     ?_GPSMinute:
  1843                           	callstack 0
  1844  000019                     ?_GPSHour:
  1845                           	callstack 0
  1846  000019                     ?_GPSDay:
  1847                           	callstack 0
  1848  000019                     ?_GPSMonth:
  1849                           	callstack 0
  1850  000019                     ?_GPSyear:
  1851                           	callstack 0
  1852  000019                     ?___wmul:
  1853                           	callstack 0
  1854  000019                     ?___lwdiv:
  1855                           	callstack 0
  1856  000019                     ?___lwmod:
  1857                           	callstack 0
  1858  000019                     ?___lmul:
  1859                           	callstack 0
  1860  000019                     ?___lldiv:
  1861                           	callstack 0
  1862  000019                     ?___aldiv:
  1863                           	callstack 0
  1864  000019                     ?___llmod:
  1865                           	callstack 0
  1866  000019                     disk_ioctl@cmd:
  1867                           	callstack 0
  1868  000019                     delay@contador_ext:
  1869                           	callstack 0
  1870  000019                     response@buff:
  1871                           	callstack 0
  1872  000019                     write_timer_zero@timer0:
  1873                           	callstack 0
  1874  000019                     f_mount@fs:
  1875                           	callstack 0
  1876  000019                     ___wmul@multiplier:
  1877                           	callstack 0
  1878  000019                     ___lwdiv@dividend:
  1879                           	callstack 0
  1880  000019                     ___lwmod@dividend:
  1881                           	callstack 0
  1882  000019                     memcmp@s1:
  1883                           	callstack 0
  1884  000019                     memcpy@d1:
  1885                           	callstack 0
  1886  000019                     memset@p1:
  1887                           	callstack 0
  1888  000019                     strcat@to:
  1889                           	callstack 0
  1890  000019                     strcpy@to:
  1891                           	callstack 0
  1892  000019                     strlen@s:
  1893                           	callstack 0
  1894  000019                     wait_ready@timeout:
  1895                           	callstack 0
  1896  000019                     ___lmul@multiplier:
  1897                           	callstack 0
  1898  000019                     ___lldiv@dividend:
  1899                           	callstack 0
  1900  000019                     ___aldiv@dividend:
  1901                           	callstack 0
  1902  000019                     ___llmod@dividend:
  1903                           	callstack 0
  1904                           
  1905                           ; 4 bytes @ 0x18
  1906  000019                     	ds	1
  1907  00001A                     sdc_disk_status@pdrv:
  1908                           	callstack 0
  1909  00001A                     delay@contador_int:
  1910                           	callstack 0
  1911  00001A                     escreve_SPI@dado:
  1912                           	callstack 0
  1913  00001A                     _isdigit$3141:
  1914                           	callstack 0
  1915  00001A                     disk_ioctl@buff:
  1916                           	callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x19
  1919  00001A                     	ds	1
  1920  00001B                     ??_GPSSecond:
  1921  00001B                     ??_GPSMinute:
  1922  00001B                     ??_GPSHour:
  1923  00001B                     ??_GPSDay:
  1924  00001B                     ??_GPSMonth:
  1925  00001B                     ??_GPSyear:
  1926  00001B                     escreve_cmd_lcd@comando:
  1927                           	callstack 0
  1928  00001B                     endereco_cursor_lcd@endereco:
  1929                           	callstack 0
  1930  00001B                     escreve_caractere_lcd@data:
  1931                           	callstack 0
  1932  00001B                     dummy_clocks@n:
  1933                           	callstack 0
  1934  00001B                     f_mount@drv:
  1935                           	callstack 0
  1936  00001B                     isdigit@c:
  1937                           	callstack 0
  1938  00001B                     ___wmul@multiplicand:
  1939                           	callstack 0
  1940  00001B                     ___lwdiv@divisor:
  1941                           	callstack 0
  1942  00001B                     ___lwmod@divisor:
  1943                           	callstack 0
  1944  00001B                     memcmp@s2:
  1945                           	callstack 0
  1946  00001B                     memcpy@s1:
  1947                           	callstack 0
  1948  00001B                     memset@c:
  1949                           	callstack 0
  1950  00001B                     strcat@from:
  1951                           	callstack 0
  1952  00001B                     strcpy@from:
  1953                           	callstack 0
  1954  00001B                     strlen@cp:
  1955                           	callstack 0
  1956                           
  1957                           ; 2 bytes @ 0x1A
  1958  00001B                     	ds	1
  1959  00001C                     ??_init_lcd:
  1960  00001C                     disk_ioctl@pdrv:
  1961                           	callstack 0
  1962  00001C                     posicao_cursor_lcd@coluna:
  1963                           	callstack 0
  1964  00001C                     escreve_frase_ram_lcd@buffer:
  1965                           	callstack 0
  1966  00001C                     dummy_clocks@i:
  1967                           	callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x1B
  1970  00001C                     	ds	1
  1971  00001D                     ?_get_fattime:
  1972                           	callstack 0
  1973  00001D                     disk_status@pdrv:
  1974                           	callstack 0
  1975  00001D                     disk_ioctl@res:
  1976                           	callstack 0
  1977  00001D                     posicao_cursor_lcd@linha:
  1978                           	callstack 0
  1979  00001D                     wait_ready@res:
  1980                           	callstack 0
  1981  00001D                     verifica_diferenca_graus@select_data:
  1982                           	callstack 0
  1983  00001D                     verifica_diferenca_minutos@select_data:
  1984                           	callstack 0
  1985  00001D                     ___lwdiv@counter:
  1986                           	callstack 0
  1987  00001D                     ___lwmod@counter:
  1988                           	callstack 0
  1989  00001D                     monta_sd@dado:
  1990                           	callstack 0
  1991  00001D                     ___wmul@product:
  1992                           	callstack 0
  1993  00001D                     memcmp@n:
  1994                           	callstack 0
  1995  00001D                     memcpy@n:
  1996                           	callstack 0
  1997  00001D                     memset@n:
  1998                           	callstack 0
  1999  00001D                     strcat@cp:
  2000                           	callstack 0
  2001  00001D                     strcpy@cp:
  2002                           	callstack 0
  2003  00001D                     ___lmul@multiplicand:
  2004                           	callstack 0
  2005  00001D                     ___lldiv@divisor:
  2006                           	callstack 0
  2007  00001D                     ___aldiv@divisor:
  2008                           	callstack 0
  2009  00001D                     ___llmod@divisor:
  2010                           	callstack 0
  2011                           
  2012                           ; 4 bytes @ 0x1C
  2013  00001D                     	ds	1
  2014  00001E                     disk_status@stat:
  2015                           	callstack 0
  2016  00001E                     posicao_cursor_lcd@endereco:
  2017                           	callstack 0
  2018  00001E                     verifica_diferenca_graus@point_index_lat:
  2019                           	callstack 0
  2020  00001E                     verifica_diferenca_minutos@point_index_lat:
  2021                           	callstack 0
  2022  00001E                     ___lwdiv@quotient:
  2023                           	callstack 0
  2024  00001E                     command@arg:
  2025                           	callstack 0
  2026                           
  2027                           ; 4 bytes @ 0x1D
  2028  00001E                     	ds	1
  2029  00001F                     ??_memcmp:
  2030  00001F                     ??_mensagem_inicial:
  2031  00001F                     ?_Latitude:
  2032                           	callstack 0
  2033  00001F                     ?_Longitude:
  2034                           	callstack 0
  2035  00001F                     ?_atoi:
  2036                           	callstack 0
  2037  00001F                     monta_sd@index:
  2038                           	callstack 0
  2039  00001F                     verifica_diferenca_graus@point_index_long:
  2040                           	callstack 0
  2041  00001F                     verifica_diferenca_minutos@point_index_long:
  2042                           	callstack 0
  2043  00001F                     memcpy@tmp:
  2044                           	callstack 0
  2045  00001F                     validate@fs:
  2046                           	callstack 0
  2047  00001F                     atoi@s:
  2048                           	callstack 0
  2049  00001F                     memset@p:
  2050                           	callstack 0
  2051                           
  2052                           ; 2 bytes @ 0x1E
  2053  00001F                     	ds	1
  2054  000020                     monta_sd@size:
  2055                           	callstack 0
  2056  000020                     verifica_diferenca_graus@j:
  2057                           	callstack 0
  2058  000020                     verifica_diferenca_minutos@j:
  2059                           	callstack 0
  2060  000020                     utoa@buf:
  2061                           	callstack 0
  2062  000020                     memcpy@d:
  2063                           	callstack 0
  2064                           
  2065                           ; 2 bytes @ 0x1F
  2066  000020                     	ds	1
  2067  000021                     ??_atoi:
  2068  000021                     monta_sd@i:
  2069                           	callstack 0
  2070  000021                     make_dirfile@path:
  2071                           	callstack 0
  2072  000021                     verifica_diferenca_graus@point:
  2073                           	callstack 0
  2074  000021                     verifica_diferenca_minutos@point:
  2075                           	callstack 0
  2076  000021                     ___aldiv@counter:
  2077                           	callstack 0
  2078  000021                     ___llmod@counter:
  2079                           	callstack 0
  2080  000021                     validate@id:
  2081                           	callstack 0
  2082  000021                     utoa@val:
  2083                           	callstack 0
  2084  000021                     _armazena_longitude$3503:
  2085                           	callstack 0
  2086  000021                     _armazena_latitude$3504:
  2087                           	callstack 0
  2088  000021                     ___lmul@product:
  2089                           	callstack 0
  2090  000021                     ___lldiv@quotient:
  2091                           	callstack 0
  2092  000021                     get_fattime@f_time:
  2093                           	callstack 0
  2094                           
  2095                           ; 10 bytes @ 0x20
  2096  000021                     	ds	1
  2097  000022                     command@CRC:
  2098                           	callstack 0
  2099  000022                     make_dirfile@dirname:
  2100                           	callstack 0
  2101  000022                     verifica_diferenca_graus@i:
  2102                           	callstack 0
  2103  000022                     verifica_diferenca_minutos@i:
  2104                           	callstack 0
  2105  000022                     ___aldiv@sign:
  2106                           	callstack 0
  2107  000022                     memcpy@s:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x21
  2111  000022                     	ds	1
  2112  000023                     ??_make_dirfile:
  2113  000023                     ??_validate:
  2114  000023                     command@CMD:
  2115                           	callstack 0
  2116  000023                     atoi@sign:
  2117                           	callstack 0
  2118  000023                     utoa@base:
  2119                           	callstack 0
  2120  000023                     ___aldiv@quotient:
  2121                           	callstack 0
  2122                           
  2123                           ; 4 bytes @ 0x22
  2124  000023                     	ds	1
  2125  000024                     command@argument:
  2126                           	callstack 0
  2127  000024                     atoi@a:
  2128                           	callstack 0
  2129                           
  2130                           ; 2 bytes @ 0x23
  2131  000024                     	ds	1
  2132  000025                     ?_clust2sect:
  2133                           	callstack 0
  2134  000025                     ___lldiv@counter:
  2135                           	callstack 0
  2136  000025                     sdc_disk_read@p_buff:
  2137                           	callstack 0
  2138  000025                     sdc_disk_write@p_buff:
  2139                           	callstack 0
  2140  000025                     clust2sect@clust:
  2141                           	callstack 0
  2142  000025                     _make_dirfile$1646:
  2143                           	callstack 0
  2144  000025                     utoa@v:
  2145                           	callstack 0
  2146                           
  2147                           ; 2 bytes @ 0x24
  2148  000025                     	ds	1
  2149  000026                     ??_calcula_diff_graus:
  2150  000026                     ??_calcula_diff_minutos:
  2151                           
  2152                           ; 1 bytes @ 0x25
  2153  000026                     	ds	1
  2154  000027                     make_dirfile@b:
  2155                           	callstack 0
  2156  000027                     utoa@c:
  2157                           	callstack 0
  2158  000027                     sdc_reset@count_nosd:
  2159                           	callstack 0
  2160  000027                     sdc_disk_read@sector:
  2161                           	callstack 0
  2162  000027                     sdc_disk_write@sector:
  2163                           	callstack 0
  2164  000027                     configura_baudrate_uart@baudrate:
  2165                           	callstack 0
  2166                           
  2167                           ; 4 bytes @ 0x26
  2168  000027                     	ds	1
  2169  000028                     make_dirfile@t:
  2170                           	callstack 0
  2171  000028                     itoa@buf:
  2172                           	callstack 0
  2173                           
  2174                           ; 1 bytes @ 0x27
  2175  000028                     	ds	1
  2176  000029                     ??_clust2sect:
  2177  000029                     make_dirfile@a:
  2178                           	callstack 0
  2179  000029                     sdc_reset@count:
  2180                           	callstack 0
  2181  000029                     itoa@val:
  2182                           	callstack 0
  2183                           
  2184                           ; 2 bytes @ 0x28
  2185  000029                     	ds	1
  2186  00002A                     make_dirfile@n:
  2187                           	callstack 0
  2188                           
  2189                           ; 1 bytes @ 0x29
  2190  00002A                     	ds	1
  2191  00002B                     ??_configura_baudrate_uart:
  2192  00002B                     sdc_reset@buff:
  2193                           	callstack 0
  2194  00002B                     sdc_disk_read@count:
  2195                           	callstack 0
  2196  00002B                     sdc_disk_write@count:
  2197                           	callstack 0
  2198  00002B                     make_dirfile@c:
  2199                           	callstack 0
  2200  00002B                     itoa@base:
  2201                           	callstack 0
  2202                           
  2203                           ; 2 bytes @ 0x2A
  2204  00002B                     	ds	1
  2205  00002C                     ??_sdc_disk_initialize:
  2206  00002C                     ??_sdc_disk_read:
  2207  00002C                     ??_sdc_disk_write:
  2208  00002C                     calcula_diff_minutos@point:
  2209                           	callstack 0
  2210                           
  2211                           ; 1 bytes @ 0x2B
  2212  00002C                     	ds	1
  2213  00002D                     disk_initialize@pdrv:
  2214                           	callstack 0
  2215  00002D                     calcula_diff_minutos@count:
  2216                           	callstack 0
  2217                           
  2218                           ; 1 bytes @ 0x2C
  2219  00002D                     	ds	1
  2220  00002E                     ??_verifica_fence_externo:
  2221  00002E                     disk_initialize@stat:
  2222                           	callstack 0
  2223  00002E                     escreve_inteiro_lcd@valor:
  2224                           	callstack 0
  2225  00002E                     clust2sect@fs:
  2226                           	callstack 0
  2227                           
  2228                           ; 2 bytes @ 0x2D
  2229  00002E                     	ds	2
  2230  000030                     ??_troca_de_tela:
  2231  000030                     ??_disk_read:
  2232  000030                     ??_disk_write:
  2233  000030                     
  2234                           ; 1 bytes @ 0x2F
  2235  000030                     	ds	1
  2236  000031                     ?_get_cluster:
  2237                           	callstack 0
  2238  000031                     sync@fs:
  2239                           	callstack 0
  2240  000031                     get_cluster@clust:
  2241                           	callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x30
  2244  000031                     	ds	2
  2245  000033                     
  2246                           ; 1 bytes @ 0x32
  2247 ;;
  2248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2249 ;;
  2250 ;; *************** function _main *****************
  2251 ;; Defined at:
  2252 ;;		line 221 in file "main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels required when called:   18
  2272 ;; This function calls:
  2273 ;;		_dados_gps_to_sd
  2274 ;;		_escalonador
  2275 ;;		_inicializa_tarefas
  2276 ;;		_inicializa_uart
  2277 ;;		_init_hardware
  2278 ;;		_init_lcd
  2279 ;;		_mensagem_inicial
  2280 ;; This function is called by:
  2281 ;;		Startup code after reset
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text0
  2286  0052D4                     __ptext0:
  2287                           	callstack 0
  2288  0052D4                     _main:
  2289                           	callstack 13
  2290                           
  2291                           ;main.c: 223: init_hardware();
  2292                           
  2293                           ;incstack = 0
  2294  0052D4  ECE2  F02A         	call	_init_hardware	;wreg free
  2295                           
  2296                           ;main.c: 224: T0CONbits.TMR0ON = 0;
  2297  0052D8  9ED5               	bcf	213,7,c	;volatile
  2298                           
  2299                           ;main.c: 225: init_lcd();
  2300  0052DA  EC10  F022         	call	_init_lcd	;wreg free
  2301                           
  2302                           ;main.c: 226: mensagem_inicial();
  2303  0052DE  EC95  F024         	call	_mensagem_inicial	;wreg free
  2304                           
  2305                           ;main.c: 227: inicializa_tarefas();
  2306  0052E2  ECB0  F025         	call	_inicializa_tarefas	;wreg free
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;main.c: 228: inicializa_uart();
  2310  0052E6  EC05  F02A         	call	_inicializa_uart	;wreg free
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 229: T0CONbits.TMR0ON = 1;
  2314  0052EA  8ED5               	bsf	213,7,c	;volatile
  2315  0052EC                     l12334:
  2316                           
  2317                           ;main.c: 231: {;main.c: 233: if ((sinaliza_int_timer == 1) && (4))
  2318  0052EC  043D               	decf	_sinaliza_int_timer^0,w,c
  2319  0052EE  A4D8               	btfss	status,2,c
  2320  0052F0  D004               	goto	l12340
  2321                           
  2322                           ;main.c: 234: {;main.c: 235: sinaliza_int_timer = 0;
  2323  0052F2  0E00               	movlw	0
  2324  0052F4  6E3D               	movwf	_sinaliza_int_timer^0,c
  2325                           
  2326                           ;main.c: 236: escalonador();
  2327  0052F6  ECBD  F021         	call	_escalonador	;wreg free
  2328  0052FA                     l12340:
  2329                           
  2330                           ;main.c: 237: };main.c: 238: dados_gps_to_sd();
  2331  0052FA  EC9E  F026         	call	_dados_gps_to_sd	;wreg free
  2332  0052FE  D7F6               	goto	l12334
  2333  005300                     __end_of_main:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _mensagem_inicial *****************
  2337 ;; Defined at:
  2338 ;;		line 249 in file "main.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2343 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0
  2354 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2355 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2356 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2357 ;;Total ram usage:       36 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    6
  2360 ;; This function calls:
  2361 ;;		_escreve_cmd_lcd
  2362 ;;		_escreve_frase_ram_lcd
  2363 ;;		_posicao_cursor_lcd
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text1
  2370  00492A                     __ptext1:
  2371                           	callstack 0
  2372  00492A                     _mensagem_inicial:
  2373                           	callstack 24
  2374                           
  2375                           ;main.c: 251: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2376                           
  2377                           ;incstack = 0
  2378  00492A  0ED0               	movlw	low mensagem_inicial@F3659
  2379  00492C  6EF6               	movwf	tblptrl,c
  2380  00492E                     	if	1	;There is more than 1 active tblptr byte
  2381  00492E  0E60               	movlw	high mensagem_inicial@F3659
  2382  004930  6EF7               	movwf	tblptrh,c
  2383  004932                     	endif
  2384  004932                     	if	0	;There are less than 3 active tblptr bytes
  2385  004932                     	endif
  2386  004932  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2387  004936  0E10               	movlw	16
  2388  004938                     u15320:
  2389  004938  0009               	tblrd		*+
  2390  00493A  CFF5 FFDE          	movff	tablat,postinc2
  2391  00493E  06E8               	decf	wreg,f,c
  2392  004940  E2FB               	bc	u15320
  2393                           
  2394                           ;main.c: 252: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2395  004942  0EBF               	movlw	low mensagem_inicial@F3661
  2396  004944  6EF6               	movwf	tblptrl,c
  2397  004946                     	if	1	;There is more than 1 active tblptr byte
  2398  004946  0E60               	movlw	high mensagem_inicial@F3661
  2399  004948  6EF7               	movwf	tblptrh,c
  2400  00494A                     	endif
  2401  00494A                     	if	0	;There are less than 3 active tblptr bytes
  2402  00494A                     	endif
  2403  00494A  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2404  00494E  0E10               	movlw	16
  2405  004950                     u15330:
  2406  004950  0009               	tblrd		*+
  2407  004952  CFF5 FFDE          	movff	tablat,postinc2
  2408  004956  06E8               	decf	wreg,f,c
  2409  004958  E2FB               	bc	u15330
  2410                           
  2411                           ;main.c: 254: posicao_cursor_lcd(1,0);
  2412  00495A  0E00               	movlw	0
  2413  00495C  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  2414  00495E  0E01               	movlw	1
  2415  004960  EC17  F026         	call	_posicao_cursor_lcd
  2416                           
  2417                           ;main.c: 255: escreve_frase_ram_lcd(msg_linha_um);
  2418  004964  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2419  004966  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2420  004968  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2421  00496A  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2422                           
  2423                           ;main.c: 257: posicao_cursor_lcd(2,0);
  2424  00496E  0E00               	movlw	0
  2425  004970  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  2426  004972  0E02               	movlw	2
  2427  004974  EC17  F026         	call	_posicao_cursor_lcd
  2428                           
  2429                           ;main.c: 258: escreve_frase_ram_lcd(msg_dois);
  2430  004978  0E71               	movlw	low mensagem_inicial@msg_dois
  2431  00497A  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2432  00497C  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2433  00497E  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2434                           
  2435                           ;main.c: 259: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2436  004982  0E3D               	movlw	61
  2437  004984  6E20               	movwf	(??_mensagem_inicial+1)^0,c
  2438  004986  0EE1               	movlw	225
  2439  004988  6E1F               	movwf	??_mensagem_inicial^0,c
  2440  00498A  0E40               	movlw	64
  2441  00498C                     u15507:
  2442  00498C  2EE8               	decfsz	wreg,f,c
  2443  00498E  D7FE               	bra	u15507
  2444  004990  2E1F               	decfsz	??_mensagem_inicial^0,f,c
  2445  004992  D7FC               	bra	u15507
  2446  004994  2E20               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2447  004996  D7FA               	bra	u15507
  2448                           
  2449                           ;main.c: 260: escreve_cmd_lcd(0b00000001);
  2450  004998  0E01               	movlw	1
  2451  00499A  EC88  F023         	call	_escreve_cmd_lcd
  2452  00499E  0012               	return		;funcret
  2453  0049A0                     __end_of_mensagem_inicial:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _init_lcd *****************
  2457 ;; Defined at:
  2458 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    5
  2479 ;; This function calls:
  2480 ;;		_delay
  2481 ;;		_escreve_cmd_lcd
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text2
  2488  004420                     __ptext2:
  2489                           	callstack 0
  2490  004420                     _init_lcd:
  2491                           	callstack 25
  2492                           
  2493                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2494                           
  2495                           ;incstack = 0
  2496  004420  9495               	bcf	149,2,c	;volatile
  2497                           
  2498                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2499  004422  9295               	bcf	149,1,c	;volatile
  2500                           
  2501                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2502  004424  9095               	bcf	149,0,c	;volatile
  2503                           
  2504                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2505  004426  9895               	bcf	149,4,c	;volatile
  2506                           
  2507                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2508  004428  9A95               	bcf	149,5,c	;volatile
  2509                           
  2510                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2511  00442A  9C95               	bcf	149,6,c	;volatile
  2512                           
  2513                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2514  00442C  9E95               	bcf	149,7,c	;volatile
  2515                           
  2516                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2517  00442E  9483               	bcf	131,2,c	;volatile
  2518                           
  2519                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2520  004430  9283               	bcf	131,1,c	;volatile
  2521                           
  2522                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2523  004432  9083               	bcf	131,0,c	;volatile
  2524                           
  2525                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2526  004434  9E83               	bcf	131,7,c	;volatile
  2527                           
  2528                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2529  004436  9C83               	bcf	131,6,c	;volatile
  2530                           
  2531                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2532  004438  8A83               	bsf	131,5,c	;volatile
  2533                           
  2534                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2535  00443A  8883               	bsf	131,4,c	;volatile
  2536                           
  2537                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2538  00443C  0EEA               	movlw	234
  2539  00443E  6E1C               	movwf	??_init_lcd^0,c
  2540  004440  0EC3               	movlw	195
  2541  004442                     u15517:
  2542  004442  2EE8               	decfsz	wreg,f,c
  2543  004444  D7FE               	bra	u15517
  2544  004446  2E1C               	decfsz	??_init_lcd^0,f,c
  2545  004448  D7FC               	bra	u15517
  2546  00444A  F000               	nop	
  2547                           
  2548                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2549  00444C  8083               	bsf	131,0,c	;volatile
  2550                           
  2551                           ;display_lcd.c: 108: delay();
  2552  00444E  ECB8  F02A         	call	_delay	;wreg free
  2553                           
  2554                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2555  004452  9083               	bcf	131,0,c	;volatile
  2556                           
  2557                           ;display_lcd.c: 110: delay();
  2558  004454  ECB8  F02A         	call	_delay	;wreg free
  2559                           
  2560                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2561  004458  0E4E               	movlw	78
  2562  00445A  6E1C               	movwf	??_init_lcd^0,c
  2563  00445C  0EEB               	movlw	235
  2564  00445E                     u15527:
  2565  00445E  2EE8               	decfsz	wreg,f,c
  2566  004460  D7FE               	bra	u15527
  2567  004462  2E1C               	decfsz	??_init_lcd^0,f,c
  2568  004464  D7FC               	bra	u15527
  2569  004466  F000               	nop	
  2570                           
  2571                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2572  004468  8083               	bsf	131,0,c	;volatile
  2573                           
  2574                           ;display_lcd.c: 119: delay();
  2575  00446A  ECB8  F02A         	call	_delay	;wreg free
  2576                           
  2577                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2578  00446E  9083               	bcf	131,0,c	;volatile
  2579                           
  2580                           ;display_lcd.c: 121: delay();
  2581  004470  ECB8  F02A         	call	_delay	;wreg free
  2582                           
  2583                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2584  004474  0E4E               	movlw	78
  2585  004476  6E1C               	movwf	??_init_lcd^0,c
  2586  004478  0EEB               	movlw	235
  2587  00447A                     u15537:
  2588  00447A  2EE8               	decfsz	wreg,f,c
  2589  00447C  D7FE               	bra	u15537
  2590  00447E  2E1C               	decfsz	??_init_lcd^0,f,c
  2591  004480  D7FC               	bra	u15537
  2592  004482  F000               	nop	
  2593                           
  2594                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2595  004484  8083               	bsf	131,0,c	;volatile
  2596                           
  2597                           ;display_lcd.c: 130: delay();
  2598  004486  ECB8  F02A         	call	_delay	;wreg free
  2599                           
  2600                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2601  00448A  9083               	bcf	131,0,c	;volatile
  2602                           
  2603                           ;display_lcd.c: 132: delay();
  2604  00448C  ECB8  F02A         	call	_delay	;wreg free
  2605                           
  2606                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2607  004490  9E83               	bcf	131,7,c	;volatile
  2608                           
  2609                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2610  004492  9C83               	bcf	131,6,c	;volatile
  2611                           
  2612                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2613  004494  8A83               	bsf	131,5,c	;volatile
  2614                           
  2615                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2616  004496  9883               	bcf	131,4,c	;volatile
  2617                           
  2618                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2619  004498  8083               	bsf	131,0,c	;volatile
  2620                           
  2621                           ;display_lcd.c: 143: delay();
  2622  00449A  ECB8  F02A         	call	_delay	;wreg free
  2623                           
  2624                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2625  00449E  9083               	bcf	131,0,c	;volatile
  2626                           
  2627                           ;display_lcd.c: 145: delay();
  2628  0044A0  ECB8  F02A         	call	_delay	;wreg free
  2629                           
  2630                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2631  0044A4  0E28               	movlw	40
  2632  0044A6  EC88  F023         	call	_escreve_cmd_lcd
  2633                           
  2634                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2635  0044AA  0E06               	movlw	6
  2636  0044AC  EC88  F023         	call	_escreve_cmd_lcd
  2637                           
  2638                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2639  0044B0  0E0E               	movlw	14
  2640  0044B2  EC88  F023         	call	_escreve_cmd_lcd
  2641                           
  2642                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2643  0044B6  0E01               	movlw	1
  2644  0044B8  EC88  F023         	call	_escreve_cmd_lcd
  2645  0044BC  0012               	return		;funcret
  2646  0044BE                     __end_of_init_lcd:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _init_hardware *****************
  2650 ;; Defined at:
  2651 ;;		line 52 in file "bibliotecas/hardware.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    5
  2672 ;; This function calls:
  2673 ;;		_config_timer_dois
  2674 ;;		_config_timer_zero
  2675 ;;		_init_interrupt
  2676 ;;		_init_oscilador
  2677 ;;		_init_ports
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text3
  2684  0055C4                     __ptext3:
  2685                           	callstack 0
  2686  0055C4                     _init_hardware:
  2687                           	callstack 25
  2688                           
  2689                           ;hardware.c: 55: init_oscilador();
  2690                           
  2691                           ;incstack = 0
  2692  0055C4  EC44  F02B         	call	_init_oscilador	;wreg free
  2693                           
  2694                           ;hardware.c: 58: init_ports();
  2695  0055C8  ECC7  F02A         	call	_init_ports	;wreg free
  2696                           
  2697                           ;hardware.c: 61: config_timer_zero();
  2698  0055CC  ECD5  F02A         	call	_config_timer_zero	;wreg free
  2699                           
  2700                           ;hardware.c: 64: config_timer_dois();
  2701  0055D0  EC0F  F02B         	call	_config_timer_dois	;wreg free
  2702                           
  2703                           ;hardware.c: 67: init_interrupt();
  2704  0055D4  ECED  F02A         	call	_init_interrupt	;wreg free
  2705  0055D8  0012               	return		;funcret
  2706  0055DA                     __end_of_init_hardware:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _init_ports *****************
  2710 ;; Defined at:
  2711 ;;		line 151 in file "bibliotecas/hardware.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    3
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_init_hardware
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text4
  2740  00558E                     __ptext4:
  2741                           	callstack 0
  2742  00558E                     _init_ports:
  2743                           	callstack 26
  2744                           
  2745                           ;hardware.c: 153: ADCON1 = 0X0F;
  2746                           
  2747                           ;incstack = 0
  2748  00558E  0E0F               	movlw	15
  2749  005590  6EC1               	movwf	193,c	;volatile
  2750                           
  2751                           ;hardware.c: 154: TRISB = 0b00000001;
  2752  005592  0E01               	movlw	1
  2753  005594  6E93               	movwf	147,c	;volatile
  2754                           
  2755                           ;hardware.c: 155: LATB = 0xFF;
  2756  005596  688A               	setf	138,c	;volatile
  2757                           
  2758                           ;hardware.c: 156: TRISD = 0x00;
  2759  005598  0E00               	movlw	0
  2760  00559A  6E95               	movwf	149,c	;volatile
  2761                           
  2762                           ;hardware.c: 157: TRISA = 0b00000111;
  2763  00559C  0E07               	movlw	7
  2764  00559E  6E92               	movwf	146,c	;volatile
  2765                           
  2766                           ;hardware.c: 158: TRISC = 0x01111111;
  2767  0055A0  0E11               	movlw	17
  2768  0055A2  6E94               	movwf	148,c	;volatile
  2769                           
  2770                           ;hardware.c: 159: TRISE = 0b00000011;
  2771  0055A4  0E03               	movlw	3
  2772  0055A6  6E96               	movwf	150,c	;volatile
  2773  0055A8  0012               	return		;funcret
  2774  0055AA                     __end_of_init_ports:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _init_oscilador *****************
  2778 ;; Defined at:
  2779 ;;		line 169 in file "bibliotecas/hardware.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		None
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    3
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_init_hardware
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text5
  2808  005688                     __ptext5:
  2809                           	callstack 0
  2810  005688                     _init_oscilador:
  2811                           	callstack 26
  2812                           
  2813                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  2814                           
  2815                           ;incstack = 0
  2816  005688  88D3               	bsf	211,4,c	;volatile
  2817                           
  2818                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  2819  00568A  8AD3               	bsf	211,5,c	;volatile
  2820                           
  2821                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  2822  00568C  8CD3               	bsf	211,6,c	;volatile
  2823  00568E  0012               	return		;funcret
  2824  005690                     __end_of_init_oscilador:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _init_interrupt *****************
  2828 ;; Defined at:
  2829 ;;		line 94 in file "bibliotecas/hardware.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    3
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_init_hardware
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text6
  2858  0055DA                     __ptext6:
  2859                           	callstack 0
  2860  0055DA                     _init_interrupt:
  2861                           	callstack 26
  2862                           
  2863                           ;hardware.c: 96: INTCON = 0b10110000;
  2864                           
  2865                           ;incstack = 0
  2866  0055DA  0EB0               	movlw	176
  2867  0055DC  6EF2               	movwf	242,c	;volatile
  2868                           
  2869                           ;hardware.c: 97: INTCON2 = 0b00000000;
  2870  0055DE  0E00               	movlw	0
  2871  0055E0  6EF1               	movwf	241,c	;volatile
  2872                           
  2873                           ;hardware.c: 98: INTCON3 = 0b00000000;
  2874  0055E2  0E00               	movlw	0
  2875  0055E4  6EF0               	movwf	240,c	;volatile
  2876                           
  2877                           ;hardware.c: 100: PIE1 = 0b00101000;
  2878  0055E6  0E28               	movlw	40
  2879  0055E8  6E9D               	movwf	157,c	;volatile
  2880  0055EA  0012               	return		;funcret
  2881  0055EC                     __end_of_init_interrupt:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _config_timer_zero *****************
  2885 ;; Defined at:
  2886 ;;		line 79 in file "bibliotecas/hardware.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    4
  2907 ;; This function calls:
  2908 ;;		_write_timer_zero
  2909 ;; This function is called by:
  2910 ;;		_init_hardware
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text7
  2915  0055AA                     __ptext7:
  2916                           	callstack 0
  2917  0055AA                     _config_timer_zero:
  2918                           	callstack 25
  2919                           
  2920                           ;hardware.c: 81: T0CON = 0b11000101;
  2921                           
  2922                           ;incstack = 0
  2923  0055AA  0EC5               	movlw	197
  2924  0055AC  6ED5               	movwf	213,c	;volatile
  2925                           
  2926                           ;hardware.c: 82: SPPCON = 0b00000000;
  2927  0055AE  0E00               	movlw	0
  2928  0055B0  6E65               	movwf	101,c	;volatile
  2929                           
  2930                           ;hardware.c: 83: SPPCFG = 0b00000000;
  2931  0055B2  0E00               	movlw	0
  2932  0055B4  6E63               	movwf	99,c	;volatile
  2933                           
  2934                           ;hardware.c: 84: write_timer_zero(0x45);
  2935  0055B6  0E00               	movlw	0
  2936  0055B8  6E1A               	movwf	(write_timer_zero@timer0+1)^0,c
  2937  0055BA  0E45               	movlw	69
  2938  0055BC  6E19               	movwf	write_timer_zero@timer0^0,c
  2939  0055BE  EC35  F02B         	call	_write_timer_zero	;wreg free
  2940  0055C2  0012               	return		;funcret
  2941  0055C4                     __end_of_config_timer_zero:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _write_timer_zero *****************
  2945 ;; Defined at:
  2946 ;;		line 134 in file "bibliotecas/hardware.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  timer0          2   24[COMRAM] unsigned int 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         2       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    3
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_config_timer_zero
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text8
  2975  00566A                     __ptext8:
  2976                           	callstack 0
  2977  00566A                     _write_timer_zero:
  2978                           	callstack 25
  2979                           
  2980                           ;hardware.c: 142: TMR0 = timer0;
  2981                           
  2982                           ;incstack = 0
  2983  00566A  C019  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  2984  00566E  C01A  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  2985  005672  0012               	return		;funcret
  2986  005674                     __end_of_write_timer_zero:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _config_timer_dois *****************
  2990 ;; Defined at:
  2991 ;;		line 198 in file "bibliotecas/hardware.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    3
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_init_hardware
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text9
  3020  00561E                     __ptext9:
  3021                           	callstack 0
  3022  00561E                     _config_timer_dois:
  3023                           	callstack 26
  3024                           
  3025                           ;hardware.c: 200: T2CON = 0b00000100;
  3026                           
  3027                           ;incstack = 0
  3028  00561E  0E04               	movlw	4
  3029  005620  6ECA               	movwf	202,c	;volatile
  3030                           
  3031                           ;hardware.c: 201: TMR2 = 0;
  3032  005622  0E00               	movlw	0
  3033  005624  6ECC               	movwf	204,c	;volatile
  3034                           
  3035                           ;hardware.c: 202: PR2 = 0x01;
  3036  005626  0E01               	movlw	1
  3037  005628  6ECB               	movwf	203,c	;volatile
  3038  00562A  0012               	return		;funcret
  3039  00562C                     __end_of_config_timer_dois:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _inicializa_tarefas *****************
  3043 ;; Defined at:
  3044 ;;		line 168 in file "main.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 3F/1
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    3
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text10
  3073  004B60                     __ptext10:
  3074                           	callstack 0
  3075  004B60                     _inicializa_tarefas:
  3076                           	callstack 27
  3077                           
  3078                           ;main.c: 171: p_tarefas[0] = verifica_dados_operacionais;
  3079                           
  3080                           ;incstack = 0
  3081  004B60  0E9E               	movlw	low _verifica_dados_operacionais
  3082  004B62  0101               	movlb	1	; () banked
  3083  004B64  6F10               	movwf	_p_tarefas& (0+255),b
  3084  004B66  0E56               	movlw	high _verifica_dados_operacionais
  3085  004B68  6F11               	movwf	(_p_tarefas+1)& (0+255),b
  3086                           
  3087                           ;main.c: 172: p_tarefas[1] = disparo_gravacao;
  3088  004B6A  0EF6               	movlw	low _disparo_gravacao
  3089  004B6C  6F12               	movwf	(_p_tarefas+2)& (0+255),b
  3090  004B6E  0E4F               	movlw	high _disparo_gravacao
  3091  004B70  6F13               	movwf	(_p_tarefas+3)& (0+255),b
  3092                           
  3093                           ;main.c: 173: p_tarefas[2] = verifica_fence_externo;
  3094  004B72  0EA0               	movlw	low _verifica_fence_externo
  3095  004B74  6F14               	movwf	(_p_tarefas+4)& (0+255),b
  3096  004B76  0E49               	movlw	high _verifica_fence_externo
  3097  004B78  6F15               	movwf	(_p_tarefas+5)& (0+255),b
  3098                           
  3099                           ;main.c: 174: p_tarefas[3] = troca_de_tela;
  3100  004B7A  0E1E               	movlw	low _troca_de_tela
  3101  004B7C  6F16               	movwf	(_p_tarefas+6)& (0+255),b
  3102  004B7E  0E16               	movlw	high _troca_de_tela
  3103  004B80  6F17               	movwf	(_p_tarefas+7)& (0+255),b
  3104                           
  3105                           ; BSR set to: 1
  3106                           ;main.c: 178: tempo_backup[0] = 100;
  3107  004B82  0E00               	movlw	0
  3108  004B84  6F09               	movwf	(_tempo_backup+1)& (0+255),b
  3109  004B86  0E64               	movlw	100
  3110  004B88  6F08               	movwf	_tempo_backup& (0+255),b
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;main.c: 179: tempo_backup[1] = 100;
  3114  004B8A  0E00               	movlw	0
  3115  004B8C  6F0B               	movwf	(_tempo_backup+3)& (0+255),b
  3116  004B8E  0E64               	movlw	100
  3117  004B90  6F0A               	movwf	(_tempo_backup+2)& (0+255),b
  3118                           
  3119                           ; BSR set to: 1
  3120                           ;main.c: 180: tempo_backup[2] = 1000;
  3121  004B92  0E03               	movlw	3
  3122  004B94  6F0D               	movwf	(_tempo_backup+5)& (0+255),b
  3123  004B96  0EE8               	movlw	232
  3124  004B98  6F0C               	movwf	(_tempo_backup+4)& (0+255),b
  3125                           
  3126                           ; BSR set to: 1
  3127                           ;main.c: 181: tempo_backup[3] = 100;
  3128  004B9A  0E00               	movlw	0
  3129  004B9C  6F0F               	movwf	(_tempo_backup+7)& (0+255),b
  3130  004B9E  0E64               	movlw	100
  3131  004BA0  6F0E               	movwf	(_tempo_backup+6)& (0+255),b
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;main.c: 184: tempo_tarefa[0] = 100;
  3135  004BA2  0E00               	movlw	0
  3136  004BA4  6F01               	movwf	(_tempo_tarefa+1)& (0+255),b
  3137  004BA6  0E64               	movlw	100
  3138  004BA8  6F00               	movwf	_tempo_tarefa& (0+255),b
  3139                           
  3140                           ; BSR set to: 1
  3141                           ;main.c: 185: tempo_tarefa[1] = 100;
  3142  004BAA  0E00               	movlw	0
  3143  004BAC  6F03               	movwf	(_tempo_tarefa+3)& (0+255),b
  3144  004BAE  0E64               	movlw	100
  3145  004BB0  6F02               	movwf	(_tempo_tarefa+2)& (0+255),b
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;main.c: 186: tempo_tarefa[2] = 1000;
  3149  004BB2  0E03               	movlw	3
  3150  004BB4  6F05               	movwf	(_tempo_tarefa+5)& (0+255),b
  3151  004BB6  0EE8               	movlw	232
  3152  004BB8  6F04               	movwf	(_tempo_tarefa+4)& (0+255),b
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;main.c: 187: tempo_tarefa[3] = 100;
  3156  004BBA  0E00               	movlw	0
  3157  004BBC  6F07               	movwf	(_tempo_tarefa+7)& (0+255),b
  3158  004BBE  0E64               	movlw	100
  3159  004BC0  6F06               	movwf	(_tempo_tarefa+6)& (0+255),b
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;main.c: 189: tarefa_em_execucao = 0;
  3163  004BC2  0E00               	movlw	0
  3164  004BC4  6E3C               	movwf	_tarefa_em_execucao^0,c	;volatile
  3165                           
  3166                           ; BSR set to: 1
  3167  004BC6  0012               	return		;funcret
  3168  004BC8                     __end_of_inicializa_tarefas:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _escalonador *****************
  3172 ;; Defined at:
  3173 ;;		line 200 in file "main.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  cont            1  151[BANK0 ] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 3F/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3187 ;;      Params:         0       0       0       0       0       0       0       0       0
  3188 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3189 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3190 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3191 ;;Total ram usage:        3 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:   17
  3194 ;; This function calls:
  3195 ;;		_disparo_gravacao
  3196 ;;		_troca_de_tela
  3197 ;;		_verifica_dados_operacionais
  3198 ;;		_verifica_fence_externo
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text11
  3205  00437A                     __ptext11:
  3206                           	callstack 0
  3207  00437A                     _escalonador:
  3208                           	callstack 13
  3209                           
  3210                           ;main.c: 202: unsigned char cont;;main.c: 203: for(cont = 0; cont<4;cont++)
  3211                           
  3212                           ; BSR set to: 1
  3213                           ;incstack = 0
  3214  00437A  0E00               	movlw	0
  3215  00437C  0100               	movlb	0	; () banked
  3216  00437E  6FF7               	movwf	escalonador@cont& (0+255),b
  3217  004380                     l12230:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;main.c: 204: {;main.c: 205: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3221  004380  51F7               	movf	escalonador@cont& (0+255),w,b
  3222  004382  0D02               	mullw	2
  3223  004384  0E10               	movlw	low _p_tarefas
  3224  004386  24F3               	addwf	243,w,c
  3225  004388  6ED9               	movwf	fsr2l,c
  3226  00438A  0E01               	movlw	high _p_tarefas
  3227  00438C  20F4               	addwfc	prodh,w,c
  3228  00438E  6EDA               	movwf	fsr2h,c
  3229  004390  50DE               	movf	postinc2,w,c
  3230  004392  10DE               	iorwf	postinc2,w,c
  3231  004394  B4D8               	btfsc	status,2,c
  3232  004396  D03F               	goto	l12242
  3233                           
  3234                           ; BSR set to: 0
  3235  004398  51F7               	movf	escalonador@cont& (0+255),w,b
  3236  00439A  0D02               	mullw	2
  3237  00439C  0E00               	movlw	low _tempo_tarefa
  3238  00439E  24F3               	addwf	243,w,c
  3239  0043A0  6ED9               	movwf	fsr2l,c
  3240  0043A2  0E01               	movlw	high _tempo_tarefa
  3241  0043A4  20F4               	addwfc	prodh,w,c
  3242  0043A6  6EDA               	movwf	fsr2h,c
  3243  0043A8  50DE               	movf	postinc2,w,c
  3244  0043AA  10DE               	iorwf	postinc2,w,c
  3245  0043AC  A4D8               	btfss	status,2,c
  3246  0043AE  D033               	goto	l12242
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;main.c: 206: {;main.c: 207: tarefa_em_execucao = 1;
  3250  0043B0  0E01               	movlw	1
  3251  0043B2  6E3C               	movwf	_tarefa_em_execucao^0,c	;volatile
  3252                           
  3253                           ;main.c: 208: timeout_tarefa = 10000;
  3254  0043B4  0E27               	movlw	39
  3255  0043B6  0101               	movlb	1	; () banked
  3256  0043B8  6F1B               	movwf	(_timeout_tarefa+1)& (0+255),b
  3257  0043BA  0E10               	movlw	16
  3258  0043BC  6F1A               	movwf	_timeout_tarefa& (0+255),b
  3259                           
  3260                           ; BSR set to: 1
  3261                           ;main.c: 209: p_tarefas[cont]();
  3262  0043BE  0100               	movlb	0	; () banked
  3263  0043C0  51F7               	movf	escalonador@cont& (0+255),w,b
  3264  0043C2  0D02               	mullw	2
  3265  0043C4  0E10               	movlw	low _p_tarefas
  3266  0043C6  24F3               	addwf	243,w,c
  3267  0043C8  6ED9               	movwf	fsr2l,c
  3268  0043CA  0E01               	movlw	high _p_tarefas
  3269  0043CC  20F4               	addwfc	prodh,w,c
  3270  0043CE  6EDA               	movwf	fsr2h,c
  3271  0043D0  D801               	call	u15308
  3272  0043D2  D00A               	goto	u15309
  3273  0043D4                     u15308:
  3274  0043D4  0005               	push	
  3275  0043D6  6EFA               	movwf	pclath,c
  3276  0043D8  50DE               	movf	postinc2,w,c
  3277  0043DA  6EFD               	movwf	tosl,c
  3278  0043DC  50DE               	movf	postinc2,w,c
  3279  0043DE  6EFE               	movwf	tosh,c
  3280  0043E0  50F8               	movf	tblptru,w,c
  3281  0043E2  6EFF               	movwf	tosu,c
  3282  0043E4  50FA               	movf	pclath,w,c
  3283  0043E6  0012               	return		;indir
  3284  0043E8                     u15309:
  3285                           
  3286                           ;main.c: 210: tarefa_em_execucao = 0;
  3287  0043E8  0E00               	movlw	0
  3288  0043EA  6E3C               	movwf	_tarefa_em_execucao^0,c	;volatile
  3289                           
  3290                           ;main.c: 211: tempo_tarefa[cont] = tempo_backup[cont];
  3291  0043EC  0100               	movlb	0	; () banked
  3292  0043EE  51F7               	movf	escalonador@cont& (0+255),w,b
  3293  0043F0  0D02               	mullw	2
  3294  0043F2  0E08               	movlw	low _tempo_backup
  3295  0043F4  24F3               	addwf	243,w,c
  3296  0043F6  6ED9               	movwf	fsr2l,c
  3297  0043F8  0E01               	movlw	high _tempo_backup
  3298  0043FA  20F4               	addwfc	prodh,w,c
  3299  0043FC  6EDA               	movwf	fsr2h,c
  3300  0043FE  51F7               	movf	escalonador@cont& (0+255),w,b
  3301  004400  0D02               	mullw	2
  3302  004402  0E00               	movlw	low _tempo_tarefa
  3303  004404  24F3               	addwf	243,w,c
  3304  004406  6EE1               	movwf	fsr1l,c
  3305  004408  0E01               	movlw	high _tempo_tarefa
  3306  00440A  20F4               	addwfc	prodh,w,c
  3307  00440C  6EE2               	movwf	fsr1h,c
  3308  00440E  CFDE FFE6          	movff	postinc2,postinc1
  3309  004412  CFDD FFE5          	movff	postdec2,postdec1
  3310  004416                     l12242:
  3311                           
  3312                           ; BSR set to: 0
  3313  004416  2BF7               	incf	escalonador@cont& (0+255),f,b
  3314                           
  3315                           ; BSR set to: 0
  3316  004418  0E03               	movlw	3
  3317  00441A  65F7               	cpfsgt	escalonador@cont& (0+255),b
  3318  00441C  D7B1               	goto	l12230
  3319  00441E  0012               	return	
  3320  004420                     __end_of_escalonador:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _troca_de_tela *****************
  3324 ;; Defined at:
  3325 ;;		line 653 in file "main.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 3F/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3339 ;;      Params:         0       0       0       0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3341 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3342 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3343 ;;Total ram usage:        1 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    7
  3346 ;; This function calls:
  3347 ;;		_Latitude
  3348 ;;		_Longitude
  3349 ;;		_escreve_cmd_lcd
  3350 ;;		_escreve_frase_ram_lcd
  3351 ;;		_escreve_inteiro_lcd
  3352 ;;		_fix
  3353 ;;		_posicao_cursor_lcd
  3354 ;; This function is called by:
  3355 ;;		_inicializa_tarefas
  3356 ;;		_escalonador
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text12
  3361  00161E                     __ptext12:
  3362                           	callstack 0
  3363  00161E                     _troca_de_tela:
  3364                           	callstack 22
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;main.c: 656: static unsigned char state = 0;;main.c: 657: static unsigned char last_sta
      +                          te = 0;;;main.c: 660: switch(flag[2].point)
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;incstack = 0
  3371  00161E  D185               	goto	l11940
  3372  001620                     l1426:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 664: if(!PORTEbits.RE0 && !flag[2].point || (state == 1 ))
  3376  001620  B084               	btfsc	132,0,c	;volatile
  3377  001622  D002               	goto	u14550
  3378                           
  3379                           ; BSR set to: 0
  3380  001624  A035               	btfss	(_flag+2)^0,0,c
  3381  001626  D003               	goto	u14560
  3382  001628                     u14550:
  3383                           
  3384                           ; BSR set to: 0
  3385  001628  043B               	decf	troca_de_tela@state^0,w,c
  3386  00162A  A4D8               	btfss	status,2,c
  3387  00162C  D042               	goto	l11814
  3388  00162E                     u14560:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;main.c: 665: {;main.c: 667: if(!time_atualizacao)
  3392  00162E  5036               	movf	_time_atualizacao^0,w,c
  3393  001630  1037               	iorwf	(_time_atualizacao+1)^0,w,c
  3394  001632  A4D8               	btfss	status,2,c
  3395  001634  D011               	goto	l11794
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;main.c: 668: {;main.c: 669: posicao_cursor_lcd(2,6);
  3399  001636  0E06               	movlw	6
  3400  001638  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3401  00163A  0E02               	movlw	2
  3402  00163C  EC17  F026         	call	_posicao_cursor_lcd
  3403                           
  3404                           ;main.c: 670: escreve_frase_ram_lcd(fix());
  3405  001640  EC3A  F02B         	call	_fix	;wreg free
  3406  001644  C019  F01C         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3407  001648  C01A  F01D         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3408  00164C  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3409                           
  3410                           ;main.c: 671: time_atualizacao = 10000;
  3411  001650  0E27               	movlw	39
  3412  001652  6E37               	movwf	(_time_atualizacao+1)^0,c
  3413  001654  0E10               	movlw	16
  3414  001656  6E36               	movwf	_time_atualizacao^0,c
  3415  001658                     l11794:
  3416                           
  3417                           ;main.c: 672: };main.c: 674: if(last_state != 1)
  3418  001658  043A               	decf	troca_de_tela@last_state^0,w,c
  3419  00165A  B4D8               	btfsc	status,2,c
  3420  00165C  D028               	goto	l11812
  3421                           
  3422                           ;main.c: 675: {;main.c: 676: state = 1;
  3423  00165E  0E01               	movlw	1
  3424  001660  6E3B               	movwf	troca_de_tela@state^0,c
  3425                           
  3426                           ;main.c: 677: escreve_cmd_lcd(0b00000001);
  3427  001662  0E01               	movlw	1
  3428  001664  EC88  F023         	call	_escreve_cmd_lcd
  3429                           
  3430                           ;main.c: 678: posicao_cursor_lcd(1,0);
  3431  001668  0E00               	movlw	0
  3432  00166A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3433  00166C  0E01               	movlw	1
  3434  00166E  EC17  F026         	call	_posicao_cursor_lcd
  3435                           
  3436                           ;main.c: 679: escreve_frase_ram_lcd("RPM:");
  3437  001672  0E5F               	movlw	low STR_27
  3438  001674  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3439  001676  0E62               	movlw	high STR_27
  3440  001678  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3441  00167A  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3442                           
  3443                           ;main.c: 680: posicao_cursor_lcd(2,0);
  3444  00167E  0E00               	movlw	0
  3445  001680  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3446  001682  0E02               	movlw	2
  3447  001684  EC17  F026         	call	_posicao_cursor_lcd
  3448                           
  3449                           ;main.c: 681: escreve_frase_ram_lcd("VEL:");
  3450  001688  0E5A               	movlw	low STR_28
  3451  00168A  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3452  00168C  0E62               	movlw	high STR_28
  3453  00168E  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3454  001690  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3455                           
  3456                           ;main.c: 682: posicao_cursor_lcd(2,6);
  3457  001694  0E06               	movlw	6
  3458  001696  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3459  001698  0E02               	movlw	2
  3460  00169A  EC17  F026         	call	_posicao_cursor_lcd
  3461                           
  3462                           ;main.c: 683: escreve_frase_ram_lcd(fix());
  3463  00169E  EC3A  F02B         	call	_fix	;wreg free
  3464  0016A2  C019  F01C         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3465  0016A6  C01A  F01D         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3466  0016AA  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3467  0016AE                     l11812:
  3468                           
  3469                           ;main.c: 684: };main.c: 685: last_state = 1;
  3470  0016AE  0E01               	movlw	1
  3471  0016B0  6E3A               	movwf	troca_de_tela@last_state^0,c
  3472  0016B2                     l11814:
  3473                           
  3474                           ;main.c: 687: };main.c: 690: if(!PORTEbits.RE1 && !flag[2].point || (state == 2))
  3475  0016B2  B284               	btfsc	132,1,c	;volatile
  3476  0016B4  D002               	goto	u14600
  3477  0016B6  A035               	btfss	(_flag+2)^0,0,c
  3478  0016B8  D004               	goto	u14610
  3479  0016BA                     u14600:
  3480  0016BA  0E02               	movlw	2
  3481  0016BC  183B               	xorwf	troca_de_tela@state^0,w,c
  3482  0016BE  A4D8               	btfss	status,2,c
  3483  0016C0  D06D               	goto	l11862
  3484  0016C2                     u14610:
  3485                           
  3486                           ;main.c: 691: {;main.c: 692: if(!time_atualizacao)
  3487  0016C2  5036               	movf	_time_atualizacao^0,w,c
  3488  0016C4  1037               	iorwf	(_time_atualizacao+1)^0,w,c
  3489  0016C6  A4D8               	btfss	status,2,c
  3490  0016C8  D026               	goto	l11834
  3491                           
  3492                           ;main.c: 693: {;main.c: 694: point_buff_gps_lat = Latitude();
  3493  0016CA  ECA9  F02A         	call	_Latitude	;wreg free
  3494  0016CE  C01F  F0F8         	movff	?_Latitude,_point_buff_gps_lat
  3495  0016D2  C020  F0F9         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3496                           
  3497                           ;main.c: 695: point_buff_gps_long = Longitude();
  3498  0016D6  EC9A  F02A         	call	_Longitude	;wreg free
  3499  0016DA  C01F  F118         	movff	?_Longitude,_point_buff_gps_long
  3500  0016DE  C020  F119         	movff	?_Longitude+1,_point_buff_gps_long+1
  3501                           
  3502                           ;main.c: 696: posicao_cursor_lcd(1,4);
  3503  0016E2  0E04               	movlw	4
  3504  0016E4  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3505  0016E6  0E01               	movlw	1
  3506  0016E8  EC17  F026         	call	_posicao_cursor_lcd
  3507                           
  3508                           ;main.c: 697: escreve_frase_ram_lcd(point_buff_gps_lat);
  3509  0016EC  C0F8  F01C         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3510  0016F0  C0F9  F01D         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3511  0016F4  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3512                           
  3513                           ;main.c: 698: posicao_cursor_lcd(2,4);
  3514  0016F8  0E04               	movlw	4
  3515  0016FA  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3516  0016FC  0E02               	movlw	2
  3517  0016FE  EC17  F026         	call	_posicao_cursor_lcd
  3518                           
  3519                           ;main.c: 699: escreve_frase_ram_lcd(point_buff_gps_long);
  3520  001702  C118  F01C         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3521  001706  C119  F01D         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3522  00170A  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3523                           
  3524                           ;main.c: 700: time_atualizacao = 2000;
  3525  00170E  0E07               	movlw	7
  3526  001710  6E37               	movwf	(_time_atualizacao+1)^0,c
  3527  001712  0ED0               	movlw	208
  3528  001714  6E36               	movwf	_time_atualizacao^0,c
  3529  001716                     l11834:
  3530                           
  3531                           ;main.c: 701: };main.c: 704: if(last_state != 2)
  3532  001716  0E02               	movlw	2
  3533  001718  183A               	xorwf	troca_de_tela@last_state^0,w,c
  3534  00171A  B4D8               	btfsc	status,2,c
  3535  00171C  D03D               	goto	l11860
  3536                           
  3537                           ;main.c: 705: {;main.c: 706: state = 2;
  3538  00171E  0E02               	movlw	2
  3539  001720  6E3B               	movwf	troca_de_tela@state^0,c
  3540                           
  3541                           ;main.c: 707: escreve_cmd_lcd(0b00000001);
  3542  001722  0E01               	movlw	1
  3543  001724  EC88  F023         	call	_escreve_cmd_lcd
  3544                           
  3545                           ;main.c: 708: point_buff_gps_lat = Latitude();
  3546  001728  ECA9  F02A         	call	_Latitude	;wreg free
  3547  00172C  C01F  F0F8         	movff	?_Latitude,_point_buff_gps_lat
  3548  001730  C020  F0F9         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3549                           
  3550                           ;main.c: 709: point_buff_gps_long = Longitude();
  3551  001734  EC9A  F02A         	call	_Longitude	;wreg free
  3552  001738  C01F  F118         	movff	?_Longitude,_point_buff_gps_long
  3553  00173C  C020  F119         	movff	?_Longitude+1,_point_buff_gps_long+1
  3554                           
  3555                           ;main.c: 710: posicao_cursor_lcd(1,0);
  3556  001740  0E00               	movlw	0
  3557  001742  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3558  001744  0E01               	movlw	1
  3559  001746  EC17  F026         	call	_posicao_cursor_lcd
  3560                           
  3561                           ;main.c: 711: escreve_frase_ram_lcd("lt:");
  3562  00174A  0E72               	movlw	low STR_29
  3563  00174C  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3564  00174E  0E62               	movlw	high STR_29
  3565  001750  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3566  001752  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3567                           
  3568                           ;main.c: 712: posicao_cursor_lcd(1,4);
  3569  001756  0E04               	movlw	4
  3570  001758  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3571  00175A  0E01               	movlw	1
  3572  00175C  EC17  F026         	call	_posicao_cursor_lcd
  3573                           
  3574                           ;main.c: 713: escreve_frase_ram_lcd(point_buff_gps_lat);
  3575  001760  C0F8  F01C         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3576  001764  C0F9  F01D         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3577  001768  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3578                           
  3579                           ;main.c: 714: posicao_cursor_lcd(2,0);
  3580  00176C  0E00               	movlw	0
  3581  00176E  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3582  001770  0E02               	movlw	2
  3583  001772  EC17  F026         	call	_posicao_cursor_lcd
  3584                           
  3585                           ;main.c: 715: escreve_frase_ram_lcd("lo:");
  3586  001776  0E6E               	movlw	low STR_30
  3587  001778  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3588  00177A  0E62               	movlw	high STR_30
  3589  00177C  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3590  00177E  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3591                           
  3592                           ;main.c: 716: posicao_cursor_lcd(2,4);
  3593  001782  0E04               	movlw	4
  3594  001784  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3595  001786  0E02               	movlw	2
  3596  001788  EC17  F026         	call	_posicao_cursor_lcd
  3597                           
  3598                           ;main.c: 717: escreve_frase_ram_lcd(point_buff_gps_long);
  3599  00178C  C118  F01C         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3600  001790  C119  F01D         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3601  001794  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3602  001798                     l11860:
  3603                           
  3604                           ;main.c: 718: };main.c: 719: last_state = 2;
  3605  001798  0E02               	movlw	2
  3606  00179A  6E3A               	movwf	troca_de_tela@last_state^0,c
  3607  00179C                     l11862:
  3608                           
  3609                           ;main.c: 720: };main.c: 723: if((!PORTEbits.RE1 && state!=0) && !flag[2].point )
  3610  00179C  B284               	btfsc	132,1,c	;volatile
  3611  00179E  D025               	goto	l11884
  3612  0017A0  503B               	movf	troca_de_tela@state^0,w,c
  3613  0017A2  A4D8               	btfss	status,2,c
  3614  0017A4  B035               	btfsc	(_flag+2)^0,0,c
  3615  0017A6  D021               	goto	l11884
  3616                           
  3617                           ;main.c: 724: {;main.c: 725: if(last_state != 4)
  3618  0017A8  0E04               	movlw	4
  3619  0017AA  183A               	xorwf	troca_de_tela@last_state^0,w,c
  3620  0017AC  B4D8               	btfsc	status,2,c
  3621  0017AE  D01B               	goto	l11882
  3622                           
  3623                           ;main.c: 726: {;main.c: 727: escreve_cmd_lcd(0b00000001);
  3624  0017B0  0E01               	movlw	1
  3625  0017B2  EC88  F023         	call	_escreve_cmd_lcd
  3626                           
  3627                           ;main.c: 728: state = 0;
  3628  0017B6  0E00               	movlw	0
  3629  0017B8  6E3B               	movwf	troca_de_tela@state^0,c
  3630                           
  3631                           ;main.c: 729: posicao_cursor_lcd(1,0);
  3632  0017BA  0E00               	movlw	0
  3633  0017BC  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3634  0017BE  0E01               	movlw	1
  3635  0017C0  EC17  F026         	call	_posicao_cursor_lcd
  3636                           
  3637                           ;main.c: 730: escreve_frase_ram_lcd("B1:RPM B2:FENCE");
  3638  0017C4  0E5A               	movlw	low STR_31
  3639  0017C6  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3640  0017C8  0E61               	movlw	high STR_31
  3641  0017CA  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3642  0017CC  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3643                           
  3644                           ;main.c: 731: posicao_cursor_lcd(2,0);
  3645  0017D0  0E00               	movlw	0
  3646  0017D2  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3647  0017D4  0E02               	movlw	2
  3648  0017D6  EC17  F026         	call	_posicao_cursor_lcd
  3649                           
  3650                           ;main.c: 732: escreve_frase_ram_lcd("B2:HOME");
  3651  0017DA  0E38               	movlw	low STR_32
  3652  0017DC  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3653  0017DE  0E62               	movlw	high STR_32
  3654  0017E0  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3655  0017E2  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3656  0017E6                     l11882:
  3657                           
  3658                           ;main.c: 733: };main.c: 734: last_state = 4;
  3659  0017E6  0E04               	movlw	4
  3660  0017E8  6E3A               	movwf	troca_de_tela@last_state^0,c
  3661  0017EA                     l11884:
  3662                           
  3663                           ;main.c: 735: };main.c: 737: if(!state && !flag[2].point)
  3664  0017EA  503B               	movf	troca_de_tela@state^0,w,c
  3665  0017EC  A4D8               	btfss	status,2,c
  3666  0017EE  0012               	return	
  3667  0017F0  B035               	btfsc	(_flag+2)^0,0,c
  3668  0017F2  0012               	return	
  3669                           
  3670                           ;main.c: 738: {;main.c: 739: if(last_state != 4)
  3671  0017F4  0E04               	movlw	4
  3672  0017F6  183A               	xorwf	troca_de_tela@last_state^0,w,c
  3673  0017F8  B4D8               	btfsc	status,2,c
  3674  0017FA  D019               	goto	l11896
  3675                           
  3676                           ;main.c: 740: {;main.c: 741: escreve_cmd_lcd(0b00000001);
  3677  0017FC  0E01               	movlw	1
  3678  0017FE  EC88  F023         	call	_escreve_cmd_lcd
  3679                           
  3680                           ;main.c: 742: posicao_cursor_lcd(1,0);
  3681  001802  0E00               	movlw	0
  3682  001804  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3683  001806  0E01               	movlw	1
  3684  001808  EC17  F026         	call	_posicao_cursor_lcd
  3685                           
  3686                           ;main.c: 743: escreve_frase_ram_lcd("B1:RPM  B2:FENCE");
  3687  00180C  0E38               	movlw	low STR_33
  3688  00180E  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3689  001810  0E61               	movlw	high STR_33
  3690  001812  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3691  001814  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3692                           
  3693                           ;main.c: 744: posicao_cursor_lcd(2,0);
  3694  001818  0E00               	movlw	0
  3695  00181A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3696  00181C  0E02               	movlw	2
  3697  00181E  EC17  F026         	call	_posicao_cursor_lcd
  3698                           
  3699                           ;main.c: 745: escreve_frase_ram_lcd("B2:HOME");
  3700  001822  0E38               	movlw	low STR_32
  3701  001824  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3702  001826  0E62               	movlw	high STR_32
  3703  001828  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3704  00182A  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3705  00182E                     l11896:
  3706                           
  3707                           ;main.c: 746: };main.c: 747: last_state = 4;
  3708  00182E  0E04               	movlw	4
  3709  001830  6E3A               	movwf	troca_de_tela@last_state^0,c
  3710  001832  0012               	return	
  3711  001834                     l1446:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 752: if(flag[2].point || state == 3)
  3715  001834  B035               	btfsc	(_flag+2)^0,0,c
  3716  001836  D004               	goto	u14720
  3717                           
  3718                           ; BSR set to: 0
  3719  001838  0E03               	movlw	3
  3720  00183A  183B               	xorwf	troca_de_tela@state^0,w,c
  3721  00183C  A4D8               	btfss	status,2,c
  3722  00183E  0012               	return	
  3723  001840                     u14720:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;main.c: 753: {;main.c: 755: if(!time_atualizacao)
  3727  001840  5036               	movf	_time_atualizacao^0,w,c
  3728  001842  1037               	iorwf	(_time_atualizacao+1)^0,w,c
  3729  001844  A4D8               	btfss	status,2,c
  3730  001846  D024               	goto	l11910
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;main.c: 756: {;main.c: 757: posicao_cursor_lcd(2,7);
  3734  001848  0E07               	movlw	7
  3735  00184A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3736  00184C  0E02               	movlw	2
  3737  00184E  EC17  F026         	call	_posicao_cursor_lcd
  3738                           
  3739                           ;main.c: 758: escreve_inteiro_lcd(flag[0].point);
  3740  001852  A033               	btfss	_flag^0,0,c
  3741  001854  D003               	goto	u14740
  3742  001856  6A30               	clrf	??_troca_de_tela^0,c
  3743  001858  2A30               	incf	??_troca_de_tela^0,f,c
  3744  00185A  D001               	goto	u14748
  3745  00185C                     u14740:
  3746  00185C  6A30               	clrf	??_troca_de_tela^0,c
  3747  00185E                     u14748:
  3748  00185E  5030               	movf	??_troca_de_tela^0,w,c
  3749  001860  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3750  001862  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3751  001864  EC03  F029         	call	_escreve_inteiro_lcd	;wreg free
  3752                           
  3753                           ;main.c: 759: posicao_cursor_lcd(2,9);
  3754  001868  0E09               	movlw	9
  3755  00186A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3756  00186C  0E02               	movlw	2
  3757  00186E  EC17  F026         	call	_posicao_cursor_lcd
  3758                           
  3759                           ;main.c: 760: escreve_inteiro_lcd(flag[1].point);
  3760  001872  A034               	btfss	(_flag+1)^0,0,c
  3761  001874  D003               	goto	u14750
  3762  001876  6A30               	clrf	??_troca_de_tela^0,c
  3763  001878  2A30               	incf	??_troca_de_tela^0,f,c
  3764  00187A  D001               	goto	u14758
  3765  00187C                     u14750:
  3766  00187C  6A30               	clrf	??_troca_de_tela^0,c
  3767  00187E                     u14758:
  3768  00187E  5030               	movf	??_troca_de_tela^0,w,c
  3769  001880  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3770  001882  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3771  001884  EC03  F029         	call	_escreve_inteiro_lcd	;wreg free
  3772                           
  3773                           ;main.c: 761: time_atualizacao = 10000;
  3774  001888  0E27               	movlw	39
  3775  00188A  6E37               	movwf	(_time_atualizacao+1)^0,c
  3776  00188C  0E10               	movlw	16
  3777  00188E  6E36               	movwf	_time_atualizacao^0,c
  3778  001890                     l11910:
  3779                           
  3780                           ;main.c: 762: };main.c: 764: if(last_state != 3)
  3781  001890  0E03               	movlw	3
  3782  001892  183A               	xorwf	troca_de_tela@last_state^0,w,c
  3783  001894  B4D8               	btfsc	status,2,c
  3784  001896  D046               	goto	l11936
  3785                           
  3786                           ;main.c: 765: {;main.c: 766: state = 3;
  3787  001898  0E03               	movlw	3
  3788  00189A  6E3B               	movwf	troca_de_tela@state^0,c
  3789                           
  3790                           ;main.c: 767: escreve_cmd_lcd(0b00000001);
  3791  00189C  0E01               	movlw	1
  3792  00189E  EC88  F023         	call	_escreve_cmd_lcd
  3793                           
  3794                           ;main.c: 768: posicao_cursor_lcd(1,0);
  3795  0018A2  0E00               	movlw	0
  3796  0018A4  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3797  0018A6  0E01               	movlw	1
  3798  0018A8  EC17  F026         	call	_posicao_cursor_lcd
  3799                           
  3800                           ;main.c: 769: escreve_frase_ram_lcd("REGIAO NEGADA");
  3801  0018AC  0EB9               	movlw	low STR_35
  3802  0018AE  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3803  0018B0  0E61               	movlw	high STR_35
  3804  0018B2  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3805  0018B4  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3806                           
  3807                           ;main.c: 770: posicao_cursor_lcd(2,0);
  3808  0018B8  0E00               	movlw	0
  3809  0018BA  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3810  0018BC  0E02               	movlw	2
  3811  0018BE  EC17  F026         	call	_posicao_cursor_lcd
  3812                           
  3813                           ;main.c: 771: escreve_frase_ram_lcd("LO-LT:");
  3814  0018C2  0E40               	movlw	low STR_36
  3815  0018C4  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3816  0018C6  0E62               	movlw	high STR_36
  3817  0018C8  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3818  0018CA  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3819                           
  3820                           ;main.c: 772: posicao_cursor_lcd(2,7);
  3821  0018CE  0E07               	movlw	7
  3822  0018D0  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3823  0018D2  0E02               	movlw	2
  3824  0018D4  EC17  F026         	call	_posicao_cursor_lcd
  3825                           
  3826                           ;main.c: 773: escreve_inteiro_lcd(flag[0].point);
  3827  0018D8  A033               	btfss	_flag^0,0,c
  3828  0018DA  D003               	goto	u14770
  3829  0018DC  6A30               	clrf	??_troca_de_tela^0,c
  3830  0018DE  2A30               	incf	??_troca_de_tela^0,f,c
  3831  0018E0  D001               	goto	u14778
  3832  0018E2                     u14770:
  3833  0018E2  6A30               	clrf	??_troca_de_tela^0,c
  3834  0018E4                     u14778:
  3835  0018E4  5030               	movf	??_troca_de_tela^0,w,c
  3836  0018E6  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3837  0018E8  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3838  0018EA  EC03  F029         	call	_escreve_inteiro_lcd	;wreg free
  3839                           
  3840                           ;main.c: 774: posicao_cursor_lcd(2,8);
  3841  0018EE  0E08               	movlw	8
  3842  0018F0  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3843  0018F2  0E02               	movlw	2
  3844  0018F4  EC17  F026         	call	_posicao_cursor_lcd
  3845                           
  3846                           ;main.c: 775: escreve_frase_ram_lcd("-");
  3847  0018F8  0E7D               	movlw	low STR_37
  3848  0018FA  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3849  0018FC  0E62               	movlw	high STR_37
  3850  0018FE  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3851  001900  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3852                           
  3853                           ;main.c: 776: posicao_cursor_lcd(2,9);
  3854  001904  0E09               	movlw	9
  3855  001906  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3856  001908  0E02               	movlw	2
  3857  00190A  EC17  F026         	call	_posicao_cursor_lcd
  3858                           
  3859                           ;main.c: 777: escreve_inteiro_lcd(flag[1].point);
  3860  00190E  A034               	btfss	(_flag+1)^0,0,c
  3861  001910  D003               	goto	u14780
  3862  001912  6A30               	clrf	??_troca_de_tela^0,c
  3863  001914  2A30               	incf	??_troca_de_tela^0,f,c
  3864  001916  D001               	goto	u14788
  3865  001918                     u14780:
  3866  001918  6A30               	clrf	??_troca_de_tela^0,c
  3867  00191A                     u14788:
  3868  00191A  5030               	movf	??_troca_de_tela^0,w,c
  3869  00191C  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3870  00191E  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3871  001920  EC03  F029         	call	_escreve_inteiro_lcd	;wreg free
  3872  001924                     l11936:
  3873                           
  3874                           ;main.c: 778: };main.c: 779: last_state = 3;
  3875  001924  0E03               	movlw	3
  3876  001926  6E3A               	movwf	troca_de_tela@last_state^0,c
  3877  001928  0012               	return	
  3878  00192A                     l11940:
  3879                           
  3880                           ; BSR set to: 0
  3881  00192A  A035               	btfss	(_flag+2)^0,0,c
  3882  00192C  D002               	goto	u14790
  3883  00192E  0E01               	movlw	1
  3884  001930  D001               	goto	u14796
  3885  001932                     u14790:
  3886  001932  0E00               	movlw	0
  3887  001934                     u14796:
  3888                           
  3889                           ; Switch size 1, requested type "simple"
  3890                           ; Number of cases is 1, Range of values is 0 to 0
  3891                           ; switch strategies available:
  3892                           ; Name         Instructions Cycles
  3893                           ; simple_byte            4     3 (average)
  3894                           ;	Chosen strategy is simple_byte
  3895  001934  0A00               	xorlw	0	; case 0
  3896  001936  B4D8               	btfsc	status,2,c
  3897  001938  D673               	goto	l1426
  3898  00193A  D77C               	goto	l1446
  3899  00193C                     __end_of_troca_de_tela:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _disparo_gravacao *****************
  3903 ;; Defined at:
  3904 ;;		line 628 in file "main.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  fix_gps         2  147[BANK0 ] PTR unsigned char 
  3909 ;;		 -> rawFix(2), 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 3F/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0
  3920 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3921 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3922 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3923 ;;Total ram usage:        3 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:   16
  3926 ;; This function calls:
  3927 ;;		_escrita_sdcard
  3928 ;;		_fix
  3929 ;; This function is called by:
  3930 ;;		_inicializa_tarefas
  3931 ;;		_escalonador
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text13
  3936  004FF6                     __ptext13:
  3937                           	callstack 0
  3938  004FF6                     _disparo_gravacao:
  3939                           	callstack 13
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 630: unsigned char *fix_gps;;main.c: 632: fix_gps = fix();
  3943                           
  3944                           ;incstack = 0
  3945  004FF6  EC3A  F02B         	call	_fix	;wreg free
  3946  004FFA  C019  F0F3         	movff	?_fix,disparo_gravacao@fix_gps
  3947  004FFE  C01A  F0F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  3948                           
  3949                           ;main.c: 634: if(fix_gps[0] == '1')
  3950  005002  C0F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  3951  005006  C0F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  3952  00500A  0E31               	movlw	49
  3953  00500C  18DE               	xorwf	postinc2,w,c
  3954  00500E  A4D8               	btfss	status,2,c
  3955  005010  0012               	return	
  3956                           
  3957                           ;main.c: 635: {;main.c: 636: if(!time_sd && !time_recovery)
  3958  005012  0100               	movlb	0	; () banked
  3959  005014  51FC               	movf	_time_sd& (0+255),w,b
  3960  005016  11FD               	iorwf	(_time_sd+1)& (0+255),w,b
  3961  005018  A4D8               	btfss	status,2,c
  3962  00501A  0012               	return	
  3963                           
  3964                           ; BSR set to: 0
  3965  00501C  51FA               	movf	_time_recovery& (0+255),w,b
  3966  00501E  11FB               	iorwf	(_time_recovery+1)& (0+255),w,b
  3967  005020  A4D8               	btfss	status,2,c
  3968  005022  0012               	return	
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 637: {;main.c: 638: escrita_sdcard();
  3972  005024  EC4C  F01C         	call	_escrita_sdcard	;wreg free
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;main.c: 639: time_sd = 1000;
  3976  005028  0E03               	movlw	3
  3977  00502A  6FFD               	movwf	(_time_sd+1)& (0+255),b
  3978  00502C  0EE8               	movlw	232
  3979  00502E  6FFC               	movwf	_time_sd& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;main.c: 640: time_recovery = 5000;
  3983  005030  0E13               	movlw	19
  3984  005032  6FFB               	movwf	(_time_recovery+1)& (0+255),b
  3985  005034  0E88               	movlw	136
  3986  005036  6FFA               	movwf	_time_recovery& (0+255),b
  3987  005038  0012               	return		;funcret
  3988  00503A                     __end_of_disparo_gravacao:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _verifica_dados_operacionais *****************
  3992 ;; Defined at:
  3993 ;;		line 609 in file "main.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		None
  4002 ;; Tracked objects:
  4003 ;;		On entry : 3F/0
  4004 ;;		On exit  : 3F/0
  4005 ;;		Unchanged: 3F/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    3
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_inicializa_tarefas
  4018 ;;		_escalonador
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text14
  4023  00569E                     __ptext14:
  4024                           	callstack 0
  4025  00569E                     _verifica_dados_operacionais:
  4026                           	callstack 26
  4027                           
  4028                           ; BSR set to: 0
  4029                           
  4030                           ;incstack = 0
  4031  00569E  0012               	return		;funcret
  4032  0056A0                     __end_of_verifica_dados_operacionais:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _verifica_fence_externo *****************
  4036 ;; Defined at:
  4037 ;;		line 272 in file "main.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 3F/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4053 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4054 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4055 ;;Total ram usage:        1 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    6
  4058 ;; This function calls:
  4059 ;;		_armazena_latitude
  4060 ;;		_armazena_longitude
  4061 ;;		_calcula_diff_graus
  4062 ;;		_calcula_diff_minutos
  4063 ;;		_monta_sd
  4064 ;;		_verifica_diferenca_graus
  4065 ;;		_verifica_diferenca_minutos
  4066 ;;		_verifica_plausibilidade_lat
  4067 ;;		_verifica_plausibilidade_long
  4068 ;; This function is called by:
  4069 ;;		_inicializa_tarefas
  4070 ;;		_escalonador
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text15
  4075  0049A0                     __ptext15:
  4076                           	callstack 0
  4077  0049A0                     _verifica_fence_externo:
  4078                           	callstack 23
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 570: armazena_latitude();
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;incstack = 0
  4085  0049A0  ECF4  F029         	call	_armazena_latitude	;wreg free
  4086                           
  4087                           ;main.c: 571: armazena_longitude();
  4088  0049A4  ECE3  F029         	call	_armazena_longitude	;wreg free
  4089                           
  4090                           ;main.c: 573: verifica_diferenca_graus(0);
  4091  0049A8  0E00               	movlw	0
  4092  0049AA  ECCD  F017         	call	_verifica_diferenca_graus
  4093                           
  4094                           ;main.c: 574: verifica_diferenca_graus(1);
  4095  0049AE  0E01               	movlw	1
  4096  0049B0  ECCD  F017         	call	_verifica_diferenca_graus
  4097                           
  4098                           ;main.c: 576: verifica_diferenca_minutos(0);
  4099  0049B4  0E00               	movlw	0
  4100  0049B6  EC39  F015         	call	_verifica_diferenca_minutos
  4101                           
  4102                           ;main.c: 577: verifica_diferenca_minutos(1);
  4103  0049BA  0E01               	movlw	1
  4104  0049BC  EC39  F015         	call	_verifica_diferenca_minutos
  4105                           
  4106                           ;main.c: 579: calcula_diff_graus();
  4107  0049C0  EC17  F016         	call	_calcula_diff_graus	;wreg free
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;main.c: 580: calcula_diff_minutos();
  4111  0049C4  EC20  F01F         	call	_calcula_diff_minutos	;wreg free
  4112                           
  4113                           ;main.c: 583: flag[0].point = verifica_plausibilidade_long();
  4114  0049C8  ECBA  F020         	call	_verifica_plausibilidade_long	;wreg free
  4115  0049CC  6E2E               	movwf	??_verifica_fence_externo^0,c
  4116  0049CE  5033               	movf	_flag^0,w,c
  4117  0049D0  182E               	xorwf	??_verifica_fence_externo^0,w,c
  4118  0049D2  0BFE               	andlw	-2
  4119  0049D4  182E               	xorwf	??_verifica_fence_externo^0,w,c
  4120  0049D6  6E33               	movwf	_flag^0,c
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;main.c: 584: flag[1].point = verifica_plausibilidade_lat();
  4124  0049D8  EC12  F021         	call	_verifica_plausibilidade_lat	;wreg free
  4125  0049DC  6E2E               	movwf	??_verifica_fence_externo^0,c
  4126  0049DE  5034               	movf	(_flag+1)^0,w,c
  4127  0049E0  182E               	xorwf	??_verifica_fence_externo^0,w,c
  4128  0049E2  0BFE               	andlw	-2
  4129  0049E4  182E               	xorwf	??_verifica_fence_externo^0,w,c
  4130  0049E6  6E34               	movwf	(_flag+1)^0,c
  4131                           
  4132                           ; BSR set to: 1
  4133                           ;main.c: 586: if(flag[0].point || flag[1].point)
  4134  0049E8  B033               	btfsc	_flag^0,0,c
  4135  0049EA  D002               	goto	u14500
  4136                           
  4137                           ; BSR set to: 1
  4138  0049EC  A034               	btfss	(_flag+1)^0,0,c
  4139  0049EE  D009               	goto	l1406
  4140  0049F0                     u14500:
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;main.c: 587: {;main.c: 588: flag[2].point = 1;
  4144  0049F0  8035               	bsf	(_flag+2)^0,0,c
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;main.c: 589: monta_sd(4, "FORA");
  4148  0049F2  0E64               	movlw	low STR_25
  4149  0049F4  6E1D               	movwf	monta_sd@dado^0,c
  4150  0049F6  0E62               	movlw	high STR_25
  4151  0049F8  6E1E               	movwf	(monta_sd@dado+1)^0,c
  4152  0049FA  0E04               	movlw	4
  4153  0049FC  EC36  F014         	call	_monta_sd
  4154                           
  4155                           ;main.c: 590: }
  4156  004A00  0012               	return	
  4157  004A02                     l1406:
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;main.c: 591: else;main.c: 592: {;main.c: 593: flag[2].point = 0;
  4161  004A02  9035               	bcf	(_flag+2)^0,0,c
  4162                           
  4163                           ; BSR set to: 1
  4164                           ;main.c: 594: monta_sd(4, "DENTRO");
  4165  004A04  0E47               	movlw	low STR_26
  4166  004A06  6E1D               	movwf	monta_sd@dado^0,c
  4167  004A08  0E62               	movlw	high STR_26
  4168  004A0A  6E1E               	movwf	(monta_sd@dado+1)^0,c
  4169  004A0C  0E04               	movlw	4
  4170  004A0E  EC36  F014         	call	_monta_sd
  4171  004A12  0012               	return		;funcret
  4172  004A14                     __end_of_verifica_fence_externo:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _verifica_plausibilidade_long *****************
  4176 ;; Defined at:
  4177 ;;		line 311 in file "bibliotecas/fence.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      unsigned char 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 3F/1
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         0       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    3
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_verifica_fence_externo
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text16
  4206  004174                     __ptext16:
  4207                           	callstack 0
  4208  004174                     _verifica_plausibilidade_long:
  4209                           	callstack 25
  4210                           
  4211                           ;fence.c: 313: switch(temp_buff_long[0])
  4212                           
  4213                           ;incstack = 0
  4214  004174  D051               	goto	l8714
  4215  004176                     l8648:
  4216                           
  4217                           ; BSR set to: 2
  4218                           ;fence.c: 316: if(;fence.c: 317: ((poligono_ext[0].diff_long_min >= 0 &&;fence.c: 318: p
      +                          oligono_ext[1].diff_long_min <= 0) &&;fence.c: 320: (poligono_ext[0].diff_long_deg >= 0 
      +                          &&;fence.c: 321: poligono_ext[1].diff_long_deg <= 0)))
  4219  004176  0101               	movlb	1	; () banked
  4220  004178  BF61               	btfsc	(_poligono_ext+61)& (0+255),7,b
  4221  00417A  D016               	goto	l8662
  4222                           
  4223                           ; BSR set to: 1
  4224  00417C  BF9F               	btfsc	(_poligono_ext+123)& (0+255),7,b
  4225  00417E  D007               	goto	u9630
  4226  004180  519F               	movf	(_poligono_ext+123)& (0+255),w,b
  4227  004182  119E               	iorwf	(_poligono_ext+122)& (0+255),w,b
  4228  004184  119D               	iorwf	(_poligono_ext+121)& (0+255),w,b
  4229  004186  E110               	bnz	l8662
  4230  004188  059C               	decf	(_poligono_ext+120)& (0+255),w,b
  4231  00418A  B0D8               	btfsc	status,0,c
  4232  00418C  D00D               	goto	l8662
  4233  00418E                     u9630:
  4234                           
  4235                           ; BSR set to: 1
  4236  00418E  BF41               	btfsc	(_poligono_ext+29)& (0+255),7,b
  4237  004190  D00B               	goto	l8662
  4238                           
  4239                           ; BSR set to: 1
  4240  004192  BF7F               	btfsc	(_poligono_ext+91)& (0+255),7,b
  4241  004194  D007               	goto	u9650
  4242  004196  517F               	movf	(_poligono_ext+91)& (0+255),w,b
  4243  004198  117E               	iorwf	(_poligono_ext+90)& (0+255),w,b
  4244  00419A  117D               	iorwf	(_poligono_ext+89)& (0+255),w,b
  4245  00419C  E105               	bnz	l8662
  4246  00419E  057C               	decf	(_poligono_ext+88)& (0+255),w,b
  4247  0041A0  B0D8               	btfsc	status,0,c
  4248  0041A2  D002               	goto	l8662
  4249  0041A4                     u9650:
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;fence.c: 322: {;fence.c: 323: return 0;
  4253  0041A4  0E00               	movlw	0
  4254  0041A6  0012               	return	
  4255  0041A8                     l8662:
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;fence.c: 325: else if((poligono_ext[0].diff_long_min == 0 ||;fence.c: 326: poligono_ext
      +                          [1].diff_long_min == 0 ) &&;fence.c: 329: (poligono_ext[0].diff_long_deg == 0 ||;fence.c
      +                          : 330: poligono_ext[1].diff_long_deg == 0))
  4259  0041A8  515E               	movf	(_poligono_ext+58)& (0+255),w,b
  4260  0041AA  115F               	iorwf	(_poligono_ext+59)& (0+255),w,b
  4261  0041AC  1160               	iorwf	(_poligono_ext+60)& (0+255),w,b
  4262  0041AE  1161               	iorwf	(_poligono_ext+61)& (0+255),w,b
  4263  0041B0  B4D8               	btfsc	status,2,c
  4264  0041B2  D006               	goto	u9670
  4265  0041B4                     u9660:
  4266                           
  4267                           ; BSR set to: 1
  4268  0041B4  519C               	movf	(_poligono_ext+120)& (0+255),w,b
  4269  0041B6  119D               	iorwf	(_poligono_ext+121)& (0+255),w,b
  4270  0041B8  119E               	iorwf	(_poligono_ext+122)& (0+255),w,b
  4271  0041BA  119F               	iorwf	(_poligono_ext+123)& (0+255),w,b
  4272  0041BC  A4D8               	btfss	status,2,c
  4273  0041BE  D00C               	goto	l8676
  4274  0041C0                     u9670:
  4275                           
  4276                           ; BSR set to: 1
  4277  0041C0  513E               	movf	(_poligono_ext+26)& (0+255),w,b
  4278  0041C2  113F               	iorwf	(_poligono_ext+27)& (0+255),w,b
  4279  0041C4  1140               	iorwf	(_poligono_ext+28)& (0+255),w,b
  4280  0041C6  1141               	iorwf	(_poligono_ext+29)& (0+255),w,b
  4281  0041C8  B4D8               	btfsc	status,2,c
  4282  0041CA  D7EC               	goto	u9650
  4283                           
  4284                           ; BSR set to: 1
  4285  0041CC  517C               	movf	(_poligono_ext+88)& (0+255),w,b
  4286  0041CE  117D               	iorwf	(_poligono_ext+89)& (0+255),w,b
  4287  0041D0  117E               	iorwf	(_poligono_ext+90)& (0+255),w,b
  4288  0041D2  117F               	iorwf	(_poligono_ext+91)& (0+255),w,b
  4289  0041D4  B4D8               	btfsc	status,2,c
  4290  0041D6  D7E6               	goto	u9650
  4291  0041D8                     l8676:
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;fence.c: 334: else;fence.c: 335: {;fence.c: 336: return 1;
  4295  0041D8  0E01               	movlw	1
  4296  0041DA  0012               	return	
  4297  0041DC                     l8680:
  4298                           
  4299                           ; BSR set to: 2
  4300                           ;fence.c: 341: if(;fence.c: 342: (poligono_ext[0].diff_long_min <= 0 &&;fence.c: 343: po
      +                          ligono_ext[1].diff_long_min >= 0 ) &&;fence.c: 344: (poligono_ext[0].diff_lat_deg <= 0 &
      +                          &;fence.c: 345: poligono_ext[1].diff_lat_deg >= 0))
  4301  0041DC  0101               	movlb	1	; () banked
  4302  0041DE  BF61               	btfsc	(_poligono_ext+61)& (0+255),7,b
  4303  0041E0  D007               	goto	u9700
  4304  0041E2  5161               	movf	(_poligono_ext+61)& (0+255),w,b
  4305  0041E4  1160               	iorwf	(_poligono_ext+60)& (0+255),w,b
  4306  0041E6  115F               	iorwf	(_poligono_ext+59)& (0+255),w,b
  4307  0041E8  E110               	bnz	l8694
  4308  0041EA  055E               	decf	(_poligono_ext+58)& (0+255),w,b
  4309  0041EC  B0D8               	btfsc	status,0,c
  4310  0041EE  D00D               	goto	l8694
  4311  0041F0                     u9700:
  4312                           
  4313                           ; BSR set to: 1
  4314  0041F0  BF9F               	btfsc	(_poligono_ext+123)& (0+255),7,b
  4315  0041F2  D00B               	goto	l8694
  4316                           
  4317                           ; BSR set to: 1
  4318  0041F4  BF3D               	btfsc	(_poligono_ext+25)& (0+255),7,b
  4319  0041F6  D007               	goto	u9720
  4320  0041F8  513D               	movf	(_poligono_ext+25)& (0+255),w,b
  4321  0041FA  113C               	iorwf	(_poligono_ext+24)& (0+255),w,b
  4322  0041FC  113B               	iorwf	(_poligono_ext+23)& (0+255),w,b
  4323  0041FE  E105               	bnz	l8694
  4324  004200  053A               	decf	(_poligono_ext+22)& (0+255),w,b
  4325  004202  B0D8               	btfsc	status,0,c
  4326  004204  D002               	goto	l8694
  4327  004206                     u9720:
  4328                           
  4329                           ; BSR set to: 1
  4330  004206  AF7B               	btfss	(_poligono_ext+87)& (0+255),7,b
  4331  004208  D7CD               	goto	u9650
  4332  00420A                     l8694:
  4333                           
  4334                           ; BSR set to: 1
  4335                           ;fence.c: 349: else if((poligono_ext[0].diff_long_min == 0 ||;fence.c: 350: poligono_ext
      +                          [1].diff_long_min == 0) &&;fence.c: 351: (poligono_ext[0].diff_long_deg == 0 ||;fence.c:
      +                           352: poligono_ext[1].diff_long_deg == 0))
  4336  00420A  515E               	movf	(_poligono_ext+58)& (0+255),w,b
  4337  00420C  115F               	iorwf	(_poligono_ext+59)& (0+255),w,b
  4338  00420E  1160               	iorwf	(_poligono_ext+60)& (0+255),w,b
  4339  004210  1161               	iorwf	(_poligono_ext+61)& (0+255),w,b
  4340  004212  A4D8               	btfss	status,2,c
  4341  004214  D7CF               	goto	u9660
  4342                           
  4343                           ; BSR set to: 1
  4344  004216  D7D4               	goto	u9670
  4345  004218                     l8714:
  4346  004218  0102               	movlb	2	; () banked
  4347  00421A  5186               	movf	_temp_buff_long& (0+255),w,b
  4348                           
  4349                           ; Switch size 1, requested type "simple"
  4350                           ; Number of cases is 1, Range of values is 45 to 45
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte            4     3 (average)
  4354                           ;	Chosen strategy is simple_byte
  4355  00421C  0A2D               	xorlw	45	; case 45
  4356  00421E  B4D8               	btfsc	status,2,c
  4357  004220  D7AA               	goto	l8648
  4358  004222  D7DC               	goto	l8680
  4359  004224                     __end_of_verifica_plausibilidade_long:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _verifica_plausibilidade_lat *****************
  4363 ;; Defined at:
  4364 ;;		line 373 in file "bibliotecas/fence.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      unsigned char 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 3F/1
  4375 ;;		On exit  : 3F/1
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    3
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_verifica_fence_externo
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text17
  4393  004224                     __ptext17:
  4394                           	callstack 0
  4395  004224                     _verifica_plausibilidade_lat:
  4396                           	callstack 25
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;fence.c: 375: switch(temp_buff_lat[0])
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;incstack = 0
  4403  004224  D051               	goto	l8784
  4404  004226                     l8718:
  4405                           
  4406                           ; BSR set to: 2
  4407                           ;fence.c: 378: if(;fence.c: 379: (;fence.c: 380: poligono_ext[0].diff_lat_min <= 0 &&;fe
      +                          nce.c: 381: poligono_ext[1].diff_lat_min >= 0) &&;fence.c: 383: (poligono_ext[0].diff_la
      +                          t_deg <= 0 &&;fence.c: 384: poligono_ext[1].diff_lat_deg >= 0))
  4408  004226  0101               	movlb	1	; () banked
  4409  004228  BF5D               	btfsc	(_poligono_ext+57)& (0+255),7,b
  4410  00422A  D007               	goto	u9780
  4411  00422C  515D               	movf	(_poligono_ext+57)& (0+255),w,b
  4412  00422E  115C               	iorwf	(_poligono_ext+56)& (0+255),w,b
  4413  004230  115B               	iorwf	(_poligono_ext+55)& (0+255),w,b
  4414  004232  E112               	bnz	l8732
  4415  004234  055A               	decf	(_poligono_ext+54)& (0+255),w,b
  4416  004236  B0D8               	btfsc	status,0,c
  4417  004238  D00F               	goto	l8732
  4418  00423A                     u9780:
  4419                           
  4420                           ; BSR set to: 1
  4421  00423A  BF9B               	btfsc	(_poligono_ext+119)& (0+255),7,b
  4422  00423C  D00D               	goto	l8732
  4423                           
  4424                           ; BSR set to: 1
  4425  00423E  BF3D               	btfsc	(_poligono_ext+25)& (0+255),7,b
  4426  004240  D007               	goto	u9800
  4427  004242  513D               	movf	(_poligono_ext+25)& (0+255),w,b
  4428  004244  113C               	iorwf	(_poligono_ext+24)& (0+255),w,b
  4429  004246  113B               	iorwf	(_poligono_ext+23)& (0+255),w,b
  4430  004248  E107               	bnz	l8732
  4431  00424A  053A               	decf	(_poligono_ext+22)& (0+255),w,b
  4432  00424C  B0D8               	btfsc	status,0,c
  4433  00424E  D004               	goto	l8732
  4434  004250                     u9800:
  4435                           
  4436                           ; BSR set to: 1
  4437  004250  BF7B               	btfsc	(_poligono_ext+87)& (0+255),7,b
  4438  004252  D002               	goto	l8732
  4439  004254                     u9810:
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;fence.c: 386: {;fence.c: 387: return 0;
  4443  004254  0E00               	movlw	0
  4444  004256  0012               	return	
  4445  004258                     l8732:
  4446                           
  4447                           ; BSR set to: 1
  4448                           ;fence.c: 389: else if(;fence.c: 390: (poligono_ext[0].diff_lat_min == 0 ||;fence.c: 391
      +                          : poligono_ext[1].diff_lat_min == 0) &&;fence.c: 392: (poligono_ext[0].diff_lat_deg == 0
      +                           ||;fence.c: 393: poligono_ext[1].diff_lat_deg == 0))
  4449  004258  515A               	movf	(_poligono_ext+54)& (0+255),w,b
  4450  00425A  115B               	iorwf	(_poligono_ext+55)& (0+255),w,b
  4451  00425C  115C               	iorwf	(_poligono_ext+56)& (0+255),w,b
  4452  00425E  115D               	iorwf	(_poligono_ext+57)& (0+255),w,b
  4453  004260  B4D8               	btfsc	status,2,c
  4454  004262  D006               	goto	u9830
  4455  004264                     u9820:
  4456                           
  4457                           ; BSR set to: 1
  4458  004264  5198               	movf	(_poligono_ext+116)& (0+255),w,b
  4459  004266  1199               	iorwf	(_poligono_ext+117)& (0+255),w,b
  4460  004268  119A               	iorwf	(_poligono_ext+118)& (0+255),w,b
  4461  00426A  119B               	iorwf	(_poligono_ext+119)& (0+255),w,b
  4462  00426C  A4D8               	btfss	status,2,c
  4463  00426E  D00C               	goto	l8746
  4464  004270                     u9830:
  4465                           
  4466                           ; BSR set to: 1
  4467  004270  513A               	movf	(_poligono_ext+22)& (0+255),w,b
  4468  004272  113B               	iorwf	(_poligono_ext+23)& (0+255),w,b
  4469  004274  113C               	iorwf	(_poligono_ext+24)& (0+255),w,b
  4470  004276  113D               	iorwf	(_poligono_ext+25)& (0+255),w,b
  4471  004278  B4D8               	btfsc	status,2,c
  4472  00427A  D7EC               	goto	u9810
  4473                           
  4474                           ; BSR set to: 1
  4475  00427C  5178               	movf	(_poligono_ext+84)& (0+255),w,b
  4476  00427E  1179               	iorwf	(_poligono_ext+85)& (0+255),w,b
  4477  004280  117A               	iorwf	(_poligono_ext+86)& (0+255),w,b
  4478  004282  117B               	iorwf	(_poligono_ext+87)& (0+255),w,b
  4479  004284  B4D8               	btfsc	status,2,c
  4480  004286  D7E6               	goto	u9810
  4481  004288                     l8746:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;fence.c: 398: else;fence.c: 399: {;fence.c: 400: return 1;
  4485  004288  0E01               	movlw	1
  4486  00428A  0012               	return	
  4487  00428C                     l8750:
  4488                           
  4489                           ; BSR set to: 2
  4490                           ;fence.c: 405: if((poligono_ext[0].diff_lat_min >= 0 &&;fence.c: 406: poligono_ext[1].di
      +                          ff_lat_min <= 0 ) &&;fence.c: 409: (poligono_ext[0].diff_lat_deg >= 0 &&;fence.c: 410: p
      +                          oligono_ext[1].diff_lat_deg <= 0);fence.c: 411: )
  4491  00428C  0101               	movlb	1	; () banked
  4492  00428E  BF5D               	btfsc	(_poligono_ext+57)& (0+255),7,b
  4493  004290  D014               	goto	l8764
  4494                           
  4495                           ; BSR set to: 1
  4496  004292  BF9B               	btfsc	(_poligono_ext+119)& (0+255),7,b
  4497  004294  D007               	goto	u9870
  4498  004296  519B               	movf	(_poligono_ext+119)& (0+255),w,b
  4499  004298  119A               	iorwf	(_poligono_ext+118)& (0+255),w,b
  4500  00429A  1199               	iorwf	(_poligono_ext+117)& (0+255),w,b
  4501  00429C  E10E               	bnz	l8764
  4502  00429E  0598               	decf	(_poligono_ext+116)& (0+255),w,b
  4503  0042A0  B0D8               	btfsc	status,0,c
  4504  0042A2  D00B               	goto	l8764
  4505  0042A4                     u9870:
  4506                           
  4507                           ; BSR set to: 1
  4508  0042A4  BF3D               	btfsc	(_poligono_ext+25)& (0+255),7,b
  4509  0042A6  D009               	goto	l8764
  4510                           
  4511                           ; BSR set to: 1
  4512  0042A8  BF7B               	btfsc	(_poligono_ext+87)& (0+255),7,b
  4513  0042AA  D7D4               	goto	u9810
  4514  0042AC  517B               	movf	(_poligono_ext+87)& (0+255),w,b
  4515  0042AE  117A               	iorwf	(_poligono_ext+86)& (0+255),w,b
  4516  0042B0  1179               	iorwf	(_poligono_ext+85)& (0+255),w,b
  4517  0042B2  E103               	bnz	l8764
  4518  0042B4  0578               	decf	(_poligono_ext+84)& (0+255),w,b
  4519  0042B6  A0D8               	btfss	status,0,c
  4520  0042B8  D7CD               	goto	u9810
  4521  0042BA                     l8764:
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;fence.c: 415: else if((poligono_ext[0].diff_lat_min == 0 ||;fence.c: 416: poligono_ext[
      +                          1].diff_lat_min == 0) &&;fence.c: 418: (poligono_ext[0].diff_lat_deg == 0 ||;fence.c: 41
      +                          9: poligono_ext[1].diff_lat_deg == 0))
  4525  0042BA  515A               	movf	(_poligono_ext+54)& (0+255),w,b
  4526  0042BC  115B               	iorwf	(_poligono_ext+55)& (0+255),w,b
  4527  0042BE  115C               	iorwf	(_poligono_ext+56)& (0+255),w,b
  4528  0042C0  115D               	iorwf	(_poligono_ext+57)& (0+255),w,b
  4529  0042C2  A4D8               	btfss	status,2,c
  4530  0042C4  D7CF               	goto	u9820
  4531                           
  4532                           ; BSR set to: 1
  4533  0042C6  D7D4               	goto	u9830
  4534  0042C8                     l8784:
  4535                           
  4536                           ; BSR set to: 1
  4537  0042C8  0102               	movlb	2	; () banked
  4538  0042CA  5192               	movf	_temp_buff_lat& (0+255),w,b
  4539                           
  4540                           ; Switch size 1, requested type "simple"
  4541                           ; Number of cases is 1, Range of values is 45 to 45
  4542                           ; switch strategies available:
  4543                           ; Name         Instructions Cycles
  4544                           ; simple_byte            4     3 (average)
  4545                           ;	Chosen strategy is simple_byte
  4546  0042CC  0A2D               	xorlw	45	; case 45
  4547  0042CE  B4D8               	btfsc	status,2,c
  4548  0042D0  D7AA               	goto	l8718
  4549  0042D2  D7DC               	goto	l8750
  4550  0042D4                     __end_of_verifica_plausibilidade_lat:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _verifica_diferenca_minutos *****************
  4554 ;; Defined at:
  4555 ;;		line 201 in file "bibliotecas/fence.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  select_data     1    wreg     unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  select_data     1   28[COMRAM] unsigned char 
  4560 ;;  i               1   33[COMRAM] unsigned char 
  4561 ;;  point           1   32[COMRAM] unsigned char 
  4562 ;;  j               1   31[COMRAM] unsigned char 
  4563 ;;  point_index_    1   30[COMRAM] unsigned char 
  4564 ;;  point_index_    1   29[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4577 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:       10 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_verifica_fence_externo
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text18
  4589  002A72                     __ptext18:
  4590                           	callstack 0
  4591  002A72                     _verifica_diferenca_minutos:
  4592                           	callstack 25
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;incstack = 0
  4596                           ;verifica_diferenca_minutos@select_data stored from wreg
  4597  002A72  6E1D               	movwf	verifica_diferenca_minutos@select_data^0,c
  4598                           
  4599                           ;fence.c: 203: unsigned char point, point_index_lat ,point_index_long;;fence.c: 204: uns
      +                          igned char i, j;;fence.c: 206: point_index_lat = 0;
  4600  002A74  0E00               	movlw	0
  4601  002A76  6E1E               	movwf	verifica_diferenca_minutos@point_index_lat^0,c
  4602                           
  4603                           ;fence.c: 207: point_index_long = 0;
  4604  002A78  0E00               	movlw	0
  4605  002A7A  6E1F               	movwf	verifica_diferenca_minutos@point_index_long^0,c
  4606                           
  4607                           ;fence.c: 208: point = 0;
  4608  002A7C  0E00               	movlw	0
  4609  002A7E  6E21               	movwf	verifica_diferenca_minutos@point^0,c
  4610                           
  4611                           ;fence.c: 209: switch(select_data)
  4612  002A80  D0CE               	goto	l8608
  4613  002A82                     l8526:
  4614                           
  4615                           ;fence.c: 213: {;fence.c: 214: for(i=6; i<11; i++)
  4616  002A82  0E06               	movlw	6
  4617  002A84  6E22               	movwf	verifica_diferenca_minutos@i^0,c
  4618  002A86                     l8532:
  4619                           
  4620                           ;fence.c: 215: {;fence.c: 216: if(point == 0 || point == 2)
  4621  002A86  5021               	movf	verifica_diferenca_minutos@point^0,w,c
  4622  002A88  B4D8               	btfsc	status,2,c
  4623  002A8A  D004               	goto	u9430
  4624  002A8C  0E02               	movlw	2
  4625  002A8E  1821               	xorwf	verifica_diferenca_minutos@point^0,w,c
  4626  002A90  A4D8               	btfss	status,2,c
  4627  002A92  D059               	goto	u9470
  4628  002A94                     u9430:
  4629                           
  4630                           ;fence.c: 217: {;fence.c: 218: if(point == 2 && !point_index_lat)
  4631  002A94  0E02               	movlw	2
  4632  002A96  1821               	xorwf	verifica_diferenca_minutos@point^0,w,c
  4633  002A98  A4D8               	btfss	status,2,c
  4634  002A9A  D003               	goto	l8542
  4635  002A9C  501E               	movf	verifica_diferenca_minutos@point_index_lat^0,w,c
  4636  002A9E  B4D8               	btfsc	status,2,c
  4637                           
  4638                           ;fence.c: 219: {;fence.c: 220: point_index_lat++;
  4639  002AA0  2A1E               	incf	verifica_diferenca_minutos@point_index_lat^0,f,c
  4640  002AA2                     l8542:
  4641                           
  4642                           ;fence.c: 221: };fence.c: 224: for(j= 0; i < 11; j++)
  4643  002AA2  0E00               	movlw	0
  4644  002AA4  6E20               	movwf	verifica_diferenca_minutos@j^0,c
  4645  002AA6                     l8544:
  4646  002AA6  0E0A               	movlw	10
  4647  002AA8  6422               	cpfsgt	verifica_diferenca_minutos@i^0,c
  4648  002AAA  D001               	goto	l8548
  4649  002AAC  D048               	goto	l8558
  4650  002AAE                     l8548:
  4651                           
  4652                           ;fence.c: 225: {;fence.c: 226: poligono_ext[point_index_lat].fence_lat_min[j] = fence_di
      +                          ff_lat[point][i];
  4653  002AAE  5021               	movf	verifica_diferenca_minutos@point^0,w,c
  4654  002AB0  0D0B               	mullw	11
  4655  002AB2  0E93               	movlw	low _fence_diff_lat
  4656  002AB4  6E19               	movwf	??_verifica_diferenca_minutos^0,c
  4657  002AB6  0E60               	movlw	high _fence_diff_lat
  4658  002AB8  6E1A               	movwf	(??_verifica_diferenca_minutos+1)^0,c
  4659  002ABA  50F3               	movf	243,w,c
  4660  002ABC  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4661  002ABE  50F4               	movf	244,w,c
  4662  002AC0  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4663  002AC2  5022               	movf	verifica_diferenca_minutos@i^0,w,c
  4664  002AC4  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4665  002AC6  0E00               	movlw	0
  4666  002AC8  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4667  002ACA  C019  FFF6         	movff	??_verifica_diferenca_minutos,tblptrl
  4668  002ACE  C01A  FFF7         	movff	??_verifica_diferenca_minutos+1,tblptrh
  4669  002AD2                     	if	0	;tblptru may be non-zero
  4670  002AD2                     	endif
  4671  002AD2                     	if	0	;tblptru may be non-zero
  4672  002AD2                     	endif
  4673  002AD2  501E               	movf	verifica_diferenca_minutos@point_index_lat^0,w,c
  4674  002AD4  0D3E               	mullw	62
  4675  002AD6  0E24               	movlw	low _poligono_ext
  4676  002AD8  6E1B               	movwf	(??_verifica_diferenca_minutos+2)^0,c
  4677  002ADA  0E01               	movlw	high _poligono_ext
  4678  002ADC  6E1C               	movwf	(??_verifica_diferenca_minutos+3)^0,c
  4679  002ADE  0E1E               	movlw	30
  4680  002AE0  261B               	addwf	(??_verifica_diferenca_minutos+2)^0,f,c
  4681  002AE2  0E00               	movlw	0
  4682  002AE4  221C               	addwfc	(??_verifica_diferenca_minutos+3)^0,f,c
  4683  002AE6  50F3               	movf	243,w,c
  4684  002AE8  261B               	addwf	(??_verifica_diferenca_minutos+2)^0,f,c
  4685  002AEA  50F4               	movf	244,w,c
  4686  002AEC  221C               	addwfc	(??_verifica_diferenca_minutos+3)^0,f,c
  4687  002AEE  5020               	movf	verifica_diferenca_minutos@j^0,w,c
  4688  002AF0  241B               	addwf	(??_verifica_diferenca_minutos+2)^0,w,c
  4689  002AF2  6ED9               	movwf	fsr2l,c
  4690  002AF4  0E00               	movlw	0
  4691  002AF6  201C               	addwfc	(??_verifica_diferenca_minutos+3)^0,w,c
  4692  002AF8  6EDA               	movwf	fsr2h,c
  4693  002AFA  0008               	tblrd		*
  4694  002AFC  CFF5 FFDF          	movff	tablat,indf2
  4695                           
  4696                           ;fence.c: 227: poligono_ext[point_index_lat].point_lat_min[j] = temp_buff_lat[i];
  4697  002B00  0E92               	movlw	low _temp_buff_lat
  4698  002B02  2422               	addwf	verifica_diferenca_minutos@i^0,w,c
  4699  002B04  6ED9               	movwf	fsr2l,c
  4700  002B06  6ADA               	clrf	fsr2h,c
  4701  002B08  0E02               	movlw	high _temp_buff_lat
  4702  002B0A  22DA               	addwfc	fsr2h,f,c
  4703  002B0C  501E               	movf	verifica_diferenca_minutos@point_index_lat^0,w,c
  4704  002B0E  0D3E               	mullw	62
  4705  002B10  0E24               	movlw	low _poligono_ext
  4706  002B12  6E19               	movwf	??_verifica_diferenca_minutos^0,c
  4707  002B14  0E01               	movlw	high _poligono_ext
  4708  002B16  6E1A               	movwf	(??_verifica_diferenca_minutos+1)^0,c
  4709  002B18  0E2A               	movlw	42
  4710  002B1A  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4711  002B1C  0E00               	movlw	0
  4712  002B1E  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4713  002B20  50F3               	movf	243,w,c
  4714  002B22  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4715  002B24  50F4               	movf	244,w,c
  4716  002B26  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4717  002B28  5020               	movf	verifica_diferenca_minutos@j^0,w,c
  4718  002B2A  2419               	addwf	??_verifica_diferenca_minutos^0,w,c
  4719  002B2C  6EE1               	movwf	fsr1l,c
  4720  002B2E  0E00               	movlw	0
  4721  002B30  201A               	addwfc	(??_verifica_diferenca_minutos+1)^0,w,c
  4722  002B32  6EE2               	movwf	fsr1h,c
  4723  002B34  CFDF FFE7          	movff	indf2,indf1
  4724                           
  4725                           ;fence.c: 228: i++;
  4726  002B38  2A22               	incf	verifica_diferenca_minutos@i^0,f,c
  4727  002B3A  2A20               	incf	verifica_diferenca_minutos@j^0,f,c
  4728  002B3C  D7B4               	goto	l8544
  4729  002B3E                     l8558:
  4730  002B3E  2A22               	incf	verifica_diferenca_minutos@i^0,f,c
  4731  002B40  0E0A               	movlw	10
  4732  002B42  6422               	cpfsgt	verifica_diferenca_minutos@i^0,c
  4733  002B44  D7A0               	goto	l8532
  4734  002B46                     u9470:
  4735                           
  4736                           ;fence.c: 238: };fence.c: 239: };fence.c: 240: point++;
  4737  002B46  2A21               	incf	verifica_diferenca_minutos@point^0,f,c
  4738  002B48                     l8564:
  4739  002B48  0E03               	movlw	3
  4740  002B4A  6421               	cpfsgt	verifica_diferenca_minutos@point^0,c
  4741  002B4C  D79A               	goto	l8526
  4742  002B4E  0012               	return	
  4743  002B50                     l8566:
  4744                           
  4745                           ;fence.c: 246: {;fence.c: 247: for(i=7; i<12; i++)
  4746  002B50  0E07               	movlw	7
  4747  002B52  6E22               	movwf	verifica_diferenca_minutos@i^0,c
  4748  002B54                     l8572:
  4749                           
  4750                           ;fence.c: 248: {;fence.c: 249: if(point == 0 || point == 2)
  4751  002B54  5021               	movf	verifica_diferenca_minutos@point^0,w,c
  4752  002B56  B4D8               	btfsc	status,2,c
  4753  002B58  D004               	goto	u9500
  4754  002B5A  0E02               	movlw	2
  4755  002B5C  1821               	xorwf	verifica_diferenca_minutos@point^0,w,c
  4756  002B5E  A4D8               	btfss	status,2,c
  4757  002B60  D059               	goto	u9540
  4758  002B62                     u9500:
  4759                           
  4760                           ;fence.c: 250: {;fence.c: 251: if(point == 2 && !point_index_long)
  4761  002B62  0E02               	movlw	2
  4762  002B64  1821               	xorwf	verifica_diferenca_minutos@point^0,w,c
  4763  002B66  A4D8               	btfss	status,2,c
  4764  002B68  D003               	goto	l8582
  4765  002B6A  501F               	movf	verifica_diferenca_minutos@point_index_long^0,w,c
  4766  002B6C  B4D8               	btfsc	status,2,c
  4767                           
  4768                           ;fence.c: 252: {;fence.c: 253: point_index_long++;
  4769  002B6E  2A1F               	incf	verifica_diferenca_minutos@point_index_long^0,f,c
  4770  002B70                     l8582:
  4771                           
  4772                           ;fence.c: 254: };fence.c: 259: for(j= 0; i < 12; j++)
  4773  002B70  0E00               	movlw	0
  4774  002B72  6E20               	movwf	verifica_diferenca_minutos@j^0,c
  4775  002B74                     l8584:
  4776  002B74  0E0B               	movlw	11
  4777  002B76  6422               	cpfsgt	verifica_diferenca_minutos@i^0,c
  4778  002B78  D001               	goto	l8588
  4779  002B7A  D048               	goto	l8598
  4780  002B7C                     l8588:
  4781                           
  4782                           ;fence.c: 260: {;fence.c: 261: poligono_ext[point_index_long].fence_long_min[j] = fence_
      +                          diff_long[point][i];
  4783  002B7C  5021               	movf	verifica_diferenca_minutos@point^0,w,c
  4784  002B7E  0D0C               	mullw	12
  4785  002B80  0E63               	movlw	low _fence_diff_long
  4786  002B82  6E19               	movwf	??_verifica_diferenca_minutos^0,c
  4787  002B84  0E60               	movlw	high _fence_diff_long
  4788  002B86  6E1A               	movwf	(??_verifica_diferenca_minutos+1)^0,c
  4789  002B88  50F3               	movf	243,w,c
  4790  002B8A  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4791  002B8C  50F4               	movf	244,w,c
  4792  002B8E  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4793  002B90  5022               	movf	verifica_diferenca_minutos@i^0,w,c
  4794  002B92  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4795  002B94  0E00               	movlw	0
  4796  002B96  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4797  002B98  C019  FFF6         	movff	??_verifica_diferenca_minutos,tblptrl
  4798  002B9C  C01A  FFF7         	movff	??_verifica_diferenca_minutos+1,tblptrh
  4799  002BA0                     	if	0	;tblptru may be non-zero
  4800  002BA0                     	endif
  4801  002BA0                     	if	0	;tblptru may be non-zero
  4802  002BA0                     	endif
  4803  002BA0  501F               	movf	verifica_diferenca_minutos@point_index_long^0,w,c
  4804  002BA2  0D3E               	mullw	62
  4805  002BA4  0E24               	movlw	low _poligono_ext
  4806  002BA6  6E1B               	movwf	(??_verifica_diferenca_minutos+2)^0,c
  4807  002BA8  0E01               	movlw	high _poligono_ext
  4808  002BAA  6E1C               	movwf	(??_verifica_diferenca_minutos+3)^0,c
  4809  002BAC  0E24               	movlw	36
  4810  002BAE  261B               	addwf	(??_verifica_diferenca_minutos+2)^0,f,c
  4811  002BB0  0E00               	movlw	0
  4812  002BB2  221C               	addwfc	(??_verifica_diferenca_minutos+3)^0,f,c
  4813  002BB4  50F3               	movf	243,w,c
  4814  002BB6  261B               	addwf	(??_verifica_diferenca_minutos+2)^0,f,c
  4815  002BB8  50F4               	movf	244,w,c
  4816  002BBA  221C               	addwfc	(??_verifica_diferenca_minutos+3)^0,f,c
  4817  002BBC  5020               	movf	verifica_diferenca_minutos@j^0,w,c
  4818  002BBE  241B               	addwf	(??_verifica_diferenca_minutos+2)^0,w,c
  4819  002BC0  6ED9               	movwf	fsr2l,c
  4820  002BC2  0E00               	movlw	0
  4821  002BC4  201C               	addwfc	(??_verifica_diferenca_minutos+3)^0,w,c
  4822  002BC6  6EDA               	movwf	fsr2h,c
  4823  002BC8  0008               	tblrd		*
  4824  002BCA  CFF5 FFDF          	movff	tablat,indf2
  4825                           
  4826                           ;fence.c: 262: poligono_ext[point_index_long].point_long_min[j] = temp_buff_long[i];
  4827  002BCE  0E86               	movlw	low _temp_buff_long
  4828  002BD0  2422               	addwf	verifica_diferenca_minutos@i^0,w,c
  4829  002BD2  6ED9               	movwf	fsr2l,c
  4830  002BD4  6ADA               	clrf	fsr2h,c
  4831  002BD6  0E02               	movlw	high _temp_buff_long
  4832  002BD8  22DA               	addwfc	fsr2h,f,c
  4833  002BDA  501F               	movf	verifica_diferenca_minutos@point_index_long^0,w,c
  4834  002BDC  0D3E               	mullw	62
  4835  002BDE  0E24               	movlw	low _poligono_ext
  4836  002BE0  6E19               	movwf	??_verifica_diferenca_minutos^0,c
  4837  002BE2  0E01               	movlw	high _poligono_ext
  4838  002BE4  6E1A               	movwf	(??_verifica_diferenca_minutos+1)^0,c
  4839  002BE6  0E30               	movlw	48
  4840  002BE8  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4841  002BEA  0E00               	movlw	0
  4842  002BEC  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4843  002BEE  50F3               	movf	243,w,c
  4844  002BF0  2619               	addwf	??_verifica_diferenca_minutos^0,f,c
  4845  002BF2  50F4               	movf	244,w,c
  4846  002BF4  221A               	addwfc	(??_verifica_diferenca_minutos+1)^0,f,c
  4847  002BF6  5020               	movf	verifica_diferenca_minutos@j^0,w,c
  4848  002BF8  2419               	addwf	??_verifica_diferenca_minutos^0,w,c
  4849  002BFA  6EE1               	movwf	fsr1l,c
  4850  002BFC  0E00               	movlw	0
  4851  002BFE  201A               	addwfc	(??_verifica_diferenca_minutos+1)^0,w,c
  4852  002C00  6EE2               	movwf	fsr1h,c
  4853  002C02  CFDF FFE7          	movff	indf2,indf1
  4854                           
  4855                           ;fence.c: 263: i++;
  4856  002C06  2A22               	incf	verifica_diferenca_minutos@i^0,f,c
  4857  002C08  2A20               	incf	verifica_diferenca_minutos@j^0,f,c
  4858  002C0A  D7B4               	goto	l8584
  4859  002C0C                     l8598:
  4860  002C0C  2A22               	incf	verifica_diferenca_minutos@i^0,f,c
  4861  002C0E  0E0B               	movlw	11
  4862  002C10  6422               	cpfsgt	verifica_diferenca_minutos@i^0,c
  4863  002C12  D7A0               	goto	l8572
  4864  002C14                     u9540:
  4865                           
  4866                           ;fence.c: 271: };fence.c: 273: };fence.c: 274: point++;
  4867  002C14  2A21               	incf	verifica_diferenca_minutos@point^0,f,c
  4868  002C16                     l8604:
  4869  002C16  0E03               	movlw	3
  4870  002C18  6421               	cpfsgt	verifica_diferenca_minutos@point^0,c
  4871  002C1A  D79A               	goto	l8566
  4872  002C1C  0012               	return	
  4873  002C1E                     l8608:
  4874  002C1E  501D               	movf	verifica_diferenca_minutos@select_data^0,w,c
  4875                           
  4876                           ; Switch size 1, requested type "simple"
  4877                           ; Number of cases is 2, Range of values is 0 to 1
  4878                           ; switch strategies available:
  4879                           ; Name         Instructions Cycles
  4880                           ; simple_byte            7     4 (average)
  4881                           ;	Chosen strategy is simple_byte
  4882  002C20  0A00               	xorlw	0	; case 0
  4883  002C22  B4D8               	btfsc	status,2,c
  4884  002C24  D7F8               	goto	l8604
  4885  002C26  0A01               	xorlw	1	; case 1
  4886  002C28  A4D8               	btfss	status,2,c
  4887  002C2A  0012               	return	
  4888  002C2C  D78D               	goto	l8564
  4889  002C2E                     __end_of_verifica_diferenca_minutos:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _verifica_diferenca_graus *****************
  4893 ;; Defined at:
  4894 ;;		line 80 in file "bibliotecas/fence.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  select_data     1    wreg     unsigned char 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  select_data     1   28[COMRAM] unsigned char 
  4899 ;;  i               1   33[COMRAM] unsigned char 
  4900 ;;  point           1   32[COMRAM] unsigned char 
  4901 ;;  j               1   31[COMRAM] unsigned char 
  4902 ;;  point_index_    1   30[COMRAM] unsigned char 
  4903 ;;  point_index_    1   29[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0
  4914 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4915 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4916 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4917 ;;Total ram usage:       10 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    3
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_verifica_fence_externo
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text19
  4928  002F9A                     __ptext19:
  4929                           	callstack 0
  4930  002F9A                     _verifica_diferenca_graus:
  4931                           	callstack 25
  4932                           
  4933                           ;incstack = 0
  4934                           ;verifica_diferenca_graus@select_data stored from wreg
  4935  002F9A  6E1D               	movwf	verifica_diferenca_graus@select_data^0,c
  4936                           
  4937                           ;fence.c: 83: unsigned char point, point_index_lat ,point_index_long;;fence.c: 84: unsig
      +                          ned char i, j;;fence.c: 85: point = 0;
  4938  002F9C  0E00               	movlw	0
  4939  002F9E  6E21               	movwf	verifica_diferenca_graus@point^0,c
  4940                           
  4941                           ;fence.c: 86: point_index_long = 0;
  4942  002FA0  0E00               	movlw	0
  4943  002FA2  6E1F               	movwf	verifica_diferenca_graus@point_index_long^0,c
  4944                           
  4945                           ;fence.c: 87: point_index_lat = 0;
  4946  002FA4  0E00               	movlw	0
  4947  002FA6  6E1E               	movwf	verifica_diferenca_graus@point_index_lat^0,c
  4948                           
  4949                           ;fence.c: 89: switch(select_data)
  4950  002FA8  D0CA               	goto	l8522
  4951  002FAA                     l8440:
  4952                           
  4953                           ;fence.c: 93: {;fence.c: 94: for(i=1; i<5; i++)
  4954  002FAA  0E01               	movlw	1
  4955  002FAC  6E22               	movwf	verifica_diferenca_graus@i^0,c
  4956  002FAE                     l8446:
  4957                           
  4958                           ;fence.c: 95: {;fence.c: 96: if(point == 0 || point == 2)
  4959  002FAE  5021               	movf	verifica_diferenca_graus@point^0,w,c
  4960  002FB0  B4D8               	btfsc	status,2,c
  4961  002FB2  D004               	goto	u9290
  4962  002FB4  0E02               	movlw	2
  4963  002FB6  1821               	xorwf	verifica_diferenca_graus@point^0,w,c
  4964  002FB8  A4D8               	btfss	status,2,c
  4965  002FBA  D055               	goto	u9330
  4966  002FBC                     u9290:
  4967                           
  4968                           ;fence.c: 97: {;fence.c: 99: if(point == 2 && !point_index_lat)
  4969  002FBC  0E02               	movlw	2
  4970  002FBE  1821               	xorwf	verifica_diferenca_graus@point^0,w,c
  4971  002FC0  A4D8               	btfss	status,2,c
  4972  002FC2  D003               	goto	l8456
  4973  002FC4  501E               	movf	verifica_diferenca_graus@point_index_lat^0,w,c
  4974  002FC6  B4D8               	btfsc	status,2,c
  4975                           
  4976                           ;fence.c: 100: {;fence.c: 101: point_index_lat++;
  4977  002FC8  2A1E               	incf	verifica_diferenca_graus@point_index_lat^0,f,c
  4978  002FCA                     l8456:
  4979                           
  4980                           ;fence.c: 102: };fence.c: 105: for(j= 0; i < 5; j++)
  4981  002FCA  0E00               	movlw	0
  4982  002FCC  6E20               	movwf	verifica_diferenca_graus@j^0,c
  4983  002FCE                     l8458:
  4984  002FCE  0E04               	movlw	4
  4985  002FD0  6422               	cpfsgt	verifica_diferenca_graus@i^0,c
  4986  002FD2  D001               	goto	l8462
  4987  002FD4  D044               	goto	l8472
  4988  002FD6                     l8462:
  4989                           
  4990                           ;fence.c: 106: {;fence.c: 107: poligono_ext[point_index_lat].point_lat_deg[j] = temp_buf
      +                          f_lat[i];
  4991  002FD6  0E92               	movlw	low _temp_buff_lat
  4992  002FD8  2422               	addwf	verifica_diferenca_graus@i^0,w,c
  4993  002FDA  6ED9               	movwf	fsr2l,c
  4994  002FDC  6ADA               	clrf	fsr2h,c
  4995  002FDE  0E02               	movlw	high _temp_buff_lat
  4996  002FE0  22DA               	addwfc	fsr2h,f,c
  4997  002FE2  501E               	movf	verifica_diferenca_graus@point_index_lat^0,w,c
  4998  002FE4  0D3E               	mullw	62
  4999  002FE6  0E24               	movlw	low _poligono_ext
  5000  002FE8  6E19               	movwf	??_verifica_diferenca_graus^0,c
  5001  002FEA  0E01               	movlw	high _poligono_ext
  5002  002FEC  6E1A               	movwf	(??_verifica_diferenca_graus+1)^0,c
  5003  002FEE  0E0B               	movlw	11
  5004  002FF0  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5005  002FF2  0E00               	movlw	0
  5006  002FF4  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5007  002FF6  50F3               	movf	243,w,c
  5008  002FF8  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5009  002FFA  50F4               	movf	244,w,c
  5010  002FFC  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5011  002FFE  5020               	movf	verifica_diferenca_graus@j^0,w,c
  5012  003000  2419               	addwf	??_verifica_diferenca_graus^0,w,c
  5013  003002  6EE1               	movwf	fsr1l,c
  5014  003004  0E00               	movlw	0
  5015  003006  201A               	addwfc	(??_verifica_diferenca_graus+1)^0,w,c
  5016  003008  6EE2               	movwf	fsr1h,c
  5017  00300A  CFDF FFE7          	movff	indf2,indf1
  5018                           
  5019                           ;fence.c: 108: poligono_ext[point_index_lat].fence_lat_deg[j] = fence_diff_lat[point][i]
      +                          ;
  5020  00300E  5021               	movf	verifica_diferenca_graus@point^0,w,c
  5021  003010  0D0B               	mullw	11
  5022  003012  0E93               	movlw	low _fence_diff_lat
  5023  003014  6E19               	movwf	??_verifica_diferenca_graus^0,c
  5024  003016  0E60               	movlw	high _fence_diff_lat
  5025  003018  6E1A               	movwf	(??_verifica_diferenca_graus+1)^0,c
  5026  00301A  50F3               	movf	243,w,c
  5027  00301C  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5028  00301E  50F4               	movf	244,w,c
  5029  003020  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5030  003022  5022               	movf	verifica_diferenca_graus@i^0,w,c
  5031  003024  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5032  003026  0E00               	movlw	0
  5033  003028  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5034  00302A  C019  FFF6         	movff	??_verifica_diferenca_graus,tblptrl
  5035  00302E  C01A  FFF7         	movff	??_verifica_diferenca_graus+1,tblptrh
  5036  003032                     	if	0	;tblptru may be non-zero
  5037  003032                     	endif
  5038  003032                     	if	0	;tblptru may be non-zero
  5039  003032                     	endif
  5040  003032  501E               	movf	verifica_diferenca_graus@point_index_lat^0,w,c
  5041  003034  0D3E               	mullw	62
  5042  003036  0E24               	movlw	low _poligono_ext
  5043  003038  6E1B               	movwf	(??_verifica_diferenca_graus+2)^0,c
  5044  00303A  0E01               	movlw	high _poligono_ext
  5045  00303C  6E1C               	movwf	(??_verifica_diferenca_graus+3)^0,c
  5046  00303E  50F3               	movf	243,w,c
  5047  003040  261B               	addwf	(??_verifica_diferenca_graus+2)^0,f,c
  5048  003042  50F4               	movf	244,w,c
  5049  003044  221C               	addwfc	(??_verifica_diferenca_graus+3)^0,f,c
  5050  003046  5020               	movf	verifica_diferenca_graus@j^0,w,c
  5051  003048  241B               	addwf	(??_verifica_diferenca_graus+2)^0,w,c
  5052  00304A  6ED9               	movwf	fsr2l,c
  5053  00304C  0E00               	movlw	0
  5054  00304E  201C               	addwfc	(??_verifica_diferenca_graus+3)^0,w,c
  5055  003050  6EDA               	movwf	fsr2h,c
  5056  003052  0008               	tblrd		*
  5057  003054  CFF5 FFDF          	movff	tablat,indf2
  5058                           
  5059                           ;fence.c: 109: i++;
  5060  003058  2A22               	incf	verifica_diferenca_graus@i^0,f,c
  5061  00305A  2A20               	incf	verifica_diferenca_graus@j^0,f,c
  5062  00305C  D7B8               	goto	l8458
  5063  00305E                     l8472:
  5064  00305E  2A22               	incf	verifica_diferenca_graus@i^0,f,c
  5065  003060  0E04               	movlw	4
  5066  003062  6422               	cpfsgt	verifica_diferenca_graus@i^0,c
  5067  003064  D7A4               	goto	l8446
  5068  003066                     u9330:
  5069                           
  5070                           ;fence.c: 116: };fence.c: 117: };fence.c: 118: point++;
  5071  003066  2A21               	incf	verifica_diferenca_graus@point^0,f,c
  5072  003068                     l8478:
  5073  003068  0E03               	movlw	3
  5074  00306A  6421               	cpfsgt	verifica_diferenca_graus@point^0,c
  5075  00306C  D79E               	goto	l8440
  5076  00306E  0012               	return	
  5077  003070                     l8480:
  5078                           
  5079                           ;fence.c: 124: {;fence.c: 125: for(i=1; i<6; i++)
  5080  003070  0E01               	movlw	1
  5081  003072  6E22               	movwf	verifica_diferenca_graus@i^0,c
  5082  003074                     l8486:
  5083                           
  5084                           ;fence.c: 126: {;fence.c: 127: if(point == 0 || point == 2)
  5085  003074  5021               	movf	verifica_diferenca_graus@point^0,w,c
  5086  003076  B4D8               	btfsc	status,2,c
  5087  003078  D004               	goto	u9360
  5088  00307A  0E02               	movlw	2
  5089  00307C  1821               	xorwf	verifica_diferenca_graus@point^0,w,c
  5090  00307E  A4D8               	btfss	status,2,c
  5091  003080  D059               	goto	u9400
  5092  003082                     u9360:
  5093                           
  5094                           ;fence.c: 128: {;fence.c: 129: if(point == 2 && !point_index_long)
  5095  003082  0E02               	movlw	2
  5096  003084  1821               	xorwf	verifica_diferenca_graus@point^0,w,c
  5097  003086  A4D8               	btfss	status,2,c
  5098  003088  D003               	goto	l8496
  5099  00308A  501F               	movf	verifica_diferenca_graus@point_index_long^0,w,c
  5100  00308C  B4D8               	btfsc	status,2,c
  5101                           
  5102                           ;fence.c: 130: {;fence.c: 131: point_index_long++;
  5103  00308E  2A1F               	incf	verifica_diferenca_graus@point_index_long^0,f,c
  5104  003090                     l8496:
  5105                           
  5106                           ;fence.c: 132: };fence.c: 133: for(j= 0; i < 6; j++)
  5107  003090  0E00               	movlw	0
  5108  003092  6E20               	movwf	verifica_diferenca_graus@j^0,c
  5109  003094                     l8498:
  5110  003094  0E05               	movlw	5
  5111  003096  6422               	cpfsgt	verifica_diferenca_graus@i^0,c
  5112  003098  D001               	goto	l8502
  5113  00309A  D048               	goto	l8512
  5114  00309C                     l8502:
  5115                           
  5116                           ;fence.c: 134: {;fence.c: 135: poligono_ext[point_index_long].point_long_deg[j] = temp_b
      +                          uff_long[i];
  5117  00309C  0E86               	movlw	low _temp_buff_long
  5118  00309E  2422               	addwf	verifica_diferenca_graus@i^0,w,c
  5119  0030A0  6ED9               	movwf	fsr2l,c
  5120  0030A2  6ADA               	clrf	fsr2h,c
  5121  0030A4  0E02               	movlw	high _temp_buff_long
  5122  0030A6  22DA               	addwfc	fsr2h,f,c
  5123  0030A8  501F               	movf	verifica_diferenca_graus@point_index_long^0,w,c
  5124  0030AA  0D3E               	mullw	62
  5125  0030AC  0E24               	movlw	low _poligono_ext
  5126  0030AE  6E19               	movwf	??_verifica_diferenca_graus^0,c
  5127  0030B0  0E01               	movlw	high _poligono_ext
  5128  0030B2  6E1A               	movwf	(??_verifica_diferenca_graus+1)^0,c
  5129  0030B4  0E10               	movlw	16
  5130  0030B6  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5131  0030B8  0E00               	movlw	0
  5132  0030BA  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5133  0030BC  50F3               	movf	243,w,c
  5134  0030BE  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5135  0030C0  50F4               	movf	244,w,c
  5136  0030C2  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5137  0030C4  5020               	movf	verifica_diferenca_graus@j^0,w,c
  5138  0030C6  2419               	addwf	??_verifica_diferenca_graus^0,w,c
  5139  0030C8  6EE1               	movwf	fsr1l,c
  5140  0030CA  0E00               	movlw	0
  5141  0030CC  201A               	addwfc	(??_verifica_diferenca_graus+1)^0,w,c
  5142  0030CE  6EE2               	movwf	fsr1h,c
  5143  0030D0  CFDF FFE7          	movff	indf2,indf1
  5144                           
  5145                           ;fence.c: 136: poligono_ext[point_index_long].fence_long_deg[j] = fence_diff_long[point]
      +                          [i];
  5146  0030D4  5021               	movf	verifica_diferenca_graus@point^0,w,c
  5147  0030D6  0D0C               	mullw	12
  5148  0030D8  0E63               	movlw	low _fence_diff_long
  5149  0030DA  6E19               	movwf	??_verifica_diferenca_graus^0,c
  5150  0030DC  0E60               	movlw	high _fence_diff_long
  5151  0030DE  6E1A               	movwf	(??_verifica_diferenca_graus+1)^0,c
  5152  0030E0  50F3               	movf	243,w,c
  5153  0030E2  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5154  0030E4  50F4               	movf	244,w,c
  5155  0030E6  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5156  0030E8  5022               	movf	verifica_diferenca_graus@i^0,w,c
  5157  0030EA  2619               	addwf	??_verifica_diferenca_graus^0,f,c
  5158  0030EC  0E00               	movlw	0
  5159  0030EE  221A               	addwfc	(??_verifica_diferenca_graus+1)^0,f,c
  5160  0030F0  C019  FFF6         	movff	??_verifica_diferenca_graus,tblptrl
  5161  0030F4  C01A  FFF7         	movff	??_verifica_diferenca_graus+1,tblptrh
  5162  0030F8                     	if	0	;tblptru may be non-zero
  5163  0030F8                     	endif
  5164  0030F8                     	if	0	;tblptru may be non-zero
  5165  0030F8                     	endif
  5166  0030F8  501F               	movf	verifica_diferenca_graus@point_index_long^0,w,c
  5167  0030FA  0D3E               	mullw	62
  5168  0030FC  0E24               	movlw	low _poligono_ext
  5169  0030FE  6E1B               	movwf	(??_verifica_diferenca_graus+2)^0,c
  5170  003100  0E01               	movlw	high _poligono_ext
  5171  003102  6E1C               	movwf	(??_verifica_diferenca_graus+3)^0,c
  5172  003104  0E05               	movlw	5
  5173  003106  261B               	addwf	(??_verifica_diferenca_graus+2)^0,f,c
  5174  003108  0E00               	movlw	0
  5175  00310A  221C               	addwfc	(??_verifica_diferenca_graus+3)^0,f,c
  5176  00310C  50F3               	movf	243,w,c
  5177  00310E  261B               	addwf	(??_verifica_diferenca_graus+2)^0,f,c
  5178  003110  50F4               	movf	244,w,c
  5179  003112  221C               	addwfc	(??_verifica_diferenca_graus+3)^0,f,c
  5180  003114  5020               	movf	verifica_diferenca_graus@j^0,w,c
  5181  003116  241B               	addwf	(??_verifica_diferenca_graus+2)^0,w,c
  5182  003118  6ED9               	movwf	fsr2l,c
  5183  00311A  0E00               	movlw	0
  5184  00311C  201C               	addwfc	(??_verifica_diferenca_graus+3)^0,w,c
  5185  00311E  6EDA               	movwf	fsr2h,c
  5186  003120  0008               	tblrd		*
  5187  003122  CFF5 FFDF          	movff	tablat,indf2
  5188                           
  5189                           ;fence.c: 138: i++;
  5190  003126  2A22               	incf	verifica_diferenca_graus@i^0,f,c
  5191  003128  2A20               	incf	verifica_diferenca_graus@j^0,f,c
  5192  00312A  D7B4               	goto	l8498
  5193  00312C                     l8512:
  5194  00312C  2A22               	incf	verifica_diferenca_graus@i^0,f,c
  5195  00312E  0E05               	movlw	5
  5196  003130  6422               	cpfsgt	verifica_diferenca_graus@i^0,c
  5197  003132  D7A0               	goto	l8486
  5198  003134                     u9400:
  5199                           
  5200                           ;fence.c: 145: };fence.c: 147: };fence.c: 149: point++;
  5201  003134  2A21               	incf	verifica_diferenca_graus@point^0,f,c
  5202  003136                     l8518:
  5203  003136  0E03               	movlw	3
  5204  003138  6421               	cpfsgt	verifica_diferenca_graus@point^0,c
  5205  00313A  D79A               	goto	l8480
  5206  00313C  0012               	return	
  5207  00313E                     l8522:
  5208  00313E  501D               	movf	verifica_diferenca_graus@select_data^0,w,c
  5209                           
  5210                           ; Switch size 1, requested type "simple"
  5211                           ; Number of cases is 2, Range of values is 0 to 1
  5212                           ; switch strategies available:
  5213                           ; Name         Instructions Cycles
  5214                           ; simple_byte            7     4 (average)
  5215                           ;	Chosen strategy is simple_byte
  5216  003140  0A00               	xorlw	0	; case 0
  5217  003142  B4D8               	btfsc	status,2,c
  5218  003144  D7F8               	goto	l8518
  5219  003146  0A01               	xorlw	1	; case 1
  5220  003148  A4D8               	btfss	status,2,c
  5221  00314A  0012               	return	
  5222  00314C  D78D               	goto	l8478
  5223  00314E                     __end_of_verifica_diferenca_graus:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function _calcula_diff_minutos *****************
  5227 ;; Defined at:
  5228 ;;		line 287 in file "bibliotecas/fence.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  count           1   44[COMRAM] unsigned char 
  5233 ;;  point           1   43[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 3F/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0
  5244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5245 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5246 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5247 ;;Total ram usage:        8 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    5
  5250 ;; This function calls:
  5251 ;;		_atoi
  5252 ;; This function is called by:
  5253 ;;		_verifica_fence_externo
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text20
  5258  003E40                     __ptext20:
  5259                           	callstack 0
  5260  003E40                     _calcula_diff_minutos:
  5261                           	callstack 23
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;fence.c: 289: unsigned char point, count;;fence.c: 292: while(point<4)
  5265                           
  5266                           ;incstack = 0
  5267  003E40  D06F               	goto	l11720
  5268  003E42                     l11710:
  5269                           
  5270                           ;fence.c: 293: {;fence.c: 294: if(point == 0 || point == 2)
  5271  003E42  502C               	movf	calcula_diff_minutos@point^0,w,c
  5272  003E44  B4D8               	btfsc	status,2,c
  5273  003E46  D004               	goto	u14440
  5274  003E48  0E02               	movlw	2
  5275  003E4A  182C               	xorwf	calcula_diff_minutos@point^0,w,c
  5276  003E4C  A4D8               	btfss	status,2,c
  5277  003E4E  D067               	goto	l11718
  5278  003E50                     u14440:
  5279                           
  5280                           ;fence.c: 295: {;fence.c: 296: poligono_ext[count].diff_lat_min = (atoi(poligono_ext[cou
      +                          nt].fence_lat_min)) - (atoi(poligono_ext[count].point_lat_min));
  5281  003E50  502D               	movf	calcula_diff_minutos@count^0,w,c
  5282  003E52  0D3E               	mullw	62
  5283  003E54  0E42               	movlw	low (_poligono_ext+30)
  5284  003E56  24F3               	addwf	243,w,c
  5285  003E58  6E1F               	movwf	atoi@s^0,c
  5286  003E5A  0E01               	movlw	high (_poligono_ext+30)
  5287  003E5C  20F4               	addwfc	prodh,w,c
  5288  003E5E  6E20               	movwf	(atoi@s+1)^0,c
  5289  003E60  EC94  F01F         	call	_atoi	;wreg free
  5290  003E64  C01F  F026         	movff	?_atoi,??_calcula_diff_minutos
  5291  003E68  C020  F027         	movff	?_atoi+1,??_calcula_diff_minutos+1
  5292  003E6C  502D               	movf	calcula_diff_minutos@count^0,w,c
  5293  003E6E  0D3E               	mullw	62
  5294  003E70  0E4E               	movlw	low (_poligono_ext+42)
  5295  003E72  24F3               	addwf	243,w,c
  5296  003E74  6E1F               	movwf	atoi@s^0,c
  5297  003E76  0E01               	movlw	high (_poligono_ext+42)
  5298  003E78  20F4               	addwfc	prodh,w,c
  5299  003E7A  6E20               	movwf	(atoi@s+1)^0,c
  5300  003E7C  EC94  F01F         	call	_atoi	;wreg free
  5301  003E80  501F               	movf	?_atoi^0,w,c
  5302  003E82  5C26               	subwf	??_calcula_diff_minutos^0,w,c
  5303  003E84  6E28               	movwf	(??_calcula_diff_minutos+2)^0,c
  5304  003E86  5020               	movf	(?_atoi+1)^0,w,c
  5305  003E88  5827               	subwfb	(??_calcula_diff_minutos+1)^0,w,c
  5306  003E8A  6E29               	movwf	(??_calcula_diff_minutos+3)^0,c
  5307  003E8C  6A2A               	clrf	(??_calcula_diff_minutos+4)^0,c
  5308  003E8E  BE29               	btfsc	(??_calcula_diff_minutos+3)^0,7,c
  5309  003E90  062A               	decf	(??_calcula_diff_minutos+4)^0,f,c
  5310  003E92  502A               	movf	(??_calcula_diff_minutos+4)^0,w,c
  5311  003E94  6E2B               	movwf	(??_calcula_diff_minutos+5)^0,c
  5312  003E96  502D               	movf	calcula_diff_minutos@count^0,w,c
  5313  003E98  0D3E               	mullw	62
  5314  003E9A  0E5A               	movlw	low (_poligono_ext+54)
  5315  003E9C  24F3               	addwf	243,w,c
  5316  003E9E  6ED9               	movwf	fsr2l,c
  5317  003EA0  0E01               	movlw	high (_poligono_ext+54)
  5318  003EA2  20F4               	addwfc	prodh,w,c
  5319  003EA4  6EDA               	movwf	fsr2h,c
  5320  003EA6  C028  FFDE         	movff	??_calcula_diff_minutos+2,postinc2
  5321  003EAA  C029  FFDE         	movff	??_calcula_diff_minutos+3,postinc2
  5322  003EAE  C02A  FFDE         	movff	??_calcula_diff_minutos+4,postinc2
  5323  003EB2  C02B  FFDE         	movff	??_calcula_diff_minutos+5,postinc2
  5324                           
  5325                           ;fence.c: 297: poligono_ext[count].diff_long_min = (atoi(poligono_ext[count].fence_long_
      +                          min)) - (atoi(poligono_ext[count].point_long_min));
  5326  003EB6  502D               	movf	calcula_diff_minutos@count^0,w,c
  5327  003EB8  0D3E               	mullw	62
  5328  003EBA  0E48               	movlw	low (_poligono_ext+36)
  5329  003EBC  24F3               	addwf	243,w,c
  5330  003EBE  6E1F               	movwf	atoi@s^0,c
  5331  003EC0  0E01               	movlw	high (_poligono_ext+36)
  5332  003EC2  20F4               	addwfc	prodh,w,c
  5333  003EC4  6E20               	movwf	(atoi@s+1)^0,c
  5334  003EC6  EC94  F01F         	call	_atoi	;wreg free
  5335  003ECA  C01F  F026         	movff	?_atoi,??_calcula_diff_minutos
  5336  003ECE  C020  F027         	movff	?_atoi+1,??_calcula_diff_minutos+1
  5337  003ED2  502D               	movf	calcula_diff_minutos@count^0,w,c
  5338  003ED4  0D3E               	mullw	62
  5339  003ED6  0E54               	movlw	low (_poligono_ext+48)
  5340  003ED8  24F3               	addwf	243,w,c
  5341  003EDA  6E1F               	movwf	atoi@s^0,c
  5342  003EDC  0E01               	movlw	high (_poligono_ext+48)
  5343  003EDE  20F4               	addwfc	prodh,w,c
  5344  003EE0  6E20               	movwf	(atoi@s+1)^0,c
  5345  003EE2  EC94  F01F         	call	_atoi	;wreg free
  5346  003EE6  501F               	movf	?_atoi^0,w,c
  5347  003EE8  5C26               	subwf	??_calcula_diff_minutos^0,w,c
  5348  003EEA  6E28               	movwf	(??_calcula_diff_minutos+2)^0,c
  5349  003EEC  5020               	movf	(?_atoi+1)^0,w,c
  5350  003EEE  5827               	subwfb	(??_calcula_diff_minutos+1)^0,w,c
  5351  003EF0  6E29               	movwf	(??_calcula_diff_minutos+3)^0,c
  5352  003EF2  6A2A               	clrf	(??_calcula_diff_minutos+4)^0,c
  5353  003EF4  BE29               	btfsc	(??_calcula_diff_minutos+3)^0,7,c
  5354  003EF6  062A               	decf	(??_calcula_diff_minutos+4)^0,f,c
  5355  003EF8  502A               	movf	(??_calcula_diff_minutos+4)^0,w,c
  5356  003EFA  6E2B               	movwf	(??_calcula_diff_minutos+5)^0,c
  5357  003EFC  502D               	movf	calcula_diff_minutos@count^0,w,c
  5358  003EFE  0D3E               	mullw	62
  5359  003F00  0E5E               	movlw	low (_poligono_ext+58)
  5360  003F02  24F3               	addwf	243,w,c
  5361  003F04  6ED9               	movwf	fsr2l,c
  5362  003F06  0E01               	movlw	high (_poligono_ext+58)
  5363  003F08  20F4               	addwfc	prodh,w,c
  5364  003F0A  6EDA               	movwf	fsr2h,c
  5365  003F0C  C028  FFDE         	movff	??_calcula_diff_minutos+2,postinc2
  5366  003F10  C029  FFDE         	movff	??_calcula_diff_minutos+3,postinc2
  5367  003F14  C02A  FFDE         	movff	??_calcula_diff_minutos+4,postinc2
  5368  003F18  C02B  FFDE         	movff	??_calcula_diff_minutos+5,postinc2
  5369                           
  5370                           ;fence.c: 298: count++;
  5371  003F1C  2A2D               	incf	calcula_diff_minutos@count^0,f,c
  5372  003F1E                     l11718:
  5373                           
  5374                           ;fence.c: 299: };fence.c: 300: point++;
  5375  003F1E  2A2C               	incf	calcula_diff_minutos@point^0,f,c
  5376  003F20                     l11720:
  5377  003F20  0E03               	movlw	3
  5378  003F22  642C               	cpfsgt	calcula_diff_minutos@point^0,c
  5379  003F24  D78E               	goto	l11710
  5380  003F26  0012               	return	
  5381  003F28                     __end_of_calcula_diff_minutos:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _calcula_diff_graus *****************
  5385 ;; Defined at:
  5386 ;;		line 166 in file "bibliotecas/fence.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  temp_var_deg    4    0[BANK0 ] unsigned long 
  5391 ;;  count           1    5[BANK0 ] unsigned char 
  5392 ;;  point           1    4[BANK0 ] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 3F/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0
  5403 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5404 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5405 ;;      Totals:         8       6       0       0       0       0       0       0       0
  5406 ;;Total ram usage:       14 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    5
  5409 ;; This function calls:
  5410 ;;		_atoi
  5411 ;; This function is called by:
  5412 ;;		_verifica_fence_externo
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text21
  5417  002C2E                     __ptext21:
  5418                           	callstack 0
  5419  002C2E                     _calcula_diff_graus:
  5420                           	callstack 23
  5421                           
  5422                           ;fence.c: 168: unsigned char point, count;;fence.c: 169: unsigned long int temp_var_deg;
      +                          ;fence.c: 171: point = 0;
  5423                           
  5424                           ;incstack = 0
  5425  002C2E  0E00               	movlw	0
  5426  002C30  0100               	movlb	0	; () banked
  5427  002C32  6F64               	movwf	calcula_diff_graus@point& (0+255),b
  5428                           
  5429                           ;fence.c: 172: count = 0;
  5430  002C34  0E00               	movlw	0
  5431  002C36  6F65               	movwf	calcula_diff_graus@count& (0+255),b
  5432                           
  5433                           ;fence.c: 174: while(point<4)
  5434  002C38  D0D1               	goto	l11706
  5435  002C3A                     l11688:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;fence.c: 175: {;fence.c: 176: if(point == 0 || point == 2)
  5439  002C3A  5164               	movf	calcula_diff_graus@point& (0+255),w,b
  5440  002C3C  B4D8               	btfsc	status,2,c
  5441  002C3E  D004               	goto	u14410
  5442                           
  5443                           ; BSR set to: 0
  5444  002C40  0E02               	movlw	2
  5445  002C42  1964               	xorwf	calcula_diff_graus@point& (0+255),w,b
  5446  002C44  A4D8               	btfss	status,2,c
  5447  002C46  D0C9               	goto	l11704
  5448  002C48                     u14410:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;fence.c: 177: {;fence.c: 178: temp_var_deg = atoi(poligono_ext[count].point_lat_deg);
  5452  002C48  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5453  002C4A  0D3E               	mullw	62
  5454  002C4C  0E2F               	movlw	low (_poligono_ext+11)
  5455  002C4E  24F3               	addwf	243,w,c
  5456  002C50  6E1F               	movwf	atoi@s^0,c
  5457  002C52  0E01               	movlw	high (_poligono_ext+11)
  5458  002C54  20F4               	addwfc	prodh,w,c
  5459  002C56  6E20               	movwf	(atoi@s+1)^0,c
  5460  002C58  EC94  F01F         	call	_atoi	;wreg free
  5461  002C5C  C01F  F060         	movff	?_atoi,calcula_diff_graus@temp_var_deg
  5462  002C60  C020  F061         	movff	?_atoi+1,calcula_diff_graus@temp_var_deg+1
  5463  002C64  0100               	movlb	0	; () banked
  5464  002C66  0E00               	movlw	0
  5465  002C68  BF61               	btfsc	(calcula_diff_graus@temp_var_deg+1)& (0+255),7,b
  5466  002C6A  0EFF               	movlw	-1
  5467  002C6C  6F62               	movwf	(calcula_diff_graus@temp_var_deg+2)& (0+255),b
  5468  002C6E  6F63               	movwf	(calcula_diff_graus@temp_var_deg+3)& (0+255),b
  5469                           
  5470                           ;fence.c: 179: poligono_ext[count].diff_lat_deg = atoi(poligono_ext[count].fence_lat_deg
      +                          );
  5471  002C70  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5472  002C72  0D3E               	mullw	62
  5473  002C74  0E24               	movlw	low _poligono_ext
  5474  002C76  24F3               	addwf	243,w,c
  5475  002C78  6E1F               	movwf	atoi@s^0,c
  5476  002C7A  0E01               	movlw	high _poligono_ext
  5477  002C7C  20F4               	addwfc	prodh,w,c
  5478  002C7E  6E20               	movwf	(atoi@s+1)^0,c
  5479  002C80  EC94  F01F         	call	_atoi	;wreg free
  5480  002C84  C01F  F026         	movff	?_atoi,??_calcula_diff_graus
  5481  002C88  C020  F027         	movff	?_atoi+1,??_calcula_diff_graus+1
  5482  002C8C  0E00               	movlw	0
  5483  002C8E  BE27               	btfsc	(??_calcula_diff_graus+1)^0,7,c
  5484  002C90  0EFF               	movlw	255
  5485  002C92  6E28               	movwf	(??_calcula_diff_graus+2)^0,c
  5486  002C94  6E29               	movwf	(??_calcula_diff_graus+3)^0,c
  5487  002C96  0100               	movlb	0	; () banked
  5488  002C98  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5489  002C9A  0D3E               	mullw	62
  5490  002C9C  0E3A               	movlw	low (_poligono_ext+22)
  5491  002C9E  24F3               	addwf	243,w,c
  5492  002CA0  6ED9               	movwf	fsr2l,c
  5493  002CA2  0E01               	movlw	high (_poligono_ext+22)
  5494  002CA4  20F4               	addwfc	prodh,w,c
  5495  002CA6  6EDA               	movwf	fsr2h,c
  5496  002CA8  C026  FFDE         	movff	??_calcula_diff_graus,postinc2
  5497  002CAC  C027  FFDE         	movff	??_calcula_diff_graus+1,postinc2
  5498  002CB0  C028  FFDE         	movff	??_calcula_diff_graus+2,postinc2
  5499  002CB4  C029  FFDE         	movff	??_calcula_diff_graus+3,postinc2
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;fence.c: 180: poligono_ext[count].diff_lat_deg = poligono_ext[count].diff_long_deg - te
      +                          mp_var_deg;
  5503  002CB8  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5504  002CBA  0D3E               	mullw	62
  5505  002CBC  0E3E               	movlw	low (_poligono_ext+26)
  5506  002CBE  24F3               	addwf	243,w,c
  5507  002CC0  6ED9               	movwf	fsr2l,c
  5508  002CC2  0E01               	movlw	high (_poligono_ext+26)
  5509  002CC4  20F4               	addwfc	prodh,w,c
  5510  002CC6  6EDA               	movwf	fsr2h,c
  5511  002CC8  CFDE F026          	movff	postinc2,??_calcula_diff_graus
  5512  002CCC  CFDE F027          	movff	postinc2,??_calcula_diff_graus+1
  5513  002CD0  CFDE F028          	movff	postinc2,??_calcula_diff_graus+2
  5514  002CD4  CFDE F029          	movff	postinc2,??_calcula_diff_graus+3
  5515  002CD8  5160               	movf	calcula_diff_graus@temp_var_deg& (0+255),w,b
  5516  002CDA  5C26               	subwf	??_calcula_diff_graus^0,w,c
  5517  002CDC  6E2A               	movwf	(??_calcula_diff_graus+4)^0,c
  5518  002CDE  5161               	movf	(calcula_diff_graus@temp_var_deg+1)& (0+255),w,b
  5519  002CE0  5827               	subwfb	(??_calcula_diff_graus+1)^0,w,c
  5520  002CE2  6E2B               	movwf	(??_calcula_diff_graus+5)^0,c
  5521  002CE4  5162               	movf	(calcula_diff_graus@temp_var_deg+2)& (0+255),w,b
  5522  002CE6  5828               	subwfb	(??_calcula_diff_graus+2)^0,w,c
  5523  002CE8  6E2C               	movwf	(??_calcula_diff_graus+6)^0,c
  5524  002CEA  5163               	movf	(calcula_diff_graus@temp_var_deg+3)& (0+255),w,b
  5525  002CEC  5829               	subwfb	(??_calcula_diff_graus+3)^0,w,c
  5526  002CEE  6E2D               	movwf	(??_calcula_diff_graus+7)^0,c
  5527  002CF0  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5528  002CF2  0D3E               	mullw	62
  5529  002CF4  0E3A               	movlw	low (_poligono_ext+22)
  5530  002CF6  24F3               	addwf	243,w,c
  5531  002CF8  6ED9               	movwf	fsr2l,c
  5532  002CFA  0E01               	movlw	high (_poligono_ext+22)
  5533  002CFC  20F4               	addwfc	prodh,w,c
  5534  002CFE  6EDA               	movwf	fsr2h,c
  5535  002D00  C02A  FFDE         	movff	??_calcula_diff_graus+4,postinc2
  5536  002D04  C02B  FFDE         	movff	??_calcula_diff_graus+5,postinc2
  5537  002D08  C02C  FFDE         	movff	??_calcula_diff_graus+6,postinc2
  5538  002D0C  C02D  FFDE         	movff	??_calcula_diff_graus+7,postinc2
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;fence.c: 182: temp_var_deg = atoi(poligono_ext[count].point_long_deg);
  5542  002D10  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5543  002D12  0D3E               	mullw	62
  5544  002D14  0E34               	movlw	low (_poligono_ext+16)
  5545  002D16  24F3               	addwf	243,w,c
  5546  002D18  6E1F               	movwf	atoi@s^0,c
  5547  002D1A  0E01               	movlw	high (_poligono_ext+16)
  5548  002D1C  20F4               	addwfc	prodh,w,c
  5549  002D1E  6E20               	movwf	(atoi@s+1)^0,c
  5550  002D20  EC94  F01F         	call	_atoi	;wreg free
  5551  002D24  C01F  F060         	movff	?_atoi,calcula_diff_graus@temp_var_deg
  5552  002D28  C020  F061         	movff	?_atoi+1,calcula_diff_graus@temp_var_deg+1
  5553  002D2C  0100               	movlb	0	; () banked
  5554  002D2E  0E00               	movlw	0
  5555  002D30  BF61               	btfsc	(calcula_diff_graus@temp_var_deg+1)& (0+255),7,b
  5556  002D32  0EFF               	movlw	-1
  5557  002D34  6F62               	movwf	(calcula_diff_graus@temp_var_deg+2)& (0+255),b
  5558  002D36  6F63               	movwf	(calcula_diff_graus@temp_var_deg+3)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;fence.c: 183: poligono_ext[count].diff_long_deg = atoi(poligono_ext[count].fence_long_d
      +                          eg);
  5562  002D38  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5563  002D3A  0D3E               	mullw	62
  5564  002D3C  0E29               	movlw	low (_poligono_ext+5)
  5565  002D3E  24F3               	addwf	243,w,c
  5566  002D40  6E1F               	movwf	atoi@s^0,c
  5567  002D42  0E01               	movlw	high (_poligono_ext+5)
  5568  002D44  20F4               	addwfc	prodh,w,c
  5569  002D46  6E20               	movwf	(atoi@s+1)^0,c
  5570  002D48  EC94  F01F         	call	_atoi	;wreg free
  5571  002D4C  C01F  F026         	movff	?_atoi,??_calcula_diff_graus
  5572  002D50  C020  F027         	movff	?_atoi+1,??_calcula_diff_graus+1
  5573  002D54  0E00               	movlw	0
  5574  002D56  BE27               	btfsc	(??_calcula_diff_graus+1)^0,7,c
  5575  002D58  0EFF               	movlw	255
  5576  002D5A  6E28               	movwf	(??_calcula_diff_graus+2)^0,c
  5577  002D5C  6E29               	movwf	(??_calcula_diff_graus+3)^0,c
  5578  002D5E  0100               	movlb	0	; () banked
  5579  002D60  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5580  002D62  0D3E               	mullw	62
  5581  002D64  0E3E               	movlw	low (_poligono_ext+26)
  5582  002D66  24F3               	addwf	243,w,c
  5583  002D68  6ED9               	movwf	fsr2l,c
  5584  002D6A  0E01               	movlw	high (_poligono_ext+26)
  5585  002D6C  20F4               	addwfc	prodh,w,c
  5586  002D6E  6EDA               	movwf	fsr2h,c
  5587  002D70  C026  FFDE         	movff	??_calcula_diff_graus,postinc2
  5588  002D74  C027  FFDE         	movff	??_calcula_diff_graus+1,postinc2
  5589  002D78  C028  FFDE         	movff	??_calcula_diff_graus+2,postinc2
  5590  002D7C  C029  FFDE         	movff	??_calcula_diff_graus+3,postinc2
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;fence.c: 184: poligono_ext[count].diff_long_deg = poligono_ext[count].diff_long_deg - t
      +                          emp_var_deg;
  5594  002D80  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5595  002D82  0D3E               	mullw	62
  5596  002D84  0E3E               	movlw	low (_poligono_ext+26)
  5597  002D86  24F3               	addwf	243,w,c
  5598  002D88  6ED9               	movwf	fsr2l,c
  5599  002D8A  0E01               	movlw	high (_poligono_ext+26)
  5600  002D8C  20F4               	addwfc	prodh,w,c
  5601  002D8E  6EDA               	movwf	fsr2h,c
  5602  002D90  CFDE F026          	movff	postinc2,??_calcula_diff_graus
  5603  002D94  CFDE F027          	movff	postinc2,??_calcula_diff_graus+1
  5604  002D98  CFDE F028          	movff	postinc2,??_calcula_diff_graus+2
  5605  002D9C  CFDE F029          	movff	postinc2,??_calcula_diff_graus+3
  5606  002DA0  5160               	movf	calcula_diff_graus@temp_var_deg& (0+255),w,b
  5607  002DA2  5C26               	subwf	??_calcula_diff_graus^0,w,c
  5608  002DA4  6E2A               	movwf	(??_calcula_diff_graus+4)^0,c
  5609  002DA6  5161               	movf	(calcula_diff_graus@temp_var_deg+1)& (0+255),w,b
  5610  002DA8  5827               	subwfb	(??_calcula_diff_graus+1)^0,w,c
  5611  002DAA  6E2B               	movwf	(??_calcula_diff_graus+5)^0,c
  5612  002DAC  5162               	movf	(calcula_diff_graus@temp_var_deg+2)& (0+255),w,b
  5613  002DAE  5828               	subwfb	(??_calcula_diff_graus+2)^0,w,c
  5614  002DB0  6E2C               	movwf	(??_calcula_diff_graus+6)^0,c
  5615  002DB2  5163               	movf	(calcula_diff_graus@temp_var_deg+3)& (0+255),w,b
  5616  002DB4  5829               	subwfb	(??_calcula_diff_graus+3)^0,w,c
  5617  002DB6  6E2D               	movwf	(??_calcula_diff_graus+7)^0,c
  5618  002DB8  5165               	movf	calcula_diff_graus@count& (0+255),w,b
  5619  002DBA  0D3E               	mullw	62
  5620  002DBC  0E3E               	movlw	low (_poligono_ext+26)
  5621  002DBE  24F3               	addwf	243,w,c
  5622  002DC0  6ED9               	movwf	fsr2l,c
  5623  002DC2  0E01               	movlw	high (_poligono_ext+26)
  5624  002DC4  20F4               	addwfc	prodh,w,c
  5625  002DC6  6EDA               	movwf	fsr2h,c
  5626  002DC8  C02A  FFDE         	movff	??_calcula_diff_graus+4,postinc2
  5627  002DCC  C02B  FFDE         	movff	??_calcula_diff_graus+5,postinc2
  5628  002DD0  C02C  FFDE         	movff	??_calcula_diff_graus+6,postinc2
  5629  002DD4  C02D  FFDE         	movff	??_calcula_diff_graus+7,postinc2
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;fence.c: 186: count++;
  5633  002DD8  2B65               	incf	calcula_diff_graus@count& (0+255),f,b
  5634  002DDA                     l11704:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;fence.c: 187: };fence.c: 188: point++;
  5638  002DDA  2B64               	incf	calcula_diff_graus@point& (0+255),f,b
  5639  002DDC                     l11706:
  5640                           
  5641                           ; BSR set to: 0
  5642  002DDC  0E03               	movlw	3
  5643  002DDE  6564               	cpfsgt	calcula_diff_graus@point& (0+255),b
  5644  002DE0  D72C               	goto	l11688
  5645  002DE2  0012               	return	
  5646  002DE4                     __end_of_calcula_diff_graus:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function _atoi *****************
  5650 ;; Defined at:
  5651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5654 ;;		 -> poligono_ext.point_long_min(6), poligono_ext.fence_long_min(6), poligono_ext.point_lat_min(6), poligono_ext.fenc
      +e_lat_min(6), 
  5655 ;;		 -> poligono_ext.fence_long_deg(6), poligono_ext.point_long_deg(6), poligono_ext.fence_lat_deg(5), poligono_ext.poin
      +t_lat_deg(5), 
  5656 ;;		 -> poligono_ext(124), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  a               2   35[COMRAM] int 
  5659 ;;  sign            1   34[COMRAM] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  2   30[COMRAM] int 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5669 ;;      Params:         2       0       0       0       0       0       0       0       0
  5670 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5671 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5672 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5673 ;;Total ram usage:        7 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    4
  5676 ;; This function calls:
  5677 ;;		___wmul
  5678 ;;		_isdigit
  5679 ;; This function is called by:
  5680 ;;		_calcula_diff_graus
  5681 ;;		_calcula_diff_minutos
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text22
  5686  003F28                     __ptext22:
  5687                           	callstack 0
  5688  003F28                     _atoi:
  5689                           	callstack 23
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;incstack = 0
  5693  003F28  D002               	goto	l11572
  5694  003F2A                     l11570:
  5695  003F2A  4A1F               	infsnz	atoi@s^0,f,c
  5696  003F2C  2A20               	incf	(atoi@s+1)^0,f,c
  5697  003F2E                     l11572:
  5698  003F2E  C01F  FFD9         	movff	atoi@s,fsr2l
  5699  003F32  C020  FFDA         	movff	atoi@s+1,fsr2h
  5700  003F36  0E20               	movlw	32
  5701  003F38  18DE               	xorwf	postinc2,w,c
  5702  003F3A  B4D8               	btfsc	status,2,c
  5703  003F3C  D7F6               	goto	l11570
  5704  003F3E  C01F  FFD9         	movff	atoi@s,fsr2l
  5705  003F42  C020  FFDA         	movff	atoi@s+1,fsr2h
  5706  003F46  0E09               	movlw	9
  5707  003F48  18DE               	xorwf	postinc2,w,c
  5708  003F4A  B4D8               	btfsc	status,2,c
  5709  003F4C  D7EE               	goto	l11570
  5710  003F4E  0E00               	movlw	0
  5711  003F50  6E25               	movwf	(atoi@a+1)^0,c
  5712  003F52  0E00               	movlw	0
  5713  003F54  6E24               	movwf	atoi@a^0,c
  5714  003F56  0E00               	movlw	0
  5715  003F58  6E23               	movwf	atoi@sign^0,c
  5716  003F5A  C01F  FFD9         	movff	atoi@s,fsr2l
  5717  003F5E  C020  FFDA         	movff	atoi@s+1,fsr2h
  5718  003F62  0E2D               	movlw	45
  5719  003F64  18DE               	xorwf	postinc2,w,c
  5720  003F66  A4D8               	btfss	status,2,c
  5721  003F68  D002               	goto	l11582
  5722  003F6A  2A23               	incf	atoi@sign^0,f,c
  5723  003F6C  D008               	goto	u14230
  5724  003F6E                     l11582:
  5725  003F6E  C01F  FFD9         	movff	atoi@s,fsr2l
  5726  003F72  C020  FFDA         	movff	atoi@s+1,fsr2h
  5727  003F76  0E2B               	movlw	43
  5728  003F78  18DE               	xorwf	postinc2,w,c
  5729  003F7A  A4D8               	btfss	status,2,c
  5730  003F7C  D01E               	goto	l11590
  5731  003F7E                     u14230:
  5732  003F7E  4A1F               	infsnz	atoi@s^0,f,c
  5733  003F80  2A20               	incf	(atoi@s+1)^0,f,c
  5734  003F82  D01B               	goto	l11590
  5735  003F84                     l11586:
  5736  003F84  C024  F019         	movff	atoi@a,___wmul@multiplier
  5737  003F88  C025  F01A         	movff	atoi@a+1,___wmul@multiplier+1
  5738  003F8C  0E00               	movlw	0
  5739  003F8E  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
  5740  003F90  0E0A               	movlw	10
  5741  003F92  6E1B               	movwf	___wmul@multiplicand^0,c
  5742  003F94  ECBE  F029         	call	___wmul	;wreg free
  5743  003F98  C01F  FFD9         	movff	atoi@s,fsr2l
  5744  003F9C  C020  FFDA         	movff	atoi@s+1,fsr2h
  5745  003FA0  50DF               	movf	indf2,w,c
  5746  003FA2  6E21               	movwf	??_atoi^0,c
  5747  003FA4  5021               	movf	??_atoi^0,w,c
  5748  003FA6  2619               	addwf	?___wmul^0,f,c
  5749  003FA8  0E00               	movlw	0
  5750  003FAA  221A               	addwfc	(?___wmul+1)^0,f,c
  5751  003FAC  0ED0               	movlw	208
  5752  003FAE  2419               	addwf	?___wmul^0,w,c
  5753  003FB0  6E24               	movwf	atoi@a^0,c
  5754  003FB2  0EFF               	movlw	255
  5755  003FB4  201A               	addwfc	(?___wmul+1)^0,w,c
  5756  003FB6  6E25               	movwf	(atoi@a+1)^0,c
  5757  003FB8  D7E2               	goto	u14230
  5758  003FBA                     l11590:
  5759  003FBA  C01F  FFD9         	movff	atoi@s,fsr2l
  5760  003FBE  C020  FFDA         	movff	atoi@s+1,fsr2h
  5761  003FC2  50DF               	movf	indf2,w,c
  5762  003FC4  EC8B  F02A         	call	_isdigit
  5763  003FC8  B0D8               	btfsc	status,0,c
  5764  003FCA  D7DC               	goto	l11586
  5765  003FCC  5023               	movf	atoi@sign^0,w,c
  5766  003FCE  B4D8               	btfsc	status,2,c
  5767  003FD0  D00D               	goto	l2282
  5768  003FD2  C024  F021         	movff	atoi@a,??_atoi
  5769  003FD6  C025  F022         	movff	atoi@a+1,??_atoi+1
  5770  003FDA  1E21               	comf	??_atoi^0,f,c
  5771  003FDC  1E22               	comf	(??_atoi+1)^0,f,c
  5772  003FDE  4A21               	infsnz	??_atoi^0,f,c
  5773  003FE0  2A22               	incf	(??_atoi+1)^0,f,c
  5774  003FE2  C021  F01F         	movff	??_atoi,?_atoi
  5775  003FE6  C022  F020         	movff	??_atoi+1,?_atoi+1
  5776  003FEA  0012               	return	
  5777  003FEC                     l2282:
  5778  003FEC  C024  F01F         	movff	atoi@a,?_atoi
  5779  003FF0  C025  F020         	movff	atoi@a+1,?_atoi+1
  5780  003FF4  0012               	return		;funcret
  5781  003FF6                     __end_of_atoi:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _isdigit *****************
  5785 ;; Defined at:
  5786 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  c               1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  c               1   26[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;		None               void
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0
  5801 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5802 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5803 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5804 ;;Total ram usage:        3 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    3
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_atoi
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text23
  5815  005516                     __ptext23:
  5816                           	callstack 0
  5817  005516                     _isdigit:
  5818                           	callstack 23
  5819                           
  5820                           ;incstack = 0
  5821                           ;isdigit@c stored from wreg
  5822  005516  6E1B               	movwf	isdigit@c^0,c
  5823  005518  0E00               	movlw	0
  5824  00551A  6E1A               	movwf	_isdigit$3141^0,c
  5825  00551C  0E3A               	movlw	58
  5826  00551E  601B               	cpfslt	isdigit@c^0,c
  5827  005520  D005               	goto	l11136
  5828  005522  0E2F               	movlw	47
  5829  005524  641B               	cpfsgt	isdigit@c^0,c
  5830  005526  D002               	goto	l11136
  5831  005528  0E01               	movlw	1
  5832  00552A  6E1A               	movwf	_isdigit$3141^0,c
  5833  00552C                     l11136:
  5834  00552C  C01A  F019         	movff	_isdigit$3141,??_isdigit
  5835  005530  3019               	rrcf	??_isdigit^0,w,c
  5836  005532  0012               	return		;funcret
  5837  005534                     __end_of_isdigit:
  5838                           	callstack 0
  5839                           
  5840 ;; *************** function _armazena_longitude *****************
  5841 ;; Defined at:
  5842 ;;		line 56 in file "bibliotecas/fence.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;		None
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;		None
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      void 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5856 ;;      Params:         0       0       0       0       0       0       0       0       0
  5857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5859 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5860 ;;Total ram usage:        2 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    5
  5863 ;; This function calls:
  5864 ;;		_Longitude
  5865 ;;		_strcpy
  5866 ;; This function is called by:
  5867 ;;		_verifica_fence_externo
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text24
  5872  0053C6                     __ptext24:
  5873                           	callstack 0
  5874  0053C6                     _armazena_longitude:
  5875                           	callstack 23
  5876                           
  5877                           ;fence.c: 58: strcpy(temp_buff_long, Longitude());
  5878                           
  5879                           ;incstack = 0
  5880  0053C6  EC9A  F02A         	call	_Longitude	;wreg free
  5881  0053CA  C01F  F021         	movff	?_Longitude,_armazena_longitude$3503
  5882  0053CE  C020  F022         	movff	?_Longitude+1,_armazena_longitude$3503+1
  5883                           
  5884                           ;fence.c: 58: strcpy(temp_buff_long, Longitude());
  5885  0053D2  0E86               	movlw	low _temp_buff_long
  5886  0053D4  6E19               	movwf	strcpy@to^0,c
  5887  0053D6  0E02               	movlw	high _temp_buff_long
  5888  0053D8  6E1A               	movwf	(strcpy@to+1)^0,c
  5889  0053DA  C021  F01B         	movff	_armazena_longitude$3503,strcpy@from
  5890  0053DE  C022  F01C         	movff	_armazena_longitude$3503+1,strcpy@from+1
  5891  0053E2  EC1D  F028         	call	_strcpy	;wreg free
  5892  0053E6  0012               	return		;funcret
  5893  0053E8                     __end_of_armazena_longitude:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _armazena_latitude *****************
  5897 ;; Defined at:
  5898 ;;		line 68 in file "bibliotecas/fence.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 3F/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0
  5913 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5915 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5916 ;;Total ram usage:        2 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    5
  5919 ;; This function calls:
  5920 ;;		_Latitude
  5921 ;;		_strcpy
  5922 ;; This function is called by:
  5923 ;;		_verifica_fence_externo
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text25
  5928  0053E8                     __ptext25:
  5929                           	callstack 0
  5930  0053E8                     _armazena_latitude:
  5931                           	callstack 23
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;fence.c: 70: strcpy(temp_buff_lat, Latitude());
  5935                           
  5936                           ;incstack = 0
  5937  0053E8  ECA9  F02A         	call	_Latitude	;wreg free
  5938  0053EC  C01F  F021         	movff	?_Latitude,_armazena_latitude$3504
  5939  0053F0  C020  F022         	movff	?_Latitude+1,_armazena_latitude$3504+1
  5940                           
  5941                           ;fence.c: 70: strcpy(temp_buff_lat, Latitude());
  5942  0053F4  0E92               	movlw	low _temp_buff_lat
  5943  0053F6  6E19               	movwf	strcpy@to^0,c
  5944  0053F8  0E02               	movlw	high _temp_buff_lat
  5945  0053FA  6E1A               	movwf	(strcpy@to+1)^0,c
  5946  0053FC  C021  F01B         	movff	_armazena_latitude$3504,strcpy@from
  5947  005400  C022  F01C         	movff	_armazena_latitude$3504+1,strcpy@from+1
  5948  005404  EC1D  F028         	call	_strcpy	;wreg free
  5949  005408  0012               	return		;funcret
  5950  00540A                     __end_of_armazena_latitude:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function _escreve_inteiro_lcd *****************
  5954 ;; Defined at:
  5955 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  valor           2   45[COMRAM] int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  texto           7    0[BANK0 ] unsigned char [7]
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5969 ;;      Params:         2       0       0       0       0       0       0       0       0
  5970 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5972 ;;      Totals:         2       7       0       0       0       0       0       0       0
  5973 ;;Total ram usage:        9 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    6
  5976 ;; This function calls:
  5977 ;;		_escreve_frase_ram_lcd
  5978 ;;		_itoa
  5979 ;; This function is called by:
  5980 ;;		_troca_de_tela
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text26
  5985  005206                     __ptext26:
  5986                           	callstack 0
  5987  005206                     _escreve_inteiro_lcd:
  5988                           	callstack 22
  5989                           
  5990                           ;display_lcd.c: 378: char texto[7] = "000000";
  5991                           
  5992                           ;incstack = 0
  5993  005206  EE21  F0F8         	lfsr	2,escreve_inteiro_lcd@F3223
  5994  00520A  EE10  F060         	lfsr	1,escreve_inteiro_lcd@texto
  5995  00520E  0E06               	movlw	6
  5996  005210                     u14371:
  5997  005210  CFDB FFE3          	movff	plusw2,plusw1
  5998  005214  06E8               	decf	wreg,f,c
  5999  005216  E2FC               	bc	u14371
  6000                           
  6001                           ;display_lcd.c: 379: itoa(texto,valor, 10);
  6002  005218  0E60               	movlw	low escreve_inteiro_lcd@texto
  6003  00521A  6E28               	movwf	itoa@buf^0,c
  6004  00521C  C02E  F029         	movff	escreve_inteiro_lcd@valor,itoa@val
  6005  005220  C02F  F02A         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
  6006  005224  0E00               	movlw	0
  6007  005226  6E2C               	movwf	(itoa@base+1)^0,c
  6008  005228  0E0A               	movlw	10
  6009  00522A  6E2B               	movwf	itoa@base^0,c
  6010  00522C  EC39  F029         	call	_itoa	;wreg free
  6011                           
  6012                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  6013  005230  0E60               	movlw	low escreve_inteiro_lcd@texto
  6014  005232  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  6015  005234  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  6016  005236  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
  6017  00523A  0012               	return		;funcret
  6018  00523C                     __end_of_escreve_inteiro_lcd:
  6019                           	callstack 0
  6020                           
  6021 ;; *************** function _itoa *****************
  6022 ;; Defined at:
  6023 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  buf             1   39[COMRAM] PTR unsigned char 
  6026 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6027 ;;  val             2   40[COMRAM] int 
  6028 ;;  base            2   42[COMRAM] int 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  cp              1    0        PTR unsigned char 
  6031 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      PTR unsigned char 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6041 ;;      Params:         5       0       0       0       0       0       0       0       0
  6042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6044 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:        6 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    5
  6048 ;; This function calls:
  6049 ;;		_utoa
  6050 ;; This function is called by:
  6051 ;;		_escreve_inteiro_lcd
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text27
  6056  005272                     __ptext27:
  6057                           	callstack 0
  6058  005272                     _itoa:
  6059                           	callstack 22
  6060                           
  6061                           ;incstack = 0
  6062  005272  AE2A               	btfss	(itoa@val+1)^0,7,c
  6063  005274  D00A               	goto	l11178
  6064  005276  5028               	movf	itoa@buf^0,w,c
  6065  005278  6ED9               	movwf	fsr2l,c
  6066  00527A  6ADA               	clrf	fsr2h,c
  6067  00527C  0E2D               	movlw	45
  6068  00527E  6EDF               	movwf	indf2,c
  6069  005280  2A28               	incf	itoa@buf^0,f,c
  6070  005282  6C29               	negf	itoa@val^0,c
  6071  005284  1E2A               	comf	(itoa@val+1)^0,f,c
  6072  005286  B0D8               	btfsc	status,0,c
  6073  005288  2A2A               	incf	(itoa@val+1)^0,f,c
  6074  00528A                     l11178:
  6075  00528A  C028  F020         	movff	itoa@buf,utoa@buf
  6076  00528E  C029  F021         	movff	itoa@val,utoa@val
  6077  005292  C02A  F022         	movff	itoa@val+1,utoa@val+1
  6078  005296  C02B  F023         	movff	itoa@base,utoa@base
  6079  00529A  C02C  F024         	movff	itoa@base+1,utoa@base+1
  6080  00529E  ECAD  F022         	call	_utoa	;wreg free
  6081  0052A2  0012               	return		;funcret
  6082  0052A4                     __end_of_itoa:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _utoa *****************
  6086 ;; Defined at:
  6087 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  buf             1   31[COMRAM] PTR unsigned char 
  6090 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6091 ;;  val             2   32[COMRAM] unsigned int 
  6092 ;;  base            2   34[COMRAM] int 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  v               2   36[COMRAM] unsigned int 
  6095 ;;  c               1   38[COMRAM] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      PTR unsigned char 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6105 ;;      Params:         5       0       0       0       0       0       0       0       0
  6106 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6108 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6109 ;;Total ram usage:        8 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    4
  6112 ;; This function calls:
  6113 ;;		___lwdiv
  6114 ;;		___lwmod
  6115 ;; This function is called by:
  6116 ;;		_itoa
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text28
  6121  00455A                     __ptext28:
  6122                           	callstack 0
  6123  00455A                     _utoa:
  6124                           	callstack 22
  6125                           
  6126                           ;incstack = 0
  6127  00455A  C021  F025         	movff	utoa@val,utoa@v
  6128  00455E  C022  F026         	movff	utoa@val+1,utoa@v+1
  6129  004562                     l11142:
  6130  004562  C025  F019         	movff	utoa@v,___lwdiv@dividend
  6131  004566  C026  F01A         	movff	utoa@v+1,___lwdiv@dividend+1
  6132  00456A  C023  F01B         	movff	utoa@base,___lwdiv@divisor
  6133  00456E  C024  F01C         	movff	utoa@base+1,___lwdiv@divisor+1
  6134  004572  ECC9  F026         	call	___lwdiv	;wreg free
  6135  004576  C019  F025         	movff	?___lwdiv,utoa@v
  6136  00457A  C01A  F026         	movff	?___lwdiv+1,utoa@v+1
  6137  00457E  2A20               	incf	utoa@buf^0,f,c
  6138  004580  5025               	movf	utoa@v^0,w,c
  6139  004582  1026               	iorwf	(utoa@v+1)^0,w,c
  6140  004584  A4D8               	btfss	status,2,c
  6141  004586  D7ED               	goto	l11142
  6142  004588  5020               	movf	utoa@buf^0,w,c
  6143  00458A  6ED9               	movwf	fsr2l,c
  6144  00458C  6ADA               	clrf	fsr2h,c
  6145  00458E  0E00               	movlw	0
  6146  004590  6EDF               	movwf	indf2,c
  6147  004592  0620               	decf	utoa@buf^0,f,c
  6148  004594                     l11152:
  6149  004594  C021  F019         	movff	utoa@val,___lwmod@dividend
  6150  004598  C022  F01A         	movff	utoa@val+1,___lwmod@dividend+1
  6151  00459C  C023  F01B         	movff	utoa@base,___lwmod@divisor
  6152  0045A0  C024  F01C         	movff	utoa@base+1,___lwmod@divisor+1
  6153  0045A4  EC83  F028         	call	___lwmod	;wreg free
  6154  0045A8  5019               	movf	?___lwmod^0,w,c
  6155  0045AA  6E27               	movwf	utoa@c^0,c
  6156  0045AC  C021  F019         	movff	utoa@val,___lwdiv@dividend
  6157  0045B0  C022  F01A         	movff	utoa@val+1,___lwdiv@dividend+1
  6158  0045B4  C023  F01B         	movff	utoa@base,___lwdiv@divisor
  6159  0045B8  C024  F01C         	movff	utoa@base+1,___lwdiv@divisor+1
  6160  0045BC  ECC9  F026         	call	___lwdiv	;wreg free
  6161  0045C0  C019  F021         	movff	?___lwdiv,utoa@val
  6162  0045C4  C01A  F022         	movff	?___lwdiv+1,utoa@val+1
  6163  0045C8  0E09               	movlw	9
  6164  0045CA  6427               	cpfsgt	utoa@c^0,c
  6165  0045CC  D002               	goto	l2300
  6166  0045CE  0E07               	movlw	7
  6167  0045D0  2627               	addwf	utoa@c^0,f,c
  6168  0045D2                     l2300:
  6169  0045D2  0E30               	movlw	48
  6170  0045D4  2627               	addwf	utoa@c^0,f,c
  6171  0045D6  5020               	movf	utoa@buf^0,w,c
  6172  0045D8  6ED9               	movwf	fsr2l,c
  6173  0045DA  6ADA               	clrf	fsr2h,c
  6174  0045DC  C027  FFDF         	movff	utoa@c,indf2
  6175  0045E0  0620               	decf	utoa@buf^0,f,c
  6176  0045E2  5021               	movf	utoa@val^0,w,c
  6177  0045E4  1022               	iorwf	(utoa@val+1)^0,w,c
  6178  0045E6  A4D8               	btfss	status,2,c
  6179  0045E8  D7D5               	goto	l11152
  6180                           
  6181                           ;	Return value of _utoa is never used
  6182  0045EA  2A20               	incf	utoa@buf^0,f,c
  6183  0045EC  0012               	return		;funcret
  6184  0045EE                     __end_of_utoa:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function ___lwmod *****************
  6188 ;; Defined at:
  6189 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  dividend        2   24[COMRAM] unsigned int 
  6192 ;;  divisor         2   26[COMRAM] unsigned int 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  counter         1   28[COMRAM] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2   24[COMRAM] unsigned int 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6204 ;;      Params:         4       0       0       0       0       0       0       0       0
  6205 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6207 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6208 ;;Total ram usage:        5 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    3
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_utoa
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text29
  6219  005106                     __ptext29:
  6220                           	callstack 0
  6221  005106                     ___lwmod:
  6222                           	callstack 22
  6223                           
  6224                           ;incstack = 0
  6225  005106  501B               	movf	___lwmod@divisor^0,w,c
  6226  005108  101C               	iorwf	(___lwmod@divisor+1)^0,w,c
  6227  00510A  B4D8               	btfsc	status,2,c
  6228  00510C  D018               	goto	l2094
  6229  00510E  0E01               	movlw	1
  6230  005110  6E1D               	movwf	___lwmod@counter^0,c
  6231  005112  D004               	goto	l10740
  6232  005114                     l10738:
  6233  005114  90D8               	bcf	status,0,c
  6234  005116  361B               	rlcf	___lwmod@divisor^0,f,c
  6235  005118  361C               	rlcf	(___lwmod@divisor+1)^0,f,c
  6236  00511A  2A1D               	incf	___lwmod@counter^0,f,c
  6237  00511C                     l10740:
  6238  00511C  AE1C               	btfss	(___lwmod@divisor+1)^0,7,c
  6239  00511E  D7FA               	goto	l10738
  6240  005120                     u12750:
  6241  005120  501B               	movf	___lwmod@divisor^0,w,c
  6242  005122  5C19               	subwf	___lwmod@dividend^0,w,c
  6243  005124  501C               	movf	(___lwmod@divisor+1)^0,w,c
  6244  005126  581A               	subwfb	(___lwmod@dividend+1)^0,w,c
  6245  005128  A0D8               	btfss	status,0,c
  6246  00512A  D004               	goto	l10746
  6247  00512C  501B               	movf	___lwmod@divisor^0,w,c
  6248  00512E  5E19               	subwf	___lwmod@dividend^0,f,c
  6249  005130  501C               	movf	(___lwmod@divisor+1)^0,w,c
  6250  005132  5A1A               	subwfb	(___lwmod@dividend+1)^0,f,c
  6251  005134                     l10746:
  6252  005134  90D8               	bcf	status,0,c
  6253  005136  321C               	rrcf	(___lwmod@divisor+1)^0,f,c
  6254  005138  321B               	rrcf	___lwmod@divisor^0,f,c
  6255  00513A  2E1D               	decfsz	___lwmod@counter^0,f,c
  6256  00513C  D7F1               	goto	u12750
  6257  00513E                     l2094:
  6258  00513E  C019  F019         	movff	___lwmod@dividend,?___lwmod
  6259  005142  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  6260  005146  0012               	return		;funcret
  6261  005148                     __end_of___lwmod:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function ___lwdiv *****************
  6265 ;; Defined at:
  6266 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  dividend        2   24[COMRAM] unsigned int 
  6269 ;;  divisor         2   26[COMRAM] unsigned int 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  quotient        2   29[COMRAM] unsigned int 
  6272 ;;  counter         1   28[COMRAM] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  2   24[COMRAM] unsigned int 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6282 ;;      Params:         4       0       0       0       0       0       0       0       0
  6283 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6285 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6286 ;;Total ram usage:        7 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    3
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_utoa
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text30
  6297  004D92                     __ptext30:
  6298                           	callstack 0
  6299  004D92                     ___lwdiv:
  6300                           	callstack 22
  6301                           
  6302                           ;incstack = 0
  6303  004D92  0E00               	movlw	0
  6304  004D94  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  6305  004D96  0E00               	movlw	0
  6306  004D98  6E1E               	movwf	___lwdiv@quotient^0,c
  6307  004D9A  501B               	movf	___lwdiv@divisor^0,w,c
  6308  004D9C  101C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6309  004D9E  B4D8               	btfsc	status,2,c
  6310  004DA0  D01C               	goto	l2084
  6311  004DA2  0E01               	movlw	1
  6312  004DA4  6E1D               	movwf	___lwdiv@counter^0,c
  6313  004DA6  D004               	goto	l10720
  6314  004DA8                     l10718:
  6315  004DA8  90D8               	bcf	status,0,c
  6316  004DAA  361B               	rlcf	___lwdiv@divisor^0,f,c
  6317  004DAC  361C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6318  004DAE  2A1D               	incf	___lwdiv@counter^0,f,c
  6319  004DB0                     l10720:
  6320  004DB0  AE1C               	btfss	(___lwdiv@divisor+1)^0,7,c
  6321  004DB2  D7FA               	goto	l10718
  6322  004DB4                     u12720:
  6323  004DB4  90D8               	bcf	status,0,c
  6324  004DB6  361E               	rlcf	___lwdiv@quotient^0,f,c
  6325  004DB8  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6326  004DBA  501B               	movf	___lwdiv@divisor^0,w,c
  6327  004DBC  5C19               	subwf	___lwdiv@dividend^0,w,c
  6328  004DBE  501C               	movf	(___lwdiv@divisor+1)^0,w,c
  6329  004DC0  581A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6330  004DC2  A0D8               	btfss	status,0,c
  6331  004DC4  D005               	goto	l10730
  6332  004DC6  501B               	movf	___lwdiv@divisor^0,w,c
  6333  004DC8  5E19               	subwf	___lwdiv@dividend^0,f,c
  6334  004DCA  501C               	movf	(___lwdiv@divisor+1)^0,w,c
  6335  004DCC  5A1A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6336  004DCE  801E               	bsf	___lwdiv@quotient^0,0,c
  6337  004DD0                     l10730:
  6338  004DD0  90D8               	bcf	status,0,c
  6339  004DD2  321C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6340  004DD4  321B               	rrcf	___lwdiv@divisor^0,f,c
  6341  004DD6  2E1D               	decfsz	___lwdiv@counter^0,f,c
  6342  004DD8  D7ED               	goto	u12720
  6343  004DDA                     l2084:
  6344  004DDA  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  6345  004DDE  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6346  004DE2  0012               	return		;funcret
  6347  004DE4                     __end_of___lwdiv:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function _escreve_cmd_lcd *****************
  6351 ;; Defined at:
  6352 ;;		line 162 in file "bibliotecas/display_lcd.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  comando         1    wreg     unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  comando         1   26[COMRAM] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        1 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    4
  6373 ;; This function calls:
  6374 ;;		_delay
  6375 ;; This function is called by:
  6376 ;;		_init_lcd
  6377 ;;		_mensagem_inicial
  6378 ;;		_troca_de_tela
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text31
  6383  004710                     __ptext31:
  6384                           	callstack 0
  6385  004710                     _escreve_cmd_lcd:
  6386                           	callstack 25
  6387                           
  6388                           ;incstack = 0
  6389                           ;escreve_cmd_lcd@comando stored from wreg
  6390  004710  6E1B               	movwf	escreve_cmd_lcd@comando^0,c
  6391                           
  6392                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  6393  004712  9483               	bcf	131,2,c	;volatile
  6394                           
  6395                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  6396  004714  9283               	bcf	131,1,c	;volatile
  6397                           
  6398                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  6399  004716  9083               	bcf	131,0,c	;volatile
  6400                           
  6401                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  6402  004718  A81B               	btfss	escreve_cmd_lcd@comando^0,4,c
  6403  00471A  D002               	goto	l191
  6404  00471C  8883               	bsf	131,4,c	;volatile
  6405  00471E  D001               	goto	l11602
  6406  004720                     l191:
  6407                           
  6408                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  6409  004720  9883               	bcf	131,4,c	;volatile
  6410  004722                     l11602:
  6411                           
  6412                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  6413  004722  AA1B               	btfss	escreve_cmd_lcd@comando^0,5,c
  6414  004724  D002               	goto	l193
  6415  004726  8A83               	bsf	131,5,c	;volatile
  6416  004728  D001               	goto	l11606
  6417  00472A                     l193:
  6418                           
  6419                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  6420  00472A  9A83               	bcf	131,5,c	;volatile
  6421  00472C                     l11606:
  6422                           
  6423                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  6424  00472C  AC1B               	btfss	escreve_cmd_lcd@comando^0,6,c
  6425  00472E  D002               	goto	l195
  6426  004730  8C83               	bsf	131,6,c	;volatile
  6427  004732  D001               	goto	l11610
  6428  004734                     l195:
  6429                           
  6430                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  6431  004734  9C83               	bcf	131,6,c	;volatile
  6432  004736                     l11610:
  6433                           
  6434                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  6435  004736  AE1B               	btfss	escreve_cmd_lcd@comando^0,7,c
  6436  004738  D002               	goto	l197
  6437  00473A  8E83               	bsf	131,7,c	;volatile
  6438  00473C  D001               	goto	l198
  6439  00473E                     l197:
  6440                           
  6441                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  6442  00473E  9E83               	bcf	131,7,c	;volatile
  6443  004740                     l198:
  6444                           
  6445                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  6446  004740  8083               	bsf	131,0,c	;volatile
  6447                           
  6448                           ;display_lcd.c: 181: delay();
  6449  004742  ECB8  F02A         	call	_delay	;wreg free
  6450                           
  6451                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  6452  004746  9083               	bcf	131,0,c	;volatile
  6453                           
  6454                           ;display_lcd.c: 183: delay();
  6455  004748  ECB8  F02A         	call	_delay	;wreg free
  6456                           
  6457                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  6458  00474C  A01B               	btfss	escreve_cmd_lcd@comando^0,0,c
  6459  00474E  D002               	goto	l199
  6460  004750  8883               	bsf	131,4,c	;volatile
  6461  004752  D001               	goto	l200
  6462  004754                     l199:
  6463                           
  6464                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  6465  004754  9883               	bcf	131,4,c	;volatile
  6466  004756                     l200:
  6467                           
  6468                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  6469  004756  A21B               	btfss	escreve_cmd_lcd@comando^0,1,c
  6470  004758  D002               	goto	l201
  6471  00475A  8A83               	bsf	131,5,c	;volatile
  6472  00475C  D001               	goto	l202
  6473  00475E                     l201:
  6474                           
  6475                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  6476  00475E  9A83               	bcf	131,5,c	;volatile
  6477  004760                     l202:
  6478                           
  6479                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  6480  004760  A41B               	btfss	escreve_cmd_lcd@comando^0,2,c
  6481  004762  D002               	goto	l203
  6482  004764  8C83               	bsf	131,6,c	;volatile
  6483  004766  D001               	goto	l204
  6484  004768                     l203:
  6485                           
  6486                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  6487  004768  9C83               	bcf	131,6,c	;volatile
  6488  00476A                     l204:
  6489                           
  6490                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  6491  00476A  A61B               	btfss	escreve_cmd_lcd@comando^0,3,c
  6492  00476C  D002               	goto	l205
  6493  00476E  8E83               	bsf	131,7,c	;volatile
  6494  004770  D001               	goto	l206
  6495  004772                     l205:
  6496                           
  6497                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  6498  004772  9E83               	bcf	131,7,c	;volatile
  6499  004774                     l206:
  6500                           
  6501                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  6502  004774  8083               	bsf	131,0,c	;volatile
  6503                           
  6504                           ;display_lcd.c: 197: delay();
  6505  004776  ECB8  F02A         	call	_delay	;wreg free
  6506                           
  6507                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  6508  00477A  9083               	bcf	131,0,c	;volatile
  6509                           
  6510                           ;display_lcd.c: 199: delay();
  6511  00477C  ECB8  F02A         	call	_delay	;wreg free
  6512                           
  6513                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  6514  004780  041B               	decf	escreve_cmd_lcd@comando^0,w,c
  6515  004782  B4D8               	btfsc	status,2,c
  6516  004784  D008               	goto	u14360
  6517  004786  0E02               	movlw	2
  6518  004788  181B               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6519  00478A  B4D8               	btfsc	status,2,c
  6520  00478C  D004               	goto	u14360
  6521  00478E  0E03               	movlw	3
  6522  004790  181B               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6523  004792  A4D8               	btfss	status,2,c
  6524  004794  0012               	return	
  6525  004796                     u14360:
  6526                           
  6527                           ;display_lcd.c: 205: { delay(); }
  6528  004796  ECB8  F02A         	call	_delay	;wreg free
  6529  00479A  0012               	return		;funcret
  6530  00479C                     __end_of_escreve_cmd_lcd:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function _Longitude *****************
  6534 ;; Defined at:
  6535 ;;		line 179 in file "bibliotecas/GPS.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  2   30[COMRAM] PTR unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6549 ;;      Params:         2       0       0       0       0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6552 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6553 ;;Total ram usage:        2 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    4
  6556 ;; This function calls:
  6557 ;;		_strcpy
  6558 ;; This function is called by:
  6559 ;;		_troca_de_tela
  6560 ;;		_armazena_longitude
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text32
  6565  005534                     __ptext32:
  6566                           	callstack 0
  6567  005534                     _Longitude:
  6568                           	callstack 23
  6569                           
  6570                           ;GPS.c: 181: strcpy(rawLongitude, "-04631.81790");
  6571                           
  6572                           ;incstack = 0
  6573  005534  0E6C               	movlw	low _rawLongitude
  6574  005536  6E19               	movwf	strcpy@to^0,c
  6575  005538  0E02               	movlw	high _rawLongitude
  6576  00553A  6E1A               	movwf	(strcpy@to+1)^0,c
  6577  00553C  0EE2               	movlw	low STR_8
  6578  00553E  6E1B               	movwf	strcpy@from^0,c
  6579  005540  0E61               	movlw	high STR_8
  6580  005542  6E1C               	movwf	(strcpy@from+1)^0,c
  6581  005544  EC1D  F028         	call	_strcpy	;wreg free
  6582                           
  6583                           ;GPS.c: 182: return rawLongitude;
  6584  005548  0E6C               	movlw	low _rawLongitude
  6585  00554A  6E1F               	movwf	?_Longitude^0,c
  6586  00554C  0E02               	movlw	high _rawLongitude
  6587  00554E  6E20               	movwf	(?_Longitude+1)^0,c
  6588  005550  0012               	return		;funcret
  6589  005552                     __end_of_Longitude:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _Latitude *****************
  6593 ;; Defined at:
  6594 ;;		line 173 in file "bibliotecas/GPS.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  2   30[COMRAM] PTR unsigned char 
  6601 ;; Registers used:
  6602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6608 ;;      Params:         2       0       0       0       0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6611 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6612 ;;Total ram usage:        2 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    4
  6615 ;; This function calls:
  6616 ;;		_strcpy
  6617 ;; This function is called by:
  6618 ;;		_troca_de_tela
  6619 ;;		_armazena_latitude
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text33
  6624  005552                     __ptext33:
  6625                           	callstack 0
  6626  005552                     _Latitude:
  6627                           	callstack 23
  6628                           
  6629                           ;GPS.c: 175: strcpy(rawLatitude,"-2339.71121");
  6630                           
  6631                           ;incstack = 0
  6632  005552  0E79               	movlw	low _rawLatitude
  6633  005554  6E19               	movwf	strcpy@to^0,c
  6634  005556  0E02               	movlw	high _rawLatitude
  6635  005558  6E1A               	movwf	(strcpy@to+1)^0,c
  6636  00555A  0EEF               	movlw	low STR_7
  6637  00555C  6E1B               	movwf	strcpy@from^0,c
  6638  00555E  0E61               	movlw	high STR_7
  6639  005560  6E1C               	movwf	(strcpy@from+1)^0,c
  6640  005562  EC1D  F028         	call	_strcpy	;wreg free
  6641                           
  6642                           ;GPS.c: 176: return rawLatitude;
  6643  005566  0E79               	movlw	low _rawLatitude
  6644  005568  6E1F               	movwf	?_Latitude^0,c
  6645  00556A  0E02               	movlw	high _rawLatitude
  6646  00556C  6E20               	movwf	(?_Latitude+1)^0,c
  6647  00556E  0012               	return		;funcret
  6648  005570                     __end_of_Latitude:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _fix *****************
  6652 ;; Defined at:
  6653 ;;		line 185 in file "bibliotecas/GPS.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  2   24[COMRAM] PTR unsigned char 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6667 ;;      Params:         2       0       0       0       0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6670 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6671 ;;Total ram usage:        2 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    3
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_disparo_gravacao
  6678 ;;		_troca_de_tela
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text34
  6683  005674                     __ptext34:
  6684                           	callstack 0
  6685  005674                     _fix:
  6686                           	callstack 25
  6687                           
  6688                           ;GPS.c: 187: return rawFix;
  6689                           
  6690                           ;incstack = 0
  6691  005674  0EF6               	movlw	low _rawFix
  6692  005676  6E19               	movwf	?_fix^0,c
  6693  005678  0E01               	movlw	high _rawFix
  6694  00567A  6E1A               	movwf	(?_fix+1)^0,c
  6695  00567C  0012               	return		;funcret
  6696  00567E                     __end_of_fix:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _escrita_sdcard *****************
  6700 ;; Defined at:
  6701 ;;		line 206 in file "bibliotecas/SDCard.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  fix_gps         3    0        PTR unsigned char 
  6706 ;;  bw              2    0        unsigned short 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 3F/0
  6713 ;;		On exit  : 3F/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6719 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6720 ;;Total ram usage:        0 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:   15
  6723 ;; This function calls:
  6724 ;;		_desliga_SPI
  6725 ;;		_desliga_uart
  6726 ;;		_f_close
  6727 ;;		_f_lseek
  6728 ;;		_f_mount
  6729 ;;		_f_open
  6730 ;;		_fprintf
  6731 ;;		_inicializa_SPI
  6732 ;;		_inicializa_uart
  6733 ;;		_strcat
  6734 ;;		_strcpy
  6735 ;; This function is called by:
  6736 ;;		_disparo_gravacao
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text35
  6741  003898                     __ptext35:
  6742                           	callstack 0
  6743  003898                     _escrita_sdcard:
  6744                           	callstack 13
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;SDCard.c: 208: unsigned char *fix_gps;;SDCard.c: 209: static unsigned char f_fix = 0;;S
      +                          DCard.c: 210: WORD bw;;SDCard.c: 211: PORTBbits.RB3 = 0;
  6748                           
  6749                           ;incstack = 0
  6750  003898  9681               	bcf	129,3,c	;volatile
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;SDCard.c: 212: desliga_uart();
  6754  00389A  EC16  F02B         	call	_desliga_uart	;wreg free
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;SDCard.c: 213: inicializa_SPI();
  6758  00389E  EC6B  F02A         	call	_inicializa_SPI	;wreg free
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;SDCard.c: 214: f_mount(0,&fs);
  6762  0038A2  0EC6               	movlw	low _fs
  6763  0038A4  6E19               	movwf	f_mount@fs^0,c
  6764  0038A6  0E02               	movlw	high _fs
  6765  0038A8  6E1A               	movwf	(f_mount@fs+1)^0,c
  6766  0038AA  0E00               	movlw	0
  6767  0038AC  EC90  F027         	call	_f_mount
  6768                           
  6769                           ;SDCard.c: 216: if(!f_fix)
  6770  0038B0  5040               	movf	escrita_sdcard@f_fix^0,w,c
  6771  0038B2  A4D8               	btfss	status,2,c
  6772  0038B4  D020               	goto	l11662
  6773                           
  6774                           ;SDCard.c: 217: {;SDCard.c: 219: strcpy(filename, string_dado.data_name);
  6775  0038B6  0E5D               	movlw	low _filename
  6776  0038B8  6E19               	movwf	strcpy@to^0,c
  6777  0038BA  0E02               	movlw	high _filename
  6778  0038BC  6E1A               	movwf	(strcpy@to+1)^0,c
  6779  0038BE  0E12               	movlw	low (_string_dado+18)
  6780  0038C0  6E1B               	movwf	strcpy@from^0,c
  6781  0038C2  0E02               	movlw	high (_string_dado+18)
  6782  0038C4  6E1C               	movwf	(strcpy@from+1)^0,c
  6783  0038C6  EC1D  F028         	call	_strcpy	;wreg free
  6784                           
  6785                           ;SDCard.c: 220: strcpy(filename, string_dado.hora_name);
  6786  0038CA  0E5D               	movlw	low _filename
  6787  0038CC  6E19               	movwf	strcpy@to^0,c
  6788  0038CE  0E02               	movlw	high _filename
  6789  0038D0  6E1A               	movwf	(strcpy@to+1)^0,c
  6790  0038D2  0E16               	movlw	low (_string_dado+22)
  6791  0038D4  6E1B               	movwf	strcpy@from^0,c
  6792  0038D6  0E02               	movlw	high (_string_dado+22)
  6793  0038D8  6E1C               	movwf	(strcpy@from+1)^0,c
  6794  0038DA  EC1D  F028         	call	_strcpy	;wreg free
  6795                           
  6796                           ;SDCard.c: 222: strcat(filename, ".tlm");
  6797  0038DE  0E5D               	movlw	low _filename
  6798  0038E0  6E19               	movwf	strcat@to^0,c
  6799  0038E2  0E02               	movlw	high _filename
  6800  0038E4  6E1A               	movwf	(strcat@to+1)^0,c
  6801  0038E6  0E69               	movlw	low STR_15
  6802  0038E8  6E1B               	movwf	strcat@from^0,c
  6803  0038EA  0E62               	movlw	high STR_15
  6804  0038EC  6E1C               	movwf	(strcat@from+1)^0,c
  6805  0038EE  EC3F  F028         	call	_strcat	;wreg free
  6806                           
  6807                           ;SDCard.c: 223: f_fix = 1;
  6808  0038F2  0E01               	movlw	1
  6809  0038F4  6E40               	movwf	escrita_sdcard@f_fix^0,c
  6810  0038F6                     l11662:
  6811                           
  6812                           ;SDCard.c: 224: };SDCard.c: 226: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  6813  0038F6  0EA0               	movlw	low _fil
  6814  0038F8  0100               	movlb	0	; () banked
  6815  0038FA  6FC0               	movwf	f_open@fp& (0+255),b
  6816  0038FC  0E01               	movlw	high _fil
  6817  0038FE  6FC1               	movwf	(f_open@fp+1)& (0+255),b
  6818  003900  0E5D               	movlw	low _filename
  6819  003902  6FC2               	movwf	f_open@path& (0+255),b
  6820  003904  0E02               	movlw	high _filename
  6821  003906  6FC3               	movwf	(f_open@path+1)& (0+255),b
  6822  003908  0E02               	movlw	2
  6823  00390A  6FC4               	movwf	f_open@mode& (0+255),b
  6824  00390C  EC76  F009         	call	_f_open	;wreg free
  6825  003910  0900               	iorlw	0
  6826  003912  A4D8               	btfss	status,2,c
  6827  003914  D044               	goto	l11670
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;SDCard.c: 227: {;SDCard.c: 229: f_lseek(&fil, ((&fil)->fsize));
  6831  003916  0EA0               	movlw	low _fil
  6832  003918  6FAE               	movwf	f_lseek@fp& (0+255),b
  6833  00391A  0E01               	movlw	high _fil
  6834  00391C  6FAF               	movwf	(f_lseek@fp+1)& (0+255),b
  6835  00391E  C1AA  F0B0         	movff	_fil+10,f_lseek@ofs
  6836  003922  C1AB  F0B1         	movff	_fil+11,f_lseek@ofs+1
  6837  003926  C1AC  F0B2         	movff	_fil+12,f_lseek@ofs+2
  6838  00392A  C1AD  F0B3         	movff	_fil+13,f_lseek@ofs+3
  6839  00392E  EC72  F005         	call	_f_lseek	;wreg free
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;SDCard.c: 230: fprintf(&fil, "\nv%s;lt%s;lo%s;r%s;c%s;k%s;h%s;d%s;f%s", "string_dado.ve
      +                          l", string_dado.lt, string_dado.lo, "string_dado.rpm", "string_dado.comb", "string_dado.
      +                          odometro_total", string_dado.hora, "string_dado.dtc", string_dado.fence);
  6843  003932  0EA0               	movlw	low _fil
  6844  003934  6FDA               	movwf	fprintf@fil& (0+255),b
  6845  003936  0E01               	movlw	high _fil
  6846  003938  6FDB               	movwf	(fprintf@fil+1)& (0+255),b
  6847  00393A  0EE1               	movlw	low STR_16
  6848  00393C  6FDC               	movwf	fprintf@str& (0+255),b
  6849  00393E  0E60               	movlw	high STR_16
  6850  003940  6FDD               	movwf	(fprintf@str+1)& (0+255),b
  6851  003942  0E7A               	movlw	low STR_17
  6852  003944  6FDE               	movwf	(?_fprintf+4)& (0+255),b
  6853  003946  0E61               	movlw	high STR_17
  6854  003948  6FDF               	movwf	(?_fprintf+5)& (0+255),b
  6855  00394A  0E1A               	movlw	low (_string_dado+26)
  6856  00394C  6FE0               	movwf	(?_fprintf+6)& (0+255),b
  6857  00394E  0E02               	movlw	high (_string_dado+26)
  6858  003950  6FE1               	movwf	(?_fprintf+7)& (0+255),b
  6859  003952  0E27               	movlw	low (_string_dado+39)
  6860  003954  6FE2               	movwf	(?_fprintf+8)& (0+255),b
  6861  003956  0E02               	movlw	high (_string_dado+39)
  6862  003958  6FE3               	movwf	(?_fprintf+9)& (0+255),b
  6863  00395A  0E8A               	movlw	low STR_18
  6864  00395C  6FE4               	movwf	(?_fprintf+10)& (0+255),b
  6865  00395E  0E61               	movlw	high STR_18
  6866  003960  6FE5               	movwf	(?_fprintf+11)& (0+255),b
  6867  003962  0E49               	movlw	low STR_19
  6868  003964  6FE6               	movwf	(?_fprintf+12)& (0+255),b
  6869  003966  0E61               	movlw	high STR_19
  6870  003968  6FE7               	movwf	(?_fprintf+13)& (0+255),b
  6871  00396A  0E08               	movlw	low STR_20
  6872  00396C  6FE8               	movwf	(?_fprintf+14)& (0+255),b
  6873  00396E  0E61               	movlw	high STR_20
  6874  003970  6FE9               	movwf	(?_fprintf+15)& (0+255),b
  6875  003972  0E07               	movlw	low (_string_dado+7)
  6876  003974  6FEA               	movwf	(?_fprintf+16)& (0+255),b
  6877  003976  0E02               	movlw	high (_string_dado+7)
  6878  003978  6FEB               	movwf	(?_fprintf+17)& (0+255),b
  6879  00397A  0E6A               	movlw	low STR_21
  6880  00397C  6FEC               	movwf	(?_fprintf+18)& (0+255),b
  6881  00397E  0E61               	movlw	high STR_21
  6882  003980  6FED               	movwf	(?_fprintf+19)& (0+255),b
  6883  003982  0E43               	movlw	low (_string_dado+67)
  6884  003984  6FEE               	movwf	(?_fprintf+20)& (0+255),b
  6885  003986  0E02               	movlw	high (_string_dado+67)
  6886  003988  6FEF               	movwf	(?_fprintf+21)& (0+255),b
  6887  00398A  ECB7  F007         	call	_fprintf	;wreg free
  6888  00398E                     l11668:
  6889                           
  6890                           ;SDCard.c: 233: f_close(&fil);
  6891  00398E  0EA0               	movlw	low _fil
  6892  003990  0100               	movlb	0	; () banked
  6893  003992  6F91               	movwf	f_close@fp& (0+255),b
  6894  003994  0E01               	movlw	high _fil
  6895  003996  6F92               	movwf	(f_close@fp+1)& (0+255),b
  6896  003998  EC96  F029         	call	_f_close	;wreg free
  6897                           
  6898                           ;SDCard.c: 234: }
  6899  00399C  D00D               	goto	l11674
  6900  00399E                     l11670:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;SDCard.c: 235: else;SDCard.c: 236: {;SDCard.c: 237: f_open(&fil, filename, 0x08 );
  6904  00399E  0EA0               	movlw	low _fil
  6905  0039A0  6FC0               	movwf	f_open@fp& (0+255),b
  6906  0039A2  0E01               	movlw	high _fil
  6907  0039A4  6FC1               	movwf	(f_open@fp+1)& (0+255),b
  6908  0039A6  0E5D               	movlw	low _filename
  6909  0039A8  6FC2               	movwf	f_open@path& (0+255),b
  6910  0039AA  0E02               	movlw	high _filename
  6911  0039AC  6FC3               	movwf	(f_open@path+1)& (0+255),b
  6912  0039AE  0E08               	movlw	8
  6913  0039B0  6FC4               	movwf	f_open@mode& (0+255),b
  6914  0039B2  EC76  F009         	call	_f_open	;wreg free
  6915  0039B6  D7EB               	goto	l11668
  6916  0039B8                     l11674:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;SDCard.c: 240: };SDCard.c: 242: PORTBbits.RB3 = 1;
  6920  0039B8  8681               	bsf	129,3,c	;volatile
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;SDCard.c: 243: desliga_SPI();
  6924  0039BA  EC2F  F02B         	call	_desliga_SPI	;wreg free
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;SDCard.c: 244: inicializa_uart();
  6928  0039BE  EC05  F02A         	call	_inicializa_uart	;wreg free
  6929                           
  6930                           ; BSR set to: 0
  6931  0039C2  0012               	return		;funcret
  6932  0039C4                     __end_of_escrita_sdcard:
  6933                           	callstack 0
  6934                           
  6935 ;; *************** function _strcpy *****************
  6936 ;; Defined at:
  6937 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  to              2   24[COMRAM] PTR unsigned char 
  6940 ;;		 -> temp_buff_lat(11), temp_buff_long(12), filename(15), rawLongitude(13), 
  6941 ;;		 -> rawLatitude(13), 
  6942 ;;  from            2   26[COMRAM] PTR const unsigned char 
  6943 ;;		 -> string_dado.hora_name(4), string_dado.data_name(4), string_dado(73), STR_8(13), 
  6944 ;;		 -> STR_7(12), rawLongitude(13), rawLatitude(13), 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  cp              2   28[COMRAM] PTR unsigned char 
  6947 ;;		 -> temp_buff_lat(11), temp_buff_long(12), filename(15), rawLongitude(13), 
  6948 ;;		 -> rawLatitude(13), 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2   24[COMRAM] PTR unsigned char 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6958 ;;      Params:         4       0       0       0       0       0       0       0       0
  6959 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6961 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6962 ;;Total ram usage:        6 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    3
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_Latitude
  6969 ;;		_Longitude
  6970 ;;		_escrita_sdcard
  6971 ;;		_armazena_longitude
  6972 ;;		_armazena_latitude
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text36
  6977  00503A                     __ptext36:
  6978                           	callstack 0
  6979  00503A                     _strcpy:
  6980                           	callstack 24
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;incstack = 0
  6984  00503A  C019  F01D         	movff	strcpy@to,strcpy@cp
  6985  00503E  C01A  F01E         	movff	strcpy@to+1,strcpy@cp+1
  6986  005042  D004               	goto	l10754
  6987  005044                     l10752:
  6988  005044  4A1D               	infsnz	strcpy@cp^0,f,c
  6989  005046  2A1E               	incf	(strcpy@cp+1)^0,f,c
  6990  005048  4A1B               	infsnz	strcpy@from^0,f,c
  6991  00504A  2A1C               	incf	(strcpy@from+1)^0,f,c
  6992  00504C                     l10754:
  6993  00504C  C01B  FFF6         	movff	strcpy@from,tblptrl
  6994  005050  C01C  FFF7         	movff	strcpy@from+1,tblptrh
  6995  005054  6AF8               	clrf	tblptru,c
  6996  005056  C01D  FFD9         	movff	strcpy@cp,fsr2l
  6997  00505A  C01E  FFDA         	movff	strcpy@cp+1,fsr2h
  6998  00505E  0E07               	movlw	(high __ramtop+-1)
  6999  005060  64F7               	cpfsgt	tblptrh,c
  7000  005062  D003               	bra	u12777
  7001  005064  0008               	tblrd		*
  7002  005066  50F5               	movf	tablat,w,c
  7003  005068  D005               	bra	u12770
  7004  00506A                     u12777:
  7005  00506A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7006  00506E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7007  005072  50E7               	movf	indf1,w,c
  7008  005074                     u12770:
  7009  005074  6EDF               	movwf	indf2,c
  7010  005076  50DF               	movf	indf2,w,c
  7011  005078  B4D8               	btfsc	status,2,c
  7012  00507A  0012               	return	
  7013  00507C  D7E3               	goto	l10752
  7014  00507E                     __end_of_strcpy:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function _strcat *****************
  7018 ;; Defined at:
  7019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  to              2   24[COMRAM] PTR unsigned char 
  7022 ;;		 -> filename(15), 
  7023 ;;  from            2   26[COMRAM] PTR const unsigned char 
  7024 ;;		 -> STR_15(5), 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  cp              2   28[COMRAM] PTR unsigned char 
  7027 ;;		 -> filename(15), 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2   24[COMRAM] PTR unsigned char 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7037 ;;      Params:         4       0       0       0       0       0       0       0       0
  7038 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7040 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7041 ;;Total ram usage:        6 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    3
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_escrita_sdcard
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text37
  7052  00507E                     __ptext37:
  7053                           	callstack 0
  7054  00507E                     _strcat:
  7055                           	callstack 24
  7056                           
  7057                           ;incstack = 0
  7058  00507E  C019  F01D         	movff	strcat@to,strcat@cp
  7059  005082  C01A  F01E         	movff	strcat@to+1,strcat@cp+1
  7060  005086  D002               	goto	l11318
  7061  005088                     l11316:
  7062  005088  4A1D               	infsnz	strcat@cp^0,f,c
  7063  00508A  2A1E               	incf	(strcat@cp+1)^0,f,c
  7064  00508C                     l11318:
  7065  00508C  C01D  FFD9         	movff	strcat@cp,fsr2l
  7066  005090  C01E  FFDA         	movff	strcat@cp+1,fsr2h
  7067  005094  50DF               	movf	indf2,w,c
  7068  005096  B4D8               	btfsc	status,2,c
  7069  005098  D005               	goto	l11322
  7070  00509A  D7F6               	goto	l11316
  7071  00509C                     l11320:
  7072  00509C  4A1D               	infsnz	strcat@cp^0,f,c
  7073  00509E  2A1E               	incf	(strcat@cp+1)^0,f,c
  7074  0050A0  4A1B               	infsnz	strcat@from^0,f,c
  7075  0050A2  2A1C               	incf	(strcat@from+1)^0,f,c
  7076  0050A4                     l11322:
  7077  0050A4  C01B  FFF6         	movff	strcat@from,tblptrl
  7078  0050A8  C01C  FFF7         	movff	strcat@from+1,tblptrh
  7079  0050AC                     	if	0	;tblptru may be non-zero
  7080  0050AC                     	endif
  7081  0050AC                     	if	0	;tblptru may be non-zero
  7082  0050AC                     	endif
  7083  0050AC  C01D  FFD9         	movff	strcat@cp,fsr2l
  7084  0050B0  C01E  FFDA         	movff	strcat@cp+1,fsr2h
  7085  0050B4  0008               	tblrd		*
  7086  0050B6  CFF5 FFDF          	movff	tablat,indf2
  7087  0050BA  50DF               	movf	indf2,w,c
  7088  0050BC  B4D8               	btfsc	status,2,c
  7089  0050BE  0012               	return	
  7090  0050C0  D7ED               	goto	l11320
  7091  0050C2                     __end_of_strcat:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _inicializa_uart *****************
  7095 ;; Defined at:
  7096 ;;		line 206 in file "bibliotecas/uart.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 3E/1
  7107 ;;		On exit  : 3F/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    5
  7117 ;; This function calls:
  7118 ;;		_configura_baudrate_uart
  7119 ;; This function is called by:
  7120 ;;		_escrita_sdcard
  7121 ;;		_main
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text38
  7126  00540A                     __ptext38:
  7127                           	callstack 0
  7128  00540A                     _inicializa_uart:
  7129                           	callstack 25
  7130                           
  7131                           ;uart.c: 208: TRISCbits.RC6 = 0;
  7132                           
  7133                           ;incstack = 0
  7134  00540A  9C94               	bcf	148,6,c	;volatile
  7135                           
  7136                           ;uart.c: 209: TRISCbits.RC7 = 0;
  7137  00540C  9E94               	bcf	148,7,c	;volatile
  7138                           
  7139                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  7140  00540E  0E80               	movlw	128
  7141  005410  6E27               	movwf	configura_baudrate_uart@baudrate^0,c
  7142  005412  0E25               	movlw	37
  7143  005414  6E28               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  7144  005416  0E00               	movlw	0
  7145  005418  6E29               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  7146  00541A  0E00               	movlw	0
  7147  00541C  6E2A               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  7148  00541E  EC9A  F01E         	call	_configura_baudrate_uart	;wreg free
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;uart.c: 213: TXSTA = 0x20;
  7152  005422  0E20               	movlw	32
  7153  005424  6EAC               	movwf	172,c	;volatile
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;uart.c: 214: RCSTA = 0x90;
  7157  005426  0E90               	movlw	144
  7158  005428  6EAB               	movwf	171,c	;volatile
  7159                           
  7160                           ; BSR set to: 0
  7161  00542A  0012               	return		;funcret
  7162  00542C                     __end_of_inicializa_uart:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function _configura_baudrate_uart *****************
  7166 ;; Defined at:
  7167 ;;		line 50 in file "bibliotecas/uart.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  baudrate        4   38[COMRAM] const long 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  x               2    0[BANK0 ] unsigned int 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      unsigned char 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 3E/1
  7178 ;;		On exit  : 3F/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7181 ;;      Params:         4       0       0       0       0       0       0       0       0
  7182 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7183 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7184 ;;      Totals:        12       2       0       0       0       0       0       0       0
  7185 ;;Total ram usage:       14 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    4
  7188 ;; This function calls:
  7189 ;;		___aldiv
  7190 ;; This function is called by:
  7191 ;;		_inicializa_uart
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text39
  7196  003D34                     __ptext39:
  7197                           	callstack 0
  7198  003D34                     _configura_baudrate_uart:
  7199                           	callstack 25
  7200                           
  7201                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;incstack = 0
  7205  003D34  C027  F02B         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7206  003D38  C028  F02C         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7207  003D3C  C029  F02D         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7208  003D40  C02A  F02E         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7209  003D44  0E06               	movlw	6
  7210  003D46                     u13395:
  7211  003D46  90D8               	bcf	status,0,c
  7212  003D48  362B               	rlcf	??_configura_baudrate_uart^0,f,c
  7213  003D4A  362C               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  7214  003D4C  362D               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  7215  003D4E  362E               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  7216  003D50  2EE8               	decfsz	wreg,f,c
  7217  003D52  D7F9               	goto	u13395
  7218  003D54  502B               	movf	??_configura_baudrate_uart^0,w,c
  7219  003D56  0800               	sublw	0
  7220  003D58  6E19               	movwf	___aldiv@dividend^0,c
  7221  003D5A  0E6C               	movlw	108
  7222  003D5C  542C               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  7223  003D5E  6E1A               	movwf	(___aldiv@dividend+1)^0,c
  7224  003D60  0EDC               	movlw	220
  7225  003D62  542D               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  7226  003D64  6E1B               	movwf	(___aldiv@dividend+2)^0,c
  7227  003D66  0E02               	movlw	2
  7228  003D68  542E               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  7229  003D6A  6E1C               	movwf	(___aldiv@dividend+3)^0,c
  7230  003D6C  C027  F02F         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7231  003D70  C028  F030         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7232  003D74  C029  F031         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7233  003D78  C02A  F032         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7234  003D7C  0E06               	movlw	6
  7235  003D7E                     u13405:
  7236  003D7E  90D8               	bcf	status,0,c
  7237  003D80  362F               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  7238  003D82  3630               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  7239  003D84  3631               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  7240  003D86  3632               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  7241  003D88  2EE8               	decfsz	wreg,f,c
  7242  003D8A  D7F9               	goto	u13405
  7243  003D8C  C02F  F01D         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  7244  003D90  C030  F01E         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  7245  003D94  C031  F01F         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  7246  003D98  C032  F020         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  7247  003D9C  ECFB  F01F         	call	___aldiv	;wreg free
  7248  003DA0  C019  F060         	movff	?___aldiv,configura_baudrate_uart@x
  7249  003DA4  C01A  F061         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  7250                           
  7251                           ;uart.c: 55: if(x > 255)
  7252  003DA8  0100               	movlb	0	; () banked
  7253  003DAA  0561               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  7254  003DAC  A0D8               	btfss	status,0,c
  7255  003DAE  D03B               	goto	l11108
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  7259  003DB0  C027  F02B         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7260  003DB4  C028  F02C         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7261  003DB8  C029  F02D         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7262  003DBC  C02A  F02E         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7263  003DC0  0E04               	movlw	4
  7264  003DC2                     u13425:
  7265  003DC2  90D8               	bcf	status,0,c
  7266  003DC4  362B               	rlcf	??_configura_baudrate_uart^0,f,c
  7267  003DC6  362C               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  7268  003DC8  362D               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  7269  003DCA  362E               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  7270  003DCC  2EE8               	decfsz	wreg,f,c
  7271  003DCE  D7F9               	goto	u13425
  7272  003DD0  502B               	movf	??_configura_baudrate_uart^0,w,c
  7273  003DD2  0800               	sublw	0
  7274  003DD4  6E19               	movwf	___aldiv@dividend^0,c
  7275  003DD6  0E6C               	movlw	108
  7276  003DD8  542C               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  7277  003DDA  6E1A               	movwf	(___aldiv@dividend+1)^0,c
  7278  003DDC  0EDC               	movlw	220
  7279  003DDE  542D               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  7280  003DE0  6E1B               	movwf	(___aldiv@dividend+2)^0,c
  7281  003DE2  0E02               	movlw	2
  7282  003DE4  542E               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  7283  003DE6  6E1C               	movwf	(___aldiv@dividend+3)^0,c
  7284  003DE8  C027  F02F         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7285  003DEC  C028  F030         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7286  003DF0  C029  F031         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7287  003DF4  C02A  F032         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7288  003DF8  0E04               	movlw	4
  7289  003DFA                     u13435:
  7290  003DFA  90D8               	bcf	status,0,c
  7291  003DFC  362F               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  7292  003DFE  3630               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  7293  003E00  3631               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  7294  003E02  3632               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  7295  003E04  2EE8               	decfsz	wreg,f,c
  7296  003E06  D7F9               	goto	u13435
  7297  003E08  C02F  F01D         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  7298  003E0C  C030  F01E         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  7299  003E10  C031  F01F         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  7300  003E14  C032  F020         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  7301  003E18  ECFB  F01F         	call	___aldiv	;wreg free
  7302  003E1C  C019  F060         	movff	?___aldiv,configura_baudrate_uart@x
  7303  003E20  C01A  F061         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  7304                           
  7305                           ;uart.c: 58: BRGH = 1;
  7306  003E24  84AC               	bsf	4012,2,c	;volatile
  7307  003E26                     l11108:
  7308                           
  7309                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  7310  003E26  0100               	movlb	0	; () banked
  7311  003E28  0561               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  7312  003E2A  B0D8               	btfsc	status,0,c
  7313  003E2C  0012               	return	
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  7317  003E2E  C060  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  7318                           
  7319                           ;uart.c: 63: SYNC = 0;
  7320  003E32  98AC               	bcf	4012,4,c	;volatile
  7321                           
  7322                           ;uart.c: 64: SPEN = 1;
  7323  003E34  8EAB               	bsf	4011,7,c	;volatile
  7324                           
  7325                           ;uart.c: 65: TRISCbits.RC7 = 1;
  7326  003E36  8E94               	bsf	148,7,c	;volatile
  7327                           
  7328                           ;uart.c: 66: TRISCbits.RC6 = 0;
  7329  003E38  9C94               	bcf	148,6,c	;volatile
  7330                           
  7331                           ;uart.c: 67: CREN = 1;
  7332  003E3A  88AB               	bsf	4011,4,c	;volatile
  7333                           
  7334                           ;uart.c: 68: TXEN = 1;
  7335  003E3C  8AAC               	bsf	4012,5,c	;volatile
  7336                           
  7337                           ; BSR set to: 0
  7338                           
  7339                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  7340  003E3E  0012               	return		;funcret
  7341  003E40                     __end_of_configura_baudrate_uart:
  7342                           	callstack 0
  7343                           
  7344 ;; *************** function ___aldiv *****************
  7345 ;; Defined at:
  7346 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  dividend        4   24[COMRAM] long 
  7349 ;;  divisor         4   28[COMRAM] long 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  quotient        4   34[COMRAM] long 
  7352 ;;  sign            1   33[COMRAM] unsigned char 
  7353 ;;  counter         1   32[COMRAM] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  4   24[COMRAM] long 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 3E/1
  7360 ;;		On exit  : 3E/0
  7361 ;;		Unchanged: 3E/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7363 ;;      Params:         8       0       0       0       0       0       0       0       0
  7364 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7366 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7367 ;;Total ram usage:       14 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    3
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_configura_baudrate_uart
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text40
  7378  003FF6                     __ptext40:
  7379                           	callstack 0
  7380  003FF6                     ___aldiv:
  7381                           	callstack 25
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;incstack = 0
  7385  003FF6  0E00               	movlw	0
  7386  003FF8  6E22               	movwf	___aldiv@sign^0,c
  7387  003FFA  AE20               	btfss	(___aldiv@divisor+3)^0,7,c
  7388  003FFC  D00A               	goto	l10676
  7389  003FFE  1E20               	comf	(___aldiv@divisor+3)^0,f,c
  7390  004000  1E1F               	comf	(___aldiv@divisor+2)^0,f,c
  7391  004002  1E1E               	comf	(___aldiv@divisor+1)^0,f,c
  7392  004004  6C1D               	negf	___aldiv@divisor^0,c
  7393  004006  0E00               	movlw	0
  7394  004008  221E               	addwfc	(___aldiv@divisor+1)^0,f,c
  7395  00400A  221F               	addwfc	(___aldiv@divisor+2)^0,f,c
  7396  00400C  2220               	addwfc	(___aldiv@divisor+3)^0,f,c
  7397  00400E  0E01               	movlw	1
  7398  004010  6E22               	movwf	___aldiv@sign^0,c
  7399  004012                     l10676:
  7400  004012  AE1C               	btfss	(___aldiv@dividend+3)^0,7,c
  7401  004014  D00A               	goto	l10682
  7402  004016  1E1C               	comf	(___aldiv@dividend+3)^0,f,c
  7403  004018  1E1B               	comf	(___aldiv@dividend+2)^0,f,c
  7404  00401A  1E1A               	comf	(___aldiv@dividend+1)^0,f,c
  7405  00401C  6C19               	negf	___aldiv@dividend^0,c
  7406  00401E  0E00               	movlw	0
  7407  004020  221A               	addwfc	(___aldiv@dividend+1)^0,f,c
  7408  004022  221B               	addwfc	(___aldiv@dividend+2)^0,f,c
  7409  004024  221C               	addwfc	(___aldiv@dividend+3)^0,f,c
  7410  004026  0E01               	movlw	1
  7411  004028  1A22               	xorwf	___aldiv@sign^0,f,c
  7412  00402A                     l10682:
  7413  00402A  0E00               	movlw	0
  7414  00402C  6E23               	movwf	___aldiv@quotient^0,c
  7415  00402E  0E00               	movlw	0
  7416  004030  6E24               	movwf	(___aldiv@quotient+1)^0,c
  7417  004032  0E00               	movlw	0
  7418  004034  6E25               	movwf	(___aldiv@quotient+2)^0,c
  7419  004036  0E00               	movlw	0
  7420  004038  6E26               	movwf	(___aldiv@quotient+3)^0,c
  7421  00403A  501D               	movf	___aldiv@divisor^0,w,c
  7422  00403C  101E               	iorwf	(___aldiv@divisor+1)^0,w,c
  7423  00403E  101F               	iorwf	(___aldiv@divisor+2)^0,w,c
  7424  004040  1020               	iorwf	(___aldiv@divisor+3)^0,w,c
  7425  004042  B4D8               	btfsc	status,2,c
  7426  004044  D02A               	goto	l10704
  7427  004046  0E01               	movlw	1
  7428  004048  6E21               	movwf	___aldiv@counter^0,c
  7429  00404A  D006               	goto	l10690
  7430  00404C                     l10688:
  7431  00404C  90D8               	bcf	status,0,c
  7432  00404E  361D               	rlcf	___aldiv@divisor^0,f,c
  7433  004050  361E               	rlcf	(___aldiv@divisor+1)^0,f,c
  7434  004052  361F               	rlcf	(___aldiv@divisor+2)^0,f,c
  7435  004054  3620               	rlcf	(___aldiv@divisor+3)^0,f,c
  7436  004056  2A21               	incf	___aldiv@counter^0,f,c
  7437  004058                     l10690:
  7438  004058  AE20               	btfss	(___aldiv@divisor+3)^0,7,c
  7439  00405A  D7F8               	goto	l10688
  7440  00405C                     u12680:
  7441  00405C  90D8               	bcf	status,0,c
  7442  00405E  3623               	rlcf	___aldiv@quotient^0,f,c
  7443  004060  3624               	rlcf	(___aldiv@quotient+1)^0,f,c
  7444  004062  3625               	rlcf	(___aldiv@quotient+2)^0,f,c
  7445  004064  3626               	rlcf	(___aldiv@quotient+3)^0,f,c
  7446  004066  501D               	movf	___aldiv@divisor^0,w,c
  7447  004068  5C19               	subwf	___aldiv@dividend^0,w,c
  7448  00406A  501E               	movf	(___aldiv@divisor+1)^0,w,c
  7449  00406C  581A               	subwfb	(___aldiv@dividend+1)^0,w,c
  7450  00406E  501F               	movf	(___aldiv@divisor+2)^0,w,c
  7451  004070  581B               	subwfb	(___aldiv@dividend+2)^0,w,c
  7452  004072  5020               	movf	(___aldiv@divisor+3)^0,w,c
  7453  004074  581C               	subwfb	(___aldiv@dividend+3)^0,w,c
  7454  004076  A0D8               	btfss	status,0,c
  7455  004078  D009               	goto	l10700
  7456  00407A  501D               	movf	___aldiv@divisor^0,w,c
  7457  00407C  5E19               	subwf	___aldiv@dividend^0,f,c
  7458  00407E  501E               	movf	(___aldiv@divisor+1)^0,w,c
  7459  004080  5A1A               	subwfb	(___aldiv@dividend+1)^0,f,c
  7460  004082  501F               	movf	(___aldiv@divisor+2)^0,w,c
  7461  004084  5A1B               	subwfb	(___aldiv@dividend+2)^0,f,c
  7462  004086  5020               	movf	(___aldiv@divisor+3)^0,w,c
  7463  004088  5A1C               	subwfb	(___aldiv@dividend+3)^0,f,c
  7464  00408A  8023               	bsf	___aldiv@quotient^0,0,c
  7465  00408C                     l10700:
  7466  00408C  90D8               	bcf	status,0,c
  7467  00408E  3220               	rrcf	(___aldiv@divisor+3)^0,f,c
  7468  004090  321F               	rrcf	(___aldiv@divisor+2)^0,f,c
  7469  004092  321E               	rrcf	(___aldiv@divisor+1)^0,f,c
  7470  004094  321D               	rrcf	___aldiv@divisor^0,f,c
  7471  004096  2E21               	decfsz	___aldiv@counter^0,f,c
  7472  004098  D7E1               	goto	u12680
  7473  00409A                     l10704:
  7474  00409A  5022               	movf	___aldiv@sign^0,w,c
  7475  00409C  B4D8               	btfsc	status,2,c
  7476  00409E  D008               	goto	l10708
  7477  0040A0  1E26               	comf	(___aldiv@quotient+3)^0,f,c
  7478  0040A2  1E25               	comf	(___aldiv@quotient+2)^0,f,c
  7479  0040A4  1E24               	comf	(___aldiv@quotient+1)^0,f,c
  7480  0040A6  6C23               	negf	___aldiv@quotient^0,c
  7481  0040A8  0E00               	movlw	0
  7482  0040AA  2224               	addwfc	(___aldiv@quotient+1)^0,f,c
  7483  0040AC  2225               	addwfc	(___aldiv@quotient+2)^0,f,c
  7484  0040AE  2226               	addwfc	(___aldiv@quotient+3)^0,f,c
  7485  0040B0                     l10708:
  7486  0040B0  C023  F019         	movff	___aldiv@quotient,?___aldiv
  7487  0040B4  C024  F01A         	movff	___aldiv@quotient+1,?___aldiv+1
  7488  0040B8  C025  F01B         	movff	___aldiv@quotient+2,?___aldiv+2
  7489  0040BC  C026  F01C         	movff	___aldiv@quotient+3,?___aldiv+3
  7490  0040C0  0012               	return		;funcret
  7491  0040C2                     __end_of___aldiv:
  7492                           	callstack 0
  7493                           
  7494 ;; *************** function _inicializa_SPI *****************
  7495 ;; Defined at:
  7496 ;;		line 48 in file "bibliotecas/SPI.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      void 
  7503 ;; Registers used:
  7504 ;;		wreg, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 3F/0
  7507 ;;		On exit  : 3F/0
  7508 ;;		Unchanged: 3F/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7510 ;;      Params:         0       0       0       0       0       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    3
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_escrita_sdcard
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text41
  7525  0054D6                     __ptext41:
  7526                           	callstack 0
  7527  0054D6                     _inicializa_SPI:
  7528                           	callstack 24
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  7532                           
  7533                           ;incstack = 0
  7534  0054D6  9293               	bcf	147,1,c	;volatile
  7535                           
  7536                           ;SPI.c: 51: TRISBbits.RB4 = 0;
  7537  0054D8  9893               	bcf	147,4,c	;volatile
  7538                           
  7539                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  7540  0054DA  8093               	bsf	147,0,c	;volatile
  7541                           
  7542                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  7543  0054DC  9E94               	bcf	148,7,c	;volatile
  7544                           
  7545                           ;SPI.c: 55: LATBbits.LATB4 = 1;
  7546  0054DE  888A               	bsf	138,4,c	;volatile
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  7550  0054E0  0E3F               	movlw	63
  7551  0054E2  16C7               	andwf	199,f,c	;volatile
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;SPI.c: 57: SSPCON1 = 0x00;
  7555  0054E4  0E00               	movlw	0
  7556  0054E6  6EC6               	movwf	198,c	;volatile
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  7560  0054E8  9EC7               	bcf	199,7,c	;volatile
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  7564  0054EA  8CC7               	bsf	199,6,c	;volatile
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  7568  0054EC  98C6               	bcf	198,4,c	;volatile
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  7572  0054EE  0E03               	movlw	3
  7573  0054F0  6EC6               	movwf	198,c	;volatile
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  7577  0054F2  8AC6               	bsf	198,5,c	;volatile
  7578                           
  7579                           ; BSR set to: 0
  7580  0054F4  0012               	return		;funcret
  7581  0054F6                     __end_of_inicializa_SPI:
  7582                           	callstack 0
  7583                           
  7584 ;; *************** function _fprintf *****************
  7585 ;; Defined at:
  7586 ;;		line 1816 in file "bibliotecas/tff.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  fil             2  122[BANK0 ] PTR struct _FIL
  7589 ;;		 -> fil(28), 
  7590 ;;  str             2  124[BANK0 ] PTR const unsigned char 
  7591 ;;		 -> STR_16(39), 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  s              16    0[BANK2 ] unsigned char [16]
  7594 ;;  val             4   24[BANK2 ] unsigned long 
  7595 ;;  i               2   31[BANK2 ] int 
  7596 ;;  cc              2   29[BANK2 ] int 
  7597 ;;  w               2   20[BANK2 ] int 
  7598 ;;  res             2   16[BANK2 ] int 
  7599 ;;  c               1   33[BANK2 ] unsigned char 
  7600 ;;  arp             1   28[BANK2 ] PTR void [1]
  7601 ;;		 -> ?_fprintf(2), 
  7602 ;;  r               1   23[BANK2 ] unsigned char 
  7603 ;;  f               1   22[BANK2 ] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2  122[BANK0 ] int 
  7606 ;; Registers used:
  7607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 3F/0
  7610 ;;		On exit  : 3F/2
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7613 ;;      Params:         0      22       0       0       0       0       0       0       0
  7614 ;;      Locals:         0       0       0      34       0       0       0       0       0
  7615 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7616 ;;      Totals:         0      24       0      34       0       0       0       0       0
  7617 ;;Total ram usage:       58 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:   14
  7620 ;; This function calls:
  7621 ;;		___lldiv
  7622 ;;		___llmod
  7623 ;;		___wmul
  7624 ;;		_fputc
  7625 ;;		_fputs
  7626 ;; This function is called by:
  7627 ;;		_escrita_sdcard
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text42
  7632  000F6E                     __ptext42:
  7633                           	callstack 0
  7634  000F6E                     _fprintf:
  7635                           	callstack 13
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;incstack = 0
  7642  000F6E  0EDE               	movlw	low (?_fprintf+4)
  7643  000F70  0102               	movlb	2	; () banked
  7644  000F72  6FB9               	movwf	fprintf@arp& (0+255),b
  7645                           
  7646                           ; BSR set to: 2
  7647                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  7648  000F74  0E00               	movlw	0
  7649  000F76  6FAE               	movwf	(fprintf@res+1)& (0+255),b
  7650  000F78  0E00               	movlw	0
  7651  000F7A  6FAD               	movwf	fprintf@res& (0+255),b
  7652  000F7C  C2AD  F2BA         	movff	fprintf@res,fprintf@cc
  7653  000F80  C2AE  F2BB         	movff	fprintf@res+1,fprintf@cc+1
  7654  000F84                     l11408:
  7655                           
  7656                           ; BSR set to: 2
  7657  000F84  29BA               	incf	fprintf@cc& (0+255),w,b
  7658  000F86  E103               	bnz	l11412
  7659  000F88  29BB               	incf	(fprintf@cc+1)& (0+255),w,b
  7660  000F8A  B4D8               	btfsc	status,2,c
  7661  000F8C  0012               	return	
  7662  000F8E                     l11412:
  7663                           
  7664                           ; BSR set to: 2
  7665                           ;tff.c: 1832: c = *str++;
  7666  000F8E  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7667  000F92  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7668  000F96                     	if	0	;tblptru may be non-zero
  7669  000F96                     	endif
  7670  000F96                     	if	0	;tblptru may be non-zero
  7671  000F96                     	endif
  7672  000F96  0008               	tblrd		*
  7673  000F98  CFF5 F2BE          	movff	tablat,fprintf@c
  7674                           
  7675                           ; BSR set to: 2
  7676  000F9C  0100               	movlb	0	; () banked
  7677  000F9E  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7678  000FA0  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;tff.c: 1833: if (c == 0) break;
  7682  000FA2  0102               	movlb	2	; () banked
  7683  000FA4  51BE               	movf	fprintf@c& (0+255),w,b
  7684  000FA6  B4D8               	btfsc	status,2,c
  7685  000FA8  0012               	return	
  7686                           
  7687                           ; BSR set to: 2
  7688                           ;tff.c: 1834: if (c != '%') {
  7689  000FAA  0E25               	movlw	37
  7690  000FAC  19BE               	xorwf	fprintf@c& (0+255),w,b
  7691  000FAE  B4D8               	btfsc	status,2,c
  7692  000FB0  D019               	goto	l11428
  7693                           
  7694                           ; BSR set to: 2
  7695                           ;tff.c: 1835: cc = fputc(c, fil);
  7696  000FB2  C2BE  F0CC         	movff	fprintf@c,fputc@chr
  7697  000FB6  0100               	movlb	0	; () banked
  7698  000FB8  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  7699  000FBA  C0DA  F0CE         	movff	fprintf@fil,fputc@fil
  7700  000FBE  C0DB  F0CF         	movff	fprintf@fil+1,fputc@fil+1
  7701  000FC2  ECC5  F028         	call	_fputc	;wreg free
  7702  000FC6  C0CC  F2BA         	movff	?_fputc,fprintf@cc
  7703  000FCA  C0CD  F2BB         	movff	?_fputc+1,fprintf@cc+1
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;tff.c: 1836: if (cc != -1) cc = 1;
  7707  000FCE  0102               	movlb	2	; () banked
  7708  000FD0  29BA               	incf	fprintf@cc& (0+255),w,b
  7709  000FD2  E103               	bnz	u13960
  7710  000FD4  29BB               	incf	(fprintf@cc+1)& (0+255),w,b
  7711  000FD6  B4D8               	btfsc	status,2,c
  7712  000FD8  D183               	goto	l11552
  7713  000FDA                     u13960:
  7714                           
  7715                           ; BSR set to: 2
  7716  000FDA  0E00               	movlw	0
  7717  000FDC  6FBB               	movwf	(fprintf@cc+1)& (0+255),b
  7718  000FDE  0E01               	movlw	1
  7719  000FE0  6FBA               	movwf	fprintf@cc& (0+255),b
  7720  000FE2  D17E               	goto	l11552
  7721  000FE4                     l11428:
  7722                           
  7723                           ; BSR set to: 2
  7724                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  7725  000FE4  0E00               	movlw	0
  7726  000FE6  6FB3               	movwf	fprintf@f& (0+255),b
  7727  000FE8  C2B3  F2B1         	movff	fprintf@f,fprintf@w
  7728  000FEC  6BB2               	clrf	(fprintf@w+1)& (0+255),b
  7729                           
  7730                           ; BSR set to: 2
  7731                           ;tff.c: 1840: c = *str++;
  7732  000FEE  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7733  000FF2  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7734  000FF6                     	if	0	;tblptru may be non-zero
  7735  000FF6                     	endif
  7736  000FF6                     	if	0	;tblptru may be non-zero
  7737  000FF6                     	endif
  7738  000FF6  0008               	tblrd		*
  7739  000FF8  CFF5 F2BE          	movff	tablat,fprintf@c
  7740                           
  7741                           ; BSR set to: 2
  7742  000FFC  0100               	movlb	0	; () banked
  7743  000FFE  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7744  001000  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;tff.c: 1841: if (c == '0') {
  7748  001002  0E30               	movlw	48
  7749  001004  0102               	movlb	2	; () banked
  7750  001006  19BE               	xorwf	fprintf@c& (0+255),w,b
  7751  001008  A4D8               	btfss	status,2,c
  7752  00100A  D023               	goto	l11448
  7753                           
  7754                           ; BSR set to: 2
  7755                           ;tff.c: 1842: f = 1; c = *str++;
  7756  00100C  0E01               	movlw	1
  7757  00100E  6FB3               	movwf	fprintf@f& (0+255),b
  7758  001010                     l11438:
  7759                           
  7760                           ; BSR set to: 2
  7761  001010  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7762  001014  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7763  001018                     	if	0	;tblptru may be non-zero
  7764  001018                     	endif
  7765  001018                     	if	0	;tblptru may be non-zero
  7766  001018                     	endif
  7767  001018  0008               	tblrd		*
  7768  00101A  CFF5 F2BE          	movff	tablat,fprintf@c
  7769                           
  7770                           ; BSR set to: 2
  7771  00101E  0100               	movlb	0	; () banked
  7772  001020  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7773  001022  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7774  001024  D016               	goto	l11448
  7775  001026                     l11442:
  7776                           
  7777                           ; BSR set to: 2
  7778                           ;tff.c: 1845: w = w * 10 + (c - '0');
  7779  001026  C2B1  F019         	movff	fprintf@w,___wmul@multiplier
  7780  00102A  C2B2  F01A         	movff	fprintf@w+1,___wmul@multiplier+1
  7781  00102E  0E00               	movlw	0
  7782  001030  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
  7783  001032  0E0A               	movlw	10
  7784  001034  6E1B               	movwf	___wmul@multiplicand^0,c
  7785  001036  ECBE  F029         	call	___wmul	;wreg free
  7786  00103A  0102               	movlb	2	; () banked
  7787  00103C  51BE               	movf	fprintf@c& (0+255),w,b
  7788  00103E  2619               	addwf	?___wmul^0,f,c
  7789  001040  0E00               	movlw	0
  7790  001042  221A               	addwfc	(?___wmul+1)^0,f,c
  7791  001044  0ED0               	movlw	208
  7792  001046  2419               	addwf	?___wmul^0,w,c
  7793  001048  6FB1               	movwf	fprintf@w& (0+255),b
  7794  00104A  0EFF               	movlw	255
  7795  00104C  201A               	addwfc	(?___wmul+1)^0,w,c
  7796  00104E  6FB2               	movwf	(fprintf@w+1)& (0+255),b
  7797  001050  D7DF               	goto	l11438
  7798  001052                     l11448:
  7799  001052  0E2F               	movlw	47
  7800  001054  0102               	movlb	2	; () banked
  7801  001056  65BE               	cpfsgt	fprintf@c& (0+255),b
  7802  001058  D003               	goto	u13990
  7803                           
  7804                           ; BSR set to: 2
  7805  00105A  0E39               	movlw	57
  7806  00105C  65BE               	cpfsgt	fprintf@c& (0+255),b
  7807  00105E  D7E3               	goto	l11442
  7808  001060                     u13990:
  7809                           
  7810                           ; BSR set to: 2
  7811                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  7812  001060  0E6C               	movlw	108
  7813  001062  19BE               	xorwf	fprintf@c& (0+255),w,b
  7814  001064  A4D8               	btfss	status,2,c
  7815  001066  D00B               	goto	l11460
  7816                           
  7817                           ; BSR set to: 2
  7818                           ;tff.c: 1849: f |= 2; c = *str++;
  7819  001068  83B3               	bsf	fprintf@f& (0+255),1,b
  7820                           
  7821                           ; BSR set to: 2
  7822  00106A  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7823  00106E  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7824  001072                     	if	0	;tblptru may be non-zero
  7825  001072                     	endif
  7826  001072                     	if	0	;tblptru may be non-zero
  7827  001072                     	endif
  7828  001072  0008               	tblrd		*
  7829  001074  CFF5 F2BE          	movff	tablat,fprintf@c
  7830                           
  7831                           ; BSR set to: 2
  7832  001078  0100               	movlb	0	; () banked
  7833  00107A  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7834  00107C  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7835  00107E                     l11460:
  7836                           
  7837                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  7838  00107E  0E73               	movlw	115
  7839  001080  0102               	movlb	2	; () banked
  7840  001082  19BE               	xorwf	fprintf@c& (0+255),w,b
  7841  001084  A4D8               	btfss	status,2,c
  7842  001086  D015               	goto	l11466
  7843                           
  7844                           ; BSR set to: 2
  7845                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  7846  001088  51B9               	movf	fprintf@arp& (0+255),w,b
  7847  00108A  6ED9               	movwf	fsr2l,c
  7848  00108C  6ADA               	clrf	fsr2h,c
  7849  00108E  CFDE F0D3          	movff	postinc2,fputs@str
  7850  001092  CFDD F0D4          	movff	postdec2,fputs@str+1
  7851  001096  C0DA  F0D5         	movff	fprintf@fil,fputs@fil
  7852  00109A  C0DB  F0D6         	movff	fprintf@fil+1,fputs@fil+1
  7853  00109E  ECCE  F023         	call	_fputs	;wreg free
  7854  0010A2  C0D3  F2BA         	movff	?_fputs,fprintf@cc
  7855  0010A6  C0D4  F2BB         	movff	?_fputs+1,fprintf@cc+1
  7856  0010AA  0E02               	movlw	2
  7857  0010AC  0102               	movlb	2	; () banked
  7858  0010AE  27B9               	addwf	fprintf@arp& (0+255),f,b
  7859                           
  7860                           ;tff.c: 1853: continue;
  7861  0010B0  D117               	goto	l11552
  7862  0010B2                     l11466:
  7863                           
  7864                           ; BSR set to: 2
  7865                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  7866  0010B2  0E63               	movlw	99
  7867  0010B4  19BE               	xorwf	fprintf@c& (0+255),w,b
  7868  0010B6  A4D8               	btfss	status,2,c
  7869  0010B8  D01D               	goto	l11476
  7870                           
  7871                           ; BSR set to: 2
  7872                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  7873  0010BA  51B9               	movf	fprintf@arp& (0+255),w,b
  7874  0010BC  6ED9               	movwf	fsr2l,c
  7875  0010BE  6ADA               	clrf	fsr2h,c
  7876  0010C0  50DF               	movf	indf2,w,c
  7877  0010C2  0100               	movlb	0	; () banked
  7878  0010C4  6FF0               	movwf	??_fprintf& (0+255),b
  7879  0010C6  51F0               	movf	??_fprintf& (0+255),w,b
  7880  0010C8  6FCC               	movwf	fputc@chr& (0+255),b
  7881  0010CA  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  7882  0010CC  C0DA  F0CE         	movff	fprintf@fil,fputc@fil
  7883  0010D0  C0DB  F0CF         	movff	fprintf@fil+1,fputc@fil+1
  7884  0010D4  ECC5  F028         	call	_fputc	;wreg free
  7885  0010D8  C0CC  F2BA         	movff	?_fputc,fprintf@cc
  7886  0010DC  C0CD  F2BB         	movff	?_fputc+1,fprintf@cc+1
  7887                           
  7888                           ; BSR set to: 0
  7889  0010E0  0E02               	movlw	2
  7890  0010E2  0102               	movlb	2	; () banked
  7891  0010E4  27B9               	addwf	fprintf@arp& (0+255),f,b
  7892                           
  7893                           ; BSR set to: 2
  7894                           ;tff.c: 1857: if (cc != -1) cc = 1;
  7895  0010E6  29BA               	incf	fprintf@cc& (0+255),w,b
  7896  0010E8  E104               	bnz	u14030
  7897  0010EA  29BB               	incf	(fprintf@cc+1)& (0+255),w,b
  7898  0010EC  A4D8               	btfss	status,2,c
  7899  0010EE  D775               	goto	u13960
  7900  0010F0  D0F7               	goto	l11552
  7901  0010F2                     u14030:
  7902  0010F2  D773               	goto	u13960
  7903  0010F4                     l11476:
  7904                           
  7905                           ; BSR set to: 2
  7906                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  7907  0010F4  0E00               	movlw	0
  7908  0010F6  6FB4               	movwf	fprintf@r& (0+255),b
  7909                           
  7910                           ; BSR set to: 2
  7911                           ;tff.c: 1861: if (c == 'd') r = 10;
  7912  0010F8  0E64               	movlw	100
  7913  0010FA  19BE               	xorwf	fprintf@c& (0+255),w,b
  7914  0010FC  A4D8               	btfss	status,2,c
  7915  0010FE  D002               	goto	l11482
  7916                           
  7917                           ; BSR set to: 2
  7918  001100  0E0A               	movlw	10
  7919  001102  6FB4               	movwf	fprintf@r& (0+255),b
  7920  001104                     l11482:
  7921                           
  7922                           ; BSR set to: 2
  7923                           ;tff.c: 1862: if (c == 'u') r = 10;
  7924  001104  0E75               	movlw	117
  7925  001106  19BE               	xorwf	fprintf@c& (0+255),w,b
  7926  001108  A4D8               	btfss	status,2,c
  7927  00110A  D002               	goto	l11486
  7928                           
  7929                           ; BSR set to: 2
  7930  00110C  0E0A               	movlw	10
  7931  00110E  6FB4               	movwf	fprintf@r& (0+255),b
  7932  001110                     l11486:
  7933                           
  7934                           ; BSR set to: 2
  7935                           ;tff.c: 1863: if (c == 'X') r = 16;
  7936  001110  0E58               	movlw	88
  7937  001112  19BE               	xorwf	fprintf@c& (0+255),w,b
  7938  001114  A4D8               	btfss	status,2,c
  7939  001116  D002               	goto	l1138
  7940                           
  7941                           ; BSR set to: 2
  7942  001118  0E10               	movlw	16
  7943  00111A  6FB4               	movwf	fprintf@r& (0+255),b
  7944  00111C                     l1138:
  7945                           
  7946                           ; BSR set to: 2
  7947                           ;tff.c: 1864: if (r == 0) break;
  7948  00111C  51B4               	movf	fprintf@r& (0+255),w,b
  7949  00111E  B4D8               	btfsc	status,2,c
  7950  001120  0012               	return	
  7951                           
  7952                           ; BSR set to: 2
  7953                           ;tff.c: 1865: if (f & 2) {
  7954  001122  A3B3               	btfss	fprintf@f& (0+255),1,b
  7955  001124  D00D               	goto	l11496
  7956                           
  7957                           ; BSR set to: 2
  7958                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  7959  001126  51B9               	movf	fprintf@arp& (0+255),w,b
  7960  001128  6ED9               	movwf	fsr2l,c
  7961  00112A  6ADA               	clrf	fsr2h,c
  7962  00112C  CFDE F2B5          	movff	postinc2,fprintf@val
  7963  001130  CFDE F2B6          	movff	postinc2,fprintf@val+1
  7964  001134  CFDE F2B7          	movff	postinc2,fprintf@val+2
  7965  001138  CFDE F2B8          	movff	postinc2,fprintf@val+3
  7966                           
  7967                           ; BSR set to: 2
  7968  00113C  0E04               	movlw	4
  7969  00113E  D01F               	goto	L1
  7970  001140                     l11496:
  7971                           
  7972                           ; BSR set to: 2
  7973                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  7974  001140  0E64               	movlw	100
  7975  001142  19BE               	xorwf	fprintf@c& (0+255),w,b
  7976  001144  B4D8               	btfsc	status,2,c
  7977  001146  D00E               	goto	l11502
  7978                           
  7979                           ; BSR set to: 2
  7980  001148  51B9               	movf	fprintf@arp& (0+255),w,b
  7981  00114A  6ED9               	movwf	fsr2l,c
  7982  00114C  6ADA               	clrf	fsr2h,c
  7983  00114E  CFDE F0F0          	movff	postinc2,??_fprintf
  7984  001152  CFDD F0F1          	movff	postdec2,??_fprintf+1
  7985  001156  C0F0  F2B5         	movff	??_fprintf,fprintf@val
  7986  00115A  C0F1  F2B6         	movff	??_fprintf+1,fprintf@val+1
  7987  00115E  6BB7               	clrf	(fprintf@val+2)& (0+255),b
  7988  001160  6BB8               	clrf	(fprintf@val+3)& (0+255),b
  7989  001162  D00C               	goto	l11504
  7990  001164                     l11502:
  7991                           
  7992                           ; BSR set to: 2
  7993  001164  51B9               	movf	fprintf@arp& (0+255),w,b
  7994  001166  6ED9               	movwf	fsr2l,c
  7995  001168  6ADA               	clrf	fsr2h,c
  7996  00116A  CFDE F2B5          	movff	postinc2,fprintf@val
  7997  00116E  CFDD F2B6          	movff	postdec2,fprintf@val+1
  7998  001172  0E00               	movlw	0
  7999  001174  BFB6               	btfsc	(fprintf@val+1)& (0+255),7,b
  8000  001176  0EFF               	movlw	-1
  8001  001178  6FB7               	movwf	(fprintf@val+2)& (0+255),b
  8002  00117A  6FB8               	movwf	(fprintf@val+3)& (0+255),b
  8003  00117C                     l11504:
  8004                           
  8005                           ; BSR set to: 2
  8006  00117C  0E02               	movlw	2
  8007  00117E                     L1:
  8008  00117E  27B9               	addwf	fprintf@arp& (0+255),f,b
  8009                           
  8010                           ; BSR set to: 2
  8011                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  8012  001180  0E64               	movlw	100
  8013  001182  19BE               	xorwf	fprintf@c& (0+255),w,b
  8014  001184  A4D8               	btfss	status,2,c
  8015  001186  D00E               	goto	l11514
  8016                           
  8017                           ; BSR set to: 2
  8018                           ;tff.c: 1872: if (val >= 0x80000000) {
  8019  001188  0E80               	movlw	128
  8020  00118A  5DB8               	subwf	(fprintf@val+3)& (0+255),w,b
  8021  00118C  A0D8               	btfss	status,0,c
  8022  00118E  D00A               	goto	l11514
  8023                           
  8024                           ; BSR set to: 2
  8025                           ;tff.c: 1873: val = 0 - val;
  8026  001190  6DB5               	negf	fprintf@val& (0+255),b
  8027  001192  1FB6               	comf	(fprintf@val+1)& (0+255),f,b
  8028  001194  B0D8               	btfsc	status,0,c
  8029  001196  2BB6               	incf	(fprintf@val+1)& (0+255),f,b
  8030  001198  1FB7               	comf	(fprintf@val+2)& (0+255),f,b
  8031  00119A  B0D8               	btfsc	status,0,c
  8032  00119C  2BB7               	incf	(fprintf@val+2)& (0+255),f,b
  8033  00119E  0E00               	movlw	0
  8034  0011A0  57B8               	subfwb	(fprintf@val+3)& (0+255),f,b
  8035                           
  8036                           ; BSR set to: 2
  8037                           ;tff.c: 1874: f |= 4;
  8038  0011A2  85B3               	bsf	fprintf@f& (0+255),2,b
  8039  0011A4                     l11514:
  8040                           
  8041                           ; BSR set to: 2
  8042                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  8043  0011A4  0E00               	movlw	0
  8044  0011A6  6FBD               	movwf	(fprintf@i+1)& (0+255),b
  8045  0011A8  0E0F               	movlw	15
  8046  0011AA  6FBC               	movwf	fprintf@i& (0+255),b
  8047                           
  8048                           ; BSR set to: 2
  8049  0011AC  0E00               	movlw	0
  8050  0011AE  6FAC               	movwf	(fprintf@s+15)& (0+255),b
  8051  0011B0                     l11518:
  8052                           
  8053                           ; BSR set to: 2
  8054                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  8055  0011B0  C2B5  F019         	movff	fprintf@val,___llmod@dividend
  8056  0011B4  C2B6  F01A         	movff	fprintf@val+1,___llmod@dividend+1
  8057  0011B8  C2B7  F01B         	movff	fprintf@val+2,___llmod@dividend+2
  8058  0011BC  C2B8  F01C         	movff	fprintf@val+3,___llmod@dividend+3
  8059  0011C0  51B4               	movf	fprintf@r& (0+255),w,b
  8060  0011C2  6E1D               	movwf	___llmod@divisor^0,c
  8061  0011C4  6A1E               	clrf	(___llmod@divisor+1)^0,c
  8062  0011C6  6A1F               	clrf	(___llmod@divisor+2)^0,c
  8063  0011C8  6A20               	clrf	(___llmod@divisor+3)^0,c
  8064  0011CA  ECE4  F025         	call	___llmod	;wreg free
  8065  0011CE  5019               	movf	?___llmod^0,w,c
  8066  0011D0  0F30               	addlw	48
  8067  0011D2  6FBE               	movwf	fprintf@c& (0+255),b
  8068                           
  8069                           ; BSR set to: 2
  8070                           ;tff.c: 1880: if (c > '9') c += 7;
  8071  0011D4  0E39               	movlw	57
  8072  0011D6  65BE               	cpfsgt	fprintf@c& (0+255),b
  8073  0011D8  D002               	goto	l11524
  8074                           
  8075                           ; BSR set to: 2
  8076  0011DA  0E07               	movlw	7
  8077  0011DC  27BE               	addwf	fprintf@c& (0+255),f,b
  8078  0011DE                     l11524:
  8079                           
  8080                           ; BSR set to: 2
  8081                           ;tff.c: 1881: s[--i] = c;
  8082  0011DE  07BC               	decf	fprintf@i& (0+255),f,b
  8083  0011E0  A0D8               	btfss	status,0,c
  8084  0011E2  07BD               	decf	(fprintf@i+1)& (0+255),f,b
  8085  0011E4  0E9D               	movlw	low fprintf@s
  8086  0011E6  25BC               	addwf	fprintf@i& (0+255),w,b
  8087  0011E8  6ED9               	movwf	fsr2l,c
  8088  0011EA  0E02               	movlw	high fprintf@s
  8089  0011EC  21BD               	addwfc	(fprintf@i+1)& (0+255),w,b
  8090  0011EE  6EDA               	movwf	fsr2h,c
  8091  0011F0  C2BE  FFDF         	movff	fprintf@c,indf2
  8092                           
  8093                           ; BSR set to: 2
  8094                           ;tff.c: 1882: val /= r;
  8095  0011F4  C2B5  F019         	movff	fprintf@val,___lldiv@dividend
  8096  0011F8  C2B6  F01A         	movff	fprintf@val+1,___lldiv@dividend+1
  8097  0011FC  C2B7  F01B         	movff	fprintf@val+2,___lldiv@dividend+2
  8098  001200  C2B8  F01C         	movff	fprintf@val+3,___lldiv@dividend+3
  8099  001204  51B4               	movf	fprintf@r& (0+255),w,b
  8100  001206  6E1D               	movwf	___lldiv@divisor^0,c
  8101  001208  6A1E               	clrf	(___lldiv@divisor+1)^0,c
  8102  00120A  6A1F               	clrf	(___lldiv@divisor+2)^0,c
  8103  00120C  6A20               	clrf	(___lldiv@divisor+3)^0,c
  8104  00120E  EC54  F024         	call	___lldiv	;wreg free
  8105  001212  C019  F2B5         	movff	?___lldiv,fprintf@val
  8106  001216  C01A  F2B6         	movff	?___lldiv+1,fprintf@val+1
  8107  00121A  C01B  F2B7         	movff	?___lldiv+2,fprintf@val+2
  8108  00121E  C01C  F2B8         	movff	?___lldiv+3,fprintf@val+3
  8109                           
  8110                           ;tff.c: 1883: } while (i && val);
  8111  001222  0102               	movlb	2	; () banked
  8112  001224  51BC               	movf	fprintf@i& (0+255),w,b
  8113  001226  11BD               	iorwf	(fprintf@i+1)& (0+255),w,b
  8114  001228  B4D8               	btfsc	status,2,c
  8115  00122A  D006               	goto	u14140
  8116                           
  8117                           ; BSR set to: 2
  8118  00122C  51B5               	movf	fprintf@val& (0+255),w,b
  8119  00122E  11B6               	iorwf	(fprintf@val+1)& (0+255),w,b
  8120  001230  11B7               	iorwf	(fprintf@val+2)& (0+255),w,b
  8121  001232  11B8               	iorwf	(fprintf@val+3)& (0+255),w,b
  8122  001234  A4D8               	btfss	status,2,c
  8123  001236  D7BC               	goto	l11518
  8124  001238                     u14140:
  8125                           
  8126                           ; BSR set to: 2
  8127                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
  8128  001238  51BC               	movf	fprintf@i& (0+255),w,b
  8129  00123A  11BD               	iorwf	(fprintf@i+1)& (0+255),w,b
  8130  00123C  A4D8               	btfss	status,2,c
  8131                           
  8132                           ; BSR set to: 2
  8133  00123E  A5B3               	btfss	fprintf@f& (0+255),2,b
  8134  001240  D00B               	goto	l11538
  8135                           
  8136                           ; BSR set to: 2
  8137  001242  07BC               	decf	fprintf@i& (0+255),f,b
  8138  001244  A0D8               	btfss	status,0,c
  8139  001246  07BD               	decf	(fprintf@i+1)& (0+255),f,b
  8140  001248  0E9D               	movlw	low fprintf@s
  8141  00124A  25BC               	addwf	fprintf@i& (0+255),w,b
  8142  00124C  6ED9               	movwf	fsr2l,c
  8143  00124E  0E02               	movlw	high fprintf@s
  8144  001250  21BD               	addwfc	(fprintf@i+1)& (0+255),w,b
  8145  001252  6EDA               	movwf	fsr2h,c
  8146  001254  0E2D               	movlw	45
  8147  001256  6EDF               	movwf	indf2,c
  8148  001258                     l11538:
  8149                           
  8150                           ; BSR set to: 2
  8151                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
  8152  001258  51B1               	movf	fprintf@w& (0+255),w,b
  8153  00125A  080F               	sublw	15
  8154  00125C  6FB1               	movwf	fprintf@w& (0+255),b
  8155  00125E  51B2               	movf	(fprintf@w+1)& (0+255),w,b
  8156  001260  A0D8               	btfss	status,0,c
  8157  001262  2AE8               	incf	wreg,f,c
  8158  001264  0800               	sublw	0
  8159  001266  6FB2               	movwf	(fprintf@w+1)& (0+255),b
  8160                           
  8161                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  8162  001268  D016               	goto	l11546
  8163  00126A                     l1155:
  8164                           
  8165                           ; BSR set to: 0
  8166  00126A  0102               	movlb	2	; () banked
  8167  00126C  B1B3               	btfsc	fprintf@f& (0+255),0,b
  8168  00126E  D004               	goto	l11542
  8169                           
  8170                           ; BSR set to: 2
  8171  001270  0E00               	movlw	0
  8172  001272  6FB0               	movwf	(_fprintf$2139+1)& (0+255),b
  8173  001274  0E20               	movlw	32
  8174  001276  D003               	goto	L2
  8175  001278                     l11542:
  8176                           
  8177                           ; BSR set to: 2
  8178  001278  0E00               	movlw	0
  8179  00127A  6FB0               	movwf	(_fprintf$2139+1)& (0+255),b
  8180  00127C  0E30               	movlw	48
  8181  00127E                     L2:
  8182  00127E  6FAF               	movwf	_fprintf$2139& (0+255),b
  8183                           
  8184                           ; BSR set to: 2
  8185  001280  07BC               	decf	fprintf@i& (0+255),f,b
  8186  001282  A0D8               	btfss	status,0,c
  8187  001284  07BD               	decf	(fprintf@i+1)& (0+255),f,b
  8188  001286  0E9D               	movlw	low fprintf@s
  8189  001288  25BC               	addwf	fprintf@i& (0+255),w,b
  8190  00128A  6ED9               	movwf	fsr2l,c
  8191  00128C  0E02               	movlw	high fprintf@s
  8192  00128E  21BD               	addwfc	(fprintf@i+1)& (0+255),w,b
  8193  001290  6EDA               	movwf	fsr2h,c
  8194  001292  C2AF  FFDF         	movff	_fprintf$2139,indf2
  8195  001296                     l11546:
  8196                           
  8197                           ; BSR set to: 2
  8198  001296  51BC               	movf	fprintf@i& (0+255),w,b
  8199  001298  11BD               	iorwf	(fprintf@i+1)& (0+255),w,b
  8200  00129A  B4D8               	btfsc	status,2,c
  8201  00129C  D00D               	goto	u14190
  8202                           
  8203                           ; BSR set to: 2
  8204  00129E  51BC               	movf	fprintf@i& (0+255),w,b
  8205  0012A0  5DB1               	subwf	fprintf@w& (0+255),w,b
  8206  0012A2  51B2               	movf	(fprintf@w+1)& (0+255),w,b
  8207  0012A4  0A80               	xorlw	128
  8208  0012A6  0100               	movlb	0	; () banked
  8209  0012A8  6FF0               	movwf	??_fprintf& (0+255),b
  8210  0012AA  0102               	movlb	2	; () banked
  8211  0012AC  51BD               	movf	(fprintf@i+1)& (0+255),w,b
  8212  0012AE  0A80               	xorlw	128
  8213  0012B0  0100               	movlb	0	; () banked
  8214  0012B2  59F0               	subwfb	??_fprintf& (0+255),w,b
  8215  0012B4  A0D8               	btfss	status,0,c
  8216  0012B6  D7D9               	goto	l1155
  8217  0012B8                     u14190:
  8218                           
  8219                           ;tff.c: 1887: cc = fputs(&s[i], fil);
  8220  0012B8  0E9D               	movlw	low fprintf@s
  8221  0012BA  0102               	movlb	2	; () banked
  8222  0012BC  25BC               	addwf	fprintf@i& (0+255),w,b
  8223  0012BE  0100               	movlb	0	; () banked
  8224  0012C0  6FD3               	movwf	fputs@str& (0+255),b
  8225  0012C2  0E02               	movlw	high fprintf@s
  8226  0012C4  0102               	movlb	2	; () banked
  8227  0012C6  21BD               	addwfc	(fprintf@i+1)& (0+255),w,b
  8228  0012C8  0100               	movlb	0	; () banked
  8229  0012CA  6FD4               	movwf	(fputs@str+1)& (0+255),b
  8230  0012CC  C0DA  F0D5         	movff	fprintf@fil,fputs@fil
  8231  0012D0  C0DB  F0D6         	movff	fprintf@fil+1,fputs@fil+1
  8232  0012D4  ECCE  F023         	call	_fputs	;wreg free
  8233  0012D8  C0D3  F2BA         	movff	?_fputs,fprintf@cc
  8234  0012DC  C0D4  F2BB         	movff	?_fputs+1,fprintf@cc+1
  8235  0012E0                     l11552:
  8236  0012E0  0102               	movlb	2	; () banked
  8237  0012E2  51BA               	movf	fprintf@cc& (0+255),w,b
  8238  0012E4  27AD               	addwf	fprintf@res& (0+255),f,b
  8239  0012E6  51BB               	movf	(fprintf@cc+1)& (0+255),w,b
  8240  0012E8  23AE               	addwfc	(fprintf@res+1)& (0+255),f,b
  8241  0012EA  D64C               	goto	l11408
  8242  0012EC                     __end_of_fprintf:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _fputs *****************
  8246 ;; Defined at:
  8247 ;;		line 1796 in file "bibliotecas/tff.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  str             2  115[BANK0 ] PTR const unsigned char 
  8250 ;;		 -> fprintf@s(16), ?_fprintf(2), STR_21(16), STR_20(27), 
  8251 ;;		 -> STR_19(17), STR_18(16), STR_17(16), string_dado(73), 
  8252 ;;  fil             2  117[BANK0 ] PTR struct _FIL
  8253 ;;		 -> fil(28), 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  n               2  120[BANK0 ] int 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  2  115[BANK0 ] int 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 3D/2
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8265 ;;      Params:         0       4       0       0       0       0       0       0       0
  8266 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8267 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8268 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8269 ;;Total ram usage:        7 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:   13
  8272 ;; This function calls:
  8273 ;;		_fputc
  8274 ;; This function is called by:
  8275 ;;		_fprintf
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text43
  8280  00479C                     __ptext43:
  8281                           	callstack 0
  8282  00479C                     _fputs:
  8283                           	callstack 13
  8284                           
  8285                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
  8286                           
  8287                           ; BSR set to: 2
  8288                           ;incstack = 0
  8289  00479C  0E00               	movlw	0
  8290  00479E  0100               	movlb	0	; () banked
  8291  0047A0  6FD9               	movwf	(fputs@n+1)& (0+255),b
  8292  0047A2  0E00               	movlw	0
  8293  0047A4  6FD8               	movwf	fputs@n& (0+255),b
  8294  0047A6  D027               	goto	l11098
  8295  0047A8                     l11092:
  8296                           
  8297                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
  8298  0047A8  C0D3  FFF6         	movff	fputs@str,tblptrl
  8299  0047AC  C0D4  FFF7         	movff	fputs@str+1,tblptrh
  8300  0047B0  6AF8               	clrf	tblptru,c
  8301  0047B2  0E07               	movlw	(high __ramtop+-1)
  8302  0047B4  64F7               	cpfsgt	tblptrh,c
  8303  0047B6  D003               	bra	u13357
  8304  0047B8  0008               	tblrd		*
  8305  0047BA  50F5               	movf	tablat,w,c
  8306  0047BC  D005               	bra	u13350
  8307  0047BE                     u13357:
  8308  0047BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8309  0047C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8310  0047C6  50E7               	movf	indf1,w,c
  8311  0047C8                     u13350:
  8312  0047C8  0100               	movlb	0	; () banked
  8313  0047CA  6FD7               	movwf	??_fputs& (0+255),b
  8314  0047CC  51D7               	movf	??_fputs& (0+255),w,b
  8315  0047CE  6FCC               	movwf	fputc@chr& (0+255),b
  8316  0047D0  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  8317  0047D2  C0D5  F0CE         	movff	fputs@fil,fputc@fil
  8318  0047D6  C0D6  F0CF         	movff	fputs@fil+1,fputc@fil+1
  8319  0047DA  ECC5  F028         	call	_fputc	;wreg free
  8320  0047DE  29CC               	incf	?_fputc& (0+255),w,b
  8321  0047E0  E106               	bnz	l11096
  8322  0047E2  29CD               	incf	(?_fputc+1)& (0+255),w,b
  8323  0047E4  A4D8               	btfss	status,2,c
  8324  0047E6  D003               	goto	l11096
  8325                           
  8326                           ; BSR set to: 0
  8327  0047E8  69D3               	setf	?_fputs& (0+255),b
  8328  0047EA  69D4               	setf	(?_fputs+1)& (0+255),b
  8329  0047EC  0012               	return	
  8330  0047EE                     l11096:
  8331                           
  8332                           ; BSR set to: 0
  8333  0047EE  4BD3               	infsnz	fputs@str& (0+255),f,b
  8334  0047F0  2BD4               	incf	(fputs@str+1)& (0+255),f,b
  8335  0047F2  4BD8               	infsnz	fputs@n& (0+255),f,b
  8336  0047F4  2BD9               	incf	(fputs@n+1)& (0+255),f,b
  8337  0047F6                     l11098:
  8338                           
  8339                           ; BSR set to: 0
  8340  0047F6  C0D3  FFF6         	movff	fputs@str,tblptrl
  8341  0047FA  C0D4  FFF7         	movff	fputs@str+1,tblptrh
  8342  0047FE  6AF8               	clrf	tblptru,c
  8343  004800  0E07               	movlw	(high __ramtop+-1)
  8344  004802  64F7               	cpfsgt	tblptrh,c
  8345  004804  D003               	bra	u13377
  8346  004806  0008               	tblrd		*
  8347  004808  50F5               	movf	tablat,w,c
  8348  00480A  D005               	bra	u13370
  8349  00480C                     u13377:
  8350  00480C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8351  004810  CFF7 FFE2          	movff	tblptrh,fsr1h
  8352  004814  50E7               	movf	indf1,w,c
  8353  004816                     u13370:
  8354  004816  0900               	iorlw	0
  8355  004818  A4D8               	btfss	status,2,c
  8356  00481A  D7C6               	goto	l11092
  8357                           
  8358                           ;tff.c: 1806: };tff.c: 1807: return n;
  8359  00481C  C0D8  F0D3         	movff	fputs@n,?_fputs
  8360  004820  C0D9  F0D4         	movff	fputs@n+1,?_fputs+1
  8361  004824  0012               	return		;funcret
  8362  004826                     __end_of_fputs:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function _fputc *****************
  8366 ;; Defined at:
  8367 ;;		line 1769 in file "bibliotecas/tff.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  chr             2  108[BANK0 ] int 
  8370 ;;  fil             2  110[BANK0 ] PTR struct _FIL
  8371 ;;		 -> fil(28), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  bw              2  113[BANK0 ] unsigned int 
  8374 ;;  c               1  112[BANK0 ] unsigned char 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2  108[BANK0 ] int 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 3F/0
  8381 ;;		On exit  : 3F/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8384 ;;      Params:         0       4       0       0       0       0       0       0       0
  8385 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8387 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8388 ;;Total ram usage:        7 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:   12
  8391 ;; This function calls:
  8392 ;;		_f_write
  8393 ;; This function is called by:
  8394 ;;		_fputs
  8395 ;;		_fprintf
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text44
  8400  00518A                     __ptext44:
  8401                           	callstack 0
  8402  00518A                     _fputc:
  8403                           	callstack 13
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
  8407                           
  8408                           ;incstack = 0
  8409  00518A  51CE               	movf	fputc@fil& (0+255),w,b
  8410  00518C  11CF               	iorwf	(fputc@fil+1)& (0+255),w,b
  8411  00518E  A4D8               	btfss	status,2,c
  8412  005190  D005               	goto	l1105
  8413  005192                     u12600:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;tff.c: 1783: return chr;
  8417  005192  C0CC  F0CC         	movff	fputc@chr,?_fputc
  8418  005196  C0CD  F0CD         	movff	fputc@chr+1,?_fputc+1
  8419  00519A  0012               	return	
  8420  00519C                     l1105:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
  8424  00519C  C0CC  F0D0         	movff	fputc@chr,fputc@c
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
  8428  0051A0  C0CE  F0AE         	movff	fputc@fil,f_write@fp
  8429  0051A4  C0CF  F0AF         	movff	fputc@fil+1,f_write@fp+1
  8430  0051A8  0ED0               	movlw	low fputc@c
  8431  0051AA  6FB0               	movwf	f_write@buff& (0+255),b
  8432  0051AC  0E00               	movlw	0
  8433  0051AE  6FB2               	movwf	(f_write@btw+1)& (0+255),b
  8434  0051B0  0E01               	movlw	1
  8435  0051B2  6FB1               	movwf	f_write@btw& (0+255),b
  8436  0051B4  0ED1               	movlw	low fputc@bw
  8437  0051B6  6FB3               	movwf	f_write@bw& (0+255),b
  8438  0051B8  EC09  F000         	call	_f_write	;wreg free
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;tff.c: 1787: return bw ? chr : -1;
  8442  0051BC  51D1               	movf	fputc@bw& (0+255),w,b
  8443  0051BE  11D2               	iorwf	(fputc@bw+1)& (0+255),w,b
  8444  0051C0  A4D8               	btfss	status,2,c
  8445  0051C2  D7E7               	goto	u12600
  8446                           
  8447                           ; BSR set to: 0
  8448  0051C4  69CC               	setf	?_fputc& (0+255),b
  8449  0051C6  69CD               	setf	(?_fputc+1)& (0+255),b
  8450                           
  8451                           ; BSR set to: 0
  8452  0051C8  0012               	return		;funcret
  8453  0051CA                     __end_of_fputc:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _f_write *****************
  8457 ;; Defined at:
  8458 ;;		line 999 in file "bibliotecas/tff.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  fp              2   78[BANK0 ] PTR struct _FIL
  8461 ;;		 -> fil(28), 
  8462 ;;  buff            1   80[BANK0 ] PTR const void 
  8463 ;;		 -> fputc@c(1), 
  8464 ;;  btw             2   81[BANK0 ] unsigned int 
  8465 ;;  bw              1   83[BANK0 ] PTR unsigned int 
  8466 ;;		 -> fputc@bw(2), 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;  sect            4   98[BANK0 ] unsigned long 
  8469 ;;  wcnt            2  106[BANK0 ] unsigned int 
  8470 ;;  clust           2  104[BANK0 ] unsigned short 
  8471 ;;  cc              2  102[BANK0 ] unsigned int 
  8472 ;;  wbuff           1   97[BANK0 ] PTR const unsigned char 
  8473 ;;		 -> fputc@c(1), 
  8474 ;;  res             1   96[BANK0 ] enum E155
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      enum E155
  8477 ;; Registers used:
  8478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 3F/0
  8481 ;;		On exit  : 3F/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8484 ;;      Params:         0       6       0       0       0       0       0       0       0
  8485 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8486 ;;      Temps:          0      12       0       0       0       0       0       0       0
  8487 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8488 ;;Total ram usage:       30 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:   11
  8491 ;; This function calls:
  8492 ;;		_clust2sect
  8493 ;;		_create_chain
  8494 ;;		_disk_write
  8495 ;;		_memcpy
  8496 ;;		_move_window
  8497 ;;		_validate
  8498 ;; This function is called by:
  8499 ;;		_fputc
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text45
  8504  000012                     __ptext45:
  8505                           	callstack 0
  8506  000012                     _f_write:
  8507                           	callstack 13
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;incstack = 0
  8514  000012  C0B0  F0C1         	movff	f_write@buff,f_write@wbuff
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;tff.c: 1013: *bw = 0;
  8518  000016  51B3               	movf	f_write@bw& (0+255),w,b
  8519  000018  6ED9               	movwf	fsr2l,c
  8520  00001A  6ADA               	clrf	fsr2h,c
  8521  00001C  0E00               	movlw	0
  8522  00001E  6EDE               	movwf	postinc2,c
  8523  000020  0E00               	movlw	0
  8524  000022  6EDD               	movwf	postdec2,c
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
  8528  000024  EE20 F004          	lfsr	2,4
  8529  000028  51AE               	movf	f_write@fp& (0+255),w,b
  8530  00002A  26D9               	addwf	fsr2l,f,c
  8531  00002C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8532  00002E  22DA               	addwfc	fsr2h,f,c
  8533  000030  CFDE F01F          	movff	postinc2,validate@fs
  8534  000034  CFDD F020          	movff	postdec2,validate@fs+1
  8535  000038  C0AE  FFD9         	movff	f_write@fp,fsr2l
  8536  00003C  C0AF  FFDA         	movff	f_write@fp+1,fsr2h
  8537  000040  CFDE F021          	movff	postinc2,validate@id
  8538  000044  CFDD F022          	movff	postdec2,validate@id+1
  8539  000048  ECB4  F027         	call	_validate	;wreg free
  8540  00004C  0100               	movlb	0	; () banked
  8541  00004E  6FC0               	movwf	f_write@res& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;tff.c: 1015: if (res != FR_OK) return res;
  8545  000050  51C0               	movf	f_write@res& (0+255),w,b
  8546  000052  A4D8               	btfss	status,2,c
  8547  000054  0012               	return	
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
  8551  000056  EE20 F002          	lfsr	2,2
  8552  00005A  51AE               	movf	f_write@fp& (0+255),w,b
  8553  00005C  26D9               	addwf	fsr2l,f,c
  8554  00005E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8555  000060  22DA               	addwfc	fsr2h,f,c
  8556  000062  BEDF               	btfsc	indf2,7,c
  8557  000064  0012               	return	
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
  8561  000066  EE20 F002          	lfsr	2,2
  8562  00006A  51AE               	movf	f_write@fp& (0+255),w,b
  8563  00006C  26D9               	addwf	fsr2l,f,c
  8564  00006E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8565  000070  22DA               	addwfc	fsr2h,f,c
  8566  000072  A2DF               	btfss	indf2,1,c
  8567  000074  0012               	return	
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
  8571  000076  EE20 F00A          	lfsr	2,10
  8572  00007A  51AE               	movf	f_write@fp& (0+255),w,b
  8573  00007C  26D9               	addwf	fsr2l,f,c
  8574  00007E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8575  000080  22DA               	addwfc	fsr2h,f,c
  8576  000082  EE10 F00A          	lfsr	1,10
  8577  000086  51AE               	movf	f_write@fp& (0+255),w,b
  8578  000088  26E1               	addwf	fsr1l,f,c
  8579  00008A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8580  00008C  22E2               	addwfc	fsr1h,f,c
  8581  00008E  CFE6 F0B8          	movff	postinc1,??_f_write+4
  8582  000092  CFE6 F0B9          	movff	postinc1,??_f_write+5
  8583  000096  CFE6 F0BA          	movff	postinc1,??_f_write+6
  8584  00009A  CFE6 F0BB          	movff	postinc1,??_f_write+7
  8585  00009E  51B1               	movf	f_write@btw& (0+255),w,b
  8586  0000A0  25B8               	addwf	(??_f_write+4)& (0+255),w,b
  8587  0000A2  6FBC               	movwf	(??_f_write+8)& (0+255),b
  8588  0000A4  51B2               	movf	(f_write@btw+1)& (0+255),w,b
  8589  0000A6  21B9               	addwfc	(??_f_write+5)& (0+255),w,b
  8590  0000A8  6FBD               	movwf	(??_f_write+9)& (0+255),b
  8591  0000AA  0E00               	movlw	0
  8592  0000AC  21BA               	addwfc	(??_f_write+6)& (0+255),w,b
  8593  0000AE  6FBE               	movwf	(??_f_write+10)& (0+255),b
  8594  0000B0  0E00               	movlw	0
  8595  0000B2  21BB               	addwfc	(??_f_write+7)& (0+255),w,b
  8596  0000B4  6FBF               	movwf	(??_f_write+11)& (0+255),b
  8597  0000B6  50DE               	movf	postinc2,w,c
  8598  0000B8  5DBC               	subwf	(??_f_write+8)& (0+255),w,b
  8599  0000BA  50DE               	movf	postinc2,w,c
  8600  0000BC  59BD               	subwfb	(??_f_write+9)& (0+255),w,b
  8601  0000BE  50DE               	movf	postinc2,w,c
  8602  0000C0  59BE               	subwfb	(??_f_write+10)& (0+255),w,b
  8603  0000C2  50DE               	movf	postinc2,w,c
  8604  0000C4  59BF               	subwfb	(??_f_write+11)& (0+255),w,b
  8605  0000C6  A0D8               	btfss	status,0,c
  8606  0000C8  0012               	return	
  8607  0000CA  D228               	goto	l10512
  8608  0000CC                     l10436:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
  8612  0000CC  EE20 F006          	lfsr	2,6
  8613  0000D0  51AE               	movf	f_write@fp& (0+255),w,b
  8614  0000D2  26D9               	addwf	fsr2l,f,c
  8615  0000D4  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8616  0000D6  22DA               	addwfc	fsr2h,f,c
  8617  0000D8  0EFF               	movlw	255
  8618  0000DA  14DE               	andwf	postinc2,w,c
  8619  0000DC  6FB4               	movwf	??_f_write& (0+255),b
  8620  0000DE  0E01               	movlw	1
  8621  0000E0  14DE               	andwf	postinc2,w,c
  8622  0000E2  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8623  0000E4  0E00               	movlw	0
  8624  0000E6  14DE               	andwf	postinc2,w,c
  8625  0000E8  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8626  0000EA  0E00               	movlw	0
  8627  0000EC  14DE               	andwf	postinc2,w,c
  8628  0000EE  6FB7               	movwf	(??_f_write+3)& (0+255),b
  8629  0000F0  51B4               	movf	??_f_write& (0+255),w,b
  8630  0000F2  11B5               	iorwf	(??_f_write+1)& (0+255),w,b
  8631  0000F4  11B6               	iorwf	(??_f_write+2)& (0+255),w,b
  8632  0000F6  11B7               	iorwf	(??_f_write+3)& (0+255),w,b
  8633  0000F8  A4D8               	btfss	status,2,c
  8634  0000FA  D15B               	goto	l10488
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
  8638  0000FC  EE20 F004          	lfsr	2,4
  8639  000100  51AE               	movf	f_write@fp& (0+255),w,b
  8640  000102  26D9               	addwf	fsr2l,f,c
  8641  000104  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8642  000106  22DA               	addwfc	fsr2h,f,c
  8643  000108  EE10 F01D          	lfsr	1,29
  8644  00010C  50DE               	movf	postinc2,w,c
  8645  00010E  26E1               	addwf	fsr1l,f,c
  8646  000110  50DD               	movf	postdec2,w,c
  8647  000112  22E2               	addwfc	fsr1h,f,c
  8648  000114  EE20 F003          	lfsr	2,3
  8649  000118  51AE               	movf	f_write@fp& (0+255),w,b
  8650  00011A  26D9               	addwf	fsr2l,f,c
  8651  00011C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8652  00011E  22DA               	addwfc	fsr2h,f,c
  8653  000120  50E6               	movf	postinc1,w,c
  8654  000122  5CDE               	subwf	postinc2,w,c
  8655  000124  A0D8               	btfss	status,0,c
  8656  000126  D06B               	goto	l10460
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;tff.c: 1024: if (fp->fptr == 0) {
  8660  000128  EE20 F006          	lfsr	2,6
  8661  00012C  51AE               	movf	f_write@fp& (0+255),w,b
  8662  00012E  26D9               	addwf	fsr2l,f,c
  8663  000130  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8664  000132  22DA               	addwfc	fsr2h,f,c
  8665  000134  50DE               	movf	postinc2,w,c
  8666  000136  10DE               	iorwf	postinc2,w,c
  8667  000138  10DE               	iorwf	postinc2,w,c
  8668  00013A  10DE               	iorwf	postinc2,w,c
  8669  00013C  A4D8               	btfss	status,2,c
  8670  00013E  D023               	goto	l10448
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;tff.c: 1025: clust = fp->org_clust;
  8674  000140  EE20 F00E          	lfsr	2,14
  8675  000144  51AE               	movf	f_write@fp& (0+255),w,b
  8676  000146  26D9               	addwf	fsr2l,f,c
  8677  000148  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8678  00014A  22DA               	addwfc	fsr2h,f,c
  8679  00014C  CFDE F0C8          	movff	postinc2,f_write@clust
  8680  000150  CFDD F0C9          	movff	postdec2,f_write@clust+1
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;tff.c: 1026: if (clust == 0)
  8684  000154  51C8               	movf	f_write@clust& (0+255),w,b
  8685  000156  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8686  000158  A4D8               	btfss	status,2,c
  8687  00015A  D025               	goto	l10450
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
  8691  00015C  0E00               	movlw	0
  8692  00015E  6FA1               	movwf	(create_chain@clust+1)& (0+255),b
  8693  000160  0E00               	movlw	0
  8694  000162  6FA0               	movwf	create_chain@clust& (0+255),b
  8695  000164  EC7C  F019         	call	_create_chain	;wreg free
  8696  000168  C0A0  F0C8         	movff	?_create_chain,f_write@clust
  8697  00016C  C0A1  F0C9         	movff	?_create_chain+1,f_write@clust+1
  8698  000170  EE20 F00E          	lfsr	2,14
  8699  000174  51AE               	movf	f_write@fp& (0+255),w,b
  8700  000176  26D9               	addwf	fsr2l,f,c
  8701  000178  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8702  00017A  22DA               	addwfc	fsr2h,f,c
  8703  00017C  C0C8  FFDE         	movff	f_write@clust,postinc2
  8704  000180  C0C9  FFDD         	movff	f_write@clust+1,postdec2
  8705  000184  D010               	goto	l10450
  8706  000186                     l10448:
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
  8710  000186  EE20 F010          	lfsr	2,16
  8711  00018A  51AE               	movf	f_write@fp& (0+255),w,b
  8712  00018C  26D9               	addwf	fsr2l,f,c
  8713  00018E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8714  000190  22DA               	addwfc	fsr2h,f,c
  8715  000192  CFDE F0A0          	movff	postinc2,create_chain@clust
  8716  000196  CFDD F0A1          	movff	postdec2,create_chain@clust+1
  8717  00019A  EC7C  F019         	call	_create_chain	;wreg free
  8718  00019E  C0A0  F0C8         	movff	?_create_chain,f_write@clust
  8719  0001A2  C0A1  F0C9         	movff	?_create_chain+1,f_write@clust+1
  8720  0001A6                     l10450:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
  8724  0001A6  51C8               	movf	f_write@clust& (0+255),w,b
  8725  0001A8  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8726  0001AA  B4D8               	btfsc	status,2,c
  8727  0001AC  D1BB               	goto	u12420
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
  8731  0001AE  05C8               	decf	f_write@clust& (0+255),w,b
  8732  0001B0  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8733  0001B2  B4D8               	btfsc	status,2,c
  8734  0001B4  D1EA               	goto	l10522
  8735                           
  8736                           ; BSR set to: 0
  8737  0001B6  EE20 F004          	lfsr	2,4
  8738  0001BA  51AE               	movf	f_write@fp& (0+255),w,b
  8739  0001BC  26D9               	addwf	fsr2l,f,c
  8740  0001BE  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8741  0001C0  22DA               	addwfc	fsr2h,f,c
  8742  0001C2  EE10 F016          	lfsr	1,22
  8743  0001C6  50DE               	movf	postinc2,w,c
  8744  0001C8  26E1               	addwf	fsr1l,f,c
  8745  0001CA  50DD               	movf	postdec2,w,c
  8746  0001CC  22E2               	addwfc	fsr1h,f,c
  8747  0001CE  50E6               	movf	postinc1,w,c
  8748  0001D0  5DC8               	subwf	f_write@clust& (0+255),w,b
  8749  0001D2  50E6               	movf	postinc1,w,c
  8750  0001D4  59C9               	subwfb	(f_write@clust+1)& (0+255),w,b
  8751  0001D6  B0D8               	btfsc	status,0,c
  8752  0001D8  D1D8               	goto	l10522
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;tff.c: 1033: fp->curr_clust = clust;
  8756  0001DA  EE20 F010          	lfsr	2,16
  8757  0001DE  51AE               	movf	f_write@fp& (0+255),w,b
  8758  0001E0  26D9               	addwf	fsr2l,f,c
  8759  0001E2  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8760  0001E4  22DA               	addwfc	fsr2h,f,c
  8761  0001E6  C0C8  FFDE         	movff	f_write@clust,postinc2
  8762  0001EA  C0C9  FFDD         	movff	f_write@clust+1,postdec2
  8763                           
  8764                           ;tff.c: 1034: fp->csect = 0;
  8765  0001EE  EE20 F003          	lfsr	2,3
  8766  0001F2  51AE               	movf	f_write@fp& (0+255),w,b
  8767  0001F4  26D9               	addwf	fsr2l,f,c
  8768  0001F6  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8769  0001F8  22DA               	addwfc	fsr2h,f,c
  8770  0001FA  0E00               	movlw	0
  8771  0001FC  6EDF               	movwf	indf2,c
  8772  0001FE                     l10460:
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
  8776  0001FE  EE20 F010          	lfsr	2,16
  8777  000202  51AE               	movf	f_write@fp& (0+255),w,b
  8778  000204  26D9               	addwf	fsr2l,f,c
  8779  000206  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8780  000208  22DA               	addwfc	fsr2h,f,c
  8781  00020A  CFDE F025          	movff	postinc2,clust2sect@clust
  8782  00020E  CFDD F026          	movff	postdec2,clust2sect@clust+1
  8783  000212  EC61  F020         	call	_clust2sect	;wreg free
  8784  000216  EE20 F003          	lfsr	2,3
  8785  00021A  51AE               	movf	f_write@fp& (0+255),w,b
  8786  00021C  26D9               	addwf	fsr2l,f,c
  8787  00021E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8788  000220  22DA               	addwfc	fsr2h,f,c
  8789  000222  50DF               	movf	indf2,w,c
  8790  000224  6FB4               	movwf	??_f_write& (0+255),b
  8791  000226  51B4               	movf	??_f_write& (0+255),w,b
  8792  000228  2425               	addwf	?_clust2sect^0,w,c
  8793  00022A  6FC2               	movwf	f_write@sect& (0+255),b
  8794  00022C  0E00               	movlw	0
  8795  00022E  2026               	addwfc	(?_clust2sect+1)^0,w,c
  8796  000230  6FC3               	movwf	(f_write@sect+1)& (0+255),b
  8797  000232  0E00               	movlw	0
  8798  000234  2027               	addwfc	(?_clust2sect+2)^0,w,c
  8799  000236  6FC4               	movwf	(f_write@sect+2)& (0+255),b
  8800  000238  0E00               	movlw	0
  8801  00023A  2028               	addwfc	(?_clust2sect+3)^0,w,c
  8802  00023C  6FC5               	movwf	(f_write@sect+3)& (0+255),b
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;tff.c: 1037: cc = btw / 512U;
  8806  00023E  C0B1  F0B4         	movff	f_write@btw,??_f_write
  8807  000242  C0B2  F0B5         	movff	f_write@btw+1,??_f_write+1
  8808  000246  0E09               	movlw	9
  8809  000248  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8810  00024A                     u12335:
  8811  00024A  90D8               	bcf	status,0,c
  8812  00024C  33B5               	rrcf	(??_f_write+1)& (0+255),f,b
  8813  00024E  33B4               	rrcf	??_f_write& (0+255),f,b
  8814  000250  2FB6               	decfsz	(??_f_write+2)& (0+255),f,b
  8815  000252  D7FB               	goto	u12335
  8816  000254  C0B4  F0C6         	movff	??_f_write,f_write@cc
  8817  000258  C0B5  F0C7         	movff	??_f_write+1,f_write@cc+1
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;tff.c: 1038: if (cc) {
  8821  00025C  51C6               	movf	f_write@cc& (0+255),w,b
  8822  00025E  11C7               	iorwf	(f_write@cc+1)& (0+255),w,b
  8823  000260  B4D8               	btfsc	status,2,c
  8824  000262  D069               	goto	l10478
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
  8828  000264  EE20 F003          	lfsr	2,3
  8829  000268  51AE               	movf	f_write@fp& (0+255),w,b
  8830  00026A  26D9               	addwf	fsr2l,f,c
  8831  00026C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8832  00026E  22DA               	addwfc	fsr2h,f,c
  8833  000270  50DF               	movf	indf2,w,c
  8834  000272  6FB4               	movwf	??_f_write& (0+255),b
  8835  000274  51B4               	movf	??_f_write& (0+255),w,b
  8836  000276  25C6               	addwf	f_write@cc& (0+255),w,b
  8837  000278  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8838  00027A  0E00               	movlw	0
  8839  00027C  21C7               	addwfc	(f_write@cc+1)& (0+255),w,b
  8840  00027E  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8841  000280  EE20 F004          	lfsr	2,4
  8842  000284  51AE               	movf	f_write@fp& (0+255),w,b
  8843  000286  26D9               	addwf	fsr2l,f,c
  8844  000288  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8845  00028A  22DA               	addwfc	fsr2h,f,c
  8846  00028C  EE10 F01D          	lfsr	1,29
  8847  000290  50DE               	movf	postinc2,w,c
  8848  000292  26E1               	addwf	fsr1l,f,c
  8849  000294  50DD               	movf	postdec2,w,c
  8850  000296  22E2               	addwfc	fsr1h,f,c
  8851  000298  50E7               	movf	indf1,w,c
  8852  00029A  6FB7               	movwf	(??_f_write+3)& (0+255),b
  8853  00029C  6BB8               	clrf	(??_f_write+4)& (0+255),b
  8854  00029E  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8855  0002A0  5DB7               	subwf	(??_f_write+3)& (0+255),w,b
  8856  0002A2  51B6               	movf	(??_f_write+2)& (0+255),w,b
  8857  0002A4  59B8               	subwfb	(??_f_write+4)& (0+255),w,b
  8858  0002A6  B0D8               	btfsc	status,0,c
  8859  0002A8  D01C               	goto	l10470
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
  8863  0002AA  EE20 F004          	lfsr	2,4
  8864  0002AE  51AE               	movf	f_write@fp& (0+255),w,b
  8865  0002B0  26D9               	addwf	fsr2l,f,c
  8866  0002B2  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8867  0002B4  22DA               	addwfc	fsr2h,f,c
  8868  0002B6  EE10 F01D          	lfsr	1,29
  8869  0002BA  50DE               	movf	postinc2,w,c
  8870  0002BC  26E1               	addwf	fsr1l,f,c
  8871  0002BE  50DD               	movf	postdec2,w,c
  8872  0002C0  22E2               	addwfc	fsr1h,f,c
  8873  0002C2  50E7               	movf	indf1,w,c
  8874  0002C4  6FB4               	movwf	??_f_write& (0+255),b
  8875  0002C6  EE20 F003          	lfsr	2,3
  8876  0002CA  51AE               	movf	f_write@fp& (0+255),w,b
  8877  0002CC  26D9               	addwf	fsr2l,f,c
  8878  0002CE  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8879  0002D0  22DA               	addwfc	fsr2h,f,c
  8880  0002D2  50DF               	movf	indf2,w,c
  8881  0002D4  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8882  0002D6  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8883  0002D8  5DB4               	subwf	??_f_write& (0+255),w,b
  8884  0002DA  6FC6               	movwf	f_write@cc& (0+255),b
  8885  0002DC  6BC7               	clrf	(f_write@cc+1)& (0+255),b
  8886  0002DE  A0D8               	btfss	status,0,c
  8887  0002E0  07C7               	decf	(f_write@cc+1)& (0+255),f,b
  8888  0002E2                     l10470:
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
  8892  0002E2  C0C1  F068         	movff	f_write@wbuff,disk_write@buff
  8893  0002E6  6B69               	clrf	(disk_write@buff+1)& (0+255),b
  8894  0002E8  C0C2  F06A         	movff	f_write@sect,disk_write@sector
  8895  0002EC  C0C3  F06B         	movff	f_write@sect+1,disk_write@sector+1
  8896  0002F0  C0C4  F06C         	movff	f_write@sect+2,disk_write@sector+2
  8897  0002F4  C0C5  F06D         	movff	f_write@sect+3,disk_write@sector+3
  8898  0002F8  C0C6  F06E         	movff	f_write@cc,disk_write@count
  8899  0002FC  0E00               	movlw	0
  8900  0002FE  EC44  F027         	call	_disk_write
  8901  000302  0900               	iorlw	0
  8902  000304  A4D8               	btfss	status,2,c
  8903  000306  D141               	goto	l10522
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;tff.c: 1043: fp->csect += (BYTE)cc;
  8907  000308  EE20 F003          	lfsr	2,3
  8908  00030C  51AE               	movf	f_write@fp& (0+255),w,b
  8909  00030E  26D9               	addwf	fsr2l,f,c
  8910  000310  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8911  000312  22DA               	addwfc	fsr2h,f,c
  8912  000314  51C6               	movf	f_write@cc& (0+255),w,b
  8913  000316  26DF               	addwf	indf2,f,c
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;tff.c: 1044: wcnt = 512U * cc;
  8917  000318  C0C6  F0B4         	movff	f_write@cc,??_f_write
  8918  00031C  C0C7  F0B5         	movff	f_write@cc+1,??_f_write+1
  8919  000320  0E09               	movlw	9
  8920  000322                     u12375:
  8921  000322  90D8               	bcf	status,0,c
  8922  000324  37B4               	rlcf	??_f_write& (0+255),f,b
  8923  000326  37B5               	rlcf	(??_f_write+1)& (0+255),f,b
  8924  000328  2EE8               	decfsz	wreg,f,c
  8925  00032A  D7FB               	goto	u12375
  8926  00032C  C0B4  F0CA         	movff	??_f_write,f_write@wcnt
  8927  000330  C0B5  F0CB         	movff	??_f_write+1,f_write@wcnt+1
  8928                           
  8929                           ;tff.c: 1045: continue;
  8930  000334  D0D9               	goto	l10504
  8931  000336                     l10478:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
  8935  000336  EE20 F00A          	lfsr	2,10
  8936  00033A  51AE               	movf	f_write@fp& (0+255),w,b
  8937  00033C  26D9               	addwf	fsr2l,f,c
  8938  00033E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8939  000340  22DA               	addwfc	fsr2h,f,c
  8940  000342  EE10 F006          	lfsr	1,6
  8941  000346  51AE               	movf	f_write@fp& (0+255),w,b
  8942  000348  26E1               	addwf	fsr1l,f,c
  8943  00034A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8944  00034C  22E2               	addwfc	fsr1h,f,c
  8945  00034E  50DE               	movf	postinc2,w,c
  8946  000350  5CE6               	subwf	postinc1,w,c
  8947  000352  50DE               	movf	postinc2,w,c
  8948  000354  58E6               	subwfb	postinc1,w,c
  8949  000356  50DE               	movf	postinc2,w,c
  8950  000358  58E6               	subwfb	postinc1,w,c
  8951  00035A  50DE               	movf	postinc2,w,c
  8952  00035C  58E6               	subwfb	postinc1,w,c
  8953  00035E  A0D8               	btfss	status,0,c
  8954  000360  D021               	goto	l10486
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
  8958  000362  0E00               	movlw	0
  8959  000364  6F73               	movwf	move_window@sector& (0+255),b
  8960  000366  0E00               	movlw	0
  8961  000368  6F74               	movwf	(move_window@sector+1)& (0+255),b
  8962  00036A  0E00               	movlw	0
  8963  00036C  6F75               	movwf	(move_window@sector+2)& (0+255),b
  8964  00036E  0E00               	movlw	0
  8965  000370  6F76               	movwf	(move_window@sector+3)& (0+255),b
  8966  000372  ECA7  F018         	call	_move_window	;wreg free
  8967  000376  0900               	iorlw	0
  8968  000378  B4D8               	btfsc	status,2,c
  8969  00037A  D107               	goto	l10522
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;tff.c: 1049: fp->fs->winsect = sect;
  8973  00037C  EE20 F004          	lfsr	2,4
  8974  000380  51AE               	movf	f_write@fp& (0+255),w,b
  8975  000382  26D9               	addwf	fsr2l,f,c
  8976  000384  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8977  000386  22DA               	addwfc	fsr2h,f,c
  8978  000388  EE10 F004          	lfsr	1,4
  8979  00038C  50DE               	movf	postinc2,w,c
  8980  00038E  26E1               	addwf	fsr1l,f,c
  8981  000390  50DD               	movf	postdec2,w,c
  8982  000392  22E2               	addwfc	fsr1h,f,c
  8983  000394  C0C2  FFE6         	movff	f_write@sect,postinc1
  8984  000398  C0C3  FFE6         	movff	f_write@sect+1,postinc1
  8985  00039C  C0C4  FFE6         	movff	f_write@sect+2,postinc1
  8986  0003A0  C0C5  FFE6         	movff	f_write@sect+3,postinc1
  8987  0003A4                     l10486:
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
  8991  0003A4  EE20 F003          	lfsr	2,3
  8992  0003A8  51AE               	movf	f_write@fp& (0+255),w,b
  8993  0003AA  26D9               	addwf	fsr2l,f,c
  8994  0003AC  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8995  0003AE  22DA               	addwfc	fsr2h,f,c
  8996  0003B0  2ADF               	incf	indf2,f,c
  8997  0003B2                     l10488:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
  9001  0003B2  EE20 F010          	lfsr	2,16
  9002  0003B6  51AE               	movf	f_write@fp& (0+255),w,b
  9003  0003B8  26D9               	addwf	fsr2l,f,c
  9004  0003BA  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9005  0003BC  22DA               	addwfc	fsr2h,f,c
  9006  0003BE  CFDE F025          	movff	postinc2,clust2sect@clust
  9007  0003C2  CFDD F026          	movff	postdec2,clust2sect@clust+1
  9008  0003C6  EC61  F020         	call	_clust2sect	;wreg free
  9009  0003CA  EE20 F003          	lfsr	2,3
  9010  0003CE  51AE               	movf	f_write@fp& (0+255),w,b
  9011  0003D0  26D9               	addwf	fsr2l,f,c
  9012  0003D2  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9013  0003D4  22DA               	addwfc	fsr2h,f,c
  9014  0003D6  50DF               	movf	indf2,w,c
  9015  0003D8  6FB4               	movwf	??_f_write& (0+255),b
  9016  0003DA  51B4               	movf	??_f_write& (0+255),w,b
  9017  0003DC  2425               	addwf	?_clust2sect^0,w,c
  9018  0003DE  6FB5               	movwf	(??_f_write+1)& (0+255),b
  9019  0003E0  0E00               	movlw	0
  9020  0003E2  2026               	addwfc	(?_clust2sect+1)^0,w,c
  9021  0003E4  6FB6               	movwf	(??_f_write+2)& (0+255),b
  9022  0003E6  0E00               	movlw	0
  9023  0003E8  2027               	addwfc	(?_clust2sect+2)^0,w,c
  9024  0003EA  6FB7               	movwf	(??_f_write+3)& (0+255),b
  9025  0003EC  0E00               	movlw	0
  9026  0003EE  2028               	addwfc	(?_clust2sect+3)^0,w,c
  9027  0003F0  6FB8               	movwf	(??_f_write+4)& (0+255),b
  9028  0003F2  0EFF               	movlw	255
  9029  0003F4  25B5               	addwf	(??_f_write+1)& (0+255),w,b
  9030  0003F6  6FC2               	movwf	f_write@sect& (0+255),b
  9031  0003F8  0EFF               	movlw	255
  9032  0003FA  21B6               	addwfc	(??_f_write+2)& (0+255),w,b
  9033  0003FC  6FC3               	movwf	(f_write@sect+1)& (0+255),b
  9034  0003FE  0EFF               	movlw	255
  9035  000400  21B7               	addwfc	(??_f_write+3)& (0+255),w,b
  9036  000402  6FC4               	movwf	(f_write@sect+2)& (0+255),b
  9037  000404  0EFF               	movlw	255
  9038  000406  21B8               	addwfc	(??_f_write+4)& (0+255),w,b
  9039  000408  6FC5               	movwf	(f_write@sect+3)& (0+255),b
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
  9043  00040A  C0C2  F073         	movff	f_write@sect,move_window@sector
  9044  00040E  C0C3  F074         	movff	f_write@sect+1,move_window@sector+1
  9045  000412  C0C4  F075         	movff	f_write@sect+2,move_window@sector+2
  9046  000416  C0C5  F076         	movff	f_write@sect+3,move_window@sector+3
  9047  00041A  ECA7  F018         	call	_move_window	;wreg free
  9048  00041E  0900               	iorlw	0
  9049  000420  B4D8               	btfsc	status,2,c
  9050  000422  D0B3               	goto	l10522
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
  9054  000424  0EFF               	movlw	255
  9055  000426  6FB4               	movwf	??_f_write& (0+255),b
  9056  000428  0E01               	movlw	1
  9057  00042A  6FB5               	movwf	(??_f_write+1)& (0+255),b
  9058  00042C  EE20 F006          	lfsr	2,6
  9059  000430  51AE               	movf	f_write@fp& (0+255),w,b
  9060  000432  26D9               	addwf	fsr2l,f,c
  9061  000434  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9062  000436  22DA               	addwfc	fsr2h,f,c
  9063  000438  CFDE F0B6          	movff	postinc2,??_f_write+2
  9064  00043C  CFDD F0B7          	movff	postdec2,??_f_write+3
  9065  000440  51B4               	movf	??_f_write& (0+255),w,b
  9066  000442  17B6               	andwf	(??_f_write+2)& (0+255),f,b
  9067  000444  51B5               	movf	(??_f_write+1)& (0+255),w,b
  9068  000446  17B7               	andwf	(??_f_write+3)& (0+255),f,b
  9069  000448  51B6               	movf	(??_f_write+2)& (0+255),w,b
  9070  00044A  0800               	sublw	0
  9071  00044C  6FCA               	movwf	f_write@wcnt& (0+255),b
  9072  00044E  51B7               	movf	(??_f_write+3)& (0+255),w,b
  9073  000450  A0D8               	btfss	status,0,c
  9074  000452  2AE8               	incf	wreg,f,c
  9075  000454  0802               	sublw	2
  9076  000456  6FCB               	movwf	(f_write@wcnt+1)& (0+255),b
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
  9080  000458  51CA               	movf	f_write@wcnt& (0+255),w,b
  9081  00045A  5DB1               	subwf	f_write@btw& (0+255),w,b
  9082  00045C  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  9083  00045E  59B2               	subwfb	(f_write@btw+1)& (0+255),w,b
  9084  000460  B0D8               	btfsc	status,0,c
  9085  000462  D004               	goto	l10500
  9086                           
  9087                           ; BSR set to: 0
  9088  000464  C0B1  F0CA         	movff	f_write@btw,f_write@wcnt
  9089  000468  C0B2  F0CB         	movff	f_write@btw+1,f_write@wcnt+1
  9090  00046C                     l10500:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
  9094  00046C  0EFF               	movlw	255
  9095  00046E  6FB4               	movwf	??_f_write& (0+255),b
  9096  000470  0E01               	movlw	1
  9097  000472  6FB5               	movwf	(??_f_write+1)& (0+255),b
  9098  000474  EE20 F006          	lfsr	2,6
  9099  000478  51AE               	movf	f_write@fp& (0+255),w,b
  9100  00047A  26D9               	addwf	fsr2l,f,c
  9101  00047C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9102  00047E  22DA               	addwfc	fsr2h,f,c
  9103  000480  CFDE F0B6          	movff	postinc2,??_f_write+2
  9104  000484  CFDD F0B7          	movff	postdec2,??_f_write+3
  9105  000488  51B4               	movf	??_f_write& (0+255),w,b
  9106  00048A  17B6               	andwf	(??_f_write+2)& (0+255),f,b
  9107  00048C  51B5               	movf	(??_f_write+1)& (0+255),w,b
  9108  00048E  17B7               	andwf	(??_f_write+3)& (0+255),f,b
  9109  000490  EE20 F004          	lfsr	2,4
  9110  000494  51AE               	movf	f_write@fp& (0+255),w,b
  9111  000496  26D9               	addwf	fsr2l,f,c
  9112  000498  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9113  00049A  22DA               	addwfc	fsr2h,f,c
  9114  00049C  CFDE F0B8          	movff	postinc2,??_f_write+4
  9115  0004A0  CFDD F0B9          	movff	postdec2,??_f_write+5
  9116  0004A4  51B6               	movf	(??_f_write+2)& (0+255),w,b
  9117  0004A6  27B8               	addwf	(??_f_write+4)& (0+255),f,b
  9118  0004A8  51B7               	movf	(??_f_write+3)& (0+255),w,b
  9119  0004AA  23B9               	addwfc	(??_f_write+5)& (0+255),f,b
  9120  0004AC  0E20               	movlw	32
  9121  0004AE  25B8               	addwf	(??_f_write+4)& (0+255),w,b
  9122  0004B0  6E19               	movwf	memcpy@d1^0,c
  9123  0004B2  0E00               	movlw	0
  9124  0004B4  21B9               	addwfc	(??_f_write+5)& (0+255),w,b
  9125  0004B6  6E1A               	movwf	(memcpy@d1+1)^0,c
  9126  0004B8  C0C1  F01B         	movff	f_write@wbuff,memcpy@s1
  9127  0004BC  6A1C               	clrf	(memcpy@s1+1)^0,c
  9128  0004BE  C0CA  F01D         	movff	f_write@wcnt,memcpy@n
  9129  0004C2  C0CB  F01E         	movff	f_write@wcnt+1,memcpy@n+1
  9130  0004C6  EC61  F028         	call	_memcpy	;wreg free
  9131                           
  9132                           ;tff.c: 1058: fp->fs->winflag = 1;
  9133  0004CA  0100               	movlb	0	; () banked
  9134  0004CC  EE20 F004          	lfsr	2,4
  9135  0004D0  51AE               	movf	f_write@fp& (0+255),w,b
  9136  0004D2  26D9               	addwf	fsr2l,f,c
  9137  0004D4  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9138  0004D6  22DA               	addwfc	fsr2h,f,c
  9139  0004D8  EE10 F01F          	lfsr	1,31
  9140  0004DC  50DE               	movf	postinc2,w,c
  9141  0004DE  26E1               	addwf	fsr1l,f,c
  9142  0004E0  50DD               	movf	postdec2,w,c
  9143  0004E2  22E2               	addwfc	fsr1h,f,c
  9144  0004E4  0E01               	movlw	1
  9145  0004E6  6EE7               	movwf	indf1,c
  9146  0004E8                     l10504:
  9147                           
  9148                           ; BSR set to: 0
  9149  0004E8  51CA               	movf	f_write@wcnt& (0+255),w,b
  9150  0004EA  27C1               	addwf	f_write@wbuff& (0+255),f,b
  9151                           
  9152                           ; BSR set to: 0
  9153  0004EC  EE20 F006          	lfsr	2,6
  9154  0004F0  51AE               	movf	f_write@fp& (0+255),w,b
  9155  0004F2  26D9               	addwf	fsr2l,f,c
  9156  0004F4  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9157  0004F6  22DA               	addwfc	fsr2h,f,c
  9158  0004F8  51CA               	movf	f_write@wcnt& (0+255),w,b
  9159  0004FA  26DE               	addwf	postinc2,f,c
  9160  0004FC  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  9161  0004FE  22DE               	addwfc	postinc2,f,c
  9162  000500  0E00               	movlw	0
  9163  000502  22DE               	addwfc	postinc2,f,c
  9164  000504  22DE               	addwfc	postinc2,f,c
  9165                           
  9166                           ; BSR set to: 0
  9167  000506  51B3               	movf	f_write@bw& (0+255),w,b
  9168  000508  6ED9               	movwf	fsr2l,c
  9169  00050A  6ADA               	clrf	fsr2h,c
  9170  00050C  51CA               	movf	f_write@wcnt& (0+255),w,b
  9171  00050E  26DE               	addwf	postinc2,f,c
  9172  000510  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  9173  000512  22DD               	addwfc	postdec2,f,c
  9174                           
  9175                           ; BSR set to: 0
  9176  000514  51CA               	movf	f_write@wcnt& (0+255),w,b
  9177  000516  5FB1               	subwf	f_write@btw& (0+255),f,b
  9178  000518  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  9179  00051A  5BB2               	subwfb	(f_write@btw+1)& (0+255),f,b
  9180  00051C                     l10512:
  9181                           
  9182                           ; BSR set to: 0
  9183  00051C  51B1               	movf	f_write@btw& (0+255),w,b
  9184  00051E  11B2               	iorwf	(f_write@btw+1)& (0+255),w,b
  9185  000520  A4D8               	btfss	status,2,c
  9186  000522  D5D4               	goto	l10436
  9187  000524                     u12420:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  9191  000524  EE20 F006          	lfsr	2,6
  9192  000528  51AE               	movf	f_write@fp& (0+255),w,b
  9193  00052A  26D9               	addwf	fsr2l,f,c
  9194  00052C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9195  00052E  22DA               	addwfc	fsr2h,f,c
  9196  000530  EE10 F00A          	lfsr	1,10
  9197  000534  51AE               	movf	f_write@fp& (0+255),w,b
  9198  000536  26E1               	addwf	fsr1l,f,c
  9199  000538  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9200  00053A  22E2               	addwfc	fsr1h,f,c
  9201  00053C  50DE               	movf	postinc2,w,c
  9202  00053E  5CE6               	subwf	postinc1,w,c
  9203  000540  50DE               	movf	postinc2,w,c
  9204  000542  58E6               	subwfb	postinc1,w,c
  9205  000544  50DE               	movf	postinc2,w,c
  9206  000546  58E6               	subwfb	postinc1,w,c
  9207  000548  50DE               	movf	postinc2,w,c
  9208  00054A  58E6               	subwfb	postinc1,w,c
  9209  00054C  B0D8               	btfsc	status,0,c
  9210  00054E  D014               	goto	l10518
  9211                           
  9212                           ; BSR set to: 0
  9213  000550  EE20 F006          	lfsr	2,6
  9214  000554  51AE               	movf	f_write@fp& (0+255),w,b
  9215  000556  26D9               	addwf	fsr2l,f,c
  9216  000558  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9217  00055A  22DA               	addwfc	fsr2h,f,c
  9218  00055C  EE10 F00A          	lfsr	1,10
  9219  000560  51AE               	movf	f_write@fp& (0+255),w,b
  9220  000562  26E1               	addwf	fsr1l,f,c
  9221  000564  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9222  000566  22E2               	addwfc	fsr1h,f,c
  9223  000568  CFDE FFE6          	movff	postinc2,postinc1
  9224  00056C  CFDE FFE6          	movff	postinc2,postinc1
  9225  000570  CFDE FFE6          	movff	postinc2,postinc1
  9226  000574  CFDE FFE6          	movff	postinc2,postinc1
  9227  000578                     l10518:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;tff.c: 1062: fp->flag |= 0x20;
  9231  000578  EE20 F002          	lfsr	2,2
  9232  00057C  51AE               	movf	f_write@fp& (0+255),w,b
  9233  00057E  26D9               	addwf	fsr2l,f,c
  9234  000580  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9235  000582  22DA               	addwfc	fsr2h,f,c
  9236  000584  0E00               	movlw	0
  9237  000586  8ADB               	bsf	plusw2,5,c
  9238  000588  0012               	return	
  9239  00058A                     l10522:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;tff.c: 1066: fp->flag |= 0x80;
  9243  00058A  EE20 F002          	lfsr	2,2
  9244  00058E  51AE               	movf	f_write@fp& (0+255),w,b
  9245  000590  26D9               	addwf	fsr2l,f,c
  9246  000592  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  9247  000594  22DA               	addwfc	fsr2h,f,c
  9248  000596  0E00               	movlw	0
  9249  000598  8EDB               	bsf	plusw2,7,c
  9250                           
  9251                           ; BSR set to: 0
  9252  00059A  0012               	return		;funcret
  9253  00059C                     __end_of_f_write:
  9254                           	callstack 0
  9255                           
  9256 ;; *************** function ___llmod *****************
  9257 ;; Defined at:
  9258 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  dividend        4   24[COMRAM] unsigned long 
  9261 ;;  divisor         4   28[COMRAM] unsigned long 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  counter         1   32[COMRAM] unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  4   24[COMRAM] unsigned long 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 3F/2
  9270 ;;		On exit  : 3F/2
  9271 ;;		Unchanged: 3F/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9273 ;;      Params:         8       0       0       0       0       0       0       0       0
  9274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9276 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9277 ;;Total ram usage:        9 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    3
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_fprintf
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text46
  9288  004BC8                     __ptext46:
  9289                           	callstack 0
  9290  004BC8                     ___llmod:
  9291                           	callstack 23
  9292                           
  9293                           ; BSR set to: 2
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;incstack = 0
  9297  004BC8  501D               	movf	___llmod@divisor^0,w,c
  9298  004BCA  101E               	iorwf	(___llmod@divisor+1)^0,w,c
  9299  004BCC  101F               	iorwf	(___llmod@divisor+2)^0,w,c
  9300  004BCE  1020               	iorwf	(___llmod@divisor+3)^0,w,c
  9301  004BD0  B4D8               	btfsc	status,2,c
  9302  004BD2  D024               	goto	l2013
  9303                           
  9304                           ; BSR set to: 2
  9305  004BD4  0E01               	movlw	1
  9306  004BD6  6E21               	movwf	___llmod@counter^0,c
  9307  004BD8  D006               	goto	l11118
  9308  004BDA                     l11116:
  9309                           
  9310                           ; BSR set to: 2
  9311  004BDA  90D8               	bcf	status,0,c
  9312  004BDC  361D               	rlcf	___llmod@divisor^0,f,c
  9313  004BDE  361E               	rlcf	(___llmod@divisor+1)^0,f,c
  9314  004BE0  361F               	rlcf	(___llmod@divisor+2)^0,f,c
  9315  004BE2  3620               	rlcf	(___llmod@divisor+3)^0,f,c
  9316  004BE4  2A21               	incf	___llmod@counter^0,f,c
  9317  004BE6                     l11118:
  9318                           
  9319                           ; BSR set to: 2
  9320  004BE6  AE20               	btfss	(___llmod@divisor+3)^0,7,c
  9321  004BE8  D7F8               	goto	l11116
  9322  004BEA                     u13460:
  9323                           
  9324                           ; BSR set to: 2
  9325  004BEA  501D               	movf	___llmod@divisor^0,w,c
  9326  004BEC  5C19               	subwf	___llmod@dividend^0,w,c
  9327  004BEE  501E               	movf	(___llmod@divisor+1)^0,w,c
  9328  004BF0  581A               	subwfb	(___llmod@dividend+1)^0,w,c
  9329  004BF2  501F               	movf	(___llmod@divisor+2)^0,w,c
  9330  004BF4  581B               	subwfb	(___llmod@dividend+2)^0,w,c
  9331  004BF6  5020               	movf	(___llmod@divisor+3)^0,w,c
  9332  004BF8  581C               	subwfb	(___llmod@dividend+3)^0,w,c
  9333  004BFA  A0D8               	btfss	status,0,c
  9334  004BFC  D008               	goto	l11124
  9335                           
  9336                           ; BSR set to: 2
  9337  004BFE  501D               	movf	___llmod@divisor^0,w,c
  9338  004C00  5E19               	subwf	___llmod@dividend^0,f,c
  9339  004C02  501E               	movf	(___llmod@divisor+1)^0,w,c
  9340  004C04  5A1A               	subwfb	(___llmod@dividend+1)^0,f,c
  9341  004C06  501F               	movf	(___llmod@divisor+2)^0,w,c
  9342  004C08  5A1B               	subwfb	(___llmod@dividend+2)^0,f,c
  9343  004C0A  5020               	movf	(___llmod@divisor+3)^0,w,c
  9344  004C0C  5A1C               	subwfb	(___llmod@dividend+3)^0,f,c
  9345  004C0E                     l11124:
  9346                           
  9347                           ; BSR set to: 2
  9348  004C0E  90D8               	bcf	status,0,c
  9349  004C10  3220               	rrcf	(___llmod@divisor+3)^0,f,c
  9350  004C12  321F               	rrcf	(___llmod@divisor+2)^0,f,c
  9351  004C14  321E               	rrcf	(___llmod@divisor+1)^0,f,c
  9352  004C16  321D               	rrcf	___llmod@divisor^0,f,c
  9353                           
  9354                           ; BSR set to: 2
  9355  004C18  2E21               	decfsz	___llmod@counter^0,f,c
  9356  004C1A  D7E7               	goto	u13460
  9357  004C1C                     l2013:
  9358                           
  9359                           ; BSR set to: 2
  9360  004C1C  C019  F019         	movff	___llmod@dividend,?___llmod
  9361  004C20  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  9362  004C24  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  9363  004C28  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  9364                           
  9365                           ; BSR set to: 2
  9366  004C2C  0012               	return		;funcret
  9367  004C2E                     __end_of___llmod:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function _f_open *****************
  9371 ;; Defined at:
  9372 ;;		line 833 in file "bibliotecas/tff.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  fp              2   96[BANK0 ] PTR struct _FIL
  9375 ;;		 -> fil(28), 
  9376 ;;  path            2   98[BANK0 ] PTR const unsigned char 
  9377 ;;		 -> STR_22(13), filename(15), 
  9378 ;;  mode            1  100[BANK0 ] unsigned char 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  dw              4  119[BANK0 ] unsigned long 
  9381 ;;  rs              2  117[BANK0 ] unsigned short 
  9382 ;;  dj             14  126[BANK0 ] struct _DIR_E
  9383 ;;  fn             12  105[BANK0 ] unsigned char [12]
  9384 ;;  dir             2  124[BANK0 ] PTR unsigned char 
  9385 ;;		 -> NULL(0), fs(544), 
  9386 ;;  res             1  123[BANK0 ] enum E155
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      enum E3239
  9389 ;; Registers used:
  9390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 3F/0
  9393 ;;		On exit  : 3F/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9396 ;;      Params:         0       5       0       0       0       0       0       0       0
  9397 ;;      Locals:         0      35       0       0       0       0       0       0       0
  9398 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9399 ;;      Totals:         0      44       0       0       0       0       0       0       0
  9400 ;;Total ram usage:       44 bytes
  9401 ;; Hardware stack levels used:    1
  9402 ;; Hardware stack levels required when called:   12
  9403 ;; This function calls:
  9404 ;;		_auto_mount
  9405 ;;		_get_fattime
  9406 ;;		_memcpy
  9407 ;;		_memset
  9408 ;;		_move_window
  9409 ;;		_remove_chain
  9410 ;;		_reserve_direntry
  9411 ;;		_trace_path
  9412 ;; This function is called by:
  9413 ;;		_escrita_sdcard
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text47
  9418  0012EC                     __ptext47:
  9419                           	callstack 0
  9420  0012EC                     _f_open:
  9421                           	callstack 15
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
  9425                           
  9426                           ; BSR set to: 2
  9427                           ;incstack = 0
  9428  0012EC  EE20 F004          	lfsr	2,4
  9429  0012F0  51C0               	movf	f_open@fp& (0+255),w,b
  9430  0012F2  26D9               	addwf	fsr2l,f,c
  9431  0012F4  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9432  0012F6  22DA               	addwfc	fsr2h,f,c
  9433  0012F8  0E00               	movlw	0
  9434  0012FA  6EDE               	movwf	postinc2,c
  9435  0012FC  0E00               	movlw	0
  9436  0012FE  6EDD               	movwf	postdec2,c
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
  9440  001300  0E1F               	movlw	31
  9441  001302  17C4               	andwf	f_open@mode& (0+255),f,b
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  9445  001304  0EC2               	movlw	low f_open@path
  9446  001306  6F79               	movwf	auto_mount@path& (0+255),b
  9447  001308  51C4               	movf	f_open@mode& (0+255),w,b
  9448  00130A  0B1E               	andlw	30
  9449  00130C  6F7A               	movwf	auto_mount@chk_wp& (0+255),b
  9450  00130E  ECCE  F002         	call	_auto_mount	;wreg free
  9451  001312  0100               	movlb	0	; () banked
  9452  001314  6FDB               	movwf	f_open@res& (0+255),b
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;tff.c: 853: if (res != FR_OK) return res;
  9456  001316  51DB               	movf	f_open@res& (0+255),w,b
  9457  001318  B4D8               	btfsc	status,2,c
  9458  00131A  D002               	goto	l11206
  9459  00131C                     u13540:
  9460                           
  9461                           ; BSR set to: 0
  9462  00131C  51DB               	movf	f_open@res& (0+255),w,b
  9463  00131E  0012               	return	
  9464  001320                     l11206:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
  9468  001320  0EDE               	movlw	low f_open@dj
  9469  001322  6FA7               	movwf	trace_path@dj& (0+255),b
  9470  001324  0EC9               	movlw	low f_open@fn
  9471  001326  6FA8               	movwf	trace_path@fn& (0+255),b
  9472  001328  C0C2  F0A9         	movff	f_open@path,trace_path@path
  9473  00132C  C0C3  F0AA         	movff	f_open@path+1,trace_path@path+1
  9474  001330  0EDC               	movlw	low f_open@dir
  9475  001332  6FAB               	movwf	trace_path@dir& (0+255),b
  9476  001334  EC7F  F00F         	call	_trace_path	;wreg free
  9477  001338  6FDB               	movwf	f_open@res& (0+255),b
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
  9481  00133A  C0C4  F0C5         	movff	f_open@mode,??_f_open
  9482  00133E  0E1C               	movlw	28
  9483  001340  17C5               	andwf	??_f_open& (0+255),f,b
  9484  001342  B4D8               	btfsc	status,2,c
  9485  001344  D0DD               	goto	l11268
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
  9489  001346  51DB               	movf	f_open@res& (0+255),w,b
  9490  001348  B4D8               	btfsc	status,2,c
  9491  00134A  D034               	goto	l963
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
  9495  00134C  0E02               	movlw	2
  9496  00134E  19DB               	xorwf	f_open@res& (0+255),w,b
  9497  001350  A4D8               	btfss	status,2,c
  9498  001352  D7E4               	goto	u13540
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
  9502  001354  0EDE               	movlw	low f_open@dj
  9503  001356  6FAE               	movwf	reserve_direntry@dj& (0+255),b
  9504  001358  0EDC               	movlw	low f_open@dir
  9505  00135A  6FAF               	movwf	reserve_direntry@dir& (0+255),b
  9506  00135C  ECBB  F010         	call	_reserve_direntry	;wreg free
  9507  001360  6FDB               	movwf	f_open@res& (0+255),b
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;tff.c: 864: if (res != FR_OK) return res;
  9511  001362  51DB               	movf	f_open@res& (0+255),w,b
  9512  001364  A4D8               	btfss	status,2,c
  9513  001366  D7DA               	goto	u13540
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;tff.c: 865: memset(dir, 0, 32);
  9517  001368  C0DC  F019         	movff	f_open@dir,memset@p1
  9518  00136C  C0DD  F01A         	movff	f_open@dir+1,memset@p1+1
  9519  001370  0E00               	movlw	0
  9520  001372  6E1C               	movwf	(memset@c+1)^0,c
  9521  001374  0E00               	movlw	0
  9522  001376  6E1B               	movwf	memset@c^0,c
  9523  001378  0E00               	movlw	0
  9524  00137A  6E1E               	movwf	(memset@n+1)^0,c
  9525  00137C  0E20               	movlw	32
  9526  00137E  6E1D               	movwf	memset@n^0,c
  9527  001380  EC80  F029         	call	_memset	;wreg free
  9528                           
  9529                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
  9530  001384  C0DC  F019         	movff	f_open@dir,memcpy@d1
  9531  001388  C0DD  F01A         	movff	f_open@dir+1,memcpy@d1+1
  9532  00138C  0EC9               	movlw	low f_open@fn
  9533  00138E  6E1B               	movwf	memcpy@s1^0,c
  9534  001390  6A1C               	clrf	(memcpy@s1+1)^0,c
  9535  001392  0E00               	movlw	0
  9536  001394  6E1E               	movwf	(memcpy@n+1)^0,c
  9537  001396  0E0B               	movlw	11
  9538  001398  6E1D               	movwf	memcpy@n^0,c
  9539  00139A  EC61  F028         	call	_memcpy	;wreg free
  9540                           
  9541                           ;tff.c: 867: dir[12] = fn[11];
  9542  00139E  0100               	movlb	0	; () banked
  9543  0013A0  EE20 F00C          	lfsr	2,12
  9544  0013A4  51DC               	movf	f_open@dir& (0+255),w,b
  9545  0013A6  26D9               	addwf	fsr2l,f,c
  9546  0013A8  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9547  0013AA  22DA               	addwfc	fsr2h,f,c
  9548  0013AC  C0D4  FFDF         	movff	f_open@fn+11,indf2
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;tff.c: 868: mode |= 0x08;
  9552  0013B0  87C4               	bsf	f_open@mode& (0+255),3,b
  9553                           
  9554                           ;tff.c: 869: }
  9555  0013B2  D07A               	goto	l11256
  9556  0013B4                     l963:
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
  9560  0013B4  A5C4               	btfss	f_open@mode& (0+255),2,b
  9561  0013B6  D002               	goto	l11236
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;tff.c: 872: return FR_EXIST;
  9565  0013B8  0E07               	movlw	7
  9566  0013BA  0012               	return	
  9567  0013BC                     l11236:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
  9571  0013BC  51DC               	movf	f_open@dir& (0+255),w,b
  9572  0013BE  11DD               	iorwf	(f_open@dir+1)& (0+255),w,b
  9573  0013C0  B4D8               	btfsc	status,2,c
  9574  0013C2  D00C               	goto	u13610
  9575                           
  9576                           ; BSR set to: 0
  9577  0013C4  EE20 F00B          	lfsr	2,11
  9578  0013C8  51DC               	movf	f_open@dir& (0+255),w,b
  9579  0013CA  26D9               	addwf	fsr2l,f,c
  9580  0013CC  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9581  0013CE  22DA               	addwfc	fsr2h,f,c
  9582  0013D0  50DF               	movf	indf2,w,c
  9583  0013D2  6FC5               	movwf	??_f_open& (0+255),b
  9584  0013D4  0E11               	movlw	17
  9585  0013D6  17C5               	andwf	??_f_open& (0+255),f,b
  9586  0013D8  B4D8               	btfsc	status,2,c
  9587  0013DA  D002               	goto	l968
  9588  0013DC                     u13610:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;tff.c: 874: return FR_DENIED;
  9592  0013DC  0E06               	movlw	6
  9593  0013DE  0012               	return	
  9594  0013E0                     l968:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;tff.c: 875: if (mode & 0x08) {
  9598  0013E0  A7C4               	btfss	f_open@mode& (0+255),3,b
  9599  0013E2  D062               	goto	l11256
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9603  0013E4  EE20 F01A          	lfsr	2,26
  9604  0013E8  51DC               	movf	f_open@dir& (0+255),w,b
  9605  0013EA  26D9               	addwf	fsr2l,f,c
  9606  0013EC  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9607  0013EE  22DA               	addwfc	fsr2h,f,c
  9608  0013F0  CFDE F0D5          	movff	postinc2,f_open@rs
  9609  0013F4  CFDD F0D6          	movff	postdec2,f_open@rs+1
  9610                           
  9611                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
  9612  0013F8  EE20 F01A          	lfsr	2,26
  9613  0013FC  51DC               	movf	f_open@dir& (0+255),w,b
  9614  0013FE  26D9               	addwf	fsr2l,f,c
  9615  001400  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9616  001402  22DA               	addwfc	fsr2h,f,c
  9617  001404  0E00               	movlw	0
  9618  001406  6EDE               	movwf	postinc2,c
  9619  001408  0E00               	movlw	0
  9620  00140A  6EDD               	movwf	postdec2,c
  9621                           
  9622                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
  9623  00140C  EE20 F01C          	lfsr	2,28
  9624  001410  51DC               	movf	f_open@dir& (0+255),w,b
  9625  001412  26D9               	addwf	fsr2l,f,c
  9626  001414  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9627  001416  22DA               	addwfc	fsr2h,f,c
  9628  001418  6ADE               	clrf	postinc2,c
  9629  00141A  6ADE               	clrf	postinc2,c
  9630  00141C  6ADE               	clrf	postinc2,c
  9631  00141E  6ADD               	clrf	postdec2,c
  9632                           
  9633                           ;tff.c: 884: dj.fs->winflag = 1;
  9634  001420  EE20 F01F          	lfsr	2,31
  9635  001424  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9636  001426  26D9               	addwf	fsr2l,f,c
  9637  001428  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9638  00142A  22DA               	addwfc	fsr2h,f,c
  9639  00142C  0E01               	movlw	1
  9640  00142E  6EDF               	movwf	indf2,c
  9641                           
  9642                           ;tff.c: 885: dw = dj.fs->winsect;
  9643  001430  EE20 F004          	lfsr	2,4
  9644  001434  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9645  001436  26D9               	addwf	fsr2l,f,c
  9646  001438  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9647  00143A  22DA               	addwfc	fsr2h,f,c
  9648  00143C  CFDE F0D7          	movff	postinc2,f_open@dw
  9649  001440  CFDE F0D8          	movff	postinc2,f_open@dw+1
  9650  001444  CFDE F0D9          	movff	postinc2,f_open@dw+2
  9651  001448  CFDE F0DA          	movff	postinc2,f_open@dw+3
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
  9655  00144C  C0D5  F0A0         	movff	f_open@rs,remove_chain@clust
  9656  001450  C0D6  F0A1         	movff	f_open@rs+1,remove_chain@clust+1
  9657  001454  EC5F  F022         	call	_remove_chain	;wreg free
  9658  001458  0900               	iorlw	0
  9659  00145A  B4D8               	btfsc	status,2,c
  9660  00145C  D00D               	goto	u13640
  9661                           
  9662                           ; BSR set to: 0
  9663  00145E  C0D7  F073         	movff	f_open@dw,move_window@sector
  9664  001462  C0D8  F074         	movff	f_open@dw+1,move_window@sector+1
  9665  001466  C0D9  F075         	movff	f_open@dw+2,move_window@sector+2
  9666  00146A  C0DA  F076         	movff	f_open@dw+3,move_window@sector+3
  9667  00146E  ECA7  F018         	call	_move_window	;wreg free
  9668  001472  0900               	iorlw	0
  9669  001474  A4D8               	btfss	status,2,c
  9670  001476  D002               	goto	l11254
  9671  001478                     u13640:
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;tff.c: 887: return FR_RW_ERROR;
  9675  001478  0E08               	movlw	8
  9676  00147A  0012               	return	
  9677  00147C                     l11254:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
  9681  00147C  0EFF               	movlw	255
  9682  00147E  6FC5               	movwf	??_f_open& (0+255),b
  9683  001480  0EFF               	movlw	255
  9684  001482  6FC6               	movwf	(??_f_open+1)& (0+255),b
  9685  001484  C0D5  F0C7         	movff	f_open@rs,??_f_open+2
  9686  001488  C0D6  F0C8         	movff	f_open@rs+1,??_f_open+3
  9687  00148C  51C5               	movf	??_f_open& (0+255),w,b
  9688  00148E  27C7               	addwf	(??_f_open+2)& (0+255),f,b
  9689  001490  51C6               	movf	(??_f_open+1)& (0+255),w,b
  9690  001492  23C8               	addwfc	(??_f_open+3)& (0+255),f,b
  9691  001494  EE20 F018          	lfsr	2,24
  9692  001498  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9693  00149A  26D9               	addwf	fsr2l,f,c
  9694  00149C  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9695  00149E  22DA               	addwfc	fsr2h,f,c
  9696  0014A0  C0C7  FFDE         	movff	??_f_open+2,postinc2
  9697  0014A4  C0C8  FFDD         	movff	??_f_open+3,postdec2
  9698  0014A8                     l11256:
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
  9702  0014A8  A7C4               	btfss	f_open@mode& (0+255),3,b
  9703  0014AA  D045               	goto	l11288
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;tff.c: 892: dir[11] = 0;
  9707  0014AC  EE20 F00B          	lfsr	2,11
  9708  0014B0  51DC               	movf	f_open@dir& (0+255),w,b
  9709  0014B2  26D9               	addwf	fsr2l,f,c
  9710  0014B4  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9711  0014B6  22DA               	addwfc	fsr2h,f,c
  9712  0014B8  0E00               	movlw	0
  9713  0014BA  6EDF               	movwf	indf2,c
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;tff.c: 893: dw = get_fattime();
  9717  0014BC  ECA1  F01B         	call	_get_fattime	;wreg free
  9718  0014C0  C01D  F0D7         	movff	?_get_fattime,f_open@dw
  9719  0014C4  C01E  F0D8         	movff	?_get_fattime+1,f_open@dw+1
  9720  0014C8  C01F  F0D9         	movff	?_get_fattime+2,f_open@dw+2
  9721  0014CC  C020  F0DA         	movff	?_get_fattime+3,f_open@dw+3
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
  9725  0014D0  EE20 F00E          	lfsr	2,14
  9726  0014D4  51DC               	movf	f_open@dir& (0+255),w,b
  9727  0014D6  26D9               	addwf	fsr2l,f,c
  9728  0014D8  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9729  0014DA  22DA               	addwfc	fsr2h,f,c
  9730  0014DC  C0D7  FFDE         	movff	f_open@dw,postinc2
  9731  0014E0  C0D8  FFDE         	movff	f_open@dw+1,postinc2
  9732  0014E4  C0D9  FFDE         	movff	f_open@dw+2,postinc2
  9733  0014E8  C0DA  FFDE         	movff	f_open@dw+3,postinc2
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;tff.c: 895: dj.fs->winflag = 1;
  9737  0014EC  EE20 F01F          	lfsr	2,31
  9738  0014F0  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9739  0014F2  26D9               	addwf	fsr2l,f,c
  9740  0014F4  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9741  0014F6  22DA               	addwfc	fsr2h,f,c
  9742  0014F8  0E01               	movlw	1
  9743  0014FA  6EDF               	movwf	indf2,c
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;tff.c: 896: mode |= 0x20;
  9747  0014FC  8BC4               	bsf	f_open@mode& (0+255),5,b
  9748  0014FE  D01B               	goto	l11288
  9749  001500                     l11268:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
  9753  001500  51DB               	movf	f_open@res& (0+255),w,b
  9754  001502  A4D8               	btfss	status,2,c
  9755  001504  D70B               	goto	u13540
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
  9759  001506  51DC               	movf	f_open@dir& (0+255),w,b
  9760  001508  11DD               	iorwf	(f_open@dir+1)& (0+255),w,b
  9761  00150A  B4D8               	btfsc	status,2,c
  9762  00150C  D008               	goto	u13680
  9763                           
  9764                           ; BSR set to: 0
  9765  00150E  EE20 F00B          	lfsr	2,11
  9766  001512  51DC               	movf	f_open@dir& (0+255),w,b
  9767  001514  26D9               	addwf	fsr2l,f,c
  9768  001516  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9769  001518  22DA               	addwfc	fsr2h,f,c
  9770  00151A  A8DF               	btfss	indf2,4,c
  9771  00151C  D002               	goto	l978
  9772  00151E                     u13680:
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;tff.c: 904: return FR_NO_FILE;
  9776  00151E  0E02               	movlw	2
  9777  001520  0012               	return	
  9778  001522                     l978:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
  9782  001522  A3C4               	btfss	f_open@mode& (0+255),1,b
  9783  001524  D008               	goto	l11288
  9784                           
  9785                           ; BSR set to: 0
  9786  001526  EE20 F00B          	lfsr	2,11
  9787  00152A  51DC               	movf	f_open@dir& (0+255),w,b
  9788  00152C  26D9               	addwf	fsr2l,f,c
  9789  00152E  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9790  001530  22DA               	addwfc	fsr2h,f,c
  9791  001532  B0DF               	btfsc	indf2,0,c
  9792  001534  D753               	goto	u13610
  9793  001536                     l11288:
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
  9797  001536  EE20 F004          	lfsr	2,4
  9798  00153A  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9799  00153C  26D9               	addwf	fsr2l,f,c
  9800  00153E  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9801  001540  22DA               	addwfc	fsr2h,f,c
  9802  001542  EE10 F016          	lfsr	1,22
  9803  001546  51C0               	movf	f_open@fp& (0+255),w,b
  9804  001548  26E1               	addwf	fsr1l,f,c
  9805  00154A  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9806  00154C  22E2               	addwfc	fsr1h,f,c
  9807  00154E  CFDE FFE6          	movff	postinc2,postinc1
  9808  001552  CFDE FFE6          	movff	postinc2,postinc1
  9809  001556  CFDE FFE6          	movff	postinc2,postinc1
  9810  00155A  CFDE FFE6          	movff	postinc2,postinc1
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;tff.c: 910: fp->dir_ptr = dir;
  9814  00155E  EE20 F01A          	lfsr	2,26
  9815  001562  51C0               	movf	f_open@fp& (0+255),w,b
  9816  001564  26D9               	addwf	fsr2l,f,c
  9817  001566  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9818  001568  22DA               	addwfc	fsr2h,f,c
  9819  00156A  C0DC  FFDE         	movff	f_open@dir,postinc2
  9820  00156E  C0DD  FFDD         	movff	f_open@dir+1,postdec2
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;tff.c: 912: fp->flag = mode;
  9824  001572  EE20 F002          	lfsr	2,2
  9825  001576  51C0               	movf	f_open@fp& (0+255),w,b
  9826  001578  26D9               	addwf	fsr2l,f,c
  9827  00157A  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9828  00157C  22DA               	addwfc	fsr2h,f,c
  9829  00157E  C0C4  FFDF         	movff	f_open@mode,indf2
  9830                           
  9831                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9832  001582  EE20 F01A          	lfsr	2,26
  9833  001586  51DC               	movf	f_open@dir& (0+255),w,b
  9834  001588  26D9               	addwf	fsr2l,f,c
  9835  00158A  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9836  00158C  22DA               	addwfc	fsr2h,f,c
  9837  00158E  EE10 F00E          	lfsr	1,14
  9838  001592  51C0               	movf	f_open@fp& (0+255),w,b
  9839  001594  26E1               	addwf	fsr1l,f,c
  9840  001596  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9841  001598  22E2               	addwfc	fsr1h,f,c
  9842  00159A  CFDE FFE6          	movff	postinc2,postinc1
  9843  00159E  CFDD FFE5          	movff	postdec2,postdec1
  9844                           
  9845                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
  9846  0015A2  EE20 F01C          	lfsr	2,28
  9847  0015A6  51DC               	movf	f_open@dir& (0+255),w,b
  9848  0015A8  26D9               	addwf	fsr2l,f,c
  9849  0015AA  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9850  0015AC  22DA               	addwfc	fsr2h,f,c
  9851  0015AE  EE10 F00A          	lfsr	1,10
  9852  0015B2  51C0               	movf	f_open@fp& (0+255),w,b
  9853  0015B4  26E1               	addwf	fsr1l,f,c
  9854  0015B6  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9855  0015B8  22E2               	addwfc	fsr1h,f,c
  9856  0015BA  CFDE FFE6          	movff	postinc2,postinc1
  9857  0015BE  CFDE FFE6          	movff	postinc2,postinc1
  9858  0015C2  CFDE FFE6          	movff	postinc2,postinc1
  9859  0015C6  CFDE FFE6          	movff	postinc2,postinc1
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
  9863  0015CA  EE20 F006          	lfsr	2,6
  9864  0015CE  51C0               	movf	f_open@fp& (0+255),w,b
  9865  0015D0  26D9               	addwf	fsr2l,f,c
  9866  0015D2  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9867  0015D4  22DA               	addwfc	fsr2h,f,c
  9868  0015D6  6ADE               	clrf	postinc2,c
  9869  0015D8  6ADE               	clrf	postinc2,c
  9870  0015DA  6ADE               	clrf	postinc2,c
  9871  0015DC  6ADD               	clrf	postdec2,c
  9872                           
  9873                           ; BSR set to: 0
  9874  0015DE  EE20 F003          	lfsr	2,3
  9875  0015E2  51C0               	movf	f_open@fp& (0+255),w,b
  9876  0015E4  26D9               	addwf	fsr2l,f,c
  9877  0015E6  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9878  0015E8  22DA               	addwfc	fsr2h,f,c
  9879  0015EA  0EFF               	movlw	255
  9880  0015EC  6EDF               	movwf	indf2,c
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
  9884  0015EE  EE20 F004          	lfsr	2,4
  9885  0015F2  51C0               	movf	f_open@fp& (0+255),w,b
  9886  0015F4  26D9               	addwf	fsr2l,f,c
  9887  0015F6  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9888  0015F8  22DA               	addwfc	fsr2h,f,c
  9889  0015FA  C0E2  FFDE         	movff	f_open@dj+4,postinc2
  9890  0015FE  C0E3  FFDD         	movff	f_open@dj+5,postdec2
  9891                           
  9892                           ; BSR set to: 0
  9893  001602  C0E2  FFD9         	movff	f_open@dj+4,fsr2l
  9894  001606  C0E3  FFDA         	movff	f_open@dj+5,fsr2h
  9895  00160A  C0C0  FFE1         	movff	f_open@fp,fsr1l
  9896  00160E  C0C1  FFE2         	movff	f_open@fp+1,fsr1h
  9897  001612  CFDE FFE6          	movff	postinc2,postinc1
  9898  001616  CFDD FFE5          	movff	postdec2,postdec1
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;tff.c: 922: return FR_OK;
  9902  00161A  0E00               	movlw	0
  9903                           
  9904                           ; BSR set to: 0
  9905  00161C  0012               	return		;funcret
  9906  00161E                     __end_of_f_open:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _trace_path *****************
  9910 ;; Defined at:
  9911 ;;		line 502 in file "bibliotecas/tff.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  dj              1   71[BANK0 ] PTR struct _DIR_E
  9914 ;;		 -> f_open@dj(14), 
  9915 ;;  fn              1   72[BANK0 ] PTR unsigned char 
  9916 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
  9917 ;;  path            2   73[BANK0 ] PTR const unsigned char 
  9918 ;;		 -> STR_22(13), filename(15), 
  9919 ;;  dir             1   75[BANK0 ] PTR PTR unsigned char 
  9920 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  dptr            2   89[BANK0 ] PTR unsigned char 
  9923 ;;		 -> fs.win(512), NULL(0), fs(544), 
  9924 ;;  clust           2   86[BANK0 ] unsigned short 
  9925 ;;  fs              2   84[BANK0 ] PTR struct _FATFS
  9926 ;;		 -> NULL(0), fs(544), 
  9927 ;;  ds              1   88[BANK0 ] unsigned char 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      enum E155
  9930 ;; Registers used:
  9931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 3F/0
  9934 ;;		On exit  : 3F/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9937 ;;      Params:         0       5       0       0       0       0       0       0       0
  9938 ;;      Locals:         0      11       0       0       0       0       0       0       0
  9939 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9940 ;;      Totals:         0      20       0       0       0       0       0       0       0
  9941 ;;Total ram usage:       20 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:   11
  9944 ;; This function calls:
  9945 ;;		_clust2sect
  9946 ;;		_make_dirfile
  9947 ;;		_memcmp
  9948 ;;		_move_window
  9949 ;;		_next_dir_entry
  9950 ;; This function is called by:
  9951 ;;		_f_open
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text48
  9956  001EFE                     __ptext48:
  9957                           	callstack 0
  9958  001EFE                     _trace_path:
  9959                           	callstack 15
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;tff.c: 512: FATFS *fs = FatFs;
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;incstack = 0
  9966  001EFE  C038  F0B4         	movff	_FatFs,trace_path@fs
  9967  001F02  C039  F0B5         	movff	_FatFs+1,trace_path@fs+1
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;tff.c: 515: dj->fs = fs;
  9971  001F06  51A7               	movf	trace_path@dj& (0+255),w,b
  9972  001F08  6ED9               	movwf	fsr2l,c
  9973  001F0A  6ADA               	clrf	fsr2h,c
  9974  001F0C  0E04               	movlw	4
  9975  001F0E  26D9               	addwf	fsr2l,f,c
  9976  001F10  C0B4  FFDE         	movff	trace_path@fs,postinc2
  9977  001F14  C0B5  FFDD         	movff	trace_path@fs+1,postdec2
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;tff.c: 516: clust = fs->dirbase;
  9981  001F18  EE20 F00C          	lfsr	2,12
  9982  001F1C  51B4               	movf	trace_path@fs& (0+255),w,b
  9983  001F1E  26D9               	addwf	fsr2l,f,c
  9984  001F20  51B5               	movf	(trace_path@fs+1)& (0+255),w,b
  9985  001F22  22DA               	addwfc	fsr2h,f,c
  9986  001F24  CFDE F0B6          	movff	postinc2,trace_path@clust
  9987  001F28  CFDD F0B7          	movff	postdec2,trace_path@clust+1
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
  9991  001F2C  51A7               	movf	trace_path@dj& (0+255),w,b
  9992  001F2E  6ED9               	movwf	fsr2l,c
  9993  001F30  6ADA               	clrf	fsr2h,c
  9994  001F32  0E06               	movlw	6
  9995  001F34  26D9               	addwf	fsr2l,f,c
  9996  001F36  0E00               	movlw	0
  9997  001F38  6EDE               	movwf	postinc2,c
  9998  001F3A  0E00               	movlw	0
  9999  001F3C  6EDD               	movwf	postdec2,c
 10000  001F3E  51A7               	movf	trace_path@dj& (0+255),w,b
 10001  001F40  6EE1               	movwf	fsr1l,c
 10002  001F42  6AE2               	clrf	fsr1h,c
 10003  001F44  0E08               	movlw	8
 10004  001F46  26E1               	addwf	fsr1l,f,c
 10005  001F48  CFDE FFE6          	movff	postinc2,postinc1
 10006  001F4C  CFDD FFE5          	movff	postdec2,postdec1
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;tff.c: 525: dj->sect = clust;
 10010  001F50  51B6               	movf	trace_path@clust& (0+255),w,b
 10011  001F52  6FAC               	movwf	??_trace_path& (0+255),b
 10012  001F54  51B7               	movf	(trace_path@clust+1)& (0+255),w,b
 10013  001F56  6FAD               	movwf	(??_trace_path+1)& (0+255),b
 10014  001F58  6BAE               	clrf	(??_trace_path+2)& (0+255),b
 10015  001F5A  6BAF               	clrf	(??_trace_path+3)& (0+255),b
 10016  001F5C  51A7               	movf	trace_path@dj& (0+255),w,b
 10017  001F5E  6ED9               	movwf	fsr2l,c
 10018  001F60  6ADA               	clrf	fsr2h,c
 10019  001F62  0E0A               	movlw	10
 10020  001F64  26D9               	addwf	fsr2l,f,c
 10021  001F66  C0AC  FFDE         	movff	??_trace_path,postinc2
 10022  001F6A  C0AD  FFDE         	movff	??_trace_path+1,postinc2
 10023  001F6E  C0AE  FFDE         	movff	??_trace_path+2,postinc2
 10024  001F72  C0AF  FFDE         	movff	??_trace_path+3,postinc2
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 10028  001F76  51A7               	movf	trace_path@dj& (0+255),w,b
 10029  001F78  6ED9               	movwf	fsr2l,c
 10030  001F7A  6ADA               	clrf	fsr2h,c
 10031  001F7C  0E02               	movlw	2
 10032  001F7E  26D9               	addwf	fsr2l,f,c
 10033  001F80  0E00               	movlw	0
 10034  001F82  6EDE               	movwf	postinc2,c
 10035  001F84  0E00               	movlw	0
 10036  001F86  6EDD               	movwf	postdec2,c
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;tff.c: 529: if (*path == '\0') {
 10040  001F88  C0A9  FFF6         	movff	trace_path@path,tblptrl
 10041  001F8C  C0AA  FFF7         	movff	trace_path@path+1,tblptrh
 10042  001F90  6AF8               	clrf	tblptru,c
 10043  001F92  0E07               	movlw	(high __ramtop+-1)
 10044  001F94  64F7               	cpfsgt	tblptrh,c
 10045  001F96  D003               	bra	u12847
 10046  001F98  0008               	tblrd		*
 10047  001F9A  50F5               	movf	tablat,w,c
 10048  001F9C  D005               	bra	u12840
 10049  001F9E                     u12847:
 10050  001F9E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10051  001FA2  CFF7 FFE2          	movff	tblptrh,fsr1h
 10052  001FA6  50E7               	movf	indf1,w,c
 10053  001FA8                     u12840:
 10054  001FA8  0900               	iorlw	0
 10055  001FAA  A4D8               	btfss	status,2,c
 10056  001FAC  D00A               	goto	l10806
 10057                           
 10058                           ;tff.c: 530: *dir = (0); return FR_OK;
 10059  001FAE  0100               	movlb	0	; () banked
 10060  001FB0  51AB               	movf	trace_path@dir& (0+255),w,b
 10061  001FB2  6ED9               	movwf	fsr2l,c
 10062  001FB4  6ADA               	clrf	fsr2h,c
 10063  001FB6  0E00               	movlw	0
 10064  001FB8  6EDE               	movwf	postinc2,c
 10065  001FBA  0E00               	movlw	0
 10066  001FBC  6EDD               	movwf	postdec2,c
 10067  001FBE                     l10802:
 10068                           
 10069                           ; BSR set to: 0
 10070  001FBE  0E00               	movlw	0
 10071  001FC0  0012               	return	
 10072  001FC2                     l10806:
 10073                           
 10074                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 10075  001FC2  0EA9               	movlw	low trace_path@path
 10076  001FC4  6E21               	movwf	make_dirfile@path^0,c
 10077  001FC6  C0A8  F022         	movff	trace_path@fn,make_dirfile@dirname
 10078  001FCA  ECF4  F01A         	call	_make_dirfile	;wreg free
 10079  001FCE  0100               	movlb	0	; () banked
 10080  001FD0  6FB8               	movwf	trace_path@ds& (0+255),b
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 10084  001FD2  05B8               	decf	trace_path@ds& (0+255),w,b
 10085  001FD4  A4D8               	btfss	status,2,c
 10086  001FD6  D002               	goto	l10814
 10087                           
 10088                           ; BSR set to: 0
 10089  001FD8  0E04               	movlw	4
 10090  001FDA  0012               	return	
 10091  001FDC                     l10814:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10095  001FDC  51A7               	movf	trace_path@dj& (0+255),w,b
 10096  001FDE  6ED9               	movwf	fsr2l,c
 10097  001FE0  6ADA               	clrf	fsr2h,c
 10098  001FE2  0E0A               	movlw	10
 10099  001FE4  26D9               	addwf	fsr2l,f,c
 10100  001FE6  CFDE F073          	movff	postinc2,move_window@sector
 10101  001FEA  CFDE F074          	movff	postinc2,move_window@sector+1
 10102  001FEE  CFDE F075          	movff	postinc2,move_window@sector+2
 10103  001FF2  CFDE F076          	movff	postinc2,move_window@sector+3
 10104  001FF6  ECA7  F018         	call	_move_window	;wreg free
 10105  001FFA  0900               	iorlw	0
 10106  001FFC  A4D8               	btfss	status,2,c
 10107  001FFE  D002               	goto	l10820
 10108                           
 10109                           ; BSR set to: 0
 10110  002000  0E08               	movlw	8
 10111  002002  0012               	return	
 10112  002004                     l10820:
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 10116  002004  51A7               	movf	trace_path@dj& (0+255),w,b
 10117  002006  6ED9               	movwf	fsr2l,c
 10118  002008  6ADA               	clrf	fsr2h,c
 10119  00200A  0E02               	movlw	2
 10120  00200C  26D9               	addwf	fsr2l,f,c
 10121  00200E  CFDE F0AC          	movff	postinc2,??_trace_path
 10122  002012  CFDD F0AD          	movff	postdec2,??_trace_path+1
 10123  002016  0E0F               	movlw	15
 10124  002018  17AC               	andwf	??_trace_path& (0+255),f,b
 10125  00201A  0E00               	movlw	0
 10126  00201C  17AD               	andwf	(??_trace_path+1)& (0+255),f,b
 10127  00201E  0E05               	movlw	5
 10128  002020                     u12885:
 10129  002020  90D8               	bcf	status,0,c
 10130  002022  37AC               	rlcf	??_trace_path& (0+255),f,b
 10131  002024  37AD               	rlcf	(??_trace_path+1)& (0+255),f,b
 10132  002026  2EE8               	decfsz	wreg,f,c
 10133  002028  D7FB               	goto	u12885
 10134  00202A  C0B4  F0AE         	movff	trace_path@fs,??_trace_path+2
 10135  00202E  C0B5  F0AF         	movff	trace_path@fs+1,??_trace_path+3
 10136  002032  51AC               	movf	??_trace_path& (0+255),w,b
 10137  002034  27AE               	addwf	(??_trace_path+2)& (0+255),f,b
 10138  002036  51AD               	movf	(??_trace_path+1)& (0+255),w,b
 10139  002038  23AF               	addwfc	(??_trace_path+3)& (0+255),f,b
 10140  00203A  0E20               	movlw	32
 10141  00203C  25AE               	addwf	(??_trace_path+2)& (0+255),w,b
 10142  00203E  6FB9               	movwf	trace_path@dptr& (0+255),b
 10143  002040  0E00               	movlw	0
 10144  002042  21AF               	addwfc	(??_trace_path+3)& (0+255),w,b
 10145  002044  6FBA               	movwf	(trace_path@dptr+1)& (0+255),b
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;tff.c: 539: if (dptr[0] == 0)
 10149  002046  C0B9  FFD9         	movff	trace_path@dptr,fsr2l
 10150  00204A  C0BA  FFDA         	movff	trace_path@dptr+1,fsr2h
 10151  00204E  50DF               	movf	indf2,w,c
 10152  002050  A4D8               	btfss	status,2,c
 10153  002052  D00D               	goto	l10832
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 10157  002054  51B8               	movf	trace_path@ds& (0+255),w,b
 10158  002056  B4D8               	btfsc	status,2,c
 10159  002058  D004               	goto	l10828
 10160                           
 10161                           ; BSR set to: 0
 10162  00205A  0E00               	movlw	0
 10163  00205C  6FB1               	movwf	(_trace_path$1693+1)& (0+255),b
 10164  00205E  0E03               	movlw	3
 10165  002060  D003               	goto	L3
 10166  002062                     l10828:
 10167                           
 10168                           ; BSR set to: 0
 10169  002062  0E00               	movlw	0
 10170  002064  6FB1               	movwf	(_trace_path$1693+1)& (0+255),b
 10171  002066  0E02               	movlw	2
 10172  002068                     L3:
 10173  002068  6FB0               	movwf	_trace_path$1693& (0+255),b
 10174                           
 10175                           ; BSR set to: 0
 10176  00206A  51B0               	movf	_trace_path$1693& (0+255),w,b
 10177  00206C  0012               	return	
 10178  00206E                     l10832:
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 10182  00206E  C0B9  FFD9         	movff	trace_path@dptr,fsr2l
 10183  002072  C0BA  FFDA         	movff	trace_path@dptr+1,fsr2h
 10184  002076  0EE5               	movlw	229
 10185  002078  18DE               	xorwf	postinc2,w,c
 10186  00207A  B4D8               	btfsc	status,2,c
 10187  00207C  D019               	goto	l10840
 10188                           
 10189                           ; BSR set to: 0
 10190  00207E  EE20 F00B          	lfsr	2,11
 10191  002082  51B9               	movf	trace_path@dptr& (0+255),w,b
 10192  002084  26D9               	addwf	fsr2l,f,c
 10193  002086  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
 10194  002088  22DA               	addwfc	fsr2h,f,c
 10195  00208A  B6DF               	btfsc	indf2,3,c
 10196  00208C  D011               	goto	l10840
 10197                           
 10198                           ; BSR set to: 0
 10199  00208E  C0B9  F019         	movff	trace_path@dptr,memcmp@s1
 10200  002092  C0BA  F01A         	movff	trace_path@dptr+1,memcmp@s1+1
 10201  002096  C0A8  F01B         	movff	trace_path@fn,memcmp@s2
 10202  00209A  6A1C               	clrf	(memcmp@s2+1)^0,c
 10203  00209C  0E00               	movlw	0
 10204  00209E  6E1E               	movwf	(memcmp@n+1)^0,c
 10205  0020A0  0E0B               	movlw	11
 10206  0020A2  6E1D               	movwf	memcmp@n^0,c
 10207  0020A4  ECF7  F022         	call	_memcmp	;wreg free
 10208  0020A8  5019               	movf	?_memcmp^0,w,c
 10209  0020AA  101A               	iorwf	(?_memcmp+1)^0,w,c
 10210  0020AC  B4D8               	btfsc	status,2,c
 10211  0020AE  D014               	goto	l10850
 10212  0020B0                     l10840:
 10213                           
 10214                           ;tff.c: 544: if (!next_dir_entry(dj))
 10215  0020B0  C0A7  F09B         	movff	trace_path@dj,next_dir_entry@dj
 10216  0020B4  EC42  F01A         	call	_next_dir_entry	;wreg free
 10217  0020B8  0900               	iorlw	0
 10218  0020BA  A4D8               	btfss	status,2,c
 10219  0020BC  D78F               	goto	l10814
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 10223  0020BE  51B8               	movf	trace_path@ds& (0+255),w,b
 10224  0020C0  B4D8               	btfsc	status,2,c
 10225  0020C2  D004               	goto	l10846
 10226                           
 10227                           ; BSR set to: 0
 10228  0020C4  0E00               	movlw	0
 10229  0020C6  6FB3               	movwf	(_trace_path$1695+1)& (0+255),b
 10230  0020C8  0E03               	movlw	3
 10231  0020CA  D003               	goto	L4
 10232  0020CC                     l10846:
 10233                           
 10234                           ; BSR set to: 0
 10235  0020CC  0E00               	movlw	0
 10236  0020CE  6FB3               	movwf	(_trace_path$1695+1)& (0+255),b
 10237  0020D0  0E02               	movlw	2
 10238  0020D2                     L4:
 10239  0020D2  6FB2               	movwf	_trace_path$1695& (0+255),b
 10240                           
 10241                           ; BSR set to: 0
 10242  0020D4  51B2               	movf	_trace_path$1695& (0+255),w,b
 10243  0020D6  0012               	return	
 10244  0020D8                     l10850:
 10245                           
 10246                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 10247  0020D8  0100               	movlb	0	; () banked
 10248  0020DA  51B8               	movf	trace_path@ds& (0+255),w,b
 10249  0020DC  A4D8               	btfss	status,2,c
 10250  0020DE  D008               	goto	l10858
 10251                           
 10252                           ; BSR set to: 0
 10253  0020E0  51AB               	movf	trace_path@dir& (0+255),w,b
 10254  0020E2  6ED9               	movwf	fsr2l,c
 10255  0020E4  6ADA               	clrf	fsr2h,c
 10256  0020E6  C0B9  FFDE         	movff	trace_path@dptr,postinc2
 10257  0020EA  C0BA  FFDD         	movff	trace_path@dptr+1,postdec2
 10258  0020EE  D767               	goto	l10802
 10259  0020F0                     l10858:
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 10263  0020F0  EE20 F00B          	lfsr	2,11
 10264  0020F4  51B9               	movf	trace_path@dptr& (0+255),w,b
 10265  0020F6  26D9               	addwf	fsr2l,f,c
 10266  0020F8  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
 10267  0020FA  22DA               	addwfc	fsr2h,f,c
 10268  0020FC  B8DF               	btfsc	indf2,4,c
 10269  0020FE  D002               	goto	l10864
 10270                           
 10271                           ; BSR set to: 0
 10272  002100  0E03               	movlw	3
 10273  002102  0012               	return	
 10274  002104                     l10864:
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 10278  002104  EE20 F01A          	lfsr	2,26
 10279  002108  51B9               	movf	trace_path@dptr& (0+255),w,b
 10280  00210A  26D9               	addwf	fsr2l,f,c
 10281  00210C  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
 10282  00210E  22DA               	addwfc	fsr2h,f,c
 10283  002110  CFDE F0B6          	movff	postinc2,trace_path@clust
 10284  002114  CFDD F0B7          	movff	postdec2,trace_path@clust+1
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 10288  002118  51A7               	movf	trace_path@dj& (0+255),w,b
 10289  00211A  6ED9               	movwf	fsr2l,c
 10290  00211C  6ADA               	clrf	fsr2h,c
 10291  00211E  0E06               	movlw	6
 10292  002120  26D9               	addwf	fsr2l,f,c
 10293  002122  C0B6  FFDE         	movff	trace_path@clust,postinc2
 10294  002126  C0B7  FFDD         	movff	trace_path@clust+1,postdec2
 10295  00212A  51A7               	movf	trace_path@dj& (0+255),w,b
 10296  00212C  6EE1               	movwf	fsr1l,c
 10297  00212E  6AE2               	clrf	fsr1h,c
 10298  002130  0E08               	movlw	8
 10299  002132  26E1               	addwf	fsr1l,f,c
 10300  002134  CFDE FFE6          	movff	postinc2,postinc1
 10301  002138  CFDD FFE5          	movff	postdec2,postdec1
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;tff.c: 555: dj->sect = clust2sect(clust);
 10305  00213C  C0B6  F025         	movff	trace_path@clust,clust2sect@clust
 10306  002140  C0B7  F026         	movff	trace_path@clust+1,clust2sect@clust+1
 10307  002144  EC61  F020         	call	_clust2sect	;wreg free
 10308  002148  51A7               	movf	trace_path@dj& (0+255),w,b
 10309  00214A  6ED9               	movwf	fsr2l,c
 10310  00214C  6ADA               	clrf	fsr2h,c
 10311  00214E  0E0A               	movlw	10
 10312  002150  26D9               	addwf	fsr2l,f,c
 10313  002152  C025  FFDE         	movff	?_clust2sect,postinc2
 10314  002156  C026  FFDE         	movff	?_clust2sect+1,postinc2
 10315  00215A  C027  FFDE         	movff	?_clust2sect+2,postinc2
 10316  00215E  C028  FFDE         	movff	?_clust2sect+3,postinc2
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;tff.c: 556: dj->index = 2;
 10320  002162  51A7               	movf	trace_path@dj& (0+255),w,b
 10321  002164  6ED9               	movwf	fsr2l,c
 10322  002166  6ADA               	clrf	fsr2h,c
 10323  002168  0E02               	movlw	2
 10324  00216A  26D9               	addwf	fsr2l,f,c
 10325  00216C  0E02               	movlw	2
 10326  00216E  6EDE               	movwf	postinc2,c
 10327  002170  0E00               	movlw	0
 10328  002172  6EDD               	movwf	postdec2,c
 10329                           
 10330                           ;tff.c: 557: }
 10331  002174  D726               	goto	l10806
 10332  002176                     __end_of_trace_path:
 10333                           	callstack 0
 10334                           
 10335 ;; *************** function _make_dirfile *****************
 10336 ;; Defined at:
 10337 ;;		line 439 in file "bibliotecas/tff.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  path            1   32[COMRAM] PTR PTR const unsigned c
 10340 ;;		 -> trace_path@path(2), 
 10341 ;;  dirname         1   33[COMRAM] PTR unsigned char 
 10342 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  c               1   42[COMRAM] unsigned char 
 10345 ;;  n               1   41[COMRAM] unsigned char 
 10346 ;;  a               1   40[COMRAM] unsigned char 
 10347 ;;  t               1   39[COMRAM] unsigned char 
 10348 ;;  b               1   38[COMRAM] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      unsigned char 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10358 ;;      Params:         2       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10361 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:       11 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    4
 10365 ;; This function calls:
 10366 ;;		_memset
 10367 ;; This function is called by:
 10368 ;;		_trace_path
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text49
 10373  0035E8                     __ptext49:
 10374                           	callstack 0
 10375  0035E8                     _make_dirfile:
 10376                           	callstack 21
 10377                           
 10378                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;incstack = 0
 10382  0035E8  C022  F019         	movff	make_dirfile@dirname,memset@p1
 10383  0035EC  6A1A               	clrf	(memset@p1+1)^0,c
 10384  0035EE  0E00               	movlw	0
 10385  0035F0  6E1C               	movwf	(memset@c+1)^0,c
 10386  0035F2  0E20               	movlw	32
 10387  0035F4  6E1B               	movwf	memset@c^0,c
 10388  0035F6  0E00               	movlw	0
 10389  0035F8  6E1E               	movwf	(memset@n+1)^0,c
 10390  0035FA  0E0B               	movlw	11
 10391  0035FC  6E1D               	movwf	memset@n^0,c
 10392  0035FE  EC80  F029         	call	_memset	;wreg free
 10393                           
 10394                           ;tff.c: 448: a = 0; b = 0x18;
 10395  003602  0E00               	movlw	0
 10396  003604  6E29               	movwf	make_dirfile@a^0,c
 10397  003606  0E18               	movlw	24
 10398  003608  6E27               	movwf	make_dirfile@b^0,c
 10399                           
 10400                           ;tff.c: 449: n = 0; t = 8;
 10401  00360A  0E00               	movlw	0
 10402  00360C  6E2A               	movwf	make_dirfile@n^0,c
 10403  00360E  0E08               	movlw	8
 10404  003610  6E28               	movwf	make_dirfile@t^0,c
 10405  003612                     l7086:
 10406                           
 10407                           ;tff.c: 451: c = *(*path)++;
 10408  003612  5021               	movf	make_dirfile@path^0,w,c
 10409  003614  6ED9               	movwf	fsr2l,c
 10410  003616  6ADA               	clrf	fsr2h,c
 10411  003618  CFDF F023          	movff	indf2,??_make_dirfile
 10412  00361C  0E01               	movlw	1
 10413  00361E  26DE               	addwf	postinc2,f,c
 10414  003620  CFDF F024          	movff	indf2,??_make_dirfile+1
 10415  003624  0E00               	movlw	0
 10416  003626  22DD               	addwfc	postdec2,f,c
 10417  003628  C023  FFF6         	movff	??_make_dirfile,tblptrl
 10418  00362C  C024  FFF7         	movff	??_make_dirfile+1,tblptrh
 10419  003630  6AF8               	clrf	tblptru,c
 10420  003632  0E07               	movlw	(high __ramtop+-1)
 10421  003634  64F7               	cpfsgt	tblptrh,c
 10422  003636  D003               	bra	u6967
 10423  003638  0008               	tblrd		*
 10424  00363A  50F5               	movf	tablat,w,c
 10425  00363C  D005               	bra	u6960
 10426  00363E                     u6967:
 10427  00363E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10428  003642  CFF7 FFE2          	movff	tblptrh,fsr1h
 10429  003646  50E7               	movf	indf1,w,c
 10430  003648                     u6960:
 10431  003648  6E2B               	movwf	make_dirfile@c^0,c
 10432                           
 10433                           ;tff.c: 452: if (c == '\0' || c == '/') {
 10434  00364A  502B               	movf	make_dirfile@c^0,w,c
 10435  00364C  B4D8               	btfsc	status,2,c
 10436  00364E  D004               	goto	u6980
 10437  003650  0E2F               	movlw	47
 10438  003652  182B               	xorwf	make_dirfile@c^0,w,c
 10439  003654  A4D8               	btfss	status,2,c
 10440  003656  D012               	goto	l7106
 10441  003658                     u6980:
 10442                           
 10443                           ;tff.c: 453: if (n == 0) break;
 10444  003658  502A               	movf	make_dirfile@n^0,w,c
 10445  00365A  B4D8               	btfsc	status,2,c
 10446  00365C  D070               	goto	l7194
 10447  00365E  5029               	movf	make_dirfile@a^0,w,c
 10448  003660  1427               	andwf	make_dirfile@b^0,w,c
 10449  003662  6E23               	movwf	??_make_dirfile^0,c
 10450  003664  5023               	movf	??_make_dirfile^0,w,c
 10451  003666  6E25               	movwf	_make_dirfile$1646^0,c
 10452  003668  6A26               	clrf	(_make_dirfile$1646+1)^0,c
 10453  00366A  5022               	movf	make_dirfile@dirname^0,w,c
 10454  00366C  6ED9               	movwf	fsr2l,c
 10455  00366E  6ADA               	clrf	fsr2h,c
 10456  003670  0E0B               	movlw	11
 10457  003672  26D9               	addwf	fsr2l,f,c
 10458  003674  C025  FFDF         	movff	_make_dirfile$1646,indf2
 10459                           
 10460                           ;tff.c: 455: return c;
 10461  003678  502B               	movf	make_dirfile@c^0,w,c
 10462  00367A  0012               	return	
 10463  00367C                     l7106:
 10464                           
 10465                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 10466  00367C  0E20               	movlw	32
 10467  00367E  642B               	cpfsgt	make_dirfile@c^0,c
 10468  003680  D05E               	goto	l7194
 10469  003682  0E7F               	movlw	127
 10470  003684  182B               	xorwf	make_dirfile@c^0,w,c
 10471  003686  B4D8               	btfsc	status,2,c
 10472  003688  D05A               	goto	l7194
 10473                           
 10474                           ;tff.c: 458: if (c == '.') {
 10475  00368A  0E2E               	movlw	46
 10476  00368C  182B               	xorwf	make_dirfile@c^0,w,c
 10477  00368E  A4D8               	btfss	status,2,c
 10478  003690  D00C               	goto	l7136
 10479                           
 10480                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 10481  003692  B029               	btfsc	make_dirfile@a^0,0,c
 10482  003694  D054               	goto	l7194
 10483  003696  502A               	movf	make_dirfile@n^0,w,c
 10484  003698  B4D8               	btfsc	status,2,c
 10485  00369A  D051               	goto	l7194
 10486  00369C  0E09               	movlw	9
 10487  00369E  602A               	cpfslt	make_dirfile@n^0,c
 10488  0036A0  D04E               	goto	l7194
 10489                           
 10490                           ;tff.c: 460: n = 8; t = 11; continue;
 10491  0036A2  0E08               	movlw	8
 10492  0036A4  6E2A               	movwf	make_dirfile@n^0,c
 10493  0036A6  0E0B               	movlw	11
 10494  0036A8  D7B3               	goto	L5
 10495  0036AA                     l7136:
 10496                           
 10497                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 10498  0036AA  0E22               	movlw	34
 10499  0036AC  182B               	xorwf	make_dirfile@c^0,w,c
 10500  0036AE  B4D8               	btfsc	status,2,c
 10501  0036B0  D046               	goto	l7194
 10502                           
 10503                           ;tff.c: 472: if (c <= ')') goto md_l1;
 10504  0036B2  0E2A               	movlw	42
 10505  0036B4  602B               	cpfslt	make_dirfile@c^0,c
 10506  0036B6  D001               	goto	l7144
 10507  0036B8  D035               	goto	l851
 10508  0036BA                     l7144:
 10509                           
 10510                           ;tff.c: 473: if (c <= ',') break;
 10511  0036BA  0E2D               	movlw	45
 10512  0036BC  602B               	cpfslt	make_dirfile@c^0,c
 10513  0036BE  D001               	goto	l7148
 10514  0036C0  D03E               	goto	l7194
 10515  0036C2                     l7148:
 10516                           
 10517                           ;tff.c: 474: if (c <= '9') goto md_l1;
 10518  0036C2  0E3A               	movlw	58
 10519  0036C4  602B               	cpfslt	make_dirfile@c^0,c
 10520  0036C6  D001               	goto	l7152
 10521  0036C8  D02D               	goto	l851
 10522  0036CA                     l7152:
 10523                           
 10524                           ;tff.c: 475: if (c <= '?') break;
 10525  0036CA  0E40               	movlw	64
 10526  0036CC  602B               	cpfslt	make_dirfile@c^0,c
 10527  0036CE  D001               	goto	l854
 10528  0036D0  D036               	goto	l7194
 10529  0036D2                     l854:
 10530                           
 10531                           ;tff.c: 476: if (!(a & 1)) {
 10532  0036D2  B029               	btfsc	make_dirfile@a^0,0,c
 10533  0036D4  D027               	goto	l851
 10534                           
 10535                           ;tff.c: 477: if (c == '|') break;
 10536  0036D6  0E7C               	movlw	124
 10537  0036D8  182B               	xorwf	make_dirfile@c^0,w,c
 10538  0036DA  B4D8               	btfsc	status,2,c
 10539  0036DC  D030               	goto	l7194
 10540                           
 10541                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 10542  0036DE  0E5A               	movlw	90
 10543  0036E0  642B               	cpfsgt	make_dirfile@c^0,c
 10544  0036E2  D004               	goto	l7166
 10545  0036E4  0E5E               	movlw	94
 10546  0036E6  602B               	cpfslt	make_dirfile@c^0,c
 10547  0036E8  D001               	goto	l7166
 10548  0036EA  D029               	goto	l7194
 10549  0036EC                     l7166:
 10550  0036EC  0E40               	movlw	64
 10551  0036EE  642B               	cpfsgt	make_dirfile@c^0,c
 10552  0036F0  D00A               	goto	l7176
 10553  0036F2  0E5B               	movlw	91
 10554  0036F4  602B               	cpfslt	make_dirfile@c^0,c
 10555  0036F6  D007               	goto	l7176
 10556                           
 10557                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 10558  0036F8  0E08               	movlw	8
 10559  0036FA  1828               	xorwf	make_dirfile@t^0,w,c
 10560  0036FC  A4D8               	btfss	status,2,c
 10561  0036FE  D002               	goto	l7174
 10562  003700  9627               	bcf	make_dirfile@b^0,3,c
 10563  003702  D001               	goto	l7176
 10564  003704                     l7174:
 10565  003704  9827               	bcf	make_dirfile@b^0,4,c
 10566  003706                     l7176:
 10567                           
 10568                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 10569  003706  0E60               	movlw	96
 10570  003708  642B               	cpfsgt	make_dirfile@c^0,c
 10571  00370A  D00C               	goto	l851
 10572  00370C  0E7B               	movlw	123
 10573  00370E  602B               	cpfslt	make_dirfile@c^0,c
 10574  003710  D009               	goto	l851
 10575                           
 10576                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 10577  003712  0E20               	movlw	32
 10578  003714  5E2B               	subwf	make_dirfile@c^0,f,c
 10579  003716  0E08               	movlw	8
 10580  003718  1828               	xorwf	make_dirfile@t^0,w,c
 10581  00371A  A4D8               	btfss	status,2,c
 10582  00371C  D002               	goto	l7184
 10583  00371E  8629               	bsf	make_dirfile@a^0,3,c
 10584  003720  D001               	goto	l851
 10585  003722                     l7184:
 10586  003722  8829               	bsf	make_dirfile@a^0,4,c
 10587  003724                     l851:
 10588                           
 10589                           ;tff.c: 487: a &= 0xFE;
 10590  003724  9029               	bcf	make_dirfile@a^0,0,c
 10591                           
 10592                           ;tff.c: 489: if (n >= t) break;
 10593  003726  5028               	movf	make_dirfile@t^0,w,c
 10594  003728  5C2A               	subwf	make_dirfile@n^0,w,c
 10595  00372A  B0D8               	btfsc	status,0,c
 10596  00372C  D008               	goto	l7194
 10597                           
 10598                           ;tff.c: 490: dirname[n++] = c;
 10599  00372E  5022               	movf	make_dirfile@dirname^0,w,c
 10600  003730  242A               	addwf	make_dirfile@n^0,w,c
 10601  003732  6ED9               	movwf	fsr2l,c
 10602  003734  6ADA               	clrf	fsr2h,c
 10603  003736  C02B  FFDF         	movff	make_dirfile@c,indf2
 10604  00373A  2A2A               	incf	make_dirfile@n^0,f,c
 10605  00373C  D76A               	goto	l7086
 10606  00373E                     l7194:
 10607                           
 10608                           ;tff.c: 492: return 1;
 10609  00373E  0E01               	movlw	1
 10610  003740  0012               	return		;funcret
 10611  003742                     __end_of_make_dirfile:
 10612                           	callstack 0
 10613                           
 10614 ;; *************** function _reserve_direntry *****************
 10615 ;; Defined at:
 10616 ;;		line 568 in file "bibliotecas/tff.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  dj              1   78[BANK0 ] PTR struct _DIR_E
 10619 ;;		 -> f_open@dj(14), 
 10620 ;;  dir             1   79[BANK0 ] PTR PTR unsigned char 
 10621 ;;		 -> f_open@dir(2), 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  sector          4   84[BANK0 ] unsigned long 
 10624 ;;  fs              2   94[BANK0 ] PTR struct _FATFS
 10625 ;;		 -> NULL(0), fs(544), 
 10626 ;;  clust           2   92[BANK0 ] unsigned short 
 10627 ;;  dptr            2   89[BANK0 ] PTR unsigned char 
 10628 ;;		 -> fs.win(512), NULL(0), fs(544), 
 10629 ;;  c               1   91[BANK0 ] unsigned char 
 10630 ;;  n               1   88[BANK0 ] unsigned char 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      enum E155
 10633 ;; Registers used:
 10634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 3F/0
 10637 ;;		On exit  : 3F/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         0       2       0       0       0       0       0       0       0
 10641 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10643 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10644 ;;Total ram usage:       18 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:   11
 10647 ;; This function calls:
 10648 ;;		_clust2sect
 10649 ;;		_create_chain
 10650 ;;		_disk_write
 10651 ;;		_memset
 10652 ;;		_move_window
 10653 ;;		_next_dir_entry
 10654 ;; This function is called by:
 10655 ;;		_f_open
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text50
 10660  002176                     __ptext50:
 10661                           	callstack 0
 10662  002176                     _reserve_direntry:
 10663                           	callstack 15
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 10667                           
 10668                           ;incstack = 0
 10669  002176  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10670  002178  6ED9               	movwf	fsr2l,c
 10671  00217A  6ADA               	clrf	fsr2h,c
 10672  00217C  0E04               	movlw	4
 10673  00217E  26D9               	addwf	fsr2l,f,c
 10674  002180  CFDE F0BE          	movff	postinc2,reserve_direntry@fs
 10675  002184  CFDD F0BF          	movff	postdec2,reserve_direntry@fs+1
 10676                           
 10677                           ;tff.c: 580: clust = dj->sclust;
 10678  002188  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10679  00218A  6ED9               	movwf	fsr2l,c
 10680  00218C  6ADA               	clrf	fsr2h,c
 10681  00218E  0E06               	movlw	6
 10682  002190  26D9               	addwf	fsr2l,f,c
 10683  002192  CFDE F0BC          	movff	postinc2,reserve_direntry@clust
 10684  002196  CFDD F0BD          	movff	postdec2,reserve_direntry@clust+1
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;tff.c: 581: if (clust != 0) {
 10688  00219A  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10689  00219C  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10690  00219E  B4D8               	btfsc	status,2,c
 10691  0021A0  D01D               	goto	l10880
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;tff.c: 582: dj->clust = clust;
 10695  0021A2  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10696  0021A4  6ED9               	movwf	fsr2l,c
 10697  0021A6  6ADA               	clrf	fsr2h,c
 10698  0021A8  0E08               	movlw	8
 10699  0021AA  26D9               	addwf	fsr2l,f,c
 10700  0021AC  C0BC  FFDE         	movff	reserve_direntry@clust,postinc2
 10701  0021B0  C0BD  FFDD         	movff	reserve_direntry@clust+1,postdec2
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;tff.c: 583: dj->sect = clust2sect(clust);
 10705  0021B4  C0BC  F025         	movff	reserve_direntry@clust,clust2sect@clust
 10706  0021B8  C0BD  F026         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10707  0021BC  EC61  F020         	call	_clust2sect	;wreg free
 10708  0021C0  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10709  0021C2  6ED9               	movwf	fsr2l,c
 10710  0021C4  6ADA               	clrf	fsr2h,c
 10711  0021C6  0E0A               	movlw	10
 10712  0021C8  26D9               	addwf	fsr2l,f,c
 10713  0021CA  C025  FFDE         	movff	?_clust2sect,postinc2
 10714  0021CE  C026  FFDE         	movff	?_clust2sect+1,postinc2
 10715  0021D2  C027  FFDE         	movff	?_clust2sect+2,postinc2
 10716  0021D6  C028  FFDE         	movff	?_clust2sect+3,postinc2
 10717                           
 10718                           ;tff.c: 584: } else {
 10719  0021DA  D013               	goto	l10882
 10720  0021DC                     l10880:
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;tff.c: 585: dj->sect = fs->dirbase;
 10724  0021DC  EE20 F00C          	lfsr	2,12
 10725  0021E0  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10726  0021E2  26D9               	addwf	fsr2l,f,c
 10727  0021E4  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10728  0021E6  22DA               	addwfc	fsr2h,f,c
 10729  0021E8  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10730  0021EA  6EE1               	movwf	fsr1l,c
 10731  0021EC  6AE2               	clrf	fsr1h,c
 10732  0021EE  0E0A               	movlw	10
 10733  0021F0  26E1               	addwf	fsr1l,f,c
 10734  0021F2  CFDE FFE6          	movff	postinc2,postinc1
 10735  0021F6  CFDE FFE6          	movff	postinc2,postinc1
 10736  0021FA  CFDE FFE6          	movff	postinc2,postinc1
 10737  0021FE  CFDE FFE6          	movff	postinc2,postinc1
 10738  002202                     l10882:
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 10742  002202  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10743  002204  6ED9               	movwf	fsr2l,c
 10744  002206  6ADA               	clrf	fsr2h,c
 10745  002208  0E02               	movlw	2
 10746  00220A  26D9               	addwf	fsr2l,f,c
 10747  00220C  0E00               	movlw	0
 10748  00220E  6EDE               	movwf	postinc2,c
 10749  002210  0E00               	movlw	0
 10750  002212  6EDD               	movwf	postdec2,c
 10751  002214                     l10884:
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10755  002214  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10756  002216  6ED9               	movwf	fsr2l,c
 10757  002218  6ADA               	clrf	fsr2h,c
 10758  00221A  0E0A               	movlw	10
 10759  00221C  26D9               	addwf	fsr2l,f,c
 10760  00221E  CFDE F073          	movff	postinc2,move_window@sector
 10761  002222  CFDE F074          	movff	postinc2,move_window@sector+1
 10762  002226  CFDE F075          	movff	postinc2,move_window@sector+2
 10763  00222A  CFDE F076          	movff	postinc2,move_window@sector+3
 10764  00222E  ECA7  F018         	call	_move_window	;wreg free
 10765  002232  0900               	iorlw	0
 10766  002234  A4D8               	btfss	status,2,c
 10767  002236  D002               	goto	l10890
 10768  002238                     u12990:
 10769                           
 10770                           ; BSR set to: 0
 10771  002238  0E08               	movlw	8
 10772  00223A  0012               	return	
 10773  00223C                     l10890:
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 10777  00223C  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10778  00223E  6ED9               	movwf	fsr2l,c
 10779  002240  6ADA               	clrf	fsr2h,c
 10780  002242  0E02               	movlw	2
 10781  002244  26D9               	addwf	fsr2l,f,c
 10782  002246  CFDE F0B0          	movff	postinc2,??_reserve_direntry
 10783  00224A  CFDD F0B1          	movff	postdec2,??_reserve_direntry+1
 10784  00224E  0E0F               	movlw	15
 10785  002250  17B0               	andwf	??_reserve_direntry& (0+255),f,b
 10786  002252  0E00               	movlw	0
 10787  002254  17B1               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 10788  002256  0E05               	movlw	5
 10789  002258                     u13005:
 10790  002258  90D8               	bcf	status,0,c
 10791  00225A  37B0               	rlcf	??_reserve_direntry& (0+255),f,b
 10792  00225C  37B1               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 10793  00225E  2EE8               	decfsz	wreg,f,c
 10794  002260  D7FB               	goto	u13005
 10795  002262  C0BE  F0B2         	movff	reserve_direntry@fs,??_reserve_direntry+2
 10796  002266  C0BF  F0B3         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 10797  00226A  51B0               	movf	??_reserve_direntry& (0+255),w,b
 10798  00226C  27B2               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 10799  00226E  51B1               	movf	(??_reserve_direntry+1)& (0+255),w,b
 10800  002270  23B3               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 10801  002272  0E20               	movlw	32
 10802  002274  25B2               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 10803  002276  6FB9               	movwf	reserve_direntry@dptr& (0+255),b
 10804  002278  0E00               	movlw	0
 10805  00227A  21B3               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 10806  00227C  6FBA               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;tff.c: 592: c = dptr[0];
 10810  00227E  C0B9  FFD9         	movff	reserve_direntry@dptr,fsr2l
 10811  002282  C0BA  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 10812  002286  50DF               	movf	indf2,w,c
 10813  002288  6FBB               	movwf	reserve_direntry@c& (0+255),b
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 10817  00228A  51BB               	movf	reserve_direntry@c& (0+255),w,b
 10818  00228C  B4D8               	btfsc	status,2,c
 10819  00228E  D004               	goto	u13020
 10820                           
 10821                           ; BSR set to: 0
 10822  002290  0EE5               	movlw	229
 10823  002292  19BB               	xorwf	reserve_direntry@c& (0+255),w,b
 10824  002294  A4D8               	btfss	status,2,c
 10825  002296  D009               	goto	l10904
 10826  002298                     u13020:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;tff.c: 594: *dir = dptr; return FR_OK;
 10830  002298  51AF               	movf	reserve_direntry@dir& (0+255),w,b
 10831  00229A  6ED9               	movwf	fsr2l,c
 10832  00229C  6ADA               	clrf	fsr2h,c
 10833  00229E  C0B9  FFDE         	movff	reserve_direntry@dptr,postinc2
 10834  0022A2  C0BA  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 10835  0022A6                     l10900:
 10836                           
 10837                           ; BSR set to: 0
 10838  0022A6  0E00               	movlw	0
 10839  0022A8  0012               	return	
 10840  0022AA                     l10904:
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 10844  0022AA  C0AE  F09B         	movff	reserve_direntry@dj,next_dir_entry@dj
 10845  0022AE  EC42  F01A         	call	_next_dir_entry	;wreg free
 10846  0022B2  0900               	iorlw	0
 10847  0022B4  A4D8               	btfss	status,2,c
 10848  0022B6  D7AE               	goto	l10884
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 10852  0022B8  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10853  0022BA  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10854  0022BC  B4D8               	btfsc	status,2,c
 10855  0022BE  D013               	goto	u13050
 10856                           
 10857                           ; BSR set to: 0
 10858  0022C0  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10859  0022C2  6ED9               	movwf	fsr2l,c
 10860  0022C4  6ADA               	clrf	fsr2h,c
 10861  0022C6  0E08               	movlw	8
 10862  0022C8  26D9               	addwf	fsr2l,f,c
 10863  0022CA  CFDE F0A0          	movff	postinc2,create_chain@clust
 10864  0022CE  CFDD F0A1          	movff	postdec2,create_chain@clust+1
 10865  0022D2  EC7C  F019         	call	_create_chain	;wreg free
 10866  0022D6  C0A0  F0BC         	movff	?_create_chain,reserve_direntry@clust
 10867  0022DA  C0A1  F0BD         	movff	?_create_chain+1,reserve_direntry@clust+1
 10868  0022DE  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10869  0022E0  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10870  0022E2  A4D8               	btfss	status,2,c
 10871  0022E4  D002               	goto	l10914
 10872  0022E6                     u13050:
 10873                           
 10874                           ; BSR set to: 0
 10875  0022E6  0E06               	movlw	6
 10876  0022E8  0012               	return	
 10877  0022EA                     l10914:
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 10881  0022EA  05BC               	decf	reserve_direntry@clust& (0+255),w,b
 10882  0022EC  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10883  0022EE  B4D8               	btfsc	status,2,c
 10884  0022F0  D7A3               	goto	u12990
 10885                           
 10886                           ; BSR set to: 0
 10887  0022F2  0E00               	movlw	0
 10888  0022F4  6F73               	movwf	move_window@sector& (0+255),b
 10889  0022F6  0E00               	movlw	0
 10890  0022F8  6F74               	movwf	(move_window@sector+1)& (0+255),b
 10891  0022FA  0E00               	movlw	0
 10892  0022FC  6F75               	movwf	(move_window@sector+2)& (0+255),b
 10893  0022FE  0E00               	movlw	0
 10894  002300  6F76               	movwf	(move_window@sector+3)& (0+255),b
 10895  002302  ECA7  F018         	call	_move_window	;wreg free
 10896  002306  0900               	iorlw	0
 10897  002308  B4D8               	btfsc	status,2,c
 10898  00230A  D796               	goto	u12990
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 10902  00230C  C0BC  F025         	movff	reserve_direntry@clust,clust2sect@clust
 10903  002310  C0BD  F026         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10904  002314  EC61  F020         	call	_clust2sect	;wreg free
 10905  002318  C025  F0B4         	movff	?_clust2sect,reserve_direntry@sector
 10906  00231C  C026  F0B5         	movff	?_clust2sect+1,reserve_direntry@sector+1
 10907  002320  C027  F0B6         	movff	?_clust2sect+2,reserve_direntry@sector+2
 10908  002324  C028  F0B7         	movff	?_clust2sect+3,reserve_direntry@sector+3
 10909  002328  EE20 F004          	lfsr	2,4
 10910  00232C  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10911  00232E  26D9               	addwf	fsr2l,f,c
 10912  002330  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10913  002332  22DA               	addwfc	fsr2h,f,c
 10914  002334  C0B4  FFDE         	movff	reserve_direntry@sector,postinc2
 10915  002338  C0B5  FFDE         	movff	reserve_direntry@sector+1,postinc2
 10916  00233C  C0B6  FFDE         	movff	reserve_direntry@sector+2,postinc2
 10917  002340  C0B7  FFDE         	movff	reserve_direntry@sector+3,postinc2
 10918                           
 10919                           ;tff.c: 604: memset(fs->win, 0, 512U);
 10920  002344  0E20               	movlw	32
 10921  002346  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10922  002348  6E19               	movwf	memset@p1^0,c
 10923  00234A  0E00               	movlw	0
 10924  00234C  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10925  00234E  6E1A               	movwf	(memset@p1+1)^0,c
 10926  002350  0E00               	movlw	0
 10927  002352  6E1C               	movwf	(memset@c+1)^0,c
 10928  002354  0E00               	movlw	0
 10929  002356  6E1B               	movwf	memset@c^0,c
 10930  002358  0E02               	movlw	2
 10931  00235A  6E1E               	movwf	(memset@n+1)^0,c
 10932  00235C  0E00               	movlw	0
 10933  00235E  6E1D               	movwf	memset@n^0,c
 10934  002360  EC80  F029         	call	_memset	;wreg free
 10935                           
 10936                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 10937  002364  0100               	movlb	0	; () banked
 10938  002366  EE20 F01D          	lfsr	2,29
 10939  00236A  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10940  00236C  26D9               	addwf	fsr2l,f,c
 10941  00236E  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10942  002370  22DA               	addwfc	fsr2h,f,c
 10943  002372  50DF               	movf	indf2,w,c
 10944  002374  6FB8               	movwf	reserve_direntry@n& (0+255),b
 10945  002376  D01D               	goto	l10936
 10946  002378                     l10926:
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 10950  002378  0E20               	movlw	32
 10951  00237A  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10952  00237C  6F68               	movwf	disk_write@buff& (0+255),b
 10953  00237E  0E00               	movlw	0
 10954  002380  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10955  002382  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 10956  002384  C0B4  F06A         	movff	reserve_direntry@sector,disk_write@sector
 10957  002388  C0B5  F06B         	movff	reserve_direntry@sector+1,disk_write@sector+1
 10958  00238C  C0B6  F06C         	movff	reserve_direntry@sector+2,disk_write@sector+2
 10959  002390  C0B7  F06D         	movff	reserve_direntry@sector+3,disk_write@sector+3
 10960  002394  0E01               	movlw	1
 10961  002396  6F6E               	movwf	disk_write@count& (0+255),b
 10962  002398  0E00               	movlw	0
 10963  00239A  EC44  F027         	call	_disk_write
 10964  00239E  0900               	iorlw	0
 10965  0023A0  A4D8               	btfss	status,2,c
 10966  0023A2  D74A               	goto	u12990
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;tff.c: 608: sector++;
 10970  0023A4  0E01               	movlw	1
 10971  0023A6  27B4               	addwf	reserve_direntry@sector& (0+255),f,b
 10972  0023A8  0E00               	movlw	0
 10973  0023AA  23B5               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 10974  0023AC  23B6               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 10975  0023AE  23B7               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 10976                           
 10977                           ; BSR set to: 0
 10978  0023B0  07B8               	decf	reserve_direntry@n& (0+255),f,b
 10979  0023B2                     l10936:
 10980                           
 10981                           ; BSR set to: 0
 10982  0023B2  51B8               	movf	reserve_direntry@n& (0+255),w,b
 10983  0023B4  A4D8               	btfss	status,2,c
 10984  0023B6  D7E0               	goto	l10926
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 10988  0023B8  EE20 F01F          	lfsr	2,31
 10989  0023BC  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10990  0023BE  26D9               	addwf	fsr2l,f,c
 10991  0023C0  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10992  0023C2  22DA               	addwfc	fsr2h,f,c
 10993  0023C4  0E01               	movlw	1
 10994  0023C6  6EDF               	movwf	indf2,c
 10995                           
 10996                           ;tff.c: 611: *dir = fs->win;
 10997  0023C8  0E20               	movlw	32
 10998  0023CA  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10999  0023CC  6FB0               	movwf	??_reserve_direntry& (0+255),b
 11000  0023CE  0E00               	movlw	0
 11001  0023D0  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 11002  0023D2  6FB1               	movwf	(??_reserve_direntry+1)& (0+255),b
 11003  0023D4  51AF               	movf	reserve_direntry@dir& (0+255),w,b
 11004  0023D6  6ED9               	movwf	fsr2l,c
 11005  0023D8  6ADA               	clrf	fsr2h,c
 11006  0023DA  C0B0  FFDE         	movff	??_reserve_direntry,postinc2
 11007  0023DE  C0B1  FFDD         	movff	??_reserve_direntry+1,postdec2
 11008  0023E2  D761               	goto	l10900
 11009  0023E4                     __end_of_reserve_direntry:
 11010                           	callstack 0
 11011                           
 11012 ;; *************** function _next_dir_entry *****************
 11013 ;; Defined at:
 11014 ;;		line 359 in file "bibliotecas/tff.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  dj              1   59[BANK0 ] PTR struct _DIR_E
 11017 ;;		 -> f_open@dj(14), 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  idx             2   69[BANK0 ] unsigned short 
 11020 ;;  clust           2   67[BANK0 ] unsigned short 
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      enum E105
 11023 ;; Registers used:
 11024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 3F/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11030 ;;      Params:         0       1       0       0       0       0       0       0       0
 11031 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11032 ;;      Temps:          0       7       0       0       0       0       0       0       0
 11033 ;;      Totals:         0      12       0       0       0       0       0       0       0
 11034 ;;Total ram usage:       12 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:   10
 11037 ;; This function calls:
 11038 ;;		_clust2sect
 11039 ;;		_get_cluster
 11040 ;; This function is called by:
 11041 ;;		_trace_path
 11042 ;;		_reserve_direntry
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           	psect	text51
 11047  003484                     __ptext51:
 11048                           	callstack 0
 11049  003484                     _next_dir_entry:
 11050                           	callstack 15
 11051                           
 11052                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;incstack = 0
 11056  003484  0100               	movlb	0	; () banked
 11057  003486  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11058  003488  6ED9               	movwf	fsr2l,c
 11059  00348A  6ADA               	clrf	fsr2h,c
 11060  00348C  0E02               	movlw	2
 11061  00348E  26D9               	addwf	fsr2l,f,c
 11062  003490  CFDE F09C          	movff	postinc2,??_next_dir_entry
 11063  003494  CFDD F09D          	movff	postdec2,??_next_dir_entry+1
 11064  003498  0E01               	movlw	1
 11065  00349A  259C               	addwf	??_next_dir_entry& (0+255),w,b
 11066  00349C  6FA5               	movwf	next_dir_entry@idx& (0+255),b
 11067  00349E  0E00               	movlw	0
 11068  0034A0  219D               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 11069  0034A2  6FA6               	movwf	(next_dir_entry@idx+1)& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;tff.c: 368: if ((idx & 15) == 0) {
 11073  0034A4  C0A5  F09C         	movff	next_dir_entry@idx,??_next_dir_entry
 11074  0034A8  0E0F               	movlw	15
 11075  0034AA  179C               	andwf	??_next_dir_entry& (0+255),f,b
 11076  0034AC  A4D8               	btfss	status,2,c
 11077  0034AE  D091               	goto	l10600
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;tff.c: 369: dj->sect++;
 11081  0034B0  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11082  0034B2  6ED9               	movwf	fsr2l,c
 11083  0034B4  6ADA               	clrf	fsr2h,c
 11084  0034B6  0E0A               	movlw	10
 11085  0034B8  26D9               	addwf	fsr2l,f,c
 11086  0034BA  2ADE               	incf	postinc2,f,c
 11087  0034BC  0E00               	movlw	0
 11088  0034BE  22DE               	addwfc	postinc2,f,c
 11089  0034C0  22DE               	addwfc	postinc2,f,c
 11090  0034C2  22DE               	addwfc	postinc2,f,c
 11091                           
 11092                           ;tff.c: 370: if (dj->clust == 0) {
 11093  0034C4  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11094  0034C6  6ED9               	movwf	fsr2l,c
 11095  0034C8  6ADA               	clrf	fsr2h,c
 11096  0034CA  0E08               	movlw	8
 11097  0034CC  26D9               	addwf	fsr2l,f,c
 11098  0034CE  50DE               	movf	postinc2,w,c
 11099  0034D0  10DE               	iorwf	postinc2,w,c
 11100  0034D2  A4D8               	btfss	status,2,c
 11101  0034D4  D013               	goto	l10584
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 11105  0034D6  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11106  0034D8  6ED9               	movwf	fsr2l,c
 11107  0034DA  6ADA               	clrf	fsr2h,c
 11108  0034DC  0E04               	movlw	4
 11109  0034DE  26D9               	addwf	fsr2l,f,c
 11110  0034E0  EE10 F002          	lfsr	1,2
 11111  0034E4  50DE               	movf	postinc2,w,c
 11112  0034E6  26E1               	addwf	fsr1l,f,c
 11113  0034E8  50DD               	movf	postdec2,w,c
 11114  0034EA  22E2               	addwfc	fsr1h,f,c
 11115  0034EC  50E6               	movf	postinc1,w,c
 11116  0034EE  5DA5               	subwf	next_dir_entry@idx& (0+255),w,b
 11117  0034F0  50E6               	movf	postinc1,w,c
 11118  0034F2  59A6               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 11119  0034F4  A0D8               	btfss	status,0,c
 11120  0034F6  D06D               	goto	l10600
 11121  0034F8                     u12480:
 11122                           
 11123                           ; BSR set to: 0
 11124  0034F8  0E00               	movlw	0
 11125  0034FA  0012               	return	
 11126  0034FC                     l10584:
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 11130  0034FC  C0A5  F09C         	movff	next_dir_entry@idx,??_next_dir_entry
 11131  003500  C0A6  F09D         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 11132  003504  0E04               	movlw	4
 11133  003506  6F9E               	movwf	(??_next_dir_entry+2)& (0+255),b
 11134  003508                     u12495:
 11135  003508  90D8               	bcf	status,0,c
 11136  00350A  339D               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 11137  00350C  339C               	rrcf	??_next_dir_entry& (0+255),f,b
 11138  00350E  2F9E               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 11139  003510  D7FB               	goto	u12495
 11140  003512  0EFF               	movlw	255
 11141  003514  6F9F               	movwf	(??_next_dir_entry+3)& (0+255),b
 11142  003516  0EFF               	movlw	255
 11143  003518  6FA0               	movwf	(??_next_dir_entry+4)& (0+255),b
 11144  00351A  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11145  00351C  6ED9               	movwf	fsr2l,c
 11146  00351E  6ADA               	clrf	fsr2h,c
 11147  003520  0E04               	movlw	4
 11148  003522  26D9               	addwf	fsr2l,f,c
 11149  003524  EE10 F01D          	lfsr	1,29
 11150  003528  50DE               	movf	postinc2,w,c
 11151  00352A  26E1               	addwf	fsr1l,f,c
 11152  00352C  50DD               	movf	postdec2,w,c
 11153  00352E  22E2               	addwfc	fsr1h,f,c
 11154  003530  50E7               	movf	indf1,w,c
 11155  003532  6FA1               	movwf	(??_next_dir_entry+5)& (0+255),b
 11156  003534  6BA2               	clrf	(??_next_dir_entry+6)& (0+255),b
 11157  003536  519F               	movf	(??_next_dir_entry+3)& (0+255),w,b
 11158  003538  27A1               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 11159  00353A  51A0               	movf	(??_next_dir_entry+4)& (0+255),w,b
 11160  00353C  23A2               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 11161  00353E  519C               	movf	??_next_dir_entry& (0+255),w,b
 11162  003540  17A1               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 11163  003542  519D               	movf	(??_next_dir_entry+1)& (0+255),w,b
 11164  003544  17A2               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 11165  003546  51A1               	movf	(??_next_dir_entry+5)& (0+255),w,b
 11166  003548  11A2               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 11167  00354A  A4D8               	btfss	status,2,c
 11168  00354C  D042               	goto	l10600
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;tff.c: 374: clust = get_cluster(dj->clust);
 11172  00354E  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11173  003550  6ED9               	movwf	fsr2l,c
 11174  003552  6ADA               	clrf	fsr2h,c
 11175  003554  0E08               	movlw	8
 11176  003556  26D9               	addwf	fsr2l,f,c
 11177  003558  CFDE F031          	movff	postinc2,get_cluster@clust
 11178  00355C  CFDD F032          	movff	postdec2,get_cluster@clust+1
 11179  003560  EC25  F013         	call	_get_cluster	;wreg free
 11180  003564  C031  F0A3         	movff	?_get_cluster,next_dir_entry@clust
 11181  003568  C032  F0A4         	movff	?_get_cluster+1,next_dir_entry@clust+1
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 11185  00356C  51A4               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 11186  00356E  E104               	bnz	u12510
 11187  003570  0E02               	movlw	2
 11188  003572  5DA3               	subwf	next_dir_entry@clust& (0+255),w,b
 11189  003574  A0D8               	btfss	status,0,c
 11190  003576  D7C0               	goto	u12480
 11191  003578                     u12510:
 11192                           
 11193                           ; BSR set to: 0
 11194  003578  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11195  00357A  6ED9               	movwf	fsr2l,c
 11196  00357C  6ADA               	clrf	fsr2h,c
 11197  00357E  0E04               	movlw	4
 11198  003580  26D9               	addwf	fsr2l,f,c
 11199  003582  EE10 F016          	lfsr	1,22
 11200  003586  50DE               	movf	postinc2,w,c
 11201  003588  26E1               	addwf	fsr1l,f,c
 11202  00358A  50DD               	movf	postdec2,w,c
 11203  00358C  22E2               	addwfc	fsr1h,f,c
 11204  00358E  50E6               	movf	postinc1,w,c
 11205  003590  5DA3               	subwf	next_dir_entry@clust& (0+255),w,b
 11206  003592  50E6               	movf	postinc1,w,c
 11207  003594  59A4               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 11208  003596  B0D8               	btfsc	status,0,c
 11209  003598  D7AF               	goto	u12480
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;tff.c: 377: dj->clust = clust;
 11213  00359A  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11214  00359C  6ED9               	movwf	fsr2l,c
 11215  00359E  6ADA               	clrf	fsr2h,c
 11216  0035A0  0E08               	movlw	8
 11217  0035A2  26D9               	addwf	fsr2l,f,c
 11218  0035A4  C0A3  FFDE         	movff	next_dir_entry@clust,postinc2
 11219  0035A8  C0A4  FFDD         	movff	next_dir_entry@clust+1,postdec2
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;tff.c: 378: dj->sect = clust2sect(clust);
 11223  0035AC  C0A3  F025         	movff	next_dir_entry@clust,clust2sect@clust
 11224  0035B0  C0A4  F026         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 11225  0035B4  EC61  F020         	call	_clust2sect	;wreg free
 11226  0035B8  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11227  0035BA  6ED9               	movwf	fsr2l,c
 11228  0035BC  6ADA               	clrf	fsr2h,c
 11229  0035BE  0E0A               	movlw	10
 11230  0035C0  26D9               	addwf	fsr2l,f,c
 11231  0035C2  C025  FFDE         	movff	?_clust2sect,postinc2
 11232  0035C6  C026  FFDE         	movff	?_clust2sect+1,postinc2
 11233  0035CA  C027  FFDE         	movff	?_clust2sect+2,postinc2
 11234  0035CE  C028  FFDE         	movff	?_clust2sect+3,postinc2
 11235  0035D2                     l10600:
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 11239  0035D2  519B               	movf	next_dir_entry@dj& (0+255),w,b
 11240  0035D4  6ED9               	movwf	fsr2l,c
 11241  0035D6  6ADA               	clrf	fsr2h,c
 11242  0035D8  0E02               	movlw	2
 11243  0035DA  26D9               	addwf	fsr2l,f,c
 11244  0035DC  C0A5  FFDE         	movff	next_dir_entry@idx,postinc2
 11245  0035E0  C0A6  FFDD         	movff	next_dir_entry@idx+1,postdec2
 11246                           
 11247                           ; BSR set to: 0
 11248                           ;tff.c: 383: return TRUE;
 11249  0035E4  0E01               	movlw	1
 11250                           
 11251                           ; BSR set to: 0
 11252  0035E6  0012               	return		;funcret
 11253  0035E8                     __end_of_next_dir_entry:
 11254                           	callstack 0
 11255                           
 11256 ;; *************** function _clust2sect *****************
 11257 ;; Defined at:
 11258 ;;		line 339 in file "bibliotecas/tff.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  clust           2   36[COMRAM] unsigned short 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;  fs              2   45[COMRAM] PTR struct _FATFS
 11263 ;;		 -> NULL(0), fs(544), 
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  4   36[COMRAM] unsigned long 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 3F/0
 11270 ;;		On exit  : 3F/0
 11271 ;;		Unchanged: 3F/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11273 ;;      Params:         4       0       0       0       0       0       0       0       0
 11274 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11275 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11276 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11277 ;;Total ram usage:       11 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    4
 11280 ;; This function calls:
 11281 ;;		___lmul
 11282 ;; This function is called by:
 11283 ;;		_next_dir_entry
 11284 ;;		_trace_path
 11285 ;;		_reserve_direntry
 11286 ;;		_f_write
 11287 ;;		_f_read
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text52
 11292  0040C2                     __ptext52:
 11293                           	callstack 0
 11294  0040C2                     _clust2sect:
 11295                           	callstack 19
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;tff.c: 343: FATFS *fs = FatFs;
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;incstack = 0
 11302  0040C2  C038  F02E         	movff	_FatFs,clust2sect@fs
 11303  0040C6  C039  F02F         	movff	_FatFs+1,clust2sect@fs+1
 11304                           
 11305                           ;tff.c: 346: clust -= 2;
 11306  0040CA  0E02               	movlw	2
 11307  0040CC  5E25               	subwf	clust2sect@clust^0,f,c
 11308  0040CE  0E00               	movlw	0
 11309  0040D0  5A26               	subwfb	(clust2sect@clust+1)^0,f,c
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 11313  0040D2  0EFE               	movlw	254
 11314  0040D4  6E29               	movwf	??_clust2sect^0,c
 11315  0040D6  0EFF               	movlw	255
 11316  0040D8  6E2A               	movwf	(??_clust2sect+1)^0,c
 11317  0040DA  EE20 F016          	lfsr	2,22
 11318  0040DE  502E               	movf	clust2sect@fs^0,w,c
 11319  0040E0  26D9               	addwf	fsr2l,f,c
 11320  0040E2  502F               	movf	(clust2sect@fs+1)^0,w,c
 11321  0040E4  22DA               	addwfc	fsr2h,f,c
 11322  0040E6  CFDE F02B          	movff	postinc2,??_clust2sect+2
 11323  0040EA  CFDD F02C          	movff	postdec2,??_clust2sect+3
 11324  0040EE  5029               	movf	??_clust2sect^0,w,c
 11325  0040F0  262B               	addwf	(??_clust2sect+2)^0,f,c
 11326  0040F2  502A               	movf	(??_clust2sect+1)^0,w,c
 11327  0040F4  222C               	addwfc	(??_clust2sect+3)^0,f,c
 11328  0040F6  502B               	movf	(??_clust2sect+2)^0,w,c
 11329  0040F8  5C25               	subwf	clust2sect@clust^0,w,c
 11330  0040FA  502C               	movf	(??_clust2sect+3)^0,w,c
 11331  0040FC  5826               	subwfb	(clust2sect@clust+1)^0,w,c
 11332  0040FE  A0D8               	btfss	status,0,c
 11333  004100  D009               	goto	l10164
 11334                           
 11335                           ; BSR set to: 0
 11336  004102  0E00               	movlw	0
 11337  004104  6E25               	movwf	?_clust2sect^0,c
 11338  004106  0E00               	movlw	0
 11339  004108  6E26               	movwf	(?_clust2sect+1)^0,c
 11340  00410A  0E00               	movlw	0
 11341  00410C  6E27               	movwf	(?_clust2sect+2)^0,c
 11342  00410E  0E00               	movlw	0
 11343  004110  6E28               	movwf	(?_clust2sect+3)^0,c
 11344  004112  0012               	return	
 11345  004114                     l10164:
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 11349  004114  EE20 F010          	lfsr	2,16
 11350  004118  502E               	movf	clust2sect@fs^0,w,c
 11351  00411A  26D9               	addwf	fsr2l,f,c
 11352  00411C  502F               	movf	(clust2sect@fs+1)^0,w,c
 11353  00411E  22DA               	addwfc	fsr2h,f,c
 11354  004120  CFDE F029          	movff	postinc2,??_clust2sect
 11355  004124  CFDE F02A          	movff	postinc2,??_clust2sect+1
 11356  004128  CFDE F02B          	movff	postinc2,??_clust2sect+2
 11357  00412C  CFDE F02C          	movff	postinc2,??_clust2sect+3
 11358  004130  C025  F019         	movff	clust2sect@clust,___lmul@multiplier
 11359  004134  C026  F01A         	movff	clust2sect@clust+1,___lmul@multiplier+1
 11360  004138  6A1B               	clrf	(___lmul@multiplier+2)^0,c
 11361  00413A  6A1C               	clrf	(___lmul@multiplier+3)^0,c
 11362  00413C  EE20 F01D          	lfsr	2,29
 11363  004140  502E               	movf	clust2sect@fs^0,w,c
 11364  004142  26D9               	addwf	fsr2l,f,c
 11365  004144  502F               	movf	(clust2sect@fs+1)^0,w,c
 11366  004146  22DA               	addwfc	fsr2h,f,c
 11367  004148  50DF               	movf	indf2,w,c
 11368  00414A  6E2D               	movwf	(??_clust2sect+4)^0,c
 11369  00414C  502D               	movf	(??_clust2sect+4)^0,w,c
 11370  00414E  6E1D               	movwf	___lmul@multiplicand^0,c
 11371  004150  6A1E               	clrf	(___lmul@multiplicand+1)^0,c
 11372  004152  6A1F               	clrf	(___lmul@multiplicand+2)^0,c
 11373  004154  6A20               	clrf	(___lmul@multiplicand+3)^0,c
 11374  004156  EC73  F026         	call	___lmul	;wreg free
 11375  00415A  5029               	movf	??_clust2sect^0,w,c
 11376  00415C  2419               	addwf	?___lmul^0,w,c
 11377  00415E  6E25               	movwf	?_clust2sect^0,c
 11378  004160  502A               	movf	(??_clust2sect+1)^0,w,c
 11379  004162  201A               	addwfc	(?___lmul+1)^0,w,c
 11380  004164  6E26               	movwf	(?_clust2sect+1)^0,c
 11381  004166  502B               	movf	(??_clust2sect+2)^0,w,c
 11382  004168  201B               	addwfc	(?___lmul+2)^0,w,c
 11383  00416A  6E27               	movwf	(?_clust2sect+2)^0,c
 11384  00416C  502C               	movf	(??_clust2sect+3)^0,w,c
 11385  00416E  201C               	addwfc	(?___lmul+3)^0,w,c
 11386  004170  6E28               	movwf	(?_clust2sect+3)^0,c
 11387                           
 11388                           ; BSR set to: 0
 11389  004172  0012               	return		;funcret
 11390  004174                     __end_of_clust2sect:
 11391                           	callstack 0
 11392                           
 11393 ;; *************** function _remove_chain *****************
 11394 ;; Defined at:
 11395 ;;		line 250 in file "bibliotecas/tff.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  clust           2   64[BANK0 ] unsigned short 
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;  fs              2   70[BANK0 ] PTR struct _FATFS
 11400 ;;		 -> NULL(0), fs(544), 
 11401 ;;  nxt             2   68[BANK0 ] unsigned short 
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      enum E105
 11404 ;; Registers used:
 11405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 3F/0
 11408 ;;		On exit  : 3F/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11411 ;;      Params:         0       2       0       0       0       0       0       0       0
 11412 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11413 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11414 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11415 ;;Total ram usage:        8 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:   10
 11418 ;; This function calls:
 11419 ;;		_get_cluster
 11420 ;;		_put_cluster
 11421 ;; This function is called by:
 11422 ;;		_f_open
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text53
 11427  0044BE                     __ptext53:
 11428                           	callstack 0
 11429  0044BE                     _remove_chain:
 11430                           	callstack 16
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;incstack = 0
 11437  0044BE  C038  F0A6         	movff	_FatFs,remove_chain@fs
 11438  0044C2  C039  F0A7         	movff	_FatFs+1,remove_chain@fs+1
 11439                           
 11440                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 11441  0044C6  D035               	goto	l10778
 11442  0044C8                     l10758:
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;tff.c: 259: nxt = get_cluster(clust);
 11446  0044C8  C0A0  F031         	movff	remove_chain@clust,get_cluster@clust
 11447  0044CC  C0A1  F032         	movff	remove_chain@clust+1,get_cluster@clust+1
 11448  0044D0  EC25  F013         	call	_get_cluster	;wreg free
 11449  0044D4  C031  F0A4         	movff	?_get_cluster,remove_chain@nxt
 11450  0044D8  C032  F0A5         	movff	?_get_cluster+1,remove_chain@nxt+1
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;tff.c: 260: if (nxt == 1) return FALSE;
 11454  0044DC  05A4               	decf	remove_chain@nxt& (0+255),w,b
 11455  0044DE  11A5               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 11456  0044E0  A4D8               	btfss	status,2,c
 11457  0044E2  D002               	goto	l10766
 11458  0044E4                     u12790:
 11459                           
 11460                           ; BSR set to: 0
 11461  0044E4  0E00               	movlw	0
 11462  0044E6  0012               	return	
 11463  0044E8                     l10766:
 11464                           
 11465                           ; BSR set to: 0
 11466                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 11467  0044E8  C0A0  F088         	movff	remove_chain@clust,put_cluster@clust
 11468  0044EC  C0A1  F089         	movff	remove_chain@clust+1,put_cluster@clust+1
 11469  0044F0  0E00               	movlw	0
 11470  0044F2  6F8B               	movwf	(put_cluster@val+1)& (0+255),b
 11471  0044F4  0E00               	movlw	0
 11472  0044F6  6F8A               	movwf	put_cluster@val& (0+255),b
 11473  0044F8  ECF2  F011         	call	_put_cluster	;wreg free
 11474  0044FC  0900               	iorlw	0
 11475  0044FE  B4D8               	btfsc	status,2,c
 11476  004500  D7F1               	goto	u12790
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 11480  004502  EE20 F01A          	lfsr	2,26
 11481  004506  51A6               	movf	remove_chain@fs& (0+255),w,b
 11482  004508  26D9               	addwf	fsr2l,f,c
 11483  00450A  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11484  00450C  22DA               	addwfc	fsr2h,f,c
 11485  00450E  28DE               	incf	postinc2,w,c
 11486  004510  E103               	bnz	u12810
 11487  004512  28DE               	incf	postinc2,w,c
 11488  004514  B4D8               	btfsc	status,2,c
 11489  004516  D009               	goto	l10776
 11490  004518                     u12810:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;tff.c: 263: fs->free_clust++;
 11494  004518  EE20 F01A          	lfsr	2,26
 11495  00451C  51A6               	movf	remove_chain@fs& (0+255),w,b
 11496  00451E  26D9               	addwf	fsr2l,f,c
 11497  004520  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11498  004522  22DA               	addwfc	fsr2h,f,c
 11499  004524  2ADE               	incf	postinc2,f,c
 11500  004526  0E00               	movlw	0
 11501  004528  22DD               	addwfc	postdec2,f,c
 11502  00452A                     l10776:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 11506  00452A  C0A4  F0A0         	movff	remove_chain@nxt,remove_chain@clust
 11507  00452E  C0A5  F0A1         	movff	remove_chain@nxt+1,remove_chain@clust+1
 11508  004532                     l10778:
 11509                           
 11510                           ; BSR set to: 0
 11511  004532  51A1               	movf	(remove_chain@clust+1)& (0+255),w,b
 11512  004534  E104               	bnz	u12820
 11513  004536  0E02               	movlw	2
 11514  004538  5DA0               	subwf	remove_chain@clust& (0+255),w,b
 11515  00453A  A0D8               	btfss	status,0,c
 11516  00453C  D00C               	goto	u12830
 11517  00453E                     u12820:
 11518                           
 11519                           ; BSR set to: 0
 11520  00453E  EE20 F016          	lfsr	2,22
 11521  004542  51A6               	movf	remove_chain@fs& (0+255),w,b
 11522  004544  26D9               	addwf	fsr2l,f,c
 11523  004546  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11524  004548  22DA               	addwfc	fsr2h,f,c
 11525  00454A  50DE               	movf	postinc2,w,c
 11526  00454C  5DA0               	subwf	remove_chain@clust& (0+255),w,b
 11527  00454E  50DE               	movf	postinc2,w,c
 11528  004550  59A1               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 11529  004552  A0D8               	btfss	status,0,c
 11530  004554  D7B9               	goto	l10758
 11531  004556                     u12830:
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;tff.c: 269: };tff.c: 270: return TRUE;
 11535  004556  0E01               	movlw	1
 11536                           
 11537                           ; BSR set to: 0
 11538  004558  0012               	return		;funcret
 11539  00455A                     __end_of_remove_chain:
 11540                           	callstack 0
 11541                           
 11542 ;; *************** function _memcpy *****************
 11543 ;; Defined at:
 11544 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;  d1              2   24[COMRAM] PTR void 
 11547 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11548 ;;  s1              2   26[COMRAM] PTR const void 
 11549 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11550 ;;		 -> fs(544), 
 11551 ;;  n               2   28[COMRAM] unsigned int 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  s               2   33[COMRAM] PTR const unsigned char 
 11554 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11555 ;;		 -> fs(544), 
 11556 ;;  d               2   31[COMRAM] PTR unsigned char 
 11557 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11558 ;;  tmp             1   30[COMRAM] unsigned char 
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  2   24[COMRAM] PTR void 
 11561 ;; Registers used:
 11562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11568 ;;      Params:         6       0       0       0       0       0       0       0       0
 11569 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11571 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11572 ;;Total ram usage:       11 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:    3
 11575 ;; This function calls:
 11576 ;;		Nothing
 11577 ;; This function is called by:
 11578 ;;		_f_open
 11579 ;;		_f_write
 11580 ;;		_f_read
 11581 ;; This function uses a non-reentrant model
 11582 ;;
 11583                           
 11584                           	psect	text54
 11585  0050C2                     __ptext54:
 11586                           	callstack 0
 11587  0050C2                     _memcpy:
 11588                           	callstack 20
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;incstack = 0
 11592  0050C2  C01B  F022         	movff	memcpy@s1,memcpy@s
 11593  0050C6  C01C  F023         	movff	memcpy@s1+1,memcpy@s+1
 11594  0050CA  C019  F020         	movff	memcpy@d1,memcpy@d
 11595  0050CE  C01A  F021         	movff	memcpy@d1+1,memcpy@d+1
 11596  0050D2  D010               	goto	l10198
 11597  0050D4                     l10190:
 11598  0050D4  C022  FFD9         	movff	memcpy@s,fsr2l
 11599  0050D8  C023  FFDA         	movff	memcpy@s+1,fsr2h
 11600  0050DC  50DF               	movf	indf2,w,c
 11601  0050DE  6E1F               	movwf	memcpy@tmp^0,c
 11602  0050E0  4A22               	infsnz	memcpy@s^0,f,c
 11603  0050E2  2A23               	incf	(memcpy@s+1)^0,f,c
 11604  0050E4  C020  FFD9         	movff	memcpy@d,fsr2l
 11605  0050E8  C021  FFDA         	movff	memcpy@d+1,fsr2h
 11606  0050EC  C01F  FFDF         	movff	memcpy@tmp,indf2
 11607  0050F0  4A20               	infsnz	memcpy@d^0,f,c
 11608  0050F2  2A21               	incf	(memcpy@d+1)^0,f,c
 11609  0050F4                     l10198:
 11610  0050F4  061D               	decf	memcpy@n^0,f,c
 11611  0050F6  A0D8               	btfss	status,0,c
 11612  0050F8  061E               	decf	(memcpy@n+1)^0,f,c
 11613  0050FA  281D               	incf	memcpy@n^0,w,c
 11614  0050FC  E1EB               	bnz	l10190
 11615  0050FE  281E               	incf	(memcpy@n+1)^0,w,c
 11616  005100  B4D8               	btfsc	status,2,c
 11617  005102  0012               	return	
 11618  005104  D7E7               	goto	l10190
 11619  005106                     __end_of_memcpy:
 11620                           	callstack 0
 11621                           
 11622 ;; *************** function _auto_mount *****************
 11623 ;; Defined at:
 11624 ;;		line 652 in file "bibliotecas/tff.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  path            1   25[BANK0 ] PTR PTR const unsigned c
 11627 ;;		 -> f_opendir@path(2), f_open@path(2), 
 11628 ;;  chk_wp          1   26[BANK0 ] unsigned char 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  fatsize         4   65[BANK0 ] unsigned long 
 11631 ;;  totalsect       4   57[BANK0 ] unsigned long 
 11632 ;;  bootsect        4   53[BANK0 ] unsigned long 
 11633 ;;  maxclust        4   49[BANK0 ] unsigned long 
 11634 ;;  fs              2   69[BANK0 ] PTR struct _FATFS
 11635 ;;		 -> NULL(0), fs(544), 
 11636 ;;  p               2   61[BANK0 ] PTR const unsigned char 
 11637 ;;		 -> STR_22(13), filename(15), 
 11638 ;;  stat            1   64[BANK0 ] unsigned char 
 11639 ;;  fmt             1   63[BANK0 ] unsigned char 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      enum E155
 11642 ;; Registers used:
 11643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 3F/0
 11646 ;;		On exit  : 3E/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11649 ;;      Params:         0       2       0       0       0       0       0       0       0
 11650 ;;      Locals:         0      22       0       0       0       0       0       0       0
 11651 ;;      Temps:          0      22       0       0       0       0       0       0       0
 11652 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11653 ;;Total ram usage:       46 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:    9
 11656 ;; This function calls:
 11657 ;;		___lldiv
 11658 ;;		___lmul
 11659 ;;		_check_fs
 11660 ;;		_disk_initialize
 11661 ;;		_disk_status
 11662 ;;		_memset
 11663 ;; This function is called by:
 11664 ;;		_f_open
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text55
 11669  00059C                     __ptext55:
 11670                           	callstack 0
 11671  00059C                     _auto_mount:
 11672                           	callstack 17
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 11676                           
 11677                           ;incstack = 0
 11678  00059C  5179               	movf	auto_mount@path& (0+255),w,b
 11679  00059E  6ED9               	movwf	fsr2l,c
 11680  0005A0  6ADA               	clrf	fsr2h,c
 11681  0005A2  CFDE F09D          	movff	postinc2,auto_mount@p
 11682  0005A6  CFDD F09E          	movff	postdec2,auto_mount@p+1
 11683                           
 11684                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 11685  0005AA  D003               	goto	l10948
 11686  0005AC                     l10946:
 11687  0005AC  0100               	movlb	0	; () banked
 11688  0005AE  4B9D               	infsnz	auto_mount@p& (0+255),f,b
 11689  0005B0  2B9E               	incf	(auto_mount@p+1)& (0+255),f,b
 11690  0005B2                     l10948:
 11691                           
 11692                           ; BSR set to: 0
 11693  0005B2  C09D  FFF6         	movff	auto_mount@p,tblptrl
 11694  0005B6  C09E  FFF7         	movff	auto_mount@p+1,tblptrh
 11695  0005BA  6AF8               	clrf	tblptru,c
 11696  0005BC  0E07               	movlw	(high __ramtop+-1)
 11697  0005BE  64F7               	cpfsgt	tblptrh,c
 11698  0005C0  D003               	bra	u13107
 11699  0005C2  0008               	tblrd		*
 11700  0005C4  50F5               	movf	tablat,w,c
 11701  0005C6  D005               	bra	u13100
 11702  0005C8                     u13107:
 11703  0005C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 11704  0005CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 11705  0005D0  50E7               	movf	indf1,w,c
 11706  0005D2                     u13100:
 11707  0005D2  0A20               	xorlw	32
 11708  0005D4  B4D8               	btfsc	status,2,c
 11709  0005D6  D7EA               	goto	l10946
 11710                           
 11711                           ;tff.c: 665: if (*p == '/') p++;
 11712  0005D8  C09D  FFF6         	movff	auto_mount@p,tblptrl
 11713  0005DC  C09E  FFF7         	movff	auto_mount@p+1,tblptrh
 11714  0005E0  6AF8               	clrf	tblptru,c
 11715  0005E2  0E07               	movlw	(high __ramtop+-1)
 11716  0005E4  64F7               	cpfsgt	tblptrh,c
 11717  0005E6  D003               	bra	u13127
 11718  0005E8  0008               	tblrd		*
 11719  0005EA  50F5               	movf	tablat,w,c
 11720  0005EC  D005               	bra	u13120
 11721  0005EE                     u13127:
 11722  0005EE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11723  0005F2  CFF7 FFE2          	movff	tblptrh,fsr1h
 11724  0005F6  50E7               	movf	indf1,w,c
 11725  0005F8                     u13120:
 11726  0005F8  0A2F               	xorlw	47
 11727  0005FA  A4D8               	btfss	status,2,c
 11728  0005FC  D003               	goto	l10954
 11729  0005FE  0100               	movlb	0	; () banked
 11730  000600  4B9D               	infsnz	auto_mount@p& (0+255),f,b
 11731  000602  2B9E               	incf	(auto_mount@p+1)& (0+255),f,b
 11732  000604                     l10954:
 11733                           
 11734                           ;tff.c: 666: *path = p;
 11735  000604  0100               	movlb	0	; () banked
 11736  000606  5179               	movf	auto_mount@path& (0+255),w,b
 11737  000608  6ED9               	movwf	fsr2l,c
 11738  00060A  6ADA               	clrf	fsr2h,c
 11739  00060C  C09D  FFDE         	movff	auto_mount@p,postinc2
 11740  000610  C09E  FFDD         	movff	auto_mount@p+1,postdec2
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;tff.c: 669: fs = FatFs;
 11744  000614  C038  F0A5         	movff	_FatFs,auto_mount@fs
 11745  000618  C039  F0A6         	movff	_FatFs+1,auto_mount@fs+1
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 11749  00061C  51A5               	movf	auto_mount@fs& (0+255),w,b
 11750  00061E  11A6               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 11751  000620  A4D8               	btfss	status,2,c
 11752  000622  D002               	goto	l10964
 11753                           
 11754                           ; BSR set to: 0
 11755  000624  0E0A               	movlw	10
 11756  000626  0012               	return	
 11757  000628                     l10964:
 11758                           
 11759                           ; BSR set to: 0
 11760                           ;tff.c: 672: if (fs->fs_type) {
 11761  000628  EE20 F01C          	lfsr	2,28
 11762  00062C  51A5               	movf	auto_mount@fs& (0+255),w,b
 11763  00062E  26D9               	addwf	fsr2l,f,c
 11764  000630  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11765  000632  22DA               	addwfc	fsr2h,f,c
 11766  000634  50DF               	movf	indf2,w,c
 11767  000636  B4D8               	btfsc	status,2,c
 11768  000638  D00F               	goto	l10982
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;tff.c: 673: stat = disk_status(0);
 11772  00063A  0E00               	movlw	0
 11773  00063C  EC52  F029         	call	_disk_status
 11774  000640  0100               	movlb	0	; () banked
 11775  000642  6FA0               	movwf	auto_mount@stat& (0+255),b
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;tff.c: 674: if (!(stat & 0x01)) {
 11779  000644  B1A0               	btfsc	auto_mount@stat& (0+255),0,b
 11780  000646  D008               	goto	l10982
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 11784  000648  517A               	movf	auto_mount@chk_wp& (0+255),w,b
 11785  00064A  A4D8               	btfss	status,2,c
 11786                           
 11787                           ; BSR set to: 0
 11788  00064C  A5A0               	btfss	auto_mount@stat& (0+255),2,b
 11789  00064E  D002               	goto	l10978
 11790  000650                     u13180:
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 11794  000650  0E09               	movlw	9
 11795  000652  0012               	return	
 11796  000654                     l10978:
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;tff.c: 679: return FR_OK;
 11800  000654  0E00               	movlw	0
 11801  000656  0012               	return	
 11802  000658                     l10982:
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 11806  000658  C0A5  F019         	movff	auto_mount@fs,memset@p1
 11807  00065C  C0A6  F01A         	movff	auto_mount@fs+1,memset@p1+1
 11808  000660  0E00               	movlw	0
 11809  000662  6E1C               	movwf	(memset@c+1)^0,c
 11810  000664  0E00               	movlw	0
 11811  000666  6E1B               	movwf	memset@c^0,c
 11812  000668  0E02               	movlw	2
 11813  00066A  6E1E               	movwf	(memset@n+1)^0,c
 11814  00066C  0E20               	movlw	32
 11815  00066E  6E1D               	movwf	memset@n^0,c
 11816  000670  EC80  F029         	call	_memset	;wreg free
 11817                           
 11818                           ;tff.c: 686: stat = disk_initialize(0);
 11819  000674  0E00               	movlw	0
 11820  000676  ECAB  F029         	call	_disk_initialize
 11821  00067A  0100               	movlb	0	; () banked
 11822  00067C  6FA0               	movwf	auto_mount@stat& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;tff.c: 687: if (stat & 0x01)
 11826  00067E  A1A0               	btfss	auto_mount@stat& (0+255),0,b
 11827  000680  D002               	goto	l10992
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;tff.c: 688: return FR_NOT_READY;
 11831  000682  0E01               	movlw	1
 11832  000684  0012               	return	
 11833  000686                     l10992:
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 11837  000686  517A               	movf	auto_mount@chk_wp& (0+255),w,b
 11838  000688  B4D8               	btfsc	status,2,c
 11839  00068A  D002               	goto	l11000
 11840                           
 11841                           ; BSR set to: 0
 11842  00068C  B5A0               	btfsc	auto_mount@stat& (0+255),2,b
 11843  00068E  D7E0               	goto	u13180
 11844  000690                     l11000:
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 11848  000690  0E00               	movlw	0
 11849  000692  6F95               	movwf	auto_mount@bootsect& (0+255),b
 11850  000694  0E00               	movlw	0
 11851  000696  6F96               	movwf	(auto_mount@bootsect+1)& (0+255),b
 11852  000698  0E00               	movlw	0
 11853  00069A  6F97               	movwf	(auto_mount@bootsect+2)& (0+255),b
 11854  00069C  0E00               	movlw	0
 11855  00069E  6F98               	movwf	(auto_mount@bootsect+3)& (0+255),b
 11856  0006A0  C095  F073         	movff	auto_mount@bootsect,check_fs@sect
 11857  0006A4  C096  F074         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11858  0006A8  C097  F075         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11859  0006AC  C098  F076         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11860  0006B0  EC13  F024         	call	_check_fs	;wreg free
 11861  0006B4  0100               	movlb	0	; () banked
 11862  0006B6  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;tff.c: 697: if (fmt == 1) {
 11866  0006B8  059F               	decf	auto_mount@fmt& (0+255),w,b
 11867  0006BA  A4D8               	btfss	status,2,c
 11868  0006BC  D023               	goto	l11010
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;tff.c: 699: if (fs->win[446+4]) {
 11872  0006BE  EE21 F0E2          	lfsr	2,482
 11873  0006C2  51A5               	movf	auto_mount@fs& (0+255),w,b
 11874  0006C4  26D9               	addwf	fsr2l,f,c
 11875  0006C6  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11876  0006C8  22DA               	addwfc	fsr2h,f,c
 11877  0006CA  50DF               	movf	indf2,w,c
 11878  0006CC  B4D8               	btfsc	status,2,c
 11879  0006CE  D01A               	goto	l11010
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 11883  0006D0  EE21 F0E6          	lfsr	2,486
 11884  0006D4  51A5               	movf	auto_mount@fs& (0+255),w,b
 11885  0006D6  26D9               	addwf	fsr2l,f,c
 11886  0006D8  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11887  0006DA  22DA               	addwfc	fsr2h,f,c
 11888  0006DC  CFDE F095          	movff	postinc2,auto_mount@bootsect
 11889  0006E0  CFDE F096          	movff	postinc2,auto_mount@bootsect+1
 11890  0006E4  CFDE F097          	movff	postinc2,auto_mount@bootsect+2
 11891  0006E8  CFDE F098          	movff	postinc2,auto_mount@bootsect+3
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;tff.c: 701: fmt = check_fs(bootsect);
 11895  0006EC  C095  F073         	movff	auto_mount@bootsect,check_fs@sect
 11896  0006F0  C096  F074         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11897  0006F4  C097  F075         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11898  0006F8  C098  F076         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11899  0006FC  EC13  F024         	call	_check_fs	;wreg free
 11900  000700  0100               	movlb	0	; () banked
 11901  000702  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11902  000704                     l11010:
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 11906  000704  519F               	movf	auto_mount@fmt& (0+255),w,b
 11907  000706  A4D8               	btfss	status,2,c
 11908  000708  D00C               	goto	u13250
 11909                           
 11910                           ; BSR set to: 0
 11911  00070A  EE20 F02B          	lfsr	2,43
 11912  00070E  51A5               	movf	auto_mount@fs& (0+255),w,b
 11913  000710  26D9               	addwf	fsr2l,f,c
 11914  000712  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11915  000714  22DA               	addwfc	fsr2h,f,c
 11916  000716  50DE               	movf	postinc2,w,c
 11917  000718  E104               	bnz	u13250
 11918  00071A  0E02               	movlw	2
 11919  00071C  18DE               	xorwf	postinc2,w,c
 11920  00071E  B4D8               	btfsc	status,2,c
 11921  000720  D002               	goto	l11018
 11922  000722                     u13250:
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 11926  000722  0E0B               	movlw	11
 11927  000724  0012               	return	
 11928  000726                     l11018:
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 11932  000726  EE20 F036          	lfsr	2,54
 11933  00072A  51A5               	movf	auto_mount@fs& (0+255),w,b
 11934  00072C  26D9               	addwf	fsr2l,f,c
 11935  00072E  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11936  000730  22DA               	addwfc	fsr2h,f,c
 11937  000732  CFDE F07B          	movff	postinc2,??_auto_mount
 11938  000736  CFDD F07C          	movff	postdec2,??_auto_mount+1
 11939  00073A  C07B  F0A1         	movff	??_auto_mount,auto_mount@fatsize
 11940  00073E  C07C  F0A2         	movff	??_auto_mount+1,auto_mount@fatsize+1
 11941  000742  6BA3               	clrf	(auto_mount@fatsize+2)& (0+255),b
 11942  000744  6BA4               	clrf	(auto_mount@fatsize+3)& (0+255),b
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 11946  000746  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 11947  000748  11A2               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 11948  00074A  11A3               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 11949  00074C  11A4               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 11950  00074E  A4D8               	btfss	status,2,c
 11951  000750  D00E               	goto	l938
 11952                           
 11953                           ; BSR set to: 0
 11954  000752  EE20 F044          	lfsr	2,68
 11955  000756  51A5               	movf	auto_mount@fs& (0+255),w,b
 11956  000758  26D9               	addwf	fsr2l,f,c
 11957  00075A  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11958  00075C  22DA               	addwfc	fsr2h,f,c
 11959  00075E  CFDE F0A1          	movff	postinc2,auto_mount@fatsize
 11960  000762  CFDE F0A2          	movff	postinc2,auto_mount@fatsize+1
 11961  000766  CFDE F0A3          	movff	postinc2,auto_mount@fatsize+2
 11962  00076A  CFDE F0A4          	movff	postinc2,auto_mount@fatsize+3
 11963  00076E                     l938:
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 11967  00076E  EE20 F014          	lfsr	2,20
 11968  000772  51A5               	movf	auto_mount@fs& (0+255),w,b
 11969  000774  26D9               	addwf	fsr2l,f,c
 11970  000776  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11971  000778  22DA               	addwfc	fsr2h,f,c
 11972  00077A  C0A1  FFDE         	movff	auto_mount@fatsize,postinc2
 11973  00077E  C0A2  FFDD         	movff	auto_mount@fatsize+1,postdec2
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;tff.c: 711: fs->n_fats = fs->win[16];
 11977  000782  EE20 F030          	lfsr	2,48
 11978  000786  51A5               	movf	auto_mount@fs& (0+255),w,b
 11979  000788  26D9               	addwf	fsr2l,f,c
 11980  00078A  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11981  00078C  22DA               	addwfc	fsr2h,f,c
 11982  00078E  EE10 F01E          	lfsr	1,30
 11983  000792  51A5               	movf	auto_mount@fs& (0+255),w,b
 11984  000794  26E1               	addwf	fsr1l,f,c
 11985  000796  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11986  000798  22E2               	addwfc	fsr1h,f,c
 11987  00079A  CFDF FFE7          	movff	indf2,indf1
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;tff.c: 712: fatsize *= fs->n_fats;
 11991  00079E  C0A1  F019         	movff	auto_mount@fatsize,___lmul@multiplier
 11992  0007A2  C0A2  F01A         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 11993  0007A6  C0A3  F01B         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 11994  0007AA  C0A4  F01C         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 11995  0007AE  EE20 F01E          	lfsr	2,30
 11996  0007B2  51A5               	movf	auto_mount@fs& (0+255),w,b
 11997  0007B4  26D9               	addwf	fsr2l,f,c
 11998  0007B6  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11999  0007B8  22DA               	addwfc	fsr2h,f,c
 12000  0007BA  50DF               	movf	indf2,w,c
 12001  0007BC  6F7B               	movwf	??_auto_mount& (0+255),b
 12002  0007BE  517B               	movf	??_auto_mount& (0+255),w,b
 12003  0007C0  6E1D               	movwf	___lmul@multiplicand^0,c
 12004  0007C2  6A1E               	clrf	(___lmul@multiplicand+1)^0,c
 12005  0007C4  6A1F               	clrf	(___lmul@multiplicand+2)^0,c
 12006  0007C6  6A20               	clrf	(___lmul@multiplicand+3)^0,c
 12007  0007C8  EC73  F026         	call	___lmul	;wreg free
 12008  0007CC  C019  F0A1         	movff	?___lmul,auto_mount@fatsize
 12009  0007D0  C01A  F0A2         	movff	?___lmul+1,auto_mount@fatsize+1
 12010  0007D4  C01B  F0A3         	movff	?___lmul+2,auto_mount@fatsize+2
 12011  0007D8  C01C  F0A4         	movff	?___lmul+3,auto_mount@fatsize+3
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 12015  0007DC  EE20 F02E          	lfsr	2,46
 12016  0007E0  51A5               	movf	auto_mount@fs& (0+255),w,b
 12017  0007E2  26D9               	addwf	fsr2l,f,c
 12018  0007E4  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12019  0007E6  22DA               	addwfc	fsr2h,f,c
 12020  0007E8  CFDE F07B          	movff	postinc2,??_auto_mount
 12021  0007EC  CFDD F07C          	movff	postdec2,??_auto_mount+1
 12022  0007F0  517B               	movf	??_auto_mount& (0+255),w,b
 12023  0007F2  2595               	addwf	auto_mount@bootsect& (0+255),w,b
 12024  0007F4  6F7D               	movwf	(??_auto_mount+2)& (0+255),b
 12025  0007F6  517C               	movf	(??_auto_mount+1)& (0+255),w,b
 12026  0007F8  2196               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 12027  0007FA  6F7E               	movwf	(??_auto_mount+3)& (0+255),b
 12028  0007FC  0E00               	movlw	0
 12029  0007FE  2197               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 12030  000800  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 12031  000802  0E00               	movlw	0
 12032  000804  2198               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 12033  000806  6F80               	movwf	(??_auto_mount+5)& (0+255),b
 12034  000808  EE20 F008          	lfsr	2,8
 12035  00080C  51A5               	movf	auto_mount@fs& (0+255),w,b
 12036  00080E  26D9               	addwf	fsr2l,f,c
 12037  000810  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12038  000812  22DA               	addwfc	fsr2h,f,c
 12039  000814  C07D  FFDE         	movff	??_auto_mount+2,postinc2
 12040  000818  C07E  FFDE         	movff	??_auto_mount+3,postinc2
 12041  00081C  C07F  FFDE         	movff	??_auto_mount+4,postinc2
 12042  000820  C080  FFDE         	movff	??_auto_mount+5,postinc2
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;tff.c: 714: fs->csize = fs->win[13];
 12046  000824  EE20 F02D          	lfsr	2,45
 12047  000828  51A5               	movf	auto_mount@fs& (0+255),w,b
 12048  00082A  26D9               	addwf	fsr2l,f,c
 12049  00082C  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12050  00082E  22DA               	addwfc	fsr2h,f,c
 12051  000830  EE10 F01D          	lfsr	1,29
 12052  000834  51A5               	movf	auto_mount@fs& (0+255),w,b
 12053  000836  26E1               	addwf	fsr1l,f,c
 12054  000838  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12055  00083A  22E2               	addwfc	fsr1h,f,c
 12056  00083C  CFDF FFE7          	movff	indf2,indf1
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 12060  000840  EE20 F031          	lfsr	2,49
 12061  000844  51A5               	movf	auto_mount@fs& (0+255),w,b
 12062  000846  26D9               	addwf	fsr2l,f,c
 12063  000848  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12064  00084A  22DA               	addwfc	fsr2h,f,c
 12065  00084C  EE10 F002          	lfsr	1,2
 12066  000850  51A5               	movf	auto_mount@fs& (0+255),w,b
 12067  000852  26E1               	addwf	fsr1l,f,c
 12068  000854  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12069  000856  22E2               	addwfc	fsr1h,f,c
 12070  000858  CFDE FFE6          	movff	postinc2,postinc1
 12071  00085C  CFDD FFE5          	movff	postdec2,postdec1
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 12075  000860  EE20 F033          	lfsr	2,51
 12076  000864  51A5               	movf	auto_mount@fs& (0+255),w,b
 12077  000866  26D9               	addwf	fsr2l,f,c
 12078  000868  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12079  00086A  22DA               	addwfc	fsr2h,f,c
 12080  00086C  CFDE F07B          	movff	postinc2,??_auto_mount
 12081  000870  CFDD F07C          	movff	postdec2,??_auto_mount+1
 12082  000874  C07B  F099         	movff	??_auto_mount,auto_mount@totalsect
 12083  000878  C07C  F09A         	movff	??_auto_mount+1,auto_mount@totalsect+1
 12084  00087C  6B9B               	clrf	(auto_mount@totalsect+2)& (0+255),b
 12085  00087E  6B9C               	clrf	(auto_mount@totalsect+3)& (0+255),b
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 12089  000880  5199               	movf	auto_mount@totalsect& (0+255),w,b
 12090  000882  119A               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 12091  000884  119B               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 12092  000886  119C               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 12093  000888  A4D8               	btfss	status,2,c
 12094  00088A  D00E               	goto	l11040
 12095                           
 12096                           ; BSR set to: 0
 12097  00088C  EE20 F040          	lfsr	2,64
 12098  000890  51A5               	movf	auto_mount@fs& (0+255),w,b
 12099  000892  26D9               	addwf	fsr2l,f,c
 12100  000894  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12101  000896  22DA               	addwfc	fsr2h,f,c
 12102  000898  CFDE F099          	movff	postinc2,auto_mount@totalsect
 12103  00089C  CFDE F09A          	movff	postinc2,auto_mount@totalsect+1
 12104  0008A0  CFDE F09B          	movff	postinc2,auto_mount@totalsect+2
 12105  0008A4  CFDE F09C          	movff	postinc2,auto_mount@totalsect+3
 12106  0008A8                     l11040:
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 12110  0008A8  EE20 F002          	lfsr	2,2
 12111  0008AC  51A5               	movf	auto_mount@fs& (0+255),w,b
 12112  0008AE  26D9               	addwf	fsr2l,f,c
 12113  0008B0  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12114  0008B2  22DA               	addwfc	fsr2h,f,c
 12115  0008B4  CFDE F07B          	movff	postinc2,??_auto_mount
 12116  0008B8  CFDD F07C          	movff	postdec2,??_auto_mount+1
 12117  0008BC  0E04               	movlw	4
 12118  0008BE  6F7D               	movwf	(??_auto_mount+2)& (0+255),b
 12119  0008C0                     u13285:
 12120  0008C0  90D8               	bcf	status,0,c
 12121  0008C2  337C               	rrcf	(??_auto_mount+1)& (0+255),f,b
 12122  0008C4  337B               	rrcf	??_auto_mount& (0+255),f,b
 12123  0008C6  2F7D               	decfsz	(??_auto_mount+2)& (0+255),f,b
 12124  0008C8  D7FB               	goto	u13285
 12125  0008CA  517B               	movf	??_auto_mount& (0+255),w,b
 12126  0008CC  6F7E               	movwf	(??_auto_mount+3)& (0+255),b
 12127  0008CE  517C               	movf	(??_auto_mount+1)& (0+255),w,b
 12128  0008D0  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 12129  0008D2  6B80               	clrf	(??_auto_mount+5)& (0+255),b
 12130  0008D4  6B81               	clrf	(??_auto_mount+6)& (0+255),b
 12131  0008D6  EE20 F02E          	lfsr	2,46
 12132  0008DA  51A5               	movf	auto_mount@fs& (0+255),w,b
 12133  0008DC  26D9               	addwf	fsr2l,f,c
 12134  0008DE  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12135  0008E0  22DA               	addwfc	fsr2h,f,c
 12136  0008E2  CFDE F082          	movff	postinc2,??_auto_mount+7
 12137  0008E6  CFDD F083          	movff	postdec2,??_auto_mount+8
 12138  0008EA  5182               	movf	(??_auto_mount+7)& (0+255),w,b
 12139  0008EC  6F84               	movwf	(??_auto_mount+9)& (0+255),b
 12140  0008EE  5183               	movf	(??_auto_mount+8)& (0+255),w,b
 12141  0008F0  6F85               	movwf	(??_auto_mount+10)& (0+255),b
 12142  0008F2  6B86               	clrf	(??_auto_mount+11)& (0+255),b
 12143  0008F4  6B87               	clrf	(??_auto_mount+12)& (0+255),b
 12144  0008F6  1F84               	comf	(??_auto_mount+9)& (0+255),f,b
 12145  0008F8  1F85               	comf	(??_auto_mount+10)& (0+255),f,b
 12146  0008FA  1F86               	comf	(??_auto_mount+11)& (0+255),f,b
 12147  0008FC  1F87               	comf	(??_auto_mount+12)& (0+255),f,b
 12148  0008FE  2B84               	incf	(??_auto_mount+9)& (0+255),f,b
 12149  000900  0E00               	movlw	0
 12150  000902  2385               	addwfc	(??_auto_mount+10)& (0+255),f,b
 12151  000904  2386               	addwfc	(??_auto_mount+11)& (0+255),f,b
 12152  000906  2387               	addwfc	(??_auto_mount+12)& (0+255),f,b
 12153  000908  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 12154  00090A  5D84               	subwf	(??_auto_mount+9)& (0+255),w,b
 12155  00090C  6F88               	movwf	(??_auto_mount+13)& (0+255),b
 12156  00090E  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12157  000910  5985               	subwfb	(??_auto_mount+10)& (0+255),w,b
 12158  000912  6F89               	movwf	(??_auto_mount+14)& (0+255),b
 12159  000914  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12160  000916  5986               	subwfb	(??_auto_mount+11)& (0+255),w,b
 12161  000918  6F8A               	movwf	(??_auto_mount+15)& (0+255),b
 12162  00091A  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12163  00091C  5987               	subwfb	(??_auto_mount+12)& (0+255),w,b
 12164  00091E  6F8B               	movwf	(??_auto_mount+16)& (0+255),b
 12165  000920  517E               	movf	(??_auto_mount+3)& (0+255),w,b
 12166  000922  5D88               	subwf	(??_auto_mount+13)& (0+255),w,b
 12167  000924  6F8C               	movwf	(??_auto_mount+17)& (0+255),b
 12168  000926  517F               	movf	(??_auto_mount+4)& (0+255),w,b
 12169  000928  5989               	subwfb	(??_auto_mount+14)& (0+255),w,b
 12170  00092A  6F8D               	movwf	(??_auto_mount+18)& (0+255),b
 12171  00092C  5180               	movf	(??_auto_mount+5)& (0+255),w,b
 12172  00092E  598A               	subwfb	(??_auto_mount+15)& (0+255),w,b
 12173  000930  6F8E               	movwf	(??_auto_mount+19)& (0+255),b
 12174  000932  5181               	movf	(??_auto_mount+6)& (0+255),w,b
 12175  000934  598B               	subwfb	(??_auto_mount+16)& (0+255),w,b
 12176  000936  6F8F               	movwf	(??_auto_mount+20)& (0+255),b
 12177  000938  5199               	movf	auto_mount@totalsect& (0+255),w,b
 12178  00093A  258C               	addwf	(??_auto_mount+17)& (0+255),w,b
 12179  00093C  6E19               	movwf	___lldiv@dividend^0,c
 12180  00093E  519A               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 12181  000940  218D               	addwfc	(??_auto_mount+18)& (0+255),w,b
 12182  000942  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 12183  000944  519B               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 12184  000946  218E               	addwfc	(??_auto_mount+19)& (0+255),w,b
 12185  000948  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 12186  00094A  519C               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 12187  00094C  218F               	addwfc	(??_auto_mount+20)& (0+255),w,b
 12188  00094E  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 12189  000950  EE20 F01D          	lfsr	2,29
 12190  000954  51A5               	movf	auto_mount@fs& (0+255),w,b
 12191  000956  26D9               	addwf	fsr2l,f,c
 12192  000958  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12193  00095A  22DA               	addwfc	fsr2h,f,c
 12194  00095C  50DF               	movf	indf2,w,c
 12195  00095E  6F90               	movwf	(??_auto_mount+21)& (0+255),b
 12196  000960  5190               	movf	(??_auto_mount+21)& (0+255),w,b
 12197  000962  6E1D               	movwf	___lldiv@divisor^0,c
 12198  000964  6A1E               	clrf	(___lldiv@divisor+1)^0,c
 12199  000966  6A1F               	clrf	(___lldiv@divisor+2)^0,c
 12200  000968  6A20               	clrf	(___lldiv@divisor+3)^0,c
 12201  00096A  EC54  F024         	call	___lldiv	;wreg free
 12202  00096E  0E02               	movlw	2
 12203  000970  2419               	addwf	?___lldiv^0,w,c
 12204  000972  0100               	movlb	0	; () banked
 12205  000974  6F91               	movwf	auto_mount@maxclust& (0+255),b
 12206  000976  0E00               	movlw	0
 12207  000978  201A               	addwfc	(?___lldiv+1)^0,w,c
 12208  00097A  6F92               	movwf	(auto_mount@maxclust+1)& (0+255),b
 12209  00097C  0E00               	movlw	0
 12210  00097E  201B               	addwfc	(?___lldiv+2)^0,w,c
 12211  000980  6F93               	movwf	(auto_mount@maxclust+2)& (0+255),b
 12212  000982  0E00               	movlw	0
 12213  000984  201C               	addwfc	(?___lldiv+3)^0,w,c
 12214  000986  6F94               	movwf	(auto_mount@maxclust+3)& (0+255),b
 12215  000988  EE20 F016          	lfsr	2,22
 12216  00098C  51A5               	movf	auto_mount@fs& (0+255),w,b
 12217  00098E  26D9               	addwf	fsr2l,f,c
 12218  000990  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12219  000992  22DA               	addwfc	fsr2h,f,c
 12220  000994  C091  FFDE         	movff	auto_mount@maxclust,postinc2
 12221  000998  C092  FFDD         	movff	auto_mount@maxclust+1,postdec2
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;tff.c: 722: fmt = 1;
 12225  00099C  0E01               	movlw	1
 12226  00099E  6F9F               	movwf	auto_mount@fmt& (0+255),b
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 12230  0009A0  5194               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 12231  0009A2  1193               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 12232  0009A4  E106               	bnz	u13290
 12233  0009A6  0EF7               	movlw	247
 12234  0009A8  5D91               	subwf	auto_mount@maxclust& (0+255),w,b
 12235  0009AA  0E0F               	movlw	15
 12236  0009AC  5992               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 12237  0009AE  A0D8               	btfss	status,0,c
 12238  0009B0  D002               	goto	l11048
 12239  0009B2                     u13290:
 12240                           
 12241                           ; BSR set to: 0
 12242  0009B2  0E02               	movlw	2
 12243  0009B4  6F9F               	movwf	auto_mount@fmt& (0+255),b
 12244  0009B6                     l11048:
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 12248  0009B6  5194               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 12249  0009B8  1193               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 12250  0009BA  E107               	bnz	u13300
 12251  0009BC  0EF7               	movlw	247
 12252  0009BE  5D91               	subwf	auto_mount@maxclust& (0+255),w,b
 12253  0009C0  0EFF               	movlw	255
 12254  0009C2  5992               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 12255  0009C4  B0D8               	btfsc	status,0,c
 12256  0009C6  D6AD               	goto	u13250
 12257  0009C8  D001               	goto	l11054
 12258  0009CA                     u13300:
 12259  0009CA  D6AB               	goto	u13250
 12260  0009CC                     l11054:
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 12264  0009CC  EE20 F008          	lfsr	2,8
 12265  0009D0  51A5               	movf	auto_mount@fs& (0+255),w,b
 12266  0009D2  26D9               	addwf	fsr2l,f,c
 12267  0009D4  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12268  0009D6  22DA               	addwfc	fsr2h,f,c
 12269  0009D8  CFDE F07B          	movff	postinc2,??_auto_mount
 12270  0009DC  CFDE F07C          	movff	postinc2,??_auto_mount+1
 12271  0009E0  CFDE F07D          	movff	postinc2,??_auto_mount+2
 12272  0009E4  CFDE F07E          	movff	postinc2,??_auto_mount+3
 12273  0009E8  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 12274  0009EA  257B               	addwf	??_auto_mount& (0+255),w,b
 12275  0009EC  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 12276  0009EE  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12277  0009F0  217C               	addwfc	(??_auto_mount+1)& (0+255),w,b
 12278  0009F2  6F80               	movwf	(??_auto_mount+5)& (0+255),b
 12279  0009F4  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12280  0009F6  217D               	addwfc	(??_auto_mount+2)& (0+255),w,b
 12281  0009F8  6F81               	movwf	(??_auto_mount+6)& (0+255),b
 12282  0009FA  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12283  0009FC  217E               	addwfc	(??_auto_mount+3)& (0+255),w,b
 12284  0009FE  6F82               	movwf	(??_auto_mount+7)& (0+255),b
 12285  000A00  EE20 F00C          	lfsr	2,12
 12286  000A04  51A5               	movf	auto_mount@fs& (0+255),w,b
 12287  000A06  26D9               	addwf	fsr2l,f,c
 12288  000A08  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12289  000A0A  22DA               	addwfc	fsr2h,f,c
 12290  000A0C  C07F  FFDE         	movff	??_auto_mount+4,postinc2
 12291  000A10  C080  FFDE         	movff	??_auto_mount+5,postinc2
 12292  000A14  C081  FFDE         	movff	??_auto_mount+6,postinc2
 12293  000A18  C082  FFDE         	movff	??_auto_mount+7,postinc2
 12294                           
 12295                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 12296  000A1C  EE20 F008          	lfsr	2,8
 12297  000A20  51A5               	movf	auto_mount@fs& (0+255),w,b
 12298  000A22  26D9               	addwf	fsr2l,f,c
 12299  000A24  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12300  000A26  22DA               	addwfc	fsr2h,f,c
 12301  000A28  CFDE F07B          	movff	postinc2,??_auto_mount
 12302  000A2C  CFDE F07C          	movff	postinc2,??_auto_mount+1
 12303  000A30  CFDE F07D          	movff	postinc2,??_auto_mount+2
 12304  000A34  CFDE F07E          	movff	postinc2,??_auto_mount+3
 12305  000A38  EE20 F002          	lfsr	2,2
 12306  000A3C  51A5               	movf	auto_mount@fs& (0+255),w,b
 12307  000A3E  26D9               	addwf	fsr2l,f,c
 12308  000A40  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12309  000A42  22DA               	addwfc	fsr2h,f,c
 12310  000A44  CFDE F07F          	movff	postinc2,??_auto_mount+4
 12311  000A48  CFDD F080          	movff	postdec2,??_auto_mount+5
 12312  000A4C  0E04               	movlw	4
 12313  000A4E  6F81               	movwf	(??_auto_mount+6)& (0+255),b
 12314  000A50                     u13315:
 12315  000A50  90D8               	bcf	status,0,c
 12316  000A52  3380               	rrcf	(??_auto_mount+5)& (0+255),f,b
 12317  000A54  337F               	rrcf	(??_auto_mount+4)& (0+255),f,b
 12318  000A56  2F81               	decfsz	(??_auto_mount+6)& (0+255),f,b
 12319  000A58  D7FB               	goto	u13315
 12320  000A5A  517F               	movf	(??_auto_mount+4)& (0+255),w,b
 12321  000A5C  257B               	addwf	??_auto_mount& (0+255),w,b
 12322  000A5E  6F82               	movwf	(??_auto_mount+7)& (0+255),b
 12323  000A60  5180               	movf	(??_auto_mount+5)& (0+255),w,b
 12324  000A62  217C               	addwfc	(??_auto_mount+1)& (0+255),w,b
 12325  000A64  6F83               	movwf	(??_auto_mount+8)& (0+255),b
 12326  000A66  0E00               	movlw	0
 12327  000A68  217D               	addwfc	(??_auto_mount+2)& (0+255),w,b
 12328  000A6A  6F84               	movwf	(??_auto_mount+9)& (0+255),b
 12329  000A6C  0E00               	movlw	0
 12330  000A6E  217E               	addwfc	(??_auto_mount+3)& (0+255),w,b
 12331  000A70  6F85               	movwf	(??_auto_mount+10)& (0+255),b
 12332  000A72  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 12333  000A74  2582               	addwf	(??_auto_mount+7)& (0+255),w,b
 12334  000A76  6F86               	movwf	(??_auto_mount+11)& (0+255),b
 12335  000A78  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12336  000A7A  2183               	addwfc	(??_auto_mount+8)& (0+255),w,b
 12337  000A7C  6F87               	movwf	(??_auto_mount+12)& (0+255),b
 12338  000A7E  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12339  000A80  2184               	addwfc	(??_auto_mount+9)& (0+255),w,b
 12340  000A82  6F88               	movwf	(??_auto_mount+13)& (0+255),b
 12341  000A84  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12342  000A86  2185               	addwfc	(??_auto_mount+10)& (0+255),w,b
 12343  000A88  6F89               	movwf	(??_auto_mount+14)& (0+255),b
 12344  000A8A  EE20 F010          	lfsr	2,16
 12345  000A8E  51A5               	movf	auto_mount@fs& (0+255),w,b
 12346  000A90  26D9               	addwf	fsr2l,f,c
 12347  000A92  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12348  000A94  22DA               	addwfc	fsr2h,f,c
 12349  000A96  C086  FFDE         	movff	??_auto_mount+11,postinc2
 12350  000A9A  C087  FFDE         	movff	??_auto_mount+12,postinc2
 12351  000A9E  C088  FFDE         	movff	??_auto_mount+13,postinc2
 12352  000AA2  C089  FFDE         	movff	??_auto_mount+14,postinc2
 12353                           
 12354                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 12355  000AA6  EE20 F01A          	lfsr	2,26
 12356  000AAA  51A5               	movf	auto_mount@fs& (0+255),w,b
 12357  000AAC  26D9               	addwf	fsr2l,f,c
 12358  000AAE  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12359  000AB0  22DA               	addwfc	fsr2h,f,c
 12360  000AB2  0EFF               	movlw	255
 12361  000AB4  6EDE               	movwf	postinc2,c
 12362  000AB6  0EFF               	movlw	255
 12363  000AB8  6EDD               	movwf	postdec2,c
 12364                           
 12365                           ;tff.c: 754: fs->fs_type = fmt;
 12366  000ABA  EE20 F01C          	lfsr	2,28
 12367  000ABE  51A5               	movf	auto_mount@fs& (0+255),w,b
 12368  000AC0  26D9               	addwf	fsr2l,f,c
 12369  000AC2  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 12370  000AC4  22DA               	addwfc	fsr2h,f,c
 12371  000AC6  C09F  FFDF         	movff	auto_mount@fmt,indf2
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;tff.c: 755: fs->id = ++fsid;
 12375  000ACA  0101               	movlb	1	; () banked
 12376  000ACC  4B1C               	infsnz	_fsid& (0+255),f,b
 12377  000ACE  2B1D               	incf	(_fsid+1)& (0+255),f,b
 12378  000AD0  C0A5  FFD9         	movff	auto_mount@fs,fsr2l
 12379  000AD4  C0A6  FFDA         	movff	auto_mount@fs+1,fsr2h
 12380  000AD8  C11C  FFDE         	movff	_fsid,postinc2
 12381  000ADC  C11D  FFDD         	movff	_fsid+1,postdec2
 12382                           
 12383                           ;tff.c: 756: return FR_OK;
 12384  000AE0  0E00               	movlw	0
 12385  000AE2  0012               	return		;funcret
 12386  000AE4                     __end_of_auto_mount:
 12387                           	callstack 0
 12388                           
 12389 ;; *************** function _memset *****************
 12390 ;; Defined at:
 12391 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  p1              2   24[COMRAM] PTR void 
 12394 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 12395 ;;  c               2   26[COMRAM] int 
 12396 ;;  n               2   28[COMRAM] unsigned int 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  p               2   30[COMRAM] PTR unsigned char 
 12399 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  2   24[COMRAM] PTR void 
 12402 ;; Registers used:
 12403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12409 ;;      Params:         6       0       0       0       0       0       0       0       0
 12410 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12412 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12413 ;;Total ram usage:        8 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; Hardware stack levels required when called:    3
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		_make_dirfile
 12420 ;;		_reserve_direntry
 12421 ;;		_auto_mount
 12422 ;;		_f_open
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           	psect	text56
 12427  005300                     __ptext56:
 12428                           	callstack 0
 12429  005300                     _memset:
 12430                           	callstack 21
 12431                           
 12432                           ;incstack = 0
 12433  005300  C019  F01F         	movff	memset@p1,memset@p
 12434  005304  C01A  F020         	movff	memset@p1+1,memset@p+1
 12435  005308  D008               	goto	l6866
 12436  00530A                     l6862:
 12437  00530A  C01F  FFD9         	movff	memset@p,fsr2l
 12438  00530E  C020  FFDA         	movff	memset@p+1,fsr2h
 12439  005312  C01B  FFDF         	movff	memset@c,indf2
 12440  005316  4A1F               	infsnz	memset@p^0,f,c
 12441  005318  2A20               	incf	(memset@p+1)^0,f,c
 12442  00531A                     l6866:
 12443  00531A  061D               	decf	memset@n^0,f,c
 12444  00531C  A0D8               	btfss	status,0,c
 12445  00531E  061E               	decf	(memset@n+1)^0,f,c
 12446  005320  281D               	incf	memset@n^0,w,c
 12447  005322  E1F3               	bnz	l6862
 12448  005324  281E               	incf	(memset@n+1)^0,w,c
 12449  005326  B4D8               	btfsc	status,2,c
 12450  005328  0012               	return	
 12451  00532A  D7EF               	goto	l6862
 12452  00532C                     __end_of_memset:
 12453                           	callstack 0
 12454                           
 12455 ;; *************** function _disk_initialize *****************
 12456 ;; Defined at:
 12457 ;;		line 59 in file "bibliotecas/diskio.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;  pdrv            1    wreg     unsigned char 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;  pdrv            1   44[COMRAM] unsigned char 
 12462 ;;  result          2    0        int 
 12463 ;;  stat            1   45[COMRAM] unsigned char 
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      unsigned char 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0
 12474 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12476 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12477 ;;Total ram usage:        2 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    8
 12480 ;; This function calls:
 12481 ;;		_sdc_disk_initialize
 12482 ;; This function is called by:
 12483 ;;		_auto_mount
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           	psect	text57
 12488  005356                     __ptext57:
 12489                           	callstack 0
 12490  005356                     _disk_initialize:
 12491                           	callstack 17
 12492                           
 12493                           ;incstack = 0
 12494                           ;disk_initialize@pdrv stored from wreg
 12495  005356  6E2D               	movwf	disk_initialize@pdrv^0,c
 12496                           
 12497                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 12498  005358  D005               	goto	l10546
 12499  00535A                     l10528:
 12500                           
 12501                           ;diskio.c: 68: stat = sdc_disk_initialize();
 12502  00535A  EC9E  F00C         	call	_sdc_disk_initialize	;wreg free
 12503  00535E  6E2E               	movwf	disk_initialize@stat^0,c
 12504  005360                     l10530:
 12505                           
 12506                           ;diskio.c: 72: return stat;
 12507  005360  502E               	movf	disk_initialize@stat^0,w,c
 12508  005362  0012               	return	
 12509  005364                     l10546:
 12510  005364  502D               	movf	disk_initialize@pdrv^0,w,c
 12511                           
 12512                           ; Switch size 1, requested type "simple"
 12513                           ; Number of cases is 3, Range of values is 0 to 2
 12514                           ; switch strategies available:
 12515                           ; Name         Instructions Cycles
 12516                           ; simple_byte           10     6 (average)
 12517                           ;	Chosen strategy is simple_byte
 12518  005366  0A00               	xorlw	0	; case 0
 12519  005368  B4D8               	btfsc	status,2,c
 12520  00536A  D7F7               	goto	l10528
 12521  00536C  0A01               	xorlw	1	; case 1
 12522  00536E  B4D8               	btfsc	status,2,c
 12523  005370  D7F4               	goto	l10528
 12524  005372  0A03               	xorlw	3	; case 2
 12525  005374  B4D8               	btfsc	status,2,c
 12526  005376  D7F4               	goto	l10530
 12527                           
 12528                           ;diskio.c: 88: return 0x01;
 12529  005378  0E01               	movlw	1
 12530  00537A  0012               	return		;funcret
 12531  00537C                     __end_of_disk_initialize:
 12532                           	callstack 0
 12533                           
 12534 ;; *************** function _sdc_disk_initialize *****************
 12535 ;; Defined at:
 12536 ;;		line 275 in file "bibliotecas/diskio.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;		None
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  count2          2    9[BANK0 ] int 
 12541 ;;  crc_number      2    5[BANK0 ] int 
 12542 ;;  count1          2    3[BANK0 ] int 
 12543 ;;  i               2    0        int 
 12544 ;;  buff            1   11[BANK0 ] unsigned char 
 12545 ;;  ocr             1    8[BANK0 ] unsigned char 
 12546 ;;  buff_i          1    7[BANK0 ] unsigned char 
 12547 ;;  stat            1    2[BANK0 ] unsigned char 
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      unsigned char 
 12550 ;; Registers used:
 12551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 3F/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12557 ;;      Params:         0       0       0       0       0       0       0       0       0
 12558 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12559 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12560 ;;      Totals:         1      12       0       0       0       0       0       0       0
 12561 ;;Total ram usage:       13 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; Hardware stack levels required when called:    7
 12564 ;; This function calls:
 12565 ;;		_command
 12566 ;;		_dummy_clocks
 12567 ;;		_escreve_frase_ram_lcd
 12568 ;;		_posicao_cursor_lcd
 12569 ;;		_proceed
 12570 ;;		_response
 12571 ;;		_sdc_reset
 12572 ;; This function is called by:
 12573 ;;		_disk_initialize
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text58
 12578  00193C                     __ptext58:
 12579                           	callstack 0
 12580  00193C                     _sdc_disk_initialize:
 12581                           	callstack 17
 12582                           
 12583                           ;incstack = 0
 12584  00193C  0E00               	movlw	0
 12585  00193E  0100               	movlb	0	; () banked
 12586  001940  6F64               	movwf	(sdc_disk_initialize@count1+1)& (0+255),b
 12587  001942  0E00               	movlw	0
 12588  001944  6F63               	movwf	sdc_disk_initialize@count1& (0+255),b
 12589  001946  0E00               	movlw	0
 12590  001948  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12591  00194A  0E00               	movlw	0
 12592  00194C  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12593                           
 12594                           ;diskio.c: 280: BYTE buff = 0;
 12595  00194E  0E00               	movlw	0
 12596  001950  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 12600  001952  0E10               	movlw	16
 12601  001954  6E2C               	movwf	??_sdc_disk_initialize^0,c
 12602  001956  0E94               	movlw	148
 12603  001958                     u15547:
 12604  001958  2EE8               	decfsz	wreg,f,c
 12605  00195A  D7FE               	bra	u15547
 12606  00195C  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 12607  00195E  D7FC               	bra	u15547
 12608  001960  D000               	nop2	
 12609                           
 12610                           ;diskio.c: 284: dummy_clocks(100);
 12611  001962  0E64               	movlw	100
 12612  001964  ECE5  F028         	call	_dummy_clocks
 12613                           
 12614                           ;diskio.c: 287: sdc_reset();
 12615  001968  EC40  F023         	call	_sdc_reset	;wreg free
 12616                           
 12617                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 12618  00196C  0EAA               	movlw	170
 12619  00196E  6E1E               	movwf	command@arg^0,c
 12620  001970  0E01               	movlw	1
 12621  001972  6E1F               	movwf	(command@arg+1)^0,c
 12622  001974  0E00               	movlw	0
 12623  001976  6E20               	movwf	(command@arg+2)^0,c
 12624  001978  0E00               	movlw	0
 12625  00197A  6E21               	movwf	(command@arg+3)^0,c
 12626  00197C  0E87               	movlw	135
 12627  00197E  6E22               	movwf	command@CRC^0,c
 12628  001980  0E48               	movlw	72
 12629  001982  EC46  F026         	call	_command
 12630                           
 12631                           ;diskio.c: 289: proceed();
 12632  001986  EC23  F02B         	call	_proceed	;wreg free
 12633  00198A                     l10212:
 12634                           
 12635                           ;diskio.c: 291: buff_i = response();
 12636  00198A  EC1D  F02B         	call	_response	;wreg free
 12637  00198E  0100               	movlb	0	; () banked
 12638  001990  6F67               	movwf	sdc_disk_initialize@buff_i& (0+255),b
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;diskio.c: 292: if(buff_i == 1)
 12642  001992  0567               	decf	sdc_disk_initialize@buff_i& (0+255),w,b
 12643  001994  A4D8               	btfss	status,2,c
 12644  001996  D004               	goto	l10218
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 12648  001998  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12649  00199A  6F66               	movwf	(sdc_disk_initialize@crc_number+1)& (0+255),b
 12650  00199C  6B65               	clrf	sdc_disk_initialize@crc_number& (0+255),b
 12651                           
 12652                           ;diskio.c: 295: }
 12653  00199E  D006               	goto	l10222
 12654  0019A0                     l10218:
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;diskio.c: 296: else if(buff_i==0xAA)
 12658  0019A0  0EAA               	movlw	170
 12659  0019A2  1967               	xorwf	sdc_disk_initialize@buff_i& (0+255),w,b
 12660  0019A4  A4D8               	btfss	status,2,c
 12661  0019A6  D002               	goto	l10222
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 12665  0019A8  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12666  0019AA  1365               	iorwf	sdc_disk_initialize@crc_number& (0+255),f,b
 12667  0019AC                     l10222:
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;diskio.c: 299: };diskio.c: 300: count1++;
 12671  0019AC  4B63               	infsnz	sdc_disk_initialize@count1& (0+255),f,b
 12672  0019AE  2B64               	incf	(sdc_disk_initialize@count1+1)& (0+255),f,b
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 12676  0019B0  0EAA               	movlw	170
 12677  0019B2  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12678  0019B4  E103               	bnz	u11970
 12679  0019B6  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12680  0019B8  B4D8               	btfsc	status,2,c
 12681  0019BA  D008               	goto	u11980
 12682  0019BC                     u11970:
 12683                           
 12684                           ; BSR set to: 0
 12685  0019BC  BF64               	btfsc	(sdc_disk_initialize@count1+1)& (0+255),7,b
 12686  0019BE  D7E5               	goto	l10212
 12687  0019C0  0EE8               	movlw	232
 12688  0019C2  5D63               	subwf	sdc_disk_initialize@count1& (0+255),w,b
 12689  0019C4  0E03               	movlw	3
 12690  0019C6  5964               	subwfb	(sdc_disk_initialize@count1+1)& (0+255),w,b
 12691  0019C8  A0D8               	btfss	status,0,c
 12692  0019CA  D7DF               	goto	l10212
 12693  0019CC                     u11980:
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;diskio.c: 306: if (crc_number == 0x1AA)
 12697  0019CC  0EAA               	movlw	170
 12698  0019CE  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12699  0019D0  E102               	bnz	u11991
 12700  0019D2  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12701  0019D4  A4D8               	btfss	status,2,c
 12702  0019D6                     u11991:
 12703  0019D6  D09E               	goto	l10300
 12704  0019D8                     u11990:
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;diskio.c: 310: count2 = 0;
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;diskio.c: 309: do{
 12711  0019D8  0E00               	movlw	0
 12712  0019DA  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12713  0019DC  0E00               	movlw	0
 12714  0019DE  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12715  0019E0                     
 12716                           ; BSR set to: 0
 12717                           ;diskio.c: 319: dummy_clocks(10);
 12718                           
 12719                           ; BSR set to: 0
 12720  0019E0  0E0A               	movlw	10
 12721  0019E2  ECE5  F028         	call	_dummy_clocks
 12722                           
 12723                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 12724  0019E6  0E00               	movlw	0
 12725  0019E8  6E1E               	movwf	command@arg^0,c
 12726  0019EA  0E00               	movlw	0
 12727  0019EC  6E1F               	movwf	(command@arg+1)^0,c
 12728  0019EE  0E00               	movlw	0
 12729  0019F0  6E20               	movwf	(command@arg+2)^0,c
 12730  0019F2  0E00               	movlw	0
 12731  0019F4  6E21               	movwf	(command@arg+3)^0,c
 12732  0019F6  0E00               	movlw	0
 12733  0019F8  6E22               	movwf	command@CRC^0,c
 12734  0019FA  0E77               	movlw	119
 12735  0019FC  EC46  F026         	call	_command
 12736                           
 12737                           ;diskio.c: 323: proceed();
 12738  001A00  EC23  F02B         	call	_proceed	;wreg free
 12739  001A04                     l10242:
 12740                           
 12741                           ;diskio.c: 325: buff = response();
 12742  001A04  EC1D  F02B         	call	_response	;wreg free
 12743  001A08  0100               	movlb	0	; () banked
 12744  001A0A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;diskio.c: 326: count2++;
 12748  001A0C  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12749  001A0E  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12750                           
 12751                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 12752  001A10  056B               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12753  001A12  B4D8               	btfsc	status,2,c
 12754  001A14  D008               	goto	u12010
 12755                           
 12756                           ; BSR set to: 0
 12757  001A16  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12758  001A18  D7F5               	goto	l10242
 12759  001A1A  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12760  001A1C  E104               	bnz	u12010
 12761  001A1E  0E0A               	movlw	10
 12762  001A20  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12763  001A22  A0D8               	btfss	status,0,c
 12764  001A24  D7EF               	goto	l10242
 12765  001A26                     u12010:
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;diskio.c: 328: count2 = 0;
 12769  001A26  0E00               	movlw	0
 12770  001A28  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12771  001A2A  0E00               	movlw	0
 12772  001A2C  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;diskio.c: 332: dummy_clocks(10);
 12776  001A2E  0E0A               	movlw	10
 12777  001A30  ECE5  F028         	call	_dummy_clocks
 12778                           
 12779                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 12780  001A34  0E00               	movlw	0
 12781  001A36  6E1E               	movwf	command@arg^0,c
 12782  001A38  0E00               	movlw	0
 12783  001A3A  6E1F               	movwf	(command@arg+1)^0,c
 12784  001A3C  0E00               	movlw	0
 12785  001A3E  6E20               	movwf	(command@arg+2)^0,c
 12786  001A40  0E40               	movlw	64
 12787  001A42  6E21               	movwf	(command@arg+3)^0,c
 12788  001A44  0E00               	movlw	0
 12789  001A46  6E22               	movwf	command@CRC^0,c
 12790  001A48  0E69               	movlw	105
 12791  001A4A  EC46  F026         	call	_command
 12792                           
 12793                           ;diskio.c: 334: proceed();
 12794  001A4E  EC23  F02B         	call	_proceed	;wreg free
 12795                           
 12796                           ;diskio.c: 335: buff = response();
 12797  001A52  EC1D  F02B         	call	_response	;wreg free
 12798  001A56  0100               	movlb	0	; () banked
 12799  001A58  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;diskio.c: 336: count2++;
 12803  001A5A  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12804  001A5C  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;diskio.c: 337: }while(buff!=0X00);
 12808  001A5E  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12809  001A60  A4D8               	btfss	status,2,c
 12810  001A62  D7BE               	goto	l10232
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;diskio.c: 342: dummy_clocks(10);
 12814                           
 12815                           ; BSR set to: 0
 12816  001A64  0E0A               	movlw	10
 12817  001A66  ECE5  F028         	call	_dummy_clocks
 12818                           
 12819                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 12820  001A6A  0E00               	movlw	0
 12821  001A6C  6E1E               	movwf	command@arg^0,c
 12822  001A6E  0E00               	movlw	0
 12823  001A70  6E1F               	movwf	(command@arg+1)^0,c
 12824  001A72  0E00               	movlw	0
 12825  001A74  6E20               	movwf	(command@arg+2)^0,c
 12826  001A76  0E00               	movlw	0
 12827  001A78  6E21               	movwf	(command@arg+3)^0,c
 12828  001A7A  0EFF               	movlw	255
 12829  001A7C  6E22               	movwf	command@CRC^0,c
 12830  001A7E  0E7A               	movlw	122
 12831  001A80  EC46  F026         	call	_command
 12832                           
 12833                           ;diskio.c: 344: proceed();
 12834  001A84  EC23  F02B         	call	_proceed	;wreg free
 12835  001A88                     l10266:
 12836                           
 12837                           ;diskio.c: 346: buff = response();
 12838  001A88  EC1D  F02B         	call	_response	;wreg free
 12839  001A8C  0100               	movlb	0	; () banked
 12840  001A8E  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 12844  001A90  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12845  001A92  256B               	addwf	sdc_disk_initialize@buff& (0+255),w,b
 12846  001A94  0B80               	andlw	128
 12847  001A96  6F68               	movwf	sdc_disk_initialize@ocr& (0+255),b
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;diskio.c: 348: count2++;
 12851  001A98  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12852  001A9A  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 12856  001A9C  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12857  001A9E  B4D8               	btfsc	status,2,c
 12858  001AA0  D00B               	goto	u12050
 12859                           
 12860                           ; BSR set to: 0
 12861  001AA2  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12862  001AA4  B4D8               	btfsc	status,2,c
 12863  001AA6  D008               	goto	u12050
 12864                           
 12865                           ; BSR set to: 0
 12866  001AA8  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12867  001AAA  D7EE               	goto	l10266
 12868  001AAC  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12869  001AAE  E104               	bnz	u12050
 12870  001AB0  0E0A               	movlw	10
 12871  001AB2  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12872  001AB4  A0D8               	btfss	status,0,c
 12873  001AB6  D7E8               	goto	l10266
 12874  001AB8                     u12050:
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 12878  001AB8  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12879  001ABA  B4D8               	btfsc	status,2,c
 12880  001ABC  D003               	goto	u12070
 12881                           
 12882                           ; BSR set to: 0
 12883  001ABE  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12884  001AC0  A4D8               	btfss	status,2,c
 12885  001AC2  D78A               	goto	u11990
 12886  001AC4                     u12070:
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 12890                           
 12891                           ; BSR set to: 0
 12892  001AC4  0E10               	movlw	16
 12893  001AC6  6E2C               	movwf	??_sdc_disk_initialize^0,c
 12894  001AC8  0E94               	movlw	148
 12895  001ACA                     u15557:
 12896  001ACA  2EE8               	decfsz	wreg,f,c
 12897  001ACC  D7FE               	bra	u15557
 12898  001ACE  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 12899  001AD0  D7FC               	bra	u15557
 12900  001AD2  D000               	nop2	
 12901                           
 12902                           ;diskio.c: 356: stat = 0X00;
 12903  001AD4  0E00               	movlw	0
 12904  001AD6  0100               	movlb	0	; () banked
 12905  001AD8  6F62               	movwf	sdc_disk_initialize@stat& (0+255),b
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;diskio.c: 358: if(!ocr)
 12909  001ADA  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12910  001ADC  A4D8               	btfss	status,2,c
 12911  001ADE  D0AC               	goto	u12170
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 12915  001AE0  0E0A               	movlw	10
 12916  001AE2  ECE5  F028         	call	_dummy_clocks
 12917                           
 12918                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 12919  001AE6  0E00               	movlw	0
 12920  001AE8  6E1E               	movwf	command@arg^0,c
 12921  001AEA  0E02               	movlw	2
 12922  001AEC  6E1F               	movwf	(command@arg+1)^0,c
 12923  001AEE  0E00               	movlw	0
 12924  001AF0  6E20               	movwf	(command@arg+2)^0,c
 12925  001AF2  0E00               	movlw	0
 12926  001AF4  6E21               	movwf	(command@arg+3)^0,c
 12927  001AF6  0EFF               	movlw	255
 12928  001AF8  6E22               	movwf	command@CRC^0,c
 12929  001AFA  0E50               	movlw	80
 12930  001AFC  EC46  F026         	call	_command
 12931                           
 12932                           ;diskio.c: 363: proceed();
 12933  001B00  EC23  F02B         	call	_proceed	;wreg free
 12934  001B04                     
 12935                           ;diskio.c: 367: buff = response();
 12936  001B04  EC1D  F02B         	call	_response	;wreg free
 12937  001B08  0100               	movlb	0	; () banked
 12938  001B0A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;diskio.c: 368: }while(buff!=0X00);
 12942  001B0C  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12943  001B0E  B4D8               	btfsc	status,2,c
 12944  001B10  D093               	goto	u12170
 12945  001B12  D7F8               	goto	l10294
 12946  001B14                     l10300:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 12950  001B14  0E00               	movlw	0
 12951  001B16  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12952  001B18  0E00               	movlw	0
 12953  001B1A  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;diskio.c: 378: dummy_clocks(1);
 12957                           
 12958                           ; BSR set to: 0
 12959  001B1C  0E01               	movlw	1
 12960  001B1E  ECE5  F028         	call	_dummy_clocks
 12961                           
 12962                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 12963  001B22  0E00               	movlw	0
 12964  001B24  6E1E               	movwf	command@arg^0,c
 12965  001B26  0E00               	movlw	0
 12966  001B28  6E1F               	movwf	(command@arg+1)^0,c
 12967  001B2A  0E00               	movlw	0
 12968  001B2C  6E20               	movwf	(command@arg+2)^0,c
 12969  001B2E  0E00               	movlw	0
 12970  001B30  6E21               	movwf	(command@arg+3)^0,c
 12971  001B32  0EFF               	movlw	255
 12972  001B34  6E22               	movwf	command@CRC^0,c
 12973  001B36  0E69               	movlw	105
 12974  001B38  EC46  F026         	call	_command
 12975                           
 12976                           ;diskio.c: 380: proceed();
 12977  001B3C  EC23  F02B         	call	_proceed	;wreg free
 12978  001B40                     l10310:
 12979                           
 12980                           ;diskio.c: 382: buff = response();
 12981  001B40  EC1D  F02B         	call	_response	;wreg free
 12982  001B44  0100               	movlb	0	; () banked
 12983  001B46  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;diskio.c: 383: count2++;
 12987  001B48  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12988  001B4A  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;diskio.c: 384: if(buff==0x00)
 12992  001B4C  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12993  001B4E  A4D8               	btfss	status,2,c
 12994  001B50  D00B               	goto	l10320
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 12998  001B52  0E00               	movlw	0
 12999  001B54  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 13000  001B56  0E01               	movlw	1
 13001  001B58  EC17  F026         	call	_posicao_cursor_lcd
 13002                           
 13003                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 13004  001B5C  0E25               	movlw	low STR_3
 13005  001B5E  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13006  001B60  0E62               	movlw	high STR_3
 13007  001B62  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13008  001B64  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13009  001B68                     l10320:
 13010                           
 13011                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 13012  001B68  0E10               	movlw	16
 13013  001B6A  6E2C               	movwf	??_sdc_disk_initialize^0,c
 13014  001B6C  0E94               	movlw	148
 13015  001B6E                     u15567:
 13016  001B6E  2EE8               	decfsz	wreg,f,c
 13017  001B70  D7FE               	bra	u15567
 13018  001B72  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 13019  001B74  D7FC               	bra	u15567
 13020  001B76  D000               	nop2	
 13021                           
 13022                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 13023  001B78  0100               	movlb	0	; () banked
 13024  001B7A  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13025  001B7C  B4D8               	btfsc	status,2,c
 13026  001B7E  D008               	goto	u12120
 13027                           
 13028                           ; BSR set to: 0
 13029  001B80  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13030  001B82  D7DE               	goto	l10310
 13031  001B84  0E10               	movlw	16
 13032  001B86  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13033  001B88  0E27               	movlw	39
 13034  001B8A  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13035  001B8C  A0D8               	btfss	status,0,c
 13036  001B8E  D7D8               	goto	l10310
 13037  001B90                     u12120:
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;diskio.c: 393: if(count2==10)
 13041                           
 13042                           ; BSR set to: 0
 13043  001B90  0E0A               	movlw	10
 13044  001B92  1969               	xorwf	sdc_disk_initialize@count2& (0+255),w,b
 13045  001B94  116A               	iorwf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13046  001B96  A4D8               	btfss	status,2,c
 13047  001B98  D036               	goto	u12160
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 13051  001B9A  0E00               	movlw	0
 13052  001B9C  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13053  001B9E  0E00               	movlw	0
 13054  001BA0  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;diskio.c: 396: dummy_clocks(10);
 13058  001BA2  0E0A               	movlw	10
 13059  001BA4  ECE5  F028         	call	_dummy_clocks
 13060                           
 13061                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 13062  001BA8  0E00               	movlw	0
 13063  001BAA  6E1E               	movwf	command@arg^0,c
 13064  001BAC  0E00               	movlw	0
 13065  001BAE  6E1F               	movwf	(command@arg+1)^0,c
 13066  001BB0  0E00               	movlw	0
 13067  001BB2  6E20               	movwf	(command@arg+2)^0,c
 13068  001BB4  0E00               	movlw	0
 13069  001BB6  6E21               	movwf	(command@arg+3)^0,c
 13070  001BB8  0EFF               	movlw	255
 13071  001BBA  6E22               	movwf	command@CRC^0,c
 13072  001BBC  0E41               	movlw	65
 13073  001BBE  EC46  F026         	call	_command
 13074                           
 13075                           ;diskio.c: 398: proceed();
 13076  001BC2  EC23  F02B         	call	_proceed	;wreg free
 13077  001BC6                     l10336:
 13078                           
 13079                           ;diskio.c: 400: buff = response();
 13080  001BC6  EC1D  F02B         	call	_response	;wreg free
 13081  001BCA  0100               	movlb	0	; () banked
 13082  001BCC  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;diskio.c: 401: count2++;
 13086  001BCE  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13087  001BD0  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;diskio.c: 402: if(buff==0x00)
 13091  001BD2  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13092  001BD4  A4D8               	btfss	status,2,c
 13093  001BD6  D00B               	goto	l10346
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 13097  001BD8  0E00               	movlw	0
 13098  001BDA  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 13099  001BDC  0E01               	movlw	1
 13100  001BDE  EC17  F026         	call	_posicao_cursor_lcd
 13101                           
 13102                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 13103  001BE2  0EFB               	movlw	low STR_4
 13104  001BE4  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13105  001BE6  0E61               	movlw	high STR_4
 13106  001BE8  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13107  001BEA  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13108  001BEE                     l10346:
 13109                           
 13110                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 13111  001BEE  0100               	movlb	0	; () banked
 13112  001BF0  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13113  001BF2  B4D8               	btfsc	status,2,c
 13114  001BF4  D008               	goto	u12160
 13115                           
 13116                           ; BSR set to: 0
 13117  001BF6  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13118  001BF8  D7E6               	goto	l10336
 13119  001BFA  0E10               	movlw	16
 13120  001BFC  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13121  001BFE  0E27               	movlw	39
 13122  001C00  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13123  001C02  A0D8               	btfss	status,0,c
 13124  001C04  D7E0               	goto	l10336
 13125  001C06                     u12160:
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 13129  001C06  0E0A               	movlw	10
 13130  001C08  ECE5  F028         	call	_dummy_clocks
 13131                           
 13132                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 13133  001C0C  0E00               	movlw	0
 13134  001C0E  6E1E               	movwf	command@arg^0,c
 13135  001C10  0E02               	movlw	2
 13136  001C12  6E1F               	movwf	(command@arg+1)^0,c
 13137  001C14  0E00               	movlw	0
 13138  001C16  6E20               	movwf	(command@arg+2)^0,c
 13139  001C18  0E00               	movlw	0
 13140  001C1A  6E21               	movwf	(command@arg+3)^0,c
 13141  001C1C  0EFF               	movlw	255
 13142  001C1E  6E22               	movwf	command@CRC^0,c
 13143  001C20  0E50               	movlw	80
 13144  001C22  EC46  F026         	call	_command
 13145                           
 13146                           ;diskio.c: 414: proceed();
 13147  001C26  EC23  F02B         	call	_proceed	;wreg free
 13148  001C2A                     
 13149                           ;diskio.c: 418: buff = response();
 13150  001C2A  EC1D  F02B         	call	_response	;wreg free
 13151  001C2E  0100               	movlb	0	; () banked
 13152  001C30  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;diskio.c: 419: }while(buff!=0X00);
 13156  001C32  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13157  001C34  A4D8               	btfss	status,2,c
 13158  001C36  D7F9               	goto	l10354
 13159  001C38                     u12170:
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;diskio.c: 421: };diskio.c: 425: return stat;
 13163  001C38  5162               	movf	sdc_disk_initialize@stat& (0+255),w,b
 13164                           
 13165                           ; BSR set to: 0
 13166  001C3A  0012               	return		;funcret
 13167  001C3C                     __end_of_sdc_disk_initialize:
 13168                           	callstack 0
 13169                           
 13170 ;; *************** function _sdc_reset *****************
 13171 ;; Defined at:
 13172 ;;		line 238 in file "bibliotecas/diskio.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;		None
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;  teste          10    0        unsigned char [10]
 13177 ;;  count           2   40[COMRAM] int 
 13178 ;;  count_nosd      2   38[COMRAM] int 
 13179 ;;  i               2    0        int 
 13180 ;;  receive         2    0        unsigned int 
 13181 ;;  buff            1   42[COMRAM] unsigned char 
 13182 ;;  stat            1    0        unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0
 13193 ;;      Locals:         7       0       0       0       0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13195 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13196 ;;Total ram usage:        7 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    6
 13199 ;; This function calls:
 13200 ;;		_command
 13201 ;;		_escreve_frase_ram_lcd
 13202 ;;		_posicao_cursor_lcd
 13203 ;;		_proceed
 13204 ;;		_response
 13205 ;; This function is called by:
 13206 ;;		_sdc_disk_initialize
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           	psect	text59
 13211  004680                     __ptext59:
 13212                           	callstack 0
 13213  004680                     _sdc_reset:
 13214                           	callstack 17
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;incstack = 0
 13218  004680  0E00               	movlw	0
 13219  004682  6E2A               	movwf	(sdc_reset@count+1)^0,c
 13220  004684  0E00               	movlw	0
 13221  004686  6E29               	movwf	sdc_reset@count^0,c
 13222  004688  0E00               	movlw	0
 13223  00468A  6E28               	movwf	(sdc_reset@count_nosd+1)^0,c
 13224  00468C  0E00               	movlw	0
 13225  00468E  6E27               	movwf	sdc_reset@count_nosd^0,c
 13226  004690                     l10054:
 13227                           
 13228                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 13229  004690  0E00               	movlw	0
 13230  004692  6E1E               	movwf	command@arg^0,c
 13231  004694  0E00               	movlw	0
 13232  004696  6E1F               	movwf	(command@arg+1)^0,c
 13233  004698  0E00               	movlw	0
 13234  00469A  6E20               	movwf	(command@arg+2)^0,c
 13235  00469C  0E00               	movlw	0
 13236  00469E  6E21               	movwf	(command@arg+3)^0,c
 13237  0046A0  0E95               	movlw	149
 13238  0046A2  6E22               	movwf	command@CRC^0,c
 13239  0046A4  0E40               	movlw	64
 13240  0046A6  EC46  F026         	call	_command
 13241                           
 13242                           ;diskio.c: 249: proceed();
 13243  0046AA  EC23  F02B         	call	_proceed	;wreg free
 13244  0046AE                     l10058:
 13245                           
 13246                           ;diskio.c: 251: buff = response();
 13247  0046AE  EC1D  F02B         	call	_response	;wreg free
 13248  0046B2  6E2B               	movwf	sdc_reset@buff^0,c
 13249                           
 13250                           ;diskio.c: 252: count++;
 13251  0046B4  4A29               	infsnz	sdc_reset@count^0,f,c
 13252  0046B6  2A2A               	incf	(sdc_reset@count+1)^0,f,c
 13253                           
 13254                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 13255  0046B8  042B               	decf	sdc_reset@buff^0,w,c
 13256  0046BA  B4D8               	btfsc	status,2,c
 13257  0046BC  D008               	goto	u11720
 13258  0046BE  BE2A               	btfsc	(sdc_reset@count+1)^0,7,c
 13259  0046C0  D7F6               	goto	l10058
 13260  0046C2  502A               	movf	(sdc_reset@count+1)^0,w,c
 13261  0046C4  E104               	bnz	u11720
 13262  0046C6  0E0A               	movlw	10
 13263  0046C8  5C29               	subwf	sdc_reset@count^0,w,c
 13264  0046CA  A0D8               	btfss	status,0,c
 13265  0046CC  D7F0               	goto	l10058
 13266  0046CE                     u11720:
 13267                           
 13268                           ;diskio.c: 254: count = 0;
 13269  0046CE  0E00               	movlw	0
 13270  0046D0  6E2A               	movwf	(sdc_reset@count+1)^0,c
 13271  0046D2  0E00               	movlw	0
 13272  0046D4  6E29               	movwf	sdc_reset@count^0,c
 13273                           
 13274                           ;diskio.c: 255: if(buff != 0x01)
 13275  0046D6  042B               	decf	sdc_reset@buff^0,w,c
 13276  0046D8  B4D8               	btfsc	status,2,c
 13277  0046DA  D016               	goto	l10076
 13278                           
 13279                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 13280  0046DC  0E00               	movlw	0
 13281  0046DE  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 13282  0046E0  0E01               	movlw	1
 13283  0046E2  EC17  F026         	call	_posicao_cursor_lcd
 13284                           
 13285                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 13286  0046E6  0E06               	movlw	low STR_1
 13287  0046E8  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13288  0046EA  0E62               	movlw	high STR_1
 13289  0046EC  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13290  0046EE  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13291                           
 13292                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 13293  0046F2  0E00               	movlw	0
 13294  0046F4  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 13295  0046F6  0E02               	movlw	2
 13296  0046F8  EC17  F026         	call	_posicao_cursor_lcd
 13297                           
 13298                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 13299  0046FC  0E9A               	movlw	low STR_2
 13300  0046FE  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13301  004700  0E61               	movlw	high STR_2
 13302  004702  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13303  004704  ECF2  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13304  004708                     l10076:
 13305                           
 13306                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 13307  004708  042B               	decf	sdc_reset@buff^0,w,c
 13308  00470A  B4D8               	btfsc	status,2,c
 13309  00470C  0012               	return	
 13310  00470E  D7C0               	goto	l10054
 13311  004710                     __end_of_sdc_reset:
 13312                           	callstack 0
 13313                           
 13314 ;; *************** function _posicao_cursor_lcd *****************
 13315 ;; Defined at:
 13316 ;;		line 271 in file "bibliotecas/display_lcd.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  linha           1    wreg     unsigned char 
 13319 ;;  coluna          1   27[COMRAM] unsigned char 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;  linha           1   28[COMRAM] unsigned char 
 13322 ;;  endereco        1   29[COMRAM] unsigned char 
 13323 ;; Return value:  Size  Location     Type
 13324 ;;                  1    wreg      void 
 13325 ;; Registers used:
 13326 ;;		wreg, status,2, status,0, cstack
 13327 ;; Tracked objects:
 13328 ;;		On entry : 0/0
 13329 ;;		On exit  : 0/0
 13330 ;;		Unchanged: 0/0
 13331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13332 ;;      Params:         1       0       0       0       0       0       0       0       0
 13333 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13334 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13335 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13336 ;;Total ram usage:        3 bytes
 13337 ;; Hardware stack levels used:    1
 13338 ;; Hardware stack levels required when called:    5
 13339 ;; This function calls:
 13340 ;;		_endereco_cursor_lcd
 13341 ;; This function is called by:
 13342 ;;		_sdc_reset
 13343 ;;		_sdc_disk_initialize
 13344 ;;		_mensagem_inicial
 13345 ;;		_troca_de_tela
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349                           	psect	text60
 13350  004C2E                     __ptext60:
 13351                           	callstack 0
 13352  004C2E                     _posicao_cursor_lcd:
 13353                           	callstack 24
 13354                           
 13355                           ;incstack = 0
 13356                           ;posicao_cursor_lcd@linha stored from wreg
 13357  004C2E  6E1D               	movwf	posicao_cursor_lcd@linha^0,c
 13358                           
 13359                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 13360  004C30  0E11               	movlw	17
 13361  004C32  601C               	cpfslt	posicao_cursor_lcd@coluna^0,c
 13362  004C34  0012               	return	
 13363  004C36  D01B               	goto	l9918
 13364  004C38                     l232:
 13365                           
 13366                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 13367  004C38  C01C  F01E         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 13368                           
 13369                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 13370  004C3C  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 13371  004C3E  EC7B  F025         	call	_endereco_cursor_lcd
 13372                           
 13373                           ;display_lcd.c: 284: break;
 13374  004C42  D022               	goto	l9920
 13375  004C44                     l9902:
 13376                           
 13377                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 13378  004C44  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 13379  004C46  0F40               	addlw	64
 13380  004C48  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 13381                           
 13382                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 13383  004C4A  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 13384  004C4C  EC7B  F025         	call	_endereco_cursor_lcd
 13385                           
 13386                           ;display_lcd.c: 289: break;
 13387  004C50  D01B               	goto	l9920
 13388  004C52                     l9906:
 13389                           
 13390                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 13391  004C52  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 13392  004C54  0F14               	addlw	20
 13393  004C56  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 13394                           
 13395                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 13396  004C58  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 13397  004C5A  EC7B  F025         	call	_endereco_cursor_lcd
 13398                           
 13399                           ;display_lcd.c: 294: break;
 13400  004C5E  D014               	goto	l9920
 13401  004C60                     l9910:
 13402                           
 13403                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 13404  004C60  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 13405  004C62  0F54               	addlw	84
 13406  004C64  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 13407                           
 13408                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 13409  004C66  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 13410  004C68  EC7B  F025         	call	_endereco_cursor_lcd
 13411                           
 13412                           ;display_lcd.c: 303: break;
 13413                           
 13414                           ;display_lcd.c: 299: break;
 13415  004C6C  D00D               	goto	l9920
 13416  004C6E                     l9918:
 13417  004C6E  501D               	movf	posicao_cursor_lcd@linha^0,w,c
 13418                           
 13419                           ; Switch size 1, requested type "simple"
 13420                           ; Number of cases is 4, Range of values is 1 to 4
 13421                           ; switch strategies available:
 13422                           ; Name         Instructions Cycles
 13423                           ; simple_byte           13     7 (average)
 13424                           ;	Chosen strategy is simple_byte
 13425  004C70  0A01               	xorlw	1	; case 1
 13426  004C72  B4D8               	btfsc	status,2,c
 13427  004C74  D7E1               	goto	l232
 13428  004C76  0A03               	xorlw	3	; case 2
 13429  004C78  B4D8               	btfsc	status,2,c
 13430  004C7A  D7E4               	goto	l9902
 13431  004C7C  0A01               	xorlw	1	; case 3
 13432  004C7E  B4D8               	btfsc	status,2,c
 13433  004C80  D7E8               	goto	l9906
 13434  004C82  0A07               	xorlw	7	; case 4
 13435  004C84  B4D8               	btfsc	status,2,c
 13436  004C86  D7EC               	goto	l9910
 13437  004C88                     l9920:
 13438                           
 13439                           ;display_lcd.c: 306: coluna++;
 13440  004C88  2A1C               	incf	posicao_cursor_lcd@coluna^0,f,c
 13441                           
 13442                           ;display_lcd.c: 307: }
 13443  004C8A  0012               	return	
 13444  004C8C                     __end_of_posicao_cursor_lcd:
 13445                           	callstack 0
 13446                           
 13447 ;; *************** function _endereco_cursor_lcd *****************
 13448 ;; Defined at:
 13449 ;;		line 218 in file "bibliotecas/display_lcd.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;  endereco        1    wreg     unsigned char 
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;  endereco        1   26[COMRAM] unsigned char 
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, status,2, status,0, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0
 13464 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13466 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13467 ;;Total ram usage:        1 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:    4
 13470 ;; This function calls:
 13471 ;;		_delay
 13472 ;; This function is called by:
 13473 ;;		_posicao_cursor_lcd
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text61
 13478  004AF6                     __ptext61:
 13479                           	callstack 0
 13480  004AF6                     _endereco_cursor_lcd:
 13481                           	callstack 24
 13482                           
 13483                           ;incstack = 0
 13484                           ;endereco_cursor_lcd@endereco stored from wreg
 13485  004AF6  6E1B               	movwf	endereco_cursor_lcd@endereco^0,c
 13486                           
 13487                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 13488  004AF8  9483               	bcf	131,2,c	;volatile
 13489                           
 13490                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 13491  004AFA  9283               	bcf	131,1,c	;volatile
 13492                           
 13493                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 13494  004AFC  9083               	bcf	131,0,c	;volatile
 13495                           
 13496                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 13497  004AFE  8E83               	bsf	131,7,c	;volatile
 13498                           
 13499                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 13500  004B00  A81B               	btfss	endereco_cursor_lcd@endereco^0,4,c
 13501  004B02  D002               	goto	l213
 13502  004B04  8883               	bsf	131,4,c	;volatile
 13503  004B06  D001               	goto	l9756
 13504  004B08                     l213:
 13505                           
 13506                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 13507  004B08  9883               	bcf	131,4,c	;volatile
 13508  004B0A                     l9756:
 13509                           
 13510                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 13511  004B0A  AA1B               	btfss	endereco_cursor_lcd@endereco^0,5,c
 13512  004B0C  D002               	goto	l215
 13513  004B0E  8A83               	bsf	131,5,c	;volatile
 13514  004B10  D001               	goto	l9760
 13515  004B12                     l215:
 13516                           
 13517                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 13518  004B12  9A83               	bcf	131,5,c	;volatile
 13519  004B14                     l9760:
 13520                           
 13521                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 13522  004B14  AC1B               	btfss	endereco_cursor_lcd@endereco^0,6,c
 13523  004B16  D002               	goto	l217
 13524  004B18  8C83               	bsf	131,6,c	;volatile
 13525  004B1A  D001               	goto	l218
 13526  004B1C                     l217:
 13527                           
 13528                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 13529  004B1C  9C83               	bcf	131,6,c	;volatile
 13530  004B1E                     l218:
 13531                           
 13532                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 13533  004B1E  8083               	bsf	131,0,c	;volatile
 13534                           
 13535                           ;display_lcd.c: 236: delay();
 13536  004B20  ECB8  F02A         	call	_delay	;wreg free
 13537                           
 13538                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 13539  004B24  9083               	bcf	131,0,c	;volatile
 13540                           
 13541                           ;display_lcd.c: 238: delay();
 13542  004B26  ECB8  F02A         	call	_delay	;wreg free
 13543                           
 13544                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 13545  004B2A  A01B               	btfss	endereco_cursor_lcd@endereco^0,0,c
 13546  004B2C  D002               	goto	l219
 13547  004B2E  8883               	bsf	131,4,c	;volatile
 13548  004B30  D001               	goto	l220
 13549  004B32                     l219:
 13550                           
 13551                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 13552  004B32  9883               	bcf	131,4,c	;volatile
 13553  004B34                     l220:
 13554                           
 13555                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 13556  004B34  A21B               	btfss	endereco_cursor_lcd@endereco^0,1,c
 13557  004B36  D002               	goto	l221
 13558  004B38  8A83               	bsf	131,5,c	;volatile
 13559  004B3A  D001               	goto	l222
 13560  004B3C                     l221:
 13561                           
 13562                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 13563  004B3C  9A83               	bcf	131,5,c	;volatile
 13564  004B3E                     l222:
 13565                           
 13566                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 13567  004B3E  A41B               	btfss	endereco_cursor_lcd@endereco^0,2,c
 13568  004B40  D002               	goto	l223
 13569  004B42  8C83               	bsf	131,6,c	;volatile
 13570  004B44  D001               	goto	l224
 13571  004B46                     l223:
 13572                           
 13573                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 13574  004B46  9C83               	bcf	131,6,c	;volatile
 13575  004B48                     l224:
 13576                           
 13577                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 13578  004B48  A61B               	btfss	endereco_cursor_lcd@endereco^0,3,c
 13579  004B4A  D002               	goto	l225
 13580  004B4C  8E83               	bsf	131,7,c	;volatile
 13581  004B4E  D001               	goto	l226
 13582  004B50                     l225:
 13583                           
 13584                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 13585  004B50  9E83               	bcf	131,7,c	;volatile
 13586  004B52                     l226:
 13587                           
 13588                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 13589  004B52  8083               	bsf	131,0,c	;volatile
 13590                           
 13591                           ;display_lcd.c: 252: delay();
 13592  004B54  ECB8  F02A         	call	_delay	;wreg free
 13593                           
 13594                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 13595  004B58  9083               	bcf	131,0,c	;volatile
 13596                           
 13597                           ;display_lcd.c: 254: delay();
 13598  004B5A  ECB8  F02A         	call	_delay	;wreg free
 13599  004B5E  0012               	return		;funcret
 13600  004B60                     __end_of_endereco_cursor_lcd:
 13601                           	callstack 0
 13602                           
 13603 ;; *************** function _escreve_frase_ram_lcd *****************
 13604 ;; Defined at:
 13605 ;;		line 445 in file "bibliotecas/display_lcd.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  buffer          2   27[COMRAM] PTR unsigned char 
 13608 ;;		 -> STR_37(2), STR_36(7), STR_35(14), STR_34(8), 
 13609 ;;		 -> STR_33(17), STR_32(8), STR_31(16), STR_30(4), 
 13610 ;;		 -> STR_29(4), STR_28(5), STR_27(5), mensagem_inicial@msg_dois(17), 
 13611 ;;		 -> mensagem_inicial@msg_linha_um(17), NULL(0), STR_14(9), STR_13(10), 
 13612 ;;		 -> STR_12(10), STR_11(14), STR_10(21), STR_9(15), 
 13613 ;;		 -> rawFix(2), rawLongitude(13), rawLatitude(13), escreve_inteiro_lcd@texto(7), 
 13614 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13626 ;;      Params:         2       0       0       0       0       0       0       0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13629 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13630 ;;Total ram usage:        2 bytes
 13631 ;; Hardware stack levels used:    1
 13632 ;; Hardware stack levels required when called:    5
 13633 ;; This function calls:
 13634 ;;		_escreve_caractere_lcd
 13635 ;; This function is called by:
 13636 ;;		_sdc_reset
 13637 ;;		_sdc_disk_initialize
 13638 ;;		_escreve_inteiro_lcd
 13639 ;;		_mensagem_inicial
 13640 ;;		_troca_de_tela
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text62
 13645  004DE4                     __ptext62:
 13646                           	callstack 0
 13647  004DE4                     _escreve_frase_ram_lcd:
 13648                           	callstack 24
 13649                           
 13650                           ;display_lcd.c: 447: while(*buffer)
 13651                           
 13652                           ;incstack = 0
 13653  004DE4  D014               	goto	l9930
 13654  004DE6                     l9926:
 13655                           
 13656                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 13657  004DE6  C01C  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13658  004DEA  C01D  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13659  004DEE  6AF8               	clrf	tblptru,c
 13660  004DF0  0E07               	movlw	(high __ramtop+-1)
 13661  004DF2  64F7               	cpfsgt	tblptrh,c
 13662  004DF4  D003               	bra	u11497
 13663  004DF6  0008               	tblrd		*
 13664  004DF8  50F5               	movf	tablat,w,c
 13665  004DFA  D005               	bra	u11490
 13666  004DFC                     u11497:
 13667  004DFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 13668  004E00  CFF7 FFE2          	movff	tblptrh,fsr1h
 13669  004E04  50E7               	movf	indf1,w,c
 13670  004E06                     u11490:
 13671  004E06  EC0A  F025         	call	_escreve_caractere_lcd
 13672                           
 13673                           ;display_lcd.c: 450: buffer++;
 13674  004E0A  4A1C               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 13675  004E0C  2A1D               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 13676  004E0E                     l9930:
 13677  004E0E  C01C  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13678  004E12  C01D  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13679  004E16  6AF8               	clrf	tblptru,c
 13680  004E18  0E07               	movlw	(high __ramtop+-1)
 13681  004E1A  64F7               	cpfsgt	tblptrh,c
 13682  004E1C  D003               	bra	u11507
 13683  004E1E  0008               	tblrd		*
 13684  004E20  50F5               	movf	tablat,w,c
 13685  004E22  D005               	bra	u11500
 13686  004E24                     u11507:
 13687  004E24  CFF6 FFE1          	movff	tblptrl,fsr1l
 13688  004E28  CFF7 FFE2          	movff	tblptrh,fsr1h
 13689  004E2C  50E7               	movf	indf1,w,c
 13690  004E2E                     u11500:
 13691  004E2E  0900               	iorlw	0
 13692  004E30  B4D8               	btfsc	status,2,c
 13693  004E32  0012               	return	
 13694  004E34  D7D8               	goto	l9926
 13695  004E36                     __end_of_escreve_frase_ram_lcd:
 13696                           	callstack 0
 13697                           
 13698 ;; *************** function _escreve_caractere_lcd *****************
 13699 ;; Defined at:
 13700 ;;		line 323 in file "bibliotecas/display_lcd.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  data            1    wreg     unsigned char 
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;  data            1   26[COMRAM] unsigned char 
 13705 ;; Return value:  Size  Location     Type
 13706 ;;                  1    wreg      void 
 13707 ;; Registers used:
 13708 ;;		wreg, status,2, status,0, cstack
 13709 ;; Tracked objects:
 13710 ;;		On entry : 0/0
 13711 ;;		On exit  : 0/0
 13712 ;;		Unchanged: 0/0
 13713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13714 ;;      Params:         0       0       0       0       0       0       0       0       0
 13715 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13717 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13718 ;;Total ram usage:        1 bytes
 13719 ;; Hardware stack levels used:    1
 13720 ;; Hardware stack levels required when called:    4
 13721 ;; This function calls:
 13722 ;;		_delay
 13723 ;; This function is called by:
 13724 ;;		_escreve_frase_ram_lcd
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           	psect	text63
 13729  004A14                     __ptext63:
 13730                           	callstack 0
 13731  004A14                     _escreve_caractere_lcd:
 13732                           	callstack 24
 13733                           
 13734                           ;incstack = 0
 13735                           ;escreve_caractere_lcd@data stored from wreg
 13736  004A14  6E1B               	movwf	escreve_caractere_lcd@data^0,c
 13737                           
 13738                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 13739  004A16  9483               	bcf	131,2,c	;volatile
 13740                           
 13741                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 13742  004A18  8283               	bsf	131,1,c	;volatile
 13743                           
 13744                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 13745  004A1A  9083               	bcf	131,0,c	;volatile
 13746                           
 13747                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 13748  004A1C  A81B               	btfss	escreve_caractere_lcd@data^0,4,c
 13749  004A1E  D002               	goto	l242
 13750  004A20  8883               	bsf	131,4,c	;volatile
 13751  004A22  D001               	goto	l9788
 13752  004A24                     l242:
 13753                           
 13754                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 13755  004A24  9883               	bcf	131,4,c	;volatile
 13756  004A26                     l9788:
 13757                           
 13758                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 13759  004A26  AA1B               	btfss	escreve_caractere_lcd@data^0,5,c
 13760  004A28  D002               	goto	l244
 13761  004A2A  8A83               	bsf	131,5,c	;volatile
 13762  004A2C  D001               	goto	l9792
 13763  004A2E                     l244:
 13764                           
 13765                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 13766  004A2E  9A83               	bcf	131,5,c	;volatile
 13767  004A30                     l9792:
 13768                           
 13769                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 13770  004A30  AC1B               	btfss	escreve_caractere_lcd@data^0,6,c
 13771  004A32  D002               	goto	l246
 13772  004A34  8C83               	bsf	131,6,c	;volatile
 13773  004A36  D001               	goto	l9796
 13774  004A38                     l246:
 13775                           
 13776                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 13777  004A38  9C83               	bcf	131,6,c	;volatile
 13778  004A3A                     l9796:
 13779                           
 13780                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 13781  004A3A  AE1B               	btfss	escreve_caractere_lcd@data^0,7,c
 13782  004A3C  D002               	goto	l248
 13783  004A3E  8E83               	bsf	131,7,c	;volatile
 13784  004A40  D001               	goto	l249
 13785  004A42                     l248:
 13786                           
 13787                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 13788  004A42  9E83               	bcf	131,7,c	;volatile
 13789  004A44                     l249:
 13790                           
 13791                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 13792  004A44  8083               	bsf	131,0,c	;volatile
 13793                           
 13794                           ;display_lcd.c: 342: delay();
 13795  004A46  ECB8  F02A         	call	_delay	;wreg free
 13796                           
 13797                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 13798  004A4A  9083               	bcf	131,0,c	;volatile
 13799                           
 13800                           ;display_lcd.c: 344: delay();
 13801  004A4C  ECB8  F02A         	call	_delay	;wreg free
 13802                           
 13803                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 13804  004A50  A01B               	btfss	escreve_caractere_lcd@data^0,0,c
 13805  004A52  D002               	goto	l250
 13806  004A54  8883               	bsf	131,4,c	;volatile
 13807  004A56  D001               	goto	l251
 13808  004A58                     l250:
 13809                           
 13810                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 13811  004A58  9883               	bcf	131,4,c	;volatile
 13812  004A5A                     l251:
 13813                           
 13814                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 13815  004A5A  A21B               	btfss	escreve_caractere_lcd@data^0,1,c
 13816  004A5C  D002               	goto	l252
 13817  004A5E  8A83               	bsf	131,5,c	;volatile
 13818  004A60  D001               	goto	l253
 13819  004A62                     l252:
 13820                           
 13821                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 13822  004A62  9A83               	bcf	131,5,c	;volatile
 13823  004A64                     l253:
 13824                           
 13825                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 13826  004A64  A41B               	btfss	escreve_caractere_lcd@data^0,2,c
 13827  004A66  D002               	goto	l254
 13828  004A68  8C83               	bsf	131,6,c	;volatile
 13829  004A6A  D001               	goto	l255
 13830  004A6C                     l254:
 13831                           
 13832                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 13833  004A6C  9C83               	bcf	131,6,c	;volatile
 13834  004A6E                     l255:
 13835                           
 13836                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 13837  004A6E  A61B               	btfss	escreve_caractere_lcd@data^0,3,c
 13838  004A70  D002               	goto	l256
 13839  004A72  8E83               	bsf	131,7,c	;volatile
 13840  004A74  D001               	goto	l257
 13841  004A76                     l256:
 13842                           
 13843                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 13844  004A76  9E83               	bcf	131,7,c	;volatile
 13845  004A78                     l257:
 13846                           
 13847                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 13848  004A78  8083               	bsf	131,0,c	;volatile
 13849                           
 13850                           ;display_lcd.c: 359: delay();
 13851  004A7A  ECB8  F02A         	call	_delay	;wreg free
 13852                           
 13853                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 13854  004A7E  9083               	bcf	131,0,c	;volatile
 13855                           
 13856                           ;display_lcd.c: 361: delay();
 13857  004A80  ECB8  F02A         	call	_delay	;wreg free
 13858  004A84  0012               	return		;funcret
 13859  004A86                     __end_of_escreve_caractere_lcd:
 13860                           	callstack 0
 13861                           
 13862 ;; *************** function _delay *****************
 13863 ;; Defined at:
 13864 ;;		line 45 in file "bibliotecas/display_lcd.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;  contador_int    1   25[COMRAM] unsigned char 
 13869 ;;  contador_ext    1   24[COMRAM] unsigned char 
 13870 ;; Return value:  Size  Location     Type
 13871 ;;                  1    wreg      void 
 13872 ;; Registers used:
 13873 ;;		wreg, status,2, status,0
 13874 ;; Tracked objects:
 13875 ;;		On entry : 0/0
 13876 ;;		On exit  : 0/0
 13877 ;;		Unchanged: 0/0
 13878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13879 ;;      Params:         0       0       0       0       0       0       0       0       0
 13880 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13881 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13882 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13883 ;;Total ram usage:        2 bytes
 13884 ;; Hardware stack levels used:    1
 13885 ;; Hardware stack levels required when called:    3
 13886 ;; This function calls:
 13887 ;;		Nothing
 13888 ;; This function is called by:
 13889 ;;		_init_lcd
 13890 ;;		_escreve_cmd_lcd
 13891 ;;		_endereco_cursor_lcd
 13892 ;;		_escreve_caractere_lcd
 13893 ;; This function uses a non-reentrant model
 13894 ;;
 13895                           
 13896                           	psect	text64
 13897  005570                     __ptext64:
 13898                           	callstack 0
 13899  005570                     _delay:
 13900                           	callstack 24
 13901                           
 13902                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 13903                           
 13904                           ;incstack = 0
 13905  005570  0E00               	movlw	0
 13906  005572  6E19               	movwf	delay@contador_ext^0,c
 13907  005574                     l181:
 13908                           
 13909                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 13910  005574  F000               	nop	
 13911                           
 13912                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 13913  005576  0E00               	movlw	0
 13914  005578  6E1A               	movwf	delay@contador_int^0,c
 13915  00557A                     l183:
 13916                           
 13917                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 13918  00557A  F000               	nop	
 13919  00557C  2A1A               	incf	delay@contador_int^0,f,c
 13920  00557E  0E31               	movlw	49
 13921  005580  641A               	cpfsgt	delay@contador_int^0,c
 13922  005582  D7FB               	goto	l183
 13923  005584  2A19               	incf	delay@contador_ext^0,f,c
 13924  005586  0E63               	movlw	99
 13925  005588  6419               	cpfsgt	delay@contador_ext^0,c
 13926  00558A  D7F4               	goto	l181
 13927  00558C  0012               	return	
 13928  00558E                     __end_of_delay:
 13929                           	callstack 0
 13930                           
 13931 ;; *************** function _check_fs *****************
 13932 ;; Defined at:
 13933 ;;		line 624 in file "bibliotecas/tff.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;  sect            4   19[BANK0 ] unsigned long 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;  fs              2   23[BANK0 ] PTR struct _FATFS
 13938 ;;		 -> NULL(0), fs(544), 
 13939 ;; Return value:  Size  Location     Type
 13940 ;;                  1    wreg      unsigned char 
 13941 ;; Registers used:
 13942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13943 ;; Tracked objects:
 13944 ;;		On entry : 3F/0
 13945 ;;		On exit  : 0/0
 13946 ;;		Unchanged: 0/0
 13947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13948 ;;      Params:         0       4       0       0       0       0       0       0       0
 13949 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13950 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13951 ;;      Totals:         2       6       0       0       0       0       0       0       0
 13952 ;;Total ram usage:        8 bytes
 13953 ;; Hardware stack levels used:    1
 13954 ;; Hardware stack levels required when called:    8
 13955 ;; This function calls:
 13956 ;;		_disk_read
 13957 ;;		_memcmp
 13958 ;; This function is called by:
 13959 ;;		_auto_mount
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963                           	psect	text65
 13964  004826                     __ptext65:
 13965                           	callstack 0
 13966  004826                     _check_fs:
 13967                           	callstack 17
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;tff.c: 628: FATFS *fs = FatFs;
 13971                           
 13972                           ;incstack = 0
 13973  004826  C038  F077         	movff	_FatFs,check_fs@fs
 13974  00482A  C039  F078         	movff	_FatFs+1,check_fs@fs+1
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 13978  00482E  0E20               	movlw	32
 13979  004830  2577               	addwf	check_fs@fs& (0+255),w,b
 13980  004832  6F68               	movwf	disk_read@buff& (0+255),b
 13981  004834  0E00               	movlw	0
 13982  004836  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13983  004838  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 13984  00483A  C073  F06A         	movff	check_fs@sect,disk_read@sector
 13985  00483E  C074  F06B         	movff	check_fs@sect+1,disk_read@sector+1
 13986  004842  C075  F06C         	movff	check_fs@sect+2,disk_read@sector+2
 13987  004846  C076  F06D         	movff	check_fs@sect+3,disk_read@sector+3
 13988  00484A  0E01               	movlw	1
 13989  00484C  6F6E               	movwf	disk_read@count& (0+255),b
 13990  00484E  0E00               	movlw	0
 13991  004850  EC43  F025         	call	_disk_read
 13992  004854  0900               	iorlw	0
 13993  004856  B4D8               	btfsc	status,2,c
 13994  004858  D002               	goto	l10614
 13995  00485A                     u12530:
 13996  00485A                     l10610:
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;tff.c: 631: return 2;
 14000  00485A  0E02               	movlw	2
 14001  00485C  0012               	return	
 14002  00485E                     l10614:
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 14006  00485E  EE22 F01E          	lfsr	2,542
 14007  004862  5177               	movf	check_fs@fs& (0+255),w,b
 14008  004864  26D9               	addwf	fsr2l,f,c
 14009  004866  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 14010  004868  22DA               	addwfc	fsr2h,f,c
 14011  00486A  0E55               	movlw	85
 14012  00486C  18DE               	xorwf	postinc2,w,c
 14013  00486E  E1F5               	bnz	l10610
 14014  004870  0EAA               	movlw	170
 14015  004872  18DE               	xorwf	postinc2,w,c
 14016  004874  A4D8               	btfss	status,2,c
 14017  004876  D7F1               	goto	u12530
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 14021  004878  0E56               	movlw	86
 14022  00487A  2577               	addwf	check_fs@fs& (0+255),w,b
 14023  00487C  6E19               	movwf	memcmp@s1^0,c
 14024  00487E  0E00               	movlw	0
 14025  004880  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 14026  004882  6E1A               	movwf	(memcmp@s1+1)^0,c
 14027  004884  0E76               	movlw	low STR_23
 14028  004886  6E1B               	movwf	memcmp@s2^0,c
 14029  004888  0E62               	movlw	high STR_23
 14030  00488A  6E1C               	movwf	(memcmp@s2+1)^0,c
 14031  00488C  0E00               	movlw	0
 14032  00488E  6E1E               	movwf	(memcmp@n+1)^0,c
 14033  004890  0E03               	movlw	3
 14034  004892  6E1D               	movwf	memcmp@n^0,c
 14035  004894  ECF7  F022         	call	_memcmp	;wreg free
 14036  004898  5019               	movf	?_memcmp^0,w,c
 14037  00489A  101A               	iorwf	(?_memcmp+1)^0,w,c
 14038  00489C  A4D8               	btfss	status,2,c
 14039  00489E  D002               	goto	l10626
 14040                           
 14041                           ;tff.c: 636: return 0;
 14042  0048A0  0E00               	movlw	0
 14043  0048A2  0012               	return	
 14044  0048A4                     l10626:
 14045                           
 14046                           ;tff.c: 641: return 1;
 14047  0048A4  0E01               	movlw	1
 14048  0048A6  0012               	return		;funcret
 14049  0048A8                     __end_of_check_fs:
 14050                           	callstack 0
 14051                           
 14052 ;; *************** function _memcmp *****************
 14053 ;; Defined at:
 14054 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 14055 ;; Parameters:    Size  Location     Type
 14056 ;;  s1              2   24[COMRAM] PTR const void 
 14057 ;;		 -> fs.win(512), NULL(0), fs(544), 
 14058 ;;  s2              2   26[COMRAM] PTR const void 
 14059 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_23(4), 
 14060 ;;  n               2   28[COMRAM] unsigned int 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;		None
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  2   24[COMRAM] int 
 14065 ;; Registers used:
 14066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14067 ;; Tracked objects:
 14068 ;;		On entry : 3F/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14072 ;;      Params:         6       0       0       0       0       0       0       0       0
 14073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14074 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14075 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14076 ;;Total ram usage:        8 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:    3
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_trace_path
 14083 ;;		_check_fs
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text66
 14088  0045EE                     __ptext66:
 14089                           	callstack 0
 14090  0045EE                     _memcmp:
 14091                           	callstack 22
 14092                           
 14093                           ; BSR set to: 0
 14094                           
 14095                           ;incstack = 0
 14096  0045EE  D03B               	goto	l10408
 14097  0045F0                     l10400:
 14098  0045F0  C019  FFD9         	movff	memcmp@s1,fsr2l
 14099  0045F4  C01A  FFDA         	movff	memcmp@s1+1,fsr2h
 14100  0045F8  50DF               	movf	indf2,w,c
 14101  0045FA  6E1F               	movwf	??_memcmp^0,c
 14102  0045FC  C01B  FFF6         	movff	memcmp@s2,tblptrl
 14103  004600  C01C  FFF7         	movff	memcmp@s2+1,tblptrh
 14104  004604  6AF8               	clrf	tblptru,c
 14105  004606  0E07               	movlw	(high __ramtop+-1)
 14106  004608  64F7               	cpfsgt	tblptrh,c
 14107  00460A  D003               	bra	u12187
 14108  00460C  0008               	tblrd		*
 14109  00460E  50F5               	movf	tablat,w,c
 14110  004610  D005               	bra	u12180
 14111  004612                     u12187:
 14112  004612  CFF6 FFE1          	movff	tblptrl,fsr1l
 14113  004616  CFF7 FFE2          	movff	tblptrh,fsr1h
 14114  00461A  50E7               	movf	indf1,w,c
 14115  00461C                     u12180:
 14116  00461C  181F               	xorwf	??_memcmp^0,w,c
 14117  00461E  B4D8               	btfsc	status,2,c
 14118  004620  D01E               	goto	l10406
 14119  004622  C019  FFD9         	movff	memcmp@s1,fsr2l
 14120  004626  C01A  FFDA         	movff	memcmp@s1+1,fsr2h
 14121  00462A  50DF               	movf	indf2,w,c
 14122  00462C  6E1F               	movwf	??_memcmp^0,c
 14123  00462E  C01B  FFF6         	movff	memcmp@s2,tblptrl
 14124  004632  C01C  FFF7         	movff	memcmp@s2+1,tblptrh
 14125  004636  6AF8               	clrf	tblptru,c
 14126  004638  0E07               	movlw	(high __ramtop+-1)
 14127  00463A  64F7               	cpfsgt	tblptrh,c
 14128  00463C  D003               	bra	u12207
 14129  00463E  0008               	tblrd		*
 14130  004640  50F5               	movf	tablat,w,c
 14131  004642  D005               	bra	u12200
 14132  004644                     u12207:
 14133  004644  CFF6 FFE1          	movff	tblptrl,fsr1l
 14134  004648  CFF7 FFE2          	movff	tblptrh,fsr1h
 14135  00464C  50E7               	movf	indf1,w,c
 14136  00464E                     u12200:
 14137  00464E  6E20               	movwf	(??_memcmp+1)^0,c
 14138  004650  5020               	movf	(??_memcmp+1)^0,w,c
 14139  004652  5C1F               	subwf	??_memcmp^0,w,c
 14140  004654  6E19               	movwf	?_memcmp^0,c
 14141  004656  6A1A               	clrf	(?_memcmp+1)^0,c
 14142  004658  A0D8               	btfss	status,0,c
 14143  00465A  061A               	decf	(?_memcmp+1)^0,f,c
 14144  00465C  0012               	return	
 14145  00465E                     l10406:
 14146  00465E  4A19               	infsnz	memcmp@s1^0,f,c
 14147  004660  2A1A               	incf	(memcmp@s1+1)^0,f,c
 14148  004662  4A1B               	infsnz	memcmp@s2^0,f,c
 14149  004664  2A1C               	incf	(memcmp@s2+1)^0,f,c
 14150  004666                     l10408:
 14151  004666  061D               	decf	memcmp@n^0,f,c
 14152  004668  A0D8               	btfss	status,0,c
 14153  00466A  061E               	decf	(memcmp@n+1)^0,f,c
 14154  00466C  281D               	incf	memcmp@n^0,w,c
 14155  00466E  E1C0               	bnz	l10400
 14156  004670  281E               	incf	(memcmp@n+1)^0,w,c
 14157  004672  A4D8               	btfss	status,2,c
 14158  004674  D7BD               	goto	l10400
 14159  004676  0E00               	movlw	0
 14160  004678  6E1A               	movwf	(?_memcmp+1)^0,c
 14161  00467A  0E00               	movlw	0
 14162  00467C  6E19               	movwf	?_memcmp^0,c
 14163  00467E  0012               	return		;funcret
 14164  004680                     __end_of_memcmp:
 14165                           	callstack 0
 14166                           
 14167 ;; *************** function ___lmul *****************
 14168 ;; Defined at:
 14169 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;  multiplier      4   24[COMRAM] unsigned long 
 14172 ;;  multiplicand    4   28[COMRAM] unsigned long 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  product         4   32[COMRAM] unsigned long 
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  4   24[COMRAM] unsigned long 
 14177 ;; Registers used:
 14178 ;;		wreg, status,2, status,0
 14179 ;; Tracked objects:
 14180 ;;		On entry : 3F/0
 14181 ;;		On exit  : 3F/0
 14182 ;;		Unchanged: 3F/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14184 ;;      Params:         8       0       0       0       0       0       0       0       0
 14185 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14187 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14188 ;;Total ram usage:       12 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    3
 14191 ;; This function calls:
 14192 ;;		Nothing
 14193 ;; This function is called by:
 14194 ;;		_clust2sect
 14195 ;;		_auto_mount
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text67
 14200  004CE6                     __ptext67:
 14201                           	callstack 0
 14202  004CE6                     ___lmul:
 14203                           	callstack 19
 14204                           
 14205                           ; BSR set to: 0
 14206                           
 14207                           ;incstack = 0
 14208  004CE6  0E00               	movlw	0
 14209  004CE8  6E21               	movwf	___lmul@product^0,c
 14210  004CEA  0E00               	movlw	0
 14211  004CEC  6E22               	movwf	(___lmul@product+1)^0,c
 14212  004CEE  0E00               	movlw	0
 14213  004CF0  6E23               	movwf	(___lmul@product+2)^0,c
 14214  004CF2  0E00               	movlw	0
 14215  004CF4  6E24               	movwf	(___lmul@product+3)^0,c
 14216  004CF6                     l10044:
 14217                           
 14218                           ; BSR set to: 0
 14219  004CF6  A019               	btfss	___lmul@multiplier^0,0,c
 14220  004CF8  D008               	goto	l10048
 14221                           
 14222                           ; BSR set to: 0
 14223  004CFA  501D               	movf	___lmul@multiplicand^0,w,c
 14224  004CFC  2621               	addwf	___lmul@product^0,f,c
 14225  004CFE  501E               	movf	(___lmul@multiplicand+1)^0,w,c
 14226  004D00  2222               	addwfc	(___lmul@product+1)^0,f,c
 14227  004D02  501F               	movf	(___lmul@multiplicand+2)^0,w,c
 14228  004D04  2223               	addwfc	(___lmul@product+2)^0,f,c
 14229  004D06  5020               	movf	(___lmul@multiplicand+3)^0,w,c
 14230  004D08  2224               	addwfc	(___lmul@product+3)^0,f,c
 14231  004D0A                     l10048:
 14232                           
 14233                           ; BSR set to: 0
 14234  004D0A  90D8               	bcf	status,0,c
 14235  004D0C  361D               	rlcf	___lmul@multiplicand^0,f,c
 14236  004D0E  361E               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14237  004D10  361F               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14238  004D12  3620               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14239                           
 14240                           ; BSR set to: 0
 14241  004D14  90D8               	bcf	status,0,c
 14242  004D16  321C               	rrcf	(___lmul@multiplier+3)^0,f,c
 14243  004D18  321B               	rrcf	(___lmul@multiplier+2)^0,f,c
 14244  004D1A  321A               	rrcf	(___lmul@multiplier+1)^0,f,c
 14245  004D1C  3219               	rrcf	___lmul@multiplier^0,f,c
 14246  004D1E  5019               	movf	___lmul@multiplier^0,w,c
 14247  004D20  101A               	iorwf	(___lmul@multiplier+1)^0,w,c
 14248  004D22  101B               	iorwf	(___lmul@multiplier+2)^0,w,c
 14249  004D24  101C               	iorwf	(___lmul@multiplier+3)^0,w,c
 14250  004D26  A4D8               	btfss	status,2,c
 14251  004D28  D7E6               	goto	l10044
 14252                           
 14253                           ; BSR set to: 0
 14254  004D2A  C021  F019         	movff	___lmul@product,?___lmul
 14255  004D2E  C022  F01A         	movff	___lmul@product+1,?___lmul+1
 14256  004D32  C023  F01B         	movff	___lmul@product+2,?___lmul+2
 14257  004D36  C024  F01C         	movff	___lmul@product+3,?___lmul+3
 14258                           
 14259                           ; BSR set to: 0
 14260  004D3A  0012               	return		;funcret
 14261  004D3C                     __end_of___lmul:
 14262                           	callstack 0
 14263                           
 14264 ;; *************** function _f_mount *****************
 14265 ;; Defined at:
 14266 ;;		line 794 in file "bibliotecas/tff.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;  drv             1    wreg     unsigned char 
 14269 ;;  fs              2   24[COMRAM] PTR struct _FATFS
 14270 ;;		 -> fs(544), 
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;  drv             1   26[COMRAM] unsigned char 
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      enum E3239
 14275 ;; Registers used:
 14276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14277 ;; Tracked objects:
 14278 ;;		On entry : 3F/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14282 ;;      Params:         2       0       0       0       0       0       0       0       0
 14283 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14285 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14286 ;;Total ram usage:        3 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    3
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		_escrita_sdcard
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text68
 14297  004F20                     __ptext68:
 14298                           	callstack 0
 14299  004F20                     _f_mount:
 14300                           	callstack 24
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;incstack = 0
 14304                           ;f_mount@drv stored from wreg
 14305  004F20  6E1B               	movwf	f_mount@drv^0,c
 14306                           
 14307                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 14308  004F22  501B               	movf	f_mount@drv^0,w,c
 14309  004F24  B4D8               	btfsc	status,2,c
 14310  004F26  D002               	goto	l7812
 14311  004F28  0E05               	movlw	5
 14312  004F2A  0012               	return	
 14313  004F2C                     l7812:
 14314                           
 14315                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 14316  004F2C  5038               	movf	_FatFs^0,w,c
 14317  004F2E  1039               	iorwf	(_FatFs+1)^0,w,c
 14318  004F30  B4D8               	btfsc	status,2,c
 14319  004F32  D008               	goto	l7816
 14320  004F34  EE20 F01C          	lfsr	2,28
 14321  004F38  5038               	movf	_FatFs^0,w,c
 14322  004F3A  26D9               	addwf	fsr2l,f,c
 14323  004F3C  5039               	movf	(_FatFs+1)^0,w,c
 14324  004F3E  22DA               	addwfc	fsr2h,f,c
 14325  004F40  0E00               	movlw	0
 14326  004F42  6EDF               	movwf	indf2,c
 14327  004F44                     l7816:
 14328                           
 14329                           ;tff.c: 803: FatFs = fs;
 14330  004F44  C019  F038         	movff	f_mount@fs,_FatFs
 14331  004F48  C01A  F039         	movff	f_mount@fs+1,_FatFs+1
 14332                           
 14333                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 14334  004F4C  5019               	movf	f_mount@fs^0,w,c
 14335  004F4E  101A               	iorwf	(f_mount@fs+1)^0,w,c
 14336  004F50  B4D8               	btfsc	status,2,c
 14337  004F52  D008               	goto	l7822
 14338  004F54  EE20 F01C          	lfsr	2,28
 14339  004F58  5019               	movf	f_mount@fs^0,w,c
 14340  004F5A  26D9               	addwf	fsr2l,f,c
 14341  004F5C  501A               	movf	(f_mount@fs+1)^0,w,c
 14342  004F5E  22DA               	addwfc	fsr2h,f,c
 14343  004F60  0E00               	movlw	0
 14344  004F62  6EDF               	movwf	indf2,c
 14345  004F64                     l7822:
 14346                           
 14347                           ;tff.c: 806: return FR_OK;
 14348  004F64  0E00               	movlw	0
 14349  004F66  0012               	return		;funcret
 14350  004F68                     __end_of_f_mount:
 14351                           	callstack 0
 14352                           
 14353 ;; *************** function _f_lseek *****************
 14354 ;; Defined at:
 14355 ;;		line 1140 in file "bibliotecas/tff.c"
 14356 ;; Parameters:    Size  Location     Type
 14357 ;;  fp              2   78[BANK0 ] PTR struct _FIL
 14358 ;;		 -> fil(28), 
 14359 ;;  ofs             4   80[BANK0 ] unsigned long 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;  csize           4  105[BANK0 ] unsigned long 
 14362 ;;  ifptr           4  101[BANK0 ] unsigned long 
 14363 ;;  clust           2  109[BANK0 ] unsigned short 
 14364 ;;  res             1  100[BANK0 ] enum E155
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1    wreg      enum E3239
 14367 ;; Registers used:
 14368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14369 ;; Tracked objects:
 14370 ;;		On entry : 3F/0
 14371 ;;		On exit  : 3F/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14374 ;;      Params:         0       6       0       0       0       0       0       0       0
 14375 ;;      Locals:         0      11       0       0       0       0       0       0       0
 14376 ;;      Temps:          0      16       0       0       0       0       0       0       0
 14377 ;;      Totals:         0      33       0       0       0       0       0       0       0
 14378 ;;Total ram usage:       33 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:   11
 14381 ;; This function calls:
 14382 ;;		___lldiv
 14383 ;;		_create_chain
 14384 ;;		_get_cluster
 14385 ;;		_validate
 14386 ;; This function is called by:
 14387 ;;		_escrita_sdcard
 14388 ;; This function uses a non-reentrant model
 14389 ;;
 14390                           
 14391                           	psect	text69
 14392  000AE4                     __ptext69:
 14393                           	callstack 0
 14394  000AE4                     _f_lseek:
 14395                           	callstack 16
 14396                           
 14397                           ; BSR set to: 0
 14398                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 14399                           
 14400                           ;incstack = 0
 14401  000AE4  EE20 F004          	lfsr	2,4
 14402  000AE8  51AE               	movf	f_lseek@fp& (0+255),w,b
 14403  000AEA  26D9               	addwf	fsr2l,f,c
 14404  000AEC  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14405  000AEE  22DA               	addwfc	fsr2h,f,c
 14406  000AF0  CFDE F01F          	movff	postinc2,validate@fs
 14407  000AF4  CFDD F020          	movff	postdec2,validate@fs+1
 14408  000AF8  C0AE  FFD9         	movff	f_lseek@fp,fsr2l
 14409  000AFC  C0AF  FFDA         	movff	f_lseek@fp+1,fsr2h
 14410  000B00  CFDE F021          	movff	postinc2,validate@id
 14411  000B04  CFDD F022          	movff	postdec2,validate@id+1
 14412  000B08  ECB4  F027         	call	_validate	;wreg free
 14413  000B0C  0100               	movlb	0	; () banked
 14414  000B0E  6FC4               	movwf	f_lseek@res& (0+255),b
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;tff.c: 1151: if (res != FR_OK) return res;
 14418  000B10  51C4               	movf	f_lseek@res& (0+255),w,b
 14419  000B12  A4D8               	btfss	status,2,c
 14420  000B14  0012               	return	
 14421                           
 14422                           ; BSR set to: 0
 14423                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 14424  000B16  EE20 F002          	lfsr	2,2
 14425  000B1A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14426  000B1C  26D9               	addwf	fsr2l,f,c
 14427  000B1E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14428  000B20  22DA               	addwfc	fsr2h,f,c
 14429  000B22  BEDF               	btfsc	indf2,7,c
 14430  000B24  0012               	return	
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 14434  000B26  EE20 F00A          	lfsr	2,10
 14435  000B2A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14436  000B2C  26D9               	addwf	fsr2l,f,c
 14437  000B2E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14438  000B30  22DA               	addwfc	fsr2h,f,c
 14439  000B32  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14440  000B34  5CDE               	subwf	postinc2,w,c
 14441  000B36  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14442  000B38  58DE               	subwfb	postinc2,w,c
 14443  000B3A  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14444  000B3C  58DE               	subwfb	postinc2,w,c
 14445  000B3E  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14446  000B40  58DE               	subwfb	postinc2,w,c
 14447  000B42  B0D8               	btfsc	status,0,c
 14448  000B44  D016               	goto	l1052
 14449                           
 14450                           ; BSR set to: 0
 14451  000B46  EE20 F002          	lfsr	2,2
 14452  000B4A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14453  000B4C  26D9               	addwf	fsr2l,f,c
 14454  000B4E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14455  000B50  22DA               	addwfc	fsr2h,f,c
 14456  000B52  B2DF               	btfsc	indf2,1,c
 14457  000B54  D00E               	goto	l1052
 14458                           
 14459                           ; BSR set to: 0
 14460  000B56  EE20 F00A          	lfsr	2,10
 14461  000B5A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14462  000B5C  26D9               	addwf	fsr2l,f,c
 14463  000B5E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14464  000B60  22DA               	addwfc	fsr2h,f,c
 14465  000B62  CFDE F0B0          	movff	postinc2,f_lseek@ofs
 14466  000B66  CFDE F0B1          	movff	postinc2,f_lseek@ofs+1
 14467  000B6A  CFDE F0B2          	movff	postinc2,f_lseek@ofs+2
 14468  000B6E  CFDE F0B3          	movff	postinc2,f_lseek@ofs+3
 14469  000B72                     l1052:
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;tff.c: 1159: ifptr = fp->fptr;
 14473  000B72  EE20 F006          	lfsr	2,6
 14474  000B76  51AE               	movf	f_lseek@fp& (0+255),w,b
 14475  000B78  26D9               	addwf	fsr2l,f,c
 14476  000B7A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14477  000B7C  22DA               	addwfc	fsr2h,f,c
 14478  000B7E  CFDE F0C5          	movff	postinc2,f_lseek@ifptr
 14479  000B82  CFDE F0C6          	movff	postinc2,f_lseek@ifptr+1
 14480  000B86  CFDE F0C7          	movff	postinc2,f_lseek@ifptr+2
 14481  000B8A  CFDE F0C8          	movff	postinc2,f_lseek@ifptr+3
 14482                           
 14483                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 14484  000B8E  EE20 F006          	lfsr	2,6
 14485  000B92  51AE               	movf	f_lseek@fp& (0+255),w,b
 14486  000B94  26D9               	addwf	fsr2l,f,c
 14487  000B96  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14488  000B98  22DA               	addwfc	fsr2h,f,c
 14489  000B9A  6ADE               	clrf	postinc2,c
 14490  000B9C  6ADE               	clrf	postinc2,c
 14491  000B9E  6ADE               	clrf	postinc2,c
 14492  000BA0  6ADD               	clrf	postdec2,c
 14493  000BA2  EE20 F003          	lfsr	2,3
 14494  000BA6  51AE               	movf	f_lseek@fp& (0+255),w,b
 14495  000BA8  26D9               	addwf	fsr2l,f,c
 14496  000BAA  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14497  000BAC  22DA               	addwfc	fsr2h,f,c
 14498  000BAE  0EFF               	movlw	255
 14499  000BB0  6EDF               	movwf	indf2,c
 14500                           
 14501                           ; BSR set to: 0
 14502                           ;tff.c: 1161: if (ofs > 0) {
 14503  000BB2  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14504  000BB4  11B1               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 14505  000BB6  11B2               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 14506  000BB8  11B3               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 14507  000BBA  B4D8               	btfsc	status,2,c
 14508  000BBC  D19C               	goto	l11392
 14509                           
 14510                           ; BSR set to: 0
 14511                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 14512  000BBE  EE20 F004          	lfsr	2,4
 14513  000BC2  51AE               	movf	f_lseek@fp& (0+255),w,b
 14514  000BC4  26D9               	addwf	fsr2l,f,c
 14515  000BC6  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14516  000BC8  22DA               	addwfc	fsr2h,f,c
 14517  000BCA  EE10 F01D          	lfsr	1,29
 14518  000BCE  50DE               	movf	postinc2,w,c
 14519  000BD0  26E1               	addwf	fsr1l,f,c
 14520  000BD2  50DD               	movf	postdec2,w,c
 14521  000BD4  22E2               	addwfc	fsr1h,f,c
 14522  000BD6  50E7               	movf	indf1,w,c
 14523  000BD8  6FB4               	movwf	??_f_lseek& (0+255),b
 14524  000BDA  C0B4  F0B5         	movff	??_f_lseek,??_f_lseek+1
 14525  000BDE  6BB6               	clrf	(??_f_lseek+2)& (0+255),b
 14526  000BE0  6BB7               	clrf	(??_f_lseek+3)& (0+255),b
 14527  000BE2  6BB8               	clrf	(??_f_lseek+4)& (0+255),b
 14528  000BE4  0E09               	movlw	9
 14529  000BE6                     u13795:
 14530  000BE6  90D8               	bcf	status,0,c
 14531  000BE8  37B5               	rlcf	(??_f_lseek+1)& (0+255),f,b
 14532  000BEA  37B6               	rlcf	(??_f_lseek+2)& (0+255),f,b
 14533  000BEC  37B7               	rlcf	(??_f_lseek+3)& (0+255),f,b
 14534  000BEE  37B8               	rlcf	(??_f_lseek+4)& (0+255),f,b
 14535  000BF0  2EE8               	decfsz	wreg,f,c
 14536  000BF2  D7F9               	goto	u13795
 14537  000BF4  C0B5  F0C9         	movff	??_f_lseek+1,f_lseek@csize
 14538  000BF8  C0B6  F0CA         	movff	??_f_lseek+2,f_lseek@csize+1
 14539  000BFC  C0B7  F0CB         	movff	??_f_lseek+3,f_lseek@csize+2
 14540  000C00  C0B8  F0CC         	movff	??_f_lseek+4,f_lseek@csize+3
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 14544  000C04  51C5               	movf	f_lseek@ifptr& (0+255),w,b
 14545  000C06  11C6               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 14546  000C08  11C7               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 14547  000C0A  11C8               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 14548  000C0C  B4D8               	btfsc	status,2,c
 14549  000C0E  D093               	goto	l11350
 14550                           
 14551                           ; BSR set to: 0
 14552  000C10  0EFF               	movlw	255
 14553  000C12  25B0               	addwf	f_lseek@ofs& (0+255),w,b
 14554  000C14  6E19               	movwf	___lldiv@dividend^0,c
 14555  000C16  0EFF               	movlw	255
 14556  000C18  21B1               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 14557  000C1A  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 14558  000C1C  0EFF               	movlw	255
 14559  000C1E  21B2               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 14560  000C20  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 14561  000C22  0EFF               	movlw	255
 14562  000C24  21B3               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 14563  000C26  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 14564  000C28  C0C9  F01D         	movff	f_lseek@csize,___lldiv@divisor
 14565  000C2C  C0CA  F01E         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14566  000C30  C0CB  F01F         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14567  000C34  C0CC  F020         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14568  000C38  EC54  F024         	call	___lldiv	;wreg free
 14569  000C3C  C019  F0B4         	movff	?___lldiv,??_f_lseek
 14570  000C40  C01A  F0B5         	movff	?___lldiv+1,??_f_lseek+1
 14571  000C44  C01B  F0B6         	movff	?___lldiv+2,??_f_lseek+2
 14572  000C48  C01C  F0B7         	movff	?___lldiv+3,??_f_lseek+3
 14573  000C4C  0EFF               	movlw	255
 14574  000C4E  0100               	movlb	0	; () banked
 14575  000C50  25C5               	addwf	f_lseek@ifptr& (0+255),w,b
 14576  000C52  6E19               	movwf	___lldiv@dividend^0,c
 14577  000C54  0EFF               	movlw	255
 14578  000C56  21C6               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14579  000C58  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 14580  000C5A  0EFF               	movlw	255
 14581  000C5C  21C7               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14582  000C5E  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 14583  000C60  0EFF               	movlw	255
 14584  000C62  21C8               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14585  000C64  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 14586  000C66  C0C9  F01D         	movff	f_lseek@csize,___lldiv@divisor
 14587  000C6A  C0CA  F01E         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14588  000C6E  C0CB  F01F         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14589  000C72  C0CC  F020         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14590  000C76  EC54  F024         	call	___lldiv	;wreg free
 14591  000C7A  5019               	movf	?___lldiv^0,w,c
 14592  000C7C  0100               	movlb	0	; () banked
 14593  000C7E  5DB4               	subwf	??_f_lseek& (0+255),w,b
 14594  000C80  501A               	movf	(?___lldiv+1)^0,w,c
 14595  000C82  59B5               	subwfb	(??_f_lseek+1)& (0+255),w,b
 14596  000C84  501B               	movf	(?___lldiv+2)^0,w,c
 14597  000C86  59B6               	subwfb	(??_f_lseek+2)& (0+255),w,b
 14598  000C88  501C               	movf	(?___lldiv+3)^0,w,c
 14599  000C8A  59B7               	subwfb	(??_f_lseek+3)& (0+255),w,b
 14600  000C8C  A0D8               	btfss	status,0,c
 14601  000C8E  D053               	goto	l11350
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 14605  000C90  0EFF               	movlw	255
 14606  000C92  25C9               	addwf	f_lseek@csize& (0+255),w,b
 14607  000C94  6FB4               	movwf	??_f_lseek& (0+255),b
 14608  000C96  0EFF               	movlw	255
 14609  000C98  21CA               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 14610  000C9A  6FB5               	movwf	(??_f_lseek+1)& (0+255),b
 14611  000C9C  0EFF               	movlw	255
 14612  000C9E  21CB               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 14613  000CA0  6FB6               	movwf	(??_f_lseek+2)& (0+255),b
 14614  000CA2  0EFF               	movlw	255
 14615  000CA4  21CC               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 14616  000CA6  6FB7               	movwf	(??_f_lseek+3)& (0+255),b
 14617  000CA8  1DB4               	comf	??_f_lseek& (0+255),w,b
 14618  000CAA  6FB8               	movwf	(??_f_lseek+4)& (0+255),b
 14619  000CAC  1DB5               	comf	(??_f_lseek+1)& (0+255),w,b
 14620  000CAE  6FB9               	movwf	(??_f_lseek+5)& (0+255),b
 14621  000CB0  1DB6               	comf	(??_f_lseek+2)& (0+255),w,b
 14622  000CB2  6FBA               	movwf	(??_f_lseek+6)& (0+255),b
 14623  000CB4  1DB7               	comf	(??_f_lseek+3)& (0+255),w,b
 14624  000CB6  6FBB               	movwf	(??_f_lseek+7)& (0+255),b
 14625  000CB8  0EFF               	movlw	255
 14626  000CBA  25C5               	addwf	f_lseek@ifptr& (0+255),w,b
 14627  000CBC  6FBC               	movwf	(??_f_lseek+8)& (0+255),b
 14628  000CBE  0EFF               	movlw	255
 14629  000CC0  21C6               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14630  000CC2  6FBD               	movwf	(??_f_lseek+9)& (0+255),b
 14631  000CC4  0EFF               	movlw	255
 14632  000CC6  21C7               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14633  000CC8  6FBE               	movwf	(??_f_lseek+10)& (0+255),b
 14634  000CCA  0EFF               	movlw	255
 14635  000CCC  21C8               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14636  000CCE  6FBF               	movwf	(??_f_lseek+11)& (0+255),b
 14637  000CD0  51B8               	movf	(??_f_lseek+4)& (0+255),w,b
 14638  000CD2  15BC               	andwf	(??_f_lseek+8)& (0+255),w,b
 14639  000CD4  6FC0               	movwf	(??_f_lseek+12)& (0+255),b
 14640  000CD6  51B9               	movf	(??_f_lseek+5)& (0+255),w,b
 14641  000CD8  15BD               	andwf	(??_f_lseek+9)& (0+255),w,b
 14642  000CDA  6FC1               	movwf	(??_f_lseek+13)& (0+255),b
 14643  000CDC  51BA               	movf	(??_f_lseek+6)& (0+255),w,b
 14644  000CDE  15BE               	andwf	(??_f_lseek+10)& (0+255),w,b
 14645  000CE0  6FC2               	movwf	(??_f_lseek+14)& (0+255),b
 14646  000CE2  51BB               	movf	(??_f_lseek+7)& (0+255),w,b
 14647  000CE4  15BF               	andwf	(??_f_lseek+11)& (0+255),w,b
 14648  000CE6  6FC3               	movwf	(??_f_lseek+15)& (0+255),b
 14649  000CE8  EE20 F006          	lfsr	2,6
 14650  000CEC  51AE               	movf	f_lseek@fp& (0+255),w,b
 14651  000CEE  26D9               	addwf	fsr2l,f,c
 14652  000CF0  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14653  000CF2  22DA               	addwfc	fsr2h,f,c
 14654  000CF4  C0C0  FFDE         	movff	??_f_lseek+12,postinc2
 14655  000CF8  C0C1  FFDE         	movff	??_f_lseek+13,postinc2
 14656  000CFC  C0C2  FFDE         	movff	??_f_lseek+14,postinc2
 14657  000D00  C0C3  FFDE         	movff	??_f_lseek+15,postinc2
 14658                           
 14659                           ;tff.c: 1166: ofs -= fp->fptr;
 14660  000D04  EE20 F006          	lfsr	2,6
 14661  000D08  51AE               	movf	f_lseek@fp& (0+255),w,b
 14662  000D0A  26D9               	addwf	fsr2l,f,c
 14663  000D0C  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14664  000D0E  22DA               	addwfc	fsr2h,f,c
 14665  000D10  50DE               	movf	postinc2,w,c
 14666  000D12  5FB0               	subwf	f_lseek@ofs& (0+255),f,b
 14667  000D14  50DE               	movf	postinc2,w,c
 14668  000D16  5BB1               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14669  000D18  50DE               	movf	postinc2,w,c
 14670  000D1A  5BB2               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14671  000D1C  50DD               	movf	postdec2,w,c
 14672  000D1E  5BB3               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14673                           
 14674                           ;tff.c: 1167: clust = fp->curr_clust;
 14675  000D20  EE20 F010          	lfsr	2,16
 14676  000D24  51AE               	movf	f_lseek@fp& (0+255),w,b
 14677  000D26  26D9               	addwf	fsr2l,f,c
 14678  000D28  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14679  000D2A  22DA               	addwfc	fsr2h,f,c
 14680  000D2C  CFDE F0CD          	movff	postinc2,f_lseek@clust
 14681  000D30  CFDD F0CE          	movff	postdec2,f_lseek@clust+1
 14682                           
 14683                           ;tff.c: 1168: } else {
 14684  000D34  D030               	goto	l11362
 14685  000D36                     l11350:
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;tff.c: 1169: clust = fp->org_clust;
 14689  000D36  EE20 F00E          	lfsr	2,14
 14690  000D3A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14691  000D3C  26D9               	addwf	fsr2l,f,c
 14692  000D3E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14693  000D40  22DA               	addwfc	fsr2h,f,c
 14694  000D42  CFDE F0CD          	movff	postinc2,f_lseek@clust
 14695  000D46  CFDD F0CE          	movff	postdec2,f_lseek@clust+1
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;tff.c: 1171: if (clust == 0) {
 14699  000D4A  51CD               	movf	f_lseek@clust& (0+255),w,b
 14700  000D4C  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14701  000D4E  A4D8               	btfss	status,2,c
 14702  000D50  D018               	goto	l1056
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;tff.c: 1172: clust = create_chain(0);
 14706  000D52  0E00               	movlw	0
 14707  000D54  6FA1               	movwf	(create_chain@clust+1)& (0+255),b
 14708  000D56  0E00               	movlw	0
 14709  000D58  6FA0               	movwf	create_chain@clust& (0+255),b
 14710  000D5A  EC7C  F019         	call	_create_chain	;wreg free
 14711  000D5E  C0A0  F0CD         	movff	?_create_chain,f_lseek@clust
 14712  000D62  C0A1  F0CE         	movff	?_create_chain+1,f_lseek@clust+1
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 14716  000D66  05CD               	decf	f_lseek@clust& (0+255),w,b
 14717  000D68  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14718  000D6A  B4D8               	btfsc	status,2,c
 14719  000D6C  D0F7               	goto	l11400
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;tff.c: 1174: fp->org_clust = clust;
 14723  000D6E  EE20 F00E          	lfsr	2,14
 14724  000D72  51AE               	movf	f_lseek@fp& (0+255),w,b
 14725  000D74  26D9               	addwf	fsr2l,f,c
 14726  000D76  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14727  000D78  22DA               	addwfc	fsr2h,f,c
 14728  000D7A  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14729  000D7E  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14730  000D82                     l1056:
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 14734  000D82  EE20 F010          	lfsr	2,16
 14735  000D86  51AE               	movf	f_lseek@fp& (0+255),w,b
 14736  000D88  26D9               	addwf	fsr2l,f,c
 14737  000D8A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14738  000D8C  22DA               	addwfc	fsr2h,f,c
 14739  000D8E  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14740  000D92  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14741  000D96                     l11362:
 14742                           
 14743                           ; BSR set to: 0
 14744                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 14745  000D96  51CD               	movf	f_lseek@clust& (0+255),w,b
 14746  000D98  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14747  000D9A  A4D8               	btfss	status,2,c
 14748  000D9C  D062               	goto	l11384
 14749  000D9E  D0AB               	goto	l11392
 14750  000DA0                     l11366:
 14751                           
 14752                           ; BSR set to: 0
 14753                           ;tff.c: 1182: if (fp->flag & 0x02) {
 14754  000DA0  EE20 F002          	lfsr	2,2
 14755  000DA4  51AE               	movf	f_lseek@fp& (0+255),w,b
 14756  000DA6  26D9               	addwf	fsr2l,f,c
 14757  000DA8  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14758  000DAA  22DA               	addwfc	fsr2h,f,c
 14759  000DAC  A2DF               	btfss	indf2,1,c
 14760  000DAE  D017               	goto	l11374
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;tff.c: 1183: clust = create_chain(clust);
 14764  000DB0  C0CD  F0A0         	movff	f_lseek@clust,create_chain@clust
 14765  000DB4  C0CE  F0A1         	movff	f_lseek@clust+1,create_chain@clust+1
 14766  000DB8  EC7C  F019         	call	_create_chain	;wreg free
 14767  000DBC  C0A0  F0CD         	movff	?_create_chain,f_lseek@clust
 14768  000DC0  C0A1  F0CE         	movff	?_create_chain+1,f_lseek@clust+1
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;tff.c: 1184: if (clust == 0) {
 14772  000DC4  51CD               	movf	f_lseek@clust& (0+255),w,b
 14773  000DC6  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14774  000DC8  A4D8               	btfss	status,2,c
 14775  000DCA  D013               	goto	l11376
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;tff.c: 1185: ofs = csize; break;
 14779  000DCC  C0C9  F0B0         	movff	f_lseek@csize,f_lseek@ofs
 14780  000DD0  C0CA  F0B1         	movff	f_lseek@csize+1,f_lseek@ofs+1
 14781  000DD4  C0CB  F0B2         	movff	f_lseek@csize+2,f_lseek@ofs+2
 14782  000DD8  C0CC  F0B3         	movff	f_lseek@csize+3,f_lseek@ofs+3
 14783  000DDC  D04C               	goto	u13890
 14784  000DDE                     l11374:
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;tff.c: 1189: clust = get_cluster(clust);
 14788  000DDE  C0CD  F031         	movff	f_lseek@clust,get_cluster@clust
 14789  000DE2  C0CE  F032         	movff	f_lseek@clust+1,get_cluster@clust+1
 14790  000DE6  EC25  F013         	call	_get_cluster	;wreg free
 14791  000DEA  C031  F0CD         	movff	?_get_cluster,f_lseek@clust
 14792  000DEE  C032  F0CE         	movff	?_get_cluster+1,f_lseek@clust+1
 14793  000DF2                     l11376:
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 14797  000DF2  51CE               	movf	(f_lseek@clust+1)& (0+255),w,b
 14798  000DF4  E104               	bnz	u13870
 14799  000DF6  0E02               	movlw	2
 14800  000DF8  5DCD               	subwf	f_lseek@clust& (0+255),w,b
 14801  000DFA  A0D8               	btfss	status,0,c
 14802  000DFC  D0AF               	goto	l11400
 14803  000DFE                     u13870:
 14804                           
 14805                           ; BSR set to: 0
 14806  000DFE  EE20 F004          	lfsr	2,4
 14807  000E02  51AE               	movf	f_lseek@fp& (0+255),w,b
 14808  000E04  26D9               	addwf	fsr2l,f,c
 14809  000E06  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14810  000E08  22DA               	addwfc	fsr2h,f,c
 14811  000E0A  EE10 F016          	lfsr	1,22
 14812  000E0E  50DE               	movf	postinc2,w,c
 14813  000E10  26E1               	addwf	fsr1l,f,c
 14814  000E12  50DD               	movf	postdec2,w,c
 14815  000E14  22E2               	addwfc	fsr1h,f,c
 14816  000E16  50E6               	movf	postinc1,w,c
 14817  000E18  5DCD               	subwf	f_lseek@clust& (0+255),w,b
 14818  000E1A  50E6               	movf	postinc1,w,c
 14819  000E1C  59CE               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 14820  000E1E  B0D8               	btfsc	status,0,c
 14821  000E20  D09D               	goto	l11400
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;tff.c: 1191: fp->curr_clust = clust;
 14825  000E22  EE20 F010          	lfsr	2,16
 14826  000E26  51AE               	movf	f_lseek@fp& (0+255),w,b
 14827  000E28  26D9               	addwf	fsr2l,f,c
 14828  000E2A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14829  000E2C  22DA               	addwfc	fsr2h,f,c
 14830  000E2E  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14831  000E32  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14832                           
 14833                           ;tff.c: 1192: fp->fptr += csize;
 14834  000E36  EE20 F006          	lfsr	2,6
 14835  000E3A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14836  000E3C  26D9               	addwf	fsr2l,f,c
 14837  000E3E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14838  000E40  22DA               	addwfc	fsr2h,f,c
 14839  000E42  51C9               	movf	f_lseek@csize& (0+255),w,b
 14840  000E44  26DE               	addwf	postinc2,f,c
 14841  000E46  51CA               	movf	(f_lseek@csize+1)& (0+255),w,b
 14842  000E48  22DE               	addwfc	postinc2,f,c
 14843  000E4A  51CB               	movf	(f_lseek@csize+2)& (0+255),w,b
 14844  000E4C  22DE               	addwfc	postinc2,f,c
 14845  000E4E  51CC               	movf	(f_lseek@csize+3)& (0+255),w,b
 14846  000E50  22DE               	addwfc	postinc2,f,c
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;tff.c: 1193: ofs -= csize;
 14850  000E52  51C9               	movf	f_lseek@csize& (0+255),w,b
 14851  000E54  5FB0               	subwf	f_lseek@ofs& (0+255),f,b
 14852  000E56  51CA               	movf	(f_lseek@csize+1)& (0+255),w,b
 14853  000E58  5BB1               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14854  000E5A  51CB               	movf	(f_lseek@csize+2)& (0+255),w,b
 14855  000E5C  5BB2               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14856  000E5E  51CC               	movf	(f_lseek@csize+3)& (0+255),w,b
 14857  000E60  5BB3               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14858  000E62                     l11384:
 14859                           
 14860                           ; BSR set to: 0
 14861  000E62  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14862  000E64  5DC9               	subwf	f_lseek@csize& (0+255),w,b
 14863  000E66  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14864  000E68  59CA               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 14865  000E6A  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14866  000E6C  59CB               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 14867  000E6E  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14868  000E70  59CC               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 14869  000E72  A0D8               	btfss	status,0,c
 14870  000E74  D795               	goto	l11366
 14871  000E76                     u13890:
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 14875  000E76  EE20 F006          	lfsr	2,6
 14876  000E7A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14877  000E7C  26D9               	addwf	fsr2l,f,c
 14878  000E7E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14879  000E80  22DA               	addwfc	fsr2h,f,c
 14880  000E82  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14881  000E84  26DE               	addwf	postinc2,f,c
 14882  000E86  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14883  000E88  22DE               	addwfc	postinc2,f,c
 14884  000E8A  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14885  000E8C  22DE               	addwfc	postinc2,f,c
 14886  000E8E  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14887  000E90  22DE               	addwfc	postinc2,f,c
 14888                           
 14889                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 14890  000E92  EE20 F003          	lfsr	2,3
 14891  000E96  51AE               	movf	f_lseek@fp& (0+255),w,b
 14892  000E98  26D9               	addwf	fsr2l,f,c
 14893  000E9A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14894  000E9C  22DA               	addwfc	fsr2h,f,c
 14895  000E9E  C0B0  F0B4         	movff	f_lseek@ofs,??_f_lseek
 14896  000EA2  C0B1  F0B5         	movff	f_lseek@ofs+1,??_f_lseek+1
 14897  000EA6  C0B2  F0B6         	movff	f_lseek@ofs+2,??_f_lseek+2
 14898  000EAA  C0B3  F0B7         	movff	f_lseek@ofs+3,??_f_lseek+3
 14899  000EAE  0E0A               	movlw	10
 14900  000EB0  D005               	goto	u13900
 14901  000EB2                     u13905:
 14902  000EB2  90D8               	bcf	status,0,c
 14903  000EB4  33B7               	rrcf	(??_f_lseek+3)& (0+255),f,b
 14904  000EB6  33B6               	rrcf	(??_f_lseek+2)& (0+255),f,b
 14905  000EB8  33B5               	rrcf	(??_f_lseek+1)& (0+255),f,b
 14906  000EBA  33B4               	rrcf	??_f_lseek& (0+255),f,b
 14907  000EBC                     u13900:
 14908  000EBC  2EE8               	decfsz	wreg,f,c
 14909  000EBE  D7F9               	goto	u13905
 14910  000EC0  51B4               	movf	??_f_lseek& (0+255),w,b
 14911  000EC2  6EDF               	movwf	indf2,c
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 14915  000EC4  0EFF               	movlw	255
 14916  000EC6  15B0               	andwf	f_lseek@ofs& (0+255),w,b
 14917  000EC8  6FB4               	movwf	??_f_lseek& (0+255),b
 14918  000ECA  0E01               	movlw	1
 14919  000ECC  15B1               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 14920  000ECE  6FB5               	movwf	(??_f_lseek+1)& (0+255),b
 14921  000ED0  0E00               	movlw	0
 14922  000ED2  15B2               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 14923  000ED4  6FB6               	movwf	(??_f_lseek+2)& (0+255),b
 14924  000ED6  0E00               	movlw	0
 14925  000ED8  15B3               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 14926  000EDA  6FB7               	movwf	(??_f_lseek+3)& (0+255),b
 14927  000EDC  51B4               	movf	??_f_lseek& (0+255),w,b
 14928  000EDE  11B5               	iorwf	(??_f_lseek+1)& (0+255),w,b
 14929  000EE0  11B6               	iorwf	(??_f_lseek+2)& (0+255),w,b
 14930  000EE2  11B7               	iorwf	(??_f_lseek+3)& (0+255),w,b
 14931  000EE4  B4D8               	btfsc	status,2,c
 14932  000EE6  D007               	goto	l11392
 14933                           
 14934                           ; BSR set to: 0
 14935  000EE8  EE20 F003          	lfsr	2,3
 14936  000EEC  51AE               	movf	f_lseek@fp& (0+255),w,b
 14937  000EEE  26D9               	addwf	fsr2l,f,c
 14938  000EF0  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14939  000EF2  22DA               	addwfc	fsr2h,f,c
 14940  000EF4  2ADF               	incf	indf2,f,c
 14941  000EF6                     l11392:
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 14945  000EF6  EE20 F006          	lfsr	2,6
 14946  000EFA  51AE               	movf	f_lseek@fp& (0+255),w,b
 14947  000EFC  26D9               	addwf	fsr2l,f,c
 14948  000EFE  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14949  000F00  22DA               	addwfc	fsr2h,f,c
 14950  000F02  EE10 F00A          	lfsr	1,10
 14951  000F06  51AE               	movf	f_lseek@fp& (0+255),w,b
 14952  000F08  26E1               	addwf	fsr1l,f,c
 14953  000F0A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14954  000F0C  22E2               	addwfc	fsr1h,f,c
 14955  000F0E  50DE               	movf	postinc2,w,c
 14956  000F10  5CE6               	subwf	postinc1,w,c
 14957  000F12  50DE               	movf	postinc2,w,c
 14958  000F14  58E6               	subwfb	postinc1,w,c
 14959  000F16  50DE               	movf	postinc2,w,c
 14960  000F18  58E6               	subwfb	postinc1,w,c
 14961  000F1A  50DE               	movf	postinc2,w,c
 14962  000F1C  58E6               	subwfb	postinc1,w,c
 14963  000F1E  B0D8               	btfsc	status,0,c
 14964  000F20  0012               	return	
 14965                           
 14966                           ; BSR set to: 0
 14967                           ;tff.c: 1203: fp->fsize = fp->fptr;
 14968  000F22  EE20 F006          	lfsr	2,6
 14969  000F26  51AE               	movf	f_lseek@fp& (0+255),w,b
 14970  000F28  26D9               	addwf	fsr2l,f,c
 14971  000F2A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14972  000F2C  22DA               	addwfc	fsr2h,f,c
 14973  000F2E  EE10 F00A          	lfsr	1,10
 14974  000F32  51AE               	movf	f_lseek@fp& (0+255),w,b
 14975  000F34  26E1               	addwf	fsr1l,f,c
 14976  000F36  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14977  000F38  22E2               	addwfc	fsr1h,f,c
 14978  000F3A  CFDE FFE6          	movff	postinc2,postinc1
 14979  000F3E  CFDE FFE6          	movff	postinc2,postinc1
 14980  000F42  CFDE FFE6          	movff	postinc2,postinc1
 14981  000F46  CFDE FFE6          	movff	postinc2,postinc1
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;tff.c: 1204: fp->flag |= 0x20;
 14985  000F4A  EE20 F002          	lfsr	2,2
 14986  000F4E  51AE               	movf	f_lseek@fp& (0+255),w,b
 14987  000F50  26D9               	addwf	fsr2l,f,c
 14988  000F52  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14989  000F54  22DA               	addwfc	fsr2h,f,c
 14990  000F56  0E00               	movlw	0
 14991  000F58  8ADB               	bsf	plusw2,5,c
 14992  000F5A  0012               	return	
 14993  000F5C                     l11400:
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;tff.c: 1211: fp->flag |= 0x80;
 14997  000F5C  EE20 F002          	lfsr	2,2
 14998  000F60  51AE               	movf	f_lseek@fp& (0+255),w,b
 14999  000F62  26D9               	addwf	fsr2l,f,c
 15000  000F64  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 15001  000F66  22DA               	addwfc	fsr2h,f,c
 15002  000F68  0E00               	movlw	0
 15003  000F6A  8EDB               	bsf	plusw2,7,c
 15004                           
 15005                           ; BSR set to: 0
 15006  000F6C  0012               	return		;funcret
 15007  000F6E                     __end_of_f_lseek:
 15008                           	callstack 0
 15009                           
 15010 ;; *************** function _create_chain *****************
 15011 ;; Defined at:
 15012 ;;		line 283 in file "bibliotecas/tff.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;  clust           2   64[BANK0 ] unsigned short 
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;  ncl             2   76[BANK0 ] unsigned short 
 15017 ;;  scl             2   74[BANK0 ] unsigned short 
 15018 ;;  cstat           2   72[BANK0 ] unsigned short 
 15019 ;;  fs              2   70[BANK0 ] PTR struct _FATFS
 15020 ;;		 -> NULL(0), fs(544), 
 15021 ;;  mcl             2   68[BANK0 ] unsigned short 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  2   64[BANK0 ] unsigned short 
 15024 ;; Registers used:
 15025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15026 ;; Tracked objects:
 15027 ;;		On entry : 3F/0
 15028 ;;		On exit  : 3F/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15031 ;;      Params:         0       2       0       0       0       0       0       0       0
 15032 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15033 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15034 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15035 ;;Total ram usage:       14 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:   10
 15038 ;; This function calls:
 15039 ;;		_get_cluster
 15040 ;;		_put_cluster
 15041 ;; This function is called by:
 15042 ;;		_reserve_direntry
 15043 ;;		_f_write
 15044 ;;		_f_lseek
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text70
 15049  0032F8                     __ptext70:
 15050                           	callstack 0
 15051  0032F8                     _create_chain:
 15052                           	callstack 13
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 15056                           
 15057                           ; BSR set to: 0
 15058                           ;incstack = 0
 15059  0032F8  C038  F0A6         	movff	_FatFs,create_chain@fs
 15060  0032FC  C039  F0A7         	movff	_FatFs+1,create_chain@fs+1
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;tff.c: 291: mcl = fs->max_clust;
 15064  003300  EE20 F016          	lfsr	2,22
 15065  003304  51A6               	movf	create_chain@fs& (0+255),w,b
 15066  003306  26D9               	addwf	fsr2l,f,c
 15067  003308  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 15068  00330A  22DA               	addwfc	fsr2h,f,c
 15069  00330C  CFDE F0A4          	movff	postinc2,create_chain@mcl
 15070  003310  CFDD F0A5          	movff	postdec2,create_chain@mcl+1
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;tff.c: 292: if (clust == 0) {
 15074  003314  51A0               	movf	create_chain@clust& (0+255),w,b
 15075  003316  11A1               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15076  003318  A4D8               	btfss	status,2,c
 15077  00331A  D01B               	goto	l10092
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;tff.c: 293: scl = fs->last_clust;
 15081  00331C  EE20 F018          	lfsr	2,24
 15082  003320  51A6               	movf	create_chain@fs& (0+255),w,b
 15083  003322  26D9               	addwf	fsr2l,f,c
 15084  003324  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 15085  003326  22DA               	addwfc	fsr2h,f,c
 15086  003328  CFDE F0AA          	movff	postinc2,create_chain@scl
 15087  00332C  CFDD F0AB          	movff	postdec2,create_chain@scl+1
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 15091  003330  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 15092  003332  E104               	bnz	u11760
 15093  003334  0E02               	movlw	2
 15094  003336  5DAA               	subwf	create_chain@scl& (0+255),w,b
 15095  003338  A0D8               	btfss	status,0,c
 15096  00333A  D006               	goto	u11770
 15097  00333C                     u11760:
 15098                           
 15099                           ; BSR set to: 0
 15100  00333C  51A4               	movf	create_chain@mcl& (0+255),w,b
 15101  00333E  5DAA               	subwf	create_chain@scl& (0+255),w,b
 15102  003340  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 15103  003342  59AB               	subwfb	(create_chain@scl+1)& (0+255),w,b
 15104  003344  A0D8               	btfss	status,0,c
 15105  003346  D029               	goto	l777
 15106  003348                     u11770:
 15107                           
 15108                           ; BSR set to: 0
 15109  003348  0E00               	movlw	0
 15110  00334A  6FAB               	movwf	(create_chain@scl+1)& (0+255),b
 15111  00334C  0E01               	movlw	1
 15112  00334E  6FAA               	movwf	create_chain@scl& (0+255),b
 15113  003350  D024               	goto	l777
 15114  003352                     l10092:
 15115                           
 15116                           ; BSR set to: 0
 15117                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 15118  003352  C0A0  F031         	movff	create_chain@clust,get_cluster@clust
 15119  003356  C0A1  F032         	movff	create_chain@clust+1,get_cluster@clust+1
 15120  00335A  EC25  F013         	call	_get_cluster	;wreg free
 15121  00335E  C031  F0A8         	movff	?_get_cluster,create_chain@cstat
 15122  003362  C032  F0A9         	movff	?_get_cluster+1,create_chain@cstat+1
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;tff.c: 298: if (cstat < 2) return 1;
 15126  003366  51A9               	movf	(create_chain@cstat+1)& (0+255),w,b
 15127  003368  E109               	bnz	l10100
 15128  00336A  0E02               	movlw	2
 15129  00336C  5DA8               	subwf	create_chain@cstat& (0+255),w,b
 15130  00336E  B0D8               	btfsc	status,0,c
 15131  003370  D005               	goto	l10100
 15132  003372                     u11780:
 15133                           
 15134                           ; BSR set to: 0
 15135  003372  0E00               	movlw	0
 15136  003374  6FA1               	movwf	(?_create_chain+1)& (0+255),b
 15137  003376  0E01               	movlw	1
 15138  003378  6FA0               	movwf	?_create_chain& (0+255),b
 15139  00337A  0012               	return	
 15140  00337C                     l10100:
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;tff.c: 299: if (cstat < mcl) return cstat;
 15144  00337C  51A4               	movf	create_chain@mcl& (0+255),w,b
 15145  00337E  5DA8               	subwf	create_chain@cstat& (0+255),w,b
 15146  003380  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 15147  003382  59A9               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 15148  003384  B0D8               	btfsc	status,0,c
 15149  003386  D005               	goto	l780
 15150                           
 15151                           ; BSR set to: 0
 15152  003388  C0A8  F0A0         	movff	create_chain@cstat,?_create_chain
 15153  00338C  C0A9  F0A1         	movff	create_chain@cstat+1,?_create_chain+1
 15154  003390  0012               	return	
 15155  003392                     l780:
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;tff.c: 300: scl = clust;
 15159  003392  C0A0  F0AA         	movff	create_chain@clust,create_chain@scl
 15160  003396  C0A1  F0AB         	movff	create_chain@clust+1,create_chain@scl+1
 15161  00339A                     l777:
 15162                           
 15163                           ; BSR set to: 0
 15164                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 15165  00339A  C0AA  F0AC         	movff	create_chain@scl,create_chain@ncl
 15166  00339E  C0AB  F0AD         	movff	create_chain@scl+1,create_chain@ncl+1
 15167  0033A2                     l10104:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;tff.c: 305: ncl++;
 15171  0033A2  4BAC               	infsnz	create_chain@ncl& (0+255),f,b
 15172  0033A4  2BAD               	incf	(create_chain@ncl+1)& (0+255),f,b
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;tff.c: 306: if (ncl >= mcl) {
 15176  0033A6  51A4               	movf	create_chain@mcl& (0+255),w,b
 15177  0033A8  5DAC               	subwf	create_chain@ncl& (0+255),w,b
 15178  0033AA  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 15179  0033AC  59AD               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 15180  0033AE  A0D8               	btfss	status,0,c
 15181  0033B0  D00F               	goto	l10116
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;tff.c: 307: ncl = 2;
 15185  0033B2  0E00               	movlw	0
 15186  0033B4  6FAD               	movwf	(create_chain@ncl+1)& (0+255),b
 15187  0033B6  0E02               	movlw	2
 15188  0033B8  6FAC               	movwf	create_chain@ncl& (0+255),b
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;tff.c: 308: if (ncl > scl) return 0;
 15192  0033BA  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 15193  0033BC  E109               	bnz	l10116
 15194  0033BE  0E02               	movlw	2
 15195  0033C0  5DAA               	subwf	create_chain@scl& (0+255),w,b
 15196  0033C2  B0D8               	btfsc	status,0,c
 15197  0033C4  D005               	goto	l10116
 15198  0033C6                     u11810:
 15199                           
 15200                           ; BSR set to: 0
 15201  0033C6  0E00               	movlw	0
 15202  0033C8  6FA1               	movwf	(?_create_chain+1)& (0+255),b
 15203  0033CA  0E00               	movlw	0
 15204  0033CC  6FA0               	movwf	?_create_chain& (0+255),b
 15205  0033CE  0012               	return	
 15206  0033D0                     l10116:
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 15210  0033D0  C0AC  F031         	movff	create_chain@ncl,get_cluster@clust
 15211  0033D4  C0AD  F032         	movff	create_chain@ncl+1,get_cluster@clust+1
 15212  0033D8  EC25  F013         	call	_get_cluster	;wreg free
 15213  0033DC  C031  F0A8         	movff	?_get_cluster,create_chain@cstat
 15214  0033E0  C032  F0A9         	movff	?_get_cluster+1,create_chain@cstat+1
 15215                           
 15216                           ; BSR set to: 0
 15217                           ;tff.c: 311: if (cstat == 0) break;
 15218  0033E4  51A8               	movf	create_chain@cstat& (0+255),w,b
 15219  0033E6  11A9               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15220  0033E8  B4D8               	btfsc	status,2,c
 15221  0033EA  D00C               	goto	l10134
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;tff.c: 312: if (cstat == 1) return 1;
 15225  0033EC  05A8               	decf	create_chain@cstat& (0+255),w,b
 15226  0033EE  11A9               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15227  0033F0  B4D8               	btfsc	status,2,c
 15228  0033F2  D7BF               	goto	u11780
 15229                           
 15230                           ; BSR set to: 0
 15231                           ;tff.c: 313: if (ncl == scl) return 0;
 15232  0033F4  51AA               	movf	create_chain@scl& (0+255),w,b
 15233  0033F6  19AC               	xorwf	create_chain@ncl& (0+255),w,b
 15234  0033F8  E1D4               	bnz	l10104
 15235  0033FA  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 15236  0033FC  19AD               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 15237  0033FE  B4D8               	btfsc	status,2,c
 15238  003400  D7E2               	goto	u11810
 15239  003402  D7CF               	goto	l10104
 15240  003404                     l10134:
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 15244  003404  C0AC  F088         	movff	create_chain@ncl,put_cluster@clust
 15245  003408  C0AD  F089         	movff	create_chain@ncl+1,put_cluster@clust+1
 15246  00340C  0EFF               	movlw	255
 15247  00340E  6F8B               	movwf	(put_cluster@val+1)& (0+255),b
 15248  003410  698A               	setf	put_cluster@val& (0+255),b
 15249  003412  ECF2  F011         	call	_put_cluster	;wreg free
 15250  003416  0900               	iorlw	0
 15251  003418  B4D8               	btfsc	status,2,c
 15252  00341A  D7AB               	goto	u11780
 15253                           
 15254                           ; BSR set to: 0
 15255                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 15256  00341C  51A0               	movf	create_chain@clust& (0+255),w,b
 15257  00341E  11A1               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15258  003420  B4D8               	btfsc	status,2,c
 15259  003422  D00D               	goto	l10148
 15260                           
 15261                           ; BSR set to: 0
 15262  003424  C0A0  F088         	movff	create_chain@clust,put_cluster@clust
 15263  003428  C0A1  F089         	movff	create_chain@clust+1,put_cluster@clust+1
 15264  00342C  C0AC  F08A         	movff	create_chain@ncl,put_cluster@val
 15265  003430  C0AD  F08B         	movff	create_chain@ncl+1,put_cluster@val+1
 15266  003434  ECF2  F011         	call	_put_cluster	;wreg free
 15267  003438  0900               	iorlw	0
 15268  00343A  B4D8               	btfsc	status,2,c
 15269  00343C  D79A               	goto	u11780
 15270  00343E                     l10148:
 15271                           
 15272                           ; BSR set to: 0
 15273                           ;tff.c: 319: fs->last_clust = ncl;
 15274  00343E  EE20 F018          	lfsr	2,24
 15275  003442  51A6               	movf	create_chain@fs& (0+255),w,b
 15276  003444  26D9               	addwf	fsr2l,f,c
 15277  003446  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 15278  003448  22DA               	addwfc	fsr2h,f,c
 15279  00344A  C0AC  FFDE         	movff	create_chain@ncl,postinc2
 15280  00344E  C0AD  FFDD         	movff	create_chain@ncl+1,postdec2
 15281                           
 15282                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 15283  003452  EE20 F01A          	lfsr	2,26
 15284  003456  51A6               	movf	create_chain@fs& (0+255),w,b
 15285  003458  26D9               	addwf	fsr2l,f,c
 15286  00345A  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 15287  00345C  22DA               	addwfc	fsr2h,f,c
 15288  00345E  28DE               	incf	postinc2,w,c
 15289  003460  E103               	bnz	u11880
 15290  003462  28DE               	incf	postinc2,w,c
 15291  003464  B4D8               	btfsc	status,2,c
 15292  003466  D009               	goto	l10152
 15293  003468                     u11880:
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;tff.c: 321: fs->free_clust--;
 15297  003468  EE20 F01A          	lfsr	2,26
 15298  00346C  51A6               	movf	create_chain@fs& (0+255),w,b
 15299  00346E  26D9               	addwf	fsr2l,f,c
 15300  003470  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 15301  003472  22DA               	addwfc	fsr2h,f,c
 15302  003474  06DE               	decf	postinc2,f,c
 15303  003476  0E00               	movlw	0
 15304  003478  5ADD               	subwfb	postdec2,f,c
 15305  00347A                     l10152:
 15306                           
 15307                           ; BSR set to: 0
 15308                           ;tff.c: 325: };tff.c: 327: return ncl;
 15309  00347A  C0AC  F0A0         	movff	create_chain@ncl,?_create_chain
 15310  00347E  C0AD  F0A1         	movff	create_chain@ncl+1,?_create_chain+1
 15311                           
 15312                           ; BSR set to: 0
 15313  003482  0012               	return		;funcret
 15314  003484                     __end_of_create_chain:
 15315                           	callstack 0
 15316                           
 15317 ;; *************** function _put_cluster *****************
 15318 ;; Defined at:
 15319 ;;		line 198 in file "bibliotecas/tff.c"
 15320 ;; Parameters:    Size  Location     Type
 15321 ;;  clust           2   40[BANK0 ] unsigned short 
 15322 ;;  val             2   42[BANK0 ] unsigned short 
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;  fatsect         4   54[BANK0 ] unsigned long 
 15325 ;;  fs              2   62[BANK0 ] PTR struct _FATFS
 15326 ;;		 -> NULL(0), fs(544), 
 15327 ;;  p               2   60[BANK0 ] PTR unsigned char 
 15328 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15329 ;;  bc              2   58[BANK0 ] unsigned short 
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      enum E105
 15332 ;; Registers used:
 15333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15334 ;; Tracked objects:
 15335 ;;		On entry : 3F/0
 15336 ;;		On exit  : 3F/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15339 ;;      Params:         0       4       0       0       0       0       0       0       0
 15340 ;;      Locals:         0      14       0       0       0       0       0       0       0
 15341 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15342 ;;      Totals:         0      24       0       0       0       0       0       0       0
 15343 ;;Total ram usage:       24 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; Hardware stack levels required when called:    9
 15346 ;; This function calls:
 15347 ;;		___wmul
 15348 ;;		_move_window
 15349 ;; This function is called by:
 15350 ;;		_remove_chain
 15351 ;;		_create_chain
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355                           	psect	text71
 15356  0023E4                     __ptext71:
 15357                           	callstack 0
 15358  0023E4                     _put_cluster:
 15359                           	callstack 13
 15360                           
 15361                           ; BSR set to: 0
 15362                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 15363                           
 15364                           ; BSR set to: 0
 15365                           ;incstack = 0
 15366  0023E4  C038  F09E         	movff	_FatFs,put_cluster@fs
 15367  0023E8  C039  F09F         	movff	_FatFs+1,put_cluster@fs+1
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;tff.c: 209: fatsect = fs->fatbase;
 15371  0023EC  EE20 F008          	lfsr	2,8
 15372  0023F0  519E               	movf	put_cluster@fs& (0+255),w,b
 15373  0023F2  26D9               	addwf	fsr2l,f,c
 15374  0023F4  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15375  0023F6  22DA               	addwfc	fsr2h,f,c
 15376  0023F8  CFDE F096          	movff	postinc2,put_cluster@fatsect
 15377  0023FC  CFDE F097          	movff	postinc2,put_cluster@fatsect+1
 15378  002400  CFDE F098          	movff	postinc2,put_cluster@fatsect+2
 15379  002404  CFDE F099          	movff	postinc2,put_cluster@fatsect+3
 15380                           
 15381                           ;tff.c: 210: switch (fs->fs_type) {
 15382  002408  D108               	goto	l10034
 15383  00240A                     l9982:
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 15387  00240A  C088  F019         	movff	put_cluster@clust,___wmul@multiplier
 15388  00240E  C089  F01A         	movff	put_cluster@clust+1,___wmul@multiplier+1
 15389  002412  0E00               	movlw	0
 15390  002414  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
 15391  002416  0E03               	movlw	3
 15392  002418  6E1B               	movwf	___wmul@multiplicand^0,c
 15393  00241A  ECBE  F029         	call	___wmul	;wreg free
 15394  00241E  90D8               	bcf	status,0,c
 15395  002420  301A               	rrcf	(?___wmul+1)^0,w,c
 15396  002422  0100               	movlb	0	; () banked
 15397  002424  6F8C               	movwf	??_put_cluster& (0+255),b
 15398  002426  3019               	rrcf	?___wmul^0,w,c
 15399  002428  6F9A               	movwf	put_cluster@bc& (0+255),b
 15400  00242A  C08C  F09B         	movff	??_put_cluster,put_cluster@bc+1
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15404  00242E  C09A  F08C         	movff	put_cluster@bc,??_put_cluster
 15405  002432  C09B  F08D         	movff	put_cluster@bc+1,??_put_cluster+1
 15406  002436  0E09               	movlw	9
 15407  002438  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15408  00243A                     u11615:
 15409  00243A  90D8               	bcf	status,0,c
 15410  00243C  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15411  00243E  338C               	rrcf	??_put_cluster& (0+255),f,b
 15412  002440  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15413  002442  D7FB               	goto	u11615
 15414  002444  518C               	movf	??_put_cluster& (0+255),w,b
 15415  002446  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 15416  002448  6F73               	movwf	move_window@sector& (0+255),b
 15417  00244A  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15418  00244C  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15419  00244E  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15420  002450  0E00               	movlw	0
 15421  002452  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15422  002454  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15423  002456  0E00               	movlw	0
 15424  002458  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15425  00245A  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15426  00245C  ECA7  F018         	call	_move_window	;wreg free
 15427  002460  0900               	iorlw	0
 15428  002462  A4D8               	btfss	status,2,c
 15429  002464  D002               	goto	l9990
 15430  002466                     u11620:
 15431                           
 15432                           ; BSR set to: 0
 15433  002466  0E00               	movlw	0
 15434  002468  0012               	return	
 15435  00246A                     l9990:
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;tff.c: 214: p = &fs->win[bc % 512U];
 15439  00246A  0EFF               	movlw	255
 15440  00246C  6F8C               	movwf	??_put_cluster& (0+255),b
 15441  00246E  0E01               	movlw	1
 15442  002470  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15443  002472  C09A  F08E         	movff	put_cluster@bc,??_put_cluster+2
 15444  002476  C09B  F08F         	movff	put_cluster@bc+1,??_put_cluster+3
 15445  00247A  518C               	movf	??_put_cluster& (0+255),w,b
 15446  00247C  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 15447  00247E  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15448  002480  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 15449  002482  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 15450  002486  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 15451  00248A  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 15452  00248C  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 15453  00248E  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 15454  002490  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15455  002492  0E20               	movlw	32
 15456  002494  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 15457  002496  6F9C               	movwf	put_cluster@p& (0+255),b
 15458  002498  0E00               	movlw	0
 15459  00249A  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15460  00249C  6F9D               	movwf	(put_cluster@p+1)& (0+255),b
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 15464  00249E  B188               	btfsc	put_cluster@clust& (0+255),0,b
 15465  0024A0  D004               	goto	l9996
 15466                           
 15467                           ; BSR set to: 0
 15468  0024A2  C08A  F092         	movff	put_cluster@val,_put_cluster$1536
 15469  0024A6  6B93               	clrf	(_put_cluster$1536+1)& (0+255),b
 15470  0024A8  D01A               	goto	l9998
 15471  0024AA                     l9996:
 15472                           
 15473                           ; BSR set to: 0
 15474  0024AA  518A               	movf	put_cluster@val& (0+255),w,b
 15475  0024AC  6F8C               	movwf	??_put_cluster& (0+255),b
 15476  0024AE  6B8D               	clrf	(??_put_cluster+1)& (0+255),b
 15477  0024B0  3B8C               	swapf	??_put_cluster& (0+255),f,b
 15478  0024B2  3B8D               	swapf	(??_put_cluster+1)& (0+255),f,b
 15479  0024B4  0EF0               	movlw	240
 15480  0024B6  178D               	andwf	(??_put_cluster+1)& (0+255),f,b
 15481  0024B8  518C               	movf	??_put_cluster& (0+255),w,b
 15482  0024BA  0B0F               	andlw	15
 15483  0024BC  138D               	iorwf	(??_put_cluster+1)& (0+255),f,b
 15484  0024BE  0EF0               	movlw	240
 15485  0024C0  178C               	andwf	??_put_cluster& (0+255),f,b
 15486  0024C2  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15487  0024C6  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15488  0024CA  50DF               	movf	indf2,w,c
 15489  0024CC  0B0F               	andlw	15
 15490  0024CE  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15491  0024D0  6B8F               	clrf	(??_put_cluster+3)& (0+255),b
 15492  0024D2  518C               	movf	??_put_cluster& (0+255),w,b
 15493  0024D4  118E               	iorwf	(??_put_cluster+2)& (0+255),w,b
 15494  0024D6  6F92               	movwf	_put_cluster$1536& (0+255),b
 15495  0024D8  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15496  0024DA  118F               	iorwf	(??_put_cluster+3)& (0+255),w,b
 15497  0024DC  6F93               	movwf	(_put_cluster$1536+1)& (0+255),b
 15498  0024DE                     l9998:
 15499                           
 15500                           ; BSR set to: 0
 15501  0024DE  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15502  0024E2  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15503  0024E6  C092  FFDF         	movff	_put_cluster$1536,indf2
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;tff.c: 216: bc++;
 15507  0024EA  4B9A               	infsnz	put_cluster@bc& (0+255),f,b
 15508  0024EC  2B9B               	incf	(put_cluster@bc+1)& (0+255),f,b
 15509                           
 15510                           ; BSR set to: 0
 15511                           ;tff.c: 217: fs->winflag = 1;
 15512  0024EE  EE20 F01F          	lfsr	2,31
 15513  0024F2  519E               	movf	put_cluster@fs& (0+255),w,b
 15514  0024F4  26D9               	addwf	fsr2l,f,c
 15515  0024F6  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15516  0024F8  22DA               	addwfc	fsr2h,f,c
 15517  0024FA  0E01               	movlw	1
 15518  0024FC  6EDF               	movwf	indf2,c
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15522  0024FE  C09A  F08C         	movff	put_cluster@bc,??_put_cluster
 15523  002502  C09B  F08D         	movff	put_cluster@bc+1,??_put_cluster+1
 15524  002506  0E09               	movlw	9
 15525  002508  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15526  00250A                     u11645:
 15527  00250A  90D8               	bcf	status,0,c
 15528  00250C  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15529  00250E  338C               	rrcf	??_put_cluster& (0+255),f,b
 15530  002510  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15531  002512  D7FB               	goto	u11645
 15532  002514  518C               	movf	??_put_cluster& (0+255),w,b
 15533  002516  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 15534  002518  6F73               	movwf	move_window@sector& (0+255),b
 15535  00251A  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15536  00251C  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15537  00251E  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15538  002520  0E00               	movlw	0
 15539  002522  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15540  002524  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15541  002526  0E00               	movlw	0
 15542  002528  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15543  00252A  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15544  00252C  ECA7  F018         	call	_move_window	;wreg free
 15545  002530  0900               	iorlw	0
 15546  002532  B4D8               	btfsc	status,2,c
 15547  002534  D798               	goto	u11620
 15548                           
 15549                           ; BSR set to: 0
 15550                           ;tff.c: 219: p = &fs->win[bc % 512U];
 15551  002536  0EFF               	movlw	255
 15552  002538  6F8C               	movwf	??_put_cluster& (0+255),b
 15553  00253A  0E01               	movlw	1
 15554  00253C  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15555  00253E  C09A  F08E         	movff	put_cluster@bc,??_put_cluster+2
 15556  002542  C09B  F08F         	movff	put_cluster@bc+1,??_put_cluster+3
 15557  002546  518C               	movf	??_put_cluster& (0+255),w,b
 15558  002548  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 15559  00254A  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15560  00254C  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 15561  00254E  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 15562  002552  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 15563  002556  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 15564  002558  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 15565  00255A  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 15566  00255C  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15567  00255E  0E20               	movlw	32
 15568  002560  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 15569  002562  6F9C               	movwf	put_cluster@p& (0+255),b
 15570  002564  0E00               	movlw	0
 15571  002566  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15572  002568  6F9D               	movwf	(put_cluster@p+1)& (0+255),b
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 15576  00256A  B188               	btfsc	put_cluster@clust& (0+255),0,b
 15577  00256C  D00E               	goto	l10016
 15578                           
 15579                           ; BSR set to: 0
 15580  00256E  C08B  F08C         	movff	put_cluster@val+1,??_put_cluster
 15581  002572  0E0F               	movlw	15
 15582  002574  178C               	andwf	??_put_cluster& (0+255),f,b
 15583  002576  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15584  00257A  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15585  00257E  50DF               	movf	indf2,w,c
 15586  002580  0BF0               	andlw	240
 15587  002582  118C               	iorwf	??_put_cluster& (0+255),w,b
 15588  002584  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15589  002586  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15590  002588  D00C               	goto	L6
 15591  00258A                     l10016:
 15592                           
 15593                           ; BSR set to: 0
 15594  00258A  C08A  F08C         	movff	put_cluster@val,??_put_cluster
 15595  00258E  C08B  F08D         	movff	put_cluster@val+1,??_put_cluster+1
 15596  002592  0E04               	movlw	4
 15597  002594  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15598  002596                     u11675:
 15599  002596  90D8               	bcf	status,0,c
 15600  002598  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15601  00259A  338C               	rrcf	??_put_cluster& (0+255),f,b
 15602  00259C  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15603  00259E  D7FB               	goto	u11675
 15604  0025A0  518C               	movf	??_put_cluster& (0+255),w,b
 15605  0025A2                     L6:
 15606  0025A2  6F94               	movwf	_put_cluster$1537& (0+255),b
 15607  0025A4  6B95               	clrf	(_put_cluster$1537+1)& (0+255),b
 15608                           
 15609                           ; BSR set to: 0
 15610  0025A6  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15611  0025AA  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15612  0025AE  C094  FFDF         	movff	_put_cluster$1537,indf2
 15613                           
 15614                           ;tff.c: 221: break;
 15615  0025B2  D041               	goto	l10036
 15616  0025B4                     l10020:
 15617                           
 15618                           ; BSR set to: 0
 15619                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 15620  0025B4  5189               	movf	(put_cluster@clust+1)& (0+255),w,b
 15621  0025B6  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 15622  0025B8  6F73               	movwf	move_window@sector& (0+255),b
 15623  0025BA  0E00               	movlw	0
 15624  0025BC  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15625  0025BE  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15626  0025C0  0E00               	movlw	0
 15627  0025C2  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15628  0025C4  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15629  0025C6  0E00               	movlw	0
 15630  0025C8  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15631  0025CA  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15632  0025CC  ECA7  F018         	call	_move_window	;wreg free
 15633  0025D0  0900               	iorlw	0
 15634  0025D2  B4D8               	btfsc	status,2,c
 15635  0025D4  D748               	goto	u11620
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 15639  0025D6  0EFF               	movlw	255
 15640  0025D8  6F8C               	movwf	??_put_cluster& (0+255),b
 15641  0025DA  0E01               	movlw	1
 15642  0025DC  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15643  0025DE  C088  F08E         	movff	put_cluster@clust,??_put_cluster+2
 15644  0025E2  C089  F08F         	movff	put_cluster@clust+1,??_put_cluster+3
 15645  0025E6  90D8               	bcf	status,0,c
 15646  0025E8  378E               	rlcf	(??_put_cluster+2)& (0+255),f,b
 15647  0025EA  378F               	rlcf	(??_put_cluster+3)& (0+255),f,b
 15648  0025EC  518C               	movf	??_put_cluster& (0+255),w,b
 15649  0025EE  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 15650  0025F0  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15651  0025F2  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 15652  0025F4  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 15653  0025F8  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 15654  0025FC  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 15655  0025FE  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 15656  002600  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 15657  002602  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15658  002604  0E20               	movlw	32
 15659  002606  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 15660  002608  6ED9               	movwf	fsr2l,c
 15661  00260A  0E00               	movlw	0
 15662  00260C  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15663  00260E  6EDA               	movwf	fsr2h,c
 15664  002610  C08A  FFDE         	movff	put_cluster@val,postinc2
 15665  002614  C08B  FFDD         	movff	put_cluster@val+1,postdec2
 15666                           
 15667                           ;tff.c: 226: break;
 15668  002618  D00E               	goto	l10036
 15669  00261A                     l10034:
 15670                           
 15671                           ; BSR set to: 0
 15672  00261A  EE20 F01C          	lfsr	2,28
 15673  00261E  519E               	movf	put_cluster@fs& (0+255),w,b
 15674  002620  26D9               	addwf	fsr2l,f,c
 15675  002622  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15676  002624  22DA               	addwfc	fsr2h,f,c
 15677  002626  50DF               	movf	indf2,w,c
 15678                           
 15679                           ; Switch size 1, requested type "simple"
 15680                           ; Number of cases is 2, Range of values is 1 to 2
 15681                           ; switch strategies available:
 15682                           ; Name         Instructions Cycles
 15683                           ; simple_byte            7     4 (average)
 15684                           ;	Chosen strategy is simple_byte
 15685  002628  0A01               	xorlw	1	; case 1
 15686  00262A  B4D8               	btfsc	status,2,c
 15687  00262C  D6EE               	goto	l9982
 15688  00262E  0A03               	xorlw	3	; case 2
 15689  002630  B4D8               	btfsc	status,2,c
 15690  002632  D7C0               	goto	l10020
 15691  002634  D718               	goto	u11620
 15692  002636                     l10036:
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;tff.c: 236: fs->winflag = 1;
 15696  002636  EE20 F01F          	lfsr	2,31
 15697  00263A  519E               	movf	put_cluster@fs& (0+255),w,b
 15698  00263C  26D9               	addwf	fsr2l,f,c
 15699  00263E  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15700  002640  22DA               	addwfc	fsr2h,f,c
 15701  002642  0E01               	movlw	1
 15702  002644  6EDF               	movwf	indf2,c
 15703                           
 15704                           ; BSR set to: 0
 15705                           ;tff.c: 237: return TRUE;
 15706  002646  0E01               	movlw	1
 15707                           
 15708                           ; BSR set to: 0
 15709  002648  0012               	return		;funcret
 15710  00264A                     __end_of_put_cluster:
 15711                           	callstack 0
 15712                           
 15713 ;; *************** function _get_cluster *****************
 15714 ;; Defined at:
 15715 ;;		line 155 in file "bibliotecas/tff.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;  clust           2   48[COMRAM] unsigned short 
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;  fatsect         4   51[BANK0 ] unsigned long 
 15720 ;;  fs              2   57[BANK0 ] PTR struct _FATFS
 15721 ;;		 -> NULL(0), fs(544), 
 15722 ;;  bc              2   55[BANK0 ] unsigned short 
 15723 ;;  wc              2   49[BANK0 ] unsigned short 
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  2   48[COMRAM] unsigned short 
 15726 ;; Registers used:
 15727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15728 ;; Tracked objects:
 15729 ;;		On entry : 3F/0
 15730 ;;		On exit  : 3F/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15733 ;;      Params:         2       0       0       0       0       0       0       0       0
 15734 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15735 ;;      Temps:          0       9       0       0       0       0       0       0       0
 15736 ;;      Totals:         2      19       0       0       0       0       0       0       0
 15737 ;;Total ram usage:       21 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    9
 15740 ;; This function calls:
 15741 ;;		___wmul
 15742 ;;		_move_window
 15743 ;; This function is called by:
 15744 ;;		_remove_chain
 15745 ;;		_create_chain
 15746 ;;		_next_dir_entry
 15747 ;;		_f_lseek
 15748 ;;		_f_read
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text72
 15753  00264A                     __ptext72:
 15754                           	callstack 0
 15755  00264A                     _get_cluster:
 15756                           	callstack 13
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;incstack = 0
 15763  00264A  C038  F099         	movff	_FatFs,get_cluster@fs
 15764  00264E  C039  F09A         	movff	_FatFs+1,get_cluster@fs+1
 15765                           
 15766                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 15767  002652  5032               	movf	(get_cluster@clust+1)^0,w,c
 15768  002654  E104               	bnz	u11520
 15769  002656  0E02               	movlw	2
 15770  002658  5C31               	subwf	get_cluster@clust^0,w,c
 15771  00265A  A0D8               	btfss	status,0,c
 15772  00265C  D102               	goto	l9974
 15773  00265E                     u11520:
 15774                           
 15775                           ; BSR set to: 0
 15776  00265E  EE20 F016          	lfsr	2,22
 15777  002662  5199               	movf	get_cluster@fs& (0+255),w,b
 15778  002664  26D9               	addwf	fsr2l,f,c
 15779  002666  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 15780  002668  22DA               	addwfc	fsr2h,f,c
 15781  00266A  50DE               	movf	postinc2,w,c
 15782  00266C  5C31               	subwf	get_cluster@clust^0,w,c
 15783  00266E  50DE               	movf	postinc2,w,c
 15784  002670  5832               	subwfb	(get_cluster@clust+1)^0,w,c
 15785  002672  B0D8               	btfsc	status,0,c
 15786  002674  D0F6               	goto	l9974
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;tff.c: 165: fatsect = fs->fatbase;
 15790  002676  EE20 F008          	lfsr	2,8
 15791  00267A  5199               	movf	get_cluster@fs& (0+255),w,b
 15792  00267C  26D9               	addwf	fsr2l,f,c
 15793  00267E  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 15794  002680  22DA               	addwfc	fsr2h,f,c
 15795  002682  CFDE F093          	movff	postinc2,get_cluster@fatsect
 15796  002686  CFDE F094          	movff	postinc2,get_cluster@fatsect+1
 15797  00268A  CFDE F095          	movff	postinc2,get_cluster@fatsect+2
 15798  00268E  CFDE F096          	movff	postinc2,get_cluster@fatsect+3
 15799                           
 15800                           ;tff.c: 166: switch (fs->fs_type) {
 15801  002692  D0DA               	goto	l9972
 15802  002694                     l9938:
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 15806  002694  C031  F019         	movff	get_cluster@clust,___wmul@multiplier
 15807  002698  C032  F01A         	movff	get_cluster@clust+1,___wmul@multiplier+1
 15808  00269C  0E00               	movlw	0
 15809  00269E  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
 15810  0026A0  0E03               	movlw	3
 15811  0026A2  6E1B               	movwf	___wmul@multiplicand^0,c
 15812  0026A4  ECBE  F029         	call	___wmul	;wreg free
 15813  0026A8  90D8               	bcf	status,0,c
 15814  0026AA  301A               	rrcf	(?___wmul+1)^0,w,c
 15815  0026AC  0100               	movlb	0	; () banked
 15816  0026AE  6F88               	movwf	??_get_cluster& (0+255),b
 15817  0026B0  3019               	rrcf	?___wmul^0,w,c
 15818  0026B2  6F97               	movwf	get_cluster@bc& (0+255),b
 15819  0026B4  C088  F098         	movff	??_get_cluster,get_cluster@bc+1
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 15823  0026B8  C097  F088         	movff	get_cluster@bc,??_get_cluster
 15824  0026BC  C098  F089         	movff	get_cluster@bc+1,??_get_cluster+1
 15825  0026C0  0E09               	movlw	9
 15826  0026C2  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15827  0026C4                     u11545:
 15828  0026C4  90D8               	bcf	status,0,c
 15829  0026C6  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15830  0026C8  3388               	rrcf	??_get_cluster& (0+255),f,b
 15831  0026CA  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15832  0026CC  D7FB               	goto	u11545
 15833  0026CE  5188               	movf	??_get_cluster& (0+255),w,b
 15834  0026D0  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15835  0026D2  6F73               	movwf	move_window@sector& (0+255),b
 15836  0026D4  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15837  0026D6  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15838  0026D8  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15839  0026DA  0E00               	movlw	0
 15840  0026DC  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15841  0026DE  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15842  0026E0  0E00               	movlw	0
 15843  0026E2  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15844  0026E4  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15845  0026E6  ECA7  F018         	call	_move_window	;wreg free
 15846  0026EA  0900               	iorlw	0
 15847  0026EC  B4D8               	btfsc	status,2,c
 15848  0026EE  D0B9               	goto	l9974
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 15852  0026F0  0EFF               	movlw	255
 15853  0026F2  6F88               	movwf	??_get_cluster& (0+255),b
 15854  0026F4  0E01               	movlw	1
 15855  0026F6  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 15856  0026F8  C097  F08A         	movff	get_cluster@bc,??_get_cluster+2
 15857  0026FC  C098  F08B         	movff	get_cluster@bc+1,??_get_cluster+3
 15858  002700  5188               	movf	??_get_cluster& (0+255),w,b
 15859  002702  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 15860  002704  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15861  002706  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 15862  002708  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 15863  00270C  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 15864  002710  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 15865  002712  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 15866  002714  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 15867  002716  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15868  002718  0E20               	movlw	32
 15869  00271A  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 15870  00271C  6ED9               	movwf	fsr2l,c
 15871  00271E  0E00               	movlw	0
 15872  002720  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15873  002722  6EDA               	movwf	fsr2h,c
 15874  002724  50DF               	movf	indf2,w,c
 15875  002726  6F8E               	movwf	(??_get_cluster+6)& (0+255),b
 15876  002728  518E               	movf	(??_get_cluster+6)& (0+255),w,b
 15877  00272A  6F91               	movwf	get_cluster@wc& (0+255),b
 15878  00272C  6B92               	clrf	(get_cluster@wc+1)& (0+255),b
 15879                           
 15880                           ; BSR set to: 0
 15881  00272E  4B97               	infsnz	get_cluster@bc& (0+255),f,b
 15882  002730  2B98               	incf	(get_cluster@bc+1)& (0+255),f,b
 15883                           
 15884                           ; BSR set to: 0
 15885                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 15886  002732  C097  F088         	movff	get_cluster@bc,??_get_cluster
 15887  002736  C098  F089         	movff	get_cluster@bc+1,??_get_cluster+1
 15888  00273A  0E09               	movlw	9
 15889  00273C  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15890  00273E                     u11565:
 15891  00273E  90D8               	bcf	status,0,c
 15892  002740  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15893  002742  3388               	rrcf	??_get_cluster& (0+255),f,b
 15894  002744  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15895  002746  D7FB               	goto	u11565
 15896  002748  5188               	movf	??_get_cluster& (0+255),w,b
 15897  00274A  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15898  00274C  6F73               	movwf	move_window@sector& (0+255),b
 15899  00274E  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15900  002750  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15901  002752  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15902  002754  0E00               	movlw	0
 15903  002756  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15904  002758  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15905  00275A  0E00               	movlw	0
 15906  00275C  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15907  00275E  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15908  002760  ECA7  F018         	call	_move_window	;wreg free
 15909  002764  0900               	iorlw	0
 15910  002766  B4D8               	btfsc	status,2,c
 15911  002768  D07C               	goto	l9974
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 15915  00276A  0EFF               	movlw	255
 15916  00276C  6F88               	movwf	??_get_cluster& (0+255),b
 15917  00276E  0E01               	movlw	1
 15918  002770  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 15919  002772  C097  F08A         	movff	get_cluster@bc,??_get_cluster+2
 15920  002776  C098  F08B         	movff	get_cluster@bc+1,??_get_cluster+3
 15921  00277A  5188               	movf	??_get_cluster& (0+255),w,b
 15922  00277C  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 15923  00277E  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15924  002780  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 15925  002782  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 15926  002786  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 15927  00278A  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 15928  00278C  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 15929  00278E  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 15930  002790  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15931  002792  0E20               	movlw	32
 15932  002794  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 15933  002796  6ED9               	movwf	fsr2l,c
 15934  002798  0E00               	movlw	0
 15935  00279A  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15936  00279C  6EDA               	movwf	fsr2h,c
 15937  00279E  50DF               	movf	indf2,w,c
 15938  0027A0  6F8E               	movwf	(??_get_cluster+6)& (0+255),b
 15939  0027A2  518E               	movf	(??_get_cluster+6)& (0+255),w,b
 15940  0027A4  6F90               	movwf	(??_get_cluster+8)& (0+255),b
 15941  0027A6  6B8F               	clrf	(??_get_cluster+7)& (0+255),b
 15942  0027A8  518F               	movf	(??_get_cluster+7)& (0+255),w,b
 15943  0027AA  1391               	iorwf	get_cluster@wc& (0+255),f,b
 15944  0027AC  5190               	movf	(??_get_cluster+8)& (0+255),w,b
 15945  0027AE  1392               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 15946                           
 15947                           ; BSR set to: 0
 15948                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 15949  0027B0  B031               	btfsc	get_cluster@clust^0,0,c
 15950  0027B2  D007               	goto	l9958
 15951                           
 15952                           ; BSR set to: 0
 15953  0027B4  0EFF               	movlw	255
 15954  0027B6  1591               	andwf	get_cluster@wc& (0+255),w,b
 15955  0027B8  6E31               	movwf	?_get_cluster^0,c
 15956  0027BA  0E0F               	movlw	15
 15957  0027BC  1592               	andwf	(get_cluster@wc+1)& (0+255),w,b
 15958  0027BE  6E32               	movwf	(?_get_cluster+1)^0,c
 15959  0027C0  0012               	return	
 15960  0027C2                     l9958:
 15961                           
 15962                           ; BSR set to: 0
 15963  0027C2  C091  F088         	movff	get_cluster@wc,??_get_cluster
 15964  0027C6  C092  F089         	movff	get_cluster@wc+1,??_get_cluster+1
 15965  0027CA  0E04               	movlw	4
 15966  0027CC  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15967  0027CE                     u11595:
 15968  0027CE  90D8               	bcf	status,0,c
 15969  0027D0  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15970  0027D2  3388               	rrcf	??_get_cluster& (0+255),f,b
 15971  0027D4  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15972  0027D6  D7FB               	goto	u11595
 15973  0027D8  C088  F031         	movff	??_get_cluster,?_get_cluster
 15974  0027DC  C089  F032         	movff	??_get_cluster+1,?_get_cluster+1
 15975  0027E0  0012               	return	
 15976  0027E2                     l9962:
 15977                           
 15978                           ; BSR set to: 0
 15979                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 15980  0027E2  5032               	movf	(get_cluster@clust+1)^0,w,c
 15981  0027E4  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15982  0027E6  6F73               	movwf	move_window@sector& (0+255),b
 15983  0027E8  0E00               	movlw	0
 15984  0027EA  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15985  0027EC  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15986  0027EE  0E00               	movlw	0
 15987  0027F0  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15988  0027F2  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15989  0027F4  0E00               	movlw	0
 15990  0027F6  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15991  0027F8  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15992  0027FA  ECA7  F018         	call	_move_window	;wreg free
 15993  0027FE  0900               	iorlw	0
 15994  002800  B4D8               	btfsc	status,2,c
 15995  002802  D02F               	goto	l9974
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 15999  002804  0EFF               	movlw	255
 16000  002806  6F88               	movwf	??_get_cluster& (0+255),b
 16001  002808  0E01               	movlw	1
 16002  00280A  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 16003  00280C  C031  F08A         	movff	get_cluster@clust,??_get_cluster+2
 16004  002810  C032  F08B         	movff	get_cluster@clust+1,??_get_cluster+3
 16005  002814  90D8               	bcf	status,0,c
 16006  002816  378A               	rlcf	(??_get_cluster+2)& (0+255),f,b
 16007  002818  378B               	rlcf	(??_get_cluster+3)& (0+255),f,b
 16008  00281A  5188               	movf	??_get_cluster& (0+255),w,b
 16009  00281C  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 16010  00281E  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 16011  002820  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 16012  002822  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 16013  002826  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 16014  00282A  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 16015  00282C  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 16016  00282E  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 16017  002830  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16018  002832  0E20               	movlw	32
 16019  002834  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 16020  002836  6ED9               	movwf	fsr2l,c
 16021  002838  0E00               	movlw	0
 16022  00283A  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16023  00283C  6EDA               	movwf	fsr2h,c
 16024  00283E  CFDE F031          	movff	postinc2,?_get_cluster
 16025  002842  CFDD F032          	movff	postdec2,?_get_cluster+1
 16026  002846  0012               	return	
 16027  002848                     l9972:
 16028                           
 16029                           ; BSR set to: 0
 16030  002848  EE20 F01C          	lfsr	2,28
 16031  00284C  5199               	movf	get_cluster@fs& (0+255),w,b
 16032  00284E  26D9               	addwf	fsr2l,f,c
 16033  002850  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 16034  002852  22DA               	addwfc	fsr2h,f,c
 16035  002854  50DF               	movf	indf2,w,c
 16036                           
 16037                           ; Switch size 1, requested type "simple"
 16038                           ; Number of cases is 2, Range of values is 1 to 2
 16039                           ; switch strategies available:
 16040                           ; Name         Instructions Cycles
 16041                           ; simple_byte            7     4 (average)
 16042                           ;	Chosen strategy is simple_byte
 16043  002856  0A01               	xorlw	1	; case 1
 16044  002858  B4D8               	btfsc	status,2,c
 16045  00285A  D71C               	goto	l9938
 16046  00285C  0A03               	xorlw	3	; case 2
 16047  00285E  B4D8               	btfsc	status,2,c
 16048  002860  D7C0               	goto	l9962
 16049  002862                     l9974:
 16050                           
 16051                           ; BSR set to: 0
 16052                           ;tff.c: 184: };tff.c: 186: return 1;
 16053  002862  0E00               	movlw	0
 16054  002864  6E32               	movwf	(?_get_cluster+1)^0,c
 16055  002866  0E01               	movlw	1
 16056  002868  6E31               	movwf	?_get_cluster^0,c
 16057                           
 16058                           ; BSR set to: 0
 16059  00286A  0012               	return		;funcret
 16060  00286C                     __end_of_get_cluster:
 16061                           	callstack 0
 16062                           
 16063 ;; *************** function ___wmul *****************
 16064 ;; Defined at:
 16065 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  multiplier      2   24[COMRAM] unsigned int 
 16068 ;;  multiplicand    2   26[COMRAM] unsigned int 
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;  product         2   28[COMRAM] unsigned int 
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  2   24[COMRAM] unsigned int 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0, prodl, prodh
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16080 ;;      Params:         4       0       0       0       0       0       0       0       0
 16081 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16083 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16084 ;;Total ram usage:        6 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; Hardware stack levels required when called:    3
 16087 ;; This function calls:
 16088 ;;		Nothing
 16089 ;; This function is called by:
 16090 ;;		_get_cluster
 16091 ;;		_put_cluster
 16092 ;;		_fprintf
 16093 ;;		_atoi
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text73
 16098  00537C                     __ptext73:
 16099                           	callstack 0
 16100  00537C                     ___wmul:
 16101                           	callstack 23
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;incstack = 0
 16105  00537C  5019               	movf	___wmul@multiplier^0,w,c
 16106  00537E  021B               	mulwf	___wmul@multiplicand^0,c
 16107  005380  CFF3 F01D          	movff	prodl,___wmul@product
 16108  005384  CFF4 F01E          	movff	prodh,___wmul@product+1
 16109  005388  5019               	movf	___wmul@multiplier^0,w,c
 16110  00538A  021C               	mulwf	(___wmul@multiplicand+1)^0,c
 16111  00538C  50F3               	movf	243,w,c
 16112  00538E  261E               	addwf	(___wmul@product+1)^0,f,c
 16113  005390  501A               	movf	(___wmul@multiplier+1)^0,w,c
 16114  005392  021B               	mulwf	___wmul@multiplicand^0,c
 16115  005394  50F3               	movf	243,w,c
 16116  005396  261E               	addwf	(___wmul@product+1)^0,f,c
 16117  005398  C01D  F019         	movff	___wmul@product,?___wmul
 16118  00539C  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
 16119  0053A0  0012               	return		;funcret
 16120  0053A2                     __end_of___wmul:
 16121                           	callstack 0
 16122                           
 16123 ;; *************** function ___lldiv *****************
 16124 ;; Defined at:
 16125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;  dividend        4   24[COMRAM] unsigned long 
 16128 ;;  divisor         4   28[COMRAM] unsigned long 
 16129 ;; Auto vars:     Size  Location     Type
 16130 ;;  quotient        4   32[COMRAM] unsigned long 
 16131 ;;  counter         1   36[COMRAM] unsigned char 
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  4   24[COMRAM] unsigned long 
 16134 ;; Registers used:
 16135 ;;		wreg, status,2, status,0
 16136 ;; Tracked objects:
 16137 ;;		On entry : 3D/2
 16138 ;;		On exit  : 3D/0
 16139 ;;		Unchanged: 3D/0
 16140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16141 ;;      Params:         8       0       0       0       0       0       0       0       0
 16142 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16143 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16144 ;;      Totals:        13       0       0       0       0       0       0       0       0
 16145 ;;Total ram usage:       13 bytes
 16146 ;; Hardware stack levels used:    1
 16147 ;; Hardware stack levels required when called:    3
 16148 ;; This function calls:
 16149 ;;		Nothing
 16150 ;; This function is called by:
 16151 ;;		_auto_mount
 16152 ;;		_f_lseek
 16153 ;;		_fprintf
 16154 ;; This function uses a non-reentrant model
 16155 ;;
 16156                           
 16157                           	psect	text74
 16158  0048A8                     __ptext74:
 16159                           	callstack 0
 16160  0048A8                     ___lldiv:
 16161                           	callstack 23
 16162                           
 16163                           ;incstack = 0
 16164  0048A8  0E00               	movlw	0
 16165  0048AA  6E21               	movwf	___lldiv@quotient^0,c
 16166  0048AC  0E00               	movlw	0
 16167  0048AE  6E22               	movwf	(___lldiv@quotient+1)^0,c
 16168  0048B0  0E00               	movlw	0
 16169  0048B2  6E23               	movwf	(___lldiv@quotient+2)^0,c
 16170  0048B4  0E00               	movlw	0
 16171  0048B6  6E24               	movwf	(___lldiv@quotient+3)^0,c
 16172  0048B8  501D               	movf	___lldiv@divisor^0,w,c
 16173  0048BA  101E               	iorwf	(___lldiv@divisor+1)^0,w,c
 16174  0048BC  101F               	iorwf	(___lldiv@divisor+2)^0,w,c
 16175  0048BE  1020               	iorwf	(___lldiv@divisor+3)^0,w,c
 16176  0048C0  B4D8               	btfsc	status,2,c
 16177  0048C2  D02A               	goto	l1632
 16178  0048C4  0E01               	movlw	1
 16179  0048C6  6E25               	movwf	___lldiv@counter^0,c
 16180  0048C8  D006               	goto	l10654
 16181  0048CA                     l10652:
 16182  0048CA  90D8               	bcf	status,0,c
 16183  0048CC  361D               	rlcf	___lldiv@divisor^0,f,c
 16184  0048CE  361E               	rlcf	(___lldiv@divisor+1)^0,f,c
 16185  0048D0  361F               	rlcf	(___lldiv@divisor+2)^0,f,c
 16186  0048D2  3620               	rlcf	(___lldiv@divisor+3)^0,f,c
 16187  0048D4  2A25               	incf	___lldiv@counter^0,f,c
 16188  0048D6                     l10654:
 16189  0048D6  AE20               	btfss	(___lldiv@divisor+3)^0,7,c
 16190  0048D8  D7F8               	goto	l10652
 16191  0048DA                     u12630:
 16192  0048DA  90D8               	bcf	status,0,c
 16193  0048DC  3621               	rlcf	___lldiv@quotient^0,f,c
 16194  0048DE  3622               	rlcf	(___lldiv@quotient+1)^0,f,c
 16195  0048E0  3623               	rlcf	(___lldiv@quotient+2)^0,f,c
 16196  0048E2  3624               	rlcf	(___lldiv@quotient+3)^0,f,c
 16197  0048E4  501D               	movf	___lldiv@divisor^0,w,c
 16198  0048E6  5C19               	subwf	___lldiv@dividend^0,w,c
 16199  0048E8  501E               	movf	(___lldiv@divisor+1)^0,w,c
 16200  0048EA  581A               	subwfb	(___lldiv@dividend+1)^0,w,c
 16201  0048EC  501F               	movf	(___lldiv@divisor+2)^0,w,c
 16202  0048EE  581B               	subwfb	(___lldiv@dividend+2)^0,w,c
 16203  0048F0  5020               	movf	(___lldiv@divisor+3)^0,w,c
 16204  0048F2  581C               	subwfb	(___lldiv@dividend+3)^0,w,c
 16205  0048F4  A0D8               	btfss	status,0,c
 16206  0048F6  D009               	goto	l10664
 16207  0048F8  501D               	movf	___lldiv@divisor^0,w,c
 16208  0048FA  5E19               	subwf	___lldiv@dividend^0,f,c
 16209  0048FC  501E               	movf	(___lldiv@divisor+1)^0,w,c
 16210  0048FE  5A1A               	subwfb	(___lldiv@dividend+1)^0,f,c
 16211  004900  501F               	movf	(___lldiv@divisor+2)^0,w,c
 16212  004902  5A1B               	subwfb	(___lldiv@dividend+2)^0,f,c
 16213  004904  5020               	movf	(___lldiv@divisor+3)^0,w,c
 16214  004906  5A1C               	subwfb	(___lldiv@dividend+3)^0,f,c
 16215  004908  8021               	bsf	___lldiv@quotient^0,0,c
 16216  00490A                     l10664:
 16217  00490A  90D8               	bcf	status,0,c
 16218  00490C  3220               	rrcf	(___lldiv@divisor+3)^0,f,c
 16219  00490E  321F               	rrcf	(___lldiv@divisor+2)^0,f,c
 16220  004910  321E               	rrcf	(___lldiv@divisor+1)^0,f,c
 16221  004912  321D               	rrcf	___lldiv@divisor^0,f,c
 16222  004914  2E25               	decfsz	___lldiv@counter^0,f,c
 16223  004916  D7E1               	goto	u12630
 16224  004918                     l1632:
 16225  004918  C021  F019         	movff	___lldiv@quotient,?___lldiv
 16226  00491C  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
 16227  004920  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
 16228  004924  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
 16229  004928  0012               	return		;funcret
 16230  00492A                     __end_of___lldiv:
 16231                           	callstack 0
 16232                           
 16233 ;; *************** function _f_close *****************
 16234 ;; Defined at:
 16235 ;;		line 1116 in file "bibliotecas/tff.c"
 16236 ;; Parameters:    Size  Location     Type
 16237 ;;  fp              2   49[BANK0 ] PTR struct _FIL
 16238 ;;		 -> fil(28), 
 16239 ;; Auto vars:     Size  Location     Type
 16240 ;;  res             1   51[BANK0 ] enum E155
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  1    wreg      enum E3239
 16243 ;; Registers used:
 16244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16245 ;; Tracked objects:
 16246 ;;		On entry : 3F/0
 16247 ;;		On exit  : 3F/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16250 ;;      Params:         0       2       0       0       0       0       0       0       0
 16251 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16253 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16254 ;;Total ram usage:        3 bytes
 16255 ;; Hardware stack levels used:    1
 16256 ;; Hardware stack levels required when called:   11
 16257 ;; This function calls:
 16258 ;;		_f_sync
 16259 ;; This function is called by:
 16260 ;;		_escrita_sdcard
 16261 ;; This function uses a non-reentrant model
 16262 ;;
 16263                           
 16264                           	psect	text75
 16265  00532C                     __ptext75:
 16266                           	callstack 0
 16267  00532C                     _f_close:
 16268                           	callstack 16
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 16272                           
 16273                           ;incstack = 0
 16274  00532C  C091  F088         	movff	f_close@fp,f_sync@fp
 16275  005330  C092  F089         	movff	f_close@fp+1,f_sync@fp+1
 16276  005334  EC76  F01D         	call	_f_sync	;wreg free
 16277  005338  6F93               	movwf	f_close@res& (0+255),b
 16278                           
 16279                           ; BSR set to: 0
 16280                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 16281  00533A  5193               	movf	f_close@res& (0+255),w,b
 16282  00533C  A4D8               	btfss	status,2,c
 16283  00533E  0012               	return	
 16284                           
 16285                           ; BSR set to: 0
 16286  005340  EE20 F004          	lfsr	2,4
 16287  005344  5191               	movf	f_close@fp& (0+255),w,b
 16288  005346  26D9               	addwf	fsr2l,f,c
 16289  005348  5192               	movf	(f_close@fp+1)& (0+255),w,b
 16290  00534A  22DA               	addwfc	fsr2h,f,c
 16291  00534C  0E00               	movlw	0
 16292  00534E  6EDE               	movwf	postinc2,c
 16293  005350  0E00               	movlw	0
 16294  005352  6EDD               	movwf	postdec2,c
 16295                           
 16296                           ; BSR set to: 0
 16297  005354  0012               	return		;funcret
 16298  005356                     __end_of_f_close:
 16299                           	callstack 0
 16300                           
 16301 ;; *************** function _f_sync *****************
 16302 ;; Defined at:
 16303 ;;		line 1077 in file "bibliotecas/tff.c"
 16304 ;; Parameters:    Size  Location     Type
 16305 ;;  fp              2   40[BANK0 ] PTR struct _FIL
 16306 ;;		 -> fil(28), 
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;  tim             4   42[BANK0 ] unsigned long 
 16309 ;;  dir             2   47[BANK0 ] PTR unsigned char 
 16310 ;;		 -> NULL(0), fs(544), 
 16311 ;;  res             1   46[BANK0 ] enum E155
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      enum E155
 16314 ;; Registers used:
 16315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16316 ;; Tracked objects:
 16317 ;;		On entry : 3F/0
 16318 ;;		On exit  : 3F/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16321 ;;      Params:         0       2       0       0       0       0       0       0       0
 16322 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16323 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16324 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16325 ;;Total ram usage:        9 bytes
 16326 ;; Hardware stack levels used:    1
 16327 ;; Hardware stack levels required when called:   10
 16328 ;; This function calls:
 16329 ;;		_get_fattime
 16330 ;;		_move_window
 16331 ;;		_sync
 16332 ;;		_validate
 16333 ;; This function is called by:
 16334 ;;		_f_close
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text76
 16339  003AEC                     __ptext76:
 16340                           	callstack 0
 16341  003AEC                     _f_sync:
 16342                           	callstack 16
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;incstack = 0
 16349  003AEC  EE20 F004          	lfsr	2,4
 16350  003AF0  5188               	movf	f_sync@fp& (0+255),w,b
 16351  003AF2  26D9               	addwf	fsr2l,f,c
 16352  003AF4  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16353  003AF6  22DA               	addwfc	fsr2h,f,c
 16354  003AF8  CFDE F01F          	movff	postinc2,validate@fs
 16355  003AFC  CFDD F020          	movff	postdec2,validate@fs+1
 16356  003B00  C088  FFD9         	movff	f_sync@fp,fsr2l
 16357  003B04  C089  FFDA         	movff	f_sync@fp+1,fsr2h
 16358  003B08  CFDE F021          	movff	postinc2,validate@id
 16359  003B0C  CFDD F022          	movff	postdec2,validate@id+1
 16360  003B10  ECB4  F027         	call	_validate	;wreg free
 16361  003B14  0100               	movlb	0	; () banked
 16362  003B16  6F8E               	movwf	f_sync@res& (0+255),b
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;tff.c: 1087: if (res == FR_OK) {
 16366  003B18  518E               	movf	f_sync@res& (0+255),w,b
 16367  003B1A  A4D8               	btfss	status,2,c
 16368  003B1C  D077               	goto	l11086
 16369                           
 16370                           ; BSR set to: 0
 16371                           ;tff.c: 1088: if (fp->flag & 0x20) {
 16372  003B1E  EE20 F002          	lfsr	2,2
 16373  003B22  5188               	movf	f_sync@fp& (0+255),w,b
 16374  003B24  26D9               	addwf	fsr2l,f,c
 16375  003B26  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16376  003B28  22DA               	addwfc	fsr2h,f,c
 16377  003B2A  AADF               	btfss	indf2,5,c
 16378  003B2C  D06F               	goto	l11086
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 16382  003B2E  EE20 F016          	lfsr	2,22
 16383  003B32  5188               	movf	f_sync@fp& (0+255),w,b
 16384  003B34  26D9               	addwf	fsr2l,f,c
 16385  003B36  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16386  003B38  22DA               	addwfc	fsr2h,f,c
 16387  003B3A  CFDE F073          	movff	postinc2,move_window@sector
 16388  003B3E  CFDE F074          	movff	postinc2,move_window@sector+1
 16389  003B42  CFDE F075          	movff	postinc2,move_window@sector+2
 16390  003B46  CFDE F076          	movff	postinc2,move_window@sector+3
 16391  003B4A  ECA7  F018         	call	_move_window	;wreg free
 16392  003B4E  0900               	iorlw	0
 16393  003B50  A4D8               	btfss	status,2,c
 16394  003B52  D002               	goto	l11072
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;tff.c: 1091: return FR_RW_ERROR;
 16398  003B54  0E08               	movlw	8
 16399  003B56  0012               	return	
 16400  003B58                     l11072:
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;tff.c: 1092: dir = fp->dir_ptr;
 16404  003B58  EE20 F01A          	lfsr	2,26
 16405  003B5C  5188               	movf	f_sync@fp& (0+255),w,b
 16406  003B5E  26D9               	addwf	fsr2l,f,c
 16407  003B60  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16408  003B62  22DA               	addwfc	fsr2h,f,c
 16409  003B64  CFDE F08F          	movff	postinc2,f_sync@dir
 16410  003B68  CFDD F090          	movff	postdec2,f_sync@dir+1
 16411                           
 16412                           ;tff.c: 1093: dir[11] |= 0x20;
 16413  003B6C  EE20 F00B          	lfsr	2,11
 16414  003B70  518F               	movf	f_sync@dir& (0+255),w,b
 16415  003B72  26D9               	addwf	fsr2l,f,c
 16416  003B74  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 16417  003B76  22DA               	addwfc	fsr2h,f,c
 16418  003B78  0E00               	movlw	0
 16419  003B7A  8ADB               	bsf	plusw2,5,c
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 16423  003B7C  EE20 F00A          	lfsr	2,10
 16424  003B80  5188               	movf	f_sync@fp& (0+255),w,b
 16425  003B82  26D9               	addwf	fsr2l,f,c
 16426  003B84  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16427  003B86  22DA               	addwfc	fsr2h,f,c
 16428  003B88  EE10 F01C          	lfsr	1,28
 16429  003B8C  518F               	movf	f_sync@dir& (0+255),w,b
 16430  003B8E  26E1               	addwf	fsr1l,f,c
 16431  003B90  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 16432  003B92  22E2               	addwfc	fsr1h,f,c
 16433  003B94  CFDE FFE6          	movff	postinc2,postinc1
 16434  003B98  CFDE FFE6          	movff	postinc2,postinc1
 16435  003B9C  CFDE FFE6          	movff	postinc2,postinc1
 16436  003BA0  CFDE FFE6          	movff	postinc2,postinc1
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 16440  003BA4  EE20 F00E          	lfsr	2,14
 16441  003BA8  5188               	movf	f_sync@fp& (0+255),w,b
 16442  003BAA  26D9               	addwf	fsr2l,f,c
 16443  003BAC  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16444  003BAE  22DA               	addwfc	fsr2h,f,c
 16445  003BB0  EE10 F01A          	lfsr	1,26
 16446  003BB4  518F               	movf	f_sync@dir& (0+255),w,b
 16447  003BB6  26E1               	addwf	fsr1l,f,c
 16448  003BB8  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 16449  003BBA  22E2               	addwfc	fsr1h,f,c
 16450  003BBC  CFDE FFE6          	movff	postinc2,postinc1
 16451  003BC0  CFDD FFE5          	movff	postdec2,postdec1
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;tff.c: 1099: tim = get_fattime();
 16455  003BC4  ECA1  F01B         	call	_get_fattime	;wreg free
 16456  003BC8  C01D  F08A         	movff	?_get_fattime,f_sync@tim
 16457  003BCC  C01E  F08B         	movff	?_get_fattime+1,f_sync@tim+1
 16458  003BD0  C01F  F08C         	movff	?_get_fattime+2,f_sync@tim+2
 16459  003BD4  C020  F08D         	movff	?_get_fattime+3,f_sync@tim+3
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 16463  003BD8  EE20 F016          	lfsr	2,22
 16464  003BDC  518F               	movf	f_sync@dir& (0+255),w,b
 16465  003BDE  26D9               	addwf	fsr2l,f,c
 16466  003BE0  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 16467  003BE2  22DA               	addwfc	fsr2h,f,c
 16468  003BE4  C08A  FFDE         	movff	f_sync@tim,postinc2
 16469  003BE8  C08B  FFDE         	movff	f_sync@tim+1,postinc2
 16470  003BEC  C08C  FFDE         	movff	f_sync@tim+2,postinc2
 16471  003BF0  C08D  FFDE         	movff	f_sync@tim+3,postinc2
 16472                           
 16473                           ; BSR set to: 0
 16474                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 16475  003BF4  EE20 F002          	lfsr	2,2
 16476  003BF8  5188               	movf	f_sync@fp& (0+255),w,b
 16477  003BFA  26D9               	addwf	fsr2l,f,c
 16478  003BFC  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16479  003BFE  22DA               	addwfc	fsr2h,f,c
 16480  003C00  0EDF               	movlw	223
 16481  003C02  16DF               	andwf	indf2,f,c
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;tff.c: 1102: res = sync();
 16485  003C04  EC1B  F027         	call	_sync	;wreg free
 16486  003C08  0100               	movlb	0	; () banked
 16487  003C0A  6F8E               	movwf	f_sync@res& (0+255),b
 16488  003C0C                     l11086:
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 16492  003C0C  518E               	movf	f_sync@res& (0+255),w,b
 16493                           
 16494                           ; BSR set to: 0
 16495  003C0E  0012               	return		;funcret
 16496  003C10                     __end_of_f_sync:
 16497                           	callstack 0
 16498                           
 16499 ;; *************** function _validate *****************
 16500 ;; Defined at:
 16501 ;;		line 767 in file "bibliotecas/tff.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;  fs              2   30[COMRAM] PTR const struct _FATFS
 16504 ;;		 -> NULL(0), fs(544), 
 16505 ;;  id              2   32[COMRAM] unsigned short 
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;		None
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      enum E155
 16510 ;; Registers used:
 16511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16512 ;; Tracked objects:
 16513 ;;		On entry : 3F/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16517 ;;      Params:         4       0       0       0       0       0       0       0       0
 16518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16519 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16520 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16521 ;;Total ram usage:        6 bytes
 16522 ;; Hardware stack levels used:    1
 16523 ;; Hardware stack levels required when called:    5
 16524 ;; This function calls:
 16525 ;;		_disk_status
 16526 ;; This function is called by:
 16527 ;;		_f_write
 16528 ;;		_f_sync
 16529 ;;		_f_lseek
 16530 ;;		_f_read
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text77
 16535  004F68                     __ptext77:
 16536                           	callstack 0
 16537  004F68                     _validate:
 16538                           	callstack 18
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;incstack = 0
 16545  004F68  501F               	movf	validate@fs^0,w,c
 16546  004F6A  1020               	iorwf	(validate@fs+1)^0,w,c
 16547  004F6C  B4D8               	btfsc	status,2,c
 16548  004F6E  D014               	goto	u11920
 16549                           
 16550                           ; BSR set to: 0
 16551  004F70  EE20 F01C          	lfsr	2,28
 16552  004F74  501F               	movf	validate@fs^0,w,c
 16553  004F76  26D9               	addwf	fsr2l,f,c
 16554  004F78  5020               	movf	(validate@fs+1)^0,w,c
 16555  004F7A  22DA               	addwfc	fsr2h,f,c
 16556  004F7C  50DF               	movf	indf2,w,c
 16557  004F7E  B4D8               	btfsc	status,2,c
 16558  004F80  D00B               	goto	u11920
 16559                           
 16560                           ; BSR set to: 0
 16561  004F82  C01F  FFD9         	movff	validate@fs,fsr2l
 16562  004F86  C020  FFDA         	movff	validate@fs+1,fsr2h
 16563  004F8A  5021               	movf	validate@id^0,w,c
 16564  004F8C  18DE               	xorwf	postinc2,w,c
 16565  004F8E  E104               	bnz	u11920
 16566  004F90  5022               	movf	(validate@id+1)^0,w,c
 16567  004F92  18DE               	xorwf	postinc2,w,c
 16568  004F94  B4D8               	btfsc	status,2,c
 16569  004F96  D002               	goto	l10178
 16570  004F98                     u11920:
 16571                           
 16572                           ; BSR set to: 0
 16573                           ;tff.c: 773: return FR_INVALID_OBJECT;
 16574  004F98  0E0C               	movlw	12
 16575  004F9A  0012               	return	
 16576  004F9C                     l10178:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;tff.c: 774: if (disk_status(0) & 0x01)
 16580  004F9C  0E00               	movlw	0
 16581  004F9E  EC52  F029         	call	_disk_status
 16582  004FA2  6E23               	movwf	??_validate^0,c
 16583  004FA4  A023               	btfss	??_validate^0,0,c
 16584  004FA6  D002               	goto	l10184
 16585                           
 16586                           ;tff.c: 775: return FR_NOT_READY;
 16587  004FA8  0E01               	movlw	1
 16588  004FAA  0012               	return	
 16589  004FAC                     l10184:
 16590                           
 16591                           ;tff.c: 777: return FR_OK;
 16592  004FAC  0E00               	movlw	0
 16593  004FAE  0012               	return		;funcret
 16594  004FB0                     __end_of_validate:
 16595                           	callstack 0
 16596                           
 16597 ;; *************** function _disk_status *****************
 16598 ;; Defined at:
 16599 ;;		line 27 in file "bibliotecas/diskio.c"
 16600 ;; Parameters:    Size  Location     Type
 16601 ;;  pdrv            1    wreg     unsigned char 
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;  pdrv            1   28[COMRAM] unsigned char 
 16604 ;;  result          2    0        int 
 16605 ;;  stat            1   29[COMRAM] unsigned char 
 16606 ;; Return value:  Size  Location     Type
 16607 ;;                  1    wreg      unsigned char 
 16608 ;; Registers used:
 16609 ;;		wreg, status,2, status,0, cstack
 16610 ;; Tracked objects:
 16611 ;;		On entry : 3F/0
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16615 ;;      Params:         0       0       0       0       0       0       0       0       0
 16616 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16618 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16619 ;;Total ram usage:        4 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:    4
 16622 ;; This function calls:
 16623 ;;		_sdc_disk_status
 16624 ;; This function is called by:
 16625 ;;		_auto_mount
 16626 ;;		_validate
 16627 ;; This function uses a non-reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text78
 16631  0052A4                     __ptext78:
 16632                           	callstack 0
 16633  0052A4                     _disk_status:
 16634                           	callstack 18
 16635                           
 16636                           ;incstack = 0
 16637                           ;disk_status@pdrv stored from wreg
 16638  0052A4  6E1D               	movwf	disk_status@pdrv^0,c
 16639                           
 16640                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 16641  0052A6  D00A               	goto	l9888
 16642  0052A8                     l9870:
 16643                           
 16644                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 16645  0052A8  501D               	movf	disk_status@pdrv^0,w,c
 16646  0052AA  ECFF  F02A         	call	_sdc_disk_status
 16647  0052AE  6E1E               	movwf	disk_status@stat^0,c
 16648  0052B0                     l9872:
 16649                           
 16650                           ;diskio.c: 39: return stat;
 16651  0052B0  501E               	movf	disk_status@stat^0,w,c
 16652  0052B2  0012               	return	
 16653  0052B4                     l9876:
 16654  0052B4  501D               	movf	disk_status@pdrv^0,w,c
 16655  0052B6  ECFF  F02A         	call	_sdc_disk_status
 16656  0052BA  D7FA               	goto	l9872
 16657  0052BC                     l9888:
 16658  0052BC  501D               	movf	disk_status@pdrv^0,w,c
 16659                           
 16660                           ; Switch size 1, requested type "simple"
 16661                           ; Number of cases is 3, Range of values is 0 to 2
 16662                           ; switch strategies available:
 16663                           ; Name         Instructions Cycles
 16664                           ; simple_byte           10     6 (average)
 16665                           ;	Chosen strategy is simple_byte
 16666  0052BE  0A00               	xorlw	0	; case 0
 16667  0052C0  B4D8               	btfsc	status,2,c
 16668  0052C2  D7F2               	goto	l9870
 16669  0052C4  0A01               	xorlw	1	; case 1
 16670  0052C6  B4D8               	btfsc	status,2,c
 16671  0052C8  D7F5               	goto	l9876
 16672  0052CA  0A03               	xorlw	3	; case 2
 16673  0052CC  B4D8               	btfsc	status,2,c
 16674  0052CE  D7F0               	goto	l9872
 16675                           
 16676                           ;diskio.c: 50: return 0x01;
 16677  0052D0  0E01               	movlw	1
 16678  0052D2  0012               	return		;funcret
 16679  0052D4                     __end_of_disk_status:
 16680                           	callstack 0
 16681                           
 16682 ;; *************** function _sdc_disk_status *****************
 16683 ;; Defined at:
 16684 ;;		line 588 in file "bibliotecas/diskio.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  pdrv            1    wreg     unsigned char 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  pdrv            1   25[COMRAM] unsigned char 
 16689 ;;  stat            1    0        unsigned char 
 16690 ;;  cont            1    0        unsigned char 
 16691 ;;  buff            1    0        unsigned char 
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      unsigned char 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0
 16702 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16704 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16705 ;;Total ram usage:        2 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:    3
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		_disk_status
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text79
 16716  0055FE                     __ptext79:
 16717                           	callstack 0
 16718  0055FE                     _sdc_disk_status:
 16719                           	callstack 18
 16720                           
 16721                           ;incstack = 0
 16722                           ;sdc_disk_status@pdrv stored from wreg
 16723  0055FE  6E1A               	movwf	sdc_disk_status@pdrv^0,c
 16724                           
 16725                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 16726  005600  501A               	movf	sdc_disk_status@pdrv^0,w,c
 16727  005602  B4D8               	btfsc	status,2,c
 16728  005604  D002               	goto	l9746
 16729  005606  0E01               	movlw	1
 16730  005608  0012               	return	
 16731  00560A                     l9746:
 16732                           
 16733                           ;diskio.c: 595: return FR_OK;
 16734  00560A  0E00               	movlw	0
 16735  00560C  0012               	return		;funcret
 16736  00560E                     __end_of_sdc_disk_status:
 16737                           	callstack 0
 16738                           
 16739 ;; *************** function _sync *****************
 16740 ;; Defined at:
 16741 ;;		line 119 in file "bibliotecas/tff.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;		None
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;  fs              2   48[COMRAM] PTR struct _FATFS
 16746 ;;		 -> NULL(0), fs(544), 
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  1    wreg      enum E155
 16749 ;; Registers used:
 16750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16751 ;; Tracked objects:
 16752 ;;		On entry : 3F/0
 16753 ;;		On exit  : 0/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16756 ;;      Params:         0       0       0       0       0       0       0       0       0
 16757 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16759 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16760 ;;Total ram usage:        2 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:    9
 16763 ;; This function calls:
 16764 ;;		_disk_ioctl
 16765 ;;		_move_window
 16766 ;; This function is called by:
 16767 ;;		_f_sync
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           
 16771                           	psect	text80
 16772  004E36                     __ptext80:
 16773                           	callstack 0
 16774  004E36                     _sync:
 16775                           	callstack 16
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;tff.c: 121: FATFS *fs = FatFs;
 16779                           
 16780                           ;incstack = 0
 16781  004E36  C038  F031         	movff	_FatFs,sync@fs
 16782  004E3A  C039  F032         	movff	_FatFs+1,sync@fs+1
 16783                           
 16784                           ; BSR set to: 0
 16785                           ;tff.c: 124: fs->winflag = 1;
 16786  004E3E  EE20 F01F          	lfsr	2,31
 16787  004E42  5031               	movf	sync@fs^0,w,c
 16788  004E44  26D9               	addwf	fsr2l,f,c
 16789  004E46  5032               	movf	(sync@fs+1)^0,w,c
 16790  004E48  22DA               	addwfc	fsr2h,f,c
 16791  004E4A  0E01               	movlw	1
 16792  004E4C  6EDF               	movwf	indf2,c
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 16796  004E4E  0E00               	movlw	0
 16797  004E50  6F73               	movwf	move_window@sector& (0+255),b
 16798  004E52  0E00               	movlw	0
 16799  004E54  6F74               	movwf	(move_window@sector+1)& (0+255),b
 16800  004E56  0E00               	movlw	0
 16801  004E58  6F75               	movwf	(move_window@sector+2)& (0+255),b
 16802  004E5A  0E00               	movlw	0
 16803  004E5C  6F76               	movwf	(move_window@sector+3)& (0+255),b
 16804  004E5E  ECA7  F018         	call	_move_window	;wreg free
 16805  004E62  0900               	iorlw	0
 16806  004E64  A4D8               	btfss	status,2,c
 16807  004E66  D002               	goto	l10562
 16808  004E68                     u12440:
 16809  004E68  0E08               	movlw	8
 16810  004E6A  0012               	return	
 16811  004E6C                     l10562:
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 16815  004E6C  0E00               	movlw	0
 16816  004E6E  6E19               	movwf	disk_ioctl@cmd^0,c
 16817  004E70  0E00               	movlw	0
 16818  004E72  6E1A               	movwf	disk_ioctl@buff^0,c
 16819  004E74  0E00               	movlw	0
 16820  004E76  6E1B               	movwf	(disk_ioctl@buff+1)^0,c
 16821  004E78  0E00               	movlw	0
 16822  004E7A  EC7B  F02A         	call	_disk_ioctl
 16823  004E7E  0900               	iorlw	0
 16824  004E80  A4D8               	btfss	status,2,c
 16825  004E82  D7F2               	goto	u12440
 16826                           
 16827                           ;tff.c: 143: return FR_OK;
 16828  004E84  0E00               	movlw	0
 16829  004E86  0012               	return		;funcret
 16830  004E88                     __end_of_sync:
 16831                           	callstack 0
 16832                           
 16833 ;; *************** function _move_window *****************
 16834 ;; Defined at:
 16835 ;;		line 77 in file "bibliotecas/tff.c"
 16836 ;; Parameters:    Size  Location     Type
 16837 ;;  sector          4   19[BANK0 ] unsigned long 
 16838 ;; Auto vars:     Size  Location     Type
 16839 ;;  n               1   33[BANK0 ] unsigned char 
 16840 ;;  wsect           4   34[BANK0 ] unsigned long 
 16841 ;;  fs              2   38[BANK0 ] PTR struct _FATFS
 16842 ;;		 -> NULL(0), fs(544), 
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      enum E105
 16845 ;; Registers used:
 16846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 3F/0
 16849 ;;		On exit  : 3F/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16852 ;;      Params:         0       4       0       0       0       0       0       0       0
 16853 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16854 ;;      Temps:          0      10       0       0       0       0       0       0       0
 16855 ;;      Totals:         0      21       0       0       0       0       0       0       0
 16856 ;;Total ram usage:       21 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:    8
 16859 ;; This function calls:
 16860 ;;		_disk_read
 16861 ;;		_disk_write
 16862 ;; This function is called by:
 16863 ;;		_sync
 16864 ;;		_get_cluster
 16865 ;;		_put_cluster
 16866 ;;		_trace_path
 16867 ;;		_reserve_direntry
 16868 ;;		_f_open
 16869 ;;		_f_write
 16870 ;;		_f_sync
 16871 ;;		_f_read
 16872 ;; This function uses a non-reentrant model
 16873 ;;
 16874                           
 16875                           	psect	text81
 16876  00314E                     __ptext81:
 16877                           	callstack 0
 16878  00314E                     _move_window:
 16879                           	callstack 15
 16880                           
 16881                           ; BSR set to: 0
 16882                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 16883                           
 16884                           ;incstack = 0
 16885  00314E  C038  F086         	movff	_FatFs,move_window@fs
 16886  003152  C039  F087         	movff	_FatFs+1,move_window@fs+1
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;tff.c: 85: wsect = fs->winsect;
 16890  003156  EE20 F004          	lfsr	2,4
 16891  00315A  5186               	movf	move_window@fs& (0+255),w,b
 16892  00315C  26D9               	addwf	fsr2l,f,c
 16893  00315E  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16894  003160  22DA               	addwfc	fsr2h,f,c
 16895  003162  CFDE F082          	movff	postinc2,move_window@wsect
 16896  003166  CFDE F083          	movff	postinc2,move_window@wsect+1
 16897  00316A  CFDE F084          	movff	postinc2,move_window@wsect+2
 16898  00316E  CFDE F085          	movff	postinc2,move_window@wsect+3
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;tff.c: 86: if (wsect != sector) {
 16902  003172  5173               	movf	move_window@sector& (0+255),w,b
 16903  003174  1982               	xorwf	move_window@wsect& (0+255),w,b
 16904  003176  E10A               	bnz	u11410
 16905  003178  5174               	movf	(move_window@sector+1)& (0+255),w,b
 16906  00317A  1983               	xorwf	(move_window@wsect+1)& (0+255),w,b
 16907  00317C  E107               	bnz	u11410
 16908  00317E  5175               	movf	(move_window@sector+2)& (0+255),w,b
 16909  003180  1984               	xorwf	(move_window@wsect+2)& (0+255),w,b
 16910  003182  E104               	bnz	u11410
 16911  003184  5176               	movf	(move_window@sector+3)& (0+255),w,b
 16912  003186  1985               	xorwf	(move_window@wsect+3)& (0+255),w,b
 16913  003188  B4D8               	btfsc	status,2,c
 16914  00318A  D0B4               	goto	l9858
 16915  00318C                     u11410:
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 16919  00318C  EE20 F01F          	lfsr	2,31
 16920  003190  5186               	movf	move_window@fs& (0+255),w,b
 16921  003192  26D9               	addwf	fsr2l,f,c
 16922  003194  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16923  003196  22DA               	addwfc	fsr2h,f,c
 16924  003198  50DF               	movf	indf2,w,c
 16925  00319A  B4D8               	btfsc	status,2,c
 16926  00319C  D081               	goto	l9848
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 16930  00319E  0E20               	movlw	32
 16931  0031A0  2586               	addwf	move_window@fs& (0+255),w,b
 16932  0031A2  6F68               	movwf	disk_write@buff& (0+255),b
 16933  0031A4  0E00               	movlw	0
 16934  0031A6  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 16935  0031A8  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 16936  0031AA  C082  F06A         	movff	move_window@wsect,disk_write@sector
 16937  0031AE  C083  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 16938  0031B2  C084  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 16939  0031B6  C085  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 16940  0031BA  0E01               	movlw	1
 16941  0031BC  6F6E               	movwf	disk_write@count& (0+255),b
 16942  0031BE  0E00               	movlw	0
 16943  0031C0  EC44  F027         	call	_disk_write
 16944  0031C4  0900               	iorlw	0
 16945  0031C6  B4D8               	btfsc	status,2,c
 16946  0031C8  D002               	goto	l9832
 16947  0031CA                     u11430:
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;tff.c: 91: return FALSE;
 16951  0031CA  0E00               	movlw	0
 16952  0031CC  0012               	return	
 16953  0031CE                     l9832:
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;tff.c: 92: fs->winflag = 0;
 16957  0031CE  EE20 F01F          	lfsr	2,31
 16958  0031D2  5186               	movf	move_window@fs& (0+255),w,b
 16959  0031D4  26D9               	addwf	fsr2l,f,c
 16960  0031D6  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16961  0031D8  22DA               	addwfc	fsr2h,f,c
 16962  0031DA  0E00               	movlw	0
 16963  0031DC  6EDF               	movwf	indf2,c
 16964                           
 16965                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 16966  0031DE  EE20 F008          	lfsr	2,8
 16967  0031E2  5186               	movf	move_window@fs& (0+255),w,b
 16968  0031E4  26D9               	addwf	fsr2l,f,c
 16969  0031E6  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16970  0031E8  22DA               	addwfc	fsr2h,f,c
 16971  0031EA  CFDE F077          	movff	postinc2,??_move_window
 16972  0031EE  CFDE F078          	movff	postinc2,??_move_window+1
 16973  0031F2  CFDE F079          	movff	postinc2,??_move_window+2
 16974  0031F6  CFDE F07A          	movff	postinc2,??_move_window+3
 16975  0031FA  EE20 F014          	lfsr	2,20
 16976  0031FE  5186               	movf	move_window@fs& (0+255),w,b
 16977  003200  26D9               	addwf	fsr2l,f,c
 16978  003202  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16979  003204  22DA               	addwfc	fsr2h,f,c
 16980  003206  CFDE F07B          	movff	postinc2,??_move_window+4
 16981  00320A  CFDD F07C          	movff	postdec2,??_move_window+5
 16982  00320E  517B               	movf	(??_move_window+4)& (0+255),w,b
 16983  003210  2577               	addwf	??_move_window& (0+255),w,b
 16984  003212  6F7D               	movwf	(??_move_window+6)& (0+255),b
 16985  003214  517C               	movf	(??_move_window+5)& (0+255),w,b
 16986  003216  2178               	addwfc	(??_move_window+1)& (0+255),w,b
 16987  003218  6F7E               	movwf	(??_move_window+7)& (0+255),b
 16988  00321A  0E00               	movlw	0
 16989  00321C  2179               	addwfc	(??_move_window+2)& (0+255),w,b
 16990  00321E  6F7F               	movwf	(??_move_window+8)& (0+255),b
 16991  003220  0E00               	movlw	0
 16992  003222  217A               	addwfc	(??_move_window+3)& (0+255),w,b
 16993  003224  6F80               	movwf	(??_move_window+9)& (0+255),b
 16994  003226  517D               	movf	(??_move_window+6)& (0+255),w,b
 16995  003228  5D82               	subwf	move_window@wsect& (0+255),w,b
 16996  00322A  517E               	movf	(??_move_window+7)& (0+255),w,b
 16997  00322C  5983               	subwfb	(move_window@wsect+1)& (0+255),w,b
 16998  00322E  517F               	movf	(??_move_window+8)& (0+255),w,b
 16999  003230  5984               	subwfb	(move_window@wsect+2)& (0+255),w,b
 17000  003232  5180               	movf	(??_move_window+9)& (0+255),w,b
 17001  003234  5985               	subwfb	(move_window@wsect+3)& (0+255),w,b
 17002  003236  B0D8               	btfsc	status,0,c
 17003  003238  D033               	goto	l9848
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 17007  00323A  EE20 F01E          	lfsr	2,30
 17008  00323E  5186               	movf	move_window@fs& (0+255),w,b
 17009  003240  26D9               	addwf	fsr2l,f,c
 17010  003242  5187               	movf	(move_window@fs+1)& (0+255),w,b
 17011  003244  22DA               	addwfc	fsr2h,f,c
 17012  003246  50DF               	movf	indf2,w,c
 17013  003248  6F81               	movwf	move_window@n& (0+255),b
 17014  00324A                     l9836:
 17015                           
 17016                           ; BSR set to: 0
 17017  00324A  0E02               	movlw	2
 17018  00324C  6181               	cpfslt	move_window@n& (0+255),b
 17019  00324E  D001               	goto	l9840
 17020  003250  D027               	goto	l9848
 17021  003252                     l9840:
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;tff.c: 95: wsect += fs->sects_fat;
 17025  003252  EE20 F014          	lfsr	2,20
 17026  003256  5186               	movf	move_window@fs& (0+255),w,b
 17027  003258  26D9               	addwf	fsr2l,f,c
 17028  00325A  5187               	movf	(move_window@fs+1)& (0+255),w,b
 17029  00325C  22DA               	addwfc	fsr2h,f,c
 17030  00325E  CFDE F077          	movff	postinc2,??_move_window
 17031  003262  CFDD F078          	movff	postdec2,??_move_window+1
 17032  003266  5177               	movf	??_move_window& (0+255),w,b
 17033  003268  2782               	addwf	move_window@wsect& (0+255),f,b
 17034  00326A  5178               	movf	(??_move_window+1)& (0+255),w,b
 17035  00326C  2383               	addwfc	(move_window@wsect+1)& (0+255),f,b
 17036  00326E  0E00               	movlw	0
 17037  003270  2384               	addwfc	(move_window@wsect+2)& (0+255),f,b
 17038  003272  0E00               	movlw	0
 17039  003274  2385               	addwfc	(move_window@wsect+3)& (0+255),f,b
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 17043  003276  0E20               	movlw	32
 17044  003278  2586               	addwf	move_window@fs& (0+255),w,b
 17045  00327A  6F68               	movwf	disk_write@buff& (0+255),b
 17046  00327C  0E00               	movlw	0
 17047  00327E  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 17048  003280  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 17049  003282  C082  F06A         	movff	move_window@wsect,disk_write@sector
 17050  003286  C083  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 17051  00328A  C084  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 17052  00328E  C085  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 17053  003292  0E01               	movlw	1
 17054  003294  6F6E               	movwf	disk_write@count& (0+255),b
 17055  003296  0E00               	movlw	0
 17056  003298  EC44  F027         	call	_disk_write
 17057                           
 17058                           ; BSR set to: 0
 17059  00329C  0781               	decf	move_window@n& (0+255),f,b
 17060  00329E  D7D5               	goto	l9836
 17061  0032A0                     l9848:
 17062                           
 17063                           ; BSR set to: 0
 17064                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 17065  0032A0  5173               	movf	move_window@sector& (0+255),w,b
 17066  0032A2  1174               	iorwf	(move_window@sector+1)& (0+255),w,b
 17067  0032A4  1175               	iorwf	(move_window@sector+2)& (0+255),w,b
 17068  0032A6  1176               	iorwf	(move_window@sector+3)& (0+255),w,b
 17069  0032A8  B4D8               	btfsc	status,2,c
 17070  0032AA  D024               	goto	l9858
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 17074  0032AC  0E20               	movlw	32
 17075  0032AE  2586               	addwf	move_window@fs& (0+255),w,b
 17076  0032B0  6F68               	movwf	disk_read@buff& (0+255),b
 17077  0032B2  0E00               	movlw	0
 17078  0032B4  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 17079  0032B6  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 17080  0032B8  C073  F06A         	movff	move_window@sector,disk_read@sector
 17081  0032BC  C074  F06B         	movff	move_window@sector+1,disk_read@sector+1
 17082  0032C0  C075  F06C         	movff	move_window@sector+2,disk_read@sector+2
 17083  0032C4  C076  F06D         	movff	move_window@sector+3,disk_read@sector+3
 17084  0032C8  0E01               	movlw	1
 17085  0032CA  6F6E               	movwf	disk_read@count& (0+255),b
 17086  0032CC  0E00               	movlw	0
 17087  0032CE  EC43  F025         	call	_disk_read
 17088  0032D2  0900               	iorlw	0
 17089  0032D4  A4D8               	btfss	status,2,c
 17090  0032D6  D779               	goto	u11430
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;tff.c: 104: fs->winsect = sector;
 17094  0032D8  EE20 F004          	lfsr	2,4
 17095  0032DC  5186               	movf	move_window@fs& (0+255),w,b
 17096  0032DE  26D9               	addwf	fsr2l,f,c
 17097  0032E0  5187               	movf	(move_window@fs+1)& (0+255),w,b
 17098  0032E2  22DA               	addwfc	fsr2h,f,c
 17099  0032E4  C073  FFDE         	movff	move_window@sector,postinc2
 17100  0032E8  C074  FFDE         	movff	move_window@sector+1,postinc2
 17101  0032EC  C075  FFDE         	movff	move_window@sector+2,postinc2
 17102  0032F0  C076  FFDE         	movff	move_window@sector+3,postinc2
 17103  0032F4                     l9858:
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 17107  0032F4  0E01               	movlw	1
 17108                           
 17109                           ; BSR set to: 0
 17110  0032F6  0012               	return		;funcret
 17111  0032F8                     __end_of_move_window:
 17112                           	callstack 0
 17113                           
 17114 ;; *************** function _disk_write *****************
 17115 ;; Defined at:
 17116 ;;		line 150 in file "bibliotecas/diskio.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;  pdrv            1    wreg     unsigned char 
 17119 ;;  buff            2    8[BANK0 ] PTR const unsigned char 
 17120 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17121 ;;  sector          4   10[BANK0 ] unsigned long 
 17122 ;;  count           1   14[BANK0 ] unsigned char 
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;  pdrv            1   15[BANK0 ] unsigned char 
 17125 ;;  result          2   16[BANK0 ] int 
 17126 ;;  res             1   18[BANK0 ] enum E25
 17127 ;; Return value:  Size  Location     Type
 17128 ;;                  1    wreg      enum E25
 17129 ;; Registers used:
 17130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17131 ;; Tracked objects:
 17132 ;;		On entry : 3F/0
 17133 ;;		On exit  : 3F/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17136 ;;      Params:         0       7       0       0       0       0       0       0       0
 17137 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17138 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17139 ;;      Totals:         1      11       0       0       0       0       0       0       0
 17140 ;;Total ram usage:       12 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; Hardware stack levels required when called:    7
 17143 ;; This function calls:
 17144 ;;		_sdc_disk_write
 17145 ;; This function is called by:
 17146 ;;		_move_window
 17147 ;;		_reserve_direntry
 17148 ;;		_f_write
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text82
 17153  004E88                     __ptext82:
 17154                           	callstack 0
 17155  004E88                     _disk_write:
 17156                           	callstack 15
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;incstack = 0
 17160                           ;disk_write@pdrv stored from wreg
 17161  004E88  6F6F               	movwf	disk_write@pdrv& (0+255),b
 17162                           
 17163                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 17164  004E8A  D018               	goto	l9712
 17165  004E8C                     l9690:
 17166                           
 17167                           ; BSR set to: 0
 17168                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 17169  004E8C  C068  F025         	movff	disk_write@buff,sdc_disk_write@p_buff
 17170  004E90  C069  F026         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 17171  004E94  C06A  F027         	movff	disk_write@sector,sdc_disk_write@sector
 17172  004E98  C06B  F028         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 17173  004E9C  C06C  F029         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 17174  004EA0  C06D  F02A         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 17175  004EA4  C06E  F02B         	movff	disk_write@count,sdc_disk_write@count
 17176  004EA8  ECF2  F016         	call	_sdc_disk_write	;wreg free
 17177  004EAC  6E30               	movwf	??_disk_write^0,c
 17178  004EAE  5030               	movf	??_disk_write^0,w,c
 17179  004EB0  6F70               	movwf	disk_write@result& (0+255),b
 17180  004EB2  6B71               	clrf	(disk_write@result+1)& (0+255),b
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;diskio.c: 165: res = result;
 17184  004EB4  C070  F072         	movff	disk_write@result,disk_write@res
 17185  004EB8                     l9694:
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;diskio.c: 168: return res;
 17189  004EB8  5172               	movf	disk_write@res& (0+255),w,b
 17190  004EBA  0012               	return	
 17191  004EBC                     l9712:
 17192  004EBC  0100               	movlb	0	; () banked
 17193  004EBE  516F               	movf	disk_write@pdrv& (0+255),w,b
 17194                           
 17195                           ; Switch size 1, requested type "simple"
 17196                           ; Number of cases is 3, Range of values is 0 to 2
 17197                           ; switch strategies available:
 17198                           ; Name         Instructions Cycles
 17199                           ; simple_byte           10     6 (average)
 17200                           ;	Chosen strategy is simple_byte
 17201  004EC0  0A00               	xorlw	0	; case 0
 17202  004EC2  B4D8               	btfsc	status,2,c
 17203  004EC4  D7E3               	goto	l9690
 17204  004EC6  0A01               	xorlw	1	; case 1
 17205  004EC8  B4D8               	btfsc	status,2,c
 17206  004ECA  D7E0               	goto	l9690
 17207  004ECC  0A03               	xorlw	3	; case 2
 17208  004ECE  B4D8               	btfsc	status,2,c
 17209  004ED0  D7F3               	goto	l9694
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;diskio.c: 189: return RES_PARERR;
 17213  004ED2  0E04               	movlw	4
 17214                           
 17215                           ; BSR set to: 0
 17216  004ED4  0012               	return		;funcret
 17217  004ED6                     __end_of_disk_write:
 17218                           	callstack 0
 17219                           
 17220 ;; *************** function _sdc_disk_write *****************
 17221 ;; Defined at:
 17222 ;;		line 509 in file "bibliotecas/diskio.c"
 17223 ;; Parameters:    Size  Location     Type
 17224 ;;  p_buff          2   36[COMRAM] PTR const unsigned char 
 17225 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17226 ;;  sector          4   38[COMRAM] unsigned long 
 17227 ;;  count           1   42[COMRAM] unsigned char 
 17228 ;; Auto vars:     Size  Location     Type
 17229 ;;  j               2    5[BANK0 ] int 
 17230 ;;  count1          2    2[BANK0 ] int 
 17231 ;;  i               2    0        int 
 17232 ;;  buff            1    7[BANK0 ] unsigned char 
 17233 ;;  res             1    4[BANK0 ] enum E25
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      enum E25
 17236 ;; Registers used:
 17237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 3F/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17243 ;;      Params:         7       0       0       0       0       0       0       0       0
 17244 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17245 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17246 ;;      Totals:        11       8       0       0       0       0       0       0       0
 17247 ;;Total ram usage:       19 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:    6
 17250 ;; This function calls:
 17251 ;;		_command
 17252 ;;		_dummy_clocks
 17253 ;;		_escreve_SPI
 17254 ;;		_leitura_SPI
 17255 ;;		_proceed
 17256 ;;		_response
 17257 ;; This function is called by:
 17258 ;;		_disk_write
 17259 ;; This function uses a non-reentrant model
 17260 ;;
 17261                           
 17262                           	psect	text83
 17263  002DE4                     __ptext83:
 17264                           	callstack 0
 17265  002DE4                     _sdc_disk_write:
 17266                           	callstack 15
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;incstack = 0
 17270  002DE4  0E00               	movlw	0
 17271  002DE6  0100               	movlb	0	; () banked
 17272  002DE8  6F63               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 17273  002DEA  0E00               	movlw	0
 17274  002DEC  6F62               	movwf	sdc_disk_write@count1& (0+255),b
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;diskio.c: 515: if(count>1)
 17278  002DEE  0E01               	movlw	1
 17279  002DF0  642B               	cpfsgt	sdc_disk_write@count^0,c
 17280  002DF2  D069               	goto	l144
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 17284  002DF4  9E8B               	bcf	139,7,c	;volatile
 17285                           
 17286                           ;diskio.c: 518: LATBbits.LATB4 = 0;
 17287  002DF6  988A               	bcf	138,4,c	;volatile
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;diskio.c: 519: dummy_clocks(10);
 17291  002DF8  0E0A               	movlw	10
 17292  002DFA  ECE5  F028         	call	_dummy_clocks
 17293                           
 17294                           ;diskio.c: 520: command(0X57, count, 0XFF);
 17295  002DFE  502B               	movf	sdc_disk_write@count^0,w,c
 17296  002E00  6E1E               	movwf	command@arg^0,c
 17297  002E02  6A1F               	clrf	(command@arg+1)^0,c
 17298  002E04  6A20               	clrf	(command@arg+2)^0,c
 17299  002E06  6A21               	clrf	(command@arg+3)^0,c
 17300  002E08  0EFF               	movlw	255
 17301  002E0A  6E22               	movwf	command@CRC^0,c
 17302  002E0C  0E57               	movlw	87
 17303  002E0E  EC46  F026         	call	_command
 17304                           
 17305                           ;diskio.c: 521: proceed();
 17306  002E12  EC23  F02B         	call	_proceed	;wreg free
 17307  002E16                     l9578:
 17308                           
 17309                           ;diskio.c: 523: buff = response();
 17310  002E16  EC1D  F02B         	call	_response	;wreg free
 17311  002E1A  0100               	movlb	0	; () banked
 17312  002E1C  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;diskio.c: 524: }while(buff!=0X00);
 17316  002E1E  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17317  002E20  A4D8               	btfss	status,2,c
 17318  002E22  D7F9               	goto	l9578
 17319                           
 17320                           ; BSR set to: 0
 17321                           ;diskio.c: 526: dummy_clocks(10);
 17322  002E24  0E0A               	movlw	10
 17323  002E26  ECE5  F028         	call	_dummy_clocks
 17324                           
 17325                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 17326  002E2A  C027  F02C         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17327  002E2E  C028  F02D         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17328  002E32  C029  F02E         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17329  002E36  C02A  F02F         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17330  002E3A  0E09               	movlw	9
 17331  002E3C                     u11165:
 17332  002E3C  90D8               	bcf	status,0,c
 17333  002E3E  362C               	rlcf	??_sdc_disk_write^0,f,c
 17334  002E40  362D               	rlcf	(??_sdc_disk_write+1)^0,f,c
 17335  002E42  362E               	rlcf	(??_sdc_disk_write+2)^0,f,c
 17336  002E44  362F               	rlcf	(??_sdc_disk_write+3)^0,f,c
 17337  002E46  2EE8               	decfsz	wreg,f,c
 17338  002E48  D7F9               	goto	u11165
 17339  002E4A  C02C  F01E         	movff	??_sdc_disk_write,command@arg
 17340  002E4E  C02D  F01F         	movff	??_sdc_disk_write+1,command@arg+1
 17341  002E52  C02E  F020         	movff	??_sdc_disk_write+2,command@arg+2
 17342  002E56  C02F  F021         	movff	??_sdc_disk_write+3,command@arg+3
 17343  002E5A  0EFF               	movlw	255
 17344  002E5C  6E22               	movwf	command@CRC^0,c
 17345  002E5E  0E59               	movlw	89
 17346  002E60  EC46  F026         	call	_command
 17347                           
 17348                           ;diskio.c: 528: proceed();
 17349  002E64  EC23  F02B         	call	_proceed	;wreg free
 17350  002E68                     l9586:
 17351                           
 17352                           ;diskio.c: 530: buff = response();
 17353  002E68  EC1D  F02B         	call	_response	;wreg free
 17354  002E6C  0100               	movlb	0	; () banked
 17355  002E6E  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;diskio.c: 531: }while(buff!=0X00);
 17359  002E70  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17360  002E72  A4D8               	btfss	status,2,c
 17361  002E74  D7F9               	goto	l9586
 17362                           
 17363                           ; BSR set to: 0
 17364                           ;diskio.c: 533: dummy_clocks(1);
 17365  002E76  0E01               	movlw	1
 17366  002E78  ECE5  F028         	call	_dummy_clocks
 17367                           
 17368                           ;diskio.c: 534: escreve_SPI(0XFC);
 17369  002E7C  0EFC               	movlw	252
 17370  002E7E  EC07  F02B         	call	_escreve_SPI
 17371                           
 17372                           ;diskio.c: 535: for(j=0;j<512;j++)
 17373  002E82  0E00               	movlw	0
 17374  002E84  0100               	movlb	0	; () banked
 17375  002E86  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17376  002E88  0E00               	movlw	0
 17377  002E8A  6F65               	movwf	sdc_disk_write@j& (0+255),b
 17378  002E8C                     l9600:
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 17382  002E8C  C025  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17383  002E90  C026  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17384  002E94  50DF               	movf	indf2,w,c
 17385  002E96  EC07  F02B         	call	_escreve_SPI
 17386                           
 17387                           ;diskio.c: 538: p_buff++;
 17388  002E9A  4A25               	infsnz	sdc_disk_write@p_buff^0,f,c
 17389  002E9C  2A26               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17390  002E9E  0100               	movlb	0	; () banked
 17391  002EA0  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 17392  002EA2  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17393                           
 17394                           ; BSR set to: 0
 17395  002EA4  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17396  002EA6  D7F2               	goto	l9600
 17397  002EA8  0E02               	movlw	2
 17398  002EAA  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17399  002EAC  A0D8               	btfss	status,0,c
 17400  002EAE  D7EE               	goto	l9600
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 17404  002EB0  EC29  F02B         	call	_leitura_SPI	;wreg free
 17405                           
 17406                           ;diskio.c: 541: leitura_SPI();
 17407  002EB4  EC29  F02B         	call	_leitura_SPI	;wreg free
 17408                           
 17409                           ;diskio.c: 543: dummy_clocks(1);
 17410  002EB8  0E01               	movlw	1
 17411  002EBA  ECE5  F028         	call	_dummy_clocks
 17412                           
 17413                           ;diskio.c: 544: escreve_SPI(0XFD);
 17414  002EBE  0EFD               	movlw	253
 17415  002EC0  EC07  F02B         	call	_escreve_SPI
 17416                           
 17417                           ;diskio.c: 546: }
 17418  002EC4  D067               	goto	u11220
 17419  002EC6                     l144:
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 17423  002EC6  9E8B               	bcf	139,7,c	;volatile
 17424                           
 17425                           ;diskio.c: 550: LATBbits.LATB4 = 0;
 17426  002EC8  988A               	bcf	138,4,c	;volatile
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;diskio.c: 551: dummy_clocks(10);
 17430  002ECA  0E0A               	movlw	10
 17431  002ECC  ECE5  F028         	call	_dummy_clocks
 17432                           
 17433                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 17434  002ED0  C027  F02C         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17435  002ED4  C028  F02D         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17436  002ED8  C029  F02E         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17437  002EDC  C02A  F02F         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17438  002EE0  0E09               	movlw	9
 17439  002EE2                     u11195:
 17440  002EE2  90D8               	bcf	status,0,c
 17441  002EE4  362C               	rlcf	??_sdc_disk_write^0,f,c
 17442  002EE6  362D               	rlcf	(??_sdc_disk_write+1)^0,f,c
 17443  002EE8  362E               	rlcf	(??_sdc_disk_write+2)^0,f,c
 17444  002EEA  362F               	rlcf	(??_sdc_disk_write+3)^0,f,c
 17445  002EEC  2EE8               	decfsz	wreg,f,c
 17446  002EEE  D7F9               	goto	u11195
 17447  002EF0  C02C  F01E         	movff	??_sdc_disk_write,command@arg
 17448  002EF4  C02D  F01F         	movff	??_sdc_disk_write+1,command@arg+1
 17449  002EF8  C02E  F020         	movff	??_sdc_disk_write+2,command@arg+2
 17450  002EFC  C02F  F021         	movff	??_sdc_disk_write+3,command@arg+3
 17451  002F00  0E00               	movlw	0
 17452  002F02  6E22               	movwf	command@CRC^0,c
 17453  002F04  0E58               	movlw	88
 17454  002F06  EC46  F026         	call	_command
 17455                           
 17456                           ;diskio.c: 553: proceed();
 17457  002F0A  EC23  F02B         	call	_proceed	;wreg free
 17458  002F0E                     l9618:
 17459                           
 17460                           ;diskio.c: 555: buff = response();
 17461  002F0E  EC1D  F02B         	call	_response	;wreg free
 17462  002F12  0100               	movlb	0	; () banked
 17463  002F14  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;diskio.c: 556: }while(buff!=0X00);
 17467  002F16  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17468  002F18  A4D8               	btfss	status,2,c
 17469  002F1A  D7F9               	goto	l9618
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;diskio.c: 558: LATBbits.LATB4 = 0;
 17473  002F1C  988A               	bcf	138,4,c	;volatile
 17474                           
 17475                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 17476  002F1E  9E8B               	bcf	139,7,c	;volatile
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;diskio.c: 560: dummy_clocks(1);
 17480  002F20  0E01               	movlw	1
 17481  002F22  ECE5  F028         	call	_dummy_clocks
 17482                           
 17483                           ;diskio.c: 561: escreve_SPI(0XFE);
 17484  002F26  0EFE               	movlw	254
 17485  002F28  EC07  F02B         	call	_escreve_SPI
 17486                           
 17487                           ;diskio.c: 562: for(j=0;j<512;j++)
 17488  002F2C  0E00               	movlw	0
 17489  002F2E  0100               	movlb	0	; () banked
 17490  002F30  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17491  002F32  0E00               	movlw	0
 17492  002F34  6F65               	movwf	sdc_disk_write@j& (0+255),b
 17493  002F36                     l9632:
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 17497  002F36  C025  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17498  002F3A  C026  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17499  002F3E  50DF               	movf	indf2,w,c
 17500  002F40  EC07  F02B         	call	_escreve_SPI
 17501                           
 17502                           ;diskio.c: 565: p_buff++;
 17503  002F44  4A25               	infsnz	sdc_disk_write@p_buff^0,f,c
 17504  002F46  2A26               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17505  002F48  0100               	movlb	0	; () banked
 17506  002F4A  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 17507  002F4C  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17508                           
 17509                           ; BSR set to: 0
 17510  002F4E  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17511  002F50  D7F2               	goto	l9632
 17512  002F52  0E02               	movlw	2
 17513  002F54  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17514  002F56  A0D8               	btfss	status,0,c
 17515  002F58  D7EE               	goto	l9632
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 17519  002F5A  EC29  F02B         	call	_leitura_SPI	;wreg free
 17520                           
 17521                           ;diskio.c: 568: leitura_SPI();
 17522  002F5E  EC29  F02B         	call	_leitura_SPI	;wreg free
 17523                           
 17524                           ;diskio.c: 570: dummy_clocks(10);
 17525  002F62  0E0A               	movlw	10
 17526  002F64  ECE5  F028         	call	_dummy_clocks
 17527                           
 17528                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 17529  002F68  0E00               	movlw	0
 17530  002F6A  6E1E               	movwf	command@arg^0,c
 17531  002F6C  0E00               	movlw	0
 17532  002F6E  6E1F               	movwf	(command@arg+1)^0,c
 17533  002F70  0E00               	movlw	0
 17534  002F72  6E20               	movwf	(command@arg+2)^0,c
 17535  002F74  0E00               	movlw	0
 17536  002F76  6E21               	movwf	(command@arg+3)^0,c
 17537  002F78  0E00               	movlw	0
 17538  002F7A  6E22               	movwf	command@CRC^0,c
 17539  002F7C  0E4D               	movlw	77
 17540  002F7E  EC46  F026         	call	_command
 17541                           
 17542                           ;diskio.c: 572: proceed();
 17543  002F82  EC23  F02B         	call	_proceed	;wreg free
 17544  002F86                     l9648:
 17545                           
 17546                           ;diskio.c: 574: buff = response();
 17547  002F86  EC1D  F02B         	call	_response	;wreg free
 17548  002F8A  0100               	movlb	0	; () banked
 17549  002F8C  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;diskio.c: 575: }while(buff!=0X00 );
 17553  002F8E  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17554  002F90  A4D8               	btfss	status,2,c
 17555  002F92  D7F9               	goto	l9648
 17556  002F94                     u11220:
 17557                           
 17558                           ;diskio.c: 576: };diskio.c: 577: return res;
 17559  002F94  0100               	movlb	0	; () banked
 17560  002F96  5164               	movf	sdc_disk_write@res& (0+255),w,b
 17561                           
 17562                           ; BSR set to: 0
 17563  002F98  0012               	return		;funcret
 17564  002F9A                     __end_of_sdc_disk_write:
 17565                           	callstack 0
 17566                           
 17567 ;; *************** function _disk_read *****************
 17568 ;; Defined at:
 17569 ;;		line 97 in file "bibliotecas/diskio.c"
 17570 ;; Parameters:    Size  Location     Type
 17571 ;;  pdrv            1    wreg     unsigned char 
 17572 ;;  buff            2    8[BANK0 ] PTR unsigned char 
 17573 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17574 ;;  sector          4   10[BANK0 ] unsigned long 
 17575 ;;  count           1   14[BANK0 ] unsigned char 
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;  pdrv            1   15[BANK0 ] unsigned char 
 17578 ;;  result          2   16[BANK0 ] int 
 17579 ;;  res             1   18[BANK0 ] enum E25
 17580 ;; Return value:  Size  Location     Type
 17581 ;;                  1    wreg      enum E25
 17582 ;; Registers used:
 17583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17584 ;; Tracked objects:
 17585 ;;		On entry : 3F/0
 17586 ;;		On exit  : 3F/0
 17587 ;;		Unchanged: 0/0
 17588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17589 ;;      Params:         0       7       0       0       0       0       0       0       0
 17590 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17591 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17592 ;;      Totals:         1      11       0       0       0       0       0       0       0
 17593 ;;Total ram usage:       12 bytes
 17594 ;; Hardware stack levels used:    1
 17595 ;; Hardware stack levels required when called:    7
 17596 ;; This function calls:
 17597 ;;		_sdc_disk_read
 17598 ;; This function is called by:
 17599 ;;		_move_window
 17600 ;;		_check_fs
 17601 ;;		_f_read
 17602 ;; This function uses a non-reentrant model
 17603 ;;
 17604                           
 17605                           	psect	text84
 17606  004A86                     __ptext84:
 17607                           	callstack 0
 17608  004A86                     _disk_read:
 17609                           	callstack 15
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;incstack = 0
 17613                           ;disk_read@pdrv stored from wreg
 17614  004A86  6F6F               	movwf	disk_read@pdrv& (0+255),b
 17615                           
 17616                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 17617  004A88  D029               	goto	l9682
 17618  004A8A                     l9658:
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 17622  004A8A  C068  F025         	movff	disk_read@buff,sdc_disk_read@p_buff
 17623  004A8E  C069  F026         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17624  004A92  C06A  F027         	movff	disk_read@sector,sdc_disk_read@sector
 17625  004A96  C06B  F028         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17626  004A9A  C06C  F029         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17627  004A9E  C06D  F02A         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17628  004AA2  C06E  F02B         	movff	disk_read@count,sdc_disk_read@count
 17629  004AA6  EC08  F01E         	call	_sdc_disk_read	;wreg free
 17630  004AAA  6E30               	movwf	??_disk_read^0,c
 17631  004AAC  5030               	movf	??_disk_read^0,w,c
 17632  004AAE  6F70               	movwf	disk_read@result& (0+255),b
 17633  004AB0  6B71               	clrf	(disk_read@result+1)& (0+255),b
 17634                           
 17635                           ; BSR set to: 0
 17636                           ;diskio.c: 115: res = result;
 17637  004AB2  C070  F072         	movff	disk_read@result,disk_read@res
 17638  004AB6                     l9662:
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;diskio.c: 117: return res;
 17642  004AB6  5172               	movf	disk_read@res& (0+255),w,b
 17643  004AB8  0012               	return	
 17644  004ABA                     l9666:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 17648  004ABA  C068  F025         	movff	disk_read@buff,sdc_disk_read@p_buff
 17649  004ABE  C069  F026         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17650  004AC2  C06A  F027         	movff	disk_read@sector,sdc_disk_read@sector
 17651  004AC6  C06B  F028         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17652  004ACA  C06C  F029         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17653  004ACE  C06D  F02A         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17654  004AD2  C06E  F02B         	movff	disk_read@count,sdc_disk_read@count
 17655  004AD6  EC08  F01E         	call	_sdc_disk_read	;wreg free
 17656  004ADA  D7E7               	goto	L10
 17657  004ADC                     l9682:
 17658  004ADC  0100               	movlb	0	; () banked
 17659  004ADE  516F               	movf	disk_read@pdrv& (0+255),w,b
 17660                           
 17661                           ; Switch size 1, requested type "simple"
 17662                           ; Number of cases is 3, Range of values is 0 to 2
 17663                           ; switch strategies available:
 17664                           ; Name         Instructions Cycles
 17665                           ; simple_byte           10     6 (average)
 17666                           ;	Chosen strategy is simple_byte
 17667  004AE0  0A00               	xorlw	0	; case 0
 17668  004AE2  B4D8               	btfsc	status,2,c
 17669  004AE4  D7D2               	goto	l9658
 17670  004AE6  0A01               	xorlw	1	; case 1
 17671  004AE8  B4D8               	btfsc	status,2,c
 17672  004AEA  D7E7               	goto	l9666
 17673  004AEC  0A03               	xorlw	3	; case 2
 17674  004AEE  B4D8               	btfsc	status,2,c
 17675  004AF0  D7E2               	goto	l9662
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;diskio.c: 141: return RES_PARERR;
 17679  004AF2  0E04               	movlw	4
 17680                           
 17681                           ; BSR set to: 0
 17682  004AF4  0012               	return		;funcret
 17683  004AF6                     __end_of_disk_read:
 17684                           	callstack 0
 17685                           
 17686 ;; *************** function _sdc_disk_read *****************
 17687 ;; Defined at:
 17688 ;;		line 439 in file "bibliotecas/diskio.c"
 17689 ;; Parameters:    Size  Location     Type
 17690 ;;  p_buff          2   36[COMRAM] PTR unsigned char 
 17691 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17692 ;;  sector          4   38[COMRAM] unsigned long 
 17693 ;;  count           1   42[COMRAM] unsigned char 
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;  start_add       4    1[BANK0 ] unsigned long 
 17696 ;;  length          2    5[BANK0 ] int 
 17697 ;;  count1          2    0        int 
 17698 ;;  i               2    0        int 
 17699 ;;  buff            1    7[BANK0 ] unsigned char 
 17700 ;;  ptr             1    0        unsigned char 
 17701 ;;  res             1    0        enum E25
 17702 ;; Return value:  Size  Location     Type
 17703 ;;                  1    wreg      enum E25
 17704 ;; Registers used:
 17705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17706 ;; Tracked objects:
 17707 ;;		On entry : 0/0
 17708 ;;		On exit  : 3F/0
 17709 ;;		Unchanged: 0/0
 17710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17711 ;;      Params:         7       0       0       0       0       0       0       0       0
 17712 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17713 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17714 ;;      Totals:        11       8       0       0       0       0       0       0       0
 17715 ;;Total ram usage:       19 bytes
 17716 ;; Hardware stack levels used:    1
 17717 ;; Hardware stack levels required when called:    6
 17718 ;; This function calls:
 17719 ;;		_command
 17720 ;;		_dummy_clocks
 17721 ;;		_proceed
 17722 ;;		_response
 17723 ;; This function is called by:
 17724 ;;		_disk_read
 17725 ;; This function uses a non-reentrant model
 17726 ;;
 17727                           
 17728                           	psect	text85
 17729  003C10                     __ptext85:
 17730                           	callstack 0
 17731  003C10                     _sdc_disk_read:
 17732                           	callstack 15
 17733                           
 17734                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;incstack = 0
 17738  003C10  0E0A               	movlw	10
 17739  003C12  ECE5  F028         	call	_dummy_clocks
 17740                           
 17741                           ;diskio.c: 452: start_add = sector*512;
 17742  003C16  C027  F02C         	movff	sdc_disk_read@sector,??_sdc_disk_read
 17743  003C1A  C028  F02D         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 17744  003C1E  C029  F02E         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 17745  003C22  C02A  F02F         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 17746  003C26  0E09               	movlw	9
 17747  003C28                     u11075:
 17748  003C28  90D8               	bcf	status,0,c
 17749  003C2A  362C               	rlcf	??_sdc_disk_read^0,f,c
 17750  003C2C  362D               	rlcf	(??_sdc_disk_read+1)^0,f,c
 17751  003C2E  362E               	rlcf	(??_sdc_disk_read+2)^0,f,c
 17752  003C30  362F               	rlcf	(??_sdc_disk_read+3)^0,f,c
 17753  003C32  2EE8               	decfsz	wreg,f,c
 17754  003C34  D7F9               	goto	u11075
 17755  003C36  C02C  F061         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 17756  003C3A  C02D  F062         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 17757  003C3E  C02E  F063         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 17758  003C42  C02F  F064         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 17759                           
 17760                           ;diskio.c: 455: if(sector != 1)
 17761  003C46  0427               	decf	sdc_disk_read@sector^0,w,c
 17762  003C48  1028               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 17763  003C4A  1029               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 17764  003C4C  102A               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 17765  003C4E  B4D8               	btfsc	status,2,c
 17766  003C50  D01C               	goto	l9528
 17767                           
 17768                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 17769  003C52  0E0A               	movlw	10
 17770  003C54  ECE5  F028         	call	_dummy_clocks
 17771                           
 17772                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 17773  003C58  C061  F01E         	movff	sdc_disk_read@start_add,command@arg
 17774  003C5C  C062  F01F         	movff	sdc_disk_read@start_add+1,command@arg+1
 17775  003C60  C063  F020         	movff	sdc_disk_read@start_add+2,command@arg+2
 17776  003C64  C064  F021         	movff	sdc_disk_read@start_add+3,command@arg+3
 17777  003C68  0E00               	movlw	0
 17778  003C6A  6E22               	movwf	command@CRC^0,c
 17779  003C6C  0E52               	movlw	82
 17780  003C6E  EC46  F026         	call	_command
 17781                           
 17782                           ;diskio.c: 459: proceed();
 17783  003C72  EC23  F02B         	call	_proceed	;wreg free
 17784  003C76                     l9522:
 17785                           
 17786                           ;diskio.c: 461: buff = response();
 17787  003C76  EC1D  F02B         	call	_response	;wreg free
 17788  003C7A  0100               	movlb	0	; () banked
 17789  003C7C  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;diskio.c: 462: }while(buff!=0X00);
 17793  003C7E  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 17794  003C80  A4D8               	btfss	status,2,c
 17795  003C82  D7F9               	goto	l9522
 17796  003C84                     u11090:
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;diskio.c: 463: proceed();
 17800  003C84  EC23  F02B         	call	_proceed	;wreg free
 17801                           
 17802                           ;diskio.c: 464: }
 17803  003C88  D01E               	goto	l9540
 17804  003C8A                     l9528:
 17805                           
 17806                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 17807  003C8A  0E0A               	movlw	10
 17808  003C8C  ECE5  F028         	call	_dummy_clocks
 17809                           
 17810                           ;diskio.c: 468: command(0X51,sector ,0X00);
 17811  003C90  C027  F01E         	movff	sdc_disk_read@sector,command@arg
 17812  003C94  C028  F01F         	movff	sdc_disk_read@sector+1,command@arg+1
 17813  003C98  C029  F020         	movff	sdc_disk_read@sector+2,command@arg+2
 17814  003C9C  C02A  F021         	movff	sdc_disk_read@sector+3,command@arg+3
 17815  003CA0  0E00               	movlw	0
 17816  003CA2  6E22               	movwf	command@CRC^0,c
 17817  003CA4  0E51               	movlw	81
 17818  003CA6  EC46  F026         	call	_command
 17819                           
 17820                           ;diskio.c: 469: proceed();
 17821  003CAA  EC23  F02B         	call	_proceed	;wreg free
 17822  003CAE                     l9532:
 17823                           
 17824                           ;diskio.c: 471: buff = response();
 17825  003CAE  EC1D  F02B         	call	_response	;wreg free
 17826  003CB2  0100               	movlb	0	; () banked
 17827  003CB4  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;diskio.c: 472: }while(buff!=0X00);
 17831  003CB6  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 17832  003CB8  B4D8               	btfsc	status,2,c
 17833  003CBA  D7E4               	goto	u11090
 17834  003CBC  D7F8               	goto	l9532
 17835  003CBE                     l9538:
 17836                           
 17837                           ; BSR set to: 0
 17838                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 17839  003CBE  EC1D  F02B         	call	_response	;wreg free
 17840  003CC2  0100               	movlb	0	; () banked
 17841  003CC4  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17842  003CC6                     l9540:
 17843  003CC6  0EFE               	movlw	254
 17844  003CC8  0100               	movlb	0	; () banked
 17845  003CCA  1967               	xorwf	sdc_disk_read@buff& (0+255),w,b
 17846  003CCC  A4D8               	btfss	status,2,c
 17847  003CCE  D7F7               	goto	l9538
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 17851  003CD0  0E00               	movlw	0
 17852  003CD2  6F66               	movwf	(sdc_disk_read@length+1)& (0+255),b
 17853  003CD4  0E00               	movlw	0
 17854  003CD6  6F65               	movwf	sdc_disk_read@length& (0+255),b
 17855                           
 17856                           ;diskio.c: 484: while ( length < 512 )
 17857  003CD8  D00C               	goto	l9548
 17858  003CDA                     l9544:
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 17862  003CDA  5165               	movf	sdc_disk_read@length& (0+255),w,b
 17863  003CDC  2425               	addwf	sdc_disk_read@p_buff^0,w,c
 17864  003CDE  6ED9               	movwf	fsr2l,c
 17865  003CE0  5166               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17866  003CE2  2026               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 17867  003CE4  6EDA               	movwf	fsr2h,c
 17868  003CE6  EC1D  F02B         	call	_response	;wreg free
 17869  003CEA  6EDF               	movwf	indf2,c
 17870                           
 17871                           ;diskio.c: 487: length++;
 17872  003CEC  0100               	movlb	0	; () banked
 17873  003CEE  4B65               	infsnz	sdc_disk_read@length& (0+255),f,b
 17874  003CF0  2B66               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17875  003CF2                     l9548:
 17876                           
 17877                           ; BSR set to: 0
 17878  003CF2  BF66               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17879  003CF4  D7F2               	goto	l9544
 17880  003CF6  0E02               	movlw	2
 17881  003CF8  5D66               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17882  003CFA  A0D8               	btfss	status,0,c
 17883  003CFC  D7EE               	goto	l9544
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;diskio.c: 491: dummy_clocks(10);
 17887                           
 17888                           ; BSR set to: 0
 17889  003CFE  0E0A               	movlw	10
 17890  003D00  ECE5  F028         	call	_dummy_clocks
 17891                           
 17892                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 17893  003D04  0E00               	movlw	0
 17894  003D06  6E1E               	movwf	command@arg^0,c
 17895  003D08  0E00               	movlw	0
 17896  003D0A  6E1F               	movwf	(command@arg+1)^0,c
 17897  003D0C  0E00               	movlw	0
 17898  003D0E  6E20               	movwf	(command@arg+2)^0,c
 17899  003D10  0E00               	movlw	0
 17900  003D12  6E21               	movwf	(command@arg+3)^0,c
 17901  003D14  0E00               	movlw	0
 17902  003D16  6E22               	movwf	command@CRC^0,c
 17903  003D18  0E4C               	movlw	76
 17904  003D1A  EC46  F026         	call	_command
 17905                           
 17906                           ;diskio.c: 494: proceed();
 17907  003D1E  EC23  F02B         	call	_proceed	;wreg free
 17908  003D22                     l9558:
 17909                           
 17910                           ;diskio.c: 496: buff = response();
 17911  003D22  EC1D  F02B         	call	_response	;wreg free
 17912  003D26  0100               	movlb	0	; () banked
 17913  003D28  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;diskio.c: 497: }while(buff!=0xFF);
 17917  003D2A  2967               	incf	sdc_disk_read@buff& (0+255),w,b
 17918  003D2C  A4D8               	btfss	status,2,c
 17919  003D2E  D7F9               	goto	l9558
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;diskio.c: 500: return RES_OK;
 17923                           
 17924                           ; BSR set to: 0
 17925  003D30  0E00               	movlw	0
 17926                           
 17927                           ; BSR set to: 0
 17928  003D32  0012               	return		;funcret
 17929  003D34                     __end_of_sdc_disk_read:
 17930                           	callstack 0
 17931                           
 17932 ;; *************** function _response *****************
 17933 ;; Defined at:
 17934 ;;		line 59 in file "bibliotecas/SDCard.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;		None
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;  buff            1   24[COMRAM] unsigned char 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  1    wreg      unsigned char 
 17941 ;; Registers used:
 17942 ;;		wreg, status,2, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0
 17949 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17951 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17952 ;;Total ram usage:        1 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:    4
 17955 ;; This function calls:
 17956 ;;		_leitura_SPI
 17957 ;; This function is called by:
 17958 ;;		_sdc_reset
 17959 ;;		_sdc_disk_initialize
 17960 ;;		_sdc_disk_read
 17961 ;;		_sdc_disk_write
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           	psect	text86
 17966  00563A                     __ptext86:
 17967                           	callstack 0
 17968  00563A                     _response:
 17969                           	callstack 16
 17970                           
 17971                           ;SDCard.c: 61: unsigned char buff;;SDCard.c: 62: LATBbits.LATB4 = 0;
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;incstack = 0
 17975  00563A  988A               	bcf	138,4,c	;volatile
 17976                           
 17977                           ;SDCard.c: 63: buff= leitura_SPI();
 17978  00563C  EC29  F02B         	call	_leitura_SPI	;wreg free
 17979  005640  6E19               	movwf	response@buff^0,c
 17980                           
 17981                           ;SDCard.c: 64: return buff;
 17982  005642  5019               	movf	response@buff^0,w,c
 17983  005644  0012               	return		;funcret
 17984  005646                     __end_of_response:
 17985                           	callstack 0
 17986                           
 17987 ;; *************** function _proceed *****************
 17988 ;; Defined at:
 17989 ;;		line 92 in file "bibliotecas/SDCard.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;		None
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;		None
 17994 ;; Return value:  Size  Location     Type
 17995 ;;                  1    wreg      void 
 17996 ;; Registers used:
 17997 ;;		wreg, cstack
 17998 ;; Tracked objects:
 17999 ;;		On entry : 0/0
 18000 ;;		On exit  : 0/0
 18001 ;;		Unchanged: 0/0
 18002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18003 ;;      Params:         0       0       0       0       0       0       0       0       0
 18004 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18006 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18007 ;;Total ram usage:        0 bytes
 18008 ;; Hardware stack levels used:    1
 18009 ;; Hardware stack levels required when called:    4
 18010 ;; This function calls:
 18011 ;;		_escreve_SPI
 18012 ;; This function is called by:
 18013 ;;		_sdc_reset
 18014 ;;		_sdc_disk_initialize
 18015 ;;		_sdc_disk_read
 18016 ;;		_sdc_disk_write
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           
 18020                           	psect	text87
 18021  005646                     __ptext87:
 18022                           	callstack 0
 18023  005646                     _proceed:
 18024                           	callstack 16
 18025                           
 18026                           ;SDCard.c: 94: LATBbits.LATB4 = 0;
 18027                           
 18028                           ;incstack = 0
 18029  005646  988A               	bcf	138,4,c	;volatile
 18030                           
 18031                           ;SDCard.c: 95: escreve_SPI(0xFF);
 18032  005648  0EFF               	movlw	255
 18033  00564A  EC07  F02B         	call	_escreve_SPI
 18034                           
 18035                           ;SDCard.c: 96: LATBbits.LATB4 = 1;
 18036  00564E  888A               	bsf	138,4,c	;volatile
 18037  005650  0012               	return		;funcret
 18038  005652                     __end_of_proceed:
 18039                           	callstack 0
 18040                           
 18041 ;; *************** function _command *****************
 18042 ;; Defined at:
 18043 ;;		line 125 in file "bibliotecas/SDCard.c"
 18044 ;; Parameters:    Size  Location     Type
 18045 ;;  CMD             1    wreg     unsigned char 
 18046 ;;  arg             4   29[COMRAM] unsigned long 
 18047 ;;  CRC             1   33[COMRAM] unsigned char 
 18048 ;; Auto vars:     Size  Location     Type
 18049 ;;  CMD             1   34[COMRAM] unsigned char 
 18050 ;;  argument        1   35[COMRAM] unsigned char 
 18051 ;; Return value:  Size  Location     Type
 18052 ;;                  1    wreg      void 
 18053 ;; Registers used:
 18054 ;;		wreg, status,2, status,0, cstack
 18055 ;; Tracked objects:
 18056 ;;		On entry : 0/0
 18057 ;;		On exit  : 0/0
 18058 ;;		Unchanged: 0/0
 18059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18060 ;;      Params:         5       0       0       0       0       0       0       0       0
 18061 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18063 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18064 ;;Total ram usage:        7 bytes
 18065 ;; Hardware stack levels used:    1
 18066 ;; Hardware stack levels required when called:    5
 18067 ;; This function calls:
 18068 ;;		_dummy_clocks
 18069 ;;		_escreve_SPI
 18070 ;;		_wait_ready
 18071 ;; This function is called by:
 18072 ;;		_sdc_reset
 18073 ;;		_sdc_disk_initialize
 18074 ;;		_sdc_disk_read
 18075 ;;		_sdc_disk_write
 18076 ;; This function uses a non-reentrant model
 18077 ;;
 18078                           
 18079                           	psect	text88
 18080  004C8C                     __ptext88:
 18081                           	callstack 0
 18082  004C8C                     _command:
 18083                           	callstack 15
 18084                           
 18085                           ;incstack = 0
 18086                           ;command@CMD stored from wreg
 18087  004C8C  6E23               	movwf	command@CMD^0,c
 18088                           
 18089                           ;SDCard.c: 127: unsigned char argument;;SDCard.c: 129: if (wait_ready() != 0xFF)
 18090  004C8E  EC1E  F029         	call	_wait_ready	;wreg free
 18091  004C92  0AFF               	xorlw	255
 18092  004C94  A4D8               	btfss	status,2,c
 18093  004C96  D004               	goto	l583
 18094  004C98  D008               	goto	u11060
 18095  004C9A                     l9472:
 18096                           
 18097                           ;SDCard.c: 132: {;SDCard.c: 133: dummy_clocks(10);
 18098  004C9A  0E0A               	movlw	10
 18099  004C9C  ECE5  F028         	call	_dummy_clocks
 18100  004CA0                     l583:
 18101  004CA0  EC1E  F029         	call	_wait_ready	;wreg free
 18102  004CA4  0AFF               	xorlw	255
 18103  004CA6  A4D8               	btfss	status,2,c
 18104  004CA8  D7F8               	goto	l9472
 18105  004CAA                     u11060:
 18106                           
 18107                           ;SDCard.c: 134: };SDCard.c: 135: };SDCard.c: 136: escreve_SPI(0xFF);
 18108  004CAA  0EFF               	movlw	255
 18109  004CAC  EC07  F02B         	call	_escreve_SPI
 18110                           
 18111                           ;SDCard.c: 137: escreve_SPI(CMD);
 18112  004CB0  5023               	movf	command@CMD^0,w,c
 18113  004CB2  EC07  F02B         	call	_escreve_SPI
 18114                           
 18115                           ;SDCard.c: 138: argument = arg>>24;
 18116  004CB6  C021  F024         	movff	command@arg+3,command@argument
 18117                           
 18118                           ;SDCard.c: 139: escreve_SPI(argument);
 18119  004CBA  5024               	movf	command@argument^0,w,c
 18120  004CBC  EC07  F02B         	call	_escreve_SPI
 18121                           
 18122                           ;SDCard.c: 140: argument = arg>>16;
 18123  004CC0  C020  F024         	movff	command@arg+2,command@argument
 18124                           
 18125                           ;SDCard.c: 141: escreve_SPI(argument);
 18126  004CC4  5024               	movf	command@argument^0,w,c
 18127  004CC6  EC07  F02B         	call	_escreve_SPI
 18128                           
 18129                           ;SDCard.c: 142: argument = arg>>8;
 18130  004CCA  C01F  F024         	movff	command@arg+1,command@argument
 18131                           
 18132                           ;SDCard.c: 143: escreve_SPI(argument);
 18133  004CCE  5024               	movf	command@argument^0,w,c
 18134  004CD0  EC07  F02B         	call	_escreve_SPI
 18135                           
 18136                           ;SDCard.c: 144: argument = arg;
 18137  004CD4  C01E  F024         	movff	command@arg,command@argument
 18138                           
 18139                           ;SDCard.c: 145: escreve_SPI(argument);
 18140  004CD8  5024               	movf	command@argument^0,w,c
 18141  004CDA  EC07  F02B         	call	_escreve_SPI
 18142                           
 18143                           ;SDCard.c: 146: escreve_SPI(CRC);
 18144  004CDE  5022               	movf	command@CRC^0,w,c
 18145  004CE0  EC07  F02B         	call	_escreve_SPI
 18146  004CE4  0012               	return		;funcret
 18147  004CE6                     __end_of_command:
 18148                           	callstack 0
 18149                           
 18150 ;; *************** function _wait_ready *****************
 18151 ;; Defined at:
 18152 ;;		line 105 in file "bibliotecas/SDCard.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;		None
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;  msg            10    0        unsigned char [10]
 18157 ;;  timeout         4   24[COMRAM] unsigned long 
 18158 ;;  res             1   28[COMRAM] unsigned char 
 18159 ;; Return value:  Size  Location     Type
 18160 ;;                  1    wreg      unsigned char 
 18161 ;; Registers used:
 18162 ;;		wreg, status,2, status,0, cstack
 18163 ;; Tracked objects:
 18164 ;;		On entry : 0/0
 18165 ;;		On exit  : 0/0
 18166 ;;		Unchanged: 0/0
 18167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18168 ;;      Params:         0       0       0       0       0       0       0       0       0
 18169 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18171 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18172 ;;Total ram usage:        5 bytes
 18173 ;; Hardware stack levels used:    1
 18174 ;; Hardware stack levels required when called:    4
 18175 ;; This function calls:
 18176 ;;		_leitura_SPI
 18177 ;; This function is called by:
 18178 ;;		_command
 18179 ;; This function uses a non-reentrant model
 18180 ;;
 18181                           
 18182                           	psect	text89
 18183  00523C                     __ptext89:
 18184                           	callstack 0
 18185  00523C                     _wait_ready:
 18186                           	callstack 15
 18187                           
 18188                           ;SDCard.c: 107: BYTE res;;SDCard.c: 108: DWORD timeout = 0x7FFF;
 18189                           
 18190                           ;incstack = 0
 18191  00523C  0EFF               	movlw	255
 18192  00523E  6E19               	movwf	wait_ready@timeout^0,c
 18193  005240  0E7F               	movlw	127
 18194  005242  6E1A               	movwf	(wait_ready@timeout+1)^0,c
 18195  005244  0E00               	movlw	0
 18196  005246  6E1B               	movwf	(wait_ready@timeout+2)^0,c
 18197  005248  0E00               	movlw	0
 18198  00524A  6E1C               	movwf	(wait_ready@timeout+3)^0,c
 18199  00524C                     l9458:
 18200                           
 18201                           ;SDCard.c: 112: res = leitura_SPI();
 18202  00524C  EC29  F02B         	call	_leitura_SPI	;wreg free
 18203  005250  6E1D               	movwf	wait_ready@res^0,c
 18204                           
 18205                           ;SDCard.c: 113: while ((res != 0xFF) && (--timeout));
 18206  005252  281D               	incf	wait_ready@res^0,w,c
 18207  005254  B4D8               	btfsc	status,2,c
 18208  005256  D00B               	goto	u11040
 18209  005258  0619               	decf	wait_ready@timeout^0,f,c
 18210  00525A  0E00               	movlw	0
 18211  00525C  5A1A               	subwfb	(wait_ready@timeout+1)^0,f,c
 18212  00525E  5A1B               	subwfb	(wait_ready@timeout+2)^0,f,c
 18213  005260  5A1C               	subwfb	(wait_ready@timeout+3)^0,f,c
 18214  005262  5019               	movf	wait_ready@timeout^0,w,c
 18215  005264  101A               	iorwf	(wait_ready@timeout+1)^0,w,c
 18216  005266  101B               	iorwf	(wait_ready@timeout+2)^0,w,c
 18217  005268  101C               	iorwf	(wait_ready@timeout+3)^0,w,c
 18218  00526A  A4D8               	btfss	status,2,c
 18219  00526C  D7EF               	goto	l9458
 18220  00526E                     u11040:
 18221                           
 18222                           ;SDCard.c: 115: return res;
 18223  00526E  501D               	movf	wait_ready@res^0,w,c
 18224  005270  0012               	return		;funcret
 18225  005272                     __end_of_wait_ready:
 18226                           	callstack 0
 18227                           
 18228 ;; *************** function _escreve_SPI *****************
 18229 ;; Defined at:
 18230 ;;		line 97 in file "bibliotecas/SPI.c"
 18231 ;; Parameters:    Size  Location     Type
 18232 ;;  dado            1    wreg     unsigned char 
 18233 ;; Auto vars:     Size  Location     Type
 18234 ;;  dado            1   25[COMRAM] unsigned char 
 18235 ;;  TempVar         1    0        unsigned char 
 18236 ;; Return value:  Size  Location     Type
 18237 ;;                  1    wreg      void 
 18238 ;; Registers used:
 18239 ;;		wreg
 18240 ;; Tracked objects:
 18241 ;;		On entry : 0/0
 18242 ;;		On exit  : 0/0
 18243 ;;		Unchanged: 0/0
 18244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18245 ;;      Params:         0       0       0       0       0       0       0       0       0
 18246 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18248 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18249 ;;Total ram usage:        2 bytes
 18250 ;; Hardware stack levels used:    1
 18251 ;; Hardware stack levels required when called:    3
 18252 ;; This function calls:
 18253 ;;		Nothing
 18254 ;; This function is called by:
 18255 ;;		_sdc_disk_write
 18256 ;;		_proceed
 18257 ;;		_command
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text90
 18262  00560E                     __ptext90:
 18263                           	callstack 0
 18264  00560E                     _escreve_SPI:
 18265                           	callstack 16
 18266                           
 18267                           ;incstack = 0
 18268                           ;escreve_SPI@dado stored from wreg
 18269  00560E  6E1A               	movwf	escreve_SPI@dado^0,c
 18270  005610  50C9               	movf	201,w,c	;volatile
 18271                           
 18272                           ;SPI.c: 101: PIR1bits.SSPIF = 0;
 18273  005612  969E               	bcf	158,3,c	;volatile
 18274                           
 18275                           ;SPI.c: 103: SSPBUF = dado;
 18276  005614  C01A  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 18277  005618                     l670:
 18278  005618  B69E               	btfsc	158,3,c	;volatile
 18279  00561A  0012               	return	
 18280  00561C  D7FD               	goto	l670
 18281  00561E                     __end_of_escreve_SPI:
 18282                           	callstack 0
 18283                           
 18284 ;; *************** function _dummy_clocks *****************
 18285 ;; Defined at:
 18286 ;;		line 74 in file "bibliotecas/SDCard.c"
 18287 ;; Parameters:    Size  Location     Type
 18288 ;;  n               1    wreg     unsigned char 
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;  n               1   26[COMRAM] unsigned char 
 18291 ;;  i               2   27[COMRAM] unsigned int 
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  1    wreg      void 
 18294 ;; Registers used:
 18295 ;;		wreg, status,2, status,0, cstack
 18296 ;; Tracked objects:
 18297 ;;		On entry : 0/0
 18298 ;;		On exit  : 0/0
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18301 ;;      Params:         0       0       0       0       0       0       0       0       0
 18302 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18303 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18304 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18305 ;;Total ram usage:        5 bytes
 18306 ;; Hardware stack levels used:    1
 18307 ;; Hardware stack levels required when called:    4
 18308 ;; This function calls:
 18309 ;;		_leitura_SPI
 18310 ;; This function is called by:
 18311 ;;		_sdc_disk_initialize
 18312 ;;		_sdc_disk_read
 18313 ;;		_sdc_disk_write
 18314 ;;		_command
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text91
 18319  0051CA                     __ptext91:
 18320                           	callstack 0
 18321  0051CA                     _dummy_clocks:
 18322                           	callstack 16
 18323                           
 18324                           ;incstack = 0
 18325                           ;dummy_clocks@n stored from wreg
 18326  0051CA  6E1B               	movwf	dummy_clocks@n^0,c
 18327                           
 18328                           ;SDCard.c: 76: unsigned int i;;SDCard.c: 77: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 18329  0051CC  0E10               	movlw	16
 18330  0051CE  6E19               	movwf	??_dummy_clocks^0,c
 18331  0051D0  0E94               	movlw	148
 18332  0051D2                     u15577:
 18333  0051D2  2EE8               	decfsz	wreg,f,c
 18334  0051D4  D7FE               	bra	u15577
 18335  0051D6  2E19               	decfsz	??_dummy_clocks^0,f,c
 18336  0051D8  D7FC               	bra	u15577
 18337  0051DA  D000               	nop2	
 18338                           
 18339                           ;SDCard.c: 78: for(i=0;i<n;i++)
 18340  0051DC  0E00               	movlw	0
 18341  0051DE  6E1D               	movwf	(dummy_clocks@i+1)^0,c
 18342  0051E0  0E00               	movlw	0
 18343  0051E2  6E1C               	movwf	dummy_clocks@i^0,c
 18344  0051E4  D006               	goto	l9450
 18345  0051E6                     l567:
 18346                           
 18347                           ;SDCard.c: 79: {;SDCard.c: 80: LATBbits.LATB4 = 1;
 18348  0051E6  888A               	bsf	138,4,c	;volatile
 18349                           
 18350                           ;SDCard.c: 81: leitura_SPI();
 18351  0051E8  EC29  F02B         	call	_leitura_SPI	;wreg free
 18352                           
 18353                           ;SDCard.c: 82: LATBbits.LATB4 = 0;
 18354  0051EC  988A               	bcf	138,4,c	;volatile
 18355  0051EE  4A1C               	infsnz	dummy_clocks@i^0,f,c
 18356  0051F0  2A1D               	incf	(dummy_clocks@i+1)^0,f,c
 18357  0051F2                     l9450:
 18358  0051F2  501B               	movf	dummy_clocks@n^0,w,c
 18359  0051F4  6E19               	movwf	??_dummy_clocks^0,c
 18360  0051F6  6A1A               	clrf	(??_dummy_clocks+1)^0,c
 18361  0051F8  5019               	movf	??_dummy_clocks^0,w,c
 18362  0051FA  5C1C               	subwf	dummy_clocks@i^0,w,c
 18363  0051FC  501A               	movf	(??_dummy_clocks+1)^0,w,c
 18364  0051FE  581D               	subwfb	(dummy_clocks@i+1)^0,w,c
 18365  005200  B0D8               	btfsc	status,0,c
 18366  005202  0012               	return	
 18367  005204  D7F0               	goto	l567
 18368  005206                     __end_of_dummy_clocks:
 18369                           	callstack 0
 18370                           
 18371 ;; *************** function _leitura_SPI *****************
 18372 ;; Defined at:
 18373 ;;		line 82 in file "bibliotecas/SPI.c"
 18374 ;; Parameters:    Size  Location     Type
 18375 ;;		None
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;		None
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  1    wreg      unsigned char 
 18380 ;; Registers used:
 18381 ;;		wreg, status,2
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/0
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18387 ;;      Params:         0       0       0       0       0       0       0       0       0
 18388 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18390 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18391 ;;Total ram usage:        0 bytes
 18392 ;; Hardware stack levels used:    1
 18393 ;; Hardware stack levels required when called:    3
 18394 ;; This function calls:
 18395 ;;		Nothing
 18396 ;; This function is called by:
 18397 ;;		_sdc_disk_write
 18398 ;;		_response
 18399 ;;		_dummy_clocks
 18400 ;;		_wait_ready
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404                           	psect	text92
 18405  005652                     __ptext92:
 18406                           	callstack 0
 18407  005652                     _leitura_SPI:
 18408                           	callstack 16
 18409                           
 18410                           ;SPI.c: 84: SSPBUF = 0xFF;
 18411                           
 18412                           ;incstack = 0
 18413  005652  68C9               	setf	201,c	;volatile
 18414                           
 18415                           ;SPI.c: 85: SSPSTATbits.BF = 0;
 18416  005654  90C7               	bcf	199,0,c	;volatile
 18417  005656                     l664:
 18418  005656  A0C7               	btfss	199,0,c	;volatile
 18419  005658  D7FE               	goto	l664
 18420                           
 18421                           ;SPI.c: 87: return (SSPBUF);
 18422  00565A  50C9               	movf	201,w,c	;volatile
 18423  00565C  0012               	return		;funcret
 18424  00565E                     __end_of_leitura_SPI:
 18425                           	callstack 0
 18426                           
 18427 ;; *************** function _disk_ioctl *****************
 18428 ;; Defined at:
 18429 ;;		line 198 in file "bibliotecas/diskio.c"
 18430 ;; Parameters:    Size  Location     Type
 18431 ;;  pdrv            1    wreg     unsigned char 
 18432 ;;  cmd             1   24[COMRAM] unsigned char 
 18433 ;;  buff            2   25[COMRAM] PTR void 
 18434 ;;		 -> NULL(0), 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;  pdrv            1   27[COMRAM] unsigned char 
 18437 ;;  result          2    0        int 
 18438 ;;  res             1   28[COMRAM] enum E25
 18439 ;; Return value:  Size  Location     Type
 18440 ;;                  1    wreg      enum E25
 18441 ;; Registers used:
 18442 ;;		wreg, status,2, status,0
 18443 ;; Tracked objects:
 18444 ;;		On entry : 3F/0
 18445 ;;		On exit  : 0/0
 18446 ;;		Unchanged: 0/0
 18447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18448 ;;      Params:         3       0       0       0       0       0       0       0       0
 18449 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18451 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18452 ;;Total ram usage:        5 bytes
 18453 ;; Hardware stack levels used:    1
 18454 ;; Hardware stack levels required when called:    3
 18455 ;; This function calls:
 18456 ;;		Nothing
 18457 ;; This function is called by:
 18458 ;;		_sync
 18459 ;; This function uses a non-reentrant model
 18460 ;;
 18461                           
 18462                           	psect	text93
 18463  0054F6                     __ptext93:
 18464                           	callstack 0
 18465  0054F6                     _disk_ioctl:
 18466                           	callstack 21
 18467                           
 18468                           ;incstack = 0
 18469                           ;disk_ioctl@pdrv stored from wreg
 18470  0054F6  6E1C               	movwf	disk_ioctl@pdrv^0,c
 18471                           
 18472                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 18473  0054F8  D002               	goto	l10368
 18474  0054FA                     l68:
 18475                           
 18476                           ;diskio.c: 212: return res;
 18477  0054FA  501D               	movf	disk_ioctl@res^0,w,c
 18478  0054FC  0012               	return	
 18479  0054FE                     l10368:
 18480  0054FE  501C               	movf	disk_ioctl@pdrv^0,w,c
 18481                           
 18482                           ; Switch size 1, requested type "simple"
 18483                           ; Number of cases is 3, Range of values is 0 to 2
 18484                           ; switch strategies available:
 18485                           ; Name         Instructions Cycles
 18486                           ; simple_byte           10     6 (average)
 18487                           ;	Chosen strategy is simple_byte
 18488  005500  0A00               	xorlw	0	; case 0
 18489  005502  B4D8               	btfsc	status,2,c
 18490  005504  D7FA               	goto	l68
 18491  005506  0A01               	xorlw	1	; case 1
 18492  005508  B4D8               	btfsc	status,2,c
 18493  00550A  D7F7               	goto	l68
 18494  00550C  0A03               	xorlw	3	; case 2
 18495  00550E  B4D8               	btfsc	status,2,c
 18496  005510  D7F4               	goto	l68
 18497                           
 18498                           ;diskio.c: 227: return RES_PARERR;
 18499  005512  0E04               	movlw	4
 18500  005514  0012               	return		;funcret
 18501  005516                     __end_of_disk_ioctl:
 18502                           	callstack 0
 18503                           
 18504 ;; *************** function _get_fattime *****************
 18505 ;; Defined at:
 18506 ;;		line 810 in file "bibliotecas/tff.c"
 18507 ;; Parameters:    Size  Location     Type
 18508 ;;		None
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;  f_time         10   32[COMRAM] struct .
 18511 ;; Return value:  Size  Location     Type
 18512 ;;                  4   28[COMRAM] unsigned long 
 18513 ;; Registers used:
 18514 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18515 ;; Tracked objects:
 18516 ;;		On entry : 3F/0
 18517 ;;		On exit  : 3F/0
 18518 ;;		Unchanged: 0/0
 18519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18520 ;;      Params:         4       0       0       0       0       0       0       0       0
 18521 ;;      Locals:        10       0       0       0       0       0       0       0       0
 18522 ;;      Temps:          0      38       0       0       0       0       0       0       0
 18523 ;;      Totals:        14      38       0       0       0       0       0       0       0
 18524 ;;Total ram usage:       52 bytes
 18525 ;; Hardware stack levels used:    1
 18526 ;; Hardware stack levels required when called:    4
 18527 ;; This function calls:
 18528 ;;		_GPSDay
 18529 ;;		_GPSHour
 18530 ;;		_GPSMinute
 18531 ;;		_GPSMonth
 18532 ;;		_GPSSecond
 18533 ;;		_GPSyear
 18534 ;; This function is called by:
 18535 ;;		_f_open
 18536 ;;		_f_sync
 18537 ;; This function uses a non-reentrant model
 18538 ;;
 18539                           
 18540                           	psect	text94
 18541  003742                     __ptext94:
 18542                           	callstack 0
 18543  003742                     _get_fattime:
 18544                           	callstack 22
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = GPSHour() - 3;
 18548                           
 18549                           ;incstack = 0
 18550  003742  ECD1  F029         	call	_GPSHour	;wreg free
 18551  003746  0EFD               	movlw	253
 18552  003748  2419               	addwf	?_GPSHour^0,w,c
 18553  00374A  6E21               	movwf	get_fattime@f_time^0,c
 18554  00374C  0EFF               	movlw	255
 18555  00374E  201A               	addwfc	(?_GPSHour+1)^0,w,c
 18556  003750  6E22               	movwf	(get_fattime@f_time+1)^0,c
 18557                           
 18558                           ;tff.c: 815: f_time.min = GPSMinute();
 18559  003752  EC49  F02A         	call	_GPSMinute	;wreg free
 18560  003756  C019  F023         	movff	?_GPSMinute,get_fattime@f_time+2
 18561  00375A  C01A  F024         	movff	?_GPSMinute+1,get_fattime@f_time+3
 18562                           
 18563                           ;tff.c: 816: f_time.seg = GPSSecond();
 18564  00375E  EC27  F02A         	call	_GPSSecond	;wreg free
 18565  003762  C019  F025         	movff	?_GPSSecond,get_fattime@f_time+4
 18566  003766  C01A  F026         	movff	?_GPSSecond+1,get_fattime@f_time+5
 18567                           
 18568                           ;tff.c: 817: f_time.ano = GPSyear() + 2000;
 18569  00376A  EC16  F02A         	call	_GPSyear	;wreg free
 18570  00376E  0ED0               	movlw	208
 18571  003770  2419               	addwf	?_GPSyear^0,w,c
 18572  003772  6E29               	movwf	(get_fattime@f_time+8)^0,c
 18573  003774  0E07               	movlw	7
 18574  003776  201A               	addwfc	(?_GPSyear+1)^0,w,c
 18575  003778  6E2A               	movwf	(get_fattime@f_time+9)^0,c
 18576                           
 18577                           ;tff.c: 818: f_time.mes = GPSMonth();
 18578  00377A  EC38  F02A         	call	_GPSMonth	;wreg free
 18579  00377E  5019               	movf	?_GPSMonth^0,w,c
 18580  003780  6E28               	movwf	(get_fattime@f_time+7)^0,c
 18581                           
 18582                           ;tff.c: 819: f_time.dia = GPSDay();
 18583  003782  EC5A  F02A         	call	_GPSDay	;wreg free
 18584  003786  5019               	movf	?_GPSDay^0,w,c
 18585  003788  6E27               	movwf	(get_fattime@f_time+6)^0,c
 18586                           
 18587                           ; BSR set to: 1
 18588                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 18589  00378A  90D8               	bcf	status,0,c
 18590  00378C  3026               	rrcf	(get_fattime@f_time+5)^0,w,c
 18591  00378E  0100               	movlb	0	; () banked
 18592  003790  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 18593  003792  3025               	rrcf	(get_fattime@f_time+4)^0,w,c
 18594  003794  6F60               	movwf	??_get_fattime& (0+255),b
 18595  003796  5023               	movf	(get_fattime@f_time+2)^0,w,c
 18596  003798  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 18597  00379A  5024               	movf	(get_fattime@f_time+3)^0,w,c
 18598  00379C  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 18599  00379E  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 18600  0037A0  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 18601  0037A2  0E05               	movlw	5
 18602  0037A4                     u12565:
 18603  0037A4  90D8               	bcf	status,0,c
 18604  0037A6  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 18605  0037A8  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 18606  0037AA  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 18607  0037AC  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 18608  0037AE  2EE8               	decfsz	wreg,f,c
 18609  0037B0  D7F9               	goto	u12565
 18610  0037B2  5021               	movf	get_fattime@f_time^0,w,c
 18611  0037B4  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 18612  0037B6  5022               	movf	(get_fattime@f_time+1)^0,w,c
 18613  0037B8  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 18614  0037BA  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 18615  0037BC  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 18616  0037BE  0E0B               	movlw	11
 18617  0037C0                     u12575:
 18618  0037C0  90D8               	bcf	status,0,c
 18619  0037C2  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 18620  0037C4  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 18621  0037C6  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 18622  0037C8  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 18623  0037CA  2EE8               	decfsz	wreg,f,c
 18624  0037CC  D7F9               	goto	u12575
 18625  0037CE  C027  F06A         	movff	get_fattime@f_time+6,??_get_fattime+10
 18626  0037D2  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18627  0037D4  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 18628  0037D6  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 18629  0037D8  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 18630  0037DC  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 18631  0037E0  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18632  0037E2  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 18633  0037E4  C028  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 18634  0037E8  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 18635  0037EA  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 18636  0037EC  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 18637  0037EE  0E15               	movlw	21
 18638  0037F0                     u12585:
 18639  0037F0  90D8               	bcf	status,0,c
 18640  0037F2  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 18641  0037F4  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 18642  0037F6  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 18643  0037F8  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 18644  0037FA  2EE8               	decfsz	wreg,f,c
 18645  0037FC  D7F9               	goto	u12585
 18646  0037FE  0EC4               	movlw	196
 18647  003800  2429               	addwf	(get_fattime@f_time+8)^0,w,c
 18648  003802  6F72               	movwf	(??_get_fattime+18)& (0+255),b
 18649  003804  0EFF               	movlw	255
 18650  003806  202A               	addwfc	(get_fattime@f_time+9)^0,w,c
 18651  003808  6F73               	movwf	(??_get_fattime+19)& (0+255),b
 18652  00380A  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 18653  00380C  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 18654  00380E  0E19               	movlw	25
 18655  003810                     u12595:
 18656  003810  90D8               	bcf	status,0,c
 18657  003812  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 18658  003814  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 18659  003816  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 18660  003818  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 18661  00381A  2EE8               	decfsz	wreg,f,c
 18662  00381C  D7F9               	goto	u12595
 18663  00381E  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 18664  003820  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 18665  003822  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 18666  003824  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 18667  003826  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 18668  003828  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 18669  00382A  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 18670  00382C  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 18671  00382E  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 18672  003830  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 18673  003832  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 18674  003834  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 18675  003836  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 18676  003838  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 18677  00383A  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 18678  00383C  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 18679  00383E  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 18680  003840  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 18681  003842  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 18682  003844  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 18683  003846  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 18684  003848  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 18685  00384A  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 18686  00384C  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 18687  00384E  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 18688  003850  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 18689  003852  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 18690  003854  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 18691  003856  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 18692  003858  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 18693  00385A  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 18694  00385C  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 18695  00385E  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 18696  003860  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 18697  003862  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 18698  003864  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 18699  003866  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 18700  003868  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 18701  00386A  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 18702  00386C  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 18703  00386E  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 18704  003870  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 18705  003872  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 18706  003874  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 18707  003876  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 18708  003878  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 18709  00387A  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 18710  00387C  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 18711  00387E  5160               	movf	??_get_fattime& (0+255),w,b
 18712  003880  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 18713  003882  6E1D               	movwf	?_get_fattime^0,c
 18714  003884  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 18715  003886  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 18716  003888  6E1E               	movwf	(?_get_fattime+1)^0,c
 18717  00388A  0E00               	movlw	0
 18718  00388C  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 18719  00388E  6E1F               	movwf	(?_get_fattime+2)^0,c
 18720  003890  0E00               	movlw	0
 18721  003892  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 18722  003894  6E20               	movwf	(?_get_fattime+3)^0,c
 18723                           
 18724                           ; BSR set to: 0
 18725  003896  0012               	return		;funcret
 18726  003898                     __end_of_get_fattime:
 18727                           	callstack 0
 18728                           
 18729 ;; *************** function _GPSyear *****************
 18730 ;; Defined at:
 18731 ;;		line 167 in file "bibliotecas/GPS.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;		None
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;		None
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  2   24[COMRAM] unsigned int 
 18738 ;; Registers used:
 18739 ;;		wreg, status,2, status,0, prodl, prodh
 18740 ;; Tracked objects:
 18741 ;;		On entry : 3F/1
 18742 ;;		On exit  : 3F/1
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18745 ;;      Params:         2       0       0       0       0       0       0       0       0
 18746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18747 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18748 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18749 ;;Total ram usage:        4 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    3
 18752 ;; This function calls:
 18753 ;;		Nothing
 18754 ;; This function is called by:
 18755 ;;		_get_fattime
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           
 18759                           	psect	text95
 18760  00542C                     __ptext95:
 18761                           	callstack 0
 18762  00542C                     _GPSyear:
 18763                           	callstack 22
 18764                           
 18765                           ; BSR set to: 1
 18766                           ;GPS.c: 169: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;incstack = 0
 18770  00542C  51DE               	movf	(_rawDate+4)& (0+255),w,b
 18771  00542E  0D0A               	mullw	10
 18772  005430  CFF3 F01B          	movff	prodl,??_GPSyear
 18773  005434  CFF4 F01C          	movff	prodh,??_GPSyear+1
 18774  005438  51DF               	movf	(_rawDate+5)& (0+255),w,b
 18775  00543A  261B               	addwf	??_GPSyear^0,f,c
 18776  00543C  0E00               	movlw	0
 18777  00543E  221C               	addwfc	(??_GPSyear+1)^0,f,c
 18778  005440  0EF0               	movlw	240
 18779  005442  241B               	addwf	??_GPSyear^0,w,c
 18780  005444  6E19               	movwf	?_GPSyear^0,c
 18781  005446  0EFD               	movlw	253
 18782  005448  201C               	addwfc	(??_GPSyear+1)^0,w,c
 18783  00544A  6E1A               	movwf	(?_GPSyear+1)^0,c
 18784                           
 18785                           ; BSR set to: 1
 18786  00544C  0012               	return		;funcret
 18787  00544E                     __end_of_GPSyear:
 18788                           	callstack 0
 18789                           
 18790 ;; *************** function _GPSSecond *****************
 18791 ;; Defined at:
 18792 ;;		line 146 in file "bibliotecas/GPS.c"
 18793 ;; Parameters:    Size  Location     Type
 18794 ;;		None
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;		None
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  2   24[COMRAM] unsigned int 
 18799 ;; Registers used:
 18800 ;;		wreg, status,2, status,0, prodl, prodh
 18801 ;; Tracked objects:
 18802 ;;		On entry : 3F/1
 18803 ;;		On exit  : 3F/1
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18806 ;;      Params:         2       0       0       0       0       0       0       0       0
 18807 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18808 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18809 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18810 ;;Total ram usage:        4 bytes
 18811 ;; Hardware stack levels used:    1
 18812 ;; Hardware stack levels required when called:    3
 18813 ;; This function calls:
 18814 ;;		Nothing
 18815 ;; This function is called by:
 18816 ;;		_get_fattime
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text96
 18821  00544E                     __ptext96:
 18822                           	callstack 0
 18823  00544E                     _GPSSecond:
 18824                           	callstack 22
 18825                           
 18826                           ; BSR set to: 1
 18827                           ;GPS.c: 148: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 18828                           
 18829                           ; BSR set to: 1
 18830                           ;incstack = 0
 18831  00544E  51CC               	movf	(_rawTime+4)& (0+255),w,b
 18832  005450  0D0A               	mullw	10
 18833  005452  CFF3 F01B          	movff	prodl,??_GPSSecond
 18834  005456  CFF4 F01C          	movff	prodh,??_GPSSecond+1
 18835  00545A  51CD               	movf	(_rawTime+5)& (0+255),w,b
 18836  00545C  261B               	addwf	??_GPSSecond^0,f,c
 18837  00545E  0E00               	movlw	0
 18838  005460  221C               	addwfc	(??_GPSSecond+1)^0,f,c
 18839  005462  0EF0               	movlw	240
 18840  005464  241B               	addwf	??_GPSSecond^0,w,c
 18841  005466  6E19               	movwf	?_GPSSecond^0,c
 18842  005468  0EFD               	movlw	253
 18843  00546A  201C               	addwfc	(??_GPSSecond+1)^0,w,c
 18844  00546C  6E1A               	movwf	(?_GPSSecond+1)^0,c
 18845                           
 18846                           ; BSR set to: 1
 18847  00546E  0012               	return		;funcret
 18848  005470                     __end_of_GPSSecond:
 18849                           	callstack 0
 18850                           
 18851 ;; *************** function _GPSMonth *****************
 18852 ;; Defined at:
 18853 ;;		line 163 in file "bibliotecas/GPS.c"
 18854 ;; Parameters:    Size  Location     Type
 18855 ;;		None
 18856 ;; Auto vars:     Size  Location     Type
 18857 ;;		None
 18858 ;; Return value:  Size  Location     Type
 18859 ;;                  2   24[COMRAM] unsigned int 
 18860 ;; Registers used:
 18861 ;;		wreg, status,2, status,0, prodl, prodh
 18862 ;; Tracked objects:
 18863 ;;		On entry : 3F/1
 18864 ;;		On exit  : 3F/1
 18865 ;;		Unchanged: 0/0
 18866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18867 ;;      Params:         2       0       0       0       0       0       0       0       0
 18868 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18869 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18870 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18871 ;;Total ram usage:        4 bytes
 18872 ;; Hardware stack levels used:    1
 18873 ;; Hardware stack levels required when called:    3
 18874 ;; This function calls:
 18875 ;;		Nothing
 18876 ;; This function is called by:
 18877 ;;		_get_fattime
 18878 ;; This function uses a non-reentrant model
 18879 ;;
 18880                           
 18881                           	psect	text97
 18882  005470                     __ptext97:
 18883                           	callstack 0
 18884  005470                     _GPSMonth:
 18885                           	callstack 22
 18886                           
 18887                           ; BSR set to: 1
 18888                           ;GPS.c: 165: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 18889                           
 18890                           ; BSR set to: 1
 18891                           ;incstack = 0
 18892  005470  51DC               	movf	(_rawDate+2)& (0+255),w,b
 18893  005472  0D0A               	mullw	10
 18894  005474  CFF3 F01B          	movff	prodl,??_GPSMonth
 18895  005478  CFF4 F01C          	movff	prodh,??_GPSMonth+1
 18896  00547C  51DD               	movf	(_rawDate+3)& (0+255),w,b
 18897  00547E  261B               	addwf	??_GPSMonth^0,f,c
 18898  005480  0E00               	movlw	0
 18899  005482  221C               	addwfc	(??_GPSMonth+1)^0,f,c
 18900  005484  0EF0               	movlw	240
 18901  005486  241B               	addwf	??_GPSMonth^0,w,c
 18902  005488  6E19               	movwf	?_GPSMonth^0,c
 18903  00548A  0EFD               	movlw	253
 18904  00548C  201C               	addwfc	(??_GPSMonth+1)^0,w,c
 18905  00548E  6E1A               	movwf	(?_GPSMonth+1)^0,c
 18906                           
 18907                           ; BSR set to: 1
 18908  005490  0012               	return		;funcret
 18909  005492                     __end_of_GPSMonth:
 18910                           	callstack 0
 18911                           
 18912 ;; *************** function _GPSMinute *****************
 18913 ;; Defined at:
 18914 ;;		line 150 in file "bibliotecas/GPS.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;		None
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  2   24[COMRAM] unsigned int 
 18921 ;; Registers used:
 18922 ;;		wreg, status,2, status,0, prodl, prodh
 18923 ;; Tracked objects:
 18924 ;;		On entry : 3F/1
 18925 ;;		On exit  : 3F/1
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18928 ;;      Params:         2       0       0       0       0       0       0       0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18930 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18931 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18932 ;;Total ram usage:        4 bytes
 18933 ;; Hardware stack levels used:    1
 18934 ;; Hardware stack levels required when called:    3
 18935 ;; This function calls:
 18936 ;;		Nothing
 18937 ;; This function is called by:
 18938 ;;		_get_fattime
 18939 ;; This function uses a non-reentrant model
 18940 ;;
 18941                           
 18942                           	psect	text98
 18943  005492                     __ptext98:
 18944                           	callstack 0
 18945  005492                     _GPSMinute:
 18946                           	callstack 22
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;GPS.c: 152: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 18950                           
 18951                           ; BSR set to: 1
 18952                           ;incstack = 0
 18953  005492  51CA               	movf	(_rawTime+2)& (0+255),w,b
 18954  005494  0D0A               	mullw	10
 18955  005496  CFF3 F01B          	movff	prodl,??_GPSMinute
 18956  00549A  CFF4 F01C          	movff	prodh,??_GPSMinute+1
 18957  00549E  51CB               	movf	(_rawTime+3)& (0+255),w,b
 18958  0054A0  261B               	addwf	??_GPSMinute^0,f,c
 18959  0054A2  0E00               	movlw	0
 18960  0054A4  221C               	addwfc	(??_GPSMinute+1)^0,f,c
 18961  0054A6  0EF0               	movlw	240
 18962  0054A8  241B               	addwf	??_GPSMinute^0,w,c
 18963  0054AA  6E19               	movwf	?_GPSMinute^0,c
 18964  0054AC  0EFD               	movlw	253
 18965  0054AE  201C               	addwfc	(??_GPSMinute+1)^0,w,c
 18966  0054B0  6E1A               	movwf	(?_GPSMinute+1)^0,c
 18967                           
 18968                           ; BSR set to: 1
 18969  0054B2  0012               	return		;funcret
 18970  0054B4                     __end_of_GPSMinute:
 18971                           	callstack 0
 18972                           
 18973 ;; *************** function _GPSHour *****************
 18974 ;; Defined at:
 18975 ;;		line 154 in file "bibliotecas/GPS.c"
 18976 ;; Parameters:    Size  Location     Type
 18977 ;;		None
 18978 ;; Auto vars:     Size  Location     Type
 18979 ;;		None
 18980 ;; Return value:  Size  Location     Type
 18981 ;;                  2   24[COMRAM] unsigned int 
 18982 ;; Registers used:
 18983 ;;		wreg, status,2, status,0, prodl, prodh
 18984 ;; Tracked objects:
 18985 ;;		On entry : 3F/0
 18986 ;;		On exit  : 3F/1
 18987 ;;		Unchanged: 0/0
 18988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18989 ;;      Params:         2       0       0       0       0       0       0       0       0
 18990 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18991 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18992 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18993 ;;Total ram usage:        4 bytes
 18994 ;; Hardware stack levels used:    1
 18995 ;; Hardware stack levels required when called:    3
 18996 ;; This function calls:
 18997 ;;		Nothing
 18998 ;; This function is called by:
 18999 ;;		_get_fattime
 19000 ;; This function uses a non-reentrant model
 19001 ;;
 19002                           
 19003                           	psect	text99
 19004  0053A2                     __ptext99:
 19005                           	callstack 0
 19006  0053A2                     _GPSHour:
 19007                           	callstack 22
 19008                           
 19009                           ; BSR set to: 0
 19010                           ;GPS.c: 156: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;incstack = 0
 19014  0053A2  0101               	movlb	1	; () banked
 19015  0053A4  51C8               	movf	_rawTime& (0+255),w,b
 19016  0053A6  0D0A               	mullw	10
 19017  0053A8  CFF3 F01B          	movff	prodl,??_GPSHour
 19018  0053AC  CFF4 F01C          	movff	prodh,??_GPSHour+1
 19019  0053B0  51C9               	movf	(_rawTime+1)& (0+255),w,b
 19020  0053B2  261B               	addwf	??_GPSHour^0,f,c
 19021  0053B4  0E00               	movlw	0
 19022  0053B6  221C               	addwfc	(??_GPSHour+1)^0,f,c
 19023  0053B8  0EF0               	movlw	240
 19024  0053BA  241B               	addwf	??_GPSHour^0,w,c
 19025  0053BC  6E19               	movwf	?_GPSHour^0,c
 19026  0053BE  0EFD               	movlw	253
 19027  0053C0  201C               	addwfc	(??_GPSHour+1)^0,w,c
 19028  0053C2  6E1A               	movwf	(?_GPSHour+1)^0,c
 19029                           
 19030                           ; BSR set to: 1
 19031  0053C4  0012               	return		;funcret
 19032  0053C6                     __end_of_GPSHour:
 19033                           	callstack 0
 19034                           
 19035 ;; *************** function _GPSDay *****************
 19036 ;; Defined at:
 19037 ;;		line 159 in file "bibliotecas/GPS.c"
 19038 ;; Parameters:    Size  Location     Type
 19039 ;;		None
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;		None
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  2   24[COMRAM] unsigned int 
 19044 ;; Registers used:
 19045 ;;		wreg, status,2, status,0, prodl, prodh
 19046 ;; Tracked objects:
 19047 ;;		On entry : 3F/1
 19048 ;;		On exit  : 3F/1
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19051 ;;      Params:         2       0       0       0       0       0       0       0       0
 19052 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19053 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19054 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19055 ;;Total ram usage:        4 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; Hardware stack levels required when called:    3
 19058 ;; This function calls:
 19059 ;;		Nothing
 19060 ;; This function is called by:
 19061 ;;		_get_fattime
 19062 ;; This function uses a non-reentrant model
 19063 ;;
 19064                           
 19065                           	psect	text100
 19066  0054B4                     __ptext100:
 19067                           	callstack 0
 19068  0054B4                     _GPSDay:
 19069                           	callstack 22
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;GPS.c: 161: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;incstack = 0
 19076  0054B4  51DA               	movf	_rawDate& (0+255),w,b
 19077  0054B6  0D0A               	mullw	10
 19078  0054B8  CFF3 F01B          	movff	prodl,??_GPSDay
 19079  0054BC  CFF4 F01C          	movff	prodh,??_GPSDay+1
 19080  0054C0  51DB               	movf	(_rawDate+1)& (0+255),w,b
 19081  0054C2  261B               	addwf	??_GPSDay^0,f,c
 19082  0054C4  0E00               	movlw	0
 19083  0054C6  221C               	addwfc	(??_GPSDay+1)^0,f,c
 19084  0054C8  0EF0               	movlw	240
 19085  0054CA  241B               	addwf	??_GPSDay^0,w,c
 19086  0054CC  6E19               	movwf	?_GPSDay^0,c
 19087  0054CE  0EFD               	movlw	253
 19088  0054D0  201C               	addwfc	(??_GPSDay+1)^0,w,c
 19089  0054D2  6E1A               	movwf	(?_GPSDay+1)^0,c
 19090                           
 19091                           ; BSR set to: 1
 19092  0054D4  0012               	return		;funcret
 19093  0054D6                     __end_of_GPSDay:
 19094                           	callstack 0
 19095                           
 19096 ;; *************** function _desliga_uart *****************
 19097 ;; Defined at:
 19098 ;;		line 219 in file "bibliotecas/uart.c"
 19099 ;; Parameters:    Size  Location     Type
 19100 ;;		None
 19101 ;; Auto vars:     Size  Location     Type
 19102 ;;		None
 19103 ;; Return value:  Size  Location     Type
 19104 ;;                  1    wreg      void 
 19105 ;; Registers used:
 19106 ;;		wreg, status,2
 19107 ;; Tracked objects:
 19108 ;;		On entry : 3F/0
 19109 ;;		On exit  : 3F/0
 19110 ;;		Unchanged: 3F/0
 19111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19112 ;;      Params:         0       0       0       0       0       0       0       0       0
 19113 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19114 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19115 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19116 ;;Total ram usage:        0 bytes
 19117 ;; Hardware stack levels used:    1
 19118 ;; Hardware stack levels required when called:    3
 19119 ;; This function calls:
 19120 ;;		Nothing
 19121 ;; This function is called by:
 19122 ;;		_escrita_sdcard
 19123 ;; This function uses a non-reentrant model
 19124 ;;
 19125                           
 19126                           	psect	text101
 19127  00562C                     __ptext101:
 19128                           	callstack 0
 19129  00562C                     _desliga_uart:
 19130                           	callstack 24
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;uart.c: 221: TRISCbits.RC6 = 1;
 19134                           
 19135                           ; BSR set to: 1
 19136                           ;incstack = 0
 19137  00562C  8C94               	bsf	148,6,c	;volatile
 19138                           
 19139                           ;uart.c: 222: TRISCbits.RC7 = 1;
 19140  00562E  8E94               	bsf	148,7,c	;volatile
 19141                           
 19142                           ; BSR set to: 0
 19143                           ;uart.c: 225: TXSTA = 0x00;
 19144  005630  0E00               	movlw	0
 19145  005632  6EAC               	movwf	172,c	;volatile
 19146                           
 19147                           ;uart.c: 227: RCSTA = 0x00;
 19148  005634  0E00               	movlw	0
 19149  005636  6EAB               	movwf	171,c	;volatile
 19150                           
 19151                           ; BSR set to: 0
 19152  005638  0012               	return		;funcret
 19153  00563A                     __end_of_desliga_uart:
 19154                           	callstack 0
 19155                           
 19156 ;; *************** function _desliga_SPI *****************
 19157 ;; Defined at:
 19158 ;;		line 68 in file "bibliotecas/SPI.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;		None
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;		None
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      void 
 19165 ;; Registers used:
 19166 ;;		wreg, status,2
 19167 ;; Tracked objects:
 19168 ;;		On entry : 3F/0
 19169 ;;		On exit  : 3F/0
 19170 ;;		Unchanged: 3F/0
 19171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19172 ;;      Params:         0       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:        0 bytes
 19177 ;; Hardware stack levels used:    1
 19178 ;; Hardware stack levels required when called:    3
 19179 ;; This function calls:
 19180 ;;		Nothing
 19181 ;; This function is called by:
 19182 ;;		_escrita_sdcard
 19183 ;; This function uses a non-reentrant model
 19184 ;;
 19185                           
 19186                           	psect	text102
 19187  00565E                     __ptext102:
 19188                           	callstack 0
 19189  00565E                     _desliga_SPI:
 19190                           	callstack 24
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;SPI.c: 70: SSPSTAT = 0x00;
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;incstack = 0
 19197  00565E  0E00               	movlw	0
 19198  005660  6EC7               	movwf	199,c	;volatile
 19199                           
 19200                           ;SPI.c: 71: SSPCON1 = 0x00;
 19201  005662  0E00               	movlw	0
 19202  005664  6EC6               	movwf	198,c	;volatile
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;SPI.c: 72: SSPCON1bits.SSPEN = 0;
 19206  005666  9AC6               	bcf	198,5,c	;volatile
 19207                           
 19208                           ; BSR set to: 0
 19209  005668  0012               	return		;funcret
 19210  00566A                     __end_of_desliga_SPI:
 19211                           	callstack 0
 19212                           
 19213 ;; *************** function _dados_gps_to_sd *****************
 19214 ;; Defined at:
 19215 ;;		line 212 in file "bibliotecas/GPS.c"
 19216 ;; Parameters:    Size  Location     Type
 19217 ;;		None
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;		None
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      void 
 19222 ;; Registers used:
 19223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:    5
 19236 ;; This function calls:
 19237 ;;		_monta_sd
 19238 ;; This function is called by:
 19239 ;;		_main
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           	psect	text103
 19244  004D3C                     __ptext103:
 19245                           	callstack 0
 19246  004D3C                     _dados_gps_to_sd:
 19247                           	callstack 25
 19248                           
 19249                           ;GPS.c: 214: monta_sd(0, rawTime);
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;incstack = 0
 19253  004D3C  0EC8               	movlw	low _rawTime
 19254  004D3E  6E1D               	movwf	monta_sd@dado^0,c
 19255  004D40  0E01               	movlw	high _rawTime
 19256  004D42  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19257  004D44  0E00               	movlw	0
 19258  004D46  EC36  F014         	call	_monta_sd
 19259                           
 19260                           ;GPS.c: 215: monta_sd(1, rawDate);
 19261  004D4A  0EDA               	movlw	low _rawDate
 19262  004D4C  6E1D               	movwf	monta_sd@dado^0,c
 19263  004D4E  0E01               	movlw	high _rawDate
 19264  004D50  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19265  004D52  0E01               	movlw	1
 19266  004D54  EC36  F014         	call	_monta_sd
 19267                           
 19268                           ;GPS.c: 216: monta_sd(2, rawLatitude);
 19269  004D58  0E79               	movlw	low _rawLatitude
 19270  004D5A  6E1D               	movwf	monta_sd@dado^0,c
 19271  004D5C  0E02               	movlw	high _rawLatitude
 19272  004D5E  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19273  004D60  0E02               	movlw	2
 19274  004D62  EC36  F014         	call	_monta_sd
 19275                           
 19276                           ;GPS.c: 217: monta_sd(3, rawLongitude);
 19277  004D66  0E6C               	movlw	low _rawLongitude
 19278  004D68  6E1D               	movwf	monta_sd@dado^0,c
 19279  004D6A  0E02               	movlw	high _rawLongitude
 19280  004D6C  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19281  004D6E  0E03               	movlw	3
 19282  004D70  EC36  F014         	call	_monta_sd
 19283                           
 19284                           ;GPS.c: 218: monta_sd(5, rawTime);
 19285  004D74  0EC8               	movlw	low _rawTime
 19286  004D76  6E1D               	movwf	monta_sd@dado^0,c
 19287  004D78  0E01               	movlw	high _rawTime
 19288  004D7A  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19289  004D7C  0E05               	movlw	5
 19290  004D7E  EC36  F014         	call	_monta_sd
 19291                           
 19292                           ;GPS.c: 219: monta_sd(6, rawDate);
 19293  004D82  0EDA               	movlw	low _rawDate
 19294  004D84  6E1D               	movwf	monta_sd@dado^0,c
 19295  004D86  0E01               	movlw	high _rawDate
 19296  004D88  6E1E               	movwf	(monta_sd@dado+1)^0,c
 19297  004D8A  0E06               	movlw	6
 19298  004D8C  EC36  F014         	call	_monta_sd
 19299  004D90  0012               	return		;funcret
 19300  004D92                     __end_of_dados_gps_to_sd:
 19301                           	callstack 0
 19302                           
 19303 ;; *************** function _monta_sd *****************
 19304 ;; Defined at:
 19305 ;;		line 298 in file "bibliotecas/SDCard.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  index           1    wreg     unsigned char 
 19308 ;;  dado            2   28[COMRAM] PTR unsigned char 
 19309 ;;		 -> STR_26(7), STR_25(5), rawDate(7), rawLongitude(13), 
 19310 ;;		 -> rawLatitude(13), rawTime(11), 
 19311 ;; Auto vars:     Size  Location     Type
 19312 ;;  index           1   30[COMRAM] unsigned char 
 19313 ;;  i               1   32[COMRAM] unsigned char 
 19314 ;;  size            1   31[COMRAM] unsigned char 
 19315 ;; Return value:  Size  Location     Type
 19316 ;;                  1    wreg      void 
 19317 ;; Registers used:
 19318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19319 ;; Tracked objects:
 19320 ;;		On entry : 0/1
 19321 ;;		On exit  : 0/0
 19322 ;;		Unchanged: 0/0
 19323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19324 ;;      Params:         2       0       0       0       0       0       0       0       0
 19325 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19327 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19328 ;;Total ram usage:        5 bytes
 19329 ;; Hardware stack levels used:    1
 19330 ;; Hardware stack levels required when called:    4
 19331 ;; This function calls:
 19332 ;;		_strlen
 19333 ;; This function is called by:
 19334 ;;		_dados_gps_to_sd
 19335 ;;		_verifica_fence_externo
 19336 ;; This function uses a non-reentrant model
 19337 ;;
 19338                           
 19339                           	psect	text104
 19340  00286C                     __ptext104:
 19341                           	callstack 0
 19342  00286C                     _monta_sd:
 19343                           	callstack 24
 19344                           
 19345                           ;incstack = 0
 19346                           ;monta_sd@index stored from wreg
 19347  00286C  6E1F               	movwf	monta_sd@index^0,c
 19348                           
 19349                           ;SDCard.c: 300: unsigned char i, size;;SDCard.c: 301: size = strlen(dado);
 19350  00286E  C01D  F019         	movff	monta_sd@dado,strlen@s
 19351  002872  C01E  F01A         	movff	monta_sd@dado+1,strlen@s+1
 19352  002876  ECA4  F028         	call	_strlen	;wreg free
 19353  00287A  5019               	movf	?_strlen^0,w,c
 19354  00287C  6E20               	movwf	monta_sd@size^0,c
 19355                           
 19356                           ;SDCard.c: 302: switch(index)
 19357  00287E  D0E2               	goto	l8394
 19358  002880                     l8298:
 19359                           
 19360                           ;SDCard.c: 305: for(i=0; i<6;i++)
 19361  002880  0E00               	movlw	0
 19362  002882  6E21               	movwf	monta_sd@i^0,c
 19363  002884                     l8304:
 19364                           
 19365                           ;SDCard.c: 306: {;SDCard.c: 307: string_dado.hora[i] = *dado;
 19366  002884  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19367  002888  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19368  00288C  6AF8               	clrf	tblptru,c
 19369  00288E  0E07               	movlw	low (_string_dado+7)
 19370  002890  2421               	addwf	monta_sd@i^0,w,c
 19371  002892  6ED9               	movwf	fsr2l,c
 19372  002894  6ADA               	clrf	fsr2h,c
 19373  002896  0E02               	movlw	high (_string_dado+7)
 19374  002898  22DA               	addwfc	fsr2h,f,c
 19375  00289A  0E07               	movlw	(high __ramtop+-1)
 19376  00289C  64F7               	cpfsgt	tblptrh,c
 19377  00289E  D003               	bra	u9127
 19378  0028A0  0008               	tblrd		*
 19379  0028A2  50F5               	movf	tablat,w,c
 19380  0028A4  D005               	bra	u9120
 19381  0028A6                     u9127:
 19382  0028A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 19383  0028AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 19384  0028AE  50E7               	movf	indf1,w,c
 19385  0028B0                     u9120:
 19386  0028B0  6EDF               	movwf	indf2,c
 19387                           
 19388                           ;SDCard.c: 308: dado++;
 19389  0028B2  4A1D               	infsnz	monta_sd@dado^0,f,c
 19390  0028B4  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19391  0028B6  2A21               	incf	monta_sd@i^0,f,c
 19392  0028B8  0E05               	movlw	5
 19393  0028BA  6421               	cpfsgt	monta_sd@i^0,c
 19394  0028BC  D7E3               	goto	l8304
 19395  0028BE  0012               	return	
 19396  0028C0                     l8312:
 19397                           
 19398                           ;SDCard.c: 313: for(i=0; i<6;i++)
 19399  0028C0  0E00               	movlw	0
 19400  0028C2  6E21               	movwf	monta_sd@i^0,c
 19401  0028C4                     l8318:
 19402                           
 19403                           ;SDCard.c: 314: {;SDCard.c: 315: string_dado.data[i] = *dado;
 19404  0028C4  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19405  0028C8  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19406  0028CC  6AF8               	clrf	tblptru,c
 19407  0028CE  0E00               	movlw	low _string_dado
 19408  0028D0  2421               	addwf	monta_sd@i^0,w,c
 19409  0028D2  6ED9               	movwf	fsr2l,c
 19410  0028D4  6ADA               	clrf	fsr2h,c
 19411  0028D6  0E02               	movlw	high _string_dado
 19412  0028D8  22DA               	addwfc	fsr2h,f,c
 19413  0028DA  0E07               	movlw	(high __ramtop+-1)
 19414  0028DC  64F7               	cpfsgt	tblptrh,c
 19415  0028DE  D003               	bra	u9147
 19416  0028E0  0008               	tblrd		*
 19417  0028E2  50F5               	movf	tablat,w,c
 19418  0028E4  D005               	bra	u9140
 19419  0028E6                     u9147:
 19420  0028E6  CFF6 FFE1          	movff	tblptrl,fsr1l
 19421  0028EA  CFF7 FFE2          	movff	tblptrh,fsr1h
 19422  0028EE  50E7               	movf	indf1,w,c
 19423  0028F0                     u9140:
 19424  0028F0  6EDF               	movwf	indf2,c
 19425                           
 19426                           ;SDCard.c: 316: dado++;
 19427  0028F2  4A1D               	infsnz	monta_sd@dado^0,f,c
 19428  0028F4  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19429  0028F6  2A21               	incf	monta_sd@i^0,f,c
 19430  0028F8  0E05               	movlw	5
 19431  0028FA  6421               	cpfsgt	monta_sd@i^0,c
 19432  0028FC  D7E3               	goto	l8318
 19433  0028FE  0012               	return	
 19434  002900                     l8326:
 19435                           
 19436                           ;SDCard.c: 321: for(i=0; i<13;i++)
 19437  002900  0E00               	movlw	0
 19438  002902  6E21               	movwf	monta_sd@i^0,c
 19439  002904                     l8332:
 19440                           
 19441                           ;SDCard.c: 322: {;SDCard.c: 323: string_dado.lt[i] = *dado;
 19442  002904  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19443  002908  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19444  00290C  6AF8               	clrf	tblptru,c
 19445  00290E  0E1A               	movlw	low (_string_dado+26)
 19446  002910  2421               	addwf	monta_sd@i^0,w,c
 19447  002912  6ED9               	movwf	fsr2l,c
 19448  002914  6ADA               	clrf	fsr2h,c
 19449  002916  0E02               	movlw	high (_string_dado+26)
 19450  002918  22DA               	addwfc	fsr2h,f,c
 19451  00291A  0E07               	movlw	(high __ramtop+-1)
 19452  00291C  64F7               	cpfsgt	tblptrh,c
 19453  00291E  D003               	bra	u9167
 19454  002920  0008               	tblrd		*
 19455  002922  50F5               	movf	tablat,w,c
 19456  002924  D005               	bra	u9160
 19457  002926                     u9167:
 19458  002926  CFF6 FFE1          	movff	tblptrl,fsr1l
 19459  00292A  CFF7 FFE2          	movff	tblptrh,fsr1h
 19460  00292E  50E7               	movf	indf1,w,c
 19461  002930                     u9160:
 19462  002930  6EDF               	movwf	indf2,c
 19463                           
 19464                           ;SDCard.c: 324: dado++;
 19465  002932  4A1D               	infsnz	monta_sd@dado^0,f,c
 19466  002934  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19467  002936  2A21               	incf	monta_sd@i^0,f,c
 19468  002938  0E0C               	movlw	12
 19469  00293A  6421               	cpfsgt	monta_sd@i^0,c
 19470  00293C  D7E3               	goto	l8332
 19471  00293E  0012               	return	
 19472  002940                     l8340:
 19473                           
 19474                           ;SDCard.c: 329: for(i=0; i<13;i++)
 19475  002940  0E00               	movlw	0
 19476  002942  6E21               	movwf	monta_sd@i^0,c
 19477  002944                     l8346:
 19478                           
 19479                           ;SDCard.c: 330: {;SDCard.c: 331: string_dado.lo[i] = *dado;
 19480  002944  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19481  002948  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19482  00294C  6AF8               	clrf	tblptru,c
 19483  00294E  0E27               	movlw	low (_string_dado+39)
 19484  002950  2421               	addwf	monta_sd@i^0,w,c
 19485  002952  6ED9               	movwf	fsr2l,c
 19486  002954  6ADA               	clrf	fsr2h,c
 19487  002956  0E02               	movlw	high (_string_dado+39)
 19488  002958  22DA               	addwfc	fsr2h,f,c
 19489  00295A  0E07               	movlw	(high __ramtop+-1)
 19490  00295C  64F7               	cpfsgt	tblptrh,c
 19491  00295E  D003               	bra	u9187
 19492  002960  0008               	tblrd		*
 19493  002962  50F5               	movf	tablat,w,c
 19494  002964  D005               	bra	u9180
 19495  002966                     u9187:
 19496  002966  CFF6 FFE1          	movff	tblptrl,fsr1l
 19497  00296A  CFF7 FFE2          	movff	tblptrh,fsr1h
 19498  00296E  50E7               	movf	indf1,w,c
 19499  002970                     u9180:
 19500  002970  6EDF               	movwf	indf2,c
 19501                           
 19502                           ;SDCard.c: 332: dado++;
 19503  002972  4A1D               	infsnz	monta_sd@dado^0,f,c
 19504  002974  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19505  002976  2A21               	incf	monta_sd@i^0,f,c
 19506  002978  0E0C               	movlw	12
 19507  00297A  6421               	cpfsgt	monta_sd@i^0,c
 19508  00297C  D7E3               	goto	l8346
 19509  00297E  0012               	return	
 19510  002980                     l8354:
 19511                           
 19512                           ;SDCard.c: 337: for(i=0; i<size;i++)
 19513  002980  0E00               	movlw	0
 19514  002982  6E21               	movwf	monta_sd@i^0,c
 19515  002984  D01A               	goto	l8362
 19516  002986                     l8356:
 19517                           
 19518                           ;SDCard.c: 338: {;SDCard.c: 339: string_dado.fence[i] = *dado;
 19519  002986  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19520  00298A  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19521  00298E  6AF8               	clrf	tblptru,c
 19522  002990  0E43               	movlw	low (_string_dado+67)
 19523  002992  2421               	addwf	monta_sd@i^0,w,c
 19524  002994  6ED9               	movwf	fsr2l,c
 19525  002996  6ADA               	clrf	fsr2h,c
 19526  002998  0E02               	movlw	high (_string_dado+67)
 19527  00299A  22DA               	addwfc	fsr2h,f,c
 19528  00299C  0E07               	movlw	(high __ramtop+-1)
 19529  00299E  64F7               	cpfsgt	tblptrh,c
 19530  0029A0  D003               	bra	u9207
 19531  0029A2  0008               	tblrd		*
 19532  0029A4  50F5               	movf	tablat,w,c
 19533  0029A6  D005               	bra	u9200
 19534  0029A8                     u9207:
 19535  0029A8  CFF6 FFE1          	movff	tblptrl,fsr1l
 19536  0029AC  CFF7 FFE2          	movff	tblptrh,fsr1h
 19537  0029B0  50E7               	movf	indf1,w,c
 19538  0029B2                     u9200:
 19539  0029B2  6EDF               	movwf	indf2,c
 19540                           
 19541                           ;SDCard.c: 340: dado++;
 19542  0029B4  4A1D               	infsnz	monta_sd@dado^0,f,c
 19543  0029B6  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19544  0029B8  2A21               	incf	monta_sd@i^0,f,c
 19545  0029BA                     l8362:
 19546  0029BA  5020               	movf	monta_sd@size^0,w,c
 19547  0029BC  5C21               	subwf	monta_sd@i^0,w,c
 19548  0029BE  B0D8               	btfsc	status,0,c
 19549  0029C0  0012               	return	
 19550  0029C2  D7E1               	goto	l8356
 19551  0029C4                     l8364:
 19552                           
 19553                           ;SDCard.c: 345: for(i=0; i<4;i++)
 19554  0029C4  0E00               	movlw	0
 19555  0029C6  6E21               	movwf	monta_sd@i^0,c
 19556  0029C8                     l8370:
 19557                           
 19558                           ;SDCard.c: 346: {;SDCard.c: 347: string_dado.hora_name[i] = *dado;
 19559  0029C8  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19560  0029CC  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19561  0029D0  6AF8               	clrf	tblptru,c
 19562  0029D2  0E16               	movlw	low (_string_dado+22)
 19563  0029D4  2421               	addwf	monta_sd@i^0,w,c
 19564  0029D6  6ED9               	movwf	fsr2l,c
 19565  0029D8  6ADA               	clrf	fsr2h,c
 19566  0029DA  0E02               	movlw	high (_string_dado+22)
 19567  0029DC  22DA               	addwfc	fsr2h,f,c
 19568  0029DE  0E07               	movlw	(high __ramtop+-1)
 19569  0029E0  64F7               	cpfsgt	tblptrh,c
 19570  0029E2  D003               	bra	u9227
 19571  0029E4  0008               	tblrd		*
 19572  0029E6  50F5               	movf	tablat,w,c
 19573  0029E8  D005               	bra	u9220
 19574  0029EA                     u9227:
 19575  0029EA  CFF6 FFE1          	movff	tblptrl,fsr1l
 19576  0029EE  CFF7 FFE2          	movff	tblptrh,fsr1h
 19577  0029F2  50E7               	movf	indf1,w,c
 19578  0029F4                     u9220:
 19579  0029F4  6EDF               	movwf	indf2,c
 19580                           
 19581                           ;SDCard.c: 348: dado++;
 19582  0029F6  4A1D               	infsnz	monta_sd@dado^0,f,c
 19583  0029F8  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19584  0029FA  2A21               	incf	monta_sd@i^0,f,c
 19585  0029FC  0E03               	movlw	3
 19586  0029FE  6421               	cpfsgt	monta_sd@i^0,c
 19587  002A00  D7E3               	goto	l8370
 19588  002A02  0012               	return	
 19589  002A04                     l8378:
 19590                           
 19591                           ;SDCard.c: 354: for(i=0; i<4;i++)
 19592  002A04  0E00               	movlw	0
 19593  002A06  6E21               	movwf	monta_sd@i^0,c
 19594  002A08                     l8384:
 19595                           
 19596                           ;SDCard.c: 355: {;SDCard.c: 356: string_dado.data_name[i] = *dado;
 19597  002A08  C01D  FFF6         	movff	monta_sd@dado,tblptrl
 19598  002A0C  C01E  FFF7         	movff	monta_sd@dado+1,tblptrh
 19599  002A10  6AF8               	clrf	tblptru,c
 19600  002A12  0E12               	movlw	low (_string_dado+18)
 19601  002A14  2421               	addwf	monta_sd@i^0,w,c
 19602  002A16  6ED9               	movwf	fsr2l,c
 19603  002A18  6ADA               	clrf	fsr2h,c
 19604  002A1A  0E02               	movlw	high (_string_dado+18)
 19605  002A1C  22DA               	addwfc	fsr2h,f,c
 19606  002A1E  0E07               	movlw	(high __ramtop+-1)
 19607  002A20  64F7               	cpfsgt	tblptrh,c
 19608  002A22  D003               	bra	u9247
 19609  002A24  0008               	tblrd		*
 19610  002A26  50F5               	movf	tablat,w,c
 19611  002A28  D005               	bra	u9240
 19612  002A2A                     u9247:
 19613  002A2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 19614  002A2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 19615  002A32  50E7               	movf	indf1,w,c
 19616  002A34                     u9240:
 19617  002A34  6EDF               	movwf	indf2,c
 19618                           
 19619                           ;SDCard.c: 357: dado++;
 19620  002A36  4A1D               	infsnz	monta_sd@dado^0,f,c
 19621  002A38  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 19622  002A3A  2A21               	incf	monta_sd@i^0,f,c
 19623  002A3C  0E03               	movlw	3
 19624  002A3E  6421               	cpfsgt	monta_sd@i^0,c
 19625  002A40  D7E3               	goto	l8384
 19626  002A42  0012               	return	
 19627  002A44                     l8394:
 19628  002A44  501F               	movf	monta_sd@index^0,w,c
 19629                           
 19630                           ; Switch size 1, requested type "simple"
 19631                           ; Number of cases is 7, Range of values is 0 to 6
 19632                           ; switch strategies available:
 19633                           ; Name         Instructions Cycles
 19634                           ; simple_byte           22    12 (average)
 19635                           ;	Chosen strategy is simple_byte
 19636  002A46  0A00               	xorlw	0	; case 0
 19637  002A48  B4D8               	btfsc	status,2,c
 19638  002A4A  D71A               	goto	l8298
 19639  002A4C  0A01               	xorlw	1	; case 1
 19640  002A4E  B4D8               	btfsc	status,2,c
 19641  002A50  D737               	goto	l8312
 19642  002A52  0A03               	xorlw	3	; case 2
 19643  002A54  B4D8               	btfsc	status,2,c
 19644  002A56  D754               	goto	l8326
 19645  002A58  0A01               	xorlw	1	; case 3
 19646  002A5A  B4D8               	btfsc	status,2,c
 19647  002A5C  D771               	goto	l8340
 19648  002A5E  0A07               	xorlw	7	; case 4
 19649  002A60  B4D8               	btfsc	status,2,c
 19650  002A62  D78E               	goto	l8354
 19651  002A64  0A01               	xorlw	1	; case 5
 19652  002A66  B4D8               	btfsc	status,2,c
 19653  002A68  D7AD               	goto	l8364
 19654  002A6A  0A03               	xorlw	3	; case 6
 19655  002A6C  A4D8               	btfss	status,2,c
 19656  002A6E  0012               	return	
 19657  002A70  D7C9               	goto	l8378
 19658  002A72                     __end_of_monta_sd:
 19659                           	callstack 0
 19660                           
 19661 ;; *************** function _strlen *****************
 19662 ;; Defined at:
 19663 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;  s               2   24[COMRAM] PTR const unsigned char 
 19666 ;;		 -> STR_26(7), STR_25(5), rawDate(7), rawLongitude(13), 
 19667 ;;		 -> rawLatitude(13), rawTime(11), 
 19668 ;; Auto vars:     Size  Location     Type
 19669 ;;  cp              2   26[COMRAM] PTR const unsigned char 
 19670 ;;		 -> STR_26(7), STR_25(5), rawDate(7), rawLongitude(13), 
 19671 ;;		 -> rawLatitude(13), rawTime(11), 
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  2   24[COMRAM] unsigned int 
 19674 ;; Registers used:
 19675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/1
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19681 ;;      Params:         2       0       0       0       0       0       0       0       0
 19682 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19684 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19685 ;;Total ram usage:        4 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:    3
 19688 ;; This function calls:
 19689 ;;		Nothing
 19690 ;; This function is called by:
 19691 ;;		_monta_sd
 19692 ;; This function uses a non-reentrant model
 19693 ;;
 19694                           
 19695                           	psect	text105
 19696  005148                     __ptext105:
 19697                           	callstack 0
 19698  005148                     _strlen:
 19699                           	callstack 24
 19700                           
 19701                           ;incstack = 0
 19702  005148  C019  F01B         	movff	strlen@s,strlen@cp
 19703  00514C  C01A  F01C         	movff	strlen@s+1,strlen@cp+1
 19704  005150  D002               	goto	l8208
 19705  005152                     l8206:
 19706  005152  4A1B               	infsnz	strlen@cp^0,f,c
 19707  005154  2A1C               	incf	(strlen@cp+1)^0,f,c
 19708  005156                     l8208:
 19709  005156  C01B  FFF6         	movff	strlen@cp,tblptrl
 19710  00515A  C01C  FFF7         	movff	strlen@cp+1,tblptrh
 19711  00515E  6AF8               	clrf	tblptru,c
 19712  005160  0E07               	movlw	(high __ramtop+-1)
 19713  005162  64F7               	cpfsgt	tblptrh,c
 19714  005164  D003               	bra	u8927
 19715  005166  0008               	tblrd		*
 19716  005168  50F5               	movf	tablat,w,c
 19717  00516A  D005               	bra	u8920
 19718  00516C                     u8927:
 19719  00516C  CFF6 FFE1          	movff	tblptrl,fsr1l
 19720  005170  CFF7 FFE2          	movff	tblptrh,fsr1h
 19721  005174  50E7               	movf	indf1,w,c
 19722  005176                     u8920:
 19723  005176  0900               	iorlw	0
 19724  005178  A4D8               	btfss	status,2,c
 19725  00517A  D7EB               	goto	l8206
 19726  00517C  5019               	movf	strlen@s^0,w,c
 19727  00517E  5C1B               	subwf	strlen@cp^0,w,c
 19728  005180  6E19               	movwf	?_strlen^0,c
 19729  005182  501A               	movf	(strlen@s+1)^0,w,c
 19730  005184  581C               	subwfb	(strlen@cp+1)^0,w,c
 19731  005186  6E1A               	movwf	(?_strlen+1)^0,c
 19732  005188  0012               	return		;funcret
 19733  00518A                     __end_of_strlen:
 19734                           	callstack 0
 19735                           
 19736 ;; *************** function _isr *****************
 19737 ;; Defined at:
 19738 ;;		line 107 in file "main.c"
 19739 ;; Parameters:    Size  Location     Type
 19740 ;;		None
 19741 ;; Auto vars:     Size  Location     Type
 19742 ;;  cont            1   23[COMRAM] unsigned char 
 19743 ;; Return value:  Size  Location     Type
 19744 ;;                  1    wreg      void 
 19745 ;; Registers used:
 19746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19747 ;; Tracked objects:
 19748 ;;		On entry : 0/0
 19749 ;;		On exit  : 0/0
 19750 ;;		Unchanged: 0/0
 19751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19752 ;;      Params:         0       0       0       0       0       0       0       0       0
 19753 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19754 ;;      Temps:         12       0       0       0       0       0       0       0       0
 19755 ;;      Totals:        13       0       0       0       0       0       0       0       0
 19756 ;;Total ram usage:       13 bytes
 19757 ;; Hardware stack levels used:    1
 19758 ;; Hardware stack levels required when called:    2
 19759 ;; This function calls:
 19760 ;;		_GPSRead
 19761 ;;		_recebe_dado_uart
 19762 ;;		i2_write_timer_zero
 19763 ;; This function is called by:
 19764 ;;		Interrupt level 2
 19765 ;; This function uses a non-reentrant model
 19766 ;;
 19767                           
 19768                           	psect	intcode
 19769  000008                     __pintcode:
 19770                           	callstack 0
 19771  000008                     _isr:
 19772                           	callstack 13
 19773                           
 19774                           ;incstack = 0
 19775  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19776  00000A  EDE2  F01C         	call	int_func,f	;refresh shadow registers
 19777                           
 19778                           	psect	intcode_body
 19779  0039C4                     __pintcode_body:
 19780                           	callstack 13
 19781  0039C4                     int_func:
 19782                           	callstack 13
 19783  0039C4  0006               	pop		; remove dummy address from shadow register refresh
 19784  0039C6  CFE1 F00E          	movff	fsr1l,??_isr+2
 19785  0039CA  CFE2 F00F          	movff	fsr1h,??_isr+3
 19786  0039CE  CFD9 F010          	movff	fsr2l,??_isr+4
 19787  0039D2  CFDA F011          	movff	fsr2h,??_isr+5
 19788  0039D6  CFF3 F012          	movff	prodl,??_isr+6
 19789  0039DA  CFF4 F013          	movff	prodh,??_isr+7
 19790  0039DE  CFF6 F014          	movff	tblptrl,??_isr+8
 19791  0039E2  CFF7 F015          	movff	tblptrh,??_isr+9
 19792  0039E6  CFF8 F016          	movff	tblptru,??_isr+10
 19793  0039EA  CFF5 F017          	movff	tablat,??_isr+11
 19794                           
 19795                           ;main.c: 109: unsigned char cont;;main.c: 112: if (PIE1bits.RCIE && PIR1bits.RCIF)
 19796  0039EE  BA9D               	btfsc	157,5,c	;volatile
 19797  0039F0  AA9E               	btfss	158,5,c	;volatile
 19798  0039F2  D014               	goto	i2l12272
 19799                           
 19800                           ;main.c: 113: {;main.c: 114: PIR1bits.RCIF = 0;
 19801  0039F4  9A9E               	bcf	158,5,c	;volatile
 19802                           
 19803                           ;main.c: 115: data_uart_recebe = recebe_dado_uart();
 19804  0039F6  ECF6  F02A         	call	_recebe_dado_uart	;wreg free
 19805  0039FA  6E3E               	movwf	_data_uart_recebe^0,c
 19806                           
 19807                           ;main.c: 116: GPSRead(data_uart_recebe);
 19808  0039FC  503E               	movf	_data_uart_recebe^0,w,c
 19809  0039FE  EC1E  F00E         	call	_GPSRead
 19810                           
 19811                           ;main.c: 117: PORTBbits.RB2 = !PORTBbits.RB2;
 19812  003A02  B481               	btfsc	129,2,c	;volatile
 19813  003A04  D003               	goto	i2u1536_40
 19814  003A06  6A0C               	clrf	??_isr^0,c
 19815  003A08  2A0C               	incf	??_isr^0,f,c
 19816  003A0A  D001               	goto	i2u1537_48
 19817  003A0C                     i2u1536_40:
 19818  003A0C  6A0C               	clrf	??_isr^0,c
 19819  003A0E                     i2u1537_48:
 19820  003A0E  460C               	rlncf	??_isr^0,f,c
 19821  003A10  460C               	rlncf	??_isr^0,f,c
 19822  003A12  5081               	movf	129,w,c	;volatile
 19823  003A14  180C               	xorwf	??_isr^0,w,c
 19824  003A16  0BFB               	andlw	-5
 19825  003A18  180C               	xorwf	??_isr^0,w,c
 19826  003A1A  6E81               	movwf	129,c	;volatile
 19827  003A1C                     i2l12272:
 19828                           
 19829                           ;main.c: 118: };main.c: 121: unsigned char cont;;main.c: 123: if (TMR0IF && T0IF)
 19830  003A1C  B4F2               	btfsc	4082,2,c	;volatile
 19831  003A1E  A4F2               	btfss	4082,2,c	;volatile
 19832  003A20  D04B               	goto	i2l12314
 19833                           
 19834                           ;main.c: 124: {;main.c: 125: INTCONbits.TMR0IF = 0;
 19835  003A22  94F2               	bcf	242,2,c	;volatile
 19836                           
 19837                           ;main.c: 126: sinaliza_int_timer = 1;
 19838  003A24  0E01               	movlw	1
 19839  003A26  6E3D               	movwf	_sinaliza_int_timer^0,c
 19840                           
 19841                           ;main.c: 128: for(cont= 0; cont<4;cont++)
 19842  003A28  0E00               	movlw	0
 19843  003A2A  6E18               	movwf	isr@cont^0,c
 19844  003A2C                     i2l12284:
 19845                           
 19846                           ;main.c: 129: {;main.c: 130: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 19847  003A2C  5018               	movf	isr@cont^0,w,c
 19848  003A2E  0D02               	mullw	2
 19849  003A30  0E00               	movlw	low _tempo_tarefa
 19850  003A32  24F3               	addwf	243,w,c
 19851  003A34  6ED9               	movwf	fsr2l,c
 19852  003A36  0E01               	movlw	high _tempo_tarefa
 19853  003A38  20F4               	addwfc	prodh,w,c
 19854  003A3A  6EDA               	movwf	fsr2h,c
 19855  003A3C  50DE               	movf	postinc2,w,c
 19856  003A3E  10DE               	iorwf	postinc2,w,c
 19857  003A40  B4D8               	btfsc	status,2,c
 19858  003A42  D00B               	goto	i2l12288
 19859  003A44  5018               	movf	isr@cont^0,w,c
 19860  003A46  0D02               	mullw	2
 19861  003A48  0E00               	movlw	low _tempo_tarefa
 19862  003A4A  24F3               	addwf	243,w,c
 19863  003A4C  6ED9               	movwf	fsr2l,c
 19864  003A4E  0E01               	movlw	high _tempo_tarefa
 19865  003A50  20F4               	addwfc	prodh,w,c
 19866  003A52  6EDA               	movwf	fsr2h,c
 19867  003A54  06DE               	decf	postinc2,f,c
 19868  003A56  0E00               	movlw	0
 19869  003A58  5ADD               	subwfb	postdec2,f,c
 19870  003A5A                     i2l12288:
 19871  003A5A  2A18               	incf	isr@cont^0,f,c
 19872  003A5C  0E03               	movlw	3
 19873  003A5E  6418               	cpfsgt	isr@cont^0,c
 19874  003A60  D7E5               	goto	i2l12284
 19875                           
 19876                           ;main.c: 132: };main.c: 133: if(time_sd > 0) time_sd--;
 19877  003A62  0100               	movlb	0	; () banked
 19878  003A64  51FC               	movf	_time_sd& (0+255),w,b
 19879  003A66  11FD               	iorwf	(_time_sd+1)& (0+255),w,b
 19880  003A68  B4D8               	btfsc	status,2,c
 19881  003A6A  D003               	goto	i2l12296
 19882                           
 19883                           ; BSR set to: 0
 19884  003A6C  07FC               	decf	_time_sd& (0+255),f,b
 19885  003A6E  A0D8               	btfss	status,0,c
 19886  003A70  07FD               	decf	(_time_sd+1)& (0+255),f,b
 19887  003A72                     i2l12296:
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;main.c: 134: if(time_atualizacao > 0) time_atualizacao--;
 19891  003A72  5036               	movf	_time_atualizacao^0,w,c
 19892  003A74  1037               	iorwf	(_time_atualizacao+1)^0,w,c
 19893  003A76  B4D8               	btfsc	status,2,c
 19894  003A78  D003               	goto	i2l12300
 19895                           
 19896                           ; BSR set to: 0
 19897  003A7A  0636               	decf	_time_atualizacao^0,f,c
 19898  003A7C  A0D8               	btfss	status,0,c
 19899  003A7E  0637               	decf	(_time_atualizacao+1)^0,f,c
 19900  003A80                     i2l12300:
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;main.c: 135: if(time_recovery>0) time_recovery--;
 19904  003A80  51FA               	movf	_time_recovery& (0+255),w,b
 19905  003A82  11FB               	iorwf	(_time_recovery+1)& (0+255),w,b
 19906  003A84  B4D8               	btfsc	status,2,c
 19907  003A86  D003               	goto	i2l12304
 19908                           
 19909                           ; BSR set to: 0
 19910  003A88  07FA               	decf	_time_recovery& (0+255),f,b
 19911  003A8A  A0D8               	btfss	status,0,c
 19912  003A8C  07FB               	decf	(_time_recovery+1)& (0+255),f,b
 19913  003A8E                     i2l12304:
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;main.c: 136: if(tarefa_em_execucao == 1)
 19917  003A8E  043C               	decf	_tarefa_em_execucao^0,w,c	;volatile
 19918  003A90  A4D8               	btfss	status,2,c
 19919  003A92  D00C               	goto	i2l12312
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;main.c: 137: {;main.c: 138: timeout_tarefa--;
 19923  003A94  0101               	movlb	1	; () banked
 19924  003A96  071A               	decf	_timeout_tarefa& (0+255),f,b
 19925  003A98  A0D8               	btfss	status,0,c
 19926  003A9A  071B               	decf	(_timeout_tarefa+1)& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 1
 19929                           ;main.c: 139: if(!timeout_tarefa)
 19930  003A9C  511A               	movf	_timeout_tarefa& (0+255),w,b
 19931  003A9E  111B               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 19932  003AA0  A4D8               	btfss	status,2,c
 19933  003AA2  D004               	goto	i2l12312
 19934                           
 19935                           ; BSR set to: 1
 19936                           ;main.c: 140: {;main.c: 142: PCLATH = 0;
 19937  003AA4  0E00               	movlw	0
 19938  003AA6  6EFA               	movwf	250,c	;volatile
 19939                           
 19940                           ;main.c: 143: PCL = 0;
 19941  003AA8  0E00               	movlw	0
 19942  003AAA  6EF9               	movwf	249,c	;volatile
 19943  003AAC                     i2l12312:
 19944                           
 19945                           ;main.c: 144: };main.c: 145: };main.c: 149: write_timer_zero(0x45);
 19946  003AAC  0E00               	movlw	0
 19947  003AAE  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 19948  003AB0  0E45               	movlw	69
 19949  003AB2  6E01               	movwf	i2write_timer_zero@timer0^0,c
 19950  003AB4  EC3F  F02B         	call	i2_write_timer_zero	;wreg free
 19951  003AB8                     i2l12314:
 19952                           
 19953                           ;main.c: 150: };main.c: 152: if (INT0IF && INT0IE)
 19954  003AB8  B2F2               	btfsc	4082,1,c	;volatile
 19955  003ABA  A8F2               	btfss	4082,4,c	;volatile
 19956  003ABC  D001               	goto	i2l1378
 19957                           
 19958                           ;main.c: 153: {;main.c: 154: INT0IF = 0;
 19959  003ABE  92F2               	bcf	4082,1,c	;volatile
 19960  003AC0                     i2l1378:
 19961  003AC0  C017  FFF5         	movff	??_isr+11,tablat
 19962  003AC4  C016  FFF8         	movff	??_isr+10,tblptru
 19963  003AC8  C015  FFF7         	movff	??_isr+9,tblptrh
 19964  003ACC  C014  FFF6         	movff	??_isr+8,tblptrl
 19965  003AD0  C013  FFF4         	movff	??_isr+7,prodh
 19966  003AD4  C012  FFF3         	movff	??_isr+6,prodl
 19967  003AD8  C011  FFDA         	movff	??_isr+5,fsr2h
 19968  003ADC  C010  FFD9         	movff	??_isr+4,fsr2l
 19969  003AE0  C00F  FFE2         	movff	??_isr+3,fsr1h
 19970  003AE4  C00E  FFE1         	movff	??_isr+2,fsr1l
 19971  003AE8  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19972  003AEA  0011               	retfie		f
 19973  003AEC                     __end_of_isr:
 19974                           	callstack 0
 19975                           
 19976 ;; *************** function i2_write_timer_zero *****************
 19977 ;; Defined at:
 19978 ;;		line 134 in file "bibliotecas/hardware.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  timer0          2    0[COMRAM] unsigned int 
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;		None
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		None
 19987 ;; Tracked objects:
 19988 ;;		On entry : 3E/0
 19989 ;;		On exit  : 3E/0
 19990 ;;		Unchanged: 3E/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19992 ;;      Params:         2       0       0       0       0       0       0       0       0
 19993 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19995 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19996 ;;Total ram usage:        2 bytes
 19997 ;; Hardware stack levels used:    1
 19998 ;; This function calls:
 19999 ;;		Nothing
 20000 ;; This function is called by:
 20001 ;;		_isr
 20002 ;; This function uses a non-reentrant model
 20003 ;;
 20004                           
 20005                           	psect	text107
 20006  00567E                     __ptext107:
 20007                           	callstack 0
 20008  00567E                     i2_write_timer_zero:
 20009                           	callstack 14
 20010                           
 20011                           ;hardware.c: 142: TMR0 = timer0;
 20012                           
 20013                           ;incstack = 0
 20014  00567E  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 20015  005682  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 20016  005686  0012               	return		;funcret
 20017  005688                     __end_ofi2_write_timer_zero:
 20018                           	callstack 0
 20019                           
 20020 ;; *************** function _recebe_dado_uart *****************
 20021 ;; Defined at:
 20022 ;;		line 138 in file "bibliotecas/uart.c"
 20023 ;; Parameters:    Size  Location     Type
 20024 ;;		None
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;		None
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  1    wreg      unsigned char 
 20029 ;; Registers used:
 20030 ;;		wreg, status,2
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20036 ;;      Params:         0       0       0       0       0       0       0       0       0
 20037 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20039 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20040 ;;Total ram usage:        0 bytes
 20041 ;; Hardware stack levels used:    1
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		_isr
 20046 ;; This function uses a non-reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text108
 20050  0055EC                     __ptext108:
 20051                           	callstack 0
 20052  0055EC                     _recebe_dado_uart:
 20053                           	callstack 14
 20054                           
 20055                           ;uart.c: 140: while(RCIF==0);
 20056                           
 20057                           ;incstack = 0
 20058  0055EC  AA9E               	btfss	3998,5,c	;volatile
 20059  0055EE  D7FE               	goto	_recebe_dado_uart
 20060                           
 20061                           ;uart.c: 141: if(RCSTAbits.OERR)
 20062  0055F0  A2AB               	btfss	171,1,c	;volatile
 20063  0055F2  D003               	goto	i2l9290
 20064                           
 20065                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 20066  0055F4  98AB               	bcf	4011,4,c	;volatile
 20067                           
 20068                           ;uart.c: 144: __nop();
 20069  0055F6  F000               	nop	
 20070                           
 20071                           ;uart.c: 145: CREN=1;
 20072  0055F8  88AB               	bsf	4011,4,c	;volatile
 20073  0055FA                     i2l9290:
 20074                           
 20075                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 20076  0055FA  50AE               	movf	174,w,c	;volatile
 20077  0055FC  0012               	return		;funcret
 20078  0055FE                     __end_of_recebe_dado_uart:
 20079                           	callstack 0
 20080                           
 20081 ;; *************** function _GPSRead *****************
 20082 ;; Defined at:
 20083 ;;		line 43 in file "bibliotecas/GPS.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;  buff            1    wreg     unsigned char 
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;  buff            1    9[COMRAM] unsigned char 
 20088 ;;  c               1   10[COMRAM] unsigned char 
 20089 ;; Return value:  Size  Location     Type
 20090 ;;                  2  348[None  ] int 
 20091 ;; Registers used:
 20092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20093 ;; Tracked objects:
 20094 ;;		On entry : 0/0
 20095 ;;		On exit  : 0/0
 20096 ;;		Unchanged: 0/0
 20097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20098 ;;      Params:         0       0       0       0       0       0       0       0       0
 20099 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20101 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20102 ;;Total ram usage:        2 bytes
 20103 ;; Hardware stack levels used:    1
 20104 ;; Hardware stack levels required when called:    1
 20105 ;; This function calls:
 20106 ;;		_strcmp
 20107 ;;		_stringcpy
 20108 ;; This function is called by:
 20109 ;;		_isr
 20110 ;; This function uses a non-reentrant model
 20111 ;;
 20112                           
 20113                           	psect	text109
 20114  001C3C                     __ptext109:
 20115                           	callstack 0
 20116  001C3C                     _GPSRead:
 20117                           	callstack 13
 20118                           
 20119                           ;incstack = 0
 20120                           ;GPSRead@buff stored from wreg
 20121  001C3C  6E0A               	movwf	GPSRead@buff^0,c
 20122                           
 20123                           ;GPS.c: 45: uint8_t c = buff;
 20124  001C3E  C00A  F00B         	movff	GPSRead@buff,GPSRead@c
 20125                           
 20126                           ;GPS.c: 47: switch(c) {
 20127  001C42  D152               	goto	i2l12114
 20128  001C44                     i2l11996:
 20129                           
 20130                           ;GPS.c: 49: if(SentenceType == 1)
 20131  001C44  0444               	decf	_SentenceType^0,w,c
 20132  001C46  A4D8               	btfss	status,2,c
 20133  001C48  D005               	goto	i2l12000
 20134                           
 20135                           ;GPS.c: 50: GPRMC_ok = 1;
 20136  001C4A  0E00               	movlw	0
 20137  001C4C  0101               	movlb	1	; () banked
 20138  001C4E  6F21               	movwf	(_GPRMC_ok+1)& (0+255),b
 20139  001C50  0E01               	movlw	1
 20140  001C52  6F20               	movwf	_GPRMC_ok& (0+255),b
 20141  001C54                     i2l12000:
 20142                           
 20143                           ;GPS.c: 51: if(SentenceType == 2)
 20144  001C54  0E02               	movlw	2
 20145  001C56  1844               	xorwf	_SentenceType^0,w,c
 20146  001C58  A4D8               	btfss	status,2,c
 20147  001C5A  D005               	goto	i2l12004
 20148                           
 20149                           ;GPS.c: 52: GPGGA_ok = 1;
 20150  001C5C  0E00               	movlw	0
 20151  001C5E  0101               	movlb	1	; () banked
 20152  001C60  6F1F               	movwf	(_GPGGA_ok+1)& (0+255),b
 20153  001C62  0E01               	movlw	1
 20154  001C64  6F1E               	movwf	_GPGGA_ok& (0+255),b
 20155  001C66                     i2l12004:
 20156                           
 20157                           ;GPS.c: 53: if(GPRMC_ok && GPGGA_ok) {
 20158  001C66  0101               	movlb	1	; () banked
 20159  001C68  5120               	movf	_GPRMC_ok& (0+255),w,b
 20160  001C6A  1121               	iorwf	(_GPRMC_ok+1)& (0+255),w,b
 20161  001C6C  B4D8               	btfsc	status,2,c
 20162  001C6E  0012               	return	
 20163                           
 20164                           ; BSR set to: 1
 20165  001C70  511E               	movf	_GPGGA_ok& (0+255),w,b
 20166  001C72  111F               	iorwf	(_GPGGA_ok+1)& (0+255),w,b
 20167  001C74  B4D8               	btfsc	status,2,c
 20168  001C76  0012               	return	
 20169                           
 20170                           ; BSR set to: 1
 20171                           ;GPS.c: 54: GPRMC_ok = GPGGA_ok = 0;
 20172  001C78  0E00               	movlw	0
 20173  001C7A  6F1F               	movwf	(_GPGGA_ok+1)& (0+255),b
 20174  001C7C  0E00               	movlw	0
 20175  001C7E  6F1E               	movwf	_GPGGA_ok& (0+255),b
 20176  001C80  C11E  F120         	movff	_GPGGA_ok,_GPRMC_ok
 20177  001C84  C11F  F121         	movff	_GPGGA_ok+1,_GPRMC_ok+1
 20178  001C88  0012               	return	
 20179  001C8A                     i2l12012:
 20180                           
 20181                           ;GPS.c: 60: Term = char_number = 0;
 20182  001C8A  0E00               	movlw	0
 20183  001C8C  6E45               	movwf	_char_number^0,c
 20184  001C8E  C045  F043         	movff	_char_number,_Term
 20185                           
 20186                           ;GPS.c: 61: break;
 20187  001C92  0012               	return	
 20188  001C94                     i2l12014:
 20189                           
 20190                           ;GPS.c: 64: buffer[char_number] = '\0';
 20191  001C94  0EBC               	movlw	low _buffer
 20192  001C96  2445               	addwf	_char_number^0,w,c
 20193  001C98  6ED9               	movwf	fsr2l,c
 20194  001C9A  6ADA               	clrf	fsr2h,c
 20195  001C9C  0E01               	movlw	high _buffer
 20196  001C9E  22DA               	addwfc	fsr2h,f,c
 20197  001CA0  0E00               	movlw	0
 20198  001CA2  6EDF               	movwf	indf2,c
 20199                           
 20200                           ;GPS.c: 65: if(Term == 0) {
 20201  001CA4  5043               	movf	_Term^0,w,c
 20202  001CA6  A4D8               	btfss	status,2,c
 20203  001CA8  D030               	goto	i2l12030
 20204                           
 20205                           ;GPS.c: 66: stringcpy(buffer, sentence, 0);
 20206  001CAA  0EBC               	movlw	low _buffer
 20207  001CAC  6E01               	movwf	stringcpy@str1^0,c
 20208  001CAE  0E01               	movlw	high _buffer
 20209  001CB0  6E02               	movwf	(stringcpy@str1+1)^0,c
 20210  001CB2  0EED               	movlw	low _sentence
 20211  001CB4  6E03               	movwf	stringcpy@str2^0,c
 20212  001CB6  0E01               	movlw	high _sentence
 20213  001CB8  6E04               	movwf	(stringcpy@str2+1)^0,c
 20214  001CBA  0E00               	movlw	0
 20215  001CBC  6E06               	movwf	(stringcpy@dir+1)^0,c
 20216  001CBE  0E00               	movlw	0
 20217  001CC0  6E05               	movwf	stringcpy@dir^0,c
 20218  001CC2  ECD8  F027         	call	_stringcpy	;wreg free
 20219                           
 20220                           ;GPS.c: 67: if(strcmp(sentence, "GPRMC") == 0)
 20221  001CC6  0EED               	movlw	low _sentence
 20222  001CC8  6E01               	movwf	strcmp@s1^0,c
 20223  001CCA  0E01               	movlw	high _sentence
 20224  001CCC  6E02               	movwf	(strcmp@s1+1)^0,c
 20225  001CCE  0E54               	movlw	low STR_5
 20226  001CD0  6E03               	movwf	strcmp@s2^0,c
 20227  001CD2  0E62               	movlw	high STR_5
 20228  001CD4  6E04               	movwf	(strcmp@s2+1)^0,c
 20229  001CD6  EC6B  F027         	call	_strcmp	;wreg free
 20230  001CDA  5001               	movf	?_strcmp^0,w,c
 20231  001CDC  1002               	iorwf	(?_strcmp+1)^0,w,c
 20232  001CDE  A4D8               	btfss	status,2,c
 20233  001CE0  D002               	goto	i2l12024
 20234                           
 20235                           ;GPS.c: 68: SentenceType = 1;
 20236  001CE2  0E01               	movlw	1
 20237  001CE4  D011               	goto	L7
 20238  001CE6                     i2l12024:
 20239                           
 20240                           ;GPS.c: 69: else if(strcmp(sentence, "GPGGA") == 0)
 20241  001CE6  0EED               	movlw	low _sentence
 20242  001CE8  6E01               	movwf	strcmp@s1^0,c
 20243  001CEA  0E01               	movlw	high _sentence
 20244  001CEC  6E02               	movwf	(strcmp@s1+1)^0,c
 20245  001CEE  0E4E               	movlw	low STR_6
 20246  001CF0  6E03               	movwf	strcmp@s2^0,c
 20247  001CF2  0E62               	movlw	high STR_6
 20248  001CF4  6E04               	movwf	(strcmp@s2+1)^0,c
 20249  001CF6  EC6B  F027         	call	_strcmp	;wreg free
 20250  001CFA  5001               	movf	?_strcmp^0,w,c
 20251  001CFC  1002               	iorwf	(?_strcmp+1)^0,w,c
 20252  001CFE  A4D8               	btfss	status,2,c
 20253  001D00  D002               	goto	i2l12028
 20254                           
 20255                           ;GPS.c: 70: SentenceType = 2;
 20256  001D02  0E02               	movlw	2
 20257  001D04  D001               	goto	L7
 20258  001D06                     i2l12028:
 20259                           
 20260                           ;GPS.c: 71: else;GPS.c: 72: SentenceType = 3;
 20261  001D06  0E03               	movlw	3
 20262  001D08                     L7:
 20263  001D08  6E44               	movwf	_SentenceType^0,c
 20264  001D0A                     i2l12030:
 20265                           
 20266                           ;GPS.c: 73: };GPS.c: 76: if(Term == 1 && SentenceType == 1) {
 20267  001D0A  0443               	decf	_Term^0,w,c
 20268  001D0C  A4D8               	btfss	status,2,c
 20269  001D0E  D011               	goto	i2l12036
 20270  001D10  0444               	decf	_SentenceType^0,w,c
 20271  001D12  A4D8               	btfss	status,2,c
 20272  001D14  D00E               	goto	i2l12036
 20273                           
 20274                           ;GPS.c: 77: stringcpy(buffer, rawTime, 0);
 20275  001D16  0EBC               	movlw	low _buffer
 20276  001D18  6E01               	movwf	stringcpy@str1^0,c
 20277  001D1A  0E01               	movlw	high _buffer
 20278  001D1C  6E02               	movwf	(stringcpy@str1+1)^0,c
 20279  001D1E  0EC8               	movlw	low _rawTime
 20280  001D20  6E03               	movwf	stringcpy@str2^0,c
 20281  001D22  0E01               	movlw	high _rawTime
 20282  001D24  6E04               	movwf	(stringcpy@str2+1)^0,c
 20283  001D26  0E00               	movlw	0
 20284  001D28  6E06               	movwf	(stringcpy@dir+1)^0,c
 20285  001D2A  0E00               	movlw	0
 20286  001D2C  6E05               	movwf	stringcpy@dir^0,c
 20287  001D2E  ECD8  F027         	call	_stringcpy	;wreg free
 20288  001D32                     i2l12036:
 20289                           
 20290                           ;GPS.c: 78: };GPS.c: 81: if((Term == 3) && (SentenceType == 1)) {
 20291  001D32  0E03               	movlw	3
 20292  001D34  1843               	xorwf	_Term^0,w,c
 20293  001D36  A4D8               	btfss	status,2,c
 20294  001D38  D011               	goto	i2l12042
 20295  001D3A  0444               	decf	_SentenceType^0,w,c
 20296  001D3C  A4D8               	btfss	status,2,c
 20297  001D3E  D00E               	goto	i2l12042
 20298                           
 20299                           ;GPS.c: 82: stringcpy(buffer, rawLatitude, 1);
 20300  001D40  0EBC               	movlw	low _buffer
 20301  001D42  6E01               	movwf	stringcpy@str1^0,c
 20302  001D44  0E01               	movlw	high _buffer
 20303  001D46  6E02               	movwf	(stringcpy@str1+1)^0,c
 20304  001D48  0E79               	movlw	low _rawLatitude
 20305  001D4A  6E03               	movwf	stringcpy@str2^0,c
 20306  001D4C  0E02               	movlw	high _rawLatitude
 20307  001D4E  6E04               	movwf	(stringcpy@str2+1)^0,c
 20308  001D50  0E00               	movlw	0
 20309  001D52  6E06               	movwf	(stringcpy@dir+1)^0,c
 20310  001D54  0E01               	movlw	1
 20311  001D56  6E05               	movwf	stringcpy@dir^0,c
 20312  001D58  ECD8  F027         	call	_stringcpy	;wreg free
 20313  001D5C                     i2l12042:
 20314                           
 20315                           ;GPS.c: 83: };GPS.c: 85: if((Term == 4) && (SentenceType == 1)) {
 20316  001D5C  0E04               	movlw	4
 20317  001D5E  1843               	xorwf	_Term^0,w,c
 20318  001D60  A4D8               	btfss	status,2,c
 20319  001D62  D00D               	goto	i2l12052
 20320  001D64  0444               	decf	_SentenceType^0,w,c
 20321  001D66  A4D8               	btfss	status,2,c
 20322  001D68  D00A               	goto	i2l12052
 20323                           
 20324                           ;GPS.c: 86: if(buffer[0] == 'N')
 20325  001D6A  0E4E               	movlw	78
 20326  001D6C  0101               	movlb	1	; () banked
 20327  001D6E  19BC               	xorwf	_buffer& (0+255),w,b
 20328  001D70  A4D8               	btfss	status,2,c
 20329  001D72  D002               	goto	i2l12050
 20330                           
 20331                           ; BSR set to: 1
 20332                           ;GPS.c: 87: rawLatitude[0] = '0';
 20333  001D74  0E30               	movlw	48
 20334  001D76  D001               	goto	L8
 20335  001D78                     i2l12050:
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;GPS.c: 88: else;GPS.c: 89: rawLatitude[0] = '-';
 20339  001D78  0E2D               	movlw	45
 20340  001D7A                     L8:
 20341  001D7A  0102               	movlb	2	; () banked
 20342  001D7C  6F79               	movwf	_rawLatitude& (0+255),b
 20343  001D7E                     i2l12052:
 20344                           
 20345                           ;GPS.c: 90: };GPS.c: 93: if((Term == 5) && (SentenceType == 1)) {
 20346  001D7E  0E05               	movlw	5
 20347  001D80  1843               	xorwf	_Term^0,w,c
 20348  001D82  A4D8               	btfss	status,2,c
 20349  001D84  D011               	goto	i2l12058
 20350  001D86  0444               	decf	_SentenceType^0,w,c
 20351  001D88  A4D8               	btfss	status,2,c
 20352  001D8A  D00E               	goto	i2l12058
 20353                           
 20354                           ;GPS.c: 94: stringcpy(buffer, rawLongitude, 1);
 20355  001D8C  0EBC               	movlw	low _buffer
 20356  001D8E  6E01               	movwf	stringcpy@str1^0,c
 20357  001D90  0E01               	movlw	high _buffer
 20358  001D92  6E02               	movwf	(stringcpy@str1+1)^0,c
 20359  001D94  0E6C               	movlw	low _rawLongitude
 20360  001D96  6E03               	movwf	stringcpy@str2^0,c
 20361  001D98  0E02               	movlw	high _rawLongitude
 20362  001D9A  6E04               	movwf	(stringcpy@str2+1)^0,c
 20363  001D9C  0E00               	movlw	0
 20364  001D9E  6E06               	movwf	(stringcpy@dir+1)^0,c
 20365  001DA0  0E01               	movlw	1
 20366  001DA2  6E05               	movwf	stringcpy@dir^0,c
 20367  001DA4  ECD8  F027         	call	_stringcpy	;wreg free
 20368  001DA8                     i2l12058:
 20369                           
 20370                           ;GPS.c: 95: };GPS.c: 97: if((Term == 6) && (SentenceType == 1)) {
 20371  001DA8  0E06               	movlw	6
 20372  001DAA  1843               	xorwf	_Term^0,w,c
 20373  001DAC  A4D8               	btfss	status,2,c
 20374  001DAE  D00D               	goto	i2l12068
 20375  001DB0  0444               	decf	_SentenceType^0,w,c
 20376  001DB2  A4D8               	btfss	status,2,c
 20377  001DB4  D00A               	goto	i2l12068
 20378                           
 20379                           ;GPS.c: 98: if(buffer[0] == 'E')
 20380  001DB6  0E45               	movlw	69
 20381  001DB8  0101               	movlb	1	; () banked
 20382  001DBA  19BC               	xorwf	_buffer& (0+255),w,b
 20383  001DBC  A4D8               	btfss	status,2,c
 20384  001DBE  D002               	goto	i2l12066
 20385                           
 20386                           ; BSR set to: 1
 20387                           ;GPS.c: 99: rawLongitude[0] = '0';
 20388  001DC0  0E30               	movlw	48
 20389  001DC2  D001               	goto	L9
 20390  001DC4                     i2l12066:
 20391                           
 20392                           ; BSR set to: 1
 20393                           ;GPS.c: 100: else;GPS.c: 101: rawLongitude[0] = '-';
 20394  001DC4  0E2D               	movlw	45
 20395  001DC6                     L9:
 20396  001DC6  0102               	movlb	2	; () banked
 20397  001DC8  6F6C               	movwf	_rawLongitude& (0+255),b
 20398  001DCA                     i2l12068:
 20399                           
 20400                           ;GPS.c: 102: };GPS.c: 105: if((Term == 7) && (SentenceType == 1)) {
 20401  001DCA  0E07               	movlw	7
 20402  001DCC  1843               	xorwf	_Term^0,w,c
 20403  001DCE  A4D8               	btfss	status,2,c
 20404  001DD0  D011               	goto	i2l12074
 20405  001DD2  0444               	decf	_SentenceType^0,w,c
 20406  001DD4  A4D8               	btfss	status,2,c
 20407  001DD6  D00E               	goto	i2l12074
 20408                           
 20409                           ;GPS.c: 106: stringcpy(buffer, rawSpeed, 0);
 20410  001DD8  0EBC               	movlw	low _buffer
 20411  001DDA  6E01               	movwf	stringcpy@str1^0,c
 20412  001DDC  0E01               	movlw	high _buffer
 20413  001DDE  6E02               	movwf	(stringcpy@str1+1)^0,c
 20414  001DE0  0EE7               	movlw	low _rawSpeed
 20415  001DE2  6E03               	movwf	stringcpy@str2^0,c
 20416  001DE4  0E01               	movlw	high _rawSpeed
 20417  001DE6  6E04               	movwf	(stringcpy@str2+1)^0,c
 20418  001DE8  0E00               	movlw	0
 20419  001DEA  6E06               	movwf	(stringcpy@dir+1)^0,c
 20420  001DEC  0E00               	movlw	0
 20421  001DEE  6E05               	movwf	stringcpy@dir^0,c
 20422  001DF0  ECD8  F027         	call	_stringcpy	;wreg free
 20423  001DF4                     i2l12074:
 20424                           
 20425                           ;GPS.c: 107: };GPS.c: 110: if((Term == 8) && (SentenceType == 1)) {
 20426  001DF4  0E08               	movlw	8
 20427  001DF6  1843               	xorwf	_Term^0,w,c
 20428  001DF8  A4D8               	btfss	status,2,c
 20429  001DFA  D011               	goto	i2l12080
 20430  001DFC  0444               	decf	_SentenceType^0,w,c
 20431  001DFE  A4D8               	btfss	status,2,c
 20432  001E00  D00E               	goto	i2l12080
 20433                           
 20434                           ;GPS.c: 111: stringcpy(buffer, rawCourse, 0);
 20435  001E02  0EBC               	movlw	low _buffer
 20436  001E04  6E01               	movwf	stringcpy@str1^0,c
 20437  001E06  0E01               	movlw	high _buffer
 20438  001E08  6E02               	movwf	(stringcpy@str1+1)^0,c
 20439  001E0A  0EE1               	movlw	low _rawCourse
 20440  001E0C  6E03               	movwf	stringcpy@str2^0,c
 20441  001E0E  0E01               	movlw	high _rawCourse
 20442  001E10  6E04               	movwf	(stringcpy@str2+1)^0,c
 20443  001E12  0E00               	movlw	0
 20444  001E14  6E06               	movwf	(stringcpy@dir+1)^0,c
 20445  001E16  0E00               	movlw	0
 20446  001E18  6E05               	movwf	stringcpy@dir^0,c
 20447  001E1A  ECD8  F027         	call	_stringcpy	;wreg free
 20448  001E1E                     i2l12080:
 20449                           
 20450                           ;GPS.c: 112: };GPS.c: 115: if(Term == 9 && SentenceType == 1) {
 20451  001E1E  0E09               	movlw	9
 20452  001E20  1843               	xorwf	_Term^0,w,c
 20453  001E22  A4D8               	btfss	status,2,c
 20454  001E24  D011               	goto	i2l12086
 20455  001E26  0444               	decf	_SentenceType^0,w,c
 20456  001E28  A4D8               	btfss	status,2,c
 20457  001E2A  D00E               	goto	i2l12086
 20458                           
 20459                           ;GPS.c: 116: stringcpy(buffer, rawDate, 0);
 20460  001E2C  0EBC               	movlw	low _buffer
 20461  001E2E  6E01               	movwf	stringcpy@str1^0,c
 20462  001E30  0E01               	movlw	high _buffer
 20463  001E32  6E02               	movwf	(stringcpy@str1+1)^0,c
 20464  001E34  0EDA               	movlw	low _rawDate
 20465  001E36  6E03               	movwf	stringcpy@str2^0,c
 20466  001E38  0E01               	movlw	high _rawDate
 20467  001E3A  6E04               	movwf	(stringcpy@str2+1)^0,c
 20468  001E3C  0E00               	movlw	0
 20469  001E3E  6E06               	movwf	(stringcpy@dir+1)^0,c
 20470  001E40  0E00               	movlw	0
 20471  001E42  6E05               	movwf	stringcpy@dir^0,c
 20472  001E44  ECD8  F027         	call	_stringcpy	;wreg free
 20473  001E48                     i2l12086:
 20474                           
 20475                           ;GPS.c: 117: };GPS.c: 120: if((Term == 7) && (SentenceType == 2)) {
 20476  001E48  0E07               	movlw	7
 20477  001E4A  1843               	xorwf	_Term^0,w,c
 20478  001E4C  A4D8               	btfss	status,2,c
 20479  001E4E  D012               	goto	i2l12092
 20480  001E50  0E02               	movlw	2
 20481  001E52  1844               	xorwf	_SentenceType^0,w,c
 20482  001E54  A4D8               	btfss	status,2,c
 20483  001E56  D00E               	goto	i2l12092
 20484                           
 20485                           ;GPS.c: 121: stringcpy(buffer, rawSatellites, 0);
 20486  001E58  0EBC               	movlw	low _buffer
 20487  001E5A  6E01               	movwf	stringcpy@str1^0,c
 20488  001E5C  0E01               	movlw	high _buffer
 20489  001E5E  6E02               	movwf	(stringcpy@str1+1)^0,c
 20490  001E60  0EF3               	movlw	low _rawSatellites
 20491  001E62  6E03               	movwf	stringcpy@str2^0,c
 20492  001E64  0E01               	movlw	high _rawSatellites
 20493  001E66  6E04               	movwf	(stringcpy@str2+1)^0,c
 20494  001E68  0E00               	movlw	0
 20495  001E6A  6E06               	movwf	(stringcpy@dir+1)^0,c
 20496  001E6C  0E00               	movlw	0
 20497  001E6E  6E05               	movwf	stringcpy@dir^0,c
 20498  001E70  ECD8  F027         	call	_stringcpy	;wreg free
 20499  001E74                     i2l12092:
 20500                           
 20501                           ;GPS.c: 122: };GPS.c: 125: if((Term == 9) && (SentenceType == 2)) {
 20502  001E74  0E09               	movlw	9
 20503  001E76  1843               	xorwf	_Term^0,w,c
 20504  001E78  A4D8               	btfss	status,2,c
 20505  001E7A  D012               	goto	i2l12098
 20506  001E7C  0E02               	movlw	2
 20507  001E7E  1844               	xorwf	_SentenceType^0,w,c
 20508  001E80  A4D8               	btfss	status,2,c
 20509  001E82  D00E               	goto	i2l12098
 20510                           
 20511                           ;GPS.c: 126: stringcpy(buffer, rawAltitude, 0);
 20512  001E84  0EBC               	movlw	low _buffer
 20513  001E86  6E01               	movwf	stringcpy@str1^0,c
 20514  001E88  0E01               	movlw	high _buffer
 20515  001E8A  6E02               	movwf	(stringcpy@str1+1)^0,c
 20516  001E8C  0ED3               	movlw	low _rawAltitude
 20517  001E8E  6E03               	movwf	stringcpy@str2^0,c
 20518  001E90  0E01               	movlw	high _rawAltitude
 20519  001E92  6E04               	movwf	(stringcpy@str2+1)^0,c
 20520  001E94  0E00               	movlw	0
 20521  001E96  6E06               	movwf	(stringcpy@dir+1)^0,c
 20522  001E98  0E00               	movlw	0
 20523  001E9A  6E05               	movwf	stringcpy@dir^0,c
 20524  001E9C  ECD8  F027         	call	_stringcpy	;wreg free
 20525  001EA0                     i2l12098:
 20526                           
 20527                           ;GPS.c: 127: };GPS.c: 130: if((Term == 6) && (SentenceType == 2)) {
 20528  001EA0  0E06               	movlw	6
 20529  001EA2  1843               	xorwf	_Term^0,w,c
 20530  001EA4  A4D8               	btfss	status,2,c
 20531  001EA6  D012               	goto	i2l12104
 20532  001EA8  0E02               	movlw	2
 20533  001EAA  1844               	xorwf	_SentenceType^0,w,c
 20534  001EAC  A4D8               	btfss	status,2,c
 20535  001EAE  D00E               	goto	i2l12104
 20536                           
 20537                           ;GPS.c: 131: stringcpy(buffer, rawFix, 0);
 20538  001EB0  0EBC               	movlw	low _buffer
 20539  001EB2  6E01               	movwf	stringcpy@str1^0,c
 20540  001EB4  0E01               	movlw	high _buffer
 20541  001EB6  6E02               	movwf	(stringcpy@str1+1)^0,c
 20542  001EB8  0EF6               	movlw	low _rawFix
 20543  001EBA  6E03               	movwf	stringcpy@str2^0,c
 20544  001EBC  0E01               	movlw	high _rawFix
 20545  001EBE  6E04               	movwf	(stringcpy@str2+1)^0,c
 20546  001EC0  0E00               	movlw	0
 20547  001EC2  6E06               	movwf	(stringcpy@dir+1)^0,c
 20548  001EC4  0E00               	movlw	0
 20549  001EC6  6E05               	movwf	stringcpy@dir^0,c
 20550  001EC8  ECD8  F027         	call	_stringcpy	;wreg free
 20551  001ECC                     i2l12104:
 20552                           
 20553                           ;GPS.c: 133: };GPS.c: 134: Term++;
 20554  001ECC  2A43               	incf	_Term^0,f,c
 20555                           
 20556                           ;GPS.c: 135: char_number = 0;
 20557  001ECE  0E00               	movlw	0
 20558  001ED0  6E45               	movwf	_char_number^0,c
 20559                           
 20560                           ;GPS.c: 136: break;
 20561  001ED2  0012               	return	
 20562  001ED4                     i2l12108:
 20563                           
 20564                           ;GPS.c: 139: buffer[char_number++] = c;
 20565  001ED4  0EBC               	movlw	low _buffer
 20566  001ED6  2445               	addwf	_char_number^0,w,c
 20567  001ED8  6ED9               	movwf	fsr2l,c
 20568  001EDA  6ADA               	clrf	fsr2h,c
 20569  001EDC  0E01               	movlw	high _buffer
 20570  001EDE  22DA               	addwfc	fsr2h,f,c
 20571  001EE0  C00B  FFDF         	movff	GPSRead@c,indf2
 20572  001EE4  2A45               	incf	_char_number^0,f,c
 20573                           
 20574                           ;GPS.c: 140: break;
 20575  001EE6  0012               	return	
 20576  001EE8                     i2l12114:
 20577  001EE8  500B               	movf	GPSRead@c^0,w,c
 20578                           
 20579                           ; Switch size 1, requested type "simple"
 20580                           ; Number of cases is 3, Range of values is 13 to 44
 20581                           ; switch strategies available:
 20582                           ; Name         Instructions Cycles
 20583                           ; simple_byte           10     6 (average)
 20584                           ;	Chosen strategy is simple_byte
 20585  001EEA  0A0D               	xorlw	13	; case 13
 20586  001EEC  B4D8               	btfsc	status,2,c
 20587  001EEE  D6AA               	goto	i2l11996
 20588  001EF0  0A29               	xorlw	41	; case 36
 20589  001EF2  B4D8               	btfsc	status,2,c
 20590  001EF4  D6CA               	goto	i2l12012
 20591  001EF6  0A08               	xorlw	8	; case 44
 20592  001EF8  B4D8               	btfsc	status,2,c
 20593  001EFA  D6CC               	goto	i2l12014
 20594  001EFC  D7EB               	goto	i2l12108
 20595  001EFE                     __end_of_GPSRead:
 20596                           	callstack 0
 20597                           
 20598 ;; *************** function _stringcpy *****************
 20599 ;; Defined at:
 20600 ;;		line 34 in file "bibliotecas/GPS.c"
 20601 ;; Parameters:    Size  Location     Type
 20602 ;;  str1            2    0[COMRAM] PTR unsigned char 
 20603 ;;		 -> buffer(12), 
 20604 ;;  str2            2    2[COMRAM] PTR unsigned char 
 20605 ;;		 -> rawFix(2), rawAltitude(7), rawSatellites(3), rawDate(7), 
 20606 ;;		 -> rawCourse(6), rawSpeed(6), rawLongitude(13), rawLatitude(13), 
 20607 ;;		 -> rawTime(11), sentence(6), 
 20608 ;;  dir             2    4[COMRAM] int 
 20609 ;; Auto vars:     Size  Location     Type
 20610 ;;  chr             1    8[COMRAM] unsigned char 
 20611 ;; Return value:  Size  Location     Type
 20612 ;;                  1    wreg      void 
 20613 ;; Registers used:
 20614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20615 ;; Tracked objects:
 20616 ;;		On entry : 0/0
 20617 ;;		On exit  : 0/0
 20618 ;;		Unchanged: 0/0
 20619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20620 ;;      Params:         6       0       0       0       0       0       0       0       0
 20621 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20622 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20623 ;;      Totals:         9       0       0       0       0       0       0       0       0
 20624 ;;Total ram usage:        9 bytes
 20625 ;; Hardware stack levels used:    1
 20626 ;; This function calls:
 20627 ;;		Nothing
 20628 ;; This function is called by:
 20629 ;;		_GPSRead
 20630 ;; This function uses a non-reentrant model
 20631 ;;
 20632                           
 20633                           	psect	text110
 20634  004FB0                     __ptext110:
 20635                           	callstack 0
 20636  004FB0                     _stringcpy:
 20637                           	callstack 13
 20638                           
 20639                           ;GPS.c: 36: uint8_t chr = 0;
 20640                           
 20641                           ;incstack = 0
 20642  004FB0  0E00               	movlw	0
 20643  004FB2  6E09               	movwf	stringcpy@chr^0,c
 20644  004FB4                     i2l11724:
 20645                           
 20646                           ;GPS.c: 39: str2[chr + dir] = str1[chr];
 20647  004FB4  5009               	movf	stringcpy@chr^0,w,c
 20648  004FB6  2401               	addwf	stringcpy@str1^0,w,c
 20649  004FB8  6ED9               	movwf	fsr2l,c
 20650  004FBA  0E00               	movlw	0
 20651  004FBC  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 20652  004FBE  6EDA               	movwf	fsr2h,c
 20653  004FC0  5009               	movf	stringcpy@chr^0,w,c
 20654  004FC2  2403               	addwf	stringcpy@str2^0,w,c
 20655  004FC4  6E07               	movwf	??_stringcpy^0,c
 20656  004FC6  0E00               	movlw	0
 20657  004FC8  2004               	addwfc	(stringcpy@str2+1)^0,w,c
 20658  004FCA  6E08               	movwf	(??_stringcpy+1)^0,c
 20659  004FCC  5005               	movf	stringcpy@dir^0,w,c
 20660  004FCE  2407               	addwf	??_stringcpy^0,w,c
 20661  004FD0  6EE1               	movwf	fsr1l,c
 20662  004FD2  5006               	movf	(stringcpy@dir+1)^0,w,c
 20663  004FD4  2008               	addwfc	(??_stringcpy+1)^0,w,c
 20664  004FD6  6EE2               	movwf	fsr1h,c
 20665  004FD8  CFDF FFE7          	movff	indf2,indf1
 20666                           
 20667                           ;GPS.c: 40: } while(str1[chr++] != '\0');
 20668  004FDC  2A09               	incf	stringcpy@chr^0,f,c
 20669  004FDE  0409               	decf	stringcpy@chr^0,w,c
 20670  004FE0  6E07               	movwf	??_stringcpy^0,c
 20671  004FE2  5007               	movf	??_stringcpy^0,w,c
 20672  004FE4  2401               	addwf	stringcpy@str1^0,w,c
 20673  004FE6  6ED9               	movwf	fsr2l,c
 20674  004FE8  0E00               	movlw	0
 20675  004FEA  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 20676  004FEC  6EDA               	movwf	fsr2h,c
 20677  004FEE  50DF               	movf	indf2,w,c
 20678  004FF0  B4D8               	btfsc	status,2,c
 20679  004FF2  0012               	return	
 20680  004FF4  D7DF               	goto	i2l11724
 20681  004FF6                     __end_of_stringcpy:
 20682                           	callstack 0
 20683                           
 20684 ;; *************** function _strcmp *****************
 20685 ;; Defined at:
 20686 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcmp.c"
 20687 ;; Parameters:    Size  Location     Type
 20688 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 20689 ;;		 -> sentence(6), 
 20690 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 20691 ;;		 -> STR_6(6), STR_5(6), 
 20692 ;; Auto vars:     Size  Location     Type
 20693 ;;  r               1    6[COMRAM] char 
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  2    0[COMRAM] int 
 20696 ;; Registers used:
 20697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/0
 20700 ;;		On exit  : 0/0
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20703 ;;      Params:         4       0       0       0       0       0       0       0       0
 20704 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20705 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20706 ;;      Totals:         7       0       0       0       0       0       0       0       0
 20707 ;;Total ram usage:        7 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; This function calls:
 20710 ;;		Nothing
 20711 ;; This function is called by:
 20712 ;;		_GPSRead
 20713 ;; This function uses a non-reentrant model
 20714 ;;
 20715                           
 20716                           	psect	text111
 20717  004ED6                     __ptext111:
 20718                           	callstack 0
 20719  004ED6                     _strcmp:
 20720                           	callstack 13
 20721                           
 20722                           ;incstack = 0
 20723  004ED6  D004               	goto	i2l11732
 20724  004ED8                     i2l11730:
 20725  004ED8  4A01               	infsnz	strcmp@s1^0,f,c
 20726  004EDA  2A02               	incf	(strcmp@s1+1)^0,f,c
 20727  004EDC  4A03               	infsnz	strcmp@s2^0,f,c
 20728  004EDE  2A04               	incf	(strcmp@s2+1)^0,f,c
 20729  004EE0                     i2l11732:
 20730  004EE0  C003  FFF6         	movff	strcmp@s2,tblptrl
 20731  004EE4  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 20732  004EE8                     	if	0	;tblptru may be non-zero
 20733  004EE8                     	endif
 20734  004EE8                     	if	0	;tblptru may be non-zero
 20735  004EE8                     	endif
 20736  004EE8  0008               	tblrd		*
 20737  004EEA  CFF5 F005          	movff	tablat,??_strcmp
 20738  004EEE  C001  FFD9         	movff	strcmp@s1,fsr2l
 20739  004EF2  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 20740  004EF6  50DF               	movf	indf2,w,c
 20741  004EF8  6E06               	movwf	(??_strcmp+1)^0,c
 20742  004EFA  5005               	movf	??_strcmp^0,w,c
 20743  004EFC  5C06               	subwf	(??_strcmp+1)^0,w,c
 20744  004EFE  6E07               	movwf	strcmp@r^0,c
 20745  004F00  5007               	movf	strcmp@r^0,w,c
 20746  004F02  A4D8               	btfss	status,2,c
 20747  004F04  D007               	goto	i2u1448_40
 20748  004F06  C001  FFD9         	movff	strcmp@s1,fsr2l
 20749  004F0A  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 20750  004F0E  50DF               	movf	indf2,w,c
 20751  004F10  A4D8               	btfss	status,2,c
 20752  004F12  D7E2               	goto	i2l11730
 20753  004F14                     i2u1448_40:
 20754  004F14  5007               	movf	strcmp@r^0,w,c
 20755  004F16  6E01               	movwf	?_strcmp^0,c
 20756  004F18  6A02               	clrf	(?_strcmp+1)^0,c
 20757  004F1A  BE01               	btfsc	?_strcmp^0,7,c
 20758  004F1C  0602               	decf	(?_strcmp+1)^0,f,c
 20759  004F1E  0012               	return		;funcret
 20760  004F20                     __end_of_strcmp:
 20761                           	callstack 0
 20762                           
 20763                           	psect	text112
 20764  000000                     __ptext112:
 20765                           	callstack 0
 20766                           
 20767                           	psect	rparam
 20768  0000                     
 20769                           	psect	temp
 20770  000047                     btemp:
 20771                           	callstack 0
 20772  000047                     	ds	1
 20773  0000                     int$flags	set	btemp
 20774  0000                     wtemp8	set	btemp+1
 20775  0000                     ttemp5	set	btemp+1
 20776  0000                     ttemp6	set	btemp+4
 20777  0000                     ttemp7	set	btemp+8
 20778                           
 20779                           	psect	idloc
 20780                           
 20781                           ;Config register IDLOC0 @ 0x200000
 20782                           ;	unspecified, using default values
 20783  200000                     	org	2097152
 20784  200000  FF                 	db	255
 20785                           
 20786                           ;Config register IDLOC1 @ 0x200001
 20787                           ;	unspecified, using default values
 20788  200001                     	org	2097153
 20789  200001  FF                 	db	255
 20790                           
 20791                           ;Config register IDLOC2 @ 0x200002
 20792                           ;	unspecified, using default values
 20793  200002                     	org	2097154
 20794  200002  FF                 	db	255
 20795                           
 20796                           ;Config register IDLOC3 @ 0x200003
 20797                           ;	unspecified, using default values
 20798  200003                     	org	2097155
 20799  200003  FF                 	db	255
 20800                           
 20801                           ;Config register IDLOC4 @ 0x200004
 20802                           ;	unspecified, using default values
 20803  200004                     	org	2097156
 20804  200004  FF                 	db	255
 20805                           
 20806                           ;Config register IDLOC5 @ 0x200005
 20807                           ;	unspecified, using default values
 20808  200005                     	org	2097157
 20809  200005  FF                 	db	255
 20810                           
 20811                           ;Config register IDLOC6 @ 0x200006
 20812                           ;	unspecified, using default values
 20813  200006                     	org	2097158
 20814  200006  FF                 	db	255
 20815                           
 20816                           ;Config register IDLOC7 @ 0x200007
 20817                           ;	unspecified, using default values
 20818  200007                     	org	2097159
 20819  200007  FF                 	db	255
 20820                           
 20821                           	psect	config
 20822                           
 20823                           ;Config register CONFIG1L @ 0x300000
 20824                           ;	unspecified, using default values
 20825                           ;	PLL Prescaler Selection bits
 20826                           ;	PLLDIV = 0x0, unprogrammed default
 20827                           ;	System Clock Postscaler Selection bits
 20828                           ;	CPUDIV = 0x0, unprogrammed default
 20829                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 20830                           ;	USBDIV = 0x0, unprogrammed default
 20831  300000                     	org	3145728
 20832  300000  00                 	db	0
 20833                           
 20834                           ;Config register CONFIG1H @ 0x300001
 20835                           ;	unspecified, using default values
 20836                           ;	Oscillator Selection bits
 20837                           ;	FOSC = 0x5, unprogrammed default
 20838                           ;	Fail-Safe Clock Monitor Enable bit
 20839                           ;	FCMEN = 0x0, unprogrammed default
 20840                           ;	Internal/External Oscillator Switchover bit
 20841                           ;	IESO = 0x0, unprogrammed default
 20842  300001                     	org	3145729
 20843  300001  05                 	db	5
 20844                           
 20845                           ;Config register CONFIG2L @ 0x300002
 20846                           ;	unspecified, using default values
 20847                           ;	Power-up Timer Enable bit
 20848                           ;	PWRT = 0x1, unprogrammed default
 20849                           ;	Brown-out Reset Enable bits
 20850                           ;	BOR = 0x3, unprogrammed default
 20851                           ;	Brown-out Reset Voltage bits
 20852                           ;	BORV = 0x3, unprogrammed default
 20853                           ;	USB Voltage Regulator Enable bit
 20854                           ;	VREGEN = 0x0, unprogrammed default
 20855  300002                     	org	3145730
 20856  300002  1F                 	db	31
 20857                           
 20858                           ;Config register CONFIG2H @ 0x300003
 20859                           ;	unspecified, using default values
 20860                           ;	Watchdog Timer Enable bit
 20861                           ;	WDT = 0x1, unprogrammed default
 20862                           ;	Watchdog Timer Postscale Select bits
 20863                           ;	WDTPS = 0xF, unprogrammed default
 20864  300003                     	org	3145731
 20865  300003  1F                 	db	31
 20866                           
 20867                           ; Padding undefined space
 20868  300004                     	org	3145732
 20869  300004  FF                 	db	255
 20870                           
 20871                           ;Config register CONFIG3H @ 0x300005
 20872                           ;	unspecified, using default values
 20873                           ;	CCP2 MUX bit
 20874                           ;	CCP2MX = 0x1, unprogrammed default
 20875                           ;	PORTB A/D Enable bit
 20876                           ;	PBADEN = 0x1, unprogrammed default
 20877                           ;	Low-Power Timer 1 Oscillator Enable bit
 20878                           ;	LPT1OSC = 0x0, unprogrammed default
 20879                           ;	MCLR Pin Enable bit
 20880                           ;	MCLRE = 0x1, unprogrammed default
 20881  300005                     	org	3145733
 20882  300005  83                 	db	131
 20883                           
 20884                           ;Config register CONFIG4L @ 0x300006
 20885                           ;	unspecified, using default values
 20886                           ;	Stack Full/Underflow Reset Enable bit
 20887                           ;	STVREN = 0x1, unprogrammed default
 20888                           ;	Single-Supply ICSP Enable bit
 20889                           ;	LVP = 0x1, unprogrammed default
 20890                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 20891                           ;	ICPRT = 0x0, unprogrammed default
 20892                           ;	Extended Instruction Set Enable bit
 20893                           ;	XINST = 0x0, unprogrammed default
 20894                           ;	Background Debugger Enable bit
 20895                           ;	DEBUG = 0x1, unprogrammed default
 20896  300006                     	org	3145734
 20897  300006  85                 	db	133
 20898                           
 20899                           ; Padding undefined space
 20900  300007                     	org	3145735
 20901  300007  FF                 	db	255
 20902                           
 20903                           ;Config register CONFIG5L @ 0x300008
 20904                           ;	unspecified, using default values
 20905                           ;	Code Protection bit
 20906                           ;	CP0 = 0x1, unprogrammed default
 20907                           ;	Code Protection bit
 20908                           ;	CP1 = 0x1, unprogrammed default
 20909                           ;	Code Protection bit
 20910                           ;	CP2 = 0x1, unprogrammed default
 20911                           ;	Code Protection bit
 20912                           ;	CP3 = 0x1, unprogrammed default
 20913  300008                     	org	3145736
 20914  300008  0F                 	db	15
 20915                           
 20916                           ;Config register CONFIG5H @ 0x300009
 20917                           ;	unspecified, using default values
 20918                           ;	Boot Block Code Protection bit
 20919                           ;	CPB = 0x1, unprogrammed default
 20920                           ;	Data EEPROM Code Protection bit
 20921                           ;	CPD = 0x1, unprogrammed default
 20922  300009                     	org	3145737
 20923  300009  C0                 	db	192
 20924                           
 20925                           ;Config register CONFIG6L @ 0x30000A
 20926                           ;	unspecified, using default values
 20927                           ;	Write Protection bit
 20928                           ;	WRT0 = 0x1, unprogrammed default
 20929                           ;	Write Protection bit
 20930                           ;	WRT1 = 0x1, unprogrammed default
 20931                           ;	Write Protection bit
 20932                           ;	WRT2 = 0x1, unprogrammed default
 20933                           ;	Write Protection bit
 20934                           ;	WRT3 = 0x1, unprogrammed default
 20935  30000A                     	org	3145738
 20936  30000A  0F                 	db	15
 20937                           
 20938                           ;Config register CONFIG6H @ 0x30000B
 20939                           ;	unspecified, using default values
 20940                           ;	Configuration Register Write Protection bit
 20941                           ;	WRTC = 0x1, unprogrammed default
 20942                           ;	Boot Block Write Protection bit
 20943                           ;	WRTB = 0x1, unprogrammed default
 20944                           ;	Data EEPROM Write Protection bit
 20945                           ;	WRTD = 0x1, unprogrammed default
 20946  30000B                     	org	3145739
 20947  30000B  E0                 	db	224
 20948                           
 20949                           ;Config register CONFIG7L @ 0x30000C
 20950                           ;	unspecified, using default values
 20951                           ;	Table Read Protection bit
 20952                           ;	EBTR0 = 0x1, unprogrammed default
 20953                           ;	Table Read Protection bit
 20954                           ;	EBTR1 = 0x1, unprogrammed default
 20955                           ;	Table Read Protection bit
 20956                           ;	EBTR2 = 0x1, unprogrammed default
 20957                           ;	Table Read Protection bit
 20958                           ;	EBTR3 = 0x1, unprogrammed default
 20959  30000C                     	org	3145740
 20960  30000C  0F                 	db	15
 20961                           
 20962                           ;Config register CONFIG7H @ 0x30000D
 20963                           ;	unspecified, using default values
 20964                           ;	Boot Block Table Read Protection bit
 20965                           ;	EBTRB = 0x1, unprogrammed default
 20966  30000D                     	org	3145741
 20967  30000D  40                 	db	64
 20968                           tosu	equ	0xFFF
 20969                           tosh	equ	0xFFE
 20970                           tosl	equ	0xFFD
 20971                           stkptr	equ	0xFFC
 20972                           pclatu	equ	0xFFB
 20973                           pclath	equ	0xFFA
 20974                           pcl	equ	0xFF9
 20975                           tblptru	equ	0xFF8
 20976                           tblptrh	equ	0xFF7
 20977                           tblptrl	equ	0xFF6
 20978                           tablat	equ	0xFF5
 20979                           prodh	equ	0xFF4
 20980                           prodl	equ	0xFF3
 20981                           indf0	equ	0xFEF
 20982                           postinc0	equ	0xFEE
 20983                           postdec0	equ	0xFED
 20984                           preinc0	equ	0xFEC
 20985                           plusw0	equ	0xFEB
 20986                           fsr0h	equ	0xFEA
 20987                           fsr0l	equ	0xFE9
 20988                           wreg	equ	0xFE8
 20989                           indf1	equ	0xFE7
 20990                           postinc1	equ	0xFE6
 20991                           postdec1	equ	0xFE5
 20992                           preinc1	equ	0xFE4
 20993                           plusw1	equ	0xFE3
 20994                           fsr1h	equ	0xFE2
 20995                           fsr1l	equ	0xFE1
 20996                           bsr	equ	0xFE0
 20997                           indf2	equ	0xFDF
 20998                           postinc2	equ	0xFDE
 20999                           postdec2	equ	0xFDD
 21000                           preinc2	equ	0xFDC
 21001                           plusw2	equ	0xFDB
 21002                           fsr2h	equ	0xFDA
 21003                           fsr2l	equ	0xFD9
 21004                           status	equ	0xFD8

Data Sizes:
    Strings     414
    Constant    126
    Data        15
    BSS         974
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      70
    BANK0           160    152     158
    BANK1           256      0     255
    BANK2           256     34     198
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3505	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 

    armazena_latitude$3504	PTR const unsigned char  size(2) Largest target is 13
		 -> rawLatitude(BANK2[13]), 

    armazena_longitude$3503	PTR const unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK2[13]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[7]), STR_25(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[7]), STR_25(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 73
		 -> string_dado.hora_name(BANK2[4]), string_dado.data_name(BANK2[4]), string_dado(BANK2[73]), STR_8(CODE[13]), 
		 -> STR_7(CODE[12]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> temp_buff_lat(BANK2[11]), temp_buff_long(BANK2[12]), filename(BANK2[15]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> temp_buff_lat(BANK2[11]), temp_buff_long(BANK2[12]), filename(BANK2[15]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> sentence(BANK1[6]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_23(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 124
		 -> poligono_ext.point_long_min(BANK1[6]), poligono_ext.fence_long_min(BANK1[6]), poligono_ext.point_lat_min(BANK1[6]), poligono_ext.fence_lat_min(BANK1[6]), 
		 -> poligono_ext.fence_long_deg(BANK1[6]), poligono_ext.point_long_deg(BANK1[6]), poligono_ext.fence_lat_deg(BANK1[5]), poligono_ext.point_lat_deg(BANK1[5]), 
		 -> poligono_ext(BANK1[124]), 

    point_buff_gps_long	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLongitude(BANK2[13]), 

    point_buff_gps_lat	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLatitude(BANK2[13]), 

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    p_tarefas	PTR FTN()void [4] size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_16(CODE[39]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 73
		 -> fprintf@s(BANK2[16]), ?_fprintf(BANK0[2]), STR_21(CODE[16]), STR_20(CODE[27]), 
		 -> STR_19(CODE[17]), STR_18(CODE[16]), STR_17(CODE[16]), string_dado(BANK2[73]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_22(CODE[13]), filename(BANK2[15]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_22(CODE[13]), filename(BANK2[15]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_22(CODE[13]), filename(BANK2[15]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1379_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[7]), STR_25(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    S715_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S715_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__Longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK2[13]), 

    sp__Latitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLatitude(BANK2[13]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 15
		 -> temp_buff_lat(BANK2[11]), temp_buff_long(BANK2[12]), filename(BANK2[15]), rawLongitude(BANK2[13]), 
		 -> rawLatitude(BANK2[13]), 

    stringcpy@str1	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK1[12]), 

    stringcpy@str2	PTR unsigned char  size(2) Largest target is 13
		 -> rawFix(BANK1[2]), rawAltitude(BANK1[7]), rawSatellites(BANK1[3]), rawDate(BANK1[7]), 
		 -> rawCourse(BANK1[6]), rawSpeed(BANK1[6]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), 
		 -> rawTime(BANK1[11]), sentence(BANK1[6]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[2]), STR_36(CODE[7]), STR_35(CODE[14]), STR_34(CODE[8]), 
		 -> STR_33(CODE[17]), STR_32(CODE[8]), STR_31(CODE[16]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_28(CODE[5]), STR_27(CODE[5]), mensagem_inicial@msg_dois(BANK0[17]), 
		 -> mensagem_inicial@msg_linha_um(BANK0[17]), NULL(NULL[0]), STR_14(CODE[9]), STR_13(CODE[10]), 
		 -> STR_12(CODE[10]), STR_11(CODE[14]), STR_10(CODE[21]), STR_9(CODE[15]), 
		 -> rawFix(BANK1[2]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), escreve_inteiro_lcd@texto(BANK0[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_fence_externo->_calcula_diff_graus
    _verifica_fence_externo->_calcula_diff_minutos
    _calcula_diff_minutos->_atoi
    _calcula_diff_graus->_atoi
    _atoi->___wmul
    _armazena_longitude->_Longitude
    _armazena_latitude->_Latitude
    _troca_de_tela->_escreve_inteiro_lcd
    _escreve_inteiro_lcd->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _escreve_cmd_lcd->_delay
    _Longitude->_strcpy
    _Latitude->_strcpy
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _make_dirfile->_memset
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_GPSDay
    _get_fattime->_GPSHour
    _get_fattime->_GPSMinute
    _get_fattime->_GPSMonth
    _get_fattime->_GPSSecond
    _get_fattime->_GPSyear
    _dados_gps_to_sd->_monta_sd
    _monta_sd->_strlen

Critical Paths under _isr in COMRAM

    _isr->_GPSRead
    _GPSRead->_stringcpy

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence_externo->_calcula_diff_graus
    _troca_de_tela->_escreve_inteiro_lcd
    _escrita_sdcard->_fprintf
    _inicializa_uart->_configura_baudrate_uart
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _check_fs->_disk_read
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _disk_read->_sdc_disk_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escrita_sdcard->_fprintf

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  458070
                    _dados_gps_to_sd
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    7123
                                             30 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             27 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  447612
                                            149 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
             _verifica_fence_externo *
 ---------------------------------------------------------------------------------
 (2) _verifica_fence_externo                               1     1      0   13624
                                             45 COMRAM     1     1      0
                  _armazena_latitude
                 _armazena_longitude
                 _calcula_diff_graus
               _calcula_diff_minutos
                           _monta_sd
           _verifica_diferenca_graus
         _verifica_diferenca_minutos
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (3) _verifica_plausibilidade_long                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _verifica_plausibilidade_lat                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _verifica_diferenca_minutos                          10    10      0     743
                                             24 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _verifica_diferenca_graus                            10    10      0     743
                                             24 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _calcula_diff_minutos                                 8     8      0    2830
                                             37 COMRAM     8     8      0
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _calcula_diff_graus                                  14    14      0    3028
                                             37 COMRAM     8     8      0
                                              0 BANK0      6     6      0
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    2545
                                             30 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _armazena_longitude                                   2     2      0    2412
                                             32 COMRAM     2     2      0
                          _Longitude
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _armazena_latitude                                    2     2      0    2412
                                             32 COMRAM     2     2      0
                           _Latitude
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        1     1      0   16626
                                             47 COMRAM     1     1      0
                           _Latitude
                          _Longitude
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                  9     7      2    7205
                                             45 COMRAM     2     0      2
                                              0 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 6     1      5    3556
                                             39 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 8     3      5    2843
                                             31 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     972
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1161
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _Longitude                                            2     0      2    1189
                                             30 COMRAM     2     0      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _Latitude                                             2     0      2    1189
                                             30 COMRAM     2     0      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                     3     3      0  417139
                                            146 BANK0      3     3      0
                     _escrita_sdcard
                                _fix
 ---------------------------------------------------------------------------------
 (3) _fix                                                  2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _escrita_sdcard                                       5     5      0  417105
                        _desliga_SPI
                       _desliga_uart
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                     _inicializa_SPI
                    _inicializa_uart
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    1189
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4     323
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             38 COMRAM    12     8      4
                                              0 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                             24 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _fprintf                                             58    36     22  128186
                                            122 BANK0     24     2     22
                                              0 BANK2     34    34      0
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (5) _fputs                                                7     3      4   61783
                                            115 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                7     3      4   61290
                                            108 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (7) _f_write                                             30    24      6   60478
                                             78 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) _f_open                                              44    39      5  200664
                                             96 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (5) _trace_path                                          20    15      5   38428
                                             71 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _make_dirfile                                        11     9      2    2102
                                             32 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _reserve_direntry                                    18    16      2   76553
                                             78 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _next_dir_entry                                      12    11      1   18602
                                             59 BANK0     12    11      1
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (8) _clust2sect                                          11     7      4    1435
                                             36 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _remove_chain                                         8     6      2   33394
                                             64 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     970
                                             24 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _auto_mount                                          46    44      2   32813
                                             25 BANK0     46    44      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6    1008
                                             24 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _disk_initialize                                      4     4      0   21374
                                             44 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_initialize                                 13    13      0   21244
                                             43 COMRAM     1     1      0
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (8) _sdc_reset                                           20    20      0   10188
                                             36 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             27 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    3029
                                             27 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _check_fs                                             8     4      4    6616
                                             48 COMRAM     2     2      0
                                             19 BANK0      6     2      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               8     2      6     701
                                             24 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     516
                                             24 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _f_mount                                              3     1      2     290
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _f_lseek                                             33    27      6   54910
                                             78 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        14    12      2   34457
                                             64 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _put_cluster                                         24    20      4   16663
                                             40 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_cluster                                         21    19      2   16353
                                             48 COMRAM     2     0      2
                                             40 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1392
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     901
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _f_close                                              3     1      2   30425
                                             49 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (5) _f_sync                                               9     7      2   30002
                                             40 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                             6     2      4    1178
                                             30 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          4     4      0     226
                                             26 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_status                                     4     4      0      34
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _sync                                                 2     2      0   14103
                                             48 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (8) _move_window                                         21    17      4   13765
                                             19 BANK0     21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (9) _disk_write                                          12     5      7    6087
                                             47 COMRAM     1     1      0
                                              8 BANK0     11     4      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_write                                     19    12      7    4623
                                             36 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (9) _disk_read                                           12     5      7    5608
                                             47 COMRAM     1     1      0
                                              8 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_read                                      24    17      7    4459
                                             36 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (11) _response                                            1     1      0      34
                                             24 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (11) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (11) _command                                             7     2      5    3412
                                             29 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (12) _wait_ready                                         15    15      0      99
                                             24 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _escreve_SPI                                         2     2      0      34
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _dummy_clocks                                        5     5      0      68
                                             24 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _disk_ioctl                                           7     4      3     304
                                             24 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _get_fattime                                         52    48      4     389
                                             28 COMRAM    14    10      4
                                              0 BANK0     38    38      0
                             _GPSDay
                            _GPSHour
                          _GPSMinute
                           _GPSMonth
                          _GPSSecond
                            _GPSyear
 ---------------------------------------------------------------------------------
 (6) _GPSyear                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSSecond                                            4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSMonth                                             4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSMinute                                            4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSHour                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSDay                                               4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dados_gps_to_sd                                      0     0      0    1456
                           _monta_sd
 ---------------------------------------------------------------------------------
 (3) _monta_sd                                             5     3      2    1456
                                             28 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                13    13      0    3687
                                             11 COMRAM    13    13      0
                            _GPSRead
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (17) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GPSRead                                             2     2      0    3509
                                              9 COMRAM     2     2      0
                             _strcmp
                          _stringcpy
 ---------------------------------------------------------------------------------
 (18) _stringcpy                                           9     3      6    2920
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (18) _strcmp                                              7     3      4     493
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dados_gps_to_sd
     _monta_sd
       _strlen
   _escalonador
     _disparo_gravacao *
       _escrita_sdcard
         _desliga_SPI
         _desliga_uart
         _f_close
           _f_sync
             _get_fattime
               _GPSDay
               _GPSHour
               _GPSMinute
               _GPSMonth
               _GPSSecond
               _GPSyear
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _sync
               _disk_ioctl
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
         _f_lseek
           ___lldiv
           _create_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
           _get_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
           _validate
             _disk_status
               _sdc_disk_status
         _f_mount
         _f_open
           _auto_mount
             ___lldiv
             ___lmul
             _check_fs
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memcmp
             _disk_initialize
               _sdc_disk_initialize
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
                 _sdc_reset
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                     _fix (ARG)
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _disk_status
               _sdc_disk_status
             _memset
           _get_fattime
             _GPSDay
             _GPSHour
             _GPSMinute
             _GPSMonth
             _GPSSecond
             _GPSyear
           _memcpy
           _memset
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
             _disk_write
               _sdc_disk_write
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_SPI
                 _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
           _remove_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
           _reserve_direntry
             _clust2sect
               ___lmul
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _disk_write
               _sdc_disk_write
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_SPI
                 _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _next_dir_entry
               _clust2sect
                 ___lmul
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
           _trace_path
             _clust2sect
               ___lmul
             _make_dirfile
               _memset
             _memcmp
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _next_dir_entry
               _clust2sect
                 ___lmul
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
         _fprintf
           ___lldiv
           ___llmod
           ___wmul
           _fputc
             _f_write
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memcpy
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _fputs
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
         _strcat
         _strcpy
       _fix
     _troca_de_tela *
       _Latitude
         _strcpy
       _Longitude
         _strcpy
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
         _fix (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _fix
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
     _verifica_dados_operacionais *
     _verifica_fence_externo *
       _armazena_latitude
         _Latitude
           _strcpy
         _strcpy
       _armazena_longitude
         _Longitude
           _strcpy
         _strcpy
       _calcula_diff_graus
         _atoi
           ___wmul
           _isdigit
       _calcula_diff_minutos
         _atoi
           ___wmul
           _isdigit
       _monta_sd
         _strlen
       _verifica_diferenca_graus
       _verifica_diferenca_minutos
       _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
       _fix (ARG)
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _GPSRead
     _strcmp
     _stringcpy
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     22      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A9      20        0.0%
DATA                 0      0     4C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon May 02 13:47:11 2022

                         next_dir_entry@idx 00A5                    __end_of_mensagem_inicial 49A0  
                       next_dir_entry@clust 00A3                                 _SSPSTATbits 000FC7  
                          ??_init_interrupt 0019                                          l68 54FA  
              __size_of_escreve_inteiro_lcd 0036                    _verifica_diferenca_graus 2F9A  
                                        _fs 02C6                         ___wmul@multiplicand 001B  
                               _put_cluster 23E4                            disk_write@sector 006A  
                              ?_escalonador 0001                              create_chain@fs 00A6  
                          disk_write@result 0070                            ?_inicializa_uart 0001  
                                       l200 4756                                         l201 475E  
                                       l202 4760                                         l203 4768  
                                       l220 4B34                                         l204 476A  
                                       l221 4B3C                                         l213 4B08  
                                       l205 4772                                         l222 4B3E  
                                       l206 4774                                         l223 4B46  
                                       l215 4B12                      __size_of_troca_de_tela 031E  
                                       l144 2EC6                                         l224 4B48  
                                       l232 4C38                                         l225 4B50  
                                       l217 4B1C                                         l250 4A58  
                                       l242 4A24                                         l226 4B52  
                                       l218 4B1E                                         l251 4A5A  
                                       l219 4B32                                         l252 4A62  
                                       l244 4A2E                                         l181 5574  
                                       l253 4A64                                         l254 4A6C  
                                       l246 4A38                                         l183 557A  
                                       l255 4A6E                                         l191 4720  
                                       l256 4A76                                         l248 4A42  
                                       l257 4A78                                         l249 4A44  
                                       l193 472A                                         l195 4734  
                                       l197 473E                                         l198 4740  
                                       l199 4754                                         l670 5618  
                                       l567 51E6                                         l583 4CA0  
                                       l664 5656                                         l851 3724  
                                       l780 3392                                         l854 36D2  
                                       l777 339A                                         l938 076E  
                                       l963 13B4                                         l968 13E0  
                                       l978 1522                                         _PCL 000FF9  
                                       _PR2 000FCB                                         _fil 01A0  
                          ??_init_oscilador 0019                                         _fix 5674  
                                       _isr 0008                                disk_read@res 0072  
                                       prod 000FF3                              ??_create_chain 00A2  
                                       tosl 000FFD                                         wreg 000FE8  
                 __size_of_write_timer_zero 000A                             create_chain@mcl 00A4  
                           create_chain@ncl 00AC                             create_chain@scl 00AA  
                   ??_escreve_frase_ram_lcd 001E                                        l1105 519C  
           verifica_diferenca_minutos@point 0021                                        l1052 0B72  
                                      l2013 4C1C                                        l1056 0D82  
                                      l1138 111C                                        l1155 126A  
                                      l2300 45D2                                        l1406 4A02  
                                      l1426 1620                                        l2084 4DDA  
                                      l2094 513E                                        l1446 1834  
                                      l1632 4918                                        l2282 3FEC  
                                      ?_fix 0019                                        l7106 367C  
                                      l7152 36CA                                        l7144 36BA  
                                      l7136 36AA                                        l7148 36C2  
                                      l8206 5152                                        l7174 3704  
                                      l7166 36EC                                        l7086 3612  
                                      l8208 5156                                        l8312 28C0  
                                      l8304 2884                                        l7184 3722  
                                      l7176 3706                                        l7194 373E  
                                      l8340 2940                                        l8332 2904  
                                      ?_isr 0001                                        l8326 2900  
                                      l8318 28C4                                        l8502 309C  
                                      l8512 312C                                        l8440 2FAA  
                                      l8370 29C8                                        l8362 29BA  
                                      l8354 2980                                        l8346 2944  
                                      l8522 313E                                        l8364 29C4  
                                      l8356 2986                                        l7812 4F2C  
                                      l8604 2C16                                        l8532 2A86  
                                      l7822 4F64                                        l6862 530A  
                                      l8518 3136                                        l8462 2FD6  
                                      l8446 2FAE                                        l8542 2AA2  
                                      l8526 2A82                                        l8384 2A08  
                                      l9600 2E8C                                        l7816 4F44  
                                      l8480 3070                                        l8472 305E  
                                      l8456 2FCA                                        l8544 2AA6  
                                      l8608 2C1E                                        l8378 2A04  
                                      l8298 2880                                        l8394 2A44  
                                      l9450 51F2                                        l9522 3C76  
                                      l6866 531A                                        l8458 2FCE  
                                      l8714 4218                                        l9532 3CAE  
                                      l9540 3CC6                                        l8572 2B54  
                                      l8564 2B48                                        l8548 2AAE  
                                      l8732 4258                                        l8486 3074  
                                      l8478 3068                                        l8582 2B70  
                                      l8566 2B50                                        l8558 2B3E  
                                      l8750 428C                                        l8718 4226  
                                      l8662 41A8                                        l9472 4C9A  
                                      l9544 3CDA                                        l9528 3C8A  
                                      l9632 2F36                                        l9712 4EBC  
                                      l8496 3090                                        l8584 2B74  
                                      l8680 41DC                                        l8648 4176  
                                      l9458 524C                                        l9538 3CBE  
                                      l9618 2F0E                                        l8498 3094  
                                      l8746 4288                                        l9548 3CF2  
                                      l8588 2B7C                                        l8764 42BA  
                                      l8676 41D8                                        l9558 3D22  
                                      l9662 4AB6                                        l9910 4C60  
                                      l9902 4C44                                        l8598 2C0C  
                                      l8694 420A                                        l9648 2F86  
                                      l9840 3252                                        l9832 31CE  
                                      l9760 4B14                                        l9920 4C88  
                                      l8784 42C8                                        l9666 4ABA  
                                      l9658 4A8A                                        l9682 4ADC  
                                      l9586 2E68                                        l9578 2E16  
                                      l9690 4E8C                                        l9746 560A  
                                      l9930 4E0E                                        l9906 4C52  
                     _escreve_caractere_lcd 4A14                                        l9836 324A  
                                      l9756 4B0A                                        l9694 4EB8  
                                      l9870 52A8                                        l9926 4DE6  
                                      l9918 4C6E                                        STR_1 6206  
                                      l9848 32A0                                        l9872 52B0  
                                      l9792 4A30                                        STR_2 619A  
                                      STR_3 6225                                        l9858 32F4  
                                      l9962 27E2                                        l9938 2694  
                                      STR_4 61FB                                        STR_5 6254  
                                      l9876 52B4                                        l9972 2848  
                                      l9796 4A3A                                        l9788 4A26  
                                      STR_6 624E                                        STR_7 61EF  
                                      l9958 27C2                                        l9974 2862  
                                      l9990 246A                                        l9982 240A  
                                      STR_8 61E2                                        STR_9 61AA  
                                      l9888 52BC                                        l9996 24AA  
                                      l9998 24DE                              timer_dois@flag 0042  
                                      _BRGH 007D62                             __end_of_GPSRead 1EFE  
                                      _CREN 007D5C                                        _T0IF 007F92  
                              ?_escreve_SPI 0001                             __end_of_GPSHour 53C6  
                                      _LATB 000F8A                                        _PIE1 000F9D  
                                      _RCIF 007CF5                                        u9200 29B2  
                                      u9120 28B0                                        u9220 29F4  
                                      u9140 28F0                                        u9207 29A8  
                                      u9127 28A6                                        u9240 2A34  
                                      u9160 2930                                        u9400 3134  
                                      u9330 3066                                        u9227 29EA  
                                      u9147 28E6                                        u9180 2970  
                                      u9500 2B62                                        u9430 2A94  
                                      u9247 2A2A                                        u9167 2926  
                                      u6960 3648                                        u9360 3082  
                                      u9290 2FBC                                        u9187 2966  
                                      u6980 3658                                        u9540 2C14  
                                      u9700 41F0                                        u9470 2B46  
                                      u9630 418E                                        u6967 363E  
                                      u8920 5176                                        u9800 4250  
                                      u9720 4206                                        u9810 4254  
                                      u9650 41A4                                        u9820 4264  
                                      u9660 41B4                                        u9830 4270  
                                      u9670 41C0                                        u8927 516C  
                                      u9780 423A                                        u9870 42A4  
                                      _TMR0 000FD6                                        _TMR2 000FCC  
                                      _SPEN 007D5F                                        _TXEN 007D65  
                                      _SYNC 007D64                                trace_path@dj 00A7  
                              trace_path@fn 00A8                                trace_path@ds 00B8  
                              trace_path@fs 00B4                               ?_make_dirfile 0021  
                           __end_of_GPSyear 544E                                        _Term 0043  
                                      _flag 0033                                        _atoi 3F28  
                                      _main 52D4                                        _fsid 011C  
                                      _itoa 5272                     __end_of_fence_diff_long 6093  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        fsr2l 000FD9  
                                      btemp 0047                                        _utoa 455A  
                                      _sync 4E36                               disk_ioctl@cmd 0019  
                             disk_read@buff 0068                               disk_ioctl@res 001D  
                             disk_read@pdrv 006F                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                __end_of_calcula_diff_graus 2DE4                     ?_verifica_fence_externo 0001  
                 sdc_disk_initialize@buff_i 0067                                ___param_bank 000000  
                 sdc_disk_initialize@count1 0063                   sdc_disk_initialize@count2 0069  
                               _string_dado 0200                                       ??_fix 001B  
                                     ??_isr 000C                     __size_of_escrita_sdcard 012C  
                        __size_of_GPSMinute 0022                          __size_of_GPSSecond 0022  
          __size_of_configura_baudrate_uart 010C                                       l10020 25B4  
                                     l10100 337C                                       l10016 258A  
                                     l10104 33A2                                       l11000 0690  
                                     l10034 261A                                       l11010 0704  
                                     l10036 2636                                       l10116 33D0  
                                     l10044 4CF6                                       l10300 1B14  
                                     l10212 198A                                       l10134 3404  
                                     l10054 4690                                       l10310 1B40  
                                     l10222 19AC                                       l10152 347A  
                                     l10048 4D0A                                       l10400 45F0  
                                     l10320 1B68                                       l10232 19E0  
                                     l11040 08A8                                       l10058 46AE  
                                     l10242 1A04                                       l10218 19A0  
                                     l11018 0726                                       l10148 343E  
                                     l10092 3352                                       l10076 4708  
                                     l10164 4114                                       l11124 4C0E  
                                     l11116 4BDA                                       l10500 046C  
                                     l11108 3E26                                       l10406 465E  
                                     l11054 09CC                                       l10190 50D4  
                                     l11206 1320                                       l11118 4BE6  
                                     l11142 4562                                       l10184 4FAC  
                                     l11072 3B58                                       l11400 0F5C  
                                     l10408 4666                                       l10336 1BC6  
                                     l11048 09B6                                       l10600 35D2  
                                     l10504 04E8                                       l10512 051C  
                                     l11320 509C                                       l11152 4594  
                                     l11136 552C                                       l10178 4F9C  
                                     l10610 485A                                       l10354 1C2A  
                                     l10346 1BEE                                       l10266 1A88  
                                     l10530 5360                                       l10522 058A  
                                     l10450 01A6                                       l11322 50A4  
                                     l11236 13BC                                       l10460 01FE  
                                     l10436 00CC                                       l11092 47A8  
                                     l11412 0F8E                                       l10700 408C  
                                     l11316 5088                                       l11086 3C0C  
                                     l11350 0D36                                       l10614 485E  
                                     l10294 1B04                                       l10198 50F4  
                                     l11254 147C                                       l10518 0578  
                                     l10470 02E2                                       l11502 1164  
                                     l11318 508C                                       l12230 4380  
                                     l10368 54FE                                       l10528 535A  
                                     l11256 14A8                                       l10448 0186  
                                     l11096 47EE                                       l11504 117C  
                                     l11408 0F84                                       l10704 409A  
                                     l10720 4DB0                                       l10562 4E6C  
                                     l11362 0D96                                       l10626 48A4  
                                     l10546 5364                                       l10802 1FBE  
                                     l11098 47F6                                       l11514 11A4  
                                     l11442 1026                                       l11610 4736  
                                     l11602 4722                                       l10730 4DD0  
                                     l11178 528A                                       l12242 4416  
                                     l10652 48CA                                       l10900 22A6  
                                     l10820 2004                                       l11268 1500  
                                     l11524 11DE                                       l11460 107E  
                                     l11428 0FE4                                       l10708 40B0  
                                     l10740 511C                                       l12340 52FA  
                                     l10654 48D6                                       l11374 0DDE  
                                     l11366 0DA0                                       l10814 1FDC  
                                     l10806 1FC2                                       l10486 03A4  
                                     l10478 0336                                       l11542 1278  
                                     l11518 11B0                                       l11438 1010  
                                     l11606 472C                                       l10718 4DA8  
                                     l11710 3E42                                       l12334 52EC  
                                     l10664 490A                                       l11376 0DF2  
                                     l11384 0E62                                       l11392 0EF6  
                                     l10584 34FC                                       l10904 22AA  
                                     l10840 20B0                                       l10832 206E  
                                     l11288 1536                                       l10488 03B2  
                                     l11448 1052                                       l11552 12E0  
                                     l10752 5044                                       l11704 2DDA  
                                     l11720 3F20                                       l10914 22EA  
                                     l10850 20D8                                       l11546 1296  
                                     l11538 1258                                       l11482 1104  
                                     l11466 10B2                                       l10690 4058  
                                     l10682 402A                                       l10754 504C  
                                     l10746 5134                                       l10738 5114  
                                     l11570 3F2A                                       l11706 2DDC  
                                     l10828 2062                                       l11476 10F4  
                                     l10676 4012                                       l11572 3F2E  
                                     l11812 16AE                                       l10766 44E8  
                                     l10758 44C8                                       l10926 2378  
                                     l10846 20CC                                       l11486 1110  
                                     l11670 399E                                       l11662 38F6  
                                     l11590 3FBA                                       l11582 3F6E  
                                     l11718 3F1E                                       l11910 1890  
                                     l11814 16B2                                       l10776 452A  
                                     l10936 23B2                                       l10880 21DC  
                                     l10864 2104                                       l11496 1140  
                                     l10688 404C                                       l10954 0604  
                                     l10946 05AC                                       l10778 4532  
                                     l10890 223C                                       l10882 2202  
                                     l10858 20F0                                       l11674 39B8  
                                     l11586 3F84                                       l11834 1716  
                                     l10964 0628                                       l10948 05B2  
                                     l10884 2214                                       l11668 398E  
                                     l11860 1798                                       l11940 192A  
                                     l10982 0658                                       l11862 179C  
                                     l10992 0686                                       l11688 2C3A  
                                     l11936 1924                                       l10978 0654  
                                     l11882 17E6                                       l11794 1658  
                                     l11884 17EA                                       l11896 182E  
                           __end_of___aldiv 40C2                                       ?_atoi 001F  
                                     ?_main 0001                                       ?_itoa 0028  
                                     STR_10 6123                                       STR_11 61C7  
                                     STR_12 621B                                       STR_20 6108  
                                     STR_13 6211                                       STR_21 616A  
                                     STR_30 626E                                       STR_14 622F  
                                     STR_22 61D5                                       STR_23 6276  
                                     STR_15 6269                                       STR_31 615A  
                                     STR_24 627A                                       STR_32 6238  
                                     STR_16 60E1                                       STR_25 6264  
                                     STR_17 617A                                       STR_33 6138  
                                     STR_34 6238                                       STR_26 6247  
                                     STR_18 618A                                       STR_27 625F  
                                     STR_35 61B9                                       STR_19 6149  
                                     STR_28 625A                                       STR_36 6240  
                                     STR_37 627D                                       STR_29 6272  
                              ?_leitura_SPI 0001                             __end_of___lldiv 492A  
                                     ?_utoa 0020                                       ?_sync 0001  
                                     u11040 526E                                       u12010 1A26  
                                     u11060 4CAA                                       u11220 2F94  
                                     u12200 464E                                       u12120 1B90  
                                     _T0CON 000FD5                                       u11090 3C84  
                                     u11410 318C                                       u12050 1AB8  
                                     u11075 3C28                                       u11500 4E2E  
                                     u13100 05D2                                       u13020 2298  
                                     u11165 2E3C                                       u13005 2258  
                                     u11430 31CA                                       u12070 1AC4  
                                     u12207 4644                                       u11520 265E  
                                     u12160 1C06                                       u13120 05F8  
                           __end_of___llmod 4C2E                                       u12170 1C38  
                                     u13050 22E6                                       u11195 2EE2  
                                     u11507 4E24                                       u13107 05C8  
                                     u11620 2466                                       u12180 461C  
                                     u13300 09CA                                       u12420 0524  
                                     u12510 3578                                       u14030 10F2  
                                     u11615 243A                                       u13127 05EE  
                                     u12335 024A                                       u12440 4E68  
                                     u11720 46CE                                       u12600 5192  
                                     _T2CON 000FCA                                       u11545 26C4  
                                     u11810 33C6                                       u12530 485A  
                                     u11490 4E06                                       u13250 0722  
                                     u12187 4612                                       u13315 0A50  
                                     u13180 0650                                       u14140 1238  
                                     u11565 273E                                       u11645 250A  
                                     u13405 3D7E                                       u12630 48DA  
                                     u13350 47C8                                       u14230 3F7E  
                                     u12375 0322                                       u11920 4F98  
                                     u11760 333C                                       u12480 34F8  
                                     u12720 4DB4                                       u11497 4DFC  
                                     u13425 3DC2                                       u11770 3348  
                                     u13290 09B2                                       u12810 4518  
                                     u13610 13DC                                       u13370 4816  
                                     u14410 2C48                                       u11595 27CE  
                                     u11675 2596                                       u13435 3DFA  
                                     u11780 3372                                       u12820 453E  
                                     u13540 131C                                       u13460 4BEA  
                                     u14500 49F0                                       u12565 37A4  
                                     u13285 08C0                                       u13357 47BE  
                                     u12830 4556                                       u14190 12B8  
                                     u12750 5120                                       u12575 37C0  
                                     u12495 3508                                       u11880 3468  
                                     u12840 1FA8                                       u13640 1478  
                                     u12680 405C                                       u14360 4796  
                                     u14440 3E50                                       u14600 16BA  
                                     u15320 4938                                       u12585 37F0  
                                     u13377 480C                                       u11970 19BC  
                                     u12770 5074                                       u14610 16C2  
                                     u15330 4950                                       u12595 3810  
                                     u13395 3D46                                       u14371 5210  
                                     u13900 0EBC                                       u11980 19CC  
                                     u15308 43D4                                       u15309 43E8  
                                     u11990 19D8                                       u12790 44E4  
                                     u14550 1628                                       u11991 19D6  
                                     u12847 1F9E                                       u13680 151E  
                                     u14720 1840                                       u14560 162E  
                                     u13905 0EB2                                       u12777 506A  
                                     u15507 498C                                       u14740 185C  
                                     u12885 2020                                       u15517 4442  
                                     u13870 0DFE                                       u12990 2238  
                                     u14750 187C                                       u15527 445E  
                                     u13960 0FDA                                       u15537 447A  
                                     u13890 0E76                                       u14770 18E2  
                                     u13795 0BE6                                       u15547 1958  
                                     u14780 1918                                       u14748 185E  
                                     u15557 1ACA                                       u13990 1060  
                                     u14790 1932                                       u14758 187E  
                                     u15567 1B6E                                       u15577 51D2  
                                     u14778 18E4                                       u14796 1934  
                                     u14788 191A                             __end_of___lwdiv 4DE4  
                           __end_of___lwmod 5148                            __end_of_GPSMonth 5492  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _SPBRG 000FAF                 ?_verifica_diferenca_minutos 0001  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _TRISE 000F96                             __end_of_f_close 5356  
                             trace_path@dir 00AB                                       _TXSTA 000FAC  
                                     _FatFs 0038                             __end_of_f_lseek 0F6E  
                       ___lmul@multiplicand 001D                  __size_of_config_timer_dois 000E  
                           __end_of_f_mount 4F68                             __end_of_f_write 059C  
                __size_of_config_timer_zero 001A                               get_cluster@bc 0097  
                             get_cluster@fs 0099                               get_cluster@wc 0091  
                           __end_of_command 4CE6                                       _delay 5570  
                           clust2sect@clust 0025                             __end_of_fprintf 12EC  
                                     _fputc 518A                                       _fputs 479C  
                           __end_of_isdigit 5534                    __size_of_escreve_cmd_lcd 008C  
                                     atoi@a 0024                                       atoi@s 001F  
                            ??_make_dirfile 0023                              disk_ioctl@buff 001A  
                                     pclath 000FFA                              disk_read@count 006E  
                                     tablat 000FF5                              disk_ioctl@pdrv 001C  
                          ?_dados_gps_to_sd 0001                             __end_of_proceed 5652  
                                     plusw1 000FE3                                       plusw2 000FDB  
                                     ttemp5 0048                                       ttemp6 004B  
                                     ttemp7 004F                                       utoa@c 0027  
                                     utoa@v 0025                                       status 000FD8  
                             _troca_de_tela 161E                                       wtemp8 0048  
                        _armazena_longitude 53C6                               disk_write@res 0072  
            __end_of_verifica_fence_externo 4A14                             __initialization 42D4  
                       disk_initialize@pdrv 002D                         ?_armazena_longitude 0001  
                       disk_initialize@stat 002E                                __end_of_atoi 3FF6  
                              __end_of_main 5300                                clust2sect@fs 002E  
                              __end_of_itoa 52A4                                __end_of_utoa 45EE  
                              __end_of_sync 4E88                          _inicializa_tarefas 4B60  
                           escalonador@cont 00F7                            __end_of_Latitude 5570  
                       reserve_direntry@dir 00AF                           create_chain@clust 00A0  
                               auto_mount@p 009D                           create_chain@cstat 00A8  
                             sdc_reset@buff 002B                                      ??_atoi 0021  
                                    ??_main 0033                                      ??_itoa 002D  
                                    ??_utoa 0025                                      ??_sync 0031  
                             __activetblptr 000002                         ?_inicializa_tarefas 0001  
                      __end_of_desliga_uart 563A                                   ??_GPSRead 000A  
                                 ??_GPSHour 001B                              _next_dir_entry 3484  
                      ??_armazena_longitude 0021                        __size_of_desliga_SPI 000C  
                         get_fattime@f_time 0021                                   ??_GPSyear 001B  
                          ??_sdc_disk_write 002C                                      ?_delay 0001  
                    ?_escreve_caractere_lcd 0001                                      _ADCON1 000FC1  
                                    ?_fputc 00CC                            ___llmod@dividend 0019  
                                    ?_fputs 00D3                          auto_mount@bootsect 0095  
                                    _INT0IE 007F94                                      _INT0IF 007F91  
                             ?_dummy_clocks 0001                           __end_of_GPSMinute 54B4  
                         __end_of_GPSSecond 5470                                      i2l1378 3AC0  
                                    _PCLATH 000FFA                                      _INTCON 000FF2  
                                    i2l9290 55FA                                      _GPSDay 54B4  
                   __size_of_inicializa_SPI 0020                              ?_troca_de_tela 0001  
                                    _TMR0IF 007F92                          auto_mount@maxclust 0091  
                  __end_of_recebe_dado_uart 55FE                                      _SPPCFG 000F63  
                                    _SPPCON 000F65                                      _SSPBUF 000FC9  
                  __size_of_sdc_disk_status 0010                            __end_of_check_fs 48A8  
                      ??_inicializa_tarefas 0019                           ?_disparo_gravacao 0001  
                            trace_path@dptr 00B9                              trace_path@path 00A9  
                    reserve_direntry@sector 00B4                    __size_of_disk_initialize 0026  
                __end_of_posicao_cursor_lcd 4C8C                          ??_disparo_gravacao 00F2  
                            auto_mount@path 0079                                ?_move_window 0073  
                      __end_of_create_chain 3484                                _dado_arquivo 0249  
                    __size_of_init_hardware 0016                              auto_mount@stat 00A0  
                      __size_of_get_fattime 0156                                put_cluster@p 009C  
              ?_verifica_dados_operacionais 0001                        __size_of_get_cluster 0222  
                                    ___lmul 4CE6                                   ??___aldiv 0021  
                      __size_of_disk_status 0030                                      ___wmul 537C  
                        __size_of_Longitude 001E                                   ??___lldiv 0021  
                                    _f_open 12EC                                   ??___llmod 0021  
                                 ??___lwdiv 001D                                      _f_sync 3AEC  
                                 ??___lwmod 001D                                      _buffer 01BC  
                                    _estado 003F                                      _memcmp 45EE  
                                    _memcpy 50C2                            __end_of_init_lcd 44BE  
                                    _memset 5300                                   ??_f_close 0033  
                                    _rawFix 01F6                                      clear_0 432E  
                                    clear_1 4340                                      clear_2 434C  
                                    clear_3 4366                                   ??_f_lseek 00B4  
                                 ??_f_mount 001B                    configura_baudrate_uart@x 0060  
                                 ??_f_write 00B4                                      _strcat 507E  
                                    _strcmp 4ED6                         _sdc_disk_initialize 193C  
                                 ??_command 0023                                 GPSRead@buff 000A  
                                    _strcpy 503A                                      _strlen 5148  
                          put_cluster@clust 0088                                      fputc@c 00D0  
                        get_cluster@fatsect 0093                            __end_of_monta_sd 2A72  
                  __end_of_reserve_direntry 23E4                            __end_of_validate 4FB0  
                    __end_of_next_dir_entry 35E8                                   ??_fprintf 00F0  
                              __pdataCOMRAM 0046                                      fputs@n 00D8  
                                 ??_isdigit 0019                        __size_of_escalonador 00A6  
                          __end_of_response 5646                                __mediumconst 6062  
                           disk_read@sector 006A                             disk_read@result 0070  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_proceed 001B  
                          _write_timer_zero 566A                                      sync@fs 0031  
                 escreve_caractere_lcd@data 001B                              ??_dummy_clocks 0019  
                       _escreve_inteiro_lcd 5206                             sdc_disk_write@j 0065  
                                __accesstop 0060                     __end_of__initialization 436C  
                      ?_sdc_disk_initialize 0001                              disk_write@buff 0068  
            calcula_diff_graus@temp_var_deg 0060                              disk_write@pdrv 006F  
                      __size_of_escreve_SPI 0010                               ___rparam_used 000001  
                ??_verifica_diferenca_graus 0019                           ??_escreve_cmd_lcd 001B  
              ?_verifica_plausibilidade_lat 0001                __end_of_calcula_diff_minutos 3F28  
                                 ?_GPSMonth 0019                              __pcstackCOMRAM 0001  
               __end_of_endereco_cursor_lcd 4B60                                __pidataBANK1 5690  
                              __pidataBANK2 5697                           ?_mensagem_inicial 0001  
                   _configura_baudrate_uart 3D34                               __end_of_delay 558E  
                            _escrita_sdcard 3898                               __end_of_fputc 51CA  
                             __end_of_fputs 4826                        ?_escreve_inteiro_lcd 002E  
             ??_verifica_dados_operacionais 0019                          ??_mensagem_inicial 001F  
                      __end_of_make_dirfile 3742                                ?_put_cluster 0088  
                         reserve_direntry@c 00BB                           reserve_direntry@n 00B8  
                        _tarefa_em_execucao 003C                  __end_ofi2_write_timer_zero 5688  
                           ?_next_dir_entry 009B                      __size_of_sdc_disk_read 0124  
           configura_baudrate_uart@baudrate 0027                        reserve_direntry@dptr 00B9  
                      __size_of_leitura_SPI 000C                               _init_hardware 55C4  
                              auto_mount@fs 00A5                          __size_of_disk_read 0070  
                                   ??_delay 0019                              sdc_reset@count 0029  
                                   ??_fputc 0033                                     ??_fputs 00D7  
                           ??_troca_de_tela 0030                           __end_of_Longitude 5552  
              mensagem_inicial@msg_linha_um 0060                                  __pbssBANK0 00F8  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
            __size_of_escreve_frase_ram_lcd 0052                                     ?_GPSDay 0019  
             __end_of_escreve_frase_ram_lcd 4E36                       ??_sdc_disk_initialize 002C  
                                 ?_Latitude 001F                   escreve_inteiro_uart@F3215 02BF  
                                ??_GPSMonth 001B               ??_verifica_plausibilidade_lat 0019  
                    __end_of_escrita_sdcard 39C4                          __size_of_sdc_reset 0090  
                        troca_de_tela@state 003B                                     ?___lmul 0019  
                         ??_sdc_disk_status 0019                               make_dirfile@a 0029  
                             make_dirfile@b 0027                               make_dirfile@c 002B  
                             make_dirfile@n 002A                               make_dirfile@t 0028  
                                   ?___wmul 0019                       mensagem_inicial@F3661 60BF  
                     mensagem_inicial@F3659 60D0                       ??_escreve_inteiro_lcd 0030  
                                   ?_f_open 00C0                                     ?_f_sync 0088  
                         ??_disk_initialize 002D                       __size_of_desliga_uart 000E  
                                   ?_memcmp 0019                                     ?_memcpy 0019  
                   calcula_diff_graus@count 0065                                     ?_memset 0019  
                            ___lmul@product 0021                     calcula_diff_graus@point 0064  
                                   ?_strcat 0019                                     ?_strcmp 0001  
                                   ?_strcpy 0019                                     ?_strlen 0019  
                        _calcula_diff_graus 2C2E                                     i2l12000 1C54  
                                   i2l12012 1C8A                                     i2l12004 1C66  
                                   i2l12030 1D0A                                     i2l12014 1C94  
                                   i2l12104 1ECC                                     i2l12024 1CE6  
                                   i2l12050 1D78                                     i2l12042 1D5C  
                                   i2l12114 1EE8                                     i2l12108 1ED4  
                                   i2l12052 1D7E                                     i2l12036 1D32  
                                   i2l12028 1D06                                     i2l12300 3A80  
                                   i2l12080 1E1E                                     i2l12312 3AAC  
                                   i2l12304 3A8E                                     i2l12074 1DF4  
                                   i2l12066 1DC4                                     i2l12058 1DA8  
                                   i2l12314 3AB8                                     i2l12092 1E74  
                                   i2l12068 1DCA                                     i2l12086 1E48  
                                   i2l12272 3A1C                                     i2l11730 4ED8  
                                   i2l12098 1EA0                                     i2l11732 4EE0  
                                   i2l11724 4FB4                                     i2l12284 3A2C  
                                   i2l12296 3A72                                     i2l12288 3A5A  
                                   i2l11996 1C44                                     _INTCON2 000FF1  
                                   _INTCON3 000FF0                              ?_init_hardware 0001  
                                 ?_check_fs 0073                                  _disk_ioctl 54F6  
                                   _GPSRead 1C3C                                     _GPSHour 53A2  
                                _disk_write 4E88                                     _GPSyear 542C  
                            remove_chain@fs 00A6                         ?_calcula_diff_graus 0001  
      __size_of_verifica_dados_operacionais 0002                                     _SSPCON1 000FC6  
                  __size_of_inicializa_uart 0022                                     _SSPSTAT 000FC7  
                                _clust2sect 40C2                              _inicializa_SPI 54D6  
                           trace_path@clust 00B6                             __size_of_GPSDay 0022  
                                ??_Latitude 0021                               ?_remove_chain 00A0  
                     __size_of_create_chain 018C                                   ?_init_lcd 0001  
                        __size_of_stringcpy 0046                   calcula_diff_minutos@count 002D  
                             _sdc_disk_read 3C10                   calcula_diff_minutos@point 002C  
                              _desliga_uart 562C                                  _auto_mount 059C  
                                   __Hparam 0000                   ??_configura_baudrate_uart 002B  
  verifica_diferenca_graus@point_index_long 001F                                     __Lparam 0000  
                                 ?_monta_sd 001D                                   ?_validate 001F  
                           ?_escrita_sdcard 0001                           __end_of_disk_read 4AF6  
                             put_cluster@bc 009A                                   ?_response 0001  
   verifica_diferenca_graus@point_index_lat 001E                               put_cluster@fs 009E  
                      ??_calcula_diff_graus 0026                                     ___aldiv 3FF6  
                                f_close@res 0093                             __size_of___lmul 0056  
                                   ___lldiv 48A8                             __size_of___wmul 0026  
                                   ___llmod 4BC8                        __size_of_move_window 01AA  
                                check_fs@fs 0077                                     ___lwdiv 4D92  
                                   ___lwmod 5106                             __size_of_f_open 0332  
                           __size_of_f_sync 0124                        __end_of_dummy_clocks 5206  
                                   _f_close 532C                                     __pcinit 42D4  
                           __size_of_memcmp 0092                             __size_of_memcpy 0044  
                           __size_of_memset 002C                                     _f_lseek 0AE4  
                                _init_ports 558E                                     __ramtop 0800  
                                   _f_mount 4F20                                     __ptext0 52D4  
                                   __ptext1 492A                                     __ptext2 4420  
                                   __ptext3 55C4                                     __ptext4 558E  
                                   __ptext5 5688                                     __ptext6 55DA  
                                   __ptext7 55AA                                     __ptext8 566A  
                                   __ptext9 561E                                     _f_write 0012  
                                   _command 4C8C                                   _T0CONbits 000FD5  
                       auto_mount@totalsect 0099                             __size_of_strcat 0044  
                           __size_of_strcmp 004A                             __size_of_strcpy 0044  
                           __size_of_strlen 0042                 endereco_cursor_lcd@endereco 001B  
                                   _fprintf 0F6E                                __size_of_fix 000A  
                                   _rawDate 01DA                                     _isdigit 5516  
                              __size_of_isr 3AE4        __size_of_verifica_plausibilidade_lat 00B0  
                   ??_escreve_caractere_lcd 001B                                  ??_check_fs 0031  
                                   _rawTime 01C8                            ___aldiv@dividend 0019  
                      _calcula_diff_minutos 3E40                                stringcpy@chr 0009  
                              stringcpy@dir 0005                                     _time_sd 00FC  
                              _create_chain 32F8                                     _proceed 5646  
                   __size_of_init_interrupt 0012                          _point_buff_gps_lat 00F8  
                         __end_of_sdc_reset 4710                      __end_of_inicializa_SPI 54F6  
                                f_lseek@ofs 00B0                              __pintcode_body 39C4  
                                f_lseek@res 00C4                        end_of_initialization 436C  
      __end_of_verifica_plausibilidade_long 4224       __size_of_verifica_plausibilidade_long 00B0  
              _verifica_plausibilidade_long 4174                                  f_open@mode 00C4  
                                f_open@path 00C2                              ??_remove_chain 00A2  
                                   isr@cont 0018                                     memcmp@n 001D  
                                   memcpy@d 0020                                     memcpy@n 001D  
                                   memcpy@s 0022                     __size_of_init_oscilador 0008  
                                   fputc@bw 00D1                                     itoa@buf 0028  
                                   memset@c 001B                                     itoa@val 0029  
                                   memset@n 001D                                     memset@p 001F  
                             __Lmediumconst 6062                                  ??_init_lcd 001C  
                                   int_func 39C4                           ?_recebe_dado_uart 0001  
          __end_of_verifica_diferenca_graus 314E                             disk_status@pdrv 001D  
                           disk_status@stat 001E                              ?_sdc_disk_read 0025  
                                 i2u1448_40 4F14                                   i2u1536_40 3A0C  
                                 i2u1537_48 3A0E                                   _GPSMinute 5492  
                                 _GPSSecond 544E                      write_timer_zero@timer0 0019  
                           ___lldiv@divisor 001D                               _rawSatellites 01F3  
                                f_mount@drv 001B                          ??_recebe_dado_uart 0001  
                           ___lldiv@counter 0025                                  ??_monta_sd 001F  
                                ??_validate 0023                       __size_of_make_dirfile 015A  
                  __size_of_dados_gps_to_sd 0056                              _fence_diff_lat 6093  
                                ??_response 0019                                   _RCSTAbits 000FAB  
                  __end_of_write_timer_zero 5674                            ___aldiv@quotient 0023  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                                     utoa@buf 0020  
                                   utoa@val 0021                                  _wait_ready 523C  
                                   strcmp@r 0007                                     strlen@s 0019  
                                 _PORTBbits 000F81                   __size_of_disparo_gravacao 0044  
                                 _PORTDbits 000F83                                   _PORTEbits 000F84  
                           ??_init_hardware 001B                                  _trace_path 1EFE  
                        _posicao_cursor_lcd 4C2E                           __end_of_stringcpy 4FF6  
                             ??_desliga_SPI 0019                        __size_of_put_cluster 0266  
                     ?_calcula_diff_minutos 0001             __end_of_configura_baudrate_uart 3E40  
                               ?_disk_ioctl 0019                           ?_reserve_direntry 00AE  
                                f_write@btw 00B1                                  f_write@res 00C0  
                                 _TRISBbits 000F93                                 ?_disk_write 0068  
                                 _TRISCbits 000F94                                   _TRISDbits 000F95  
                          next_dir_entry@dj 009B                             _escreve_cmd_lcd 4710  
                        ??_reserve_direntry 00B0                 __size_of_armazena_longitude 0022  
                       ?_posicao_cursor_lcd 001C                             ?_inicializa_SPI 0001  
                           disk_write@count 006E                                 ?_clust2sect 0025  
                          _put_cluster$1536 0092                            _put_cluster$1537 0094  
                                command@CMD 0023                                  command@CRC 0022  
                                command@arg 001E                                _make_dirfile 35E8  
             ?_verifica_plausibilidade_long 0001                              __end_of_GPSDay 54D6  
                             ??_get_fattime 0060                           ??_inicializa_uart 0033  
               __size_of_inicializa_tarefas 0068                                  ?_GPSMinute 0019  
                                ?_GPSSecond 0019                               ??_get_cluster 0088  
                    __end_of_fence_diff_lat 60BF                               ??_disk_status 001B  
                               ?_auto_mount 0079                           _make_dirfile$1646 0025  
                           command@argument 0024                        ??_posicao_cursor_lcd 001D  
                         __size_of_GPSMonth 0022                              __end_of___lmul 4D3C  
                            _temp_buff_long 0286                            ??_next_dir_entry 009C  
                            __end_of___wmul 53A2                              __end_of_f_open 161E  
                             __pidataCOMRAM 56A0                               ??_escalonador 00F5  
                               ?_init_ports 0001                              __end_of_f_sync 3C10  
                         _armazena_latitude 53E8                              __end_of_memcmp 4680  
                            __end_of_memcpy 5106                              __end_of_memset 532C  
                        ?_armazena_latitude 0001                              __end_of_strcat 50C2  
                            __end_of_strcmp 4F20                              __end_of_strcpy 507E  
                            __end_of_strlen 518A                            _time_atualizacao 0036  
                       start_initialization 42D4                                 __end_of_fix 567E  
                               __end_of_isr 3AEC                   __size_of_mensagem_inicial 0076  
                        reserve_direntry@dj 00AE                         ??_armazena_latitude 0021  
                        reserve_direntry@fs 00BE                      _armazena_latitude$3504 0021  
                       __end_of_desliga_SPI 566A                               ??_escreve_SPI 0019  
                  ??_verifica_fence_externo 002E                                    ??_GPSDay 001B  
                           _sdc_disk_status 55FE                             ??_sdc_disk_read 002C  
                         auto_mount@fatsize 00A1                          i2_write_timer_zero 567E  
                           ___llmod@divisor 001D                                   _Longitude 5534  
                           _disk_initialize 5356                             ___llmod@counter 0021  
                         __size_of_Latitude 001E                       reserve_direntry@clust 00BC  
                   __size_of_sdc_disk_write 01B6                            _data_uart_recebe 003E  
                         wait_ready@timeout 0019                       __size_of_dummy_clocks 003C  
                             auto_mount@fmt 009F                         __size_of_disk_ioctl 0020  
     verifica_diferenca_minutos@select_data 001D                         ?i2_write_timer_zero 0001  
                       __size_of_disk_write 004E                                    ??___lmul 0021  
                                fprintf@fil 00DA                                  fprintf@arp 02B9  
                                  ??___wmul 001D                                  fprintf@res 02AD  
                                fprintf@val 02B5                                  fprintf@str 00DC  
                       __end_of_get_fattime 3898                                    ??_f_open 00C5  
                 __end_of_armazena_latitude 540A                                    ??_f_sync 0033  
                               ?_wait_ready 0001                                 __pdataBANK1 01F8  
                               __pdataBANK2 02BF                         __end_of_get_cluster 286C  
                                  ??_memcmp 001F                         __end_of_disk_status 52D4  
                                  ??_memcpy 001F                         __size_of_clust2sect 00B2  
                                  ??_memset 001F                      sdc_disk_read@start_add 0061  
                      __end_of_remove_chain 455A                           ??_dados_gps_to_sd 0022  
                   sdc_disk_initialize@buff 006B                               ??_leitura_SPI 0019  
                   __end_of_escreve_cmd_lcd 479C                                    ??_strcat 001D  
                                  ??_strcmp 0005                                    ??_strcpy 001D  
                                  ??_strlen 001B                     sdc_disk_initialize@stat 0062  
                               ?_trace_path 00A7                      ??_calcula_diff_minutos 0026  
         __size_of_verifica_diferenca_graus 01B4                                _fprintf$2139 02AF  
              __size_of_endereco_cursor_lcd 006A                   ?_verifica_diferenca_graus 0001  
                               __pbssBIGRAM 02C6                               monta_sd@index 001F  
                               __pbssCOMRAM 0033                             _trace_path$1693 00B0  
                           _trace_path$1695 00B2                ??_verifica_diferenca_minutos 0019  
                                  ?_GPSRead 0001                                    ?_GPSHour 0019  
                             __pcstackBANK0 0060                               __pcstackBANK2 029D  
                            _init_interrupt 55DA                         __size_of_auto_mount 0548  
                      ??i2_write_timer_zero 0003                         __end_of_escalonador 4420  
               __end_of_sdc_disk_initialize 1C3C                                    ?_GPSyear 0019  
                         __size_of_check_fs 0082                                _isdigit$3141 001A  
                              check_fs@sect 0073                                 _char_number 0045  
                              _dummy_clocks 51CA                              _init_oscilador 5688  
                     __end_of_troca_de_tela 193C                                    GPSRead@c 000B  
                          ??_escrita_sdcard 0033                         __size_of_init_ports 001C  
                                ?_Longitude 001F                       _escreve_frase_ram_lcd 4DE4  
                               ??_GPSMinute 001B                                 ??_GPSSecond 001B  
                                 _data_buff 0122                                   _data_hoje 0041  
               __end_of_escreve_inteiro_lcd 523C                         __end_of_escreve_SPI 561E  
                         __size_of_init_lcd 009E                            ___lwdiv@dividend 0019  
                         delay@contador_int 001A                           delay@contador_ext 0019  
            ??_verifica_plausibilidade_long 0019         __end_of_verifica_dados_operacionais 56A0  
               _verifica_dados_operacionais 569E                                   __pintcode 0008  
                             __pmediumconst 6062                                    ?___aldiv 0019  
                                 __ptext100 54B4                                   __ptext101 562C  
                                 __ptext110 4FB0                                   __ptext102 565E  
                                 __ptext111 4ED6                                   __ptext103 4D3C  
                                 __ptext112 0000                                   __ptext104 286C  
                                 __ptext105 5148                                   __ptext107 567E  
                                 __ptext108 55EC                                   __ptext109 1C3C  
                         __size_of_monta_sd 0206                                    ?___lldiv 0019  
                                  ?___llmod 0019                           __size_of_validate 0048  
                                  ?___lwdiv 0019                                    ?___lwmod 0019  
       __size_of_verifica_diferenca_minutos 01BC                           __size_of_response 000C  
                                  ?_f_close 0091                                   _disk_read 4A86  
       verifica_diferenca_graus@select_data 001D                          _sinaliza_int_timer 003D  
                                  ?_f_lseek 00AE                                    ?_f_mount 0019  
                          _disparo_gravacao 4FF6                                    ?_f_write 00AE  
                                  ?_command 001E                      __end_of_init_interrupt 55EC  
                                  ?_fprintf 00DA                                    ?_isdigit 0001  
                               _desliga_SPI 565E                         sdc_disk_read@p_buff 0025  
                   troca_de_tela@last_state 003A                         sdc_disk_read@length 0065  
                       sdc_disk_read@sector 0027                     __end_of_sdc_disk_status 560E  
            __size_of_escreve_caractere_lcd 0072               __end_of_escreve_caractere_lcd 4A86  
                                  ?_proceed 0001                                   f_close@fp 0091  
                       __end_of_leitura_SPI 565E                            ___lwdiv@quotient 001E  
                            __size_of_delay 001E                     __end_of_disk_initialize 537C  
                    __end_of_init_oscilador 5690                              __size_of_fputc 0040  
                            __size_of_fputs 008A                         make_dirfile@dirname 0022  
                                validate@id 0021                                  validate@fs 001F  
                                 _p_tarefas 0110                                   _rawCourse 01E1  
           __size_of_verifica_fence_externo 0074                            make_dirfile@path 0021  
                                  _GPGGA_ok 011E                                   _sdc_reset 4680  
                       __size_of_wait_ready 0036                             ___aldiv@divisor 001D  
             verifica_diferenca_graus@point 0021                             ___aldiv@counter 0021  
                            ___wmul@product 001D                                    _LATBbits 000F8A  
                                 f_lseek@fp 00AE                                    _LATCbits 000F8B  
       __end_of_verifica_plausibilidade_lat 42D4                 _verifica_plausibilidade_lat 4224  
                                  _GPRMC_ok 0120                                   f_open@dir 00DC  
                                 f_open@res 00DB                                    _PIE1bits 000F9D  
                               _get_fattime 3742                                _rawLongitude 026C  
                       __size_of_trace_path 0278                                 _get_cluster 264A  
                                  _GPSMonth 5470                                 _disk_status 52A4  
                             ??_move_window 0077                                   f_mount@fs 0019  
                                  _PIR1bits 000F9E                               move_window@fs 0086  
               __size_of_calcula_diff_graus 01B6                           ?_write_timer_zero 0019  
                           remove_chain@nxt 00A4                  __size_of_armazena_latitude 0022  
                                 f_sync@dir 008F                                   f_sync@res 008E  
                                 f_sync@tim 008A                    posicao_cursor_lcd@coluna 001C  
                                ?_disk_read 0068                          ??_write_timer_zero 001B  
                                 f_write@cc 00C6                  posicao_cursor_lcd@endereco 001E  
                                 f_write@bw 00B3                                   f_write@fp 00AE  
                 __size_of_recebe_dado_uart 0012                                 _escalonador 437A  
                         ___wmul@multiplier 0019                            ?_escreve_cmd_lcd 0001  
               escreve_frase_ram_lcd@buffer 001C                            ??_inicializa_SPI 0019  
                           ?_init_interrupt 0001                                ??_disk_ioctl 001C  
               verifica_diferenca_minutos@i 0022                 verifica_diferenca_minutos@j 0020  
                              ??_disk_write 0030                                f_lseek@clust 00CD  
                           _inicializa_uart 540A                                f_lseek@csize 00C9  
                              f_lseek@ifptr 00C5                                   _stringcpy 4FB0  
                          __size_of_GPSRead 02C2                            _mensagem_inicial 492A  
                          __size_of_GPSHour 0024                               _temp_buff_lat 0292  
                           ?_init_oscilador 0001                                ??_clust2sect 0029  
                          __size_of_GPSyear 0022                           ___lmul@multiplier 0019  
                                 copy_data0 42E8                                   copy_data1 4308  
                               _escreve_SPI 560E                                  ?_sdc_reset 0001  
                       sdc_reset@count_nosd 0027                                    _Latitude 5552  
                  ?_configura_baudrate_uart 0027                      ?_escreve_frase_ram_lcd 001C  
                               ??_Longitude 0021                            auto_mount@chk_wp 007A  
                         move_window@sector 0073                              _sdc_disk_write 2DE4  
                 __size_of_reserve_direntry 026E                    escreve_inteiro_lcd@F3223 01F8  
                              ??_auto_mount 007B                                    __Hrparam 0000  
                                 memcpy@tmp 001F                                    __Lrparam 0000  
                                 fprintf@cc 02BA                          __end_of_disk_ioctl 5516  
                     __size_of_remove_chain 009C                              put_cluster@val 008A  
                          get_cluster@clust 0031                          __end_of_disk_write 4ED6  
                              _SentenceType 0044                            __size_of___aldiv 00CC  
                    sdc_disk_initialize@ocr 0068                                monta_sd@dado 001D  
                    _verifica_fence_externo 49A0                            __size_of___lldiv 0082  
                          __size_of___llmod 0066                               ??_put_cluster 008C  
                          __size_of___lwdiv 0052                                monta_sd@size 0020  
                          __size_of___lwmod 0042                                ??_init_ports 0019  
                       __end_of_move_window 32F8                          __end_of_clust2sect 4174  
                  escreve_inteiro_lcd@valor 002E                            __size_of_f_close 002A  
                  escreve_inteiro_lcd@texto 0060                            __size_of_f_lseek 048A  
                          __size_of_f_mount 0048                                 _leitura_SPI 5652  
                          __size_of_f_write 058A          __end_of_verifica_diferenca_minutos 2C2E  
                _verifica_diferenca_minutos 2A72                            __size_of_command 005A  
                __end_of_armazena_longitude 53E8                       __end_of_init_hardware 55DA  
                   _armazena_longitude$3503 0021                                    _check_fs 4826  
                                strcat@from 001B                            __size_of_fprintf 037E  
                          __size_of_isdigit 001E                             ___lwdiv@divisor 001B  
                          ?_sdc_disk_status 0001                                  ?_stringcpy 0001  
                             _time_recovery 00FA                             ___lwdiv@counter 001D  
                        __end_of_auto_mount 0AE4                                    __ptext10 4B60  
                                  __ptext11 437A                                    __ptext20 3E40  
                                  __ptext12 161E                                    __ptext21 2C2E  
                                  __ptext13 4FF6                                    __ptext30 4D92  
                                  __ptext22 3F28                                    __ptext14 569E  
                                  __ptext31 4710                                    __ptext23 5516  
                                  __ptext15 49A0                                    __ptext40 3FF6  
                                  __ptext32 5534                                    __ptext24 53C6  
                                  __ptext16 4174                                    __ptext41 54D6  
                                  __ptext33 5552                                    __ptext25 53E8  
                                  __ptext17 4224                                    __ptext50 2176  
                                  __ptext42 0F6E                                    __ptext34 5674  
                                  __ptext26 5206                                    __ptext18 2A72  
                                  __ptext51 3484                                    __ptext43 479C  
                                  __ptext35 3898                                    __ptext27 5272  
                                  __ptext19 2F9A                                    __ptext60 4C2E  
                                  __ptext52 40C2                                    __ptext44 518A  
                                  __ptext36 503A                                    __ptext28 455A  
                                  __ptext61 4AF6                                    __ptext53 44BE  
                                  __ptext45 0012                                    __ptext37 507E  
                                  __ptext29 5106                                    __ptext70 32F8  
                                  __ptext62 4DE4                                    __ptext54 50C2  
                                  __ptext46 4BC8                                    __ptext38 540A  
                                  __ptext71 23E4                                    __ptext63 4A14  
                                  __ptext55 059C                                    __ptext47 12EC  
                                  __ptext39 3D34                                    __ptext80 4E36  
                                  __ptext72 264A                                    __ptext64 5570  
                                  __ptext56 5300                                    __ptext48 1EFE  
                                  __ptext81 314E                                    __ptext73 537C  
                                  __ptext65 4826                                    __ptext57 5356  
                                  __ptext49 35E8                                    __ptext90 560E  
                                  __ptext82 4E88                                    __ptext74 48A8  
                                  __ptext66 45EE                                    __ptext58 193C  
                                  __ptext91 51CA                                    __ptext83 2DE4  
                                  __ptext75 532C                                    __ptext67 4CE6  
                                  __ptext59 4680                                    __ptext92 5652  
                                  __ptext84 4A86                                    __ptext76 3AEC  
                                  __ptext68 4F20                                    __ptext93 54F6  
                                  __ptext85 3C10                                    __ptext77 4F68  
                                  __ptext69 0AE4                                    __ptext94 3742  
                                  __ptext86 563A                                    __ptext78 52A4  
                                  __ptext95 542C                                    __ptext87 5646  
                                  __ptext79 55FE                                    __ptext96 544E  
                                  __ptext88 4C8C                                    __ptext97 5470  
                                  __ptext89 523C                                    __ptext98 5492  
                                  __ptext99 53A2                            __size_of_proceed 000C  
                                  _filename 025D                                 _rawAltitude 01D3  
                          ?_disk_initialize 0001                              _timeout_tarefa 011A  
                        sdc_disk_read@count 002B                                  strcpy@from 001B  
                       escrita_sdcard@f_fix 0040                  __end_of_inicializa_tarefas 4BC8  
                  i2write_timer_zero@timer0 0001                      __end_of_sdc_disk_write 2F9A  
                                 monta_sd@i 0021                                 _rawLatitude 0279  
                                  _init_lcd 4420                               __size_of_atoi 00CE  
                             __size_of_main 002C                                _remove_chain 44BE  
                             __size_of_itoa 0032                               __size_of_utoa 0094  
                             __size_of_sync 0052                         _endereco_cursor_lcd 4AF6  
                        __end_of_init_ports 55AA                                    _rawSpeed 01E7  
                             dummy_clocks@i 001C                                    f_open@dj 00DE  
                             dummy_clocks@n 001B                                    f_open@fn 00C9  
                                  f_open@fp 00C0                                    f_open@dw 00D7  
                                  f_open@rs 00D5                             _dados_gps_to_sd 4D3C  
                                  _monta_sd 286C                                    _validate 4F68  
                                  _sentence 01ED                                move_window@n 0081  
                             stringcpy@str1 0001                               stringcpy@str2 0003  
                                  _response 563A                                    f_sync@fp 0088  
                       _point_buff_gps_long 0118                 __size_of_posicao_cursor_lcd 005E  
                                  int$flags 0047                     posicao_cursor_lcd@linha 001D  
                                  atoi@sign 0023                                ??_wait_ready 0019  
                               ??_disk_read 0030                     __end_of_inicializa_uart 542C  
                              ??_trace_path 00AC                   verifica_diferenca_graus@i 0022  
                 verifica_diferenca_graus@j 0020                        ?_endereco_cursor_lcd 0001  
                        put_cluster@fatsect 0096                                  _INTCONbits 000FF2  
                                  memcmp@s1 0019                                    memcmp@s2 001B  
                          move_window@wsect 0082                                    memcpy@d1 0019  
                                  memcpy@s1 001B                         __end_of_put_cluster 264A  
                                  fprintf@c 02BE                                    fprintf@f 02B3  
                                  fprintf@i 02BC                                    fprintf@r 02B4  
                                  fprintf@s 029D                                    fprintf@w 02B1  
                                  fputc@chr 00CC                                    itoa@base 002B  
                                  fputc@fil 00CE                                    isdigit@c 001B  
                                  memset@p1 0019                           _config_timer_dois 561E  
                              _tempo_backup 0108                                    fputs@fil 00D5  
                                  fputs@str 00D3                           _config_timer_zero 55AA  
                              _poligono_ext 0124                               wait_ready@res 001D  
                                  intlevel2 0000                          ?_config_timer_dois 0001  
                  mensagem_inicial@msg_dois 0071                                 ??_sdc_reset 0025  
                        ?_config_timer_zero 0001                                _tempo_tarefa 0100  
                           ?_sdc_disk_write 0025                            ___lwmod@dividend 0019  
                        __end_of_wait_ready 5272                    __end_of_disparo_gravacao 503A  
                          ___lldiv@dividend 0019                           sdc_disk_read@buff 0067  
                     __end_of_sdc_disk_read 3D34                         sdc_disk_status@pdrv 001A  
                             ?_desliga_uart 0001                         ??_config_timer_dois 0019  
                                _OSCCONbits 000FD3                          __end_of_trace_path 2176  
                       ??_config_timer_zero 001B                                 _move_window 314E  
                           _fence_diff_long 6063                        sdc_disk_write@count1 0062  
verifica_diferenca_minutos@point_index_long 001F                        sdc_disk_write@p_buff 0025  
                          _recebe_dado_uart 55EC                                    utoa@base 0023  
                      sdc_disk_write@sector 0027                       ??_endereco_cursor_lcd 001B  
                              response@buff 0019                                    strcat@cp 001D  
                                  strcat@to 0019                                    strcmp@s1 0001  
                                  strcmp@s2 0003                                ?_desliga_SPI 0001  
                          ___lldiv@quotient 0021                             ___lwmod@divisor 001B  
                                  strcpy@cp 001D                                    strlen@cp 001B  
                                  strcpy@to 0019                             ___lwmod@counter 001D  
                         remove_chain@clust 00A0               __size_of_calcula_diff_minutos 00E8  
                 __end_of_config_timer_dois 562C                                ___aldiv@sign 0022  
                             ?_create_chain 00A0                   __end_of_config_timer_zero 55C4  
                               ??_stringcpy 0007                 __size_ofi2_write_timer_zero 000A  
                               _SSPCON1bits 000FC6                     __size_of_next_dir_entry 0164  
                    escreve_cmd_lcd@comando 001B   verifica_diferenca_minutos@point_index_lat 001E  
                       sdc_disk_write@count 002B               sdc_disk_initialize@crc_number 0065  
                   __end_of_dados_gps_to_sd 4D92                          sdc_disk_write@buff 0067  
              __size_of_sdc_disk_initialize 0300                                f_write@clust 00C8  
                            ??_desliga_uart 0019                          leitura_sdcard@size 0046  
                              f_write@wbuff 00C1                                ?_get_fattime 001D  
                          _reserve_direntry 2176                     disparo_gravacao@fix_gps 00F3  
                               f_write@buff 00B0                           sdc_disk_write@res 0064  
                              ?_get_cluster 0031                                 f_write@sect 00C2  
                               f_write@wcnt 00CA                                ?_disk_status 0001  
             __end_ofmensagem_inicial@F3661 60D0               __end_ofmensagem_inicial@F3659 60E1  
                           escreve_SPI@dado 001A  
