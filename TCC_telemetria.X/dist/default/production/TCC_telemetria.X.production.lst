

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Jun 26 15:24:13 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK0
   203  005C78                     __pidataBANK0:
   204                           	callstack 0
   205                           
   206                           ;initializer for leitura_sdcard@size
   207  005C78  58                 	db	88
   208                           
   209                           	psect	idataBANK1
   210  005BD6                     __pidataBANK1:
   211                           	callstack 0
   212                           
   213                           ;initializer for escreve_inteiro_uart@F3215
   214  005BD6  30                 	db	48
   215  005BD7  30                 	db	48
   216  005BD8  30                 	db	48
   217  005BD9  30                 	db	48
   218  005BDA  30                 	db	48
   219  005BDB  30                 	db	48
   220  005BDC  00                 	db	0
   221                           
   222                           ;initializer for escreve_inteiro_lcd@F3223
   223  005BDD  30                 	db	48
   224  005BDE  30                 	db	48
   225  005BDF  30                 	db	48
   226  005BE0  30                 	db	48
   227  005BE1  30                 	db	48
   228  005BE2  30                 	db	48
   229  005BE3  00                 	db	0
   230                           
   231                           	psect	idataBANK2
   232  004D22                     __pidataBANK2:
   233                           	callstack 0
   234                           
   235                           ;initializer for _dados_long
   236  004D22  30                 	db	48
   237  004D23  30                 	db	48
   238  004D24  30                 	db	48
   239  004D25  30                 	db	48
   240  004D26  30                 	db	48
   241  004D27  30                 	db	48
   242  004D28  30                 	db	48
   243  004D29  30                 	db	48
   244  004D2A  30                 	db	48
   245  004D2B  30                 	db	48
   246  004D2C  30                 	db	48
   247  004D2D  30                 	db	48
   248  004D2E  30                 	db	48
   249  004D2F  30                 	db	48
   250  004D30  30                 	db	48
   251  004D31  30                 	db	48
   252  004D32  30                 	db	48
   253  004D33  30                 	db	48
   254  004D34  30                 	db	48
   255  004D35  30                 	db	48
   256  004D36  30                 	db	48
   257  004D37  30                 	db	48
   258  004D38  30                 	db	48
   259  004D39  30                 	db	48
   260  004D3A  30                 	db	48
   261  004D3B  30                 	db	48
   262  004D3C  30                 	db	48
   263  004D3D  30                 	db	48
   264  004D3E  30                 	db	48
   265  004D3F  30                 	db	48
   266  004D40  30                 	db	48
   267  004D41  30                 	db	48
   268  004D42  30                 	db	48
   269  004D43  30                 	db	48
   270  004D44  30                 	db	48
   271  004D45  30                 	db	48
   272                           
   273                           ;initializer for _dados_lat
   274  004D46  30                 	db	48
   275  004D47  30                 	db	48
   276  004D48  30                 	db	48
   277  004D49  30                 	db	48
   278  004D4A  30                 	db	48
   279  004D4B  30                 	db	48
   280  004D4C  30                 	db	48
   281  004D4D  30                 	db	48
   282  004D4E  30                 	db	48
   283  004D4F  30                 	db	48
   284  004D50  00                 	db	0
   285  004D51  30                 	db	48
   286  004D52  30                 	db	48
   287  004D53  30                 	db	48
   288  004D54  30                 	db	48
   289  004D55  30                 	db	48
   290  004D56  30                 	db	48
   291  004D57  30                 	db	48
   292  004D58  30                 	db	48
   293  004D59  30                 	db	48
   294  004D5A  30                 	db	48
   295  004D5B  00                 	db	0
   296  004D5C  30                 	db	48
   297  004D5D  30                 	db	48
   298  004D5E  30                 	db	48
   299  004D5F  30                 	db	48
   300  004D60  30                 	db	48
   301  004D61  30                 	db	48
   302  004D62  30                 	db	48
   303  004D63  30                 	db	48
   304  004D64  30                 	db	48
   305  004D65  30                 	db	48
   306  004D66  00                 	db	0
   307                           
   308                           ;initializer for _dados_data
   309  004D67  30                 	db	48
   310  004D68  30                 	db	48
   311  004D69  30                 	db	48
   312  004D6A  30                 	db	48
   313  004D6B  30                 	db	48
   314  004D6C  30                 	db	48
   315  004D6D  30                 	db	48
   316  004D6E  30                 	db	48
   317  004D6F  30                 	db	48
   318  004D70  30                 	db	48
   319  004D71  30                 	db	48
   320  004D72  30                 	db	48
   321  004D73  30                 	db	48
   322  004D74  30                 	db	48
   323  004D75  30                 	db	48
   324  004D76  30                 	db	48
   325  004D77  30                 	db	48
   326  004D78  30                 	db	48
   327                           
   328                           ;initializer for _dados_hora
   329  004D79  30                 	db	48
   330  004D7A  30                 	db	48
   331  004D7B  30                 	db	48
   332  004D7C  30                 	db	48
   333  004D7D  30                 	db	48
   334  004D7E  30                 	db	48
   335  004D7F  30                 	db	48
   336  004D80  30                 	db	48
   337  004D81  30                 	db	48
   338  004D82  30                 	db	48
   339  004D83  30                 	db	48
   340  004D84  30                 	db	48
   341  004D85  30                 	db	48
   342  004D86  30                 	db	48
   343  004D87  30                 	db	48
   344  004D88  30                 	db	48
   345  004D89  30                 	db	48
   346  004D8A  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006106                     __pmediumconst:
   350                           	callstack 0
   351  006106  00                 	db	0
   352  006107                     mensagem_inicial@F3679:
   353                           	callstack 0
   354  006107  54                 	db	84
   355  006108  43                 	db	67
   356  006109  43                 	db	67
   357  00610A  2D                 	db	45
   358  00610B  2D                 	db	45
   359  00610C  54                 	db	84
   360  00610D  45                 	db	69
   361  00610E  4C                 	db	76
   362  00610F  45                 	db	69
   363  006110  4D                 	db	77
   364  006111  54                 	db	84
   365  006112  52                 	db	82
   366  006113  49                 	db	73
   367  006114  41                 	db	65
   368  006115  00                 	db	0
   369  006116  00                 	db	0
   370  006117  00                 	db	0
   371  006118                     __end_ofmensagem_inicial@F3679:
   372                           	callstack 0
   373  006118                     mensagem_inicial@F3677:
   374                           	callstack 0
   375  006118  46                 	db	70
   376  006119  41                 	db	65
   377  00611A  54                 	db	84
   378  00611B  45                 	db	69
   379  00611C  43                 	db	67
   380  00611D  20                 	db	32
   381  00611E  53                 	db	83
   382  00611F  54                 	db	84
   383  006120  20                 	db	32
   384  006121  41                 	db	65
   385  006122  4E                 	db	78
   386  006123  44                 	db	68
   387  006124  52                 	db	82
   388  006125  45                 	db	69
   389  006126  00                 	db	0
   390  006127  00                 	db	0
   391  006128  00                 	db	0
   392  006129                     __end_ofmensagem_inicial@F3677:
   393                           	callstack 0
   394  006129                     _fence_diff_long:
   395                           	callstack 0
   396  006129  2D                 	db	45
   397  00612A  30                 	db	48
   398  00612B  34                 	db	52
   399  00612C  36                 	db	54
   400  00612D  33                 	db	51
   401  00612E  33                 	db	51
   402  00612F  39                 	db	57
   403  006130  34                 	db	52
   404  006131  30                 	db	48
   405  006132  35                 	db	53
   406  006133  30                 	db	48
   407  006134  2D                 	db	45
   408  006135  30                 	db	48
   409  006136  34                 	db	52
   410  006137  36                 	db	54
   411  006138  32                 	db	50
   412  006139  39                 	db	57
   413  00613A  34                 	db	52
   414  00613B  31                 	db	49
   415  00613C  34                 	db	52
   416  00613D  37                 	db	55
   417  00613E  34                 	db	52
   418  00613F  2D                 	db	45
   419  006140  30                 	db	48
   420  006141  34                 	db	52
   421  006142  36                 	db	54
   422  006143  32                 	db	50
   423  006144  39                 	db	57
   424  006145  34                 	db	52
   425  006146  31                 	db	49
   426  006147  34                 	db	52
   427  006148  37                 	db	55
   428  006149  34                 	db	52
   429  00614A  2D                 	db	45
   430  00614B  30                 	db	48
   431  00614C  34                 	db	52
   432  00614D  36                 	db	54
   433  00614E  33                 	db	51
   434  00614F  33                 	db	51
   435  006150  39                 	db	57
   436  006151  34                 	db	52
   437  006152  30                 	db	48
   438  006153  35                 	db	53
   439  006154  30                 	db	48
   440  006155                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  006155                     _fence_diff_lat:
   443                           	callstack 0
   444  006155  2D                 	db	45
   445  006156  32                 	db	50
   446  006157  33                 	db	51
   447  006158  33                 	db	51
   448  006159  36                 	db	54
   449  00615A  34                 	db	52
   450  00615B  36                 	db	54
   451  00615C  36                 	db	54
   452  00615D  35                 	db	53
   453  00615E  33                 	db	51
   454  00615F  2D                 	db	45
   455  006160  32                 	db	50
   456  006161  33                 	db	51
   457  006162  33                 	db	51
   458  006163  36                 	db	54
   459  006164  34                 	db	52
   460  006165  36                 	db	54
   461  006166  36                 	db	54
   462  006167  35                 	db	53
   463  006168  33                 	db	51
   464  006169  2D                 	db	45
   465  00616A  32                 	db	50
   466  00616B  33                 	db	51
   467  00616C  34                 	db	52
   468  00616D  31                 	db	49
   469  00616E  38                 	db	56
   470  00616F  39                 	db	57
   471  006170  35                 	db	53
   472  006171  37                 	db	55
   473  006172  33                 	db	51
   474  006173  2D                 	db	45
   475  006174  32                 	db	50
   476  006175  33                 	db	51
   477  006176  34                 	db	52
   478  006177  31                 	db	49
   479  006178  38                 	db	56
   480  006179  39                 	db	57
   481  00617A  35                 	db	53
   482  00617B  37                 	db	55
   483  00617C  33                 	db	51
   484  00617D                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  00617D  6F                 	db	111	;'o'
   540  00617E  20                 	db	32
   541  00617F  53                 	db	83	;'S'
   542  006180  69                 	db	105	;'i'
   543  006181  73                 	db	115	;'s'
   544  006182  74                 	db	116	;'t'
   545  006183  65                 	db	101	;'e'
   546  006184  6D                 	db	109	;'m'
   547  006185  61                 	db	97	;'a'
   548  006186  20                 	db	32
   549  006187  64                 	db	100	;'d'
   550  006188  65                 	db	101	;'e'
   551  006189  20                 	db	32
   552  00618A  61                 	db	97	;'a'
   553  00618B  72                 	db	114	;'r'
   554  00618C  71                 	db	113	;'q'
   555  00618D  75                 	db	117	;'u'
   556  00618E  69                 	db	105	;'i'
   557  00618F  76                 	db	118	;'v'
   558  006190  6F                 	db	111	;'o'
   559  006191  00                 	db	0
   560  006192                     STR_2:
   561  006192  49                 	db	73	;'I'
   562  006193  6E                 	db	110	;'n'
   563  006194  73                 	db	115	;'s'
   564  006195  69                 	db	105	;'i'
   565  006196  72                 	db	114	;'r'
   566  006197  61                 	db	97	;'a'
   567  006198  20                 	db	32
   568  006199  6F                 	db	111	;'o'
   569  00619A  20                 	db	32
   570  00619B  43                 	db	67	;'C'
   571  00619C  61                 	db	97	;'a'
   572  00619D  72                 	db	114	;'r'
   573  00619E  74                 	db	116	;'t'
   574  00619F  61                 	db	97	;'a'
   575  0061A0  6F                 	db	111	;'o'
   576  0061A1  00                 	db	0
   577  0061A2                     STR_12:
   578  0061A2  76                 	db	118	;'v'
   579  0061A3  25                 	db	37
   580  0061A4  73                 	db	115	;'s'
   581  0061A5  3B                 	db	59	;';'
   582  0061A6  6C                 	db	108	;'l'
   583  0061A7  74                 	db	116	;'t'
   584  0061A8  25                 	db	37
   585  0061A9  73                 	db	115	;'s'
   586  0061AA  3B                 	db	59	;';'
   587  0061AB  6C                 	db	108	;'l'
   588  0061AC  6F                 	db	111	;'o'
   589  0061AD  25                 	db	37
   590  0061AE  73                 	db	115	;'s'
   591  0061AF  3B                 	db	59	;';'
   592  0061B0  00                 	db	0
   593  0061B1  45                 	db	69	;'E'
   594  0061B2  72                 	db	114	;'r'
   595  0061B3  72                 	db	114	;'r'
   596  0061B4  6F                 	db	111	;'o'
   597  0061B5  20                 	db	32
   598  0061B6  61                 	db	97	;'a'
   599  0061B7  6F                 	db	111	;'o'
   600  0061B8  20                 	db	32
   601  0061B9  6D                 	db	109	;'m'
   602  0061BA  6F                 	db	111	;'o'
   603  0061BB  6E                 	db	110	;'n'
   604  0061BC  74                 	db	116	;'t'
   605  0061BD  61                 	db	97	;'a'
   606  0061BE  72                 	db	114	;'r'
   607  0061BF  00                 	db	0
   608  0061C0  45                 	db	69	;'E'
   609  0061C1  72                 	db	114	;'r'
   610  0061C2  72                 	db	114	;'r'
   611  0061C3  6F                 	db	111	;'o'
   612  0061C4  20                 	db	32
   613  0061C5  61                 	db	97	;'a'
   614  0061C6  6F                 	db	111	;'o'
   615  0061C7  20                 	db	32
   616  0061C8  63                 	db	99	;'c'
   617  0061C9  72                 	db	114	;'r'
   618  0061CA  69                 	db	105	;'i'
   619  0061CB  61                 	db	97	;'a'
   620  0061CC  72                 	db	114	;'r'
   621  0061CD  00                 	db	0
   622  0061CE  65                 	db	101	;'e'
   623  0061CF  78                 	db	120	;'x'
   624  0061D0  74                 	db	116	;'t'
   625  0061D1  66                 	db	102	;'f'
   626  0061D2  65                 	db	101	;'e'
   627  0061D3  6E                 	db	110	;'n'
   628  0061D4  63                 	db	99	;'c'
   629  0061D5  65                 	db	101	;'e'
   630  0061D6  2E                 	db	46
   631  0061D7  74                 	db	116	;'t'
   632  0061D8  78                 	db	120	;'x'
   633  0061D9  74                 	db	116	;'t'
   634  0061DA  00                 	db	0
   635  0061DB                     STR_19:
   636  0061DB  41                 	db	65	;'A'
   637  0061DC  47                 	db	71	;'G'
   638  0061DD  55                 	db	85	;'U'
   639  0061DE  41                 	db	65	;'A'
   640  0061DF  52                 	db	82	;'R'
   641  0061E0  44                 	db	68	;'D'
   642  0061E1  45                 	db	69	;'E'
   643  0061E2  2E                 	db	46
   644  0061E3  2E                 	db	46
   645  0061E4  2E                 	db	46
   646  0061E5  00                 	db	0
   647  0061E6                     STR_4:
   648  0061E6  4D                 	db	77	;'M'
   649  0061E7  4D                 	db	77	;'M'
   650  0061E8  43                 	db	67	;'C'
   651  0061E9  20                 	db	32
   652  0061EA  56                 	db	86	;'V'
   653  0061EB  65                 	db	101	;'e'
   654  0061EC  72                 	db	114	;'r'
   655  0061ED  2E                 	db	46
   656  0061EE  20                 	db	32
   657  0061EF  33                 	db	51	;'3'
   658  0061F0  00                 	db	0
   659  0061F1                     STR_1:
   660  0061F1  53                 	db	83	;'S'
   661  0061F2  65                 	db	101	;'e'
   662  0061F3  6D                 	db	109	;'m'
   663  0061F4  20                 	db	32
   664  0061F5  43                 	db	67	;'C'
   665  0061F6  61                 	db	97	;'a'
   666  0061F7  72                 	db	114	;'r'
   667  0061F8  74                 	db	116	;'t'
   668  0061F9  61                 	db	97	;'a'
   669  0061FA  6F                 	db	111	;'o'
   670  0061FB  00                 	db	0
   671  0061FC                     STR_13:
   672  0061FC  72                 	db	114	;'r'
   673  0061FD  30                 	db	48	;'0'
   674  0061FE  3B                 	db	59	;';'
   675  0061FF  63                 	db	99	;'c'
   676  006200  30                 	db	48	;'0'
   677  006201  3B                 	db	59	;';'
   678  006202  6B                 	db	107	;'k'
   679  006203  30                 	db	48	;'0'
   680  006204  3B                 	db	59	;';'
   681  006205  00                 	db	0
   682  006206                     STR_14:
   683  006206  68                 	db	104	;'h'
   684  006207  25                 	db	37
   685  006208  73                 	db	115	;'s'
   686  006209  3B                 	db	59	;';'
   687  00620A  64                 	db	100	;'d'
   688  00620B  4E                 	db	78	;'N'
   689  00620C  2F                 	db	47
   690  00620D  41                 	db	65	;'A'
   691  00620E  3B                 	db	59	;';'
   692  00620F  00                 	db	0
   693  006210  56                 	db	86	;'V'
   694  006211  65                 	db	101	;'e'
   695  006212  72                 	db	114	;'r'
   696  006213  69                 	db	105	;'i'
   697  006214  66                 	db	102	;'f'
   698  006215  69                 	db	105	;'i'
   699  006216  71                 	db	113	;'q'
   700  006217  75                 	db	117	;'u'
   701  006218  65                 	db	101	;'e'
   702  006219  00                 	db	0
   703  00621A  6F                 	db	111	;'o'
   704  00621B  20                 	db	32
   705  00621C  61                 	db	97	;'a'
   706  00621D  72                 	db	114	;'r'
   707  00621E  71                 	db	113	;'q'
   708  00621F  75                 	db	117	;'u'
   709  006220  69                 	db	105	;'i'
   710  006221  76                 	db	118	;'v'
   711  006222  6F                 	db	111	;'o'
   712  006223  00                 	db	0
   713  006224                     STR_3:
   714  006224  53                 	db	83	;'S'
   715  006225  44                 	db	68	;'D'
   716  006226  20                 	db	32
   717  006227  56                 	db	86	;'V'
   718  006228  45                 	db	69	;'E'
   719  006229  52                 	db	82	;'R'
   720  00622A  2E                 	db	46
   721  00622B  20                 	db	32
   722  00622C  31                 	db	49	;'1'
   723  00622D  00                 	db	0
   724  00622E                     STR_32:
   725  00622E  42                 	db	66	;'B'
   726  00622F  31                 	db	49	;'1'
   727  006230  3A                 	db	58	;':'
   728  006231  46                 	db	70	;'F'
   729  006232  45                 	db	69	;'E'
   730  006233  4E                 	db	78	;'N'
   731  006234  43                 	db	67	;'C'
   732  006235  45                 	db	69	;'E'
   733  006236  00                 	db	0
   734  006237  6F                 	db	111	;'o'
   735  006238  20                 	db	32
   736  006239  63                 	db	99	;'c'
   737  00623A  61                 	db	97	;'a'
   738  00623B  72                 	db	114	;'r'
   739  00623C  74                 	db	116	;'t'
   740  00623D  61                 	db	97	;'a'
   741  00623E  6F                 	db	111	;'o'
   742  00623F  00                 	db	0
   743  006240                     STR_33:
   744  006240  42                 	db	66	;'B'
   745  006241  32                 	db	50	;'2'
   746  006242  3A                 	db	58	;':'
   747  006243  4C                 	db	76	;'L'
   748  006244  54                 	db	84	;'T'
   749  006245  4C                 	db	76	;'L'
   750  006246  4F                 	db	79	;'O'
   751  006247  00                 	db	0
   752  006248                     STR_25:
   753  006248  46                 	db	70	;'F'
   754  006249  45                 	db	69	;'E'
   755  00624A  4E                 	db	78	;'N'
   756  00624B  43                 	db	67	;'C'
   757  00624C  45                 	db	69	;'E'
   758  00624D  3A                 	db	58	;':'
   759  00624E  00                 	db	0
   760  00624F                     STR_22:
   761  00624F  44                 	db	68	;'D'
   762  006250  45                 	db	69	;'E'
   763  006251  4E                 	db	78	;'N'
   764  006252  54                 	db	84	;'T'
   765  006253  52                 	db	82	;'R'
   766  006254  4F                 	db	79	;'O'
   767  006255  00                 	db	0
   768  006256                     STR_23:
   769  006256  46                 	db	70	;'F'
   770  006257  4F                 	db	79	;'O'
   771  006258  52                 	db	82	;'R'
   772  006259  41                 	db	65	;'A'
   773  00625A  20                 	db	32
   774  00625B  00                 	db	0
   775  00625C                     STR_15:
   776  00625C  66                 	db	102	;'f'
   777  00625D  25                 	db	37
   778  00625E  63                 	db	99	;'c'
   779  00625F  3B                 	db	59	;';'
   780  006260  0A                 	db	10
   781  006261  00                 	db	0
   782  006262                     STR_29:
   783  006262  46                 	db	70	;'F'
   784  006263  49                 	db	73	;'I'
   785  006264  58                 	db	88	;'X'
   786  006265  3A                 	db	58	;':'
   787  006266  00                 	db	0
   788  006267                     STR_11:
   789  006267  2E                 	db	46
   790  006268  74                 	db	116	;'t'
   791  006269  6C                 	db	108	;'l'
   792  00626A  6D                 	db	109	;'m'
   793  00626B  00                 	db	0
   794  00626C                     STR_31:
   795  00626C  6C                 	db	108	;'l'
   796  00626D  6F                 	db	111	;'o'
   797  00626E  3A                 	db	58	;':'
   798  00626F  00                 	db	0
   799  006270                     STR_30:
   800  006270  6C                 	db	108	;'l'
   801  006271  74                 	db	116	;'t'
   802  006272  3A                 	db	58	;':'
   803  006273  00                 	db	0
   804  006274                     STR_17:
   805  006274  46                 	db	70	;'F'
   806  006275  41                 	db	65	;'A'
   807  006276  54                 	db	84	;'T'
   808  006277  00                 	db	0
   809  006278  0D                 	db	13
   810  006279  0A                 	db	10
   811  00627A  00                 	db	0
   812  00627B                     STR_20:
   813  00627B  30                 	db	48	;'0'
   814  00627C  00                 	db	0
   815  00627D                     STR_24:
   816  00627D  7C                 	db	124
   817  00627E  00                 	db	0
   818  00627F  00                 	db	0	; dummy byte at the end
   819  0000                     
   820                           ; #config settings
   821                           
   822                           	psect	cinit
   823  004368                     __pcinit:
   824                           	callstack 0
   825  004368                     start_initialization:
   826                           	callstack 0
   827  004368                     __initialization:
   828                           	callstack 0
   829                           
   830                           ; Initialize objects allocated to BANK2 (105 bytes)
   831                           ; load TBLPTR registers with __pidataBANK2
   832  004368  0E22               	movlw	low __pidataBANK2
   833  00436A  6EF6               	movwf	tblptrl,c
   834  00436C  0E4D               	movlw	high __pidataBANK2
   835  00436E  6EF7               	movwf	tblptrh,c
   836  004370  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   837  004372  6EF8               	movwf	tblptru,c
   838  004374  EE02  F07E         	lfsr	0,__pdataBANK2
   839  004378  EE10 F069          	lfsr	1,105
   840  00437C                     copy_data0:
   841  00437C  0009               	tblrd		*+
   842  00437E  CFF5 FFEE          	movff	tablat,postinc0
   843  004382  50E5               	movf	postdec1,w,c
   844  004384  50E1               	movf	fsr1l,w,c
   845  004386  E1FA               	bnz	copy_data0
   846                           
   847                           ; Initialize objects allocated to BANK1 (14 bytes)
   848                           ; load TBLPTR registers with __pidataBANK1
   849  004388  0ED6               	movlw	low __pidataBANK1
   850  00438A  6EF6               	movwf	tblptrl,c
   851  00438C  0E5B               	movlw	high __pidataBANK1
   852  00438E  6EF7               	movwf	tblptrh,c
   853  004390  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   854  004392  6EF8               	movwf	tblptru,c
   855  004394  EE01  F0EC         	lfsr	0,__pdataBANK1
   856  004398  EE10 F00E          	lfsr	1,14
   857  00439C                     copy_data1:
   858  00439C  0009               	tblrd		*+
   859  00439E  CFF5 FFEE          	movff	tablat,postinc0
   860  0043A2  50E5               	movf	postdec1,w,c
   861  0043A4  50E1               	movf	fsr1l,w,c
   862  0043A6  E1FA               	bnz	copy_data1
   863                           
   864                           ; Initialize objects allocated to BANK0 (1 bytes)
   865                           ; load TBLPTR registers with __pidataBANK0
   866  0043A8  0E78               	movlw	low __pidataBANK0
   867  0043AA  6EF6               	movwf	tblptrl,c
   868  0043AC  0E5C               	movlw	high __pidataBANK0
   869  0043AE  6EF7               	movwf	tblptrh,c
   870  0043B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   871  0043B2  6EF8               	movwf	tblptru,c
   872  0043B4  0009               	tblrd		*+	;fetch initializer
   873  0043B6  CFF5 F0FF          	movff	tablat,__pdataBANK0
   874                           
   875                           ; Clear objects allocated to BIGRAM (544 bytes)
   876  0043BA  EE03  F096         	lfsr	0,__pbssBIGRAM
   877  0043BE  EE12 F020          	lfsr	1,544
   878  0043C2                     clear_0:
   879  0043C2  6AEE               	clrf	postinc0,c
   880  0043C4  50E5               	movf	postdec1,w,c
   881  0043C6  50E1               	movf	fsr1l,w,c
   882  0043C8  E1FC               	bnz	clear_0
   883  0043CA  50E2               	movf	fsr1h,w,c
   884  0043CC  E1FA               	bnz	clear_0
   885                           
   886                           ; Clear objects allocated to BANK3 (150 bytes)
   887  0043CE  EE03  F000         	lfsr	0,__pbssBANK3
   888  0043D2  0E96               	movlw	150
   889  0043D4                     clear_1:
   890  0043D4  6AEE               	clrf	postinc0,c
   891  0043D6  06E8               	decf	wreg,f,c
   892  0043D8  E1FD               	bnz	clear_1
   893                           
   894                           ; Clear objects allocated to BANK2 (126 bytes)
   895  0043DA  EE02  F000         	lfsr	0,__pbssBANK2
   896  0043DE  0E7E               	movlw	126
   897  0043E0                     clear_2:
   898  0043E0  6AEE               	clrf	postinc0,c
   899  0043E2  06E8               	decf	wreg,f,c
   900  0043E4  E1FD               	bnz	clear_2
   901                           
   902                           ; Clear objects allocated to BANK1 (236 bytes)
   903  0043E6  EE01  F000         	lfsr	0,__pbssBANK1
   904  0043EA  0EEC               	movlw	236
   905  0043EC                     clear_3:
   906  0043EC  6AEE               	clrf	postinc0,c
   907  0043EE  06E8               	decf	wreg,f,c
   908  0043F0  E1FD               	bnz	clear_3
   909                           
   910                           ; Clear objects allocated to BANK0 (24 bytes)
   911  0043F2  EE00  F0E7         	lfsr	0,__pbssBANK0
   912  0043F6  0E18               	movlw	24
   913  0043F8                     clear_4:
   914  0043F8  6AEE               	clrf	postinc0,c
   915  0043FA  06E8               	decf	wreg,f,c
   916  0043FC  E1FD               	bnz	clear_4
   917                           
   918                           ; Clear objects allocated to COMRAM (9 bytes)
   919  0043FE  EE00  F04D         	lfsr	0,__pbssCOMRAM
   920  004402  0E09               	movlw	9
   921  004404                     clear_5:
   922  004404  6AEE               	clrf	postinc0,c
   923  004406  06E8               	decf	wreg,f,c
   924  004408  E1FD               	bnz	clear_5
   925  00440A                     end_of_initialization:
   926                           	callstack 0
   927  00440A                     __end_of__initialization:
   928                           	callstack 0
   929  00440A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   930  00440C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   931  00440E  0100               	movlb	0
   932  004410  EFC4  F02B         	goto	_main	;jump to C main() function
   933                           
   934                           	psect	bssCOMRAM
   935  00004D                     __pbssCOMRAM:
   936                           	callstack 0
   937  00004D                     _FatFs:
   938                           	callstack 0
   939  00004D                     	ds	2
   940  00004F                     troca_de_tela@last_state:
   941                           	callstack 0
   942  00004F                     	ds	1
   943  000050                     troca_de_tela@state:
   944                           	callstack 0
   945  000050                     	ds	1
   946  000051                     verifica_dados_operacionais@contador_atual:
   947                           	callstack 0
   948  000051                     	ds	1
   949  000052                     _tarefa_em_execucao:
   950                           	callstack 0
   951  000052                     	ds	1
   952  000053                     escrita_sdcard@f_fix:
   953                           	callstack 0
   954  000053                     	ds	1
   955  000054                     _is_it_rmc_string:
   956                           	callstack 0
   957  000054                     	ds	1
   958  000055                     _is_it_gga_string:
   959                           	callstack 0
   960  000055                     	ds	1
   961                           
   962                           	psect	bssBANK0
   963  0000E7                     __pbssBANK0:
   964                           	callstack 0
   965  0000E7                     _fence_flag:
   966                           	callstack 0
   967  0000E7                     	ds	3
   968  0000EA                     _time_atualizacao:
   969                           	callstack 0
   970  0000EA                     	ds	2
   971  0000EC                     _rmc_index:
   972                           	callstack 0
   973  0000EC                     	ds	2
   974  0000EE                     _gga_index:
   975                           	callstack 0
   976  0000EE                     	ds	2
   977  0000F0                     verifica_dados_operacionais@contador_anterior:
   978                           	callstack 0
   979  0000F0                     	ds	1
   980  0000F1                     _flag_anomalia:
   981                           	callstack 0
   982  0000F1                     	ds	1
   983  0000F2                     _sinaliza_int_timer:
   984                           	callstack 0
   985  0000F2                     	ds	1
   986  0000F3                     _data_uart_recebe:
   987                           	callstack 0
   988  0000F3                     	ds	1
   989  0000F4                     _estado:
   990                           	callstack 0
   991  0000F4                     	ds	1
   992  0000F5                     _fence:
   993                           	callstack 0
   994  0000F5                     	ds	1
   995  0000F6                     _data_hoje:
   996                           	callstack 0
   997  0000F6                     	ds	1
   998  0000F7                     	ds	1
   999  0000F8                     _comma_counter_rmc:
  1000                           	callstack 0
  1001  0000F8                     	ds	1
  1002  0000F9                     _comma_counter_gga:
  1003                           	callstack 0
  1004  0000F9                     	ds	1
  1005  0000FA                     _E_W:
  1006                           	callstack 0
  1007  0000FA                     	ds	1
  1008  0000FB                     _n_s:
  1009                           	callstack 0
  1010  0000FB                     	ds	1
  1011  0000FC                     _Term:
  1012                           	callstack 0
  1013  0000FC                     	ds	1
  1014  0000FD                     _SentenceType:
  1015                           	callstack 0
  1016  0000FD                     	ds	1
  1017  0000FE                     _char_number:
  1018                           	callstack 0
  1019  0000FE                     	ds	1
  1020                           
  1021                           	psect	dataBANK0
  1022  0000FF                     __pdataBANK0:
  1023                           	callstack 0
  1024  0000FF                     	ds	1
  1025                           
  1026                           	psect	bssBANK1
  1027  000100                     __pbssBANK1:
  1028                           	callstack 0
  1029  000100                     _poligono_ext:
  1030                           	callstack 0
  1031  000100                     	ds	16
  1032  000110                     _dado:
  1033                           	callstack 0
  1034  000110                     	ds	10
  1035  00011A                     _rawAltitude:
  1036                           	callstack 0
  1037  00011A                     	ds	7
  1038  000121                     	ds	6
  1039  000127                     _dados_vel:
  1040                           	callstack 0
  1041  000127                     	ds	6
  1042  00012D                     _tempo_tarefa:
  1043                           	callstack 0
  1044  00012D                     	ds	6
  1045  000133                     _tempo_backup:
  1046                           	callstack 0
  1047  000133                     	ds	6
  1048  000139                     _p_tarefas:
  1049                           	callstack 0
  1050  000139                     	ds	6
  1051  00013F                     _rawCourse:
  1052                           	callstack 0
  1053  00013F                     	ds	6
  1054  000145                     _sentence:
  1055                           	callstack 0
  1056  000145                     	ds	6
  1057  00014B                     _gps_flag:
  1058                           	callstack 0
  1059  00014B                     	ds	6
  1060  000151                     verifica_dados_operacionais@velocidade_atual_int:
  1061                           	callstack 0
  1062  000151                     	ds	4
  1063  000155                     	ds	4
  1064  000159                     _rmc_code:
  1065                           	callstack 0
  1066  000159                     	ds	3
  1067  00015C                     _gga_code:
  1068                           	callstack 0
  1069  00015C                     	ds	3
  1070  00015F                     _rawSatellites:
  1071                           	callstack 0
  1072  00015F                     	ds	3
  1073  000162                     _temp_buff_lat:
  1074                           	callstack 0
  1075  000162                     	ds	2
  1076  000164                     _temp_buff_long:
  1077                           	callstack 0
  1078  000164                     	ds	2
  1079  000166                     verifica_dados_operacionais@velocidade_atual:
  1080                           	callstack 0
  1081  000166                     	ds	2
  1082  000168                     _point_buff_gps_long:
  1083                           	callstack 0
  1084  000168                     	ds	2
  1085  00016A                     _point_buff_gps_lat:
  1086                           	callstack 0
  1087  00016A                     	ds	2
  1088  00016C                     _time_recovery:
  1089                           	callstack 0
  1090  00016C                     	ds	2
  1091  00016E                     _time_sd:
  1092                           	callstack 0
  1093  00016E                     	ds	2
  1094  000170                     _timeout_tarefa:
  1095                           	callstack 0
  1096  000170                     	ds	2
  1097  000172                     _fsid:
  1098                           	callstack 0
  1099  000172                     	ds	2
  1100  000174                     _teste:
  1101                           	callstack 0
  1102  000174                     	ds	2
  1103  000176                     _GPGGA_ok:
  1104                           	callstack 0
  1105  000176                     	ds	2
  1106  000178                     _GPRMC_ok:
  1107                           	callstack 0
  1108  000178                     	ds	2
  1109  00017A                     _data_buff:
  1110                           	callstack 0
  1111  00017A                     	ds	2
  1112  00017C                     _fil:
  1113                           	callstack 0
  1114  00017C                     	ds	28
  1115  000198                     _lo:
  1116                           	callstack 0
  1117  000198                     	ds	13
  1118  0001A5                     _rawLongitude:
  1119                           	callstack 0
  1120  0001A5                     	ds	13
  1121  0001B2                     _lt:
  1122                           	callstack 0
  1123  0001B2                     	ds	12
  1124  0001BE                     _rawLatitude:
  1125                           	callstack 0
  1126  0001BE                     	ds	12
  1127  0001CA                     _hora:
  1128                           	callstack 0
  1129  0001CA                     	ds	7
  1130  0001D1                     _rawTime:
  1131                           	callstack 0
  1132  0001D1                     	ds	7
  1133  0001D8                     _data:
  1134                           	callstack 0
  1135  0001D8                     	ds	6
  1136  0001DE                     _vel:
  1137                           	callstack 0
  1138  0001DE                     	ds	6
  1139  0001E4                     _rawDate:
  1140                           	callstack 0
  1141  0001E4                     	ds	6
  1142  0001EA                     _rawFix:
  1143                           	callstack 0
  1144  0001EA                     	ds	2
  1145                           
  1146                           	psect	dataBANK1
  1147  0001EC                     __pdataBANK1:
  1148                           	callstack 0
  1149  0001EC                     	ds	7
  1150  0001F3                     escreve_inteiro_lcd@F3223:
  1151                           	callstack 0
  1152  0001F3                     	ds	7
  1153                           
  1154                           	psect	bssBANK2
  1155  000200                     __pbssBANK2:
  1156                           	callstack 0
  1157  000200                     _string_dado:
  1158                           	callstack 0
  1159  000200                     	ds	22
  1160  000216                     _gga_pointers:
  1161                           	callstack 0
  1162  000216                     	ds	20
  1163  00022A                     _rmc_pointers:
  1164                           	callstack 0
  1165  00022A                     	ds	12
  1166  000236                     _buffer:
  1167                           	callstack 0
  1168  000236                     	ds	12
  1169  000242                     _dado_arquivo:
  1170                           	callstack 0
  1171  000242                     	ds	20
  1172  000256                     _filename:
  1173                           	callstack 0
  1174  000256                     	ds	20
  1175  00026A                     _rawSpeed:
  1176                           	callstack 0
  1177  00026A                     	ds	20
  1178                           
  1179                           	psect	dataBANK2
  1180  00027E                     __pdataBANK2:
  1181                           	callstack 0
  1182  00027E                     _dados_long:
  1183                           	callstack 0
  1184  00027E                     	ds	36
  1185  0002A2                     _dados_lat:
  1186                           	callstack 0
  1187  0002A2                     	ds	33
  1188  0002C3                     _dados_data:
  1189                           	callstack 0
  1190  0002C3                     	ds	18
  1191  0002D5                     _dados_hora:
  1192                           	callstack 0
  1193  0002D5                     	ds	18
  1194                           
  1195                           	psect	bssBANK3
  1196  000300                     __pbssBANK3:
  1197                           	callstack 0
  1198  000300                     _gga_buffer:
  1199                           	callstack 0
  1200  000300                     	ds	80
  1201  000350                     _rmc_buffer:
  1202                           	callstack 0
  1203  000350                     	ds	70
  1204                           
  1205                           	psect	bssBIGRAM
  1206  000396                     __pbssBIGRAM:
  1207                           	callstack 0
  1208  000396                     _fs:
  1209                           	callstack 0
  1210  000396                     	ds	544
  1211                           
  1212                           	psect	cstackBANK2
  1213  0002E7                     __pcstackBANK2:
  1214                           	callstack 0
  1215  0002E7                     disparo_gravacao@velocidade:
  1216                           	callstack 0
  1217                           
  1218                           ; 12 bytes @ 0x0
  1219  0002E7                     	ds	12
  1220  0002F3                     disparo_gravacao@fix_gps:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0xC
  1224  0002F3                     	ds	2
  1225  0002F5                     disparo_gravacao@v_max:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0xE
  1229  0002F5                     	ds	2
  1230  0002F7                     disparo_gravacao@index_max:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x10
  1234  0002F7                     	ds	2
  1235  0002F9                     disparo_gravacao@i:
  1236                           	callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x12
  1239  0002F9                     	ds	1
  1240                           
  1241                           	psect	cstackBANK0
  1242  000060                     __pcstackBANK0:
  1243                           	callstack 0
  1244  000060                     ??_get_cluster:
  1245  000060                     ??_auto_mount:
  1246  000060                     put_cluster@clust:
  1247                           	callstack 0
  1248  000060                     f_sync@fp:
  1249                           	callstack 0
  1250  000060                     latitude_to_convert@latitude:
  1251                           	callstack 0
  1252  000060                     longitude_to_convert@longitude:
  1253                           	callstack 0
  1254                           
  1255                           ; 11 bytes @ 0x0
  1256  000060                     	ds	2
  1257  000062                     put_cluster@val:
  1258                           	callstack 0
  1259  000062                     f_sync@tim:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x2
  1263  000062                     	ds	2
  1264  000064                     ??_put_cluster:
  1265                           
  1266                           ; 1 bytes @ 0x4
  1267  000064                     	ds	2
  1268  000066                     f_sync@res:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x6
  1272  000066                     	ds	1
  1273  000067                     f_sync@dir:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x7
  1277  000067                     	ds	2
  1278  000069                     latitude_to_convert@j:
  1279                           	callstack 0
  1280  000069                     get_cluster@wc:
  1281                           	callstack 0
  1282  000069                     f_close@fp:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x9
  1286  000069                     	ds	1
  1287  00006A                     latitude_to_convert@i:
  1288                           	callstack 0
  1289  00006A                     _put_cluster$1623:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0xA
  1293  00006A                     	ds	1
  1294  00006B                     longitude_to_convert@j:
  1295                           	callstack 0
  1296  00006B                     get_cluster@fatsect:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0xB
  1300  00006B                     	ds	1
  1301  00006C                     longitude_to_convert@i:
  1302                           	callstack 0
  1303  00006C                     _put_cluster$1624:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0xC
  1307  00006C                     	ds	2
  1308  00006E                     put_cluster@fatsect:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0xE
  1312  00006E                     	ds	1
  1313  00006F                     get_cluster@bc:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0xF
  1317  00006F                     	ds	2
  1318  000071                     get_cluster@fs:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x11
  1322  000071                     	ds	1
  1323  000072                     put_cluster@bc:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x12
  1327  000072                     	ds	1
  1328  000073                     ??_next_dir_entry:
  1329                           
  1330                           ; 1 bytes @ 0x13
  1331  000073                     	ds	1
  1332  000074                     put_cluster@p:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x14
  1336  000074                     	ds	2
  1337  000076                     put_cluster@fs:
  1338                           	callstack 0
  1339  000076                     auto_mount@maxclust:
  1340                           	callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x16
  1343  000076                     	ds	2
  1344  000078                     ?_create_chain:
  1345                           	callstack 0
  1346  000078                     remove_chain@clust:
  1347                           	callstack 0
  1348  000078                     create_chain@clust:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x18
  1352  000078                     	ds	2
  1353  00007A                     next_dir_entry@clust:
  1354                           	callstack 0
  1355  00007A                     auto_mount@bootsect:
  1356                           	callstack 0
  1357                           
  1358                           ; 4 bytes @ 0x1A
  1359  00007A                     	ds	2
  1360  00007C                     remove_chain@nxt:
  1361                           	callstack 0
  1362  00007C                     create_chain@mcl:
  1363                           	callstack 0
  1364  00007C                     next_dir_entry@idx:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x1C
  1368  00007C                     	ds	2
  1369  00007E                     trace_path@dj:
  1370                           	callstack 0
  1371  00007E                     remove_chain@fs:
  1372                           	callstack 0
  1373  00007E                     create_chain@fs:
  1374                           	callstack 0
  1375  00007E                     auto_mount@totalsect:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x1E
  1379  00007E                     	ds	1
  1380  00007F                     trace_path@fn:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x1F
  1384  00007F                     	ds	1
  1385  000080                     create_chain@cstat:
  1386                           	callstack 0
  1387  000080                     trace_path@path:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x20
  1391  000080                     	ds	2
  1392  000082                     trace_path@dir:
  1393                           	callstack 0
  1394  000082                     create_chain@scl:
  1395                           	callstack 0
  1396  000082                     auto_mount@p:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x22
  1400  000082                     	ds	1
  1401  000083                     ??_trace_path:
  1402                           
  1403                           ; 1 bytes @ 0x23
  1404  000083                     	ds	1
  1405  000084                     auto_mount@fmt:
  1406                           	callstack 0
  1407  000084                     create_chain@ncl:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x24
  1411  000084                     	ds	1
  1412  000085                     auto_mount@stat:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x25
  1416  000085                     	ds	1
  1417  000086                     reserve_direntry@dj:
  1418                           	callstack 0
  1419  000086                     f_write@fp:
  1420                           	callstack 0
  1421  000086                     f_lseek@fp:
  1422                           	callstack 0
  1423  000086                     auto_mount@fatsize:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x26
  1427  000086                     	ds	1
  1428  000087                     reserve_direntry@dir:
  1429                           	callstack 0
  1430  000087                     _trace_path$1780:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x27
  1434  000087                     	ds	1
  1435  000088                     ??_reserve_direntry:
  1436  000088                     f_write@buff:
  1437                           	callstack 0
  1438  000088                     f_lseek@ofs:
  1439                           	callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x28
  1442  000088                     	ds	1
  1443  000089                     _trace_path$1782:
  1444                           	callstack 0
  1445  000089                     f_write@btw:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x29
  1449  000089                     	ds	1
  1450  00008A                     auto_mount@fs:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x2A
  1454  00008A                     	ds	1
  1455  00008B                     f_write@bw:
  1456                           	callstack 0
  1457  00008B                     trace_path@fs:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x2B
  1461  00008B                     	ds	1
  1462  00008C                     ??_f_lseek:
  1463  00008C                     ??_f_write:
  1464  00008C                     reserve_direntry@sector:
  1465                           	callstack 0
  1466                           
  1467                           ; 4 bytes @ 0x2C
  1468  00008C                     	ds	1
  1469  00008D                     trace_path@clust:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x2D
  1473  00008D                     	ds	2
  1474  00008F                     trace_path@ds:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x2F
  1478  00008F                     	ds	1
  1479  000090                     reserve_direntry@n:
  1480                           	callstack 0
  1481  000090                     trace_path@dptr:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x30
  1485  000090                     	ds	1
  1486  000091                     reserve_direntry@dptr:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x31
  1490  000091                     	ds	2
  1491  000093                     reserve_direntry@c:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x33
  1495  000093                     	ds	1
  1496  000094                     reserve_direntry@clust:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x34
  1500  000094                     	ds	2
  1501  000096                     reserve_direntry@fs:
  1502                           	callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x36
  1505  000096                     	ds	2
  1506  000098                     f_write@res:
  1507                           	callstack 0
  1508  000098                     f_open@fp:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x38
  1512  000098                     	ds	1
  1513  000099                     f_write@wbuff:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x39
  1517  000099                     	ds	1
  1518  00009A                     f_open@path:
  1519                           	callstack 0
  1520  00009A                     f_write@sect:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x3A
  1524  00009A                     	ds	2
  1525  00009C                     f_open@mode:
  1526                           	callstack 0
  1527  00009C                     f_lseek@res:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x3C
  1531  00009C                     	ds	1
  1532  00009D                     ??_f_open:
  1533  00009D                     f_lseek@ifptr:
  1534                           	callstack 0
  1535                           
  1536                           ; 4 bytes @ 0x3D
  1537  00009D                     	ds	1
  1538  00009E                     f_write@cc:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x3E
  1542  00009E                     	ds	2
  1543  0000A0                     f_write@clust:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x40
  1547  0000A0                     	ds	1
  1548  0000A1                     f_lseek@csize:
  1549                           	callstack 0
  1550  0000A1                     f_open@fn:
  1551                           	callstack 0
  1552                           
  1553                           ; 12 bytes @ 0x41
  1554  0000A1                     	ds	1
  1555  0000A2                     f_write@wcnt:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x42
  1559  0000A2                     	ds	2
  1560  0000A4                     ?_fputc:
  1561                           	callstack 0
  1562  0000A4                     fputc@chr:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x44
  1566  0000A4                     	ds	1
  1567  0000A5                     f_lseek@clust:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x45
  1571  0000A5                     	ds	1
  1572  0000A6                     fputc@fil:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x46
  1576  0000A6                     	ds	2
  1577  0000A8                     fputc@c:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x48
  1581  0000A8                     	ds	1
  1582  0000A9                     fputc@bw:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x49
  1586  0000A9                     	ds	2
  1587  0000AB                     ?_fputs:
  1588                           	callstack 0
  1589  0000AB                     fputs@str:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x4B
  1593  0000AB                     	ds	2
  1594  0000AD                     f_open@rs:
  1595                           	callstack 0
  1596  0000AD                     fputs@fil:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x4D
  1600  0000AD                     	ds	2
  1601  0000AF                     fputs@n:
  1602                           	callstack 0
  1603  0000AF                     f_open@dw:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x4F
  1607  0000AF                     	ds	2
  1608  0000B1                     ?_fprintf:
  1609                           	callstack 0
  1610  0000B1                     fprintf@fil:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x51
  1614  0000B1                     	ds	2
  1615  0000B3                     f_open@res:
  1616                           	callstack 0
  1617  0000B3                     fprintf@str:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x53
  1621  0000B3                     	ds	1
  1622  0000B4                     f_open@dir:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x54
  1626  0000B4                     	ds	2
  1627  0000B6                     f_open@dj:
  1628                           	callstack 0
  1629                           
  1630                           ; 14 bytes @ 0x56
  1631  0000B6                     	ds	5
  1632  0000BB                     ??_fprintf:
  1633                           
  1634                           ; 1 bytes @ 0x5B
  1635  0000BB                     	ds	2
  1636  0000BD                     fprintf@s:
  1637                           	callstack 0
  1638                           
  1639                           ; 16 bytes @ 0x5D
  1640  0000BD                     	ds	16
  1641  0000CD                     fprintf@res:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x6D
  1645  0000CD                     	ds	2
  1646  0000CF                     _fprintf$2226:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x6F
  1650  0000CF                     	ds	2
  1651  0000D1                     fprintf@w:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x71
  1655  0000D1                     	ds	2
  1656  0000D3                     fprintf@f:
  1657                           	callstack 0
  1658                           
  1659                           ; 1 bytes @ 0x73
  1660  0000D3                     	ds	1
  1661  0000D4                     fprintf@r:
  1662                           	callstack 0
  1663                           
  1664                           ; 1 bytes @ 0x74
  1665  0000D4                     	ds	1
  1666  0000D5                     fprintf@val:
  1667                           	callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x75
  1670  0000D5                     	ds	4
  1671  0000D9                     fprintf@arp:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x79
  1675  0000D9                     	ds	1
  1676  0000DA                     fprintf@cc:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x7A
  1680  0000DA                     	ds	2
  1681  0000DC                     fprintf@i:
  1682                           	callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x7C
  1685  0000DC                     	ds	2
  1686  0000DE                     fprintf@c:
  1687                           	callstack 0
  1688                           
  1689                           ; 1 bytes @ 0x7E
  1690  0000DE                     	ds	1
  1691  0000DF                     ??_disparo_gravacao:
  1692                           
  1693                           ; 1 bytes @ 0x7F
  1694  0000DF                     	ds	5
  1695  0000E4                     ??_escalonador:
  1696                           
  1697                           ; 1 bytes @ 0x84
  1698  0000E4                     	ds	2
  1699  0000E6                     escalonador@cont:
  1700                           	callstack 0
  1701                           
  1702                           ; 1 bytes @ 0x86
  1703  0000E6                     	ds	1
  1704                           
  1705                           	psect	cstackCOMRAM
  1706  000001                     __pcstackCOMRAM:
  1707                           	callstack 0
  1708  000001                     tratamento_uart@received_char:
  1709                           	callstack 0
  1710  000001                     i2write_timer_zero@timer0:
  1711                           	callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x0
  1714  000001                     	ds	2
  1715  000003                     ??_isr:
  1716  000003                     
  1717                           ; 1 bytes @ 0x2
  1718  000003                     	ds	6
  1719  000009                     isr@cont:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x8
  1723  000009                     	ds	1
  1724  00000A                     ??_dummy_clocks:
  1725  00000A                     ??_isdigit:
  1726  00000A                     ?_fix:
  1727                           	callstack 0
  1728  00000A                     ?_latitude:
  1729                           	callstack 0
  1730  00000A                     ?_longitude:
  1731                           	callstack 0
  1732  00000A                     ?_rawhora:
  1733                           	callstack 0
  1734  00000A                     ?_rawdata:
  1735                           	callstack 0
  1736  00000A                     ?_Speed:
  1737                           	callstack 0
  1738  00000A                     ?_strlen:
  1739                           	callstack 0
  1740  00000A                     ?_memcmp:
  1741                           	callstack 0
  1742  00000A                     ?_gps_segundos:
  1743                           	callstack 0
  1744  00000A                     ?_gps_minutos:
  1745                           	callstack 0
  1746  00000A                     ?_gps_hora:
  1747                           	callstack 0
  1748  00000A                     ?_gps_dia:
  1749                           	callstack 0
  1750  00000A                     ?_gps_mes:
  1751                           	callstack 0
  1752  00000A                     ?_gps_ano:
  1753                           	callstack 0
  1754  00000A                     ?___wmul:
  1755                           	callstack 0
  1756  00000A                     ?___lwdiv:
  1757                           	callstack 0
  1758  00000A                     ?___lwmod:
  1759                           	callstack 0
  1760  00000A                     ?___ftpack:
  1761                           	callstack 0
  1762  00000A                     ?___lmul:
  1763                           	callstack 0
  1764  00000A                     ?___lldiv:
  1765                           	callstack 0
  1766  00000A                     ?___aldiv:
  1767                           	callstack 0
  1768  00000A                     ?___llmod:
  1769                           	callstack 0
  1770  00000A                     disk_ioctl@cmd:
  1771                           	callstack 0
  1772  00000A                     delay@contador_ext:
  1773                           	callstack 0
  1774  00000A                     get_gpstime@index:
  1775                           	callstack 0
  1776  00000A                     get_latitude@index_lat:
  1777                           	callstack 0
  1778  00000A                     get_longitude@index_long:
  1779                           	callstack 0
  1780  00000A                     get_rawdate@index_date:
  1781                           	callstack 0
  1782  00000A                     get_rawspeed@index_speed:
  1783                           	callstack 0
  1784  00000A                     get_fix@index_fix:
  1785                           	callstack 0
  1786  00000A                     response@buff:
  1787                           	callstack 0
  1788  00000A                     recebe_dado_gps@flag_recebe:
  1789                           	callstack 0
  1790  00000A                     verifica_plausibilidade_long@posicao:
  1791                           	callstack 0
  1792  00000A                     verifica_plausibilidade_lat@posicao:
  1793                           	callstack 0
  1794  00000A                     write_timer_zero@timer0:
  1795                           	callstack 0
  1796  00000A                     data_nome@p_buff:
  1797                           	callstack 0
  1798  00000A                     hora_nome@p_buff:
  1799                           	callstack 0
  1800  00000A                     f_mount@fs:
  1801                           	callstack 0
  1802  00000A                     ___wmul@multiplier:
  1803                           	callstack 0
  1804  00000A                     ___lwdiv@dividend:
  1805                           	callstack 0
  1806  00000A                     ___lwmod@dividend:
  1807                           	callstack 0
  1808  00000A                     memcmp@s1:
  1809                           	callstack 0
  1810  00000A                     memcpy@d1:
  1811                           	callstack 0
  1812  00000A                     memset@p1:
  1813                           	callstack 0
  1814  00000A                     strcat@to:
  1815                           	callstack 0
  1816  00000A                     strlen@s:
  1817                           	callstack 0
  1818  00000A                     ___ftpack@arg:
  1819                           	callstack 0
  1820  00000A                     wait_ready@timeout:
  1821                           	callstack 0
  1822  00000A                     ___lmul@multiplier:
  1823                           	callstack 0
  1824  00000A                     ___lldiv@dividend:
  1825                           	callstack 0
  1826  00000A                     ___aldiv@dividend:
  1827                           	callstack 0
  1828  00000A                     ___llmod@dividend:
  1829                           	callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x9
  1832  00000A                     	ds	1
  1833  00000B                     sdc_disk_status@pdrv:
  1834                           	callstack 0
  1835  00000B                     delay@contador_int:
  1836                           	callstack 0
  1837  00000B                     get_latitude@index:
  1838                           	callstack 0
  1839  00000B                     get_longitude@index:
  1840                           	callstack 0
  1841  00000B                     get_rawdate@index:
  1842                           	callstack 0
  1843  00000B                     get_rawspeed@index:
  1844                           	callstack 0
  1845  00000B                     get_fix@index:
  1846                           	callstack 0
  1847  00000B                     escreve_SPI@dado:
  1848                           	callstack 0
  1849  00000B                     recebe_dado_gps@timeout:
  1850                           	callstack 0
  1851  00000B                     _isdigit$3275:
  1852                           	callstack 0
  1853  00000B                     disk_ioctl@buff:
  1854                           	callstack 0
  1855                           
  1856                           ; 2 bytes @ 0xA
  1857  00000B                     	ds	1
  1858  00000C                     ??_gps_segundos:
  1859  00000C                     ??_gps_minutos:
  1860  00000C                     ??_gps_hora:
  1861  00000C                     ??_gps_dia:
  1862  00000C                     ??_gps_mes:
  1863  00000C                     ??_gps_ano:
  1864  00000C                     escreve_cmd_lcd@comando:
  1865                           	callstack 0
  1866  00000C                     endereco_cursor_lcd@endereco:
  1867                           	callstack 0
  1868  00000C                     escreve_caractere_lcd@data:
  1869                           	callstack 0
  1870  00000C                     dummy_clocks@n:
  1871                           	callstack 0
  1872  00000C                     data_nome@i:
  1873                           	callstack 0
  1874  00000C                     hora_nome@i:
  1875                           	callstack 0
  1876  00000C                     f_mount@drv:
  1877                           	callstack 0
  1878  00000C                     isdigit@c:
  1879                           	callstack 0
  1880  00000C                     ___wmul@multiplicand:
  1881                           	callstack 0
  1882  00000C                     ___lwdiv@divisor:
  1883                           	callstack 0
  1884  00000C                     ___lwmod@divisor:
  1885                           	callstack 0
  1886  00000C                     memcmp@s2:
  1887                           	callstack 0
  1888  00000C                     memcpy@s1:
  1889                           	callstack 0
  1890  00000C                     memset@c:
  1891                           	callstack 0
  1892  00000C                     strcat@from:
  1893                           	callstack 0
  1894  00000C                     strcpy@to:
  1895                           	callstack 0
  1896  00000C                     strlen@cp:
  1897                           	callstack 0
  1898                           
  1899                           ; 2 bytes @ 0xB
  1900  00000C                     	ds	1
  1901  00000D                     ??_init_lcd:
  1902  00000D                     disk_ioctl@pdrv:
  1903                           	callstack 0
  1904  00000D                     posicao_cursor_lcd@coluna:
  1905                           	callstack 0
  1906  00000D                     ___ftpack@exp:
  1907                           	callstack 0
  1908  00000D                     escreve_frase_ram_lcd@buffer:
  1909                           	callstack 0
  1910  00000D                     gps@flag_fix:
  1911                           	callstack 0
  1912  00000D                     dummy_clocks@i:
  1913                           	callstack 0
  1914                           
  1915                           ; 2 bytes @ 0xC
  1916  00000D                     	ds	1
  1917  00000E                     ?_get_fattime:
  1918                           	callstack 0
  1919  00000E                     disk_status@pdrv:
  1920                           	callstack 0
  1921  00000E                     disk_ioctl@res:
  1922                           	callstack 0
  1923  00000E                     posicao_cursor_lcd@linha:
  1924                           	callstack 0
  1925  00000E                     wait_ready@res:
  1926                           	callstack 0
  1927  00000E                     ___ftpack@sign:
  1928                           	callstack 0
  1929  00000E                     ___lwdiv@counter:
  1930                           	callstack 0
  1931  00000E                     ___lwmod@counter:
  1932                           	callstack 0
  1933  00000E                     ___wmul@product:
  1934                           	callstack 0
  1935  00000E                     memcmp@n:
  1936                           	callstack 0
  1937  00000E                     memcpy@n:
  1938                           	callstack 0
  1939  00000E                     memset@n:
  1940                           	callstack 0
  1941  00000E                     strcat@cp:
  1942                           	callstack 0
  1943  00000E                     strcpy@from:
  1944                           	callstack 0
  1945  00000E                     ___lmul@multiplicand:
  1946                           	callstack 0
  1947  00000E                     ___lldiv@divisor:
  1948                           	callstack 0
  1949  00000E                     ___aldiv@divisor:
  1950                           	callstack 0
  1951  00000E                     ___llmod@divisor:
  1952                           	callstack 0
  1953                           
  1954                           ; 4 bytes @ 0xD
  1955  00000E                     	ds	1
  1956  00000F                     ??___ftpack:
  1957  00000F                     disk_status@stat:
  1958                           	callstack 0
  1959  00000F                     posicao_cursor_lcd@endereco:
  1960                           	callstack 0
  1961  00000F                     ___lwdiv@quotient:
  1962                           	callstack 0
  1963  00000F                     command@arg:
  1964                           	callstack 0
  1965                           
  1966                           ; 4 bytes @ 0xE
  1967  00000F                     	ds	1
  1968  000010                     ??_memcmp:
  1969  000010                     ??_mensagem_inicial:
  1970  000010                     ?_atoi:
  1971                           	callstack 0
  1972  000010                     memcpy@tmp:
  1973                           	callstack 0
  1974  000010                     monta_sd@dado:
  1975                           	callstack 0
  1976  000010                     validate@fs:
  1977                           	callstack 0
  1978  000010                     memset@p:
  1979                           	callstack 0
  1980  000010                     strcpy@cp:
  1981                           	callstack 0
  1982  000010                     atoi@s:
  1983                           	callstack 0
  1984                           
  1985                           ; 3 bytes @ 0xF
  1986  000010                     	ds	1
  1987  000011                     utoa@buf:
  1988                           	callstack 0
  1989  000011                     memcpy@d:
  1990                           	callstack 0
  1991                           
  1992                           ; 2 bytes @ 0x10
  1993  000011                     	ds	1
  1994  000012                     ??_get_fattime:
  1995  000012                     make_dirfile@path:
  1996                           	callstack 0
  1997  000012                     ___aldiv@counter:
  1998                           	callstack 0
  1999  000012                     ___llmod@counter:
  2000                           	callstack 0
  2001  000012                     validate@id:
  2002                           	callstack 0
  2003  000012                     ___lmul@product:
  2004                           	callstack 0
  2005  000012                     ___lldiv@quotient:
  2006                           	callstack 0
  2007  000012                     mensagem_inicial@msg_linha_um:
  2008                           	callstack 0
  2009                           
  2010                           ; 17 bytes @ 0x11
  2011  000012                     	ds	1
  2012  000013                     ??_atoi:
  2013  000013                     command@CRC:
  2014                           	callstack 0
  2015  000013                     monta_sd@index:
  2016                           	callstack 0
  2017  000013                     make_dirfile@dirname:
  2018                           	callstack 0
  2019  000013                     ___aldiv@sign:
  2020                           	callstack 0
  2021  000013                     utoa@val:
  2022                           	callstack 0
  2023  000013                     memcpy@s:
  2024                           	callstack 0
  2025                           
  2026                           ; 2 bytes @ 0x12
  2027  000013                     	ds	1
  2028  000014                     ??_make_dirfile:
  2029  000014                     ??_validate:
  2030  000014                     command@CMD:
  2031                           	callstack 0
  2032  000014                     monta_sd@i:
  2033                           	callstack 0
  2034  000014                     ___aldiv@quotient:
  2035                           	callstack 0
  2036                           
  2037                           ; 4 bytes @ 0x13
  2038  000014                     	ds	1
  2039  000015                     command@argument:
  2040                           	callstack 0
  2041  000015                     atoi@sign:
  2042                           	callstack 0
  2043  000015                     utoa@base:
  2044                           	callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x14
  2047  000015                     	ds	1
  2048  000016                     ?_atol:
  2049                           	callstack 0
  2050  000016                     ?_clust2sect:
  2051                           	callstack 0
  2052  000016                     ___lldiv@counter:
  2053                           	callstack 0
  2054  000016                     sdc_disk_read@p_buff:
  2055                           	callstack 0
  2056  000016                     sdc_disk_write@p_buff:
  2057                           	callstack 0
  2058  000016                     clust2sect@clust:
  2059                           	callstack 0
  2060  000016                     _make_dirfile$1733:
  2061                           	callstack 0
  2062  000016                     atoi@a:
  2063                           	callstack 0
  2064  000016                     atol@s:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x15
  2068  000016                     	ds	1
  2069  000017                     ultoa@buf:
  2070                           	callstack 0
  2071  000017                     utoa@v:
  2072                           	callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x16
  2075  000017                     	ds	1
  2076  000018                     ?___awtoft:
  2077                           	callstack 0
  2078  000018                     make_dirfile@b:
  2079                           	callstack 0
  2080  000018                     sdc_reset@count_nosd:
  2081                           	callstack 0
  2082  000018                     ___awtoft@c:
  2083                           	callstack 0
  2084  000018                     sdc_disk_read@sector:
  2085                           	callstack 0
  2086  000018                     sdc_disk_write@sector:
  2087                           	callstack 0
  2088  000018                     configura_baudrate_uart@baudrate:
  2089                           	callstack 0
  2090  000018                     ultoa@val:
  2091                           	callstack 0
  2092                           
  2093                           ; 4 bytes @ 0x17
  2094  000018                     	ds	1
  2095  000019                     make_dirfile@t:
  2096                           	callstack 0
  2097  000019                     utoa@c:
  2098                           	callstack 0
  2099                           
  2100                           ; 1 bytes @ 0x18
  2101  000019                     	ds	1
  2102  00001A                     ??_atol:
  2103  00001A                     ??_clust2sect:
  2104  00001A                     make_dirfile@a:
  2105                           	callstack 0
  2106  00001A                     sdc_reset@count:
  2107                           	callstack 0
  2108  00001A                     itoa@buf:
  2109                           	callstack 0
  2110                           
  2111                           ; 2 bytes @ 0x19
  2112  00001A                     	ds	1
  2113  00001B                     make_dirfile@n:
  2114                           	callstack 0
  2115  00001B                     ___awtoft@sign:
  2116                           	callstack 0
  2117                           
  2118                           ; 1 bytes @ 0x1A
  2119  00001B                     	ds	1
  2120  00001C                     ??_configura_baudrate_uart:
  2121  00001C                     ?___ftmul:
  2122                           	callstack 0
  2123  00001C                     sdc_reset@buff:
  2124                           	callstack 0
  2125  00001C                     sdc_disk_read@count:
  2126                           	callstack 0
  2127  00001C                     sdc_disk_write@count:
  2128                           	callstack 0
  2129  00001C                     make_dirfile@c:
  2130                           	callstack 0
  2131  00001C                     itoa@val:
  2132                           	callstack 0
  2133  00001C                     ultoa@base:
  2134                           	callstack 0
  2135  00001C                     ___ftmul@f1:
  2136                           	callstack 0
  2137                           
  2138                           ; 3 bytes @ 0x1B
  2139  00001C                     	ds	1
  2140  00001D                     ??_sdc_disk_initialize:
  2141  00001D                     ??_sdc_disk_read:
  2142  00001D                     ??_sdc_disk_write:
  2143                           
  2144                           ; 1 bytes @ 0x1C
  2145  00001D                     	ds	1
  2146  00001E                     atol@sign:
  2147                           	callstack 0
  2148  00001E                     itoa@base:
  2149                           	callstack 0
  2150  00001E                     ultoa@v:
  2151                           	callstack 0
  2152                           
  2153                           ; 4 bytes @ 0x1D
  2154  00001E                     	ds	1
  2155  00001F                     clust2sect@fs:
  2156                           	callstack 0
  2157  00001F                     ___ftmul@f2:
  2158                           	callstack 0
  2159  00001F                     atol@a:
  2160                           	callstack 0
  2161                           
  2162                           ; 4 bytes @ 0x1E
  2163  00001F                     	ds	1
  2164  000020                     sdc_disk_initialize@stat:
  2165                           	callstack 0
  2166                           
  2167                           ; 1 bytes @ 0x1F
  2168  000020                     	ds	1
  2169  000021                     sdc_disk_initialize@count1:
  2170                           	callstack 0
  2171                           
  2172                           ; 2 bytes @ 0x20
  2173  000021                     	ds	1
  2174  000022                     ??___ftmul:
  2175  000022                     ultoa@c:
  2176                           	callstack 0
  2177  000022                     sdc_disk_read@start_add:
  2178                           	callstack 0
  2179                           
  2180                           ; 4 bytes @ 0x21
  2181  000022                     	ds	1
  2182  000023                     atol@c:
  2183                           	callstack 0
  2184  000023                     ltoa@buf:
  2185                           	callstack 0
  2186  000023                     sdc_disk_initialize@crc_number:
  2187                           	callstack 0
  2188  000023                     sdc_disk_write@count1:
  2189                           	callstack 0
  2190  000023                     mensagem_inicial@msg_dois:
  2191                           	callstack 0
  2192                           
  2193                           ; 17 bytes @ 0x22
  2194  000023                     	ds	1
  2195  000024                     ?_convert_to_int_point_lat:
  2196                           	callstack 0
  2197  000024                     ?_convert_to_int:
  2198                           	callstack 0
  2199  000024                     ?_convert_to_int_point_long:
  2200                           	callstack 0
  2201  000024                     configura_baudrate_uart@x:
  2202                           	callstack 0
  2203  000024                     convert_to_int@p_buff:
  2204                           	callstack 0
  2205  000024                     ltoa@val:
  2206                           	callstack 0
  2207                           
  2208                           ; 4 bytes @ 0x23
  2209  000024                     	ds	1
  2210  000025                     sdc_disk_initialize@buff_i:
  2211                           	callstack 0
  2212  000025                     sdc_disk_write@res:
  2213                           	callstack 0
  2214  000025                     ___ftmul@exp:
  2215                           	callstack 0
  2216                           
  2217                           ; 1 bytes @ 0x24
  2218  000025                     	ds	1
  2219  000026                     sdc_disk_initialize@ocr:
  2220                           	callstack 0
  2221  000026                     sdc_disk_read@length:
  2222                           	callstack 0
  2223  000026                     sdc_disk_write@j:
  2224                           	callstack 0
  2225  000026                     ___ftmul@f3_as_product:
  2226                           	callstack 0
  2227                           
  2228                           ; 3 bytes @ 0x25
  2229  000026                     	ds	1
  2230  000027                     sdc_disk_initialize@count2:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0x26
  2234  000027                     	ds	1
  2235  000028                     sdc_disk_read@buff:
  2236                           	callstack 0
  2237  000028                     sdc_disk_write@buff:
  2238                           	callstack 0
  2239  000028                     ltoa@base:
  2240                           	callstack 0
  2241  000028                     convert_to_int_point_lat@convert_str_lat:
  2242                           	callstack 0
  2243  000028                     convert_to_int_point_long@convert_str_long:
  2244                           	callstack 0
  2245                           
  2246                           ; 10 bytes @ 0x27
  2247  000028                     	ds	1
  2248  000029                     sdc_disk_initialize@buff:
  2249                           	callstack 0
  2250  000029                     ___ftmul@cntr:
  2251                           	callstack 0
  2252  000029                     disk_read@buff:
  2253                           	callstack 0
  2254  000029                     disk_write@buff:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x28
  2258  000029                     	ds	1
  2259  00002A                     disk_initialize@pdrv:
  2260                           	callstack 0
  2261  00002A                     ___ftmul@sign:
  2262                           	callstack 0
  2263                           
  2264                           ; 1 bytes @ 0x29
  2265  00002A                     	ds	1
  2266  00002B                     ?___fttol:
  2267                           	callstack 0
  2268  00002B                     disk_initialize@stat:
  2269                           	callstack 0
  2270  00002B                     ___fttol@f1:
  2271                           	callstack 0
  2272  00002B                     disk_read@sector:
  2273                           	callstack 0
  2274  00002B                     disk_write@sector:
  2275                           	callstack 0
  2276  00002B                     escreve_inteiro_lcd@valor:
  2277                           	callstack 0
  2278                           
  2279                           ; 4 bytes @ 0x2A
  2280  00002B                     	ds	4
  2281  00002F                     ??___fttol:
  2282  00002F                     disk_read@count:
  2283                           	callstack 0
  2284  00002F                     disk_write@count:
  2285                           	callstack 0
  2286  00002F                     escreve_inteiro_lcd@texto:
  2287                           	callstack 0
  2288                           
  2289                           ; 7 bytes @ 0x2E
  2290  00002F                     	ds	1
  2291  000030                     ??_disk_read:
  2292  000030                     ??_disk_write:
  2293                           
  2294                           ; 1 bytes @ 0x2F
  2295  000030                     	ds	1
  2296  000031                     disk_read@pdrv:
  2297                           	callstack 0
  2298  000031                     disk_write@pdrv:
  2299                           	callstack 0
  2300                           
  2301                           ; 1 bytes @ 0x30
  2302  000031                     	ds	1
  2303  000032                     convert_to_int_point_long@j:
  2304                           	callstack 0
  2305  000032                     disk_read@result:
  2306                           	callstack 0
  2307  000032                     disk_write@result:
  2308                           	callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x31
  2311  000032                     	ds	1
  2312  000033                     convert_to_int_point_lat@j:
  2313                           	callstack 0
  2314  000033                     convert_to_int_point_long@i:
  2315                           	callstack 0
  2316                           
  2317                           ; 1 bytes @ 0x32
  2318  000033                     	ds	1
  2319  000034                     disk_read@res:
  2320                           	callstack 0
  2321  000034                     disk_write@res:
  2322                           	callstack 0
  2323  000034                     convert_to_int_point_lat@i:
  2324                           	callstack 0
  2325  000034                     ___fttol@sign1:
  2326                           	callstack 0
  2327                           
  2328                           ; 1 bytes @ 0x33
  2329  000034                     	ds	1
  2330  000035                     diferenca@index:
  2331                           	callstack 0
  2332  000035                     move_window@sector:
  2333                           	callstack 0
  2334  000035                     check_fs@sect:
  2335                           	callstack 0
  2336  000035                     ___fttol@lval:
  2337                           	callstack 0
  2338                           
  2339                           ; 4 bytes @ 0x34
  2340  000035                     	ds	1
  2341  000036                     ??_troca_de_tela:
  2342  000036                     diferenca@valor_lat:
  2343                           	callstack 0
  2344                           
  2345                           ; 4 bytes @ 0x35
  2346  000036                     	ds	1
  2347  000037                     troca_de_tela@fix_signal:
  2348                           	callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x36
  2351  000037                     	ds	1
  2352  000038                     get_fattime@f_time:
  2353                           	callstack 0
  2354                           
  2355                           ; 10 bytes @ 0x37
  2356  000038                     	ds	1
  2357  000039                     ??_move_window:
  2358  000039                     ___fttol@exp1:
  2359                           	callstack 0
  2360                           
  2361                           ; 1 bytes @ 0x38
  2362  000039                     	ds	1
  2363  00003A                     diferenca@valor_long:
  2364                           	callstack 0
  2365                           
  2366                           ; 4 bytes @ 0x39
  2367  00003A                     	ds	1
  2368  00003B                     check_fs@fs:
  2369                           	callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x3A
  2372  00003B                     	ds	2
  2373  00003D                     auto_mount@path:
  2374                           	callstack 0
  2375                           
  2376                           ; 1 bytes @ 0x3C
  2377  00003D                     	ds	1
  2378  00003E                     auto_mount@chk_wp:
  2379                           	callstack 0
  2380  00003E                     armazena_ltlo@buffer:
  2381                           	callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x3D
  2384  00003E                     	ds	1
  2385  00003F                     armazena_ltlo@index:
  2386                           	callstack 0
  2387                           
  2388                           ; 1 bytes @ 0x3E
  2389  00003F                     	ds	1
  2390  000040                     armazena_ltlo@j:
  2391                           	callstack 0
  2392                           
  2393                           ; 1 bytes @ 0x3F
  2394  000040                     	ds	1
  2395  000041                     armazena_ltlo@i:
  2396                           	callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x40
  2399  000041                     	ds	1
  2400  000042                     
  2401                           ; 1 bytes @ 0x41
  2402  000042                     	ds	1
  2403  000043                     ??_verifica_fence:
  2404  000043                     move_window@n:
  2405                           	callstack 0
  2406                           
  2407                           ; 1 bytes @ 0x42
  2408  000043                     	ds	1
  2409  000044                     ??_verifica_dados_operacionais:
  2410  000044                     move_window@wsect:
  2411                           	callstack 0
  2412                           
  2413                           ; 4 bytes @ 0x43
  2414  000044                     	ds	4
  2415  000048                     move_window@fs:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x47
  2419  000048                     	ds	2
  2420  00004A                     ?_get_cluster:
  2421                           	callstack 0
  2422  00004A                     sync@fs:
  2423                           	callstack 0
  2424  00004A                     get_cluster@clust:
  2425                           	callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x49
  2428  00004A                     	ds	2
  2429  00004C                     ??_fputs:
  2430  00004C                     next_dir_entry@dj:
  2431                           	callstack 0
  2432  00004C                     f_close@res:
  2433                           	callstack 0
  2434                           
  2435                           ; 1 bytes @ 0x4B
  2436  00004C                     	ds	1
  2437  00004D                     
  2438                           ; 1 bytes @ 0x4C
  2439 ;;
  2440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2441 ;;
  2442 ;; *************** function _main *****************
  2443 ;; Defined at:
  2444 ;;		line 221 in file "main.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels required when called:   18
  2464 ;; This function calls:
  2465 ;;		_escalonador
  2466 ;;		_gps
  2467 ;;		_inicializa_tarefas
  2468 ;;		_inicializa_uart
  2469 ;;		_init_hardware
  2470 ;;		_init_lcd
  2471 ;;		_mensagem_inicial
  2472 ;; This function is called by:
  2473 ;;		Startup code after reset
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text0
  2478  005788                     __ptext0:
  2479                           	callstack 0
  2480  005788                     _main:
  2481                           	callstack 13
  2482                           
  2483                           ;main.c: 223: init_hardware();
  2484                           
  2485                           ;incstack = 0
  2486  005788  ECAD  F02D         	call	_init_hardware	;wreg free
  2487                           
  2488                           ;main.c: 224: T0CONbits.TMR0ON = 0;
  2489  00578C  9ED5               	bcf	213,7,c	;volatile
  2490                           
  2491                           ;main.c: 225: init_lcd();
  2492  00578E  EC01  F023         	call	_init_lcd	;wreg free
  2493                           
  2494                           ;main.c: 226: mensagem_inicial();
  2495  005792  EC50  F023         	call	_mensagem_inicial	;wreg free
  2496                           
  2497                           ;main.c: 227: inicializa_tarefas();
  2498  005796  EC12  F029         	call	_inicializa_tarefas	;wreg free
  2499                           
  2500                           ; BSR set to: 1
  2501                           ;main.c: 228: inicializa_uart();
  2502  00579A  ECD1  F02C         	call	_inicializa_uart	;wreg free
  2503                           
  2504                           ;main.c: 231: T0CONbits.TMR0ON = 1;
  2505  00579E  8ED5               	bsf	213,7,c	;volatile
  2506  0057A0                     l13868:
  2507                           
  2508                           ;main.c: 233: {;main.c: 235: if ((sinaliza_int_timer == 1) && (3))
  2509  0057A0  0100               	movlb	0	; () banked
  2510  0057A2  05F2               	decf	_sinaliza_int_timer& (0+255),w,b
  2511  0057A4  A4D8               	btfss	status,2,c
  2512  0057A6  D004               	goto	l13874
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 236: {;main.c: 237: sinaliza_int_timer = 0;
  2516  0057A8  0E00               	movlw	0
  2517  0057AA  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;main.c: 238: escalonador();
  2521  0057AC  EC0A  F022         	call	_escalonador	;wreg free
  2522  0057B0                     l13874:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;main.c: 239: };main.c: 240: gps();
  2526  0057B0  EC2E  F02B         	call	_gps	;wreg free
  2527  0057B4  D7F5               	goto	l13868
  2528  0057B6                     __end_of_main:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _mensagem_inicial *****************
  2532 ;; Defined at:
  2533 ;;		line 249 in file "main.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2538 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0
  2549 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2550 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2551 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2552 ;;Total ram usage:       36 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    5
  2555 ;; This function calls:
  2556 ;;		_escreve_cmd_lcd
  2557 ;;		_escreve_frase_ram_lcd
  2558 ;;		_posicao_cursor_lcd
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text1
  2565  0046A0                     __ptext1:
  2566                           	callstack 0
  2567  0046A0                     _mensagem_inicial:
  2568                           	callstack 25
  2569                           
  2570                           ;main.c: 251: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2571                           
  2572                           ;incstack = 0
  2573  0046A0  0E18               	movlw	low mensagem_inicial@F3677
  2574  0046A2  6EF6               	movwf	tblptrl,c
  2575  0046A4                     	if	1	;There is more than 1 active tblptr byte
  2576  0046A4  0E61               	movlw	high mensagem_inicial@F3677
  2577  0046A6  6EF7               	movwf	tblptrh,c
  2578  0046A8                     	endif
  2579  0046A8                     	if	1	;There are 3 active tblptr bytes
  2580  0046A8  0E00               	movlw	low (mensagem_inicial@F3677 shr (0+16))
  2581  0046AA  6EF8               	movwf	tblptru,c
  2582  0046AC                     	endif
  2583  0046AC  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2584  0046B0  0E10               	movlw	16
  2585  0046B2                     u16500:
  2586  0046B2  0009               	tblrd		*+
  2587  0046B4  CFF5 FFDE          	movff	tablat,postinc2
  2588  0046B8  06E8               	decf	wreg,f,c
  2589  0046BA  E2FB               	bc	u16500
  2590                           
  2591                           ;main.c: 252: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2592  0046BC  0E07               	movlw	low mensagem_inicial@F3679
  2593  0046BE  6EF6               	movwf	tblptrl,c
  2594  0046C0                     	if	1	;There is more than 1 active tblptr byte
  2595  0046C0  0E61               	movlw	high mensagem_inicial@F3679
  2596  0046C2  6EF7               	movwf	tblptrh,c
  2597  0046C4                     	endif
  2598  0046C4                     	if	1	;There are 3 active tblptr bytes
  2599  0046C4  0E00               	movlw	low (mensagem_inicial@F3679 shr (0+16))
  2600  0046C6  6EF8               	movwf	tblptru,c
  2601  0046C8                     	endif
  2602  0046C8  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2603  0046CC  0E10               	movlw	16
  2604  0046CE                     u16510:
  2605  0046CE  0009               	tblrd		*+
  2606  0046D0  CFF5 FFDE          	movff	tablat,postinc2
  2607  0046D4  06E8               	decf	wreg,f,c
  2608  0046D6  E2FB               	bc	u16510
  2609                           
  2610                           ;main.c: 254: posicao_cursor_lcd(1,0);
  2611  0046D8  0E00               	movlw	0
  2612  0046DA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2613  0046DC  0E01               	movlw	1
  2614  0046DE  EC5E  F027         	call	_posicao_cursor_lcd
  2615                           
  2616                           ;main.c: 255: escreve_frase_ram_lcd(msg_linha_um);
  2617  0046E2  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2618  0046E4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2619  0046E6  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2620  0046E8  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2621                           
  2622                           ;main.c: 257: posicao_cursor_lcd(2,0);
  2623  0046EC  0E00               	movlw	0
  2624  0046EE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2625  0046F0  0E02               	movlw	2
  2626  0046F2  EC5E  F027         	call	_posicao_cursor_lcd
  2627                           
  2628                           ;main.c: 258: escreve_frase_ram_lcd(msg_dois);
  2629  0046F6  0E23               	movlw	low mensagem_inicial@msg_dois
  2630  0046F8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2631  0046FA  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2632  0046FC  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2633                           
  2634                           ;main.c: 259: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2635  004700  0E3D               	movlw	61
  2636  004702  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2637  004704  0EE1               	movlw	225
  2638  004706  6E10               	movwf	??_mensagem_inicial^0,c
  2639  004708  0E40               	movlw	64
  2640  00470A                     u16677:
  2641  00470A  2EE8               	decfsz	wreg,f,c
  2642  00470C  D7FE               	bra	u16677
  2643  00470E  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2644  004710  D7FC               	bra	u16677
  2645  004712  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2646  004714  D7FA               	bra	u16677
  2647                           
  2648                           ;main.c: 260: escreve_cmd_lcd(0b00000001);
  2649  004716  0E01               	movlw	1
  2650  004718  EC2B  F024         	call	_escreve_cmd_lcd
  2651                           
  2652                           ;main.c: 261: posicao_cursor_lcd(1,0);
  2653  00471C  0E00               	movlw	0
  2654  00471E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2655  004720  0E01               	movlw	1
  2656  004722  EC5E  F027         	call	_posicao_cursor_lcd
  2657                           
  2658                           ;main.c: 262: escreve_frase_ram_lcd("AGUARDE...");
  2659  004726  0EDB               	movlw	low STR_19
  2660  004728  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2661  00472A  0E61               	movlw	high STR_19
  2662  00472C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2663  00472E  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2664  004732  0012               	return		;funcret
  2665  004734                     __end_of_mensagem_inicial:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _init_lcd *****************
  2669 ;; Defined at:
  2670 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        1 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    4
  2691 ;; This function calls:
  2692 ;;		_delay
  2693 ;;		_escreve_cmd_lcd
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text2
  2700  004602                     __ptext2:
  2701                           	callstack 0
  2702  004602                     _init_lcd:
  2703                           	callstack 26
  2704                           
  2705                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2706                           
  2707                           ;incstack = 0
  2708  004602  9495               	bcf	149,2,c	;volatile
  2709                           
  2710                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2711  004604  9295               	bcf	149,1,c	;volatile
  2712                           
  2713                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2714  004606  9095               	bcf	149,0,c	;volatile
  2715                           
  2716                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2717  004608  9895               	bcf	149,4,c	;volatile
  2718                           
  2719                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2720  00460A  9A95               	bcf	149,5,c	;volatile
  2721                           
  2722                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2723  00460C  9C95               	bcf	149,6,c	;volatile
  2724                           
  2725                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2726  00460E  9E95               	bcf	149,7,c	;volatile
  2727                           
  2728                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2729  004610  9483               	bcf	131,2,c	;volatile
  2730                           
  2731                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2732  004612  9283               	bcf	131,1,c	;volatile
  2733                           
  2734                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2735  004614  9083               	bcf	131,0,c	;volatile
  2736                           
  2737                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2738  004616  9E83               	bcf	131,7,c	;volatile
  2739                           
  2740                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2741  004618  9C83               	bcf	131,6,c	;volatile
  2742                           
  2743                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2744  00461A  8A83               	bsf	131,5,c	;volatile
  2745                           
  2746                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2747  00461C  8883               	bsf	131,4,c	;volatile
  2748                           
  2749                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2750  00461E  0EEA               	movlw	234
  2751  004620  6E0D               	movwf	??_init_lcd^0,c
  2752  004622  0EC3               	movlw	195
  2753  004624                     u16687:
  2754  004624  2EE8               	decfsz	wreg,f,c
  2755  004626  D7FE               	bra	u16687
  2756  004628  2E0D               	decfsz	??_init_lcd^0,f,c
  2757  00462A  D7FC               	bra	u16687
  2758  00462C  F000               	nop	
  2759                           
  2760                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2761  00462E  8083               	bsf	131,0,c	;volatile
  2762                           
  2763                           ;display_lcd.c: 108: delay();
  2764  004630  EC67  F02D         	call	_delay	;wreg free
  2765                           
  2766                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2767  004634  9083               	bcf	131,0,c	;volatile
  2768                           
  2769                           ;display_lcd.c: 110: delay();
  2770  004636  EC67  F02D         	call	_delay	;wreg free
  2771                           
  2772                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2773  00463A  0E4E               	movlw	78
  2774  00463C  6E0D               	movwf	??_init_lcd^0,c
  2775  00463E  0EEB               	movlw	235
  2776  004640                     u16697:
  2777  004640  2EE8               	decfsz	wreg,f,c
  2778  004642  D7FE               	bra	u16697
  2779  004644  2E0D               	decfsz	??_init_lcd^0,f,c
  2780  004646  D7FC               	bra	u16697
  2781  004648  F000               	nop	
  2782                           
  2783                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2784  00464A  8083               	bsf	131,0,c	;volatile
  2785                           
  2786                           ;display_lcd.c: 119: delay();
  2787  00464C  EC67  F02D         	call	_delay	;wreg free
  2788                           
  2789                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2790  004650  9083               	bcf	131,0,c	;volatile
  2791                           
  2792                           ;display_lcd.c: 121: delay();
  2793  004652  EC67  F02D         	call	_delay	;wreg free
  2794                           
  2795                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2796  004656  0E4E               	movlw	78
  2797  004658  6E0D               	movwf	??_init_lcd^0,c
  2798  00465A  0EEB               	movlw	235
  2799  00465C                     u16707:
  2800  00465C  2EE8               	decfsz	wreg,f,c
  2801  00465E  D7FE               	bra	u16707
  2802  004660  2E0D               	decfsz	??_init_lcd^0,f,c
  2803  004662  D7FC               	bra	u16707
  2804  004664  F000               	nop	
  2805                           
  2806                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2807  004666  8083               	bsf	131,0,c	;volatile
  2808                           
  2809                           ;display_lcd.c: 130: delay();
  2810  004668  EC67  F02D         	call	_delay	;wreg free
  2811                           
  2812                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2813  00466C  9083               	bcf	131,0,c	;volatile
  2814                           
  2815                           ;display_lcd.c: 132: delay();
  2816  00466E  EC67  F02D         	call	_delay	;wreg free
  2817                           
  2818                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2819  004672  9E83               	bcf	131,7,c	;volatile
  2820                           
  2821                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2822  004674  9C83               	bcf	131,6,c	;volatile
  2823                           
  2824                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2825  004676  8A83               	bsf	131,5,c	;volatile
  2826                           
  2827                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2828  004678  9883               	bcf	131,4,c	;volatile
  2829                           
  2830                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2831  00467A  8083               	bsf	131,0,c	;volatile
  2832                           
  2833                           ;display_lcd.c: 143: delay();
  2834  00467C  EC67  F02D         	call	_delay	;wreg free
  2835                           
  2836                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2837  004680  9083               	bcf	131,0,c	;volatile
  2838                           
  2839                           ;display_lcd.c: 145: delay();
  2840  004682  EC67  F02D         	call	_delay	;wreg free
  2841                           
  2842                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2843  004686  0E28               	movlw	40
  2844  004688  EC2B  F024         	call	_escreve_cmd_lcd
  2845                           
  2846                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2847  00468C  0E06               	movlw	6
  2848  00468E  EC2B  F024         	call	_escreve_cmd_lcd
  2849                           
  2850                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2851  004692  0E0E               	movlw	14
  2852  004694  EC2B  F024         	call	_escreve_cmd_lcd
  2853                           
  2854                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2855  004698  0E01               	movlw	1
  2856  00469A  EC2B  F024         	call	_escreve_cmd_lcd
  2857  00469E  0012               	return		;funcret
  2858  0046A0                     __end_of_init_lcd:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _init_hardware *****************
  2862 ;; Defined at:
  2863 ;;		line 52 in file "bibliotecas/hardware.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_config_timer_dois
  2886 ;;		_config_timer_zero
  2887 ;;		_init_interrupt
  2888 ;;		_init_oscilador
  2889 ;;		_init_ports
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text3
  2896  005B5A                     __ptext3:
  2897                           	callstack 0
  2898  005B5A                     _init_hardware:
  2899                           	callstack 26
  2900                           
  2901                           ;hardware.c: 55: init_oscilador();
  2902                           
  2903                           ;incstack = 0
  2904  005B5A  EC33  F02E         	call	_init_oscilador	;wreg free
  2905                           
  2906                           ;hardware.c: 58: init_ports();
  2907  005B5E  EC85  F02D         	call	_init_ports	;wreg free
  2908                           
  2909                           ;hardware.c: 61: config_timer_zero();
  2910  005B62  EC93  F02D         	call	_config_timer_zero	;wreg free
  2911                           
  2912                           ;hardware.c: 64: config_timer_dois();
  2913  005B66  ECF2  F02D         	call	_config_timer_dois	;wreg free
  2914                           
  2915                           ;hardware.c: 67: init_interrupt();
  2916  005B6A  ECB8  F02D         	call	_init_interrupt	;wreg free
  2917  005B6E  0012               	return		;funcret
  2918  005B70                     __end_of_init_hardware:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _init_ports *****************
  2922 ;; Defined at:
  2923 ;;		line 151 in file "bibliotecas/hardware.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_init_hardware
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text4
  2952  005B0A                     __ptext4:
  2953                           	callstack 0
  2954  005B0A                     _init_ports:
  2955                           	callstack 27
  2956                           
  2957                           ;hardware.c: 153: ADCON1 = 0X0F;
  2958                           
  2959                           ;incstack = 0
  2960  005B0A  0E0F               	movlw	15
  2961  005B0C  6EC1               	movwf	193,c	;volatile
  2962                           
  2963                           ;hardware.c: 154: TRISB = 0b00000001;
  2964  005B0E  0E01               	movlw	1
  2965  005B10  6E93               	movwf	147,c	;volatile
  2966                           
  2967                           ;hardware.c: 155: LATB = 0xFF;
  2968  005B12  688A               	setf	138,c	;volatile
  2969                           
  2970                           ;hardware.c: 156: TRISD = 0x00;
  2971  005B14  0E00               	movlw	0
  2972  005B16  6E95               	movwf	149,c	;volatile
  2973                           
  2974                           ;hardware.c: 157: TRISA = 0b00000111;
  2975  005B18  0E07               	movlw	7
  2976  005B1A  6E92               	movwf	146,c	;volatile
  2977                           
  2978                           ;hardware.c: 158: TRISC = 0x01111111;
  2979  005B1C  0E11               	movlw	17
  2980  005B1E  6E94               	movwf	148,c	;volatile
  2981                           
  2982                           ;hardware.c: 159: TRISE = 0b00000111;
  2983  005B20  0E07               	movlw	7
  2984  005B22  6E96               	movwf	150,c	;volatile
  2985  005B24  0012               	return		;funcret
  2986  005B26                     __end_of_init_ports:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _init_oscilador *****************
  2990 ;; Defined at:
  2991 ;;		line 169 in file "bibliotecas/hardware.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		None
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_init_hardware
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text5
  3020  005C66                     __ptext5:
  3021                           	callstack 0
  3022  005C66                     _init_oscilador:
  3023                           	callstack 27
  3024                           
  3025                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3026                           
  3027                           ;incstack = 0
  3028  005C66  88D3               	bsf	211,4,c	;volatile
  3029                           
  3030                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3031  005C68  8AD3               	bsf	211,5,c	;volatile
  3032                           
  3033                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3034  005C6A  8CD3               	bsf	211,6,c	;volatile
  3035  005C6C  0012               	return		;funcret
  3036  005C6E                     __end_of_init_oscilador:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _init_interrupt *****************
  3040 ;; Defined at:
  3041 ;;		line 94 in file "bibliotecas/hardware.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    2
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_init_hardware
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text6
  3070  005B70                     __ptext6:
  3071                           	callstack 0
  3072  005B70                     _init_interrupt:
  3073                           	callstack 27
  3074                           
  3075                           ;hardware.c: 96: INTCON = 0b10110000;
  3076                           
  3077                           ;incstack = 0
  3078  005B70  0EB0               	movlw	176
  3079  005B72  6EF2               	movwf	242,c	;volatile
  3080                           
  3081                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3082  005B74  0E00               	movlw	0
  3083  005B76  6EF1               	movwf	241,c	;volatile
  3084                           
  3085                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3086  005B78  0E00               	movlw	0
  3087  005B7A  6EF0               	movwf	240,c	;volatile
  3088                           
  3089                           ;hardware.c: 100: PIE1 = 0b00101000;
  3090  005B7C  0E28               	movlw	40
  3091  005B7E  6E9D               	movwf	157,c	;volatile
  3092  005B80  0012               	return		;funcret
  3093  005B82                     __end_of_init_interrupt:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _config_timer_zero *****************
  3097 ;; Defined at:
  3098 ;;		line 79 in file "bibliotecas/hardware.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3112 ;;      Params:         0       0       0       0       0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    3
  3119 ;; This function calls:
  3120 ;;		_write_timer_zero
  3121 ;; This function is called by:
  3122 ;;		_init_hardware
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text7
  3127  005B26                     __ptext7:
  3128                           	callstack 0
  3129  005B26                     _config_timer_zero:
  3130                           	callstack 26
  3131                           
  3132                           ;hardware.c: 81: T0CON = 0b11000101;
  3133                           
  3134                           ;incstack = 0
  3135  005B26  0EC5               	movlw	197
  3136  005B28  6ED5               	movwf	213,c	;volatile
  3137                           
  3138                           ;hardware.c: 82: SPPCON = 0b00000000;
  3139  005B2A  0E00               	movlw	0
  3140  005B2C  6E65               	movwf	101,c	;volatile
  3141                           
  3142                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3143  005B2E  0E00               	movlw	0
  3144  005B30  6E63               	movwf	99,c	;volatile
  3145                           
  3146                           ;hardware.c: 84: write_timer_zero(0x45);
  3147  005B32  0E00               	movlw	0
  3148  005B34  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3149  005B36  0E45               	movlw	69
  3150  005B38  6E0A               	movwf	write_timer_zero@timer0^0,c
  3151  005B3A  EC0B  F02E         	call	_write_timer_zero	;wreg free
  3152  005B3E  0012               	return		;funcret
  3153  005B40                     __end_of_config_timer_zero:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _write_timer_zero *****************
  3157 ;; Defined at:
  3158 ;;		line 134 in file "bibliotecas/hardware.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  timer0          2    9[COMRAM] unsigned int 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		None
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         2       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        2 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    2
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_config_timer_zero
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text8
  3187  005C16                     __ptext8:
  3188                           	callstack 0
  3189  005C16                     _write_timer_zero:
  3190                           	callstack 26
  3191                           
  3192                           ;hardware.c: 142: TMR0 = timer0;
  3193                           
  3194                           ;incstack = 0
  3195  005C16  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3196  005C1A  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3197  005C1E  0012               	return		;funcret
  3198  005C20                     __end_of_write_timer_zero:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _config_timer_dois *****************
  3202 ;; Defined at:
  3203 ;;		line 198 in file "bibliotecas/hardware.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    2
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_init_hardware
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text9
  3232  005BE4                     __ptext9:
  3233                           	callstack 0
  3234  005BE4                     _config_timer_dois:
  3235                           	callstack 27
  3236                           
  3237                           ;hardware.c: 200: T2CON = 0b00000100;
  3238                           
  3239                           ;incstack = 0
  3240  005BE4  0E04               	movlw	4
  3241  005BE6  6ECA               	movwf	202,c	;volatile
  3242                           
  3243                           ;hardware.c: 201: TMR2 = 0;
  3244  005BE8  0E00               	movlw	0
  3245  005BEA  6ECC               	movwf	204,c	;volatile
  3246                           
  3247                           ;hardware.c: 202: PR2 = 0x01;
  3248  005BEC  0E01               	movlw	1
  3249  005BEE  6ECB               	movwf	203,c	;volatile
  3250  005BF0  0012               	return		;funcret
  3251  005BF2                     __end_of_config_timer_dois:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _inicializa_tarefas *****************
  3255 ;; Defined at:
  3256 ;;		line 171 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 3F/1
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text10
  3285  005224                     __ptext10:
  3286                           	callstack 0
  3287  005224                     _inicializa_tarefas:
  3288                           	callstack 28
  3289                           
  3290                           ;main.c: 174: p_tarefas[0] = verifica_dados_operacionais;
  3291                           
  3292                           ;incstack = 0
  3293  005224  0E0C               	movlw	low _verifica_dados_operacionais
  3294  005226  0101               	movlb	1	; () banked
  3295  005228  6F39               	movwf	_p_tarefas& (0+255),b
  3296  00522A  0E2F               	movlw	high _verifica_dados_operacionais
  3297  00522C  6F3A               	movwf	(_p_tarefas+1)& (0+255),b
  3298                           
  3299                           ;main.c: 175: p_tarefas[1] = disparo_gravacao;
  3300  00522E  0E10               	movlw	low _disparo_gravacao
  3301  005230  6F3B               	movwf	(_p_tarefas+2)& (0+255),b
  3302  005232  0E28               	movlw	high _disparo_gravacao
  3303  005234  6F3C               	movwf	(_p_tarefas+3)& (0+255),b
  3304                           
  3305                           ;main.c: 176: p_tarefas[2] = troca_de_tela;
  3306  005236  0EFC               	movlw	low _troca_de_tela
  3307  005238  6F3D               	movwf	(_p_tarefas+4)& (0+255),b
  3308  00523A  0E1B               	movlw	high _troca_de_tela
  3309  00523C  6F3E               	movwf	(_p_tarefas+5)& (0+255),b
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;main.c: 180: tempo_backup[0] = 500;
  3313  00523E  0E01               	movlw	1
  3314  005240  6F34               	movwf	(_tempo_backup+1)& (0+255),b
  3315  005242  0EF4               	movlw	244
  3316  005244  6F33               	movwf	_tempo_backup& (0+255),b
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;main.c: 181: tempo_backup[1] = 1000;
  3320  005246  0E03               	movlw	3
  3321  005248  6F36               	movwf	(_tempo_backup+3)& (0+255),b
  3322  00524A  0EE8               	movlw	232
  3323  00524C  6F35               	movwf	(_tempo_backup+2)& (0+255),b
  3324                           
  3325                           ; BSR set to: 1
  3326                           ;main.c: 182: tempo_backup[2] = 5000;
  3327  00524E  0E13               	movlw	19
  3328  005250  6F38               	movwf	(_tempo_backup+5)& (0+255),b
  3329  005252  0E88               	movlw	136
  3330  005254  6F37               	movwf	(_tempo_backup+4)& (0+255),b
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;main.c: 185: tempo_tarefa[0] = 500;
  3334  005256  0E01               	movlw	1
  3335  005258  6F2E               	movwf	(_tempo_tarefa+1)& (0+255),b
  3336  00525A  0EF4               	movlw	244
  3337  00525C  6F2D               	movwf	_tempo_tarefa& (0+255),b
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;main.c: 186: tempo_tarefa[1] = 1000;
  3341  00525E  0E03               	movlw	3
  3342  005260  6F30               	movwf	(_tempo_tarefa+3)& (0+255),b
  3343  005262  0EE8               	movlw	232
  3344  005264  6F2F               	movwf	(_tempo_tarefa+2)& (0+255),b
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;main.c: 187: tempo_tarefa[2] = 5000;
  3348  005266  0E13               	movlw	19
  3349  005268  6F32               	movwf	(_tempo_tarefa+5)& (0+255),b
  3350  00526A  0E88               	movlw	136
  3351  00526C  6F31               	movwf	(_tempo_tarefa+4)& (0+255),b
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;main.c: 189: tarefa_em_execucao = 0;
  3355  00526E  0E00               	movlw	0
  3356  005270  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3357                           
  3358                           ; BSR set to: 1
  3359  005272  0012               	return		;funcret
  3360  005274                     __end_of_inicializa_tarefas:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _escalonador *****************
  3364 ;; Defined at:
  3365 ;;		line 200 in file "main.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  cont            1  134[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 3F/0
  3376 ;;		On exit  : 3F/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0
  3380 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3382 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        3 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:   17
  3386 ;; This function calls:
  3387 ;;		_disparo_gravacao
  3388 ;;		_troca_de_tela
  3389 ;;		_verifica_dados_operacionais
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text11
  3396  004414                     __ptext11:
  3397                           	callstack 0
  3398  004414                     _escalonador:
  3399                           	callstack 13
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;main.c: 202: unsigned char cont;;main.c: 203: for(cont = 0; cont<3;cont++)
  3403                           
  3404                           ; BSR set to: 1
  3405                           ;incstack = 0
  3406  004414  0E00               	movlw	0
  3407  004416  6FE6               	movwf	escalonador@cont& (0+255),b
  3408  004418                     l13838:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;main.c: 204: {;main.c: 205: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3412  004418  51E6               	movf	escalonador@cont& (0+255),w,b
  3413  00441A  0D02               	mullw	2
  3414  00441C  0E39               	movlw	low _p_tarefas
  3415  00441E  24F3               	addwf	243,w,c
  3416  004420  6ED9               	movwf	fsr2l,c
  3417  004422  0E01               	movlw	high _p_tarefas
  3418  004424  20F4               	addwfc	prodh,w,c
  3419  004426  6EDA               	movwf	fsr2h,c
  3420  004428  50DE               	movf	postinc2,w,c
  3421  00442A  10DE               	iorwf	postinc2,w,c
  3422  00442C  B4D8               	btfsc	status,2,c
  3423  00442E  D042               	goto	l13850
  3424                           
  3425                           ; BSR set to: 0
  3426  004430  51E6               	movf	escalonador@cont& (0+255),w,b
  3427  004432  0D02               	mullw	2
  3428  004434  0E2D               	movlw	low _tempo_tarefa
  3429  004436  24F3               	addwf	243,w,c
  3430  004438  6ED9               	movwf	fsr2l,c
  3431  00443A  0E01               	movlw	high _tempo_tarefa
  3432  00443C  20F4               	addwfc	prodh,w,c
  3433  00443E  6EDA               	movwf	fsr2h,c
  3434  004440  50DE               	movf	postinc2,w,c
  3435  004442  10DE               	iorwf	postinc2,w,c
  3436  004444  A4D8               	btfss	status,2,c
  3437  004446  D036               	goto	l13850
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;main.c: 206: {;main.c: 207: tarefa_em_execucao = 1;
  3441  004448  0E01               	movlw	1
  3442  00444A  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3443                           
  3444                           ;main.c: 208: timeout_tarefa = 65000;
  3445  00444C  0EFD               	movlw	253
  3446  00444E  0101               	movlb	1	; () banked
  3447  004450  6F71               	movwf	(_timeout_tarefa+1)& (0+255),b
  3448  004452  0EE8               	movlw	232
  3449  004454  6F70               	movwf	_timeout_tarefa& (0+255),b
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;main.c: 209: p_tarefas[cont]();
  3453  004456  0100               	movlb	0	; () banked
  3454  004458  51E6               	movf	escalonador@cont& (0+255),w,b
  3455  00445A  0D02               	mullw	2
  3456  00445C  0E39               	movlw	low _p_tarefas
  3457  00445E  24F3               	addwf	243,w,c
  3458  004460  6ED9               	movwf	fsr2l,c
  3459  004462  0E01               	movlw	high _p_tarefas
  3460  004464  20F4               	addwfc	prodh,w,c
  3461  004466  6EDA               	movwf	fsr2h,c
  3462  004468  CFDE F0E4          	movff	postinc2,??_escalonador
  3463  00446C  CFDD F0E5          	movff	postdec2,??_escalonador+1
  3464  004470  D801               	call	u16648
  3465  004472  D009               	goto	u16649
  3466  004474                     u16648:
  3467  004474  0005               	push	
  3468  004476  6EFA               	movwf	pclath,c
  3469  004478  51E4               	movf	??_escalonador& (0+255),w,b
  3470  00447A  6EFD               	movwf	tosl,c
  3471  00447C  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  3472  00447E  6EFE               	movwf	tosh,c
  3473  004480  6AFF               	clrf	tosu,c
  3474  004482  50FA               	movf	pclath,w,c
  3475  004484  0012               	return		;indir
  3476  004486                     u16649:
  3477                           
  3478                           ;main.c: 210: tarefa_em_execucao = 0;
  3479  004486  0E00               	movlw	0
  3480  004488  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3481                           
  3482                           ;main.c: 211: tempo_tarefa[cont] = tempo_backup[cont];
  3483  00448A  0100               	movlb	0	; () banked
  3484  00448C  51E6               	movf	escalonador@cont& (0+255),w,b
  3485  00448E  0D02               	mullw	2
  3486  004490  0E33               	movlw	low _tempo_backup
  3487  004492  24F3               	addwf	243,w,c
  3488  004494  6ED9               	movwf	fsr2l,c
  3489  004496  0E01               	movlw	high _tempo_backup
  3490  004498  20F4               	addwfc	prodh,w,c
  3491  00449A  6EDA               	movwf	fsr2h,c
  3492  00449C  51E6               	movf	escalonador@cont& (0+255),w,b
  3493  00449E  0D02               	mullw	2
  3494  0044A0  0E2D               	movlw	low _tempo_tarefa
  3495  0044A2  24F3               	addwf	243,w,c
  3496  0044A4  6EE1               	movwf	fsr1l,c
  3497  0044A6  0E01               	movlw	high _tempo_tarefa
  3498  0044A8  20F4               	addwfc	prodh,w,c
  3499  0044AA  6EE2               	movwf	fsr1h,c
  3500  0044AC  CFDE FFE6          	movff	postinc2,postinc1
  3501  0044B0  CFDD FFE5          	movff	postdec2,postdec1
  3502  0044B4                     l13850:
  3503                           
  3504                           ; BSR set to: 0
  3505  0044B4  2BE6               	incf	escalonador@cont& (0+255),f,b
  3506                           
  3507                           ; BSR set to: 0
  3508  0044B6  0E02               	movlw	2
  3509  0044B8  65E6               	cpfsgt	escalonador@cont& (0+255),b
  3510  0044BA  D7AE               	goto	l13838
  3511  0044BC  0012               	return	
  3512  0044BE                     __end_of_escalonador:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _troca_de_tela *****************
  3516 ;; Defined at:
  3517 ;;		line 409 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  fix_signal      2   54[COMRAM] PTR unsigned char 
  3522 ;;		 -> rawFix(2), 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 3F/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3534 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3535 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        3 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    6
  3539 ;; This function calls:
  3540 ;;		_escreve_caractere_lcd
  3541 ;;		_escreve_cmd_lcd
  3542 ;;		_escreve_frase_ram_lcd
  3543 ;;		_escreve_inteiro_lcd
  3544 ;;		_fix
  3545 ;;		_mostra_dados_display
  3546 ;;		_posicao_cursor_lcd
  3547 ;;		_recebe_dado_gps
  3548 ;; This function is called by:
  3549 ;;		_inicializa_tarefas
  3550 ;;		_escalonador
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text12
  3555  001BFC                     __ptext12:
  3556                           	callstack 0
  3557  001BFC                     _troca_de_tela:
  3558                           	callstack 23
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;main.c: 411: static unsigned char state = 0;;main.c: 412: static unsigned char last_sta
      +                          te = 0;;main.c: 413: unsigned char *fix_signal;;main.c: 415: if(!PORTEbits.RE0 || (state
      +                           == 1 ))
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;incstack = 0
  3565  001BFC  A084               	btfss	132,0,c	;volatile
  3566  001BFE  D003               	goto	u16140
  3567                           
  3568                           ; BSR set to: 0
  3569  001C00  0450               	decf	troca_de_tela@state^0,w,c
  3570  001C02  A4D8               	btfss	status,2,c
  3571  001C04  D0E2               	goto	l13458
  3572  001C06                     u16140:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 416: {;main.c: 418: if(!time_atualizacao)
  3576  001C06  51EA               	movf	_time_atualizacao& (0+255),w,b
  3577  001C08  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3578  001C0A  A4D8               	btfss	status,2,c
  3579  001C0C  D061               	goto	l13418
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;main.c: 419: {;main.c: 420: if(!fence_flag[2].point)
  3583  001C0E  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3584  001C10  D00C               	goto	l13396
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;main.c: 421: {;main.c: 422: posicao_cursor_lcd(1,8);
  3588  001C12  0E08               	movlw	8
  3589  001C14  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3590  001C16  0E01               	movlw	1
  3591  001C18  EC5E  F027         	call	_posicao_cursor_lcd
  3592                           
  3593                           ;main.c: 423: escreve_frase_ram_lcd("DENTRO");
  3594  001C1C  0E4F               	movlw	low STR_22
  3595  001C1E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3596  001C20  0E62               	movlw	high STR_22
  3597  001C22  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3598  001C24  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3599                           
  3600                           ;main.c: 424: }
  3601  001C28  D03C               	goto	l13410
  3602  001C2A                     l13396:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 425: else;main.c: 426: {;main.c: 427: posicao_cursor_lcd(1,8);
  3606  001C2A  0E08               	movlw	8
  3607  001C2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3608  001C2E  0E01               	movlw	1
  3609  001C30  EC5E  F027         	call	_posicao_cursor_lcd
  3610                           
  3611                           ;main.c: 428: escreve_frase_ram_lcd("FORA ");
  3612  001C34  0E56               	movlw	low STR_23
  3613  001C36  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3614  001C38  0E62               	movlw	high STR_23
  3615  001C3A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3616  001C3C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3617                           
  3618                           ;main.c: 429: posicao_cursor_lcd(1,13);
  3619  001C40  0E0D               	movlw	13
  3620  001C42  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3621  001C44  0E01               	movlw	1
  3622  001C46  EC5E  F027         	call	_posicao_cursor_lcd
  3623                           
  3624                           ;main.c: 430: escreve_inteiro_lcd(fence_flag[0].point);
  3625  001C4A  0100               	movlb	0	; () banked
  3626  001C4C  A1E7               	btfss	_fence_flag& (0+255),0,b
  3627  001C4E  D003               	goto	u16170
  3628  001C50  6A36               	clrf	??_troca_de_tela^0,c
  3629  001C52  2A36               	incf	??_troca_de_tela^0,f,c
  3630  001C54  D001               	goto	u16178
  3631  001C56                     u16170:
  3632  001C56  6A36               	clrf	??_troca_de_tela^0,c
  3633  001C58                     u16178:
  3634  001C58  5036               	movf	??_troca_de_tela^0,w,c
  3635  001C5A  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3636  001C5C  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3637  001C5E  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3638  001C60  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3639  001C62  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3640                           
  3641                           ;main.c: 431: posicao_cursor_lcd(1,14);
  3642  001C66  0E0E               	movlw	14
  3643  001C68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3644  001C6A  0E01               	movlw	1
  3645  001C6C  EC5E  F027         	call	_posicao_cursor_lcd
  3646                           
  3647                           ;main.c: 432: escreve_frase_ram_lcd("|");
  3648  001C70  0E7D               	movlw	low STR_24
  3649  001C72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3650  001C74  0E62               	movlw	high STR_24
  3651  001C76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3652  001C78  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3653                           
  3654                           ;main.c: 433: posicao_cursor_lcd(1,15);
  3655  001C7C  0E0F               	movlw	15
  3656  001C7E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3657  001C80  0E01               	movlw	1
  3658  001C82  EC5E  F027         	call	_posicao_cursor_lcd
  3659                           
  3660                           ;main.c: 434: escreve_inteiro_lcd(fence_flag[1].point);
  3661  001C86  0100               	movlb	0	; () banked
  3662  001C88  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3663  001C8A  D003               	goto	u16180
  3664  001C8C  6A36               	clrf	??_troca_de_tela^0,c
  3665  001C8E  2A36               	incf	??_troca_de_tela^0,f,c
  3666  001C90  D001               	goto	u16188
  3667  001C92                     u16180:
  3668  001C92  6A36               	clrf	??_troca_de_tela^0,c
  3669  001C94                     u16188:
  3670  001C94  5036               	movf	??_troca_de_tela^0,w,c
  3671  001C96  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3672  001C98  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3673  001C9A  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3674  001C9C  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3675  001C9E  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3676  001CA2                     l13410:
  3677                           
  3678                           ;main.c: 435: };main.c: 437: fix_signal = fix();
  3679  001CA2  EC29  F02E         	call	_fix	;wreg free
  3680  001CA6  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3681  001CAA  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3682                           
  3683                           ;main.c: 438: posicao_cursor_lcd(2,8);
  3684  001CAE  0E08               	movlw	8
  3685  001CB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3686  001CB2  0E02               	movlw	2
  3687  001CB4  EC5E  F027         	call	_posicao_cursor_lcd
  3688                           
  3689                           ;main.c: 439: escreve_caractere_lcd(fix_signal[0]);
  3690  001CB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3691  001CBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3692  001CC0  50DF               	movf	indf2,w,c
  3693  001CC2  ECEC  F025         	call	_escreve_caractere_lcd
  3694                           
  3695                           ;main.c: 440: time_atualizacao = 10000;
  3696  001CC6  0E27               	movlw	39
  3697  001CC8  0100               	movlb	0	; () banked
  3698  001CCA  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3699  001CCC  0E10               	movlw	16
  3700  001CCE  6FEA               	movwf	_time_atualizacao& (0+255),b
  3701  001CD0                     l13418:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 441: };main.c: 443: if(last_state != 1)
  3705  001CD0  044F               	decf	troca_de_tela@last_state^0,w,c
  3706  001CD2  B4D8               	btfsc	status,2,c
  3707  001CD4  D078               	goto	l13456
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 444: {;main.c: 445: state = 1;
  3711  001CD6  0E01               	movlw	1
  3712  001CD8  6E50               	movwf	troca_de_tela@state^0,c
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 446: escreve_cmd_lcd(0b00000001);
  3716  001CDA  0E01               	movlw	1
  3717  001CDC  EC2B  F024         	call	_escreve_cmd_lcd
  3718                           
  3719                           ;main.c: 447: posicao_cursor_lcd(1,0);
  3720  001CE0  0E00               	movlw	0
  3721  001CE2  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3722  001CE4  0E01               	movlw	1
  3723  001CE6  EC5E  F027         	call	_posicao_cursor_lcd
  3724                           
  3725                           ;main.c: 448: escreve_frase_ram_lcd("FENCE:");
  3726  001CEA  0E48               	movlw	low STR_25
  3727  001CEC  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3728  001CEE  0E62               	movlw	high STR_25
  3729  001CF0  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3730  001CF2  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3731                           
  3732                           ;main.c: 450: if(!fence_flag[2].point)
  3733  001CF6  0100               	movlb	0	; () banked
  3734  001CF8  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3735  001CFA  D00C               	goto	l13434
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;main.c: 451: {;main.c: 452: posicao_cursor_lcd(1,8);
  3739  001CFC  0E08               	movlw	8
  3740  001CFE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3741  001D00  0E01               	movlw	1
  3742  001D02  EC5E  F027         	call	_posicao_cursor_lcd
  3743                           
  3744                           ;main.c: 453: escreve_frase_ram_lcd("DENTRO");
  3745  001D06  0E4F               	movlw	low STR_22
  3746  001D08  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3747  001D0A  0E62               	movlw	high STR_22
  3748  001D0C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3749  001D0E  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3750                           
  3751                           ;main.c: 454: }
  3752  001D12  D03C               	goto	l13448
  3753  001D14                     l13434:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;main.c: 455: else;main.c: 456: {;main.c: 457: posicao_cursor_lcd(1,8);
  3757  001D14  0E08               	movlw	8
  3758  001D16  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3759  001D18  0E01               	movlw	1
  3760  001D1A  EC5E  F027         	call	_posicao_cursor_lcd
  3761                           
  3762                           ;main.c: 458: escreve_frase_ram_lcd("FORA ");
  3763  001D1E  0E56               	movlw	low STR_23
  3764  001D20  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3765  001D22  0E62               	movlw	high STR_23
  3766  001D24  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3767  001D26  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3768                           
  3769                           ;main.c: 459: posicao_cursor_lcd(1,13);
  3770  001D2A  0E0D               	movlw	13
  3771  001D2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3772  001D2E  0E01               	movlw	1
  3773  001D30  EC5E  F027         	call	_posicao_cursor_lcd
  3774                           
  3775                           ;main.c: 460: escreve_inteiro_lcd(fence_flag[0].point);
  3776  001D34  0100               	movlb	0	; () banked
  3777  001D36  A1E7               	btfss	_fence_flag& (0+255),0,b
  3778  001D38  D003               	goto	u16210
  3779  001D3A  6A36               	clrf	??_troca_de_tela^0,c
  3780  001D3C  2A36               	incf	??_troca_de_tela^0,f,c
  3781  001D3E  D001               	goto	u16218
  3782  001D40                     u16210:
  3783  001D40  6A36               	clrf	??_troca_de_tela^0,c
  3784  001D42                     u16218:
  3785  001D42  5036               	movf	??_troca_de_tela^0,w,c
  3786  001D44  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3787  001D46  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3788  001D48  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3789  001D4A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3790  001D4C  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3791                           
  3792                           ;main.c: 461: posicao_cursor_lcd(1,14);
  3793  001D50  0E0E               	movlw	14
  3794  001D52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3795  001D54  0E01               	movlw	1
  3796  001D56  EC5E  F027         	call	_posicao_cursor_lcd
  3797                           
  3798                           ;main.c: 462: escreve_frase_ram_lcd("|");
  3799  001D5A  0E7D               	movlw	low STR_24
  3800  001D5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3801  001D5E  0E62               	movlw	high STR_24
  3802  001D60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3803  001D62  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3804                           
  3805                           ;main.c: 463: posicao_cursor_lcd(1,15);
  3806  001D66  0E0F               	movlw	15
  3807  001D68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3808  001D6A  0E01               	movlw	1
  3809  001D6C  EC5E  F027         	call	_posicao_cursor_lcd
  3810                           
  3811                           ;main.c: 464: escreve_inteiro_lcd(fence_flag[1].point);
  3812  001D70  0100               	movlb	0	; () banked
  3813  001D72  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3814  001D74  D003               	goto	u16220
  3815  001D76  6A36               	clrf	??_troca_de_tela^0,c
  3816  001D78  2A36               	incf	??_troca_de_tela^0,f,c
  3817  001D7A  D001               	goto	u16228
  3818  001D7C                     u16220:
  3819  001D7C  6A36               	clrf	??_troca_de_tela^0,c
  3820  001D7E                     u16228:
  3821  001D7E  5036               	movf	??_troca_de_tela^0,w,c
  3822  001D80  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3823  001D82  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3824  001D84  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3825  001D86  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3826  001D88  ECB8  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3827  001D8C                     l13448:
  3828                           
  3829                           ;main.c: 465: };main.c: 466: fix_signal = fix();
  3830  001D8C  EC29  F02E         	call	_fix	;wreg free
  3831  001D90  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3832  001D94  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3833                           
  3834                           ;main.c: 467: posicao_cursor_lcd(2,0);
  3835  001D98  0E00               	movlw	0
  3836  001D9A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3837  001D9C  0E02               	movlw	2
  3838  001D9E  EC5E  F027         	call	_posicao_cursor_lcd
  3839                           
  3840                           ;main.c: 468: escreve_frase_ram_lcd("FIX:");
  3841  001DA2  0E62               	movlw	low STR_29
  3842  001DA4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3843  001DA6  0E62               	movlw	high STR_29
  3844  001DA8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3845  001DAA  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3846                           
  3847                           ;main.c: 469: posicao_cursor_lcd(2,8);
  3848  001DAE  0E08               	movlw	8
  3849  001DB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3850  001DB2  0E02               	movlw	2
  3851  001DB4  EC5E  F027         	call	_posicao_cursor_lcd
  3852                           
  3853                           ;main.c: 470: escreve_caractere_lcd(fix_signal[0]);
  3854  001DB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3855  001DBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3856  001DC0  50DF               	movf	indf2,w,c
  3857  001DC2  ECEC  F025         	call	_escreve_caractere_lcd
  3858  001DC6                     l13456:
  3859                           
  3860                           ;main.c: 471: };main.c: 472: last_state = 1;
  3861  001DC6  0E01               	movlw	1
  3862  001DC8  6E4F               	movwf	troca_de_tela@last_state^0,c
  3863  001DCA                     l13458:
  3864                           
  3865                           ;main.c: 474: };main.c: 484: if(!PORTEbits.RE1 || (state == 2))
  3866  001DCA  A284               	btfss	132,1,c	;volatile
  3867  001DCC  D004               	goto	u16240
  3868  001DCE  0E02               	movlw	2
  3869  001DD0  1850               	xorwf	troca_de_tela@state^0,w,c
  3870  001DD2  A4D8               	btfss	status,2,c
  3871  001DD4  D033               	goto	l13490
  3872  001DD6                     u16240:
  3873                           
  3874                           ;main.c: 485: {;main.c: 486: if(!time_atualizacao)
  3875  001DD6  0100               	movlb	0	; () banked
  3876  001DD8  51EA               	movf	_time_atualizacao& (0+255),w,b
  3877  001DDA  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3878  001DDC  A4D8               	btfss	status,2,c
  3879  001DDE  D009               	goto	l13470
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;main.c: 487: {;main.c: 488: recebe_dado_gps();
  3883  001DE0  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  3884                           
  3885                           ;main.c: 489: mostra_dados_display();
  3886  001DE4  ECF2  F02B         	call	_mostra_dados_display	;wreg free
  3887                           
  3888                           ;main.c: 490: time_atualizacao = 2000;
  3889  001DE8  0E07               	movlw	7
  3890  001DEA  0100               	movlb	0	; () banked
  3891  001DEC  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3892  001DEE  0ED0               	movlw	208
  3893  001DF0  6FEA               	movwf	_time_atualizacao& (0+255),b
  3894  001DF2                     l13470:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;main.c: 491: };main.c: 494: if(last_state != 2)
  3898  001DF2  0E02               	movlw	2
  3899  001DF4  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3900  001DF6  B4D8               	btfsc	status,2,c
  3901  001DF8  D01F               	goto	l13488
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;main.c: 495: {;main.c: 496: state = 2;
  3905  001DFA  0E02               	movlw	2
  3906  001DFC  6E50               	movwf	troca_de_tela@state^0,c
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;main.c: 497: escreve_cmd_lcd(0b00000001);
  3910  001DFE  0E01               	movlw	1
  3911  001E00  EC2B  F024         	call	_escreve_cmd_lcd
  3912                           
  3913                           ;main.c: 498: posicao_cursor_lcd(1,0);
  3914  001E04  0E00               	movlw	0
  3915  001E06  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3916  001E08  0E01               	movlw	1
  3917  001E0A  EC5E  F027         	call	_posicao_cursor_lcd
  3918                           
  3919                           ;main.c: 499: escreve_frase_ram_lcd("lt:");
  3920  001E0E  0E70               	movlw	low STR_30
  3921  001E10  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3922  001E12  0E62               	movlw	high STR_30
  3923  001E14  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3924  001E16  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3925                           
  3926                           ;main.c: 500: posicao_cursor_lcd(2,0);
  3927  001E1A  0E00               	movlw	0
  3928  001E1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3929  001E1E  0E02               	movlw	2
  3930  001E20  EC5E  F027         	call	_posicao_cursor_lcd
  3931                           
  3932                           ;main.c: 501: escreve_frase_ram_lcd("lo:");
  3933  001E24  0E6C               	movlw	low STR_31
  3934  001E26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3935  001E28  0E62               	movlw	high STR_31
  3936  001E2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3937  001E2C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3938                           
  3939                           ;main.c: 502: recebe_dado_gps();
  3940  001E30  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  3941                           
  3942                           ;main.c: 503: mostra_dados_display();
  3943  001E34  ECF2  F02B         	call	_mostra_dados_display	;wreg free
  3944  001E38                     l13488:
  3945                           
  3946                           ;main.c: 504: };main.c: 505: last_state = 2;
  3947  001E38  0E02               	movlw	2
  3948  001E3A  6E4F               	movwf	troca_de_tela@last_state^0,c
  3949  001E3C                     l13490:
  3950                           
  3951                           ;main.c: 506: };main.c: 511: if(!state)
  3952  001E3C  5050               	movf	troca_de_tela@state^0,w,c
  3953  001E3E  A4D8               	btfss	status,2,c
  3954  001E40  0012               	return	
  3955                           
  3956                           ;main.c: 512: {;main.c: 513: if(last_state != 4)
  3957  001E42  0E04               	movlw	4
  3958  001E44  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3959  001E46  B4D8               	btfsc	status,2,c
  3960  001E48  D019               	goto	l13500
  3961                           
  3962                           ;main.c: 514: {;main.c: 515: escreve_cmd_lcd(0b00000001);
  3963  001E4A  0E01               	movlw	1
  3964  001E4C  EC2B  F024         	call	_escreve_cmd_lcd
  3965                           
  3966                           ;main.c: 516: posicao_cursor_lcd(1,0);
  3967  001E50  0E00               	movlw	0
  3968  001E52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3969  001E54  0E01               	movlw	1
  3970  001E56  EC5E  F027         	call	_posicao_cursor_lcd
  3971                           
  3972                           ;main.c: 517: escreve_frase_ram_lcd("B1:FENCE");
  3973  001E5A  0E2E               	movlw	low STR_32
  3974  001E5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3975  001E5E  0E62               	movlw	high STR_32
  3976  001E60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3977  001E62  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3978                           
  3979                           ;main.c: 518: posicao_cursor_lcd(2,0);
  3980  001E66  0E00               	movlw	0
  3981  001E68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3982  001E6A  0E02               	movlw	2
  3983  001E6C  EC5E  F027         	call	_posicao_cursor_lcd
  3984                           
  3985                           ;main.c: 519: escreve_frase_ram_lcd("B2:LTLO");
  3986  001E70  0E40               	movlw	low STR_33
  3987  001E72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3988  001E74  0E62               	movlw	high STR_33
  3989  001E76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3990  001E78  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3991  001E7C                     l13500:
  3992                           
  3993                           ;main.c: 521: };main.c: 522: last_state = 4;
  3994  001E7C  0E04               	movlw	4
  3995  001E7E  6E4F               	movwf	troca_de_tela@last_state^0,c
  3996  001E80  0012               	return		;funcret
  3997  001E82                     __end_of_troca_de_tela:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _disparo_gravacao *****************
  4001 ;; Defined at:
  4002 ;;		line 348 in file "main.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4007 ;;  index_max       2   16[BANK2 ] unsigned int 
  4008 ;;  v_max           2   14[BANK2 ] unsigned int 
  4009 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4010 ;;		 -> rawFix(2), 
  4011 ;;  i               1   18[BANK2 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 3F/0
  4018 ;;		On exit  : 3F/1
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4023 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4024 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4025 ;;Total ram usage:       24 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:   16
  4028 ;; This function calls:
  4029 ;;		___wmul
  4030 ;;		_atoi
  4031 ;;		_dados_gps_to_sd
  4032 ;;		_fix
  4033 ;;		_grava_sd
  4034 ;;		_itoa
  4035 ;;		_monta_sd
  4036 ;;		_recebe_dado_gps
  4037 ;;		_verifica_fence
  4038 ;; This function is called by:
  4039 ;;		_inicializa_tarefas
  4040 ;;		_escalonador
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text13
  4045  002810                     __ptext13:
  4046                           	callstack 0
  4047  002810                     _disparo_gravacao:
  4048                           	callstack 13
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;main.c: 353: unsigned char *velocidade[6];;main.c: 355: v_max = atoi(dados_vel[0]);
  4052                           
  4053                           ; BSR set to: 0
  4054                           
  4055                           ;incstack = 0
  4056  002810  C127  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4057  002814  C128  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4058  002818  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4059  00281A  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4060  00281E  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4061  002822  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4062  002826  ECFA  F018         	call	_atoi	;wreg free
  4063  00282A  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4064  00282E  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4065                           
  4066                           ;main.c: 356: index_max = 0;
  4067  002832  0E00               	movlw	0
  4068  002834  0102               	movlb	2	; () banked
  4069  002836  6FF8               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4070  002838  0E00               	movlw	0
  4071  00283A  6FF7               	movwf	disparo_gravacao@index_max& (0+255),b
  4072                           
  4073                           ; BSR set to: 2
  4074                           ;main.c: 357: if(!time_sd)
  4075  00283C  0101               	movlb	1	; () banked
  4076  00283E  516E               	movf	_time_sd& (0+255),w,b
  4077  002840  116F               	iorwf	(_time_sd+1)& (0+255),w,b
  4078  002842  A4D8               	btfss	status,2,c
  4079  002844  0012               	return	
  4080                           
  4081                           ; BSR set to: 1
  4082                           ;main.c: 358: {;main.c: 359: verifica_fence();
  4083  002846  EC8D  F027         	call	_verifica_fence	;wreg free
  4084                           
  4085                           ;main.c: 360: fix_gps = fix();
  4086  00284A  EC29  F02E         	call	_fix	;wreg free
  4087  00284E  C00A  F2F3         	movff	?_fix,disparo_gravacao@fix_gps
  4088  002852  C00B  F2F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4089                           
  4090                           ;main.c: 362: if(*fix_gps == '1')
  4091  002856  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4092  00285A  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4093  00285E  0E31               	movlw	49
  4094  002860  18DE               	xorwf	postinc2,w,c
  4095  002862  A4D8               	btfss	status,2,c
  4096  002864  D0DC               	goto	l13814
  4097                           
  4098                           ;main.c: 363: {;main.c: 364: if(v_max > 50)
  4099  002866  0102               	movlb	2	; () banked
  4100  002868  51F6               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4101  00286A  E104               	bnz	u16590
  4102  00286C  0E33               	movlw	51
  4103  00286E  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4104  002870  A0D8               	btfss	status,0,c
  4105  002872  D0C2               	goto	l13806
  4106  002874                     u16590:
  4107                           
  4108                           ; BSR set to: 2
  4109                           ;main.c: 365: {;main.c: 366: for(i=1; i<3; i++)
  4110  002874  0E01               	movlw	1
  4111  002876  6FF9               	movwf	disparo_gravacao@i& (0+255),b
  4112  002878                     l13784:
  4113                           
  4114                           ; BSR set to: 2
  4115                           ;main.c: 367: {;main.c: 368: if(v_max < atoi(dados_vel[i]))
  4116  002878  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4117  00287A  0D02               	mullw	2
  4118  00287C  0E27               	movlw	low _dados_vel
  4119  00287E  24F3               	addwf	243,w,c
  4120  002880  6ED9               	movwf	fsr2l,c
  4121  002882  0E01               	movlw	high _dados_vel
  4122  002884  20F4               	addwfc	prodh,w,c
  4123  002886  6EDA               	movwf	fsr2h,c
  4124  002888  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4125  00288C  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4126  002890  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4127  002894  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4128  002898  0100               	movlb	0	; () banked
  4129  00289A  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4130  00289C  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4131  0028A0  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4132  0028A4  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4133  0028A8  ECFA  F018         	call	_atoi	;wreg free
  4134  0028AC  5010               	movf	?_atoi^0,w,c
  4135  0028AE  0102               	movlb	2	; () banked
  4136  0028B0  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4137  0028B2  5011               	movf	(?_atoi+1)^0,w,c
  4138  0028B4  59F6               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4139  0028B6  B0D8               	btfsc	status,0,c
  4140  0028B8  D022               	goto	l13790
  4141                           
  4142                           ; BSR set to: 2
  4143                           ;main.c: 369: {;main.c: 370: v_max = atoi(dados_vel[i]);
  4144  0028BA  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4145  0028BC  0D02               	mullw	2
  4146  0028BE  0E27               	movlw	low _dados_vel
  4147  0028C0  24F3               	addwf	243,w,c
  4148  0028C2  6ED9               	movwf	fsr2l,c
  4149  0028C4  0E01               	movlw	high _dados_vel
  4150  0028C6  20F4               	addwfc	prodh,w,c
  4151  0028C8  6EDA               	movwf	fsr2h,c
  4152  0028CA  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4153  0028CE  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4154  0028D2  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4155  0028D6  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4156  0028DA  0100               	movlb	0	; () banked
  4157  0028DC  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4158  0028DE  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4159  0028E2  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4160  0028E6  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4161  0028EA  ECFA  F018         	call	_atoi	;wreg free
  4162  0028EE  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4163  0028F2  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4164                           
  4165                           ;main.c: 371: index_max = i;
  4166  0028F6  C2F9  F2F7         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4167  0028FA  0102               	movlb	2	; () banked
  4168  0028FC  6BF8               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4169  0028FE                     l13790:
  4170                           
  4171                           ; BSR set to: 2
  4172  0028FE  2BF9               	incf	disparo_gravacao@i& (0+255),f,b
  4173                           
  4174                           ; BSR set to: 2
  4175  002900  0E02               	movlw	2
  4176  002902  65F9               	cpfsgt	disparo_gravacao@i& (0+255),b
  4177  002904  D7B9               	goto	l13784
  4178                           
  4179                           ; BSR set to: 2
  4180                           ;main.c: 372: };main.c: 374: };main.c: 376: monta_sd(0, dados_hora[index_max]);
  4181  002906  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4182  00290A  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4183  00290E  0E00               	movlw	0
  4184  002910  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4185  002912  0E06               	movlw	6
  4186  002914  6E0C               	movwf	___wmul@multiplicand^0,c
  4187  002916  EC9B  F02C         	call	___wmul	;wreg free
  4188  00291A  0ED5               	movlw	low _dados_hora
  4189  00291C  240A               	addwf	?___wmul^0,w,c
  4190  00291E  6E10               	movwf	monta_sd@dado^0,c
  4191  002920  0E02               	movlw	high _dados_hora
  4192  002922  200B               	addwfc	(?___wmul+1)^0,w,c
  4193  002924  6E11               	movwf	(monta_sd@dado+1)^0,c
  4194  002926  0E00               	movlw	0
  4195  002928  EC03  F00B         	call	_monta_sd
  4196                           
  4197                           ;main.c: 377: monta_sd(1, dados_data[index_max]);
  4198  00292C  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4199  002930  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4200  002934  0E00               	movlw	0
  4201  002936  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4202  002938  0E06               	movlw	6
  4203  00293A  6E0C               	movwf	___wmul@multiplicand^0,c
  4204  00293C  EC9B  F02C         	call	___wmul	;wreg free
  4205  002940  0EC3               	movlw	low _dados_data
  4206  002942  240A               	addwf	?___wmul^0,w,c
  4207  002944  6E10               	movwf	monta_sd@dado^0,c
  4208  002946  0E02               	movlw	high _dados_data
  4209  002948  200B               	addwfc	(?___wmul+1)^0,w,c
  4210  00294A  6E11               	movwf	(monta_sd@dado+1)^0,c
  4211  00294C  0E01               	movlw	1
  4212  00294E  EC03  F00B         	call	_monta_sd
  4213                           
  4214                           ;main.c: 378: monta_sd(2, dados_lat[index_max]);
  4215  002952  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4216  002956  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4217  00295A  0E00               	movlw	0
  4218  00295C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4219  00295E  0E0B               	movlw	11
  4220  002960  6E0C               	movwf	___wmul@multiplicand^0,c
  4221  002962  EC9B  F02C         	call	___wmul	;wreg free
  4222  002966  0EA2               	movlw	low _dados_lat
  4223  002968  240A               	addwf	?___wmul^0,w,c
  4224  00296A  6E10               	movwf	monta_sd@dado^0,c
  4225  00296C  0E02               	movlw	high _dados_lat
  4226  00296E  200B               	addwfc	(?___wmul+1)^0,w,c
  4227  002970  6E11               	movwf	(monta_sd@dado+1)^0,c
  4228  002972  0E02               	movlw	2
  4229  002974  EC03  F00B         	call	_monta_sd
  4230                           
  4231                           ;main.c: 379: monta_sd(3, dados_long[index_max]);
  4232  002978  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4233  00297C  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4234  002980  0E00               	movlw	0
  4235  002982  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4236  002984  0E0C               	movlw	12
  4237  002986  6E0C               	movwf	___wmul@multiplicand^0,c
  4238  002988  EC9B  F02C         	call	___wmul	;wreg free
  4239  00298C  0E7E               	movlw	low _dados_long
  4240  00298E  240A               	addwf	?___wmul^0,w,c
  4241  002990  6E10               	movwf	monta_sd@dado^0,c
  4242  002992  0E02               	movlw	high _dados_long
  4243  002994  200B               	addwfc	(?___wmul+1)^0,w,c
  4244  002996  6E11               	movwf	(monta_sd@dado+1)^0,c
  4245  002998  0E03               	movlw	3
  4246  00299A  EC03  F00B         	call	_monta_sd
  4247                           
  4248                           ;main.c: 380: itoa(velocidade, dados_vel[index_max], 10);
  4249  00299E  0EE7               	movlw	low disparo_gravacao@velocidade
  4250  0029A0  6E1A               	movwf	itoa@buf^0,c
  4251  0029A2  0E02               	movlw	high disparo_gravacao@velocidade
  4252  0029A4  6E1B               	movwf	(itoa@buf+1)^0,c
  4253  0029A6  90D8               	bcf	status,0,c
  4254  0029A8  0102               	movlb	2	; () banked
  4255  0029AA  35F7               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4256  0029AC  6ED9               	movwf	fsr2l,c
  4257  0029AE  35F8               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4258  0029B0  6EDA               	movwf	fsr2h,c
  4259  0029B2  0E27               	movlw	low _dados_vel
  4260  0029B4  26D9               	addwf	fsr2l,f,c
  4261  0029B6  0E01               	movlw	high _dados_vel
  4262  0029B8  22DA               	addwfc	fsr2h,f,c
  4263  0029BA  CFDE F01C          	movff	postinc2,itoa@val
  4264  0029BE  CFDD F01D          	movff	postdec2,itoa@val+1
  4265  0029C2  0E00               	movlw	0
  4266  0029C4  6E1F               	movwf	(itoa@base+1)^0,c
  4267  0029C6  0E0A               	movlw	10
  4268  0029C8  6E1E               	movwf	itoa@base^0,c
  4269  0029CA  ECF5  F02A         	call	_itoa	;wreg free
  4270                           
  4271                           ;main.c: 381: monta_sd(7, velocidade);
  4272  0029CE  0EE7               	movlw	low disparo_gravacao@velocidade
  4273  0029D0  6E10               	movwf	monta_sd@dado^0,c
  4274  0029D2  0E02               	movlw	high disparo_gravacao@velocidade
  4275  0029D4  6E11               	movwf	(monta_sd@dado+1)^0,c
  4276  0029D6  0E07               	movlw	7
  4277  0029D8  EC03  F00B         	call	_monta_sd
  4278                           
  4279                           ;main.c: 383: dados_vel[0] = 50;
  4280  0029DC  0E00               	movlw	0
  4281  0029DE  0101               	movlb	1	; () banked
  4282  0029E0  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4283  0029E2  0E32               	movlw	50
  4284  0029E4  6F27               	movwf	_dados_vel& (0+255),b
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;main.c: 384: dados_vel[1] = 50;
  4288  0029E6  0E00               	movlw	0
  4289  0029E8  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4290  0029EA  0E32               	movlw	50
  4291  0029EC  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;main.c: 385: dados_vel[2] = 50;
  4295  0029EE  0E00               	movlw	0
  4296  0029F0  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4297  0029F2  0E32               	movlw	50
  4298  0029F4  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4299                           
  4300                           ;main.c: 386: }
  4301  0029F6  D011               	goto	l13812
  4302  0029F8                     l13806:
  4303                           
  4304                           ; BSR set to: 2
  4305                           ;main.c: 387: else;main.c: 388: {;main.c: 389: dados_vel[0] = 50;
  4306  0029F8  0E00               	movlw	0
  4307  0029FA  0101               	movlb	1	; () banked
  4308  0029FC  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4309  0029FE  0E32               	movlw	50
  4310  002A00  6F27               	movwf	_dados_vel& (0+255),b
  4311                           
  4312                           ;main.c: 390: dados_vel[1] = 50;
  4313  002A02  0E00               	movlw	0
  4314  002A04  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4315  002A06  0E32               	movlw	50
  4316  002A08  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4317                           
  4318                           ;main.c: 391: dados_vel[2] = 50;
  4319  002A0A  0E00               	movlw	0
  4320  002A0C  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4321  002A0E  0E32               	movlw	50
  4322  002A10  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4323                           
  4324                           ; BSR set to: 1
  4325                           ;main.c: 392: recebe_dado_gps();
  4326  002A12  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  4327                           
  4328                           ;main.c: 393: dados_gps_to_sd();
  4329  002A16  EC2C  F027         	call	_dados_gps_to_sd	;wreg free
  4330  002A1A                     l13812:
  4331                           
  4332                           ;main.c: 394: };main.c: 395: grava_sd();
  4333  002A1A  ECA0  F02D         	call	_grava_sd	;wreg free
  4334  002A1E                     l13814:
  4335                           
  4336                           ;main.c: 396: };main.c: 397: time_sd = 28000;
  4337  002A1E  0E6D               	movlw	109
  4338  002A20  0101               	movlb	1	; () banked
  4339  002A22  6F6F               	movwf	(_time_sd+1)& (0+255),b
  4340  002A24  0E60               	movlw	96
  4341  002A26  6F6E               	movwf	_time_sd& (0+255),b
  4342                           
  4343                           ; BSR set to: 1
  4344  002A28  0012               	return		;funcret
  4345  002A2A                     __end_of_disparo_gravacao:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _verifica_dados_operacionais *****************
  4349 ;; Defined at:
  4350 ;;		line 307 in file "main.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 3F/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4366 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4367 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:        6 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    9
  4371 ;; This function calls:
  4372 ;;		_Speed
  4373 ;;		___awtoft
  4374 ;;		___ftmul
  4375 ;;		___fttol
  4376 ;;		_atoi
  4377 ;;		_latitude
  4378 ;;		_longitude
  4379 ;;		_rawdata
  4380 ;;		_rawhora
  4381 ;;		_strcpy
  4382 ;;		_verifica_fence
  4383 ;; This function is called by:
  4384 ;;		_inicializa_tarefas
  4385 ;;		_escalonador
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text14
  4390  002F0C                     __ptext14:
  4391                           	callstack 0
  4392  002F0C                     _verifica_dados_operacionais:
  4393                           	callstack 20
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;main.c: 309: static unsigned char dado[6];;main.c: 310: static unsigned char contador_a
      +                          tual =0;;main.c: 311: static unsigned char contador_anterior =0;;main.c: 312: static uns
      +                          igned long int velocidade_media;;main.c: 313: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 314: static unsigned char *velocidade_atual;;main.c: 315: verifica_fenc
      +                          e();
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;incstack = 0
  4400  002F0C  EC8D  F027         	call	_verifica_fence	;wreg free
  4401                           
  4402                           ;main.c: 317: if(contador_atual >=3)
  4403  002F10  0E02               	movlw	2
  4404  002F12  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  4405  002F14  D005               	goto	l13306
  4406                           
  4407                           ;main.c: 318: {;main.c: 319: contador_atual = 0;
  4408  002F16  0E00               	movlw	0
  4409  002F18  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  4410                           
  4411                           ;main.c: 320: contador_anterior = contador_atual;
  4412  002F1A  0E00               	movlw	0
  4413  002F1C  0100               	movlb	0	; () banked
  4414  002F1E  6FF0               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4415  002F20                     l13306:
  4416                           
  4417                           ;main.c: 321: };main.c: 323: velocidade_atual = Speed();
  4418  002F20  EC24  F02E         	call	_Speed	;wreg free
  4419  002F24  C00A  F166         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4420  002F28  C00B  F167         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4421                           
  4422                           ;main.c: 324: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  4423  002F2C  0E0E               	movlw	14
  4424  002F2E  6E1F               	movwf	___ftmul@f2^0,c
  4425  002F30  0EED               	movlw	237
  4426  002F32  6E20               	movwf	(___ftmul@f2+1)^0,c
  4427  002F34  0E3F               	movlw	63
  4428  002F36  6E21               	movwf	(___ftmul@f2+2)^0,c
  4429  002F38  C166  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4430  002F3C  C167  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4431  002F40  5010               	movf	atoi@s^0,w,c
  4432  002F42  1011               	iorwf	(atoi@s+1)^0,w,c
  4433  002F44  A4D8               	btfss	status,2,c
  4434  002F46  0E20               	movlw	32
  4435  002F48  6E12               	movwf	(atoi@s+2)^0,c
  4436  002F4A  ECFA  F018         	call	_atoi	;wreg free
  4437  002F4E  C010  F018         	movff	?_atoi,___awtoft@c
  4438  002F52  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  4439  002F56  EC12  F02B         	call	___awtoft	;wreg free
  4440  002F5A  C018  F01C         	movff	?___awtoft,___ftmul@f1
  4441  002F5E  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  4442  002F62  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  4443  002F66  EC66  F01E         	call	___ftmul	;wreg free
  4444  002F6A  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4445  002F6E  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4446  002F72  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4447  002F76  ECCC  F01F         	call	___fttol	;wreg free
  4448  002F7A  C02B  F151         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4449  002F7E  C02C  F152         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4450  002F82  C02D  F153         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4451  002F86  C02E  F154         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4452                           
  4453                           ;main.c: 325: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  4454  002F8A  0101               	movlb	1	; () banked
  4455  002F8C  512B               	movf	(_dados_vel+4)& (0+255),w,b
  4456  002F8E  6E44               	movwf	??_verifica_dados_operacionais^0,c
  4457  002F90  512C               	movf	(_dados_vel+5)& (0+255),w,b
  4458  002F92  6E45               	movwf	(??_verifica_dados_operacionais+1)^0,c
  4459  002F94  6A46               	clrf	(??_verifica_dados_operacionais+2)^0,c
  4460  002F96  6A47               	clrf	(??_verifica_dados_operacionais+3)^0,c
  4461  002F98  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4462  002F9A  5C44               	subwf	??_verifica_dados_operacionais^0,w,c
  4463  002F9C  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4464  002F9E  5845               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  4465  002FA0  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4466  002FA2  5846               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  4467  002FA4  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4468  002FA6  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4469  002FA8  B0D8               	btfsc	status,0,c
  4470  002FAA  0012               	return	
  4471                           
  4472                           ; BSR set to: 1
  4473  002FAC  0E03               	movlw	3
  4474  002FAE  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  4475  002FB0  0012               	return	
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;main.c: 326: {;main.c: 327: if(velocidade_atual_int > dados_vel[contador_anterior])
  4479  002FB2  0100               	movlb	0	; () banked
  4480  002FB4  51F0               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4481  002FB6  0D02               	mullw	2
  4482  002FB8  0E27               	movlw	low _dados_vel
  4483  002FBA  24F3               	addwf	243,w,c
  4484  002FBC  6ED9               	movwf	fsr2l,c
  4485  002FBE  0E01               	movlw	high _dados_vel
  4486  002FC0  20F4               	addwfc	prodh,w,c
  4487  002FC2  6EDA               	movwf	fsr2h,c
  4488  002FC4  CFDE F044          	movff	postinc2,??_verifica_dados_operacionais
  4489  002FC8  CFDD F045          	movff	postdec2,??_verifica_dados_operacionais+1
  4490  002FCC  5044               	movf	??_verifica_dados_operacionais^0,w,c
  4491  002FCE  6E46               	movwf	(??_verifica_dados_operacionais+2)^0,c
  4492  002FD0  5045               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  4493  002FD2  6E47               	movwf	(??_verifica_dados_operacionais+3)^0,c
  4494  002FD4  6A48               	clrf	(??_verifica_dados_operacionais+4)^0,c
  4495  002FD6  6A49               	clrf	(??_verifica_dados_operacionais+5)^0,c
  4496  002FD8  0101               	movlb	1	; () banked
  4497  002FDA  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4498  002FDC  5C46               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  4499  002FDE  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4500  002FE0  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4501  002FE2  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4502  002FE4  5848               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  4503  002FE6  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4504  002FE8  5849               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  4505  002FEA  B0D8               	btfsc	status,0,c
  4506  002FEC  D04C               	goto	l13326
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;main.c: 328: {;main.c: 329: dados_vel[contador_atual] = velocidade_atual_int;
  4510  002FEE  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4511  002FF0  0D02               	mullw	2
  4512  002FF2  0E27               	movlw	low _dados_vel
  4513  002FF4  24F3               	addwf	243,w,c
  4514  002FF6  6ED9               	movwf	fsr2l,c
  4515  002FF8  0E01               	movlw	high _dados_vel
  4516  002FFA  20F4               	addwfc	prodh,w,c
  4517  002FFC  6EDA               	movwf	fsr2h,c
  4518  002FFE  C151  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  4519  003002  C152  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;main.c: 330: strcpy(dados_lat[contador_atual], latitude());
  4523  003006  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4524  003008  0D0B               	mullw	11
  4525  00300A  0EA2               	movlw	low _dados_lat
  4526  00300C  24F3               	addwf	243,w,c
  4527  00300E  6E0C               	movwf	strcpy@to^0,c
  4528  003010  0E02               	movlw	high _dados_lat
  4529  003012  20F4               	addwfc	prodh,w,c
  4530  003014  6E0D               	movwf	(strcpy@to+1)^0,c
  4531  003016  EC1F  F02E         	call	_latitude	;wreg free
  4532  00301A  C00A  F00E         	movff	?_latitude,strcpy@from
  4533  00301E  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  4534  003022  ECDB  F02B         	call	_strcpy	;wreg free
  4535                           
  4536                           ;main.c: 331: strcpy(dados_long[contador_atual], longitude());
  4537  003026  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4538  003028  0D0C               	mullw	12
  4539  00302A  0E7E               	movlw	low _dados_long
  4540  00302C  24F3               	addwf	243,w,c
  4541  00302E  6E0C               	movwf	strcpy@to^0,c
  4542  003030  0E02               	movlw	high _dados_long
  4543  003032  20F4               	addwfc	prodh,w,c
  4544  003034  6E0D               	movwf	(strcpy@to+1)^0,c
  4545  003036  EC1A  F02E         	call	_longitude	;wreg free
  4546  00303A  C00A  F00E         	movff	?_longitude,strcpy@from
  4547  00303E  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  4548  003042  ECDB  F02B         	call	_strcpy	;wreg free
  4549                           
  4550                           ;main.c: 332: strcpy(dados_hora[contador_atual], rawhora());
  4551  003046  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4552  003048  0D06               	mullw	6
  4553  00304A  0ED5               	movlw	low _dados_hora
  4554  00304C  24F3               	addwf	243,w,c
  4555  00304E  6E0C               	movwf	strcpy@to^0,c
  4556  003050  0E02               	movlw	high _dados_hora
  4557  003052  20F4               	addwfc	prodh,w,c
  4558  003054  6E0D               	movwf	(strcpy@to+1)^0,c
  4559  003056  EC10  F02E         	call	_rawhora	;wreg free
  4560  00305A  C00A  F00E         	movff	?_rawhora,strcpy@from
  4561  00305E  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  4562  003062  ECDB  F02B         	call	_strcpy	;wreg free
  4563                           
  4564                           ;main.c: 333: strcpy(dados_data[contador_atual], rawdata());
  4565  003066  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4566  003068  0D06               	mullw	6
  4567  00306A  0EC3               	movlw	low _dados_data
  4568  00306C  24F3               	addwf	243,w,c
  4569  00306E  6E0C               	movwf	strcpy@to^0,c
  4570  003070  0E02               	movlw	high _dados_data
  4571  003072  20F4               	addwfc	prodh,w,c
  4572  003074  6E0D               	movwf	(strcpy@to+1)^0,c
  4573  003076  EC15  F02E         	call	_rawdata	;wreg free
  4574  00307A  C00A  F00E         	movff	?_rawdata,strcpy@from
  4575  00307E  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  4576  003082  ECDB  F02B         	call	_strcpy	;wreg free
  4577  003086                     l13326:
  4578                           
  4579                           ;main.c: 334: };main.c: 335: contador_anterior = contador_atual;
  4580  003086  C051  F0F0         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4581                           
  4582                           ;main.c: 336: contador_atual++;
  4583  00308A  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  4584  00308C  0012               	return		;funcret
  4585  00308E                     __end_of_verifica_dados_operacionais:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _strcpy *****************
  4589 ;; Defined at:
  4590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  to              2   11[COMRAM] PTR unsigned char 
  4593 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4594 ;;  from            2   13[COMRAM] PTR const unsigned char 
  4595 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4598 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2   11[COMRAM] PTR unsigned char 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/1
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         4       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        6 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    2
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_verifica_dados_operacionais
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text15
  4623  0057B6                     __ptext15:
  4624                           	callstack 0
  4625  0057B6                     _strcpy:
  4626                           	callstack 26
  4627                           
  4628                           ;incstack = 0
  4629  0057B6  C00C  F010         	movff	strcpy@to,strcpy@cp
  4630  0057BA  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  4631  0057BE  D004               	goto	l13282
  4632  0057C0                     l13280:
  4633  0057C0  4A10               	infsnz	strcpy@cp^0,f,c
  4634  0057C2  2A11               	incf	(strcpy@cp+1)^0,f,c
  4635  0057C4  4A0E               	infsnz	strcpy@from^0,f,c
  4636  0057C6  2A0F               	incf	(strcpy@from+1)^0,f,c
  4637  0057C8                     l13282:
  4638  0057C8  C00E  FFD9         	movff	strcpy@from,fsr2l
  4639  0057CC  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  4640  0057D0  C010  FFE1         	movff	strcpy@cp,fsr1l
  4641  0057D4  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  4642  0057D8  CFDF FFE7          	movff	indf2,indf1
  4643  0057DC  50E7               	movf	indf1,w,c
  4644  0057DE  B4D8               	btfsc	status,2,c
  4645  0057E0  0012               	return	
  4646  0057E2  D7EE               	goto	l13280
  4647  0057E4                     __end_of_strcpy:
  4648                           	callstack 0
  4649                           
  4650 ;; *************** function _rawhora *****************
  4651 ;; Defined at:
  4652 ;;		line 668 in file "bibliotecas/GPS.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  2    9[COMRAM] PTR unsigned char 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/1
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4666 ;;      Params:         2       0       0       0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4669 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4670 ;;Total ram usage:        2 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    2
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_verifica_dados_operacionais
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text16
  4681  005C20                     __ptext16:
  4682                           	callstack 0
  4683  005C20                     _rawhora:
  4684                           	callstack 26
  4685                           
  4686                           ;GPS.c: 670: return rawTime;
  4687                           
  4688                           ;incstack = 0
  4689  005C20  0ED1               	movlw	low _rawTime
  4690  005C22  6E0A               	movwf	?_rawhora^0,c
  4691  005C24  0E01               	movlw	high _rawTime
  4692  005C26  6E0B               	movwf	(?_rawhora+1)^0,c
  4693  005C28  0012               	return		;funcret
  4694  005C2A                     __end_of_rawhora:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _rawdata *****************
  4698 ;; Defined at:
  4699 ;;		line 673 in file "bibliotecas/GPS.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  2    9[COMRAM] PTR unsigned char 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/1
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         2       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        2 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    2
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_verifica_dados_operacionais
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text17
  4728  005C2A                     __ptext17:
  4729                           	callstack 0
  4730  005C2A                     _rawdata:
  4731                           	callstack 26
  4732                           
  4733                           ;GPS.c: 675: return rawDate;
  4734                           
  4735                           ;incstack = 0
  4736  005C2A  0EE4               	movlw	low _rawDate
  4737  005C2C  6E0A               	movwf	?_rawdata^0,c
  4738  005C2E  0E01               	movlw	high _rawDate
  4739  005C30  6E0B               	movwf	(?_rawdata+1)^0,c
  4740  005C32  0012               	return		;funcret
  4741  005C34                     __end_of_rawdata:
  4742                           	callstack 0
  4743                           
  4744 ;; *************** function _longitude *****************
  4745 ;; Defined at:
  4746 ;;		line 663 in file "bibliotecas/GPS.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  2    9[COMRAM] PTR unsigned char 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/1
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4760 ;;      Params:         2       0       0       0       0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    2
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_verifica_dados_operacionais
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text18
  4775  005C34                     __ptext18:
  4776                           	callstack 0
  4777  005C34                     _longitude:
  4778                           	callstack 26
  4779                           
  4780                           ;GPS.c: 665: return rawLongitude;
  4781                           
  4782                           ;incstack = 0
  4783  005C34  0EA5               	movlw	low _rawLongitude
  4784  005C36  6E0A               	movwf	?_longitude^0,c
  4785  005C38  0E01               	movlw	high _rawLongitude
  4786  005C3A  6E0B               	movwf	(?_longitude+1)^0,c
  4787  005C3C  0012               	return		;funcret
  4788  005C3E                     __end_of_longitude:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _latitude *****************
  4792 ;; Defined at:
  4793 ;;		line 658 in file "bibliotecas/GPS.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2    9[COMRAM] PTR unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 3F/1
  4804 ;;		On exit  : 3F/1
  4805 ;;		Unchanged: 3F/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         2       0       0       0       0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4810 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        2 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    2
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_verifica_dados_operacionais
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text19
  4822  005C3E                     __ptext19:
  4823                           	callstack 0
  4824  005C3E                     _latitude:
  4825                           	callstack 26
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;GPS.c: 660: return rawLatitude;
  4829                           
  4830                           ;incstack = 0
  4831  005C3E  0EBE               	movlw	low _rawLatitude
  4832  005C40  6E0A               	movwf	?_latitude^0,c
  4833  005C42  0E01               	movlw	high _rawLatitude
  4834  005C44  6E0B               	movwf	(?_latitude+1)^0,c
  4835                           
  4836                           ; BSR set to: 1
  4837  005C46  0012               	return		;funcret
  4838  005C48                     __end_of_latitude:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function ___fttol *****************
  4842 ;; Defined at:
  4843 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  f1              3   42[COMRAM] float 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  lval            4   52[COMRAM] unsigned long 
  4848 ;;  exp1            1   56[COMRAM] unsigned char 
  4849 ;;  sign1           1   51[COMRAM] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  4   42[COMRAM] long 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4859 ;;      Params:         4       0       0       0       0       0       0       0       0
  4860 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4861 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4862 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4863 ;;Total ram usage:       15 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    2
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_verifica_dados_operacionais
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text20
  4874  003F98                     __ptext20:
  4875                           	callstack 0
  4876  003F98                     ___fttol:
  4877                           	callstack 26
  4878                           
  4879                           ; BSR set to: 1
  4880                           ;incstack = 0
  4881  003F98  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4882  003F9C  6A30               	clrf	(??___fttol+1)^0,c
  4883  003F9E  6A31               	clrf	(??___fttol+2)^0,c
  4884  003FA0  342C               	rlcf	(___fttol@f1+1)^0,w,c
  4885  003FA2  362F               	rlcf	??___fttol^0,f,c
  4886  003FA4  E301               	bnc	u10461
  4887  003FA6  8030               	bsf	(??___fttol+1)^0,0,c
  4888  003FA8                     u10461:
  4889  003FA8  502F               	movf	??___fttol^0,w,c
  4890  003FAA  6E39               	movwf	___fttol@exp1^0,c
  4891  003FAC  5039               	movf	___fttol@exp1^0,w,c
  4892  003FAE  A4D8               	btfss	status,2,c
  4893  003FB0  D009               	goto	l9588
  4894  003FB2                     u10470:
  4895  003FB2  0E00               	movlw	0
  4896  003FB4  6E2B               	movwf	?___fttol^0,c
  4897  003FB6  0E00               	movlw	0
  4898  003FB8  6E2C               	movwf	(?___fttol+1)^0,c
  4899  003FBA  0E00               	movlw	0
  4900  003FBC  6E2D               	movwf	(?___fttol+2)^0,c
  4901  003FBE  0E00               	movlw	0
  4902  003FC0  6E2E               	movwf	(?___fttol+3)^0,c
  4903  003FC2  0012               	return	
  4904  003FC4                     l9588:
  4905  003FC4  0E17               	movlw	23
  4906  003FC6  6E2F               	movwf	??___fttol^0,c
  4907  003FC8  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4908  003FCC  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4909  003FD0  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4910  003FD4  282F               	incf	??___fttol^0,w,c
  4911  003FD6  6E33               	movwf	(??___fttol+4)^0,c
  4912  003FD8  D004               	goto	u10480
  4913  003FDA                     u10485:
  4914  003FDA  90D8               	bcf	status,0,c
  4915  003FDC  3232               	rrcf	(??___fttol+3)^0,f,c
  4916  003FDE  3231               	rrcf	(??___fttol+2)^0,f,c
  4917  003FE0  3230               	rrcf	(??___fttol+1)^0,f,c
  4918  003FE2                     u10480:
  4919  003FE2  2E33               	decfsz	(??___fttol+4)^0,f,c
  4920  003FE4  D7FA               	goto	u10485
  4921  003FE6  5030               	movf	(??___fttol+1)^0,w,c
  4922  003FE8  6E34               	movwf	___fttol@sign1^0,c
  4923  003FEA  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  4924  003FEC  0EFF               	movlw	255
  4925  003FEE  162B               	andwf	___fttol@f1^0,f,c
  4926  003FF0  0EFF               	movlw	255
  4927  003FF2  162C               	andwf	(___fttol@f1+1)^0,f,c
  4928  003FF4  0E00               	movlw	0
  4929  003FF6  162D               	andwf	(___fttol@f1+2)^0,f,c
  4930  003FF8  502B               	movf	___fttol@f1^0,w,c
  4931  003FFA  6E35               	movwf	___fttol@lval^0,c
  4932  003FFC  502C               	movf	(___fttol@f1+1)^0,w,c
  4933  003FFE  6E36               	movwf	(___fttol@lval+1)^0,c
  4934  004000  502D               	movf	(___fttol@f1+2)^0,w,c
  4935  004002  6E37               	movwf	(___fttol@lval+2)^0,c
  4936  004004  6A38               	clrf	(___fttol@lval+3)^0,c
  4937  004006  0E8E               	movlw	142
  4938  004008  5E39               	subwf	___fttol@exp1^0,f,c
  4939  00400A  AE39               	btfss	___fttol@exp1^0,7,c
  4940  00400C  D00D               	goto	l9610
  4941  00400E  5039               	movf	___fttol@exp1^0,w,c
  4942  004010  0A80               	xorlw	128
  4943  004012  0F8F               	addlw	143
  4944  004014  A0D8               	btfss	status,0,c
  4945  004016  D7CD               	goto	u10470
  4946  004018                     l9606:
  4947  004018  90D8               	bcf	status,0,c
  4948  00401A  3238               	rrcf	(___fttol@lval+3)^0,f,c
  4949  00401C  3237               	rrcf	(___fttol@lval+2)^0,f,c
  4950  00401E  3236               	rrcf	(___fttol@lval+1)^0,f,c
  4951  004020  3235               	rrcf	___fttol@lval^0,f,c
  4952  004022  3E39               	incfsz	___fttol@exp1^0,f,c
  4953  004024  D7F9               	goto	l9606
  4954  004026  D00D               	goto	u10520
  4955  004028                     l9610:
  4956  004028  0E17               	movlw	23
  4957  00402A  6439               	cpfsgt	___fttol@exp1^0,c
  4958  00402C  D007               	goto	l9618
  4959  00402E  D7C1               	goto	u10470
  4960  004030                     l9616:
  4961  004030  90D8               	bcf	status,0,c
  4962  004032  3635               	rlcf	___fttol@lval^0,f,c
  4963  004034  3636               	rlcf	(___fttol@lval+1)^0,f,c
  4964  004036  3637               	rlcf	(___fttol@lval+2)^0,f,c
  4965  004038  3638               	rlcf	(___fttol@lval+3)^0,f,c
  4966  00403A  0639               	decf	___fttol@exp1^0,f,c
  4967  00403C                     l9618:
  4968  00403C  5039               	movf	___fttol@exp1^0,w,c
  4969  00403E  A4D8               	btfss	status,2,c
  4970  004040  D7F7               	goto	l9616
  4971  004042                     u10520:
  4972  004042  5034               	movf	___fttol@sign1^0,w,c
  4973  004044  B4D8               	btfsc	status,2,c
  4974  004046  D008               	goto	l9624
  4975  004048  1E38               	comf	(___fttol@lval+3)^0,f,c
  4976  00404A  1E37               	comf	(___fttol@lval+2)^0,f,c
  4977  00404C  1E36               	comf	(___fttol@lval+1)^0,f,c
  4978  00404E  6C35               	negf	___fttol@lval^0,c
  4979  004050  0E00               	movlw	0
  4980  004052  2236               	addwfc	(___fttol@lval+1)^0,f,c
  4981  004054  2237               	addwfc	(___fttol@lval+2)^0,f,c
  4982  004056  2238               	addwfc	(___fttol@lval+3)^0,f,c
  4983  004058                     l9624:
  4984  004058  C035  F02B         	movff	___fttol@lval,?___fttol
  4985  00405C  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4986  004060  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4987  004064  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4988  004068  0012               	return		;funcret
  4989  00406A                     __end_of___fttol:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function ___ftmul *****************
  4993 ;; Defined at:
  4994 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  f1              3   27[COMRAM] float 
  4997 ;;  f2              3   30[COMRAM] float 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  5000 ;;  sign            1   41[COMRAM] unsigned char 
  5001 ;;  cntr            1   40[COMRAM] unsigned char 
  5002 ;;  exp             1   36[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  3   27[COMRAM] float 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         6       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5015 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:       15 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    3
  5019 ;; This function calls:
  5020 ;;		___ftpack
  5021 ;; This function is called by:
  5022 ;;		_verifica_dados_operacionais
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text21
  5027  003CCC                     __ptext21:
  5028                           	callstack 0
  5029  003CCC                     ___ftmul:
  5030                           	callstack 25
  5031                           
  5032                           ;incstack = 0
  5033  003CCC  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5034  003CD0  6A23               	clrf	(??___ftmul+1)^0,c
  5035  003CD2  6A24               	clrf	(??___ftmul+2)^0,c
  5036  003CD4  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5037  003CD6  3622               	rlcf	??___ftmul^0,f,c
  5038  003CD8  E301               	bnc	u10391
  5039  003CDA  8023               	bsf	(??___ftmul+1)^0,0,c
  5040  003CDC                     u10391:
  5041  003CDC  5022               	movf	??___ftmul^0,w,c
  5042  003CDE  6E25               	movwf	___ftmul@exp^0,c
  5043  003CE0  5025               	movf	___ftmul@exp^0,w,c
  5044  003CE2  A4D8               	btfss	status,2,c
  5045  003CE4  D007               	goto	l9528
  5046  003CE6  0E00               	movlw	0
  5047  003CE8  6E1C               	movwf	?___ftmul^0,c
  5048  003CEA  0E00               	movlw	0
  5049  003CEC  6E1D               	movwf	(?___ftmul+1)^0,c
  5050  003CEE  0E00               	movlw	0
  5051  003CF0  6E1E               	movwf	(?___ftmul+2)^0,c
  5052  003CF2  0012               	return	
  5053  003CF4                     l9528:
  5054  003CF4  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5055  003CF8  6A23               	clrf	(??___ftmul+1)^0,c
  5056  003CFA  6A24               	clrf	(??___ftmul+2)^0,c
  5057  003CFC  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5058  003CFE  3622               	rlcf	??___ftmul^0,f,c
  5059  003D00  E301               	bnc	u10411
  5060  003D02  8023               	bsf	(??___ftmul+1)^0,0,c
  5061  003D04                     u10411:
  5062  003D04  5022               	movf	??___ftmul^0,w,c
  5063  003D06  6E2A               	movwf	___ftmul@sign^0,c
  5064  003D08  502A               	movf	___ftmul@sign^0,w,c
  5065  003D0A  A4D8               	btfss	status,2,c
  5066  003D0C  D007               	goto	l9534
  5067  003D0E  0E00               	movlw	0
  5068  003D10  6E1C               	movwf	?___ftmul^0,c
  5069  003D12  0E00               	movlw	0
  5070  003D14  6E1D               	movwf	(?___ftmul+1)^0,c
  5071  003D16  0E00               	movlw	0
  5072  003D18  6E1E               	movwf	(?___ftmul+2)^0,c
  5073  003D1A  0012               	return	
  5074  003D1C                     l9534:
  5075  003D1C  502A               	movf	___ftmul@sign^0,w,c
  5076  003D1E  0F7B               	addlw	123
  5077  003D20  2625               	addwf	___ftmul@exp^0,f,c
  5078  003D22  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5079  003D26  5021               	movf	(___ftmul@f2+2)^0,w,c
  5080  003D28  1A2A               	xorwf	___ftmul@sign^0,f,c
  5081  003D2A  0E80               	movlw	128
  5082  003D2C  162A               	andwf	___ftmul@sign^0,f,c
  5083  003D2E  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5084  003D30  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5085  003D32  0EFF               	movlw	255
  5086  003D34  161F               	andwf	___ftmul@f2^0,f,c
  5087  003D36  0EFF               	movlw	255
  5088  003D38  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5089  003D3A  0E00               	movlw	0
  5090  003D3C  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5091  003D3E  0E00               	movlw	0
  5092  003D40  6E26               	movwf	___ftmul@f3_as_product^0,c
  5093  003D42  0E00               	movlw	0
  5094  003D44  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5095  003D46  0E00               	movlw	0
  5096  003D48  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5097  003D4A  0E07               	movlw	7
  5098  003D4C  6E29               	movwf	___ftmul@cntr^0,c
  5099  003D4E                     l9548:
  5100  003D4E  A01C               	btfss	___ftmul@f1^0,0,c
  5101  003D50  D006               	goto	l9552
  5102  003D52  501F               	movf	___ftmul@f2^0,w,c
  5103  003D54  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5104  003D56  5020               	movf	(___ftmul@f2+1)^0,w,c
  5105  003D58  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5106  003D5A  5021               	movf	(___ftmul@f2+2)^0,w,c
  5107  003D5C  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5108  003D5E                     l9552:
  5109  003D5E  90D8               	bcf	status,0,c
  5110  003D60  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5111  003D62  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5112  003D64  321C               	rrcf	___ftmul@f1^0,f,c
  5113  003D66  90D8               	bcf	status,0,c
  5114  003D68  361F               	rlcf	___ftmul@f2^0,f,c
  5115  003D6A  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5116  003D6C  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5117  003D6E  2E29               	decfsz	___ftmul@cntr^0,f,c
  5118  003D70  D7EE               	goto	l9548
  5119  003D72  0E09               	movlw	9
  5120  003D74  6E29               	movwf	___ftmul@cntr^0,c
  5121  003D76                     l9558:
  5122  003D76  A01C               	btfss	___ftmul@f1^0,0,c
  5123  003D78  D006               	goto	l9562
  5124  003D7A  501F               	movf	___ftmul@f2^0,w,c
  5125  003D7C  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5126  003D7E  5020               	movf	(___ftmul@f2+1)^0,w,c
  5127  003D80  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5128  003D82  5021               	movf	(___ftmul@f2+2)^0,w,c
  5129  003D84  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5130  003D86                     l9562:
  5131  003D86  90D8               	bcf	status,0,c
  5132  003D88  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5133  003D8A  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5134  003D8C  321C               	rrcf	___ftmul@f1^0,f,c
  5135  003D8E  90D8               	bcf	status,0,c
  5136  003D90  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5137  003D92  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5138  003D94  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5139  003D96  2E29               	decfsz	___ftmul@cntr^0,f,c
  5140  003D98  D7EE               	goto	l9558
  5141  003D9A  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5142  003D9E  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5143  003DA2  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5144  003DA6  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5145  003DAA  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5146  003DAE  EC5D  F021         	call	___ftpack	;wreg free
  5147  003DB2  C00A  F01C         	movff	?___ftpack,?___ftmul
  5148  003DB6  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5149  003DBA  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5150  003DBE  0012               	return		;funcret
  5151  003DC0                     __end_of___ftmul:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function ___awtoft *****************
  5155 ;; Defined at:
  5156 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  c               2   23[COMRAM] int 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  sign            1   26[COMRAM] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  3   23[COMRAM] float 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5170 ;;      Params:         3       0       0       0       0       0       0       0       0
  5171 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5173 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5174 ;;Total ram usage:        4 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    3
  5177 ;; This function calls:
  5178 ;;		___ftpack
  5179 ;; This function is called by:
  5180 ;;		_verifica_dados_operacionais
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text22
  5185  005624                     __ptext22:
  5186                           	callstack 0
  5187  005624                     ___awtoft:
  5188                           	callstack 25
  5189                           
  5190                           ;incstack = 0
  5191  005624  0E00               	movlw	0
  5192  005626  6E1B               	movwf	___awtoft@sign^0,c
  5193  005628  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5194  00562A  D006               	goto	l9578
  5195  00562C  6C18               	negf	___awtoft@c^0,c
  5196  00562E  1E19               	comf	(___awtoft@c+1)^0,f,c
  5197  005630  B0D8               	btfsc	status,0,c
  5198  005632  2A19               	incf	(___awtoft@c+1)^0,f,c
  5199  005634  0E01               	movlw	1
  5200  005636  6E1B               	movwf	___awtoft@sign^0,c
  5201  005638                     l9578:
  5202  005638  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5203  00563C  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5204  005640  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5205  005642  0E8E               	movlw	142
  5206  005644  6E0D               	movwf	___ftpack@exp^0,c
  5207  005646  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5208  00564A  EC5D  F021         	call	___ftpack	;wreg free
  5209  00564E  C00A  F018         	movff	?___ftpack,?___awtoft
  5210  005652  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5211  005656  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5212  00565A  0012               	return		;funcret
  5213  00565C                     __end_of___awtoft:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function ___ftpack *****************
  5217 ;; Defined at:
  5218 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  arg             3    9[COMRAM] unsigned um
  5221 ;;  exp             1   12[COMRAM] unsigned char 
  5222 ;;  sign            1   13[COMRAM] unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  3    9[COMRAM] float 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5234 ;;      Params:         5       0       0       0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5236 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5237 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5238 ;;Total ram usage:        8 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    2
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		___awtoft
  5245 ;;		___ftmul
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text23
  5250  0042BA                     __ptext23:
  5251                           	callstack 0
  5252  0042BA                     ___ftpack:
  5253                           	callstack 25
  5254                           
  5255                           ;incstack = 0
  5256  0042BA  500D               	movf	___ftpack@exp^0,w,c
  5257  0042BC  B4D8               	btfsc	status,2,c
  5258  0042BE  D005               	goto	u10010
  5259  0042C0  500A               	movf	___ftpack@arg^0,w,c
  5260  0042C2  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5261  0042C4  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5262  0042C6  A4D8               	btfss	status,2,c
  5263  0042C8  D00C               	goto	l9308
  5264  0042CA                     u10010:
  5265  0042CA  0E00               	movlw	0
  5266  0042CC  6E0A               	movwf	?___ftpack^0,c
  5267  0042CE  0E00               	movlw	0
  5268  0042D0  6E0B               	movwf	(?___ftpack+1)^0,c
  5269  0042D2  0E00               	movlw	0
  5270  0042D4  6E0C               	movwf	(?___ftpack+2)^0,c
  5271  0042D6  0012               	return	
  5272  0042D8                     l9306:
  5273  0042D8  2A0D               	incf	___ftpack@exp^0,f,c
  5274  0042DA  90D8               	bcf	status,0,c
  5275  0042DC  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5276  0042DE  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5277  0042E0  320A               	rrcf	___ftpack@arg^0,f,c
  5278  0042E2                     l9308:
  5279  0042E2  0E00               	movlw	0
  5280  0042E4  140A               	andwf	___ftpack@arg^0,w,c
  5281  0042E6  6E0F               	movwf	??___ftpack^0,c
  5282  0042E8  0E00               	movlw	0
  5283  0042EA  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5284  0042EC  6E10               	movwf	(??___ftpack+1)^0,c
  5285  0042EE  0EFE               	movlw	254
  5286  0042F0  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5287  0042F2  6E11               	movwf	(??___ftpack+2)^0,c
  5288  0042F4  500F               	movf	??___ftpack^0,w,c
  5289  0042F6  1010               	iorwf	(??___ftpack+1)^0,w,c
  5290  0042F8  1011               	iorwf	(??___ftpack+2)^0,w,c
  5291  0042FA  B4D8               	btfsc	status,2,c
  5292  0042FC  D00C               	goto	l9314
  5293  0042FE  D7EC               	goto	l9306
  5294  004300                     l9310:
  5295  004300  2A0D               	incf	___ftpack@exp^0,f,c
  5296  004302  0E01               	movlw	1
  5297  004304  260A               	addwf	___ftpack@arg^0,f,c
  5298  004306  0E00               	movlw	0
  5299  004308  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5300  00430A  0E00               	movlw	0
  5301  00430C  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5302  00430E  90D8               	bcf	status,0,c
  5303  004310  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5304  004312  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5305  004314  320A               	rrcf	___ftpack@arg^0,f,c
  5306  004316                     l9314:
  5307  004316  0E00               	movlw	0
  5308  004318  140A               	andwf	___ftpack@arg^0,w,c
  5309  00431A  6E0F               	movwf	??___ftpack^0,c
  5310  00431C  0E00               	movlw	0
  5311  00431E  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5312  004320  6E10               	movwf	(??___ftpack+1)^0,c
  5313  004322  0EFF               	movlw	255
  5314  004324  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5315  004326  6E11               	movwf	(??___ftpack+2)^0,c
  5316  004328  500F               	movf	??___ftpack^0,w,c
  5317  00432A  1010               	iorwf	(??___ftpack+1)^0,w,c
  5318  00432C  1011               	iorwf	(??___ftpack+2)^0,w,c
  5319  00432E  B4D8               	btfsc	status,2,c
  5320  004330  D006               	goto	l9318
  5321  004332  D7E6               	goto	l9310
  5322  004334                     l9316:
  5323  004334  060D               	decf	___ftpack@exp^0,f,c
  5324  004336  90D8               	bcf	status,0,c
  5325  004338  360A               	rlcf	___ftpack@arg^0,f,c
  5326  00433A  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5327  00433C  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  5328  00433E                     l9318:
  5329  00433E  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  5330  004340  D003               	goto	u10050
  5331  004342  0E02               	movlw	2
  5332  004344  600D               	cpfslt	___ftpack@exp^0,c
  5333  004346  D7F6               	goto	l9316
  5334  004348                     u10050:
  5335  004348  A00D               	btfss	___ftpack@exp^0,0,c
  5336  00434A  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  5337  00434C  90D8               	bcf	status,0,c
  5338  00434E  320D               	rrcf	___ftpack@exp^0,f,c
  5339  004350  500D               	movf	___ftpack@exp^0,w,c
  5340  004352  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  5341  004354  500E               	movf	___ftpack@sign^0,w,c
  5342  004356  A4D8               	btfss	status,2,c
  5343  004358  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  5344  00435A  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  5345  00435E  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  5346  004362  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  5347  004366  0012               	return		;funcret
  5348  004368                     __end_of___ftpack:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function _Speed *****************
  5352 ;; Defined at:
  5353 ;;		line 685 in file "bibliotecas/GPS.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  2    9[COMRAM] PTR unsigned char 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5367 ;;      Params:         2       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    2
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_verifica_dados_operacionais
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text24
  5382  005C48                     __ptext24:
  5383                           	callstack 0
  5384  005C48                     _Speed:
  5385                           	callstack 26
  5386                           
  5387                           ;GPS.c: 687: return rawSpeed;
  5388                           
  5389                           ;incstack = 0
  5390  005C48  0E6A               	movlw	low _rawSpeed
  5391  005C4A  6E0A               	movwf	?_Speed^0,c
  5392  005C4C  0E02               	movlw	high _rawSpeed
  5393  005C4E  6E0B               	movwf	(?_Speed+1)^0,c
  5394  005C50  0012               	return		;funcret
  5395  005C52                     __end_of_Speed:
  5396                           	callstack 0
  5397                           
  5398 ;; *************** function _mostra_dados_display *****************
  5399 ;; Defined at:
  5400 ;;		line 691 in file "bibliotecas/GPS.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    5
  5421 ;; This function calls:
  5422 ;;		_escreve_frase_ram_lcd
  5423 ;;		_posicao_cursor_lcd
  5424 ;; This function is called by:
  5425 ;;		_troca_de_tela
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text25
  5430  0057E4                     __ptext25:
  5431                           	callstack 0
  5432  0057E4                     _mostra_dados_display:
  5433                           	callstack 23
  5434                           
  5435                           ;GPS.c: 693: posicao_cursor_lcd(1,4);
  5436                           
  5437                           ;incstack = 0
  5438  0057E4  0E04               	movlw	4
  5439  0057E6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5440  0057E8  0E01               	movlw	1
  5441  0057EA  EC5E  F027         	call	_posicao_cursor_lcd
  5442                           
  5443                           ;GPS.c: 694: escreve_frase_ram_lcd(rawLatitude);
  5444  0057EE  0EBE               	movlw	low _rawLatitude
  5445  0057F0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5446  0057F2  0E01               	movlw	high _rawLatitude
  5447  0057F4  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5448  0057F6  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5449                           
  5450                           ;GPS.c: 695: posicao_cursor_lcd(2,4);
  5451  0057FA  0E04               	movlw	4
  5452  0057FC  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5453  0057FE  0E02               	movlw	2
  5454  005800  EC5E  F027         	call	_posicao_cursor_lcd
  5455                           
  5456                           ;GPS.c: 696: escreve_frase_ram_lcd(rawLongitude);
  5457  005804  0EA5               	movlw	low _rawLongitude
  5458  005806  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5459  005808  0E01               	movlw	high _rawLongitude
  5460  00580A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5461  00580C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5462  005810  0012               	return		;funcret
  5463  005812                     __end_of_mostra_dados_display:
  5464                           	callstack 0
  5465                           
  5466 ;; *************** function _escreve_inteiro_lcd *****************
  5467 ;; Defined at:
  5468 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  valor           4   42[COMRAM] long 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  texto           7   46[COMRAM] unsigned char [7]
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         4       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5485 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:       11 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    5
  5489 ;; This function calls:
  5490 ;;		_escreve_frase_ram_lcd
  5491 ;;		_ltoa
  5492 ;; This function is called by:
  5493 ;;		_troca_de_tela
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text26
  5498  005570                     __ptext26:
  5499                           	callstack 0
  5500  005570                     _escreve_inteiro_lcd:
  5501                           	callstack 23
  5502                           
  5503                           ;display_lcd.c: 378: char texto[7] = "000000";
  5504                           
  5505                           ;incstack = 0
  5506  005570  EE21  F0F3         	lfsr	2,escreve_inteiro_lcd@F3223
  5507  005574  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
  5508  005578  0E06               	movlw	6
  5509  00557A                     u15871:
  5510  00557A  CFDB FFE3          	movff	plusw2,plusw1
  5511  00557E  06E8               	decf	wreg,f,c
  5512  005580  E2FC               	bc	u15871
  5513                           
  5514                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  5515  005582  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5516  005584  6E23               	movwf	ltoa@buf^0,c
  5517  005586  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
  5518  00558A  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  5519  00558E  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  5520  005592  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  5521  005596  0E00               	movlw	0
  5522  005598  6E29               	movwf	(ltoa@base+1)^0,c
  5523  00559A  0E0A               	movlw	10
  5524  00559C  6E28               	movwf	ltoa@base^0,c
  5525  00559E  EC35  F02A         	call	_ltoa	;wreg free
  5526                           
  5527                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5528  0055A2  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5529  0055A4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5530  0055A6  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5531  0055A8  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5532  0055AC  0012               	return		;funcret
  5533  0055AE                     __end_of_escreve_inteiro_lcd:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _ltoa *****************
  5537 ;; Defined at:
  5538 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  buf             1   34[COMRAM] PTR unsigned char 
  5541 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5542 ;;  val             4   35[COMRAM] long 
  5543 ;;  base            2   39[COMRAM] int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  cp              1    0        PTR unsigned char 
  5546 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      PTR unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5556 ;;      Params:         7       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        8 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    4
  5563 ;; This function calls:
  5564 ;;		_ultoa
  5565 ;; This function is called by:
  5566 ;;		_escreve_inteiro_lcd
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text27
  5571  00546A                     __ptext27:
  5572                           	callstack 0
  5573  00546A                     _ltoa:
  5574                           	callstack 23
  5575                           
  5576                           ;incstack = 0
  5577  00546A  AE27               	btfss	(ltoa@val+3)^0,7,c
  5578  00546C  D00E               	goto	l12754
  5579  00546E  5023               	movf	ltoa@buf^0,w,c
  5580  005470  6ED9               	movwf	fsr2l,c
  5581  005472  6ADA               	clrf	fsr2h,c
  5582  005474  0E2D               	movlw	45
  5583  005476  6EDF               	movwf	indf2,c
  5584  005478  2A23               	incf	ltoa@buf^0,f,c
  5585  00547A  1E27               	comf	(ltoa@val+3)^0,f,c
  5586  00547C  1E26               	comf	(ltoa@val+2)^0,f,c
  5587  00547E  1E25               	comf	(ltoa@val+1)^0,f,c
  5588  005480  6C24               	negf	ltoa@val^0,c
  5589  005482  0E00               	movlw	0
  5590  005484  2225               	addwfc	(ltoa@val+1)^0,f,c
  5591  005486  2226               	addwfc	(ltoa@val+2)^0,f,c
  5592  005488  2227               	addwfc	(ltoa@val+3)^0,f,c
  5593  00548A                     l12754:
  5594  00548A  C023  F017         	movff	ltoa@buf,ultoa@buf
  5595  00548E  C024  F018         	movff	ltoa@val,ultoa@val
  5596  005492  C025  F019         	movff	ltoa@val+1,ultoa@val+1
  5597  005496  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
  5598  00549A  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
  5599  00549E  C028  F01C         	movff	ltoa@base,ultoa@base
  5600  0054A2  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
  5601  0054A6  EC58  F01F         	call	_ultoa	;wreg free
  5602  0054AA  0012               	return		;funcret
  5603  0054AC                     __end_of_ltoa:
  5604                           	callstack 0
  5605                           
  5606 ;; *************** function _ultoa *****************
  5607 ;; Defined at:
  5608 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  buf             1   22[COMRAM] PTR unsigned char 
  5611 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5612 ;;  val             4   23[COMRAM] unsigned long 
  5613 ;;  base            2   27[COMRAM] int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  v               4   29[COMRAM] unsigned long 
  5616 ;;  c               1   33[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      PTR unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5626 ;;      Params:         7       0       0       0       0       0       0       0       0
  5627 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5629 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5630 ;;Total ram usage:       12 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    3
  5633 ;; This function calls:
  5634 ;;		___lldiv
  5635 ;;		___llmod
  5636 ;; This function is called by:
  5637 ;;		_ltoa
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text28
  5642  003EB0                     __ptext28:
  5643                           	callstack 0
  5644  003EB0                     _ultoa:
  5645                           	callstack 23
  5646                           
  5647                           ;incstack = 0
  5648  003EB0  C018  F01E         	movff	ultoa@val,ultoa@v
  5649  003EB4  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
  5650  003EB8  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
  5651  003EBC  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
  5652  003EC0                     l12722:
  5653  003EC0  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
  5654  003EC4  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
  5655  003EC8  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
  5656  003ECC  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
  5657  003ED0  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5658  003ED4  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5659  003ED8  0E00               	movlw	0
  5660  003EDA  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5661  003EDC  0EFF               	movlw	-1
  5662  003EDE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5663  003EE0  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5664  003EE2  ECF4  F024         	call	___lldiv	;wreg free
  5665  003EE6  C00A  F01E         	movff	?___lldiv,ultoa@v
  5666  003EEA  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
  5667  003EEE  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
  5668  003EF2  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
  5669  003EF6  2A17               	incf	ultoa@buf^0,f,c
  5670  003EF8  501E               	movf	ultoa@v^0,w,c
  5671  003EFA  101F               	iorwf	(ultoa@v+1)^0,w,c
  5672  003EFC  1020               	iorwf	(ultoa@v+2)^0,w,c
  5673  003EFE  1021               	iorwf	(ultoa@v+3)^0,w,c
  5674  003F00  A4D8               	btfss	status,2,c
  5675  003F02  D7DE               	goto	l12722
  5676  003F04  5017               	movf	ultoa@buf^0,w,c
  5677  003F06  6ED9               	movwf	fsr2l,c
  5678  003F08  6ADA               	clrf	fsr2h,c
  5679  003F0A  0E00               	movlw	0
  5680  003F0C  6EDF               	movwf	indf2,c
  5681  003F0E  0617               	decf	ultoa@buf^0,f,c
  5682  003F10                     l12732:
  5683  003F10  C018  F00A         	movff	ultoa@val,___llmod@dividend
  5684  003F14  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
  5685  003F18  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
  5686  003F1C  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
  5687  003F20  C01C  F00E         	movff	ultoa@base,___llmod@divisor
  5688  003F24  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
  5689  003F28  0E00               	movlw	0
  5690  003F2A  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
  5691  003F2C  0EFF               	movlw	-1
  5692  003F2E  6E10               	movwf	(___llmod@divisor+2)^0,c
  5693  003F30  6E11               	movwf	(___llmod@divisor+3)^0,c
  5694  003F32  ECF9  F026         	call	___llmod	;wreg free
  5695  003F36  500A               	movf	?___llmod^0,w,c
  5696  003F38  6E22               	movwf	ultoa@c^0,c
  5697  003F3A  C018  F00A         	movff	ultoa@val,___lldiv@dividend
  5698  003F3E  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
  5699  003F42  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
  5700  003F46  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
  5701  003F4A  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5702  003F4E  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5703  003F52  0E00               	movlw	0
  5704  003F54  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5705  003F56  0EFF               	movlw	-1
  5706  003F58  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5707  003F5A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5708  003F5C  ECF4  F024         	call	___lldiv	;wreg free
  5709  003F60  C00A  F018         	movff	?___lldiv,ultoa@val
  5710  003F64  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
  5711  003F68  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
  5712  003F6C  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
  5713  003F70  0E09               	movlw	9
  5714  003F72  6422               	cpfsgt	ultoa@c^0,c
  5715  003F74  D002               	goto	l2470
  5716  003F76  0E07               	movlw	7
  5717  003F78  2622               	addwf	ultoa@c^0,f,c
  5718  003F7A                     l2470:
  5719  003F7A  0E30               	movlw	48
  5720  003F7C  2622               	addwf	ultoa@c^0,f,c
  5721  003F7E  5017               	movf	ultoa@buf^0,w,c
  5722  003F80  6ED9               	movwf	fsr2l,c
  5723  003F82  6ADA               	clrf	fsr2h,c
  5724  003F84  C022  FFDF         	movff	ultoa@c,indf2
  5725  003F88  0617               	decf	ultoa@buf^0,f,c
  5726  003F8A  5018               	movf	ultoa@val^0,w,c
  5727  003F8C  1019               	iorwf	(ultoa@val+1)^0,w,c
  5728  003F8E  101A               	iorwf	(ultoa@val+2)^0,w,c
  5729  003F90  101B               	iorwf	(ultoa@val+3)^0,w,c
  5730  003F92  B4D8               	btfsc	status,2,c
  5731  003F94  0012               	return	
  5732  003F96  D7BC               	goto	l12732
  5733  003F98                     __end_of_ultoa:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _escreve_cmd_lcd *****************
  5737 ;; Defined at:
  5738 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  comando         1    wreg     unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  comando         1   11[COMRAM] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0
  5753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:        1 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    3
  5759 ;; This function calls:
  5760 ;;		_delay
  5761 ;; This function is called by:
  5762 ;;		_init_lcd
  5763 ;;		_mensagem_inicial
  5764 ;;		_troca_de_tela
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text29
  5769  004856                     __ptext29:
  5770                           	callstack 0
  5771  004856                     _escreve_cmd_lcd:
  5772                           	callstack 26
  5773                           
  5774                           ;incstack = 0
  5775                           ;escreve_cmd_lcd@comando stored from wreg
  5776  004856  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  5777                           
  5778                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5779  004858  9483               	bcf	131,2,c	;volatile
  5780                           
  5781                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5782  00485A  9283               	bcf	131,1,c	;volatile
  5783                           
  5784                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5785  00485C  9083               	bcf	131,0,c	;volatile
  5786                           
  5787                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5788  00485E  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  5789  004860  D002               	goto	l191
  5790  004862  8883               	bsf	131,4,c	;volatile
  5791  004864  D001               	goto	l13168
  5792  004866                     l191:
  5793                           
  5794                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5795  004866  9883               	bcf	131,4,c	;volatile
  5796  004868                     l13168:
  5797                           
  5798                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5799  004868  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  5800  00486A  D002               	goto	l193
  5801  00486C  8A83               	bsf	131,5,c	;volatile
  5802  00486E  D001               	goto	l13172
  5803  004870                     l193:
  5804                           
  5805                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5806  004870  9A83               	bcf	131,5,c	;volatile
  5807  004872                     l13172:
  5808                           
  5809                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5810  004872  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  5811  004874  D002               	goto	l195
  5812  004876  8C83               	bsf	131,6,c	;volatile
  5813  004878  D001               	goto	l13176
  5814  00487A                     l195:
  5815                           
  5816                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5817  00487A  9C83               	bcf	131,6,c	;volatile
  5818  00487C                     l13176:
  5819                           
  5820                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5821  00487C  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  5822  00487E  D002               	goto	l197
  5823  004880  8E83               	bsf	131,7,c	;volatile
  5824  004882  D001               	goto	l198
  5825  004884                     l197:
  5826                           
  5827                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5828  004884  9E83               	bcf	131,7,c	;volatile
  5829  004886                     l198:
  5830                           
  5831                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5832  004886  8083               	bsf	131,0,c	;volatile
  5833                           
  5834                           ;display_lcd.c: 181: delay();
  5835  004888  EC67  F02D         	call	_delay	;wreg free
  5836                           
  5837                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5838  00488C  9083               	bcf	131,0,c	;volatile
  5839                           
  5840                           ;display_lcd.c: 183: delay();
  5841  00488E  EC67  F02D         	call	_delay	;wreg free
  5842                           
  5843                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5844  004892  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  5845  004894  D002               	goto	l199
  5846  004896  8883               	bsf	131,4,c	;volatile
  5847  004898  D001               	goto	l200
  5848  00489A                     l199:
  5849                           
  5850                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5851  00489A  9883               	bcf	131,4,c	;volatile
  5852  00489C                     l200:
  5853                           
  5854                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5855  00489C  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  5856  00489E  D002               	goto	l201
  5857  0048A0  8A83               	bsf	131,5,c	;volatile
  5858  0048A2  D001               	goto	l202
  5859  0048A4                     l201:
  5860                           
  5861                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5862  0048A4  9A83               	bcf	131,5,c	;volatile
  5863  0048A6                     l202:
  5864                           
  5865                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5866  0048A6  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  5867  0048A8  D002               	goto	l203
  5868  0048AA  8C83               	bsf	131,6,c	;volatile
  5869  0048AC  D001               	goto	l204
  5870  0048AE                     l203:
  5871                           
  5872                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5873  0048AE  9C83               	bcf	131,6,c	;volatile
  5874  0048B0                     l204:
  5875                           
  5876                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5877  0048B0  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  5878  0048B2  D002               	goto	l205
  5879  0048B4  8E83               	bsf	131,7,c	;volatile
  5880  0048B6  D001               	goto	l206
  5881  0048B8                     l205:
  5882                           
  5883                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5884  0048B8  9E83               	bcf	131,7,c	;volatile
  5885  0048BA                     l206:
  5886                           
  5887                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5888  0048BA  8083               	bsf	131,0,c	;volatile
  5889                           
  5890                           ;display_lcd.c: 197: delay();
  5891  0048BC  EC67  F02D         	call	_delay	;wreg free
  5892                           
  5893                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5894  0048C0  9083               	bcf	131,0,c	;volatile
  5895                           
  5896                           ;display_lcd.c: 199: delay();
  5897  0048C2  EC67  F02D         	call	_delay	;wreg free
  5898                           
  5899                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5900  0048C6  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  5901  0048C8  B4D8               	btfsc	status,2,c
  5902  0048CA  D008               	goto	u15860
  5903  0048CC  0E02               	movlw	2
  5904  0048CE  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5905  0048D0  B4D8               	btfsc	status,2,c
  5906  0048D2  D004               	goto	u15860
  5907  0048D4  0E03               	movlw	3
  5908  0048D6  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5909  0048D8  A4D8               	btfss	status,2,c
  5910  0048DA  0012               	return	
  5911  0048DC                     u15860:
  5912                           
  5913                           ;display_lcd.c: 205: { delay(); }
  5914  0048DC  EC67  F02D         	call	_delay	;wreg free
  5915  0048E0  0012               	return		;funcret
  5916  0048E2                     __end_of_escreve_cmd_lcd:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function _verifica_fence *****************
  5920 ;; Defined at:
  5921 ;;		line 274 in file "main.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 3E/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        1 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    8
  5942 ;; This function calls:
  5943 ;;		_latitude_to_convert
  5944 ;;		_longitude_to_convert
  5945 ;;		_monta_sd
  5946 ;;		_recebe_dado_gps
  5947 ;;		_verifica_plausibilidade_lat
  5948 ;;		_verifica_plausibilidade_long
  5949 ;; This function is called by:
  5950 ;;		_verifica_dados_operacionais
  5951 ;;		_disparo_gravacao
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text30
  5956  004F1A                     __ptext30:
  5957                           	callstack 0
  5958  004F1A                     _verifica_fence:
  5959                           	callstack 20
  5960                           
  5961                           ;main.c: 276: recebe_dado_gps();
  5962                           
  5963                           ;incstack = 0
  5964  004F1A  EC37  F02D         	call	_recebe_dado_gps	;wreg free
  5965                           
  5966                           ;main.c: 277: longitude_to_convert();
  5967  004F1E  EC72  F025         	call	_longitude_to_convert	;wreg free
  5968                           
  5969                           ; BSR set to: 1
  5970                           ;main.c: 278: latitude_to_convert();
  5971  004F22  ECAF  F025         	call	_latitude_to_convert	;wreg free
  5972                           
  5973                           ;main.c: 279: fence_flag[0].point = verifica_plausibilidade_long();
  5974  004F26  ECC6  F026         	call	_verifica_plausibilidade_long	;wreg free
  5975  004F2A  6E43               	movwf	??_verifica_fence^0,c
  5976  004F2C  0100               	movlb	0	; () banked
  5977  004F2E  51E7               	movf	_fence_flag& (0+255),w,b
  5978  004F30  1843               	xorwf	??_verifica_fence^0,w,c
  5979  004F32  0BFE               	andlw	-2
  5980  004F34  1843               	xorwf	??_verifica_fence^0,w,c
  5981  004F36  6FE7               	movwf	_fence_flag& (0+255),b
  5982                           
  5983                           ;main.c: 280: fence_flag[1].point = verifica_plausibilidade_lat();
  5984  004F38  EC35  F025         	call	_verifica_plausibilidade_lat	;wreg free
  5985  004F3C  6E43               	movwf	??_verifica_fence^0,c
  5986  004F3E  0100               	movlb	0	; () banked
  5987  004F40  51E8               	movf	(_fence_flag+1)& (0+255),w,b
  5988  004F42  1843               	xorwf	??_verifica_fence^0,w,c
  5989  004F44  0BFE               	andlw	-2
  5990  004F46  1843               	xorwf	??_verifica_fence^0,w,c
  5991  004F48  6FE8               	movwf	(_fence_flag+1)& (0+255),b
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;main.c: 285: if(fence_flag[0].point || fence_flag[1].point)
  5995  004F4A  B1E7               	btfsc	_fence_flag& (0+255),0,b
  5996  004F4C  D002               	goto	u15900
  5997                           
  5998                           ; BSR set to: 0
  5999  004F4E  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  6000  004F50  D009               	goto	l1573
  6001  004F52                     u15900:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;main.c: 286: {;main.c: 287: fence_flag[2].point = 1;
  6005  004F52  81E9               	bsf	(_fence_flag+2)& (0+255),0,b
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;main.c: 288: monta_sd(4, "0");
  6009  004F54  0E7B               	movlw	low STR_20
  6010  004F56  6E10               	movwf	monta_sd@dado^0,c
  6011  004F58  0E62               	movlw	high STR_20
  6012  004F5A  6E11               	movwf	(monta_sd@dado+1)^0,c
  6013  004F5C  0E04               	movlw	4
  6014  004F5E  EC03  F00B         	call	_monta_sd
  6015                           
  6016                           ;main.c: 289: }
  6017  004F62  0012               	return	
  6018  004F64                     l1573:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;main.c: 290: else;main.c: 291: {;main.c: 292: fence_flag[2].point = 0;
  6022  004F64  91E9               	bcf	(_fence_flag+2)& (0+255),0,b
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;main.c: 293: monta_sd(4, "1");
  6026  004F66  0E2C               	movlw	low (STR_3+8)
  6027  004F68  6E10               	movwf	monta_sd@dado^0,c
  6028  004F6A  0E62               	movlw	high (STR_3+8)
  6029  004F6C  6E11               	movwf	(monta_sd@dado+1)^0,c
  6030  004F6E  0E04               	movlw	4
  6031  004F70  EC03  F00B         	call	_monta_sd
  6032  004F74  0012               	return		;funcret
  6033  004F76                     __end_of_verifica_fence:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _verifica_plausibilidade_long *****************
  6037 ;; Defined at:
  6038 ;;		line 311 in file "bibliotecas/fence.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  posicao         1    9[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 3F/1
  6049 ;;		On exit  : 3F/1
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0
  6053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6055 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        1 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    3
  6059 ;; This function calls:
  6060 ;;		_posicao_long
  6061 ;; This function is called by:
  6062 ;;		_verifica_fence
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text31
  6067  004D8C                     __ptext31:
  6068                           	callstack 0
  6069  004D8C                     _verifica_plausibilidade_long:
  6070                           	callstack 24
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;fence.c: 313: char posicao = posicao_long();
  6074                           
  6075                           ;incstack = 0
  6076  004D8C  EC3A  F02E         	call	_posicao_long	;wreg free
  6077  004D90  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6078                           
  6079                           ;fence.c: 314: switch(posicao)
  6080  004D92  D027               	goto	l13060
  6081  004D94                     l13004:
  6082                           
  6083                           ; BSR set to: 1
  6084                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6085  004D94  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6086  004D96  D00B               	goto	l13014
  6087                           
  6088                           ; BSR set to: 1
  6089  004D98  BF0F               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6090  004D9A  D007               	goto	u15560
  6091  004D9C  510F               	movf	(_poligono_ext+15)& (0+255),w,b
  6092  004D9E  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6093  004DA0  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6094  004DA2  E105               	bnz	l13014
  6095  004DA4  050C               	decf	(_poligono_ext+12)& (0+255),w,b
  6096  004DA6  B0D8               	btfsc	status,0,c
  6097  004DA8  D002               	goto	l13014
  6098  004DAA                     u15560:
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;fence.c: 320: {;fence.c: 321: return 0;
  6102  004DAA  0E00               	movlw	0
  6103  004DAC  0012               	return	
  6104  004DAE                     l13014:
  6105                           
  6106                           ; BSR set to: 1
  6107                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6108  004DAE  5104               	movf	(_poligono_ext+4)& (0+255),w,b
  6109  004DB0  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6110  004DB2  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6111  004DB4  1107               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6112  004DB6  B4D8               	btfsc	status,2,c
  6113  004DB8  D7F8               	goto	u15560
  6114                           
  6115                           ; BSR set to: 1
  6116  004DBA  510C               	movf	(_poligono_ext+12)& (0+255),w,b
  6117  004DBC  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6118  004DBE  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6119  004DC0  110F               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6120  004DC2  B4D8               	btfsc	status,2,c
  6121  004DC4  D7F2               	goto	u15560
  6122  004DC6                     l13024:
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6126  004DC6  0E01               	movlw	1
  6127  004DC8  0012               	return	
  6128  004DCA                     l13028:
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6132  004DCA  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6133  004DCC  D007               	goto	u15590
  6134  004DCE  5107               	movf	(_poligono_ext+7)& (0+255),w,b
  6135  004DD0  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6136  004DD2  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6137  004DD4  E1EC               	bnz	l13014
  6138  004DD6  0504               	decf	(_poligono_ext+4)& (0+255),w,b
  6139  004DD8  B0D8               	btfsc	status,0,c
  6140  004DDA  D7E9               	goto	l13014
  6141  004DDC                     u15590:
  6142                           
  6143                           ; BSR set to: 1
  6144  004DDC  AF0F               	btfss	(_poligono_ext+15)& (0+255),7,b
  6145  004DDE  D7E5               	goto	u15560
  6146  004DE0  D7E6               	goto	l13014
  6147  004DE2                     l13060:
  6148                           
  6149                           ; BSR set to: 1
  6150  004DE2  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6151                           
  6152                           ; Switch size 1, requested type "simple"
  6153                           ; Number of cases is 2, Range of values is 43 to 45
  6154                           ; switch strategies available:
  6155                           ; Name         Instructions Cycles
  6156                           ; simple_byte            7     4 (average)
  6157                           ;	Chosen strategy is simple_byte
  6158  004DE4  0A2B               	xorlw	43	; case 43
  6159  004DE6  B4D8               	btfsc	status,2,c
  6160  004DE8  D7F0               	goto	l13028
  6161  004DEA  0A06               	xorlw	6	; case 45
  6162  004DEC  B4D8               	btfsc	status,2,c
  6163  004DEE  D7D2               	goto	l13004
  6164  004DF0  D7EA               	goto	l13024
  6165  004DF2                     __end_of_verifica_plausibilidade_long:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function _posicao_long *****************
  6169 ;; Defined at:
  6170 ;;		line 646 in file "bibliotecas/GPS.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2
  6179 ;; Tracked objects:
  6180 ;;		On entry : 3F/1
  6181 ;;		On exit  : 3F/1
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    2
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_verifica_plausibilidade_long
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text32
  6199  005C74                     __ptext32:
  6200                           	callstack 0
  6201  005C74                     _posicao_long:
  6202                           	callstack 24
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;GPS.c: 649: return rawLongitude[0];
  6206                           
  6207                           ; BSR set to: 1
  6208                           ;incstack = 0
  6209  005C74  51A5               	movf	_rawLongitude& (0+255),w,b
  6210                           
  6211                           ; BSR set to: 1
  6212  005C76  0012               	return		;funcret
  6213  005C78                     __end_of_posicao_long:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _verifica_plausibilidade_lat *****************
  6217 ;; Defined at:
  6218 ;;		line 367 in file "bibliotecas/fence.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  posicao         1    9[COMRAM] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      unsigned char 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 3F/0
  6229 ;;		On exit  : 3F/1
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6232 ;;      Params:         0       0       0       0       0       0       0       0       0
  6233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6236 ;;Total ram usage:        1 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    3
  6239 ;; This function calls:
  6240 ;;		_posicao_lat
  6241 ;; This function is called by:
  6242 ;;		_verifica_fence
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text33
  6247  004A6A                     __ptext33:
  6248                           	callstack 0
  6249  004A6A                     _verifica_plausibilidade_lat:
  6250                           	callstack 24
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;fence.c: 369: char posicao = posicao_lat();
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;incstack = 0
  6257  004A6A  EC37  F02E         	call	_posicao_lat	;wreg free
  6258  004A6E  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6259                           
  6260                           ;fence.c: 370: switch(posicao)
  6261  004A70  D031               	goto	l13130
  6262  004A72                     l13064:
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;fence.c: 373: if(;fence.c: 374: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 375: poligo
      +                          no_ext[1].diff_lat >= 0))
  6266  004A72  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6267  004A74  D007               	goto	u15630
  6268  004A76  5103               	movf	(_poligono_ext+3)& (0+255),w,b
  6269  004A78  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6270  004A7A  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6271  004A7C  E107               	bnz	l13074
  6272  004A7E  0500               	decf	_poligono_ext& (0+255),w,b
  6273  004A80  B0D8               	btfsc	status,0,c
  6274  004A82  D004               	goto	l13074
  6275  004A84                     u15630:
  6276                           
  6277                           ; BSR set to: 1
  6278  004A84  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6279  004A86  D002               	goto	l13074
  6280  004A88                     u15640:
  6281                           
  6282                           ; BSR set to: 1
  6283                           ;fence.c: 376: {;fence.c: 377: return 0;
  6284  004A88  0E00               	movlw	0
  6285  004A8A  0012               	return	
  6286  004A8C                     l13074:
  6287                           
  6288                           ; BSR set to: 1
  6289                           ;fence.c: 379: else if(;fence.c: 380: (poligono_ext[0].diff_lat == 0 ||;fence.c: 381: po
      +                          ligono_ext[1].diff_lat == 0))
  6290  004A8C  5100               	movf	_poligono_ext& (0+255),w,b
  6291  004A8E  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6292  004A90  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6293  004A92  1103               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6294  004A94  B4D8               	btfsc	status,2,c
  6295  004A96  D7F8               	goto	u15640
  6296                           
  6297                           ; BSR set to: 1
  6298  004A98  5108               	movf	(_poligono_ext+8)& (0+255),w,b
  6299  004A9A  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6300  004A9C  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6301  004A9E  110B               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6302  004AA0  B4D8               	btfsc	status,2,c
  6303  004AA2  D7F2               	goto	u15640
  6304  004AA4                     l13084:
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;fence.c: 386: else;fence.c: 387: {;fence.c: 389: return 1;
  6308  004AA4  0E01               	movlw	1
  6309  004AA6  0012               	return	
  6310  004AA8                     l13088:
  6311                           
  6312                           ; BSR set to: 1
  6313                           ;fence.c: 394: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 395: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6314  004AA8  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6315  004AAA  D009               	goto	l13098
  6316                           
  6317                           ; BSR set to: 1
  6318  004AAC  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6319  004AAE  D7EC               	goto	u15640
  6320  004AB0  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6321  004AB2  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6322  004AB4  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6323  004AB6  E103               	bnz	l13098
  6324  004AB8  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6325  004ABA  A0D8               	btfss	status,0,c
  6326  004ABC  D7E5               	goto	u15640
  6327  004ABE                     l13098:
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;fence.c: 399: else if(;fence.c: 400: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 401: po
      +                          ligono_ext[1].diff_lat <= 0))
  6331  004ABE  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6332                           
  6333                           ; BSR set to: 1
  6334  004AC0  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6335  004AC2  D7E2               	goto	u15640
  6336  004AC4  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6337  004AC6  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6338  004AC8  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6339  004ACA  E1E0               	bnz	l13074
  6340  004ACC  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6341  004ACE  A0D8               	btfss	status,0,c
  6342  004AD0  D7DB               	goto	u15640
  6343  004AD2  D7DC               	goto	l13074
  6344  004AD4                     l13130:
  6345                           
  6346                           ; BSR set to: 1
  6347  004AD4  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6348                           
  6349                           ; Switch size 1, requested type "simple"
  6350                           ; Number of cases is 2, Range of values is 43 to 45
  6351                           ; switch strategies available:
  6352                           ; Name         Instructions Cycles
  6353                           ; simple_byte            7     4 (average)
  6354                           ;	Chosen strategy is simple_byte
  6355  004AD6  0A2B               	xorlw	43	; case 43
  6356  004AD8  B4D8               	btfsc	status,2,c
  6357  004ADA  D7E6               	goto	l13088
  6358  004ADC  0A06               	xorlw	6	; case 45
  6359  004ADE  B4D8               	btfsc	status,2,c
  6360  004AE0  D7C8               	goto	l13064
  6361  004AE2  D7E0               	goto	l13084
  6362  004AE4                     __end_of_verifica_plausibilidade_lat:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function _posicao_lat *****************
  6366 ;; Defined at:
  6367 ;;		line 652 in file "bibliotecas/GPS.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      unsigned char 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2
  6376 ;; Tracked objects:
  6377 ;;		On entry : 3F/0
  6378 ;;		On exit  : 3F/1
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    2
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_verifica_plausibilidade_lat
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text34
  6396  005C6E                     __ptext34:
  6397                           	callstack 0
  6398  005C6E                     _posicao_lat:
  6399                           	callstack 24
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;GPS.c: 655: return rawLatitude[0];
  6403                           
  6404                           ; BSR set to: 1
  6405                           ;incstack = 0
  6406  005C6E  0101               	movlb	1	; () banked
  6407  005C70  51BE               	movf	_rawLatitude& (0+255),w,b
  6408                           
  6409                           ; BSR set to: 1
  6410  005C72  0012               	return		;funcret
  6411  005C74                     __end_of_posicao_lat:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function _recebe_dado_gps *****************
  6415 ;; Defined at:
  6416 ;;		line 553 in file "main.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  timeout         1   10[COMRAM] unsigned char 
  6421 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0
  6432 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6434 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6435 ;;Total ram usage:        2 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    3
  6438 ;; This function calls:
  6439 ;;		_verifica_recep_gps
  6440 ;; This function is called by:
  6441 ;;		_verifica_fence
  6442 ;;		_disparo_gravacao
  6443 ;;		_troca_de_tela
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text35
  6448  005A6E                     __ptext35:
  6449                           	callstack 0
  6450  005A6E                     _recebe_dado_gps:
  6451                           	callstack 24
  6452                           
  6453                           ;main.c: 555: unsigned char flag_recebe = 0;
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;incstack = 0
  6457  005A6E  0E00               	movlw	0
  6458  005A70  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6459                           
  6460                           ;main.c: 556: unsigned char timeout = 10;
  6461  005A72  0E0A               	movlw	10
  6462  005A74  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6463                           
  6464                           ;main.c: 557: while(!flag_recebe && timeout>0)
  6465  005A76  D004               	goto	l12998
  6466  005A78                     l12994:
  6467                           
  6468                           ;main.c: 558: {;main.c: 559: flag_recebe = verifica_recep_gps();
  6469  005A78  EC74  F02C         	call	_verifica_recep_gps	;wreg free
  6470  005A7C  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6471                           
  6472                           ; BSR set to: 1
  6473                           ;main.c: 560: timeout--;
  6474  005A7E  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6475  005A80                     l12998:
  6476  005A80  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6477  005A82  A4D8               	btfss	status,2,c
  6478  005A84  0012               	return	
  6479  005A86  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6480  005A88  B4D8               	btfsc	status,2,c
  6481  005A8A  0012               	return	
  6482  005A8C  D7F5               	goto	l12994
  6483  005A8E                     __end_of_recebe_dado_gps:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function _verifica_recep_gps *****************
  6487 ;; Defined at:
  6488 ;;		line 720 in file "bibliotecas/GPS.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      unsigned char 
  6495 ;; Registers used:
  6496 ;;		wreg
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 3F/1
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    2
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_recebe_dado_gps
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text36
  6517  0058E8                     __ptext36:
  6518                           	callstack 0
  6519  0058E8                     _verifica_recep_gps:
  6520                           	callstack 24
  6521                           
  6522                           ;GPS.c: 722: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6523                           
  6524                           ;incstack = 0
  6525  0058E8  0101               	movlb	1	; () banked
  6526  0058EA  B14B               	btfsc	_gps_flag& (0+255),0,b
  6527                           
  6528                           ; BSR set to: 1
  6529  0058EC  A14C               	btfss	(_gps_flag+1)& (0+255),0,b
  6530  0058EE  D00E               	goto	l12242
  6531                           
  6532                           ; BSR set to: 1
  6533  0058F0  B14D               	btfsc	(_gps_flag+2)& (0+255),0,b
  6534                           
  6535                           ; BSR set to: 1
  6536  0058F2  A14E               	btfss	(_gps_flag+3)& (0+255),0,b
  6537  0058F4  D00B               	goto	l12242
  6538                           
  6539                           ; BSR set to: 1
  6540  0058F6  B14F               	btfsc	(_gps_flag+4)& (0+255),0,b
  6541                           
  6542                           ; BSR set to: 1
  6543  0058F8  A150               	btfss	(_gps_flag+5)& (0+255),0,b
  6544  0058FA  D008               	goto	l12242
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;GPS.c: 723: {;GPS.c: 724: gps_flag[0].flag = 0;
  6548  0058FC  914B               	bcf	_gps_flag& (0+255),0,b
  6549                           
  6550                           ;GPS.c: 725: gps_flag[1].flag = 0;
  6551  0058FE  914C               	bcf	(_gps_flag+1)& (0+255),0,b
  6552                           
  6553                           ;GPS.c: 726: gps_flag[2].flag = 0;
  6554  005900  914D               	bcf	(_gps_flag+2)& (0+255),0,b
  6555                           
  6556                           ;GPS.c: 727: gps_flag[3].flag = 0;
  6557  005902  914E               	bcf	(_gps_flag+3)& (0+255),0,b
  6558                           
  6559                           ;GPS.c: 728: gps_flag[4].flag = 0;
  6560  005904  914F               	bcf	(_gps_flag+4)& (0+255),0,b
  6561                           
  6562                           ;GPS.c: 729: gps_flag[5].flag = 0;
  6563  005906  9150               	bcf	(_gps_flag+5)& (0+255),0,b
  6564                           
  6565                           ; BSR set to: 1
  6566                           ;GPS.c: 730: return 1;
  6567  005908  0E01               	movlw	1
  6568  00590A  0012               	return	
  6569  00590C                     l12242:
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;GPS.c: 732: else;GPS.c: 733: {;GPS.c: 735: return 0;
  6573  00590C  0E00               	movlw	0
  6574                           
  6575                           ; BSR set to: 1
  6576  00590E  0012               	return		;funcret
  6577  005910                     __end_of_verifica_recep_gps:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _longitude_to_convert *****************
  6581 ;; Defined at:
  6582 ;;		line 627 in file "bibliotecas/GPS.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6587 ;;  i               1   12[BANK0 ] unsigned char 
  6588 ;;  j               1   11[BANK0 ] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 3F/1
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0
  6599 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6601 ;;      Totals:         1      13       0       0       0       0       0       0       0
  6602 ;;Total ram usage:       14 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    7
  6605 ;; This function calls:
  6606 ;;		_armazena_ltlo
  6607 ;; This function is called by:
  6608 ;;		_verifica_fence
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text37
  6613  004AE4                     __ptext37:
  6614                           	callstack 0
  6615  004AE4                     _longitude_to_convert:
  6616                           	callstack 20
  6617                           
  6618                           ;GPS.c: 629: unsigned char i,j;;GPS.c: 630: unsigned char longitude[11];;GPS.c: 633: j =
      +                           0;
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;incstack = 0
  6622  004AE4  0E00               	movlw	0
  6623  004AE6  0100               	movlb	0	; () banked
  6624  004AE8  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  6625                           
  6626                           ;GPS.c: 634: for(i=0; i<12; i++)
  6627  004AEA  0E00               	movlw	0
  6628  004AEC  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  6629  004AEE                     l12788:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;GPS.c: 635: {;GPS.c: 636: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  6633  004AEE  0EA5               	movlw	low _rawLongitude
  6634  004AF0  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6635  004AF2  6ED9               	movwf	fsr2l,c
  6636  004AF4  6ADA               	clrf	fsr2h,c
  6637  004AF6  0E01               	movlw	high _rawLongitude
  6638  004AF8  22DA               	addwfc	fsr2h,f,c
  6639  004AFA  50DF               	movf	indf2,w,c
  6640  004AFC  B4D8               	btfsc	status,2,c
  6641  004AFE  D024               	goto	l12800
  6642                           
  6643                           ; BSR set to: 0
  6644  004B00  0EA5               	movlw	low _rawLongitude
  6645  004B02  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6646  004B04  6ED9               	movwf	fsr2l,c
  6647  004B06  6ADA               	clrf	fsr2h,c
  6648  004B08  0E01               	movlw	high _rawLongitude
  6649  004B0A  22DA               	addwfc	fsr2h,f,c
  6650  004B0C  0E2D               	movlw	45
  6651  004B0E  18DE               	xorwf	postinc2,w,c
  6652  004B10  B4D8               	btfsc	status,2,c
  6653  004B12  D01A               	goto	l12800
  6654                           
  6655                           ; BSR set to: 0
  6656  004B14  0EA5               	movlw	low _rawLongitude
  6657  004B16  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6658  004B18  6ED9               	movwf	fsr2l,c
  6659  004B1A  6ADA               	clrf	fsr2h,c
  6660  004B1C  0E01               	movlw	high _rawLongitude
  6661  004B1E  22DA               	addwfc	fsr2h,f,c
  6662  004B20  0E2E               	movlw	46
  6663  004B22  18DE               	xorwf	postinc2,w,c
  6664  004B24  B4D8               	btfsc	status,2,c
  6665  004B26  D010               	goto	l12800
  6666                           
  6667                           ; BSR set to: 0
  6668  004B28  0E0A               	movlw	10
  6669  004B2A  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  6670  004B2C  D00D               	goto	l12800
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;GPS.c: 637: {;GPS.c: 639: longitude[j] = rawLongitude[i];
  6674  004B2E  0EA5               	movlw	low _rawLongitude
  6675  004B30  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6676  004B32  6ED9               	movwf	fsr2l,c
  6677  004B34  6ADA               	clrf	fsr2h,c
  6678  004B36  0E01               	movlw	high _rawLongitude
  6679  004B38  22DA               	addwfc	fsr2h,f,c
  6680  004B3A  516B               	movf	longitude_to_convert@j& (0+255),w,b
  6681  004B3C  0F60               	addlw	low longitude_to_convert@longitude
  6682  004B3E  6EE1               	movwf	fsr1l,c
  6683  004B40  6AE2               	clrf	fsr1h,c
  6684  004B42  CFDF FFE7          	movff	indf2,indf1
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;GPS.c: 640: j++;
  6688  004B46  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  6689  004B48                     l12800:
  6690                           
  6691                           ; BSR set to: 0
  6692  004B48  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  6693                           
  6694                           ; BSR set to: 0
  6695  004B4A  0E0B               	movlw	11
  6696  004B4C  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  6697  004B4E  D7CF               	goto	l12788
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;GPS.c: 641: };GPS.c: 642: };GPS.c: 643: armazena_ltlo(longitude, 0);
  6701  004B50  0E60               	movlw	low longitude_to_convert@longitude
  6702  004B52  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6703  004B54  0E00               	movlw	0
  6704  004B56  6E3F               	movwf	armazena_ltlo@index^0,c
  6705  004B58  EC71  F024         	call	_armazena_ltlo	;wreg free
  6706                           
  6707                           ; BSR set to: 1
  6708  004B5C  0012               	return		;funcret
  6709  004B5E                     __end_of_longitude_to_convert:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _latitude_to_convert *****************
  6713 ;; Defined at:
  6714 ;;		line 602 in file "bibliotecas/GPS.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  6719 ;;  i               1   10[BANK0 ] unsigned char 
  6720 ;;  j               1    9[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 3F/1
  6727 ;;		On exit  : 3F/1
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0
  6731 ;;      Locals:         0      11       0       0       0       0       0       0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6733 ;;      Totals:         1      11       0       0       0       0       0       0       0
  6734 ;;Total ram usage:       12 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    7
  6737 ;; This function calls:
  6738 ;;		_armazena_ltlo
  6739 ;; This function is called by:
  6740 ;;		_verifica_fence
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text38
  6745  004B5E                     __ptext38:
  6746                           	callstack 0
  6747  004B5E                     _latitude_to_convert:
  6748                           	callstack 20
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;GPS.c: 604: unsigned char i,j;;GPS.c: 605: unsigned char latitude[9];;GPS.c: 608: j = 0
      +                          ;
  6752                           
  6753                           ; BSR set to: 1
  6754                           ;incstack = 0
  6755  004B5E  0E00               	movlw	0
  6756  004B60  0100               	movlb	0	; () banked
  6757  004B62  6F69               	movwf	latitude_to_convert@j& (0+255),b
  6758                           
  6759                           ;GPS.c: 609: for(i=0; i<12; i++)
  6760  004B64  0E00               	movlw	0
  6761  004B66  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  6762  004B68                     l12764:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;GPS.c: 610: {;GPS.c: 611: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  6766  004B68  0EBE               	movlw	low _rawLatitude
  6767  004B6A  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6768  004B6C  6ED9               	movwf	fsr2l,c
  6769  004B6E  6ADA               	clrf	fsr2h,c
  6770  004B70  0E01               	movlw	high _rawLatitude
  6771  004B72  22DA               	addwfc	fsr2h,f,c
  6772  004B74  50DF               	movf	indf2,w,c
  6773  004B76  B4D8               	btfsc	status,2,c
  6774  004B78  D024               	goto	l12776
  6775                           
  6776                           ; BSR set to: 0
  6777  004B7A  0EBE               	movlw	low _rawLatitude
  6778  004B7C  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6779  004B7E  6ED9               	movwf	fsr2l,c
  6780  004B80  6ADA               	clrf	fsr2h,c
  6781  004B82  0E01               	movlw	high _rawLatitude
  6782  004B84  22DA               	addwfc	fsr2h,f,c
  6783  004B86  0E2D               	movlw	45
  6784  004B88  18DE               	xorwf	postinc2,w,c
  6785  004B8A  B4D8               	btfsc	status,2,c
  6786  004B8C  D01A               	goto	l12776
  6787                           
  6788                           ; BSR set to: 0
  6789  004B8E  0EBE               	movlw	low _rawLatitude
  6790  004B90  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6791  004B92  6ED9               	movwf	fsr2l,c
  6792  004B94  6ADA               	clrf	fsr2h,c
  6793  004B96  0E01               	movlw	high _rawLatitude
  6794  004B98  22DA               	addwfc	fsr2h,f,c
  6795  004B9A  0E2E               	movlw	46
  6796  004B9C  18DE               	xorwf	postinc2,w,c
  6797  004B9E  B4D8               	btfsc	status,2,c
  6798  004BA0  D010               	goto	l12776
  6799                           
  6800                           ; BSR set to: 0
  6801  004BA2  0E09               	movlw	9
  6802  004BA4  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  6803  004BA6  D00D               	goto	l12776
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;GPS.c: 612: {;GPS.c: 613: latitude[j] = rawLatitude[i];
  6807  004BA8  0EBE               	movlw	low _rawLatitude
  6808  004BAA  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6809  004BAC  6ED9               	movwf	fsr2l,c
  6810  004BAE  6ADA               	clrf	fsr2h,c
  6811  004BB0  0E01               	movlw	high _rawLatitude
  6812  004BB2  22DA               	addwfc	fsr2h,f,c
  6813  004BB4  5169               	movf	latitude_to_convert@j& (0+255),w,b
  6814  004BB6  0F60               	addlw	low latitude_to_convert@latitude
  6815  004BB8  6EE1               	movwf	fsr1l,c
  6816  004BBA  6AE2               	clrf	fsr1h,c
  6817  004BBC  CFDF FFE7          	movff	indf2,indf1
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;GPS.c: 614: j++;
  6821  004BC0  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  6822  004BC2                     l12776:
  6823                           
  6824                           ; BSR set to: 0
  6825  004BC2  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  6826                           
  6827                           ; BSR set to: 0
  6828  004BC4  0E0B               	movlw	11
  6829  004BC6  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  6830  004BC8  D7CF               	goto	l12764
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;GPS.c: 615: };GPS.c: 616: };GPS.c: 617: armazena_ltlo(latitude, 1);
  6834  004BCA  0E60               	movlw	low latitude_to_convert@latitude
  6835  004BCC  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6836  004BCE  0E01               	movlw	1
  6837  004BD0  6E3F               	movwf	armazena_ltlo@index^0,c
  6838  004BD2  EC71  F024         	call	_armazena_ltlo	;wreg free
  6839                           
  6840                           ; BSR set to: 1
  6841  004BD6  0012               	return		;funcret
  6842  004BD8                     __end_of_latitude_to_convert:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _armazena_ltlo *****************
  6846 ;; Defined at:
  6847 ;;		line 64 in file "bibliotecas/fence.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  6850 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  6851 ;;  index           1   62[COMRAM] unsigned char 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  i               1   64[COMRAM] unsigned char 
  6854 ;;  j               1   63[COMRAM] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 3F/0
  6861 ;;		On exit  : 3F/1
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         2       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6867 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:        4 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    6
  6871 ;; This function calls:
  6872 ;;		_diferenca
  6873 ;; This function is called by:
  6874 ;;		_latitude_to_convert
  6875 ;;		_longitude_to_convert
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text39
  6880  0048E2                     __ptext39:
  6881                           	callstack 0
  6882  0048E2                     _armazena_ltlo:
  6883                           	callstack 20
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  6887                           
  6888                           ; BSR set to: 1
  6889                           ;incstack = 0
  6890  0048E2  D038               	goto	l12210
  6891  0048E4                     l12172:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;fence.c: 75: j = 0;
  6895  0048E4  0E00               	movlw	0
  6896  0048E6  6E40               	movwf	armazena_ltlo@j^0,c
  6897                           
  6898                           ;fence.c: 76: for(i=0; i<10; i++)
  6899  0048E8  0E00               	movlw	0
  6900  0048EA  6E41               	movwf	armazena_ltlo@i^0,c
  6901  0048EC                     l12178:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  6905  0048EC  503E               	movf	armazena_ltlo@buffer^0,w,c
  6906  0048EE  6ED9               	movwf	fsr2l,c
  6907  0048F0  6ADA               	clrf	fsr2h,c
  6908  0048F2  50DF               	movf	indf2,w,c
  6909  0048F4  B4D8               	btfsc	status,2,c
  6910  0048F6  D00C               	goto	l12184
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  6914  0048F8  503E               	movf	armazena_ltlo@buffer^0,w,c
  6915  0048FA  6ED9               	movwf	fsr2l,c
  6916  0048FC  6ADA               	clrf	fsr2h,c
  6917  0048FE  0E10               	movlw	low _dado
  6918  004900  2440               	addwf	armazena_ltlo@j^0,w,c
  6919  004902  6EE1               	movwf	fsr1l,c
  6920  004904  6AE2               	clrf	fsr1h,c
  6921  004906  0E01               	movlw	high _dado
  6922  004908  22E2               	addwfc	fsr1h,f,c
  6923  00490A  CFDF FFE7          	movff	indf2,indf1
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;fence.c: 82: j++;
  6927  00490E  2A40               	incf	armazena_ltlo@j^0,f,c
  6928  004910                     l12184:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;fence.c: 83: };fence.c: 85: buffer++;
  6932  004910  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6933                           
  6934                           ; BSR set to: 0
  6935  004912  2A41               	incf	armazena_ltlo@i^0,f,c
  6936                           
  6937                           ; BSR set to: 0
  6938  004914  0E09               	movlw	9
  6939  004916  6441               	cpfsgt	armazena_ltlo@i^0,c
  6940  004918  D7E9               	goto	l12178
  6941  00491A  D021               	goto	l12212
  6942  00491C                     l12190:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;fence.c: 91: j = 0;
  6946  00491C  0E00               	movlw	0
  6947  00491E  6E40               	movwf	armazena_ltlo@j^0,c
  6948                           
  6949                           ;fence.c: 92: for(i=0; i<11; i++)
  6950  004920  0E00               	movlw	0
  6951  004922  6E41               	movwf	armazena_ltlo@i^0,c
  6952  004924                     l12196:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  6956  004924  503E               	movf	armazena_ltlo@buffer^0,w,c
  6957  004926  6ED9               	movwf	fsr2l,c
  6958  004928  6ADA               	clrf	fsr2h,c
  6959  00492A  50DF               	movf	indf2,w,c
  6960  00492C  B4D8               	btfsc	status,2,c
  6961  00492E  D00C               	goto	l12202
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  6965  004930  503E               	movf	armazena_ltlo@buffer^0,w,c
  6966  004932  6ED9               	movwf	fsr2l,c
  6967  004934  6ADA               	clrf	fsr2h,c
  6968  004936  0E10               	movlw	low _dado
  6969  004938  2440               	addwf	armazena_ltlo@j^0,w,c
  6970  00493A  6EE1               	movwf	fsr1l,c
  6971  00493C  6AE2               	clrf	fsr1h,c
  6972  00493E  0E01               	movlw	high _dado
  6973  004940  22E2               	addwfc	fsr1h,f,c
  6974  004942  CFDF FFE7          	movff	indf2,indf1
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;fence.c: 98: j++;
  6978  004946  2A40               	incf	armazena_ltlo@j^0,f,c
  6979  004948                     l12202:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;fence.c: 99: };fence.c: 101: buffer++;
  6983  004948  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6984                           
  6985                           ; BSR set to: 0
  6986  00494A  2A41               	incf	armazena_ltlo@i^0,f,c
  6987                           
  6988                           ; BSR set to: 0
  6989  00494C  0E0A               	movlw	10
  6990  00494E  6441               	cpfsgt	armazena_ltlo@i^0,c
  6991  004950  D7E9               	goto	l12196
  6992  004952  D005               	goto	l12212
  6993  004954                     l12210:
  6994                           
  6995                           ; BSR set to: 0
  6996  004954  503F               	movf	armazena_ltlo@index^0,w,c
  6997                           
  6998                           ; Switch size 1, requested type "simple"
  6999                           ; Number of cases is 1, Range of values is 1 to 1
  7000                           ; switch strategies available:
  7001                           ; Name         Instructions Cycles
  7002                           ; simple_byte            4     3 (average)
  7003                           ;	Chosen strategy is simple_byte
  7004  004956  0A01               	xorlw	1	; case 1
  7005  004958  B4D8               	btfsc	status,2,c
  7006  00495A  D7C4               	goto	l12172
  7007  00495C  D7DF               	goto	l12190
  7008  00495E                     l12212:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;fence.c: 108: diferenca(index);
  7012  00495E  503F               	movf	armazena_ltlo@index^0,w,c
  7013  004960  EC35  F020         	call	_diferenca
  7014                           
  7015                           ; BSR set to: 1
  7016  004964  0012               	return		;funcret
  7017  004966                     __end_of_armazena_ltlo:
  7018                           	callstack 0
  7019                           
  7020 ;; *************** function _diferenca *****************
  7021 ;; Defined at:
  7022 ;;		line 145 in file "bibliotecas/fence.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  index           1    wreg     unsigned char 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  index           1   52[COMRAM] unsigned char 
  7027 ;;  valor_long      4   57[COMRAM] unsigned long 
  7028 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 3F/0
  7035 ;;		On exit  : 3F/1
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0
  7039 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7041 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7042 ;;Total ram usage:        9 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    5
  7045 ;; This function calls:
  7046 ;;		_convert_to_int
  7047 ;;		_convert_to_int_point_lat
  7048 ;;		_convert_to_int_point_long
  7049 ;; This function is called by:
  7050 ;;		_armazena_ltlo
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text40
  7055  00406A                     __ptext40:
  7056                           	callstack 0
  7057  00406A                     _diferenca:
  7058                           	callstack 20
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;incstack = 0
  7062                           ;diferenca@index stored from wreg
  7063  00406A  6E35               	movwf	diferenca@index^0,c
  7064                           
  7065                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7066  00406C  D062               	goto	l12100
  7067  00406E                     l12086:
  7068                           
  7069                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7070  00406E  EC14  F028         	call	_convert_to_int_point_lat	;wreg free
  7071  004072  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7072  004076  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7073  00407A  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7074  00407E  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7075                           
  7076                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7077  004082  0E55               	movlw	low _fence_diff_lat
  7078  004084  6E24               	movwf	convert_to_int@p_buff^0,c
  7079  004086  0E61               	movlw	high _fence_diff_lat
  7080  004088  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7081  00408A  ECC0  F02C         	call	_convert_to_int	;wreg free
  7082  00408E  5036               	movf	diferenca@valor_lat^0,w,c
  7083  004090  5C24               	subwf	?_convert_to_int^0,w,c
  7084  004092  0101               	movlb	1	; () banked
  7085  004094  6F00               	movwf	_poligono_ext& (0+255),b
  7086  004096  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7087  004098  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7088  00409A  6F01               	movwf	(_poligono_ext+1)& (0+255),b
  7089  00409C  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7090  00409E  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7091  0040A0  6F02               	movwf	(_poligono_ext+2)& (0+255),b
  7092  0040A2  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7093  0040A4  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7094  0040A6  6F03               	movwf	(_poligono_ext+3)& (0+255),b
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7098  0040A8  0E69               	movlw	low (_fence_diff_lat+20)
  7099  0040AA  6E24               	movwf	convert_to_int@p_buff^0,c
  7100  0040AC  0E61               	movlw	high (_fence_diff_lat+20)
  7101  0040AE  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7102  0040B0  ECC0  F02C         	call	_convert_to_int	;wreg free
  7103  0040B4  5036               	movf	diferenca@valor_lat^0,w,c
  7104  0040B6  5C24               	subwf	?_convert_to_int^0,w,c
  7105  0040B8  0101               	movlb	1	; () banked
  7106  0040BA  6F08               	movwf	(_poligono_ext+8)& (0+255),b
  7107  0040BC  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7108  0040BE  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7109  0040C0  6F09               	movwf	(_poligono_ext+9)& (0+255),b
  7110  0040C2  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7111  0040C4  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7112  0040C6  6F0A               	movwf	(_poligono_ext+10)& (0+255),b
  7113  0040C8  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7114  0040CA  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7115  0040CC  6F0B               	movwf	(_poligono_ext+11)& (0+255),b
  7116                           
  7117                           ;fence.c: 157: break;
  7118  0040CE  0012               	return	
  7119  0040D0                     l12092:
  7120                           
  7121                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7122  0040D0  ECE8  F027         	call	_convert_to_int_point_long	;wreg free
  7123  0040D4  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7124  0040D8  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7125  0040DC  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7126  0040E0  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7127                           
  7128                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7129  0040E4  0E29               	movlw	low _fence_diff_long
  7130  0040E6  6E24               	movwf	convert_to_int@p_buff^0,c
  7131  0040E8  0E61               	movlw	high _fence_diff_long
  7132  0040EA  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7133  0040EC  ECC0  F02C         	call	_convert_to_int	;wreg free
  7134  0040F0  503A               	movf	diferenca@valor_long^0,w,c
  7135  0040F2  5C24               	subwf	?_convert_to_int^0,w,c
  7136  0040F4  0101               	movlb	1	; () banked
  7137  0040F6  6F04               	movwf	(_poligono_ext+4)& (0+255),b
  7138  0040F8  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7139  0040FA  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7140  0040FC  6F05               	movwf	(_poligono_ext+5)& (0+255),b
  7141  0040FE  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7142  004100  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7143  004102  6F06               	movwf	(_poligono_ext+6)& (0+255),b
  7144  004104  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7145  004106  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7146  004108  6F07               	movwf	(_poligono_ext+7)& (0+255),b
  7147                           
  7148                           ; BSR set to: 1
  7149                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7150  00410A  0E3F               	movlw	low (_fence_diff_long+22)
  7151  00410C  6E24               	movwf	convert_to_int@p_buff^0,c
  7152  00410E  0E61               	movlw	high (_fence_diff_long+22)
  7153  004110  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7154  004112  ECC0  F02C         	call	_convert_to_int	;wreg free
  7155  004116  503A               	movf	diferenca@valor_long^0,w,c
  7156  004118  5C24               	subwf	?_convert_to_int^0,w,c
  7157  00411A  0101               	movlb	1	; () banked
  7158  00411C  6F0C               	movwf	(_poligono_ext+12)& (0+255),b
  7159  00411E  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7160  004120  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7161  004122  6F0D               	movwf	(_poligono_ext+13)& (0+255),b
  7162  004124  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7163  004126  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7164  004128  6F0E               	movwf	(_poligono_ext+14)& (0+255),b
  7165  00412A  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7166  00412C  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7167  00412E  6F0F               	movwf	(_poligono_ext+15)& (0+255),b
  7168                           
  7169                           ;fence.c: 165: break;
  7170  004130  0012               	return	
  7171  004132                     l12100:
  7172  004132  5035               	movf	diferenca@index^0,w,c
  7173                           
  7174                           ; Switch size 1, requested type "simple"
  7175                           ; Number of cases is 1, Range of values is 1 to 1
  7176                           ; switch strategies available:
  7177                           ; Name         Instructions Cycles
  7178                           ; simple_byte            4     3 (average)
  7179                           ;	Chosen strategy is simple_byte
  7180  004134  0A01               	xorlw	1	; case 1
  7181  004136  B4D8               	btfsc	status,2,c
  7182  004138  D79A               	goto	l12086
  7183  00413A  D7CA               	goto	l12092
  7184  00413C                     __end_of_diferenca:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _convert_to_int_point_long *****************
  7188 ;; Defined at:
  7189 ;;		line 460 in file "bibliotecas/fence.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7194 ;;  p               3    0        PTR unsigned char 
  7195 ;;  i               1   50[COMRAM] unsigned char 
  7196 ;;  j               1   49[COMRAM] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  4   35[COMRAM] unsigned long 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7206 ;;      Params:         4       0       0       0       0       0       0       0       0
  7207 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7209 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7210 ;;Total ram usage:       16 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    4
  7213 ;; This function calls:
  7214 ;;		_atol
  7215 ;; This function is called by:
  7216 ;;		_diferenca
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text41
  7221  004FD0                     __ptext41:
  7222                           	callstack 0
  7223  004FD0                     _convert_to_int_point_long:
  7224                           	callstack 20
  7225                           
  7226                           ;fence.c: 462: unsigned char *p;;;fence.c: 463: unsigned char i, j;;fence.c: 464: unsign
      +                          ed char convert_str_long[10];;fence.c: 467: j = 0;
  7227                           
  7228                           ; BSR set to: 1
  7229                           ;incstack = 0
  7230  004FD0  0E00               	movlw	0
  7231  004FD2  6E32               	movwf	convert_to_int_point_long@j^0,c
  7232                           
  7233                           ;fence.c: 468: for(i=0; i<10;i++)
  7234  004FD4  0E00               	movlw	0
  7235  004FD6  6E33               	movwf	convert_to_int_point_long@i^0,c
  7236  004FD8                     l11606:
  7237                           
  7238                           ;fence.c: 469: {;fence.c: 470: if(dado[i] != '\0')
  7239  004FD8  0E10               	movlw	low _dado
  7240  004FDA  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7241  004FDC  6ED9               	movwf	fsr2l,c
  7242  004FDE  6ADA               	clrf	fsr2h,c
  7243  004FE0  0E01               	movlw	high _dado
  7244  004FE2  22DA               	addwfc	fsr2h,f,c
  7245  004FE4  50DF               	movf	indf2,w,c
  7246  004FE6  B4D8               	btfsc	status,2,c
  7247  004FE8  D00D               	goto	l11612
  7248                           
  7249                           ;fence.c: 471: {;fence.c: 473: convert_str_long[j] = dado[i];
  7250  004FEA  0E10               	movlw	low _dado
  7251  004FEC  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7252  004FEE  6ED9               	movwf	fsr2l,c
  7253  004FF0  6ADA               	clrf	fsr2h,c
  7254  004FF2  0E01               	movlw	high _dado
  7255  004FF4  22DA               	addwfc	fsr2h,f,c
  7256  004FF6  5032               	movf	convert_to_int_point_long@j^0,w,c
  7257  004FF8  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7258  004FFA  6EE1               	movwf	fsr1l,c
  7259  004FFC  6AE2               	clrf	fsr1h,c
  7260  004FFE  CFDF FFE7          	movff	indf2,indf1
  7261                           
  7262                           ;fence.c: 474: j++;
  7263  005002  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7264  005004                     l11612:
  7265  005004  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7266  005006  0E09               	movlw	9
  7267  005008  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7268  00500A  D7E6               	goto	l11606
  7269                           
  7270                           ;fence.c: 475: };fence.c: 476: };fence.c: 479: return (atol(convert_str_long));
  7271  00500C  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7272  00500E  6E16               	movwf	atol@s^0,c
  7273  005010  6A17               	clrf	(atol@s+1)^0,c
  7274  005012  EC3C  F01C         	call	_atol	;wreg free
  7275  005016  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7276  00501A  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7277  00501E  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7278  005022  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7279  005026  0012               	return		;funcret
  7280  005028                     __end_of_convert_to_int_point_long:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function _convert_to_int_point_lat *****************
  7284 ;; Defined at:
  7285 ;;		line 433 in file "bibliotecas/fence.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;		None
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7290 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7291 ;;		 -> NULL(0), 
  7292 ;;  i               1   51[COMRAM] unsigned char 
  7293 ;;  j               1   50[COMRAM] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  4   35[COMRAM] long 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7303 ;;      Params:         4       0       0       0       0       0       0       0       0
  7304 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7306 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7307 ;;Total ram usage:       17 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    4
  7310 ;; This function calls:
  7311 ;;		_atol
  7312 ;; This function is called by:
  7313 ;;		_diferenca
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text42
  7318  005028                     __ptext42:
  7319                           	callstack 0
  7320  005028                     _convert_to_int_point_lat:
  7321                           	callstack 20
  7322                           
  7323                           ;fence.c: 436: unsigned char convert_str_lat[9];;fence.c: 438: unsigned char i, j;;fence
      +                          .c: 440: j= 0;
  7324                           
  7325                           ;incstack = 0
  7326  005028  0E00               	movlw	0
  7327  00502A  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7328                           
  7329                           ;fence.c: 441: for(i=0; i<10;i++)
  7330  00502C  0E00               	movlw	0
  7331  00502E  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7332  005030                     l11580:
  7333                           
  7334                           ;fence.c: 442: {;fence.c: 443: if(dado[i] != '\0')
  7335  005030  0E10               	movlw	low _dado
  7336  005032  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7337  005034  6ED9               	movwf	fsr2l,c
  7338  005036  6ADA               	clrf	fsr2h,c
  7339  005038  0E01               	movlw	high _dado
  7340  00503A  22DA               	addwfc	fsr2h,f,c
  7341  00503C  50DF               	movf	indf2,w,c
  7342  00503E  B4D8               	btfsc	status,2,c
  7343  005040  D00D               	goto	l11586
  7344                           
  7345                           ;fence.c: 444: {;fence.c: 446: convert_str_lat[j] = dado[i];
  7346  005042  0E10               	movlw	low _dado
  7347  005044  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7348  005046  6ED9               	movwf	fsr2l,c
  7349  005048  6ADA               	clrf	fsr2h,c
  7350  00504A  0E01               	movlw	high _dado
  7351  00504C  22DA               	addwfc	fsr2h,f,c
  7352  00504E  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7353  005050  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7354  005052  6EE1               	movwf	fsr1l,c
  7355  005054  6AE2               	clrf	fsr1h,c
  7356  005056  CFDF FFE7          	movff	indf2,indf1
  7357                           
  7358                           ;fence.c: 447: j++;
  7359  00505A  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7360  00505C                     l11586:
  7361  00505C  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7362  00505E  0E09               	movlw	9
  7363  005060  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7364  005062  D7E6               	goto	l11580
  7365                           
  7366                           ;fence.c: 448: };fence.c: 449: };fence.c: 451: return (atol(convert_str_lat));
  7367  005064  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7368  005066  6E16               	movwf	atol@s^0,c
  7369  005068  6A17               	clrf	(atol@s+1)^0,c
  7370  00506A  EC3C  F01C         	call	_atol	;wreg free
  7371  00506E  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7372  005072  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7373  005076  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7374  00507A  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7375  00507E  0012               	return		;funcret
  7376  005080                     __end_of_convert_to_int_point_lat:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function _convert_to_int *****************
  7380 ;; Defined at:
  7381 ;;		line 425 in file "bibliotecas/fence.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7384 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;		None
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  4   35[COMRAM] long 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7396 ;;      Params:         4       0       0       0       0       0       0       0       0
  7397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7399 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7400 ;;Total ram usage:        4 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    4
  7403 ;; This function calls:
  7404 ;;		_atol
  7405 ;; This function is called by:
  7406 ;;		_diferenca
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text43
  7411  005980                     __ptext43:
  7412                           	callstack 0
  7413  005980                     _convert_to_int:
  7414                           	callstack 20
  7415                           
  7416                           ;fence.c: 428: p_buff++;
  7417                           
  7418                           ;incstack = 0
  7419  005980  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7420  005982  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7421                           
  7422                           ;fence.c: 429: return atol(p_buff);
  7423  005984  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7424  005988  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7425  00598C  EC3C  F01C         	call	_atol	;wreg free
  7426  005990  C016  F024         	movff	?_atol,?_convert_to_int
  7427  005994  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7428  005998  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7429  00599C  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7430  0059A0  0012               	return		;funcret
  7431  0059A2                     __end_of_convert_to_int:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _atol *****************
  7435 ;; Defined at:
  7436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7439 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  a               4   30[COMRAM] long 
  7442 ;;  c               1   34[COMRAM] unsigned char 
  7443 ;;  sign            1   29[COMRAM] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  4   21[COMRAM] long 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7453 ;;      Params:         4       0       0       0       0       0       0       0       0
  7454 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7455 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7456 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7457 ;;Total ram usage:       14 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    3
  7460 ;; This function calls:
  7461 ;;		___lmul
  7462 ;;		_isdigit
  7463 ;; This function is called by:
  7464 ;;		_convert_to_int
  7465 ;;		_convert_to_int_point_lat
  7466 ;;		_convert_to_int_point_long
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text44
  7471  003878                     __ptext44:
  7472                           	callstack 0
  7473  003878                     _atol:
  7474                           	callstack 20
  7475                           
  7476                           ;incstack = 0
  7477  003878  C016  FFF6         	movff	atol@s,tblptrl
  7478  00387C  C017  FFF7         	movff	atol@s+1,tblptrh
  7479  003880  6AF8               	clrf	tblptru,c
  7480  003882  0E07               	movlw	(high __ramtop+-1)
  7481  003884  64F7               	cpfsgt	tblptrh,c
  7482  003886  D003               	bra	u12777
  7483  003888  0008               	tblrd		*
  7484  00388A  50F5               	movf	tablat,w,c
  7485  00388C  D005               	bra	u12770
  7486  00388E                     u12777:
  7487  00388E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7488  003892  CFF7 FFE2          	movff	tblptrh,fsr1h
  7489  003896  50E7               	movf	indf1,w,c
  7490  003898                     u12770:
  7491  003898  6E23               	movwf	atol@c^0,c
  7492  00389A  4A16               	infsnz	atol@s^0,f,c
  7493  00389C  2A17               	incf	(atol@s+1)^0,f,c
  7494  00389E  0E20               	movlw	32
  7495  0038A0  1823               	xorwf	atol@c^0,w,c
  7496  0038A2  B4D8               	btfsc	status,2,c
  7497  0038A4  D7E9               	goto	_atol
  7498  0038A6  0E09               	movlw	9
  7499  0038A8  1823               	xorwf	atol@c^0,w,c
  7500  0038AA  B4D8               	btfsc	status,2,c
  7501  0038AC  D7E5               	goto	_atol
  7502  0038AE  0E00               	movlw	0
  7503  0038B0  6E1F               	movwf	atol@a^0,c
  7504  0038B2  0E00               	movlw	0
  7505  0038B4  6E20               	movwf	(atol@a+1)^0,c
  7506  0038B6  0E00               	movlw	0
  7507  0038B8  6E21               	movwf	(atol@a+2)^0,c
  7508  0038BA  0E00               	movlw	0
  7509  0038BC  6E22               	movwf	(atol@a+3)^0,c
  7510  0038BE  0E00               	movlw	0
  7511  0038C0  6E1E               	movwf	atol@sign^0,c
  7512  0038C2  0E2D               	movlw	45
  7513  0038C4  1823               	xorwf	atol@c^0,w,c
  7514  0038C6  A4D8               	btfss	status,2,c
  7515  0038C8  D015               	goto	l11310
  7516  0038CA  2A1E               	incf	atol@sign^0,f,c
  7517  0038CC                     l11306:
  7518  0038CC  C016  FFF6         	movff	atol@s,tblptrl
  7519  0038D0  C017  FFF7         	movff	atol@s+1,tblptrh
  7520  0038D4  6AF8               	clrf	tblptru,c
  7521  0038D6  0E07               	movlw	(high __ramtop+-1)
  7522  0038D8  64F7               	cpfsgt	tblptrh,c
  7523  0038DA  D003               	bra	u12817
  7524  0038DC  0008               	tblrd		*
  7525  0038DE  50F5               	movf	tablat,w,c
  7526  0038E0  D005               	bra	u12810
  7527  0038E2                     u12817:
  7528  0038E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7529  0038E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7530  0038EA  50E7               	movf	indf1,w,c
  7531  0038EC                     u12810:
  7532  0038EC  6E23               	movwf	atol@c^0,c
  7533  0038EE  4A16               	infsnz	atol@s^0,f,c
  7534  0038F0  2A17               	incf	(atol@s+1)^0,f,c
  7535  0038F2  D028               	goto	l11322
  7536  0038F4                     l11310:
  7537  0038F4  0E2B               	movlw	43
  7538  0038F6  1823               	xorwf	atol@c^0,w,c
  7539  0038F8  B4D8               	btfsc	status,2,c
  7540  0038FA  D7E8               	goto	l11306
  7541  0038FC  D023               	goto	l11322
  7542  0038FE                     l11316:
  7543  0038FE  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7544  003902  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7545  003906  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7546  00390A  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7547  00390E  0E0A               	movlw	10
  7548  003910  6E0E               	movwf	___lmul@multiplicand^0,c
  7549  003912  0E00               	movlw	0
  7550  003914  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7551  003916  0E00               	movlw	0
  7552  003918  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7553  00391A  0E00               	movlw	0
  7554  00391C  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7555  00391E  EC6C  F028         	call	___lmul	;wreg free
  7556  003922  C023  F01A         	movff	atol@c,??_atol
  7557  003926  0ED0               	movlw	208
  7558  003928  261A               	addwf	??_atol^0,f,c
  7559  00392A  501A               	movf	??_atol^0,w,c
  7560  00392C  240A               	addwf	?___lmul^0,w,c
  7561  00392E  6E1F               	movwf	atol@a^0,c
  7562  003930  0E00               	movlw	0
  7563  003932  200B               	addwfc	(?___lmul+1)^0,w,c
  7564  003934  6E20               	movwf	(atol@a+1)^0,c
  7565  003936  0E00               	movlw	0
  7566  003938  200C               	addwfc	(?___lmul+2)^0,w,c
  7567  00393A  6E21               	movwf	(atol@a+2)^0,c
  7568  00393C  0E00               	movlw	0
  7569  00393E  200D               	addwfc	(?___lmul+3)^0,w,c
  7570  003940  6E22               	movwf	(atol@a+3)^0,c
  7571  003942  D7C4               	goto	l11306
  7572  003944                     l11322:
  7573  003944  5023               	movf	atol@c^0,w,c
  7574  003946  EC76  F02D         	call	_isdigit
  7575  00394A  B0D8               	btfsc	status,0,c
  7576  00394C  D7D8               	goto	l11316
  7577  00394E  501E               	movf	atol@sign^0,w,c
  7578  003950  B4D8               	btfsc	status,2,c
  7579  003952  D01A               	goto	l2438
  7580  003954  C01F  F01A         	movff	atol@a,??_atol
  7581  003958  C020  F01B         	movff	atol@a+1,??_atol+1
  7582  00395C  C021  F01C         	movff	atol@a+2,??_atol+2
  7583  003960  C022  F01D         	movff	atol@a+3,??_atol+3
  7584  003964  1E1A               	comf	??_atol^0,f,c
  7585  003966  1E1B               	comf	(??_atol+1)^0,f,c
  7586  003968  1E1C               	comf	(??_atol+2)^0,f,c
  7587  00396A  1E1D               	comf	(??_atol+3)^0,f,c
  7588  00396C  2A1A               	incf	??_atol^0,f,c
  7589  00396E  0E00               	movlw	0
  7590  003970  221B               	addwfc	(??_atol+1)^0,f,c
  7591  003972  221C               	addwfc	(??_atol+2)^0,f,c
  7592  003974  221D               	addwfc	(??_atol+3)^0,f,c
  7593  003976  C01A  F016         	movff	??_atol,?_atol
  7594  00397A  C01B  F017         	movff	??_atol+1,?_atol+1
  7595  00397E  C01C  F018         	movff	??_atol+2,?_atol+2
  7596  003982  C01D  F019         	movff	??_atol+3,?_atol+3
  7597  003986  0012               	return	
  7598  003988                     l2438:
  7599  003988  C01F  F016         	movff	atol@a,?_atol
  7600  00398C  C020  F017         	movff	atol@a+1,?_atol+1
  7601  003990  C021  F018         	movff	atol@a+2,?_atol+2
  7602  003994  C022  F019         	movff	atol@a+3,?_atol+3
  7603  003998  0012               	return		;funcret
  7604  00399A                     __end_of_atol:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _itoa *****************
  7608 ;; Defined at:
  7609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7612 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7613 ;;  val             2   27[COMRAM] int 
  7614 ;;  base            2   29[COMRAM] int 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  cp              2    0        PTR unsigned char 
  7617 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2   25[COMRAM] PTR unsigned char 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 3F/2
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7627 ;;      Params:         6       0       0       0       0       0       0       0       0
  7628 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7630 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7631 ;;Total ram usage:        8 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    4
  7634 ;; This function calls:
  7635 ;;		_utoa
  7636 ;; This function is called by:
  7637 ;;		_disparo_gravacao
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text45
  7642  0055EA                     __ptext45:
  7643                           	callstack 0
  7644  0055EA                     _itoa:
  7645                           	callstack 24
  7646                           
  7647                           ; BSR set to: 2
  7648                           
  7649                           ;incstack = 0
  7650  0055EA  AE1D               	btfss	(itoa@val+1)^0,7,c
  7651  0055EC  D00C               	goto	l13758
  7652                           
  7653                           ; BSR set to: 2
  7654  0055EE  C01A  FFD9         	movff	itoa@buf,fsr2l
  7655  0055F2  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  7656  0055F6  0E2D               	movlw	45
  7657  0055F8  6EDF               	movwf	indf2,c
  7658                           
  7659                           ; BSR set to: 2
  7660  0055FA  4A1A               	infsnz	itoa@buf^0,f,c
  7661  0055FC  2A1B               	incf	(itoa@buf+1)^0,f,c
  7662                           
  7663                           ; BSR set to: 2
  7664  0055FE  6C1C               	negf	itoa@val^0,c
  7665  005600  1E1D               	comf	(itoa@val+1)^0,f,c
  7666  005602  B0D8               	btfsc	status,0,c
  7667  005604  2A1D               	incf	(itoa@val+1)^0,f,c
  7668  005606                     l13758:
  7669                           
  7670                           ; BSR set to: 2
  7671  005606  C01A  F011         	movff	itoa@buf,utoa@buf
  7672  00560A  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  7673  00560E  C01C  F013         	movff	itoa@val,utoa@val
  7674  005612  C01D  F014         	movff	itoa@val+1,utoa@val+1
  7675  005616  C01E  F015         	movff	itoa@base,utoa@base
  7676  00561A  C01F  F016         	movff	itoa@base+1,utoa@base+1
  7677  00561E  EC5F  F022         	call	_utoa	;wreg free
  7678  005622  0012               	return		;funcret
  7679  005624                     __end_of_itoa:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _utoa *****************
  7683 ;; Defined at:
  7684 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7687 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7688 ;;  val             2   18[COMRAM] unsigned int 
  7689 ;;  base            2   20[COMRAM] int 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  v               2   22[COMRAM] unsigned int 
  7692 ;;  c               1   24[COMRAM] unsigned char 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  2   16[COMRAM] PTR unsigned char 
  7695 ;; Registers used:
  7696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 3F/2
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7702 ;;      Params:         6       0       0       0       0       0       0       0       0
  7703 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7705 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7706 ;;Total ram usage:        9 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    3
  7709 ;; This function calls:
  7710 ;;		___lwdiv
  7711 ;;		___lwmod
  7712 ;; This function is called by:
  7713 ;;		_itoa
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text46
  7718  0044BE                     __ptext46:
  7719                           	callstack 0
  7720  0044BE                     _utoa:
  7721                           	callstack 24
  7722                           
  7723                           ; BSR set to: 2
  7724                           
  7725                           ;incstack = 0
  7726  0044BE  C013  F017         	movff	utoa@val,utoa@v
  7727  0044C2  C014  F018         	movff	utoa@val+1,utoa@v+1
  7728  0044C6                     l13722:
  7729  0044C6  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  7730  0044CA  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  7731  0044CE  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7732  0044D2  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7733  0044D6  EC97  F028         	call	___lwdiv	;wreg free
  7734  0044DA  C00A  F017         	movff	?___lwdiv,utoa@v
  7735  0044DE  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  7736  0044E2  4A11               	infsnz	utoa@buf^0,f,c
  7737  0044E4  2A12               	incf	(utoa@buf+1)^0,f,c
  7738  0044E6  5017               	movf	utoa@v^0,w,c
  7739  0044E8  1018               	iorwf	(utoa@v+1)^0,w,c
  7740  0044EA  A4D8               	btfss	status,2,c
  7741  0044EC  D7EC               	goto	l13722
  7742  0044EE  C011  FFD9         	movff	utoa@buf,fsr2l
  7743  0044F2  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7744  0044F6  0E00               	movlw	0
  7745  0044F8  6EDF               	movwf	indf2,c
  7746  0044FA  0611               	decf	utoa@buf^0,f,c
  7747  0044FC  A0D8               	btfss	status,0,c
  7748  0044FE  0612               	decf	(utoa@buf+1)^0,f,c
  7749  004500                     l13732:
  7750  004500  C013  F00A         	movff	utoa@val,___lwmod@dividend
  7751  004504  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  7752  004508  C015  F00C         	movff	utoa@base,___lwmod@divisor
  7753  00450C  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  7754  004510  EC56  F02A         	call	___lwmod	;wreg free
  7755  004514  500A               	movf	?___lwmod^0,w,c
  7756  004516  6E19               	movwf	utoa@c^0,c
  7757  004518  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  7758  00451C  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  7759  004520  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7760  004524  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7761  004528  EC97  F028         	call	___lwdiv	;wreg free
  7762  00452C  C00A  F013         	movff	?___lwdiv,utoa@val
  7763  004530  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  7764  004534  0E09               	movlw	9
  7765  004536  6419               	cpfsgt	utoa@c^0,c
  7766  004538  D002               	goto	l2456
  7767  00453A  0E07               	movlw	7
  7768  00453C  2619               	addwf	utoa@c^0,f,c
  7769  00453E                     l2456:
  7770  00453E  0E30               	movlw	48
  7771  004540  2619               	addwf	utoa@c^0,f,c
  7772  004542  C011  FFD9         	movff	utoa@buf,fsr2l
  7773  004546  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7774  00454A  C019  FFDF         	movff	utoa@c,indf2
  7775  00454E  0611               	decf	utoa@buf^0,f,c
  7776  004550  A0D8               	btfss	status,0,c
  7777  004552  0612               	decf	(utoa@buf+1)^0,f,c
  7778  004554  5013               	movf	utoa@val^0,w,c
  7779  004556  1014               	iorwf	(utoa@val+1)^0,w,c
  7780  004558  A4D8               	btfss	status,2,c
  7781  00455A  D7D2               	goto	l13732
  7782                           
  7783                           ;	Return value of _utoa is never used
  7784  00455C  4A11               	infsnz	utoa@buf^0,f,c
  7785  00455E  2A12               	incf	(utoa@buf+1)^0,f,c
  7786  004560  0012               	return		;funcret
  7787  004562                     __end_of_utoa:
  7788                           	callstack 0
  7789                           
  7790 ;; *************** function ___lwmod *****************
  7791 ;; Defined at:
  7792 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  dividend        2    9[COMRAM] unsigned int 
  7795 ;;  divisor         2   11[COMRAM] unsigned int 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  counter         1   13[COMRAM] unsigned char 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  2    9[COMRAM] unsigned int 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, status,0
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/2
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7807 ;;      Params:         4       0       0       0       0       0       0       0       0
  7808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7810 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7811 ;;Total ram usage:        5 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    2
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_utoa
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text47
  7822  0054AC                     __ptext47:
  7823                           	callstack 0
  7824  0054AC                     ___lwmod:
  7825                           	callstack 24
  7826                           
  7827                           ;incstack = 0
  7828  0054AC  500C               	movf	___lwmod@divisor^0,w,c
  7829  0054AE  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  7830  0054B0  B4D8               	btfsc	status,2,c
  7831  0054B2  D018               	goto	l2236
  7832  0054B4  0E01               	movlw	1
  7833  0054B6  6E0E               	movwf	___lwmod@counter^0,c
  7834  0054B8  D004               	goto	l12710
  7835  0054BA                     l12708:
  7836  0054BA  90D8               	bcf	status,0,c
  7837  0054BC  360C               	rlcf	___lwmod@divisor^0,f,c
  7838  0054BE  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  7839  0054C0  2A0E               	incf	___lwmod@counter^0,f,c
  7840  0054C2                     l12710:
  7841  0054C2  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  7842  0054C4  D7FA               	goto	l12708
  7843  0054C6                     u15050:
  7844  0054C6  500C               	movf	___lwmod@divisor^0,w,c
  7845  0054C8  5C0A               	subwf	___lwmod@dividend^0,w,c
  7846  0054CA  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7847  0054CC  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  7848  0054CE  A0D8               	btfss	status,0,c
  7849  0054D0  D004               	goto	l12716
  7850  0054D2  500C               	movf	___lwmod@divisor^0,w,c
  7851  0054D4  5E0A               	subwf	___lwmod@dividend^0,f,c
  7852  0054D6  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7853  0054D8  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  7854  0054DA                     l12716:
  7855  0054DA  90D8               	bcf	status,0,c
  7856  0054DC  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  7857  0054DE  320C               	rrcf	___lwmod@divisor^0,f,c
  7858  0054E0  2E0E               	decfsz	___lwmod@counter^0,f,c
  7859  0054E2  D7F1               	goto	u15050
  7860  0054E4                     l2236:
  7861  0054E4  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  7862  0054E8  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  7863  0054EC  0012               	return		;funcret
  7864  0054EE                     __end_of___lwmod:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function ___lwdiv *****************
  7868 ;; Defined at:
  7869 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  dividend        2    9[COMRAM] unsigned int 
  7872 ;;  divisor         2   11[COMRAM] unsigned int 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  quotient        2   14[COMRAM] unsigned int 
  7875 ;;  counter         1   13[COMRAM] unsigned char 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  2    9[COMRAM] unsigned int 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/2
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7885 ;;      Params:         4       0       0       0       0       0       0       0       0
  7886 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7888 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7889 ;;Total ram usage:        7 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    2
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_utoa
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text48
  7900  00512E                     __ptext48:
  7901                           	callstack 0
  7902  00512E                     ___lwdiv:
  7903                           	callstack 24
  7904                           
  7905                           ;incstack = 0
  7906  00512E  0E00               	movlw	0
  7907  005130  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7908  005132  0E00               	movlw	0
  7909  005134  6E0F               	movwf	___lwdiv@quotient^0,c
  7910  005136  500C               	movf	___lwdiv@divisor^0,w,c
  7911  005138  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7912  00513A  B4D8               	btfsc	status,2,c
  7913  00513C  D01C               	goto	l2226
  7914  00513E  0E01               	movlw	1
  7915  005140  6E0E               	movwf	___lwdiv@counter^0,c
  7916  005142  D004               	goto	l12690
  7917  005144                     l12688:
  7918  005144  90D8               	bcf	status,0,c
  7919  005146  360C               	rlcf	___lwdiv@divisor^0,f,c
  7920  005148  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7921  00514A  2A0E               	incf	___lwdiv@counter^0,f,c
  7922  00514C                     l12690:
  7923  00514C  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  7924  00514E  D7FA               	goto	l12688
  7925  005150                     u15020:
  7926  005150  90D8               	bcf	status,0,c
  7927  005152  360F               	rlcf	___lwdiv@quotient^0,f,c
  7928  005154  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7929  005156  500C               	movf	___lwdiv@divisor^0,w,c
  7930  005158  5C0A               	subwf	___lwdiv@dividend^0,w,c
  7931  00515A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7932  00515C  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7933  00515E  A0D8               	btfss	status,0,c
  7934  005160  D005               	goto	l12700
  7935  005162  500C               	movf	___lwdiv@divisor^0,w,c
  7936  005164  5E0A               	subwf	___lwdiv@dividend^0,f,c
  7937  005166  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7938  005168  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7939  00516A  800F               	bsf	___lwdiv@quotient^0,0,c
  7940  00516C                     l12700:
  7941  00516C  90D8               	bcf	status,0,c
  7942  00516E  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7943  005170  320C               	rrcf	___lwdiv@divisor^0,f,c
  7944  005172  2E0E               	decfsz	___lwdiv@counter^0,f,c
  7945  005174  D7ED               	goto	u15020
  7946  005176                     l2226:
  7947  005176  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  7948  00517A  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7949  00517E  0012               	return		;funcret
  7950  005180                     __end_of___lwdiv:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function _grava_sd *****************
  7954 ;; Defined at:
  7955 ;;		line 534 in file "main.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;		None
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/1
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0
  7970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7973 ;;Total ram usage:        0 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:   15
  7976 ;; This function calls:
  7977 ;;		_desliga_SPI
  7978 ;;		_desliga_uart
  7979 ;;		_escrita_sdcard
  7980 ;;		_inicializa_SPI
  7981 ;;		_inicializa_uart
  7982 ;; This function is called by:
  7983 ;;		_disparo_gravacao
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text49
  7988  005B40                     __ptext49:
  7989                           	callstack 0
  7990  005B40                     _grava_sd:
  7991                           	callstack 13
  7992                           
  7993                           ;main.c: 536: PORTBbits.RB3 = 0;
  7994                           
  7995                           ;incstack = 0
  7996  005B40  9681               	bcf	129,3,c	;volatile
  7997                           
  7998                           ;main.c: 537: desliga_uart();
  7999  005B42  ECC1  F02D         	call	_desliga_uart	;wreg free
  8000                           
  8001                           ;main.c: 538: inicializa_SPI();
  8002  005B46  EC47  F02D         	call	_inicializa_SPI	;wreg free
  8003                           
  8004                           ;main.c: 539: escrita_sdcard();
  8005  005B4A  EC02  F01B         	call	_escrita_sdcard	;wreg free
  8006                           
  8007                           ;main.c: 540: desliga_SPI();
  8008  005B4E  ECE3  F02D         	call	_desliga_SPI	;wreg free
  8009                           
  8010                           ;main.c: 541: inicializa_uart();
  8011  005B52  ECD1  F02C         	call	_inicializa_uart	;wreg free
  8012                           
  8013                           ;main.c: 542: PORTBbits.RB3 = 1;
  8014  005B56  8681               	bsf	129,3,c	;volatile
  8015  005B58  0012               	return		;funcret
  8016  005B5A                     __end_of_grava_sd:
  8017                           	callstack 0
  8018                           
  8019 ;; *************** function _inicializa_uart *****************
  8020 ;; Defined at:
  8021 ;;		line 206 in file "bibliotecas/uart.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;		None
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;		None
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/1
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8035 ;;      Params:         0       0       0       0       0       0       0       0       0
  8036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8038 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8039 ;;Total ram usage:        0 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; Hardware stack levels required when called:    4
  8042 ;; This function calls:
  8043 ;;		_configura_baudrate_uart
  8044 ;; This function is called by:
  8045 ;;		_main
  8046 ;;		_grava_sd
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text50
  8051  0059A2                     __ptext50:
  8052                           	callstack 0
  8053  0059A2                     _inicializa_uart:
  8054                           	callstack 26
  8055                           
  8056                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8057                           
  8058                           ;incstack = 0
  8059  0059A2  9C94               	bcf	148,6,c	;volatile
  8060                           
  8061                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8062  0059A4  9E94               	bcf	148,7,c	;volatile
  8063                           
  8064                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8065  0059A6  0E80               	movlw	128
  8066  0059A8  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8067  0059AA  0E25               	movlw	37
  8068  0059AC  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8069  0059AE  0E00               	movlw	0
  8070  0059B0  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8071  0059B2  0E00               	movlw	0
  8072  0059B4  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8073  0059B6  ECE2  F01D         	call	_configura_baudrate_uart	;wreg free
  8074                           
  8075                           ;uart.c: 213: TXSTA = 0x20;
  8076  0059BA  0E20               	movlw	32
  8077  0059BC  6EAC               	movwf	172,c	;volatile
  8078                           
  8079                           ;uart.c: 214: RCSTA = 0x90;
  8080  0059BE  0E90               	movlw	144
  8081  0059C0  6EAB               	movwf	171,c	;volatile
  8082  0059C2  0012               	return		;funcret
  8083  0059C4                     __end_of_inicializa_uart:
  8084                           	callstack 0
  8085                           
  8086 ;; *************** function _configura_baudrate_uart *****************
  8087 ;; Defined at:
  8088 ;;		line 50 in file "bibliotecas/uart.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  baudrate        4   23[COMRAM] const long 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  x               2   35[COMRAM] unsigned int 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      unsigned char 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/1
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8102 ;;      Params:         4       0       0       0       0       0       0       0       0
  8103 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8104 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8105 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8106 ;;Total ram usage:       14 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    3
  8109 ;; This function calls:
  8110 ;;		___aldiv
  8111 ;; This function is called by:
  8112 ;;		_inicializa_uart
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text51
  8117  003BC4                     __ptext51:
  8118                           	callstack 0
  8119  003BC4                     _configura_baudrate_uart:
  8120                           	callstack 26
  8121                           
  8122                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8123                           
  8124                           ;incstack = 0
  8125  003BC4  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8126  003BC8  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8127  003BCC  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8128  003BD0  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8129  003BD4  0E06               	movlw	6
  8130  003BD6                     u14955:
  8131  003BD6  90D8               	bcf	status,0,c
  8132  003BD8  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8133  003BDA  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8134  003BDC  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8135  003BDE  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8136  003BE0  2EE8               	decfsz	wreg,f,c
  8137  003BE2  D7F9               	goto	u14955
  8138  003BE4  501C               	movf	??_configura_baudrate_uart^0,w,c
  8139  003BE6  0800               	sublw	0
  8140  003BE8  6E0A               	movwf	___aldiv@dividend^0,c
  8141  003BEA  0E6C               	movlw	108
  8142  003BEC  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8143  003BEE  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8144  003BF0  0EDC               	movlw	220
  8145  003BF2  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8146  003BF4  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8147  003BF6  0E02               	movlw	2
  8148  003BF8  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8149  003BFA  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8150  003BFC  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8151  003C00  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8152  003C04  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8153  003C08  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8154  003C0C  0E06               	movlw	6
  8155  003C0E                     u14965:
  8156  003C0E  90D8               	bcf	status,0,c
  8157  003C10  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8158  003C12  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8159  003C14  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8160  003C16  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8161  003C18  2EE8               	decfsz	wreg,f,c
  8162  003C1A  D7F9               	goto	u14965
  8163  003C1C  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8164  003C20  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8165  003C24  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8166  003C28  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8167  003C2C  EC9E  F020         	call	___aldiv	;wreg free
  8168  003C30  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8169  003C34  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8170                           
  8171                           ;uart.c: 55: if(x > 255)
  8172  003C38  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8173  003C3A  A0D8               	btfss	status,0,c
  8174  003C3C  D03B               	goto	l12678
  8175                           
  8176                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8177  003C3E  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8178  003C42  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8179  003C46  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8180  003C4A  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8181  003C4E  0E04               	movlw	4
  8182  003C50                     u14985:
  8183  003C50  90D8               	bcf	status,0,c
  8184  003C52  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8185  003C54  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8186  003C56  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8187  003C58  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8188  003C5A  2EE8               	decfsz	wreg,f,c
  8189  003C5C  D7F9               	goto	u14985
  8190  003C5E  501C               	movf	??_configura_baudrate_uart^0,w,c
  8191  003C60  0800               	sublw	0
  8192  003C62  6E0A               	movwf	___aldiv@dividend^0,c
  8193  003C64  0E6C               	movlw	108
  8194  003C66  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8195  003C68  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8196  003C6A  0EDC               	movlw	220
  8197  003C6C  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8198  003C6E  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8199  003C70  0E02               	movlw	2
  8200  003C72  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8201  003C74  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8202  003C76  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8203  003C7A  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8204  003C7E  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8205  003C82  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8206  003C86  0E04               	movlw	4
  8207  003C88                     u14995:
  8208  003C88  90D8               	bcf	status,0,c
  8209  003C8A  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8210  003C8C  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8211  003C8E  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8212  003C90  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8213  003C92  2EE8               	decfsz	wreg,f,c
  8214  003C94  D7F9               	goto	u14995
  8215  003C96  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8216  003C9A  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8217  003C9E  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8218  003CA2  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8219  003CA6  EC9E  F020         	call	___aldiv	;wreg free
  8220  003CAA  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8221  003CAE  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8222                           
  8223                           ;uart.c: 58: BRGH = 1;
  8224  003CB2  84AC               	bsf	4012,2,c	;volatile
  8225  003CB4                     l12678:
  8226                           
  8227                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8228  003CB4  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8229  003CB6  B0D8               	btfsc	status,0,c
  8230  003CB8  0012               	return	
  8231                           
  8232                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8233  003CBA  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8234                           
  8235                           ;uart.c: 63: SYNC = 0;
  8236  003CBE  98AC               	bcf	4012,4,c	;volatile
  8237                           
  8238                           ;uart.c: 64: SPEN = 1;
  8239  003CC0  8EAB               	bsf	4011,7,c	;volatile
  8240                           
  8241                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8242  003CC2  8E94               	bsf	148,7,c	;volatile
  8243                           
  8244                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8245  003CC4  9C94               	bcf	148,6,c	;volatile
  8246                           
  8247                           ;uart.c: 67: CREN = 1;
  8248  003CC6  88AB               	bsf	4011,4,c	;volatile
  8249                           
  8250                           ;uart.c: 68: TXEN = 1;
  8251  003CC8  8AAC               	bsf	4012,5,c	;volatile
  8252                           
  8253                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8254  003CCA  0012               	return		;funcret
  8255  003CCC                     __end_of_configura_baudrate_uart:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function ___aldiv *****************
  8259 ;; Defined at:
  8260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  dividend        4    9[COMRAM] long 
  8263 ;;  divisor         4   13[COMRAM] long 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  quotient        4   19[COMRAM] long 
  8266 ;;  sign            1   18[COMRAM] unsigned char 
  8267 ;;  counter         1   17[COMRAM] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  4    9[COMRAM] long 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/1
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8277 ;;      Params:         8       0       0       0       0       0       0       0       0
  8278 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8280 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8281 ;;Total ram usage:       14 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    2
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_configura_baudrate_uart
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text52
  8292  00413C                     __ptext52:
  8293                           	callstack 0
  8294  00413C                     ___aldiv:
  8295                           	callstack 26
  8296                           
  8297                           ;incstack = 0
  8298  00413C  0E00               	movlw	0
  8299  00413E  6E13               	movwf	___aldiv@sign^0,c
  8300  004140  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8301  004142  D00A               	goto	l12110
  8302  004144  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8303  004146  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8304  004148  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8305  00414A  6C0E               	negf	___aldiv@divisor^0,c
  8306  00414C  0E00               	movlw	0
  8307  00414E  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8308  004150  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8309  004152  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8310  004154  0E01               	movlw	1
  8311  004156  6E13               	movwf	___aldiv@sign^0,c
  8312  004158                     l12110:
  8313  004158  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8314  00415A  D00A               	goto	l12116
  8315  00415C  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8316  00415E  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8317  004160  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8318  004162  6C0A               	negf	___aldiv@dividend^0,c
  8319  004164  0E00               	movlw	0
  8320  004166  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8321  004168  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8322  00416A  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8323  00416C  0E01               	movlw	1
  8324  00416E  1A13               	xorwf	___aldiv@sign^0,f,c
  8325  004170                     l12116:
  8326  004170  0E00               	movlw	0
  8327  004172  6E14               	movwf	___aldiv@quotient^0,c
  8328  004174  0E00               	movlw	0
  8329  004176  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8330  004178  0E00               	movlw	0
  8331  00417A  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8332  00417C  0E00               	movlw	0
  8333  00417E  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8334  004180  500E               	movf	___aldiv@divisor^0,w,c
  8335  004182  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8336  004184  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8337  004186  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8338  004188  B4D8               	btfsc	status,2,c
  8339  00418A  D02A               	goto	l12138
  8340  00418C  0E01               	movlw	1
  8341  00418E  6E12               	movwf	___aldiv@counter^0,c
  8342  004190  D006               	goto	l12124
  8343  004192                     l12122:
  8344  004192  90D8               	bcf	status,0,c
  8345  004194  360E               	rlcf	___aldiv@divisor^0,f,c
  8346  004196  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8347  004198  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8348  00419A  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8349  00419C  2A12               	incf	___aldiv@counter^0,f,c
  8350  00419E                     l12124:
  8351  00419E  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8352  0041A0  D7F8               	goto	l12122
  8353  0041A2                     u14050:
  8354  0041A2  90D8               	bcf	status,0,c
  8355  0041A4  3614               	rlcf	___aldiv@quotient^0,f,c
  8356  0041A6  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8357  0041A8  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8358  0041AA  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8359  0041AC  500E               	movf	___aldiv@divisor^0,w,c
  8360  0041AE  5C0A               	subwf	___aldiv@dividend^0,w,c
  8361  0041B0  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8362  0041B2  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8363  0041B4  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8364  0041B6  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8365  0041B8  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8366  0041BA  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8367  0041BC  A0D8               	btfss	status,0,c
  8368  0041BE  D009               	goto	l12134
  8369  0041C0  500E               	movf	___aldiv@divisor^0,w,c
  8370  0041C2  5E0A               	subwf	___aldiv@dividend^0,f,c
  8371  0041C4  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8372  0041C6  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8373  0041C8  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8374  0041CA  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8375  0041CC  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8376  0041CE  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8377  0041D0  8014               	bsf	___aldiv@quotient^0,0,c
  8378  0041D2                     l12134:
  8379  0041D2  90D8               	bcf	status,0,c
  8380  0041D4  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8381  0041D6  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8382  0041D8  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8383  0041DA  320E               	rrcf	___aldiv@divisor^0,f,c
  8384  0041DC  2E12               	decfsz	___aldiv@counter^0,f,c
  8385  0041DE  D7E1               	goto	u14050
  8386  0041E0                     l12138:
  8387  0041E0  5013               	movf	___aldiv@sign^0,w,c
  8388  0041E2  B4D8               	btfsc	status,2,c
  8389  0041E4  D008               	goto	l12142
  8390  0041E6  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8391  0041E8  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8392  0041EA  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8393  0041EC  6C14               	negf	___aldiv@quotient^0,c
  8394  0041EE  0E00               	movlw	0
  8395  0041F0  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8396  0041F2  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8397  0041F4  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8398  0041F6                     l12142:
  8399  0041F6  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8400  0041FA  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8401  0041FE  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8402  004202  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8403  004206  0012               	return		;funcret
  8404  004208                     __end_of___aldiv:
  8405                           	callstack 0
  8406                           
  8407 ;; *************** function _inicializa_SPI *****************
  8408 ;; Defined at:
  8409 ;;		line 48 in file "bibliotecas/SPI.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, status,2, status,0
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/1
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8423 ;;      Params:         0       0       0       0       0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8426 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8427 ;;Total ram usage:        0 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    2
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_grava_sd
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text53
  8438  005A8E                     __ptext53:
  8439                           	callstack 0
  8440  005A8E                     _inicializa_SPI:
  8441                           	callstack 25
  8442                           
  8443                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8444                           
  8445                           ;incstack = 0
  8446  005A8E  9293               	bcf	147,1,c	;volatile
  8447                           
  8448                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8449  005A90  9A93               	bcf	147,5,c	;volatile
  8450                           
  8451                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8452  005A92  8093               	bsf	147,0,c	;volatile
  8453                           
  8454                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8455  005A94  9E94               	bcf	148,7,c	;volatile
  8456                           
  8457                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8458  005A96  8A8A               	bsf	138,5,c	;volatile
  8459                           
  8460                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8461  005A98  0E3F               	movlw	63
  8462  005A9A  16C7               	andwf	199,f,c	;volatile
  8463                           
  8464                           ;SPI.c: 57: SSPCON1 = 0x00;
  8465  005A9C  0E00               	movlw	0
  8466  005A9E  6EC6               	movwf	198,c	;volatile
  8467                           
  8468                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8469  005AA0  9EC7               	bcf	199,7,c	;volatile
  8470                           
  8471                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8472  005AA2  8CC7               	bsf	199,6,c	;volatile
  8473                           
  8474                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8475  005AA4  98C6               	bcf	198,4,c	;volatile
  8476                           
  8477                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8478  005AA6  0E03               	movlw	3
  8479  005AA8  6EC6               	movwf	198,c	;volatile
  8480                           
  8481                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8482  005AAA  8AC6               	bsf	198,5,c	;volatile
  8483  005AAC  0012               	return		;funcret
  8484  005AAE                     __end_of_inicializa_SPI:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _escrita_sdcard *****************
  8488 ;; Defined at:
  8489 ;;		line 208 in file "bibliotecas/SDCard.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  fix_gps         3    0        PTR unsigned char 
  8494 ;;  bw              2    0        unsigned short 
  8495 ;;  j               1    0        unsigned char 
  8496 ;;  i               1    0        unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/1
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8510 ;;Total ram usage:        0 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:   14
  8513 ;; This function calls:
  8514 ;;		_data_nome
  8515 ;;		_f_close
  8516 ;;		_f_lseek
  8517 ;;		_f_mount
  8518 ;;		_f_open
  8519 ;;		_fprintf
  8520 ;;		_gps
  8521 ;;		_hora_nome
  8522 ;;		_strcat
  8523 ;; This function is called by:
  8524 ;;		_grava_sd
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text54
  8529  003604                     __ptext54:
  8530                           	callstack 0
  8531  003604                     _escrita_sdcard:
  8532                           	callstack 13
  8533                           
  8534                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 217: f_mount(0,&fs);
  8535                           
  8536                           ;incstack = 0
  8537  003604  0E96               	movlw	low _fs
  8538  003606  6E0A               	movwf	f_mount@fs^0,c
  8539  003608  0E03               	movlw	high _fs
  8540  00360A  6E0B               	movwf	(f_mount@fs+1)^0,c
  8541  00360C  0E00               	movlw	0
  8542  00360E  ECA8  F029         	call	_f_mount
  8543                           
  8544                           ;SDCard.c: 218: if(!f_fix)
  8545  003612  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8546  003614  A4D8               	btfss	status,2,c
  8547  003616  D023               	goto	l12960
  8548                           
  8549                           ;SDCard.c: 219: {;SDCard.c: 220: gps();
  8550  003618  EC2E  F02B         	call	_gps	;wreg free
  8551                           
  8552                           ;SDCard.c: 221: if(data[0] != ' ' && hora[0] != ' ')
  8553  00361C  0E20               	movlw	32
  8554  00361E  0101               	movlb	1	; () banked
  8555  003620  19D8               	xorwf	_data& (0+255),w,b
  8556  003622  B4D8               	btfsc	status,2,c
  8557  003624  D01C               	goto	l12960
  8558                           
  8559                           ; BSR set to: 1
  8560  003626  0E20               	movlw	32
  8561  003628  19CA               	xorwf	_hora& (0+255),w,b
  8562  00362A  B4D8               	btfsc	status,2,c
  8563  00362C  D018               	goto	l12960
  8564                           
  8565                           ; BSR set to: 1
  8566                           ;SDCard.c: 222: {;SDCard.c: 223: data_nome(data);
  8567  00362E  0ED8               	movlw	low _data
  8568  003630  6E0A               	movwf	data_nome@p_buff^0,c
  8569  003632  0E01               	movlw	high _data
  8570  003634  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8571  003636  EC5F  F02C         	call	_data_nome	;wreg free
  8572                           
  8573                           ;SDCard.c: 224: hora_nome(hora);
  8574  00363A  0ECA               	movlw	low _hora
  8575  00363C  6E0A               	movwf	hora_nome@p_buff^0,c
  8576  00363E  0E01               	movlw	high _hora
  8577  003640  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8578  003642  EC35  F02C         	call	_hora_nome	;wreg free
  8579                           
  8580                           ; BSR set to: 1
  8581                           ;SDCard.c: 226: strcat(filename, ".tlm");
  8582  003646  0E56               	movlw	low _filename
  8583  003648  6E0A               	movwf	strcat@to^0,c
  8584  00364A  0E02               	movlw	high _filename
  8585  00364C  6E0B               	movwf	(strcat@to+1)^0,c
  8586  00364E  0E67               	movlw	low STR_11
  8587  003650  6E0C               	movwf	strcat@from^0,c
  8588  003652  0E62               	movlw	high STR_11
  8589  003654  6E0D               	movwf	(strcat@from+1)^0,c
  8590  003656  ECF0  F029         	call	_strcat	;wreg free
  8591                           
  8592                           ; BSR set to: 1
  8593                           ;SDCard.c: 227: f_fix = 1;
  8594  00365A  0E01               	movlw	1
  8595  00365C  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8596  00365E                     l12960:
  8597                           
  8598                           ;SDCard.c: 228: };SDCard.c: 229: };SDCard.c: 231: if(f_fix)
  8599  00365E  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8600  003660  B4D8               	btfsc	status,2,c
  8601  003662  0012               	return	
  8602                           
  8603                           ;SDCard.c: 232: {;SDCard.c: 233: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8604  003664  0E7C               	movlw	low _fil
  8605  003666  0100               	movlb	0	; () banked
  8606  003668  6F98               	movwf	f_open@fp& (0+255),b
  8607  00366A  0E01               	movlw	high _fil
  8608  00366C  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8609  00366E  0E56               	movlw	low _filename
  8610  003670  6F9A               	movwf	f_open@path& (0+255),b
  8611  003672  0E02               	movlw	high _filename
  8612  003674  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8613  003676  0E02               	movlw	2
  8614  003678  6F9C               	movwf	f_open@mode& (0+255),b
  8615  00367A  EC66  F009         	call	_f_open	;wreg free
  8616  00367E  0900               	iorlw	0
  8617  003680  A4D8               	btfss	status,2,c
  8618  003682  D051               	goto	l12974
  8619                           
  8620                           ;SDCard.c: 234: {;SDCard.c: 236: f_lseek(&fil, ((&fil)->fsize));
  8621  003684  0E7C               	movlw	low _fil
  8622  003686  0100               	movlb	0	; () banked
  8623  003688  6F86               	movwf	f_lseek@fp& (0+255),b
  8624  00368A  0E01               	movlw	high _fil
  8625  00368C  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  8626  00368E  C186  F088         	movff	_fil+10,f_lseek@ofs
  8627  003692  C187  F089         	movff	_fil+11,f_lseek@ofs+1
  8628  003696  C188  F08A         	movff	_fil+12,f_lseek@ofs+2
  8629  00369A  C189  F08B         	movff	_fil+13,f_lseek@ofs+3
  8630  00369E  EC79  F005         	call	_f_lseek	;wreg free
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;SDCard.c: 237: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8634  0036A2  0E7C               	movlw	low _fil
  8635  0036A4  6FB1               	movwf	fprintf@fil& (0+255),b
  8636  0036A6  0E01               	movlw	high _fil
  8637  0036A8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8638  0036AA  0EA2               	movlw	low STR_12
  8639  0036AC  6FB3               	movwf	fprintf@str& (0+255),b
  8640  0036AE  0E61               	movlw	high STR_12
  8641  0036B0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8642  0036B2  0EDE               	movlw	low _vel
  8643  0036B4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8644  0036B6  0E01               	movlw	high _vel
  8645  0036B8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8646  0036BA  0EB2               	movlw	low _lt
  8647  0036BC  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  8648  0036BE  0E01               	movlw	high _lt
  8649  0036C0  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  8650  0036C2  0E98               	movlw	low _lo
  8651  0036C4  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  8652  0036C6  0E01               	movlw	high _lo
  8653  0036C8  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  8654  0036CA  ECBF  F007         	call	_fprintf	;wreg free
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;SDCard.c: 238: fprintf(&fil, "r0;c0;k0;");
  8658  0036CE  0E7C               	movlw	low _fil
  8659  0036D0  6FB1               	movwf	fprintf@fil& (0+255),b
  8660  0036D2  0E01               	movlw	high _fil
  8661  0036D4  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8662  0036D6  0EFC               	movlw	low STR_13
  8663  0036D8  6FB3               	movwf	fprintf@str& (0+255),b
  8664  0036DA  0E61               	movlw	high STR_13
  8665  0036DC  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8666  0036DE  ECBF  F007         	call	_fprintf	;wreg free
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;SDCard.c: 239: fprintf(&fil, "h%s;dN/A;", hora);
  8670  0036E2  0E7C               	movlw	low _fil
  8671  0036E4  6FB1               	movwf	fprintf@fil& (0+255),b
  8672  0036E6  0E01               	movlw	high _fil
  8673  0036E8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8674  0036EA  0E06               	movlw	low STR_14
  8675  0036EC  6FB3               	movwf	fprintf@str& (0+255),b
  8676  0036EE  0E62               	movlw	high STR_14
  8677  0036F0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8678  0036F2  0ECA               	movlw	low _hora
  8679  0036F4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8680  0036F6  0E01               	movlw	high _hora
  8681  0036F8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8682  0036FA  ECBF  F007         	call	_fprintf	;wreg free
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;SDCard.c: 240: fprintf(&fil, "f%c;\n", fence);
  8686  0036FE  0E7C               	movlw	low _fil
  8687  003700  6FB1               	movwf	fprintf@fil& (0+255),b
  8688  003702  0E01               	movlw	high _fil
  8689  003704  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8690  003706  0E5C               	movlw	low STR_15
  8691  003708  6FB3               	movwf	fprintf@str& (0+255),b
  8692  00370A  0E62               	movlw	high STR_15
  8693  00370C  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8694  00370E  C0F5  F0B5         	movff	_fence,?_fprintf+4
  8695  003712  6BB6               	clrf	(?_fprintf+5)& (0+255),b
  8696  003714  ECBF  F007         	call	_fprintf	;wreg free
  8697                           
  8698                           ;SDCard.c: 243: f_close(&fil);
  8699  003718  0E7C               	movlw	low _fil
  8700  00371A  6F69               	movwf	f_close@fp& (0+255),b
  8701  00371C  0E01               	movlw	high _fil
  8702  00371E  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8703  003720  EC1F  F02C         	call	_f_close	;wreg free
  8704                           
  8705                           ;SDCard.c: 244: }
  8706  003724  0012               	return	
  8707  003726                     l12974:
  8708                           
  8709                           ;SDCard.c: 245: else;SDCard.c: 246: {;SDCard.c: 247: f_open(&fil, filename, 0x08 );
  8710  003726  0E7C               	movlw	low _fil
  8711  003728  0100               	movlb	0	; () banked
  8712  00372A  6F98               	movwf	f_open@fp& (0+255),b
  8713  00372C  0E01               	movlw	high _fil
  8714  00372E  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8715  003730  0E56               	movlw	low _filename
  8716  003732  6F9A               	movwf	f_open@path& (0+255),b
  8717  003734  0E02               	movlw	high _filename
  8718  003736  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8719  003738  0E08               	movlw	8
  8720  00373A  6F9C               	movwf	f_open@mode& (0+255),b
  8721  00373C  EC66  F009         	call	_f_open	;wreg free
  8722                           
  8723                           ;SDCard.c: 248: f_close(&fil);
  8724  003740  0E7C               	movlw	low _fil
  8725  003742  0100               	movlb	0	; () banked
  8726  003744  6F69               	movwf	f_close@fp& (0+255),b
  8727  003746  0E01               	movlw	high _fil
  8728  003748  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8729  00374A  EC1F  F02C         	call	_f_close	;wreg free
  8730  00374E  0012               	return		;funcret
  8731  003750                     __end_of_escrita_sdcard:
  8732                           	callstack 0
  8733                           
  8734 ;; *************** function _strcat *****************
  8735 ;; Defined at:
  8736 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  to              2    9[COMRAM] PTR unsigned char 
  8739 ;;		 -> filename(20), 
  8740 ;;  from            2   11[COMRAM] PTR const unsigned char 
  8741 ;;		 -> STR_11(5), 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  cp              2   13[COMRAM] PTR unsigned char 
  8744 ;;		 -> filename(20), 
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  2    9[COMRAM] PTR unsigned char 
  8747 ;; Registers used:
  8748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8749 ;; Tracked objects:
  8750 ;;		On entry : 3F/1
  8751 ;;		On exit  : 3F/1
  8752 ;;		Unchanged: 3F/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8754 ;;      Params:         4       0       0       0       0       0       0       0       0
  8755 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8757 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8758 ;;Total ram usage:        6 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    2
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_escrita_sdcard
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text55
  8769  0053E0                     __ptext55:
  8770                           	callstack 0
  8771  0053E0                     _strcat:
  8772                           	callstack 24
  8773                           
  8774                           ; BSR set to: 1
  8775                           
  8776                           ;incstack = 0
  8777  0053E0  C00A  F00E         	movff	strcat@to,strcat@cp
  8778  0053E4  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  8779  0053E8  D002               	goto	l12418
  8780  0053EA                     l12416:
  8781                           
  8782                           ; BSR set to: 1
  8783  0053EA  4A0E               	infsnz	strcat@cp^0,f,c
  8784  0053EC  2A0F               	incf	(strcat@cp+1)^0,f,c
  8785  0053EE                     l12418:
  8786                           
  8787                           ; BSR set to: 1
  8788  0053EE  C00E  FFD9         	movff	strcat@cp,fsr2l
  8789  0053F2  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8790  0053F6  50DF               	movf	indf2,w,c
  8791  0053F8  B4D8               	btfsc	status,2,c
  8792  0053FA  D005               	goto	l12422
  8793  0053FC  D7F6               	goto	l12416
  8794  0053FE                     l12420:
  8795                           
  8796                           ; BSR set to: 1
  8797  0053FE  4A0E               	infsnz	strcat@cp^0,f,c
  8798  005400  2A0F               	incf	(strcat@cp+1)^0,f,c
  8799  005402  4A0C               	infsnz	strcat@from^0,f,c
  8800  005404  2A0D               	incf	(strcat@from+1)^0,f,c
  8801  005406                     l12422:
  8802                           
  8803                           ; BSR set to: 1
  8804  005406  C00C  FFF6         	movff	strcat@from,tblptrl
  8805  00540A  C00D  FFF7         	movff	strcat@from+1,tblptrh
  8806  00540E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8807  00540E  6AF8               	clrf	tblptru,c
  8808  005410                     	endif
  8809  005410                     	if	0	;tblptru may be non-zero
  8810  005410                     	endif
  8811  005410  C00E  FFD9         	movff	strcat@cp,fsr2l
  8812  005414  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8813  005418  0008               	tblrd		*
  8814  00541A  CFF5 FFDF          	movff	tablat,indf2
  8815  00541E  50DF               	movf	indf2,w,c
  8816  005420  B4D8               	btfsc	status,2,c
  8817  005422  0012               	return	
  8818  005424  D7EC               	goto	l12420
  8819  005426                     __end_of_strcat:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function _hora_nome *****************
  8823 ;; Defined at:
  8824 ;;		line 414 in file "bibliotecas/SDCard.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  8827 ;;		 -> hora(7), 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  i               1   11[COMRAM] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8834 ;; Tracked objects:
  8835 ;;		On entry : 3F/1
  8836 ;;		On exit  : 3F/1
  8837 ;;		Unchanged: 3F/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8839 ;;      Params:         2       0       0       0       0       0       0       0       0
  8840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8842 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8843 ;;Total ram usage:        3 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    2
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_escrita_sdcard
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text56
  8854  00586A                     __ptext56:
  8855                           	callstack 0
  8856  00586A                     _hora_nome:
  8857                           	callstack 24
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;SDCard.c: 416: unsigned char i;;SDCard.c: 417: for(i=4; i<8;i++)
  8861                           
  8862                           ; BSR set to: 1
  8863                           ;incstack = 0
  8864  00586A  0E04               	movlw	4
  8865  00586C  6E0C               	movwf	hora_nome@i^0,c
  8866  00586E                     l12406:
  8867                           
  8868                           ; BSR set to: 1
  8869                           ;SDCard.c: 418: {;SDCard.c: 419: filename[i] = *p_buff;
  8870  00586E  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  8871  005872  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  8872  005876  0E56               	movlw	low _filename
  8873  005878  240C               	addwf	hora_nome@i^0,w,c
  8874  00587A  6EE1               	movwf	fsr1l,c
  8875  00587C  6AE2               	clrf	fsr1h,c
  8876  00587E  0E02               	movlw	high _filename
  8877  005880  22E2               	addwfc	fsr1h,f,c
  8878  005882  CFDF FFE7          	movff	indf2,indf1
  8879                           
  8880                           ; BSR set to: 1
  8881                           ;SDCard.c: 420: p_buff++;
  8882  005886  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  8883  005888  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  8884                           
  8885                           ; BSR set to: 1
  8886  00588A  2A0C               	incf	hora_nome@i^0,f,c
  8887                           
  8888                           ; BSR set to: 1
  8889  00588C  0E07               	movlw	7
  8890  00588E  640C               	cpfsgt	hora_nome@i^0,c
  8891  005890  D7EE               	goto	l12406
  8892  005892  0012               	return	
  8893  005894                     __end_of_hora_nome:
  8894                           	callstack 0
  8895                           
  8896 ;; *************** function _gps *****************
  8897 ;; Defined at:
  8898 ;;		line 92 in file "bibliotecas/GPS.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  flag_fix        2   12[COMRAM] PTR unsigned char 
  8903 ;;		 -> rawFix(2), 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0
  8914 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8916 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8917 ;;Total ram usage:        3 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    3
  8920 ;; This function calls:
  8921 ;;		_fix
  8922 ;;		_get_fix
  8923 ;;		_get_gpstime
  8924 ;;		_get_latitude
  8925 ;;		_get_longitude
  8926 ;;		_get_rawdate
  8927 ;;		_get_rawspeed
  8928 ;; This function is called by:
  8929 ;;		_escrita_sdcard
  8930 ;;		_main
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text57
  8935  00565C                     __ptext57:
  8936                           	callstack 0
  8937  00565C                     _gps:
  8938                           	callstack 27
  8939                           
  8940                           ;GPS.c: 94: unsigned char *flag_fix;;GPS.c: 95: get_fix();
  8941                           
  8942                           ; BSR set to: 1
  8943                           ;incstack = 0
  8944  00565C  EC94  F02B         	call	_get_fix	;wreg free
  8945                           
  8946                           ;GPS.c: 96: flag_fix = fix();
  8947  005660  EC29  F02E         	call	_fix	;wreg free
  8948  005664  C00A  F00D         	movff	?_fix,gps@flag_fix
  8949  005668  C00B  F00E         	movff	?_fix+1,gps@flag_fix+1
  8950                           
  8951                           ;GPS.c: 97: if(flag_fix[0] == '1')
  8952  00566C  C00D  FFD9         	movff	gps@flag_fix,fsr2l
  8953  005670  C00E  FFDA         	movff	gps@flag_fix+1,fsr2h
  8954  005674  0E31               	movlw	49
  8955  005676  18DE               	xorwf	postinc2,w,c
  8956  005678  A4D8               	btfss	status,2,c
  8957  00567A  0012               	return	
  8958                           
  8959                           ;GPS.c: 98: {;GPS.c: 99: get_gpstime();
  8960  00567C  EC4A  F02C         	call	_get_gpstime	;wreg free
  8961                           
  8962                           ;GPS.c: 100: get_latitude();
  8963  005680  EC84  F029         	call	_get_latitude	;wreg free
  8964                           
  8965                           ;GPS.c: 101: get_longitude();
  8966  005684  EC60  F029         	call	_get_longitude	;wreg free
  8967                           
  8968                           ;GPS.c: 102: get_rawdate();
  8969  005688  EC7C  F02B         	call	_get_rawdate	;wreg free
  8970                           
  8971                           ;GPS.c: 103: get_rawspeed();
  8972  00568C  EC64  F02B         	call	_get_rawspeed	;wreg free
  8973  005690  0012               	return		;funcret
  8974  005692                     __end_of_gps:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _get_rawspeed *****************
  8978 ;; Defined at:
  8979 ;;		line 310 in file "bibliotecas/GPS.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  index           1   10[COMRAM] unsigned char 
  8984 ;;  index_speed     1    9[COMRAM] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 3F/1
  8991 ;;		On exit  : 3F/1
  8992 ;;		Unchanged: 3F/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0
  8995 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8997 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    2
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_gps
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text58
  9009  0056C8                     __ptext58:
  9010                           	callstack 0
  9011  0056C8                     _get_rawspeed:
  9012                           	callstack 27
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;GPS.c: 312: unsigned char index_speed, index;;GPS.c: 314: index_speed = 0;
  9016                           
  9017                           ;incstack = 0
  9018  0056C8  0E00               	movlw	0
  9019  0056CA  6E0A               	movwf	get_rawspeed@index_speed^0,c
  9020                           
  9021                           ;GPS.c: 316: for(index = 39; index<44; index++)
  9022  0056CC  0E27               	movlw	39
  9023  0056CE  6E0B               	movwf	get_rawspeed@index^0,c
  9024  0056D0                     l11732:
  9025                           
  9026                           ; BSR set to: 1
  9027                           ;GPS.c: 317: {;GPS.c: 318: rawSpeed[index_speed] = rmc_buffer[index];
  9028  0056D0  0E50               	movlw	low _rmc_buffer
  9029  0056D2  240B               	addwf	get_rawspeed@index^0,w,c
  9030  0056D4  6ED9               	movwf	fsr2l,c
  9031  0056D6  6ADA               	clrf	fsr2h,c
  9032  0056D8  0E03               	movlw	high _rmc_buffer
  9033  0056DA  22DA               	addwfc	fsr2h,f,c
  9034  0056DC  0E6A               	movlw	low _rawSpeed
  9035  0056DE  240A               	addwf	get_rawspeed@index_speed^0,w,c
  9036  0056E0  6EE1               	movwf	fsr1l,c
  9037  0056E2  6AE2               	clrf	fsr1h,c
  9038  0056E4  0E02               	movlw	high _rawSpeed
  9039  0056E6  22E2               	addwfc	fsr1h,f,c
  9040  0056E8  CFDF FFE7          	movff	indf2,indf1
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;GPS.c: 319: index_speed++;
  9044  0056EC  2A0A               	incf	get_rawspeed@index_speed^0,f,c
  9045                           
  9046                           ; BSR set to: 1
  9047  0056EE  2A0B               	incf	get_rawspeed@index^0,f,c
  9048                           
  9049                           ; BSR set to: 1
  9050  0056F0  0E2B               	movlw	43
  9051  0056F2  640B               	cpfsgt	get_rawspeed@index^0,c
  9052  0056F4  D7ED               	goto	l11732
  9053  0056F6  0012               	return	
  9054  0056F8                     __end_of_get_rawspeed:
  9055                           	callstack 0
  9056                           
  9057 ;; *************** function _get_rawdate *****************
  9058 ;; Defined at:
  9059 ;;		line 295 in file "bibliotecas/GPS.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;		None
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;  index           1   10[COMRAM] unsigned char 
  9064 ;;  index_date      1    9[COMRAM] unsigned char 
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      void 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9069 ;; Tracked objects:
  9070 ;;		On entry : 3F/1
  9071 ;;		On exit  : 3F/1
  9072 ;;		Unchanged: 3F/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0
  9075 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9077 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9078 ;;Total ram usage:        2 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    2
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_gps
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text59
  9089  0056F8                     __ptext59:
  9090                           	callstack 0
  9091  0056F8                     _get_rawdate:
  9092                           	callstack 27
  9093                           
  9094                           ; BSR set to: 1
  9095                           ;GPS.c: 297: unsigned char index_date, index;;GPS.c: 299: index_date = 0;
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;incstack = 0
  9099  0056F8  0E00               	movlw	0
  9100  0056FA  6E0A               	movwf	get_rawdate@index_date^0,c
  9101                           
  9102                           ;GPS.c: 301: for(index = 46; index<52; index++)
  9103  0056FC  0E2E               	movlw	46
  9104  0056FE  6E0B               	movwf	get_rawdate@index^0,c
  9105  005700                     l11718:
  9106                           
  9107                           ; BSR set to: 1
  9108                           ;GPS.c: 302: {;GPS.c: 303: rawDate[index_date] = rmc_buffer[index];
  9109  005700  0E50               	movlw	low _rmc_buffer
  9110  005702  240B               	addwf	get_rawdate@index^0,w,c
  9111  005704  6ED9               	movwf	fsr2l,c
  9112  005706  6ADA               	clrf	fsr2h,c
  9113  005708  0E03               	movlw	high _rmc_buffer
  9114  00570A  22DA               	addwfc	fsr2h,f,c
  9115  00570C  0EE4               	movlw	low _rawDate
  9116  00570E  240A               	addwf	get_rawdate@index_date^0,w,c
  9117  005710  6EE1               	movwf	fsr1l,c
  9118  005712  6AE2               	clrf	fsr1h,c
  9119  005714  0E01               	movlw	high _rawDate
  9120  005716  22E2               	addwfc	fsr1h,f,c
  9121  005718  CFDF FFE7          	movff	indf2,indf1
  9122                           
  9123                           ; BSR set to: 1
  9124                           ;GPS.c: 304: index_date++;
  9125  00571C  2A0A               	incf	get_rawdate@index_date^0,f,c
  9126                           
  9127                           ; BSR set to: 1
  9128  00571E  2A0B               	incf	get_rawdate@index^0,f,c
  9129                           
  9130                           ; BSR set to: 1
  9131  005720  0E33               	movlw	51
  9132  005722  640B               	cpfsgt	get_rawdate@index^0,c
  9133  005724  D7ED               	goto	l11718
  9134  005726  0012               	return	
  9135  005728                     __end_of_get_rawdate:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function _get_longitude *****************
  9139 ;; Defined at:
  9140 ;;		line 273 in file "bibliotecas/GPS.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  index           1   10[COMRAM] unsigned char 
  9145 ;;  index_long      1    9[COMRAM] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 3F/1
  9152 ;;		On exit  : 3F/1
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0
  9156 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9158 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9159 ;;Total ram usage:        2 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    2
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_gps
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text60
  9170  0052C0                     __ptext60:
  9171                           	callstack 0
  9172  0052C0                     _get_longitude:
  9173                           	callstack 27
  9174                           
  9175                           ; BSR set to: 1
  9176                           ;GPS.c: 275: unsigned char index_long, index;;GPS.c: 277: index_long = 1;
  9177                           
  9178                           ; BSR set to: 1
  9179                           ;incstack = 0
  9180  0052C0  0E01               	movlw	1
  9181  0052C2  6E0A               	movwf	get_longitude@index_long^0,c
  9182                           
  9183                           ;GPS.c: 279: for(index = 23; index<34; index++)
  9184  0052C4  0E17               	movlw	23
  9185  0052C6  6E0B               	movwf	get_longitude@index^0,c
  9186  0052C8                     l11698:
  9187                           
  9188                           ; BSR set to: 1
  9189                           ;GPS.c: 280: {;GPS.c: 281: rawLongitude[index_long] = gga_buffer[index];
  9190  0052C8  0E00               	movlw	low _gga_buffer
  9191  0052CA  240B               	addwf	get_longitude@index^0,w,c
  9192  0052CC  6ED9               	movwf	fsr2l,c
  9193  0052CE  6ADA               	clrf	fsr2h,c
  9194  0052D0  0E03               	movlw	high _gga_buffer
  9195  0052D2  22DA               	addwfc	fsr2h,f,c
  9196  0052D4  0EA5               	movlw	low _rawLongitude
  9197  0052D6  240A               	addwf	get_longitude@index_long^0,w,c
  9198  0052D8  6EE1               	movwf	fsr1l,c
  9199  0052DA  6AE2               	clrf	fsr1h,c
  9200  0052DC  0E01               	movlw	high _rawLongitude
  9201  0052DE  22E2               	addwfc	fsr1h,f,c
  9202  0052E0  CFDF FFE7          	movff	indf2,indf1
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;GPS.c: 282: index_long++;
  9206  0052E4  2A0A               	incf	get_longitude@index_long^0,f,c
  9207                           
  9208                           ; BSR set to: 1
  9209  0052E6  2A0B               	incf	get_longitude@index^0,f,c
  9210                           
  9211                           ; BSR set to: 1
  9212  0052E8  0E21               	movlw	33
  9213  0052EA  640B               	cpfsgt	get_longitude@index^0,c
  9214  0052EC  D7ED               	goto	l11698
  9215                           
  9216                           ; BSR set to: 1
  9217                           ;GPS.c: 283: };GPS.c: 284: if(gga_buffer[32] == 'E')
  9218  0052EE  0E45               	movlw	69
  9219  0052F0  0103               	movlb	3	; () banked
  9220  0052F2  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  9221  0052F4  A4D8               	btfss	status,2,c
  9222  0052F6  D004               	goto	l11710
  9223                           
  9224                           ; BSR set to: 3
  9225                           ;GPS.c: 285: {;GPS.c: 286: rawLongitude[0] = '0';
  9226  0052F8  0E30               	movlw	48
  9227  0052FA  0101               	movlb	1	; () banked
  9228  0052FC  6FA5               	movwf	_rawLongitude& (0+255),b
  9229                           
  9230                           ;GPS.c: 287: }
  9231  0052FE  0012               	return	
  9232  005300                     l11710:
  9233                           
  9234                           ; BSR set to: 3
  9235                           ;GPS.c: 288: else;GPS.c: 289: {;GPS.c: 290: rawLongitude[0] = '-';
  9236  005300  0E2D               	movlw	45
  9237  005302  0101               	movlb	1	; () banked
  9238  005304  6FA5               	movwf	_rawLongitude& (0+255),b
  9239                           
  9240                           ; BSR set to: 1
  9241  005306  0012               	return		;funcret
  9242  005308                     __end_of_get_longitude:
  9243                           	callstack 0
  9244                           
  9245 ;; *************** function _get_latitude *****************
  9246 ;; Defined at:
  9247 ;;		line 249 in file "bibliotecas/GPS.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;  time_buffer    15    0        unsigned char [15]
  9252 ;;  index           1   10[COMRAM] unsigned char 
  9253 ;;  index_lat       1    9[COMRAM] unsigned char 
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      void 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 3F/1
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0
  9264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9267 ;;Total ram usage:        2 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; Hardware stack levels required when called:    2
  9270 ;; This function calls:
  9271 ;;		Nothing
  9272 ;; This function is called by:
  9273 ;;		_gps
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text61
  9278  005308                     __ptext61:
  9279                           	callstack 0
  9280  005308                     _get_latitude:
  9281                           	callstack 27
  9282                           
  9283                           ;GPS.c: 251: unsigned char index_lat, index;;GPS.c: 252: unsigned char time_buffer[15];;
      +                          GPS.c: 254: index_lat = 1;
  9284                           
  9285                           ; BSR set to: 1
  9286                           ;incstack = 0
  9287  005308  0E01               	movlw	1
  9288  00530A  6E0A               	movwf	get_latitude@index_lat^0,c
  9289                           
  9290                           ;GPS.c: 256: for(index = 10; index<20; index++)
  9291  00530C  0E0A               	movlw	10
  9292  00530E  6E0B               	movwf	get_latitude@index^0,c
  9293  005310                     l11678:
  9294                           
  9295                           ;GPS.c: 257: {;GPS.c: 258: rawLatitude[index_lat] = gga_buffer[index];
  9296  005310  0E00               	movlw	low _gga_buffer
  9297  005312  240B               	addwf	get_latitude@index^0,w,c
  9298  005314  6ED9               	movwf	fsr2l,c
  9299  005316  6ADA               	clrf	fsr2h,c
  9300  005318  0E03               	movlw	high _gga_buffer
  9301  00531A  22DA               	addwfc	fsr2h,f,c
  9302  00531C  0EBE               	movlw	low _rawLatitude
  9303  00531E  240A               	addwf	get_latitude@index_lat^0,w,c
  9304  005320  6EE1               	movwf	fsr1l,c
  9305  005322  6AE2               	clrf	fsr1h,c
  9306  005324  0E01               	movlw	high _rawLatitude
  9307  005326  22E2               	addwfc	fsr1h,f,c
  9308  005328  CFDF FFE7          	movff	indf2,indf1
  9309                           
  9310                           ;GPS.c: 259: index_lat++;
  9311  00532C  2A0A               	incf	get_latitude@index_lat^0,f,c
  9312  00532E  2A0B               	incf	get_latitude@index^0,f,c
  9313  005330  0E13               	movlw	19
  9314  005332  640B               	cpfsgt	get_latitude@index^0,c
  9315  005334  D7ED               	goto	l11678
  9316                           
  9317                           ;GPS.c: 260: };GPS.c: 261: if(gga_buffer[21] == 'N')
  9318  005336  0E4E               	movlw	78
  9319  005338  0103               	movlb	3	; () banked
  9320  00533A  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  9321  00533C  A4D8               	btfss	status,2,c
  9322  00533E  D004               	goto	l11690
  9323                           
  9324                           ; BSR set to: 3
  9325                           ;GPS.c: 262: {;GPS.c: 263: rawLatitude[0] = '0';
  9326  005340  0E30               	movlw	48
  9327  005342  0101               	movlb	1	; () banked
  9328  005344  6FBE               	movwf	_rawLatitude& (0+255),b
  9329                           
  9330                           ;GPS.c: 264: }
  9331  005346  0012               	return	
  9332  005348                     l11690:
  9333                           
  9334                           ; BSR set to: 3
  9335                           ;GPS.c: 265: else;GPS.c: 266: {;GPS.c: 267: rawLatitude[0] = '-';
  9336  005348  0E2D               	movlw	45
  9337  00534A  0101               	movlb	1	; () banked
  9338  00534C  6FBE               	movwf	_rawLatitude& (0+255),b
  9339                           
  9340                           ; BSR set to: 1
  9341  00534E  0012               	return		;funcret
  9342  005350                     __end_of_get_latitude:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _get_gpstime *****************
  9346 ;; Defined at:
  9347 ;;		line 229 in file "bibliotecas/GPS.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  time_buffer    15    0        unsigned char [15]
  9352 ;;  index           1    9[COMRAM] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0
  9363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9365 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9366 ;;Total ram usage:        1 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    2
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_gps
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text62
  9377  005894                     __ptext62:
  9378                           	callstack 0
  9379  005894                     _get_gpstime:
  9380                           	callstack 27
  9381                           
  9382                           ;GPS.c: 231: unsigned char index;;GPS.c: 232: unsigned char time_buffer[15];;GPS.c: 236:
      +                           for(index = 0; index<6; index++)
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;incstack = 0
  9386  005894  0E00               	movlw	0
  9387  005896  6E0A               	movwf	get_gpstime@index^0,c
  9388  005898                     l11666:
  9389                           
  9390                           ;GPS.c: 237: {;GPS.c: 238: rawTime[index] = gga_buffer[index];
  9391  005898  0E00               	movlw	low _gga_buffer
  9392  00589A  240A               	addwf	get_gpstime@index^0,w,c
  9393  00589C  6ED9               	movwf	fsr2l,c
  9394  00589E  6ADA               	clrf	fsr2h,c
  9395  0058A0  0E03               	movlw	high _gga_buffer
  9396  0058A2  22DA               	addwfc	fsr2h,f,c
  9397  0058A4  0ED1               	movlw	low _rawTime
  9398  0058A6  240A               	addwf	get_gpstime@index^0,w,c
  9399  0058A8  6EE1               	movwf	fsr1l,c
  9400  0058AA  6AE2               	clrf	fsr1h,c
  9401  0058AC  0E01               	movlw	high _rawTime
  9402  0058AE  22E2               	addwfc	fsr1h,f,c
  9403  0058B0  CFDF FFE7          	movff	indf2,indf1
  9404  0058B4  2A0A               	incf	get_gpstime@index^0,f,c
  9405  0058B6  0E05               	movlw	5
  9406  0058B8  640A               	cpfsgt	get_gpstime@index^0,c
  9407  0058BA  D7EE               	goto	l11666
  9408  0058BC  0012               	return	
  9409  0058BE                     __end_of_get_gpstime:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _get_fix *****************
  9413 ;; Defined at:
  9414 ;;		line 324 in file "bibliotecas/GPS.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;		None
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  index           1   10[COMRAM] unsigned char 
  9419 ;;  index_fix       1    9[COMRAM] unsigned char 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9429 ;;      Params:         0       0       0       0       0       0       0       0       0
  9430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9432 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9433 ;;Total ram usage:        2 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    2
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_gps
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text63
  9444  005728                     __ptext63:
  9445                           	callstack 0
  9446  005728                     _get_fix:
  9447                           	callstack 27
  9448                           
  9449                           ;GPS.c: 326: unsigned char index_fix, index;;GPS.c: 328: index_fix = 0;
  9450                           
  9451                           ;incstack = 0
  9452  005728  0E00               	movlw	0
  9453  00572A  6E0A               	movwf	get_fix@index_fix^0,c
  9454                           
  9455                           ;GPS.c: 330: for(index = 37; index<39; index++)
  9456  00572C  0E25               	movlw	37
  9457  00572E  6E0B               	movwf	get_fix@index^0,c
  9458  005730                     l11648:
  9459                           
  9460                           ;GPS.c: 331: {;GPS.c: 332: rawFix[index_fix] = gga_buffer[index];
  9461  005730  0E00               	movlw	low _gga_buffer
  9462  005732  240B               	addwf	get_fix@index^0,w,c
  9463  005734  6ED9               	movwf	fsr2l,c
  9464  005736  6ADA               	clrf	fsr2h,c
  9465  005738  0E03               	movlw	high _gga_buffer
  9466  00573A  22DA               	addwfc	fsr2h,f,c
  9467  00573C  0EEA               	movlw	low _rawFix
  9468  00573E  240A               	addwf	get_fix@index_fix^0,w,c
  9469  005740  6EE1               	movwf	fsr1l,c
  9470  005742  6AE2               	clrf	fsr1h,c
  9471  005744  0E01               	movlw	high _rawFix
  9472  005746  22E2               	addwfc	fsr1h,f,c
  9473  005748  CFDF FFE7          	movff	indf2,indf1
  9474                           
  9475                           ;GPS.c: 333: index_fix++;
  9476  00574C  2A0A               	incf	get_fix@index_fix^0,f,c
  9477  00574E  2A0B               	incf	get_fix@index^0,f,c
  9478  005750  0E26               	movlw	38
  9479  005752  640B               	cpfsgt	get_fix@index^0,c
  9480  005754  D7ED               	goto	l11648
  9481  005756  0012               	return	
  9482  005758                     __end_of_get_fix:
  9483                           	callstack 0
  9484                           
  9485 ;; *************** function _fix *****************
  9486 ;; Defined at:
  9487 ;;		line 679 in file "bibliotecas/GPS.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;		None
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;		None
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  2    9[COMRAM] PTR unsigned char 
  9494 ;; Registers used:
  9495 ;;		wreg, status,2, status,0
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9501 ;;      Params:         2       0       0       0       0       0       0       0       0
  9502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9504 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9505 ;;Total ram usage:        2 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    2
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_gps
  9512 ;;		_disparo_gravacao
  9513 ;;		_troca_de_tela
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text64
  9518  005C52                     __ptext64:
  9519                           	callstack 0
  9520  005C52                     _fix:
  9521                           	callstack 27
  9522                           
  9523                           ;GPS.c: 681: return rawFix;
  9524                           
  9525                           ;incstack = 0
  9526  005C52  0EEA               	movlw	low _rawFix
  9527  005C54  6E0A               	movwf	?_fix^0,c
  9528  005C56  0E01               	movlw	high _rawFix
  9529  005C58  6E0B               	movwf	(?_fix+1)^0,c
  9530  005C5A  0012               	return		;funcret
  9531  005C5C                     __end_of_fix:
  9532                           	callstack 0
  9533                           
  9534 ;; *************** function _fprintf *****************
  9535 ;; Defined at:
  9536 ;;		line 1816 in file "bibliotecas/tff.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9539 ;;		 -> fil(28), 
  9540 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9541 ;;		 -> STR_15(6), STR_14(10), STR_13(10), STR_12(15), 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  s              16   93[BANK0 ] unsigned char [16]
  9544 ;;  val             4  117[BANK0 ] unsigned long 
  9545 ;;  i               2  124[BANK0 ] int 
  9546 ;;  cc              2  122[BANK0 ] int 
  9547 ;;  w               2  113[BANK0 ] int 
  9548 ;;  res             2  109[BANK0 ] int 
  9549 ;;  c               1  126[BANK0 ] unsigned char 
  9550 ;;  arp             1  121[BANK0 ] PTR void [1]
  9551 ;;		 -> ?_fprintf(2), 
  9552 ;;  r               1  116[BANK0 ] unsigned char 
  9553 ;;  f               1  115[BANK0 ] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  2   81[BANK0 ] int 
  9556 ;; Registers used:
  9557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 3F/0
  9560 ;;		On exit  : 3F/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9563 ;;      Params:         0      10       0       0       0       0       0       0       0
  9564 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9565 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9566 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9567 ;;Total ram usage:       46 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:   13
  9570 ;; This function calls:
  9571 ;;		___lldiv
  9572 ;;		___llmod
  9573 ;;		___wmul
  9574 ;;		_fputc
  9575 ;;		_fputs
  9576 ;; This function is called by:
  9577 ;;		_escrita_sdcard
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text65
  9582  000F7E                     __ptext65:
  9583                           	callstack 0
  9584  000F7E                     _fprintf:
  9585                           	callstack 13
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9589                           
  9590                           ;incstack = 0
  9591  000F7E  0EB5               	movlw	low (?_fprintf+4)
  9592  000F80  6FD9               	movwf	fprintf@arp& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9596  000F82  0E00               	movlw	0
  9597  000F84  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9598  000F86  0E00               	movlw	0
  9599  000F88  6FCD               	movwf	fprintf@res& (0+255),b
  9600  000F8A  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9601  000F8E  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9602  000F92                     l12508:
  9603                           
  9604                           ; BSR set to: 0
  9605  000F92  29DA               	incf	fprintf@cc& (0+255),w,b
  9606  000F94  E103               	bnz	l12512
  9607  000F96  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9608  000F98  B4D8               	btfsc	status,2,c
  9609  000F9A  0012               	return	
  9610  000F9C                     l12512:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;tff.c: 1832: c = *str++;
  9614  000F9C  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9615  000FA0  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9616  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9617  000FA4  6AF8               	clrf	tblptru,c
  9618  000FA6                     	endif
  9619  000FA6                     	if	0	;tblptru may be non-zero
  9620  000FA6                     	endif
  9621  000FA6  0008               	tblrd		*
  9622  000FA8  CFF5 F0DE          	movff	tablat,fprintf@c
  9623                           
  9624                           ; BSR set to: 0
  9625  000FAC  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9626  000FAE  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;tff.c: 1833: if (c == 0) break;
  9630  000FB0  51DE               	movf	fprintf@c& (0+255),w,b
  9631  000FB2  B4D8               	btfsc	status,2,c
  9632  000FB4  0012               	return	
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;tff.c: 1834: if (c != '%') {
  9636  000FB6  0E25               	movlw	37
  9637  000FB8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9638  000FBA  B4D8               	btfsc	status,2,c
  9639  000FBC  D017               	goto	l12528
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;tff.c: 1835: cc = fputc(c, fil);
  9643  000FBE  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9644  000FC2  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9645  000FC4  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9646  000FC8  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9647  000FCC  EC98  F02A         	call	_fputc	;wreg free
  9648  000FD0  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9649  000FD4  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9653  000FD8  29DA               	incf	fprintf@cc& (0+255),w,b
  9654  000FDA  E103               	bnz	u14690
  9655  000FDC  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9656  000FDE  B4D8               	btfsc	status,2,c
  9657  000FE0  D170               	goto	l12652
  9658  000FE2                     u14690:
  9659                           
  9660                           ; BSR set to: 0
  9661  000FE2  0E00               	movlw	0
  9662  000FE4  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9663  000FE6  0E01               	movlw	1
  9664  000FE8  6FDA               	movwf	fprintf@cc& (0+255),b
  9665  000FEA  D16B               	goto	l12652
  9666  000FEC                     l12528:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9670  000FEC  0E00               	movlw	0
  9671  000FEE  6FD3               	movwf	fprintf@f& (0+255),b
  9672  000FF0  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9673  000FF4  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;tff.c: 1840: c = *str++;
  9677  000FF6  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9678  000FFA  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9679  000FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9680  000FFE  6AF8               	clrf	tblptru,c
  9681  001000                     	endif
  9682  001000                     	if	0	;tblptru may be non-zero
  9683  001000                     	endif
  9684  001000  0008               	tblrd		*
  9685  001002  CFF5 F0DE          	movff	tablat,fprintf@c
  9686                           
  9687                           ; BSR set to: 0
  9688  001006  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9689  001008  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;tff.c: 1841: if (c == '0') {
  9693  00100A  0E30               	movlw	48
  9694  00100C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9695  00100E  A4D8               	btfss	status,2,c
  9696  001010  D023               	goto	l12548
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;tff.c: 1842: f = 1; c = *str++;
  9700  001012  0E01               	movlw	1
  9701  001014  6FD3               	movwf	fprintf@f& (0+255),b
  9702  001016                     l12538:
  9703                           
  9704                           ; BSR set to: 0
  9705  001016  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9706  00101A  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9707  00101E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9708  00101E  6AF8               	clrf	tblptru,c
  9709  001020                     	endif
  9710  001020                     	if	0	;tblptru may be non-zero
  9711  001020                     	endif
  9712  001020  0008               	tblrd		*
  9713  001022  CFF5 F0DE          	movff	tablat,fprintf@c
  9714                           
  9715                           ; BSR set to: 0
  9716  001026  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9717  001028  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9718  00102A  D016               	goto	l12548
  9719  00102C                     l12542:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9723  00102C  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9724  001030  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9725  001034  0E00               	movlw	0
  9726  001036  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9727  001038  0E0A               	movlw	10
  9728  00103A  6E0C               	movwf	___wmul@multiplicand^0,c
  9729  00103C  EC9B  F02C         	call	___wmul	;wreg free
  9730  001040  0100               	movlb	0	; () banked
  9731  001042  51DE               	movf	fprintf@c& (0+255),w,b
  9732  001044  260A               	addwf	?___wmul^0,f,c
  9733  001046  0E00               	movlw	0
  9734  001048  220B               	addwfc	(?___wmul+1)^0,f,c
  9735  00104A  0ED0               	movlw	208
  9736  00104C  240A               	addwf	?___wmul^0,w,c
  9737  00104E  6FD1               	movwf	fprintf@w& (0+255),b
  9738  001050  0EFF               	movlw	255
  9739  001052  200B               	addwfc	(?___wmul+1)^0,w,c
  9740  001054  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9741  001056  D7DF               	goto	l12538
  9742  001058                     l12548:
  9743                           
  9744                           ; BSR set to: 0
  9745  001058  0E2F               	movlw	47
  9746  00105A  65DE               	cpfsgt	fprintf@c& (0+255),b
  9747  00105C  D003               	goto	u14720
  9748                           
  9749                           ; BSR set to: 0
  9750  00105E  0E39               	movlw	57
  9751  001060  65DE               	cpfsgt	fprintf@c& (0+255),b
  9752  001062  D7E4               	goto	l12542
  9753  001064                     u14720:
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9757  001064  0E6C               	movlw	108
  9758  001066  19DE               	xorwf	fprintf@c& (0+255),w,b
  9759  001068  A4D8               	btfss	status,2,c
  9760  00106A  D00B               	goto	l12560
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;tff.c: 1849: f |= 2; c = *str++;
  9764  00106C  83D3               	bsf	fprintf@f& (0+255),1,b
  9765                           
  9766                           ; BSR set to: 0
  9767  00106E  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9768  001072  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9769  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9770  001076  6AF8               	clrf	tblptru,c
  9771  001078                     	endif
  9772  001078                     	if	0	;tblptru may be non-zero
  9773  001078                     	endif
  9774  001078  0008               	tblrd		*
  9775  00107A  CFF5 F0DE          	movff	tablat,fprintf@c
  9776                           
  9777                           ; BSR set to: 0
  9778  00107E  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9779  001080  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9780  001082                     l12560:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9784  001082  0E73               	movlw	115
  9785  001084  19DE               	xorwf	fprintf@c& (0+255),w,b
  9786  001086  A4D8               	btfss	status,2,c
  9787  001088  D014               	goto	l12566
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9791  00108A  51D9               	movf	fprintf@arp& (0+255),w,b
  9792  00108C  6ED9               	movwf	fsr2l,c
  9793  00108E  6ADA               	clrf	fsr2h,c
  9794  001090  CFDE F0AB          	movff	postinc2,fputs@str
  9795  001094  CFDD F0AC          	movff	postdec2,fputs@str+1
  9796  001098  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9797  00109C  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9798  0010A0  EC40  F028         	call	_fputs	;wreg free
  9799  0010A4  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9800  0010A8  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9801                           
  9802                           ; BSR set to: 0
  9803  0010AC  0E02               	movlw	2
  9804  0010AE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9805                           
  9806                           ;tff.c: 1853: continue;
  9807  0010B0  D108               	goto	l12652
  9808  0010B2                     l12566:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9812  0010B2  0E63               	movlw	99
  9813  0010B4  19DE               	xorwf	fprintf@c& (0+255),w,b
  9814  0010B6  A4D8               	btfss	status,2,c
  9815  0010B8  D01B               	goto	l12576
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9819  0010BA  51D9               	movf	fprintf@arp& (0+255),w,b
  9820  0010BC  6ED9               	movwf	fsr2l,c
  9821  0010BE  6ADA               	clrf	fsr2h,c
  9822  0010C0  50DF               	movf	indf2,w,c
  9823  0010C2  6FBB               	movwf	??_fprintf& (0+255),b
  9824  0010C4  51BB               	movf	??_fprintf& (0+255),w,b
  9825  0010C6  6FA4               	movwf	fputc@chr& (0+255),b
  9826  0010C8  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9827  0010CA  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9828  0010CE  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9829  0010D2  EC98  F02A         	call	_fputc	;wreg free
  9830  0010D6  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9831  0010DA  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9832                           
  9833                           ; BSR set to: 0
  9834  0010DE  0E02               	movlw	2
  9835  0010E0  27D9               	addwf	fprintf@arp& (0+255),f,b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9839  0010E2  29DA               	incf	fprintf@cc& (0+255),w,b
  9840  0010E4  E104               	bnz	u14760
  9841  0010E6  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9842  0010E8  A4D8               	btfss	status,2,c
  9843  0010EA  D77B               	goto	u14690
  9844  0010EC  D0EA               	goto	l12652
  9845  0010EE                     u14760:
  9846  0010EE  D779               	goto	u14690
  9847  0010F0                     l12576:
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9851  0010F0  0E00               	movlw	0
  9852  0010F2  6FD4               	movwf	fprintf@r& (0+255),b
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;tff.c: 1861: if (c == 'd') r = 10;
  9856  0010F4  0E64               	movlw	100
  9857  0010F6  19DE               	xorwf	fprintf@c& (0+255),w,b
  9858  0010F8  A4D8               	btfss	status,2,c
  9859  0010FA  D002               	goto	l12582
  9860                           
  9861                           ; BSR set to: 0
  9862  0010FC  0E0A               	movlw	10
  9863  0010FE  6FD4               	movwf	fprintf@r& (0+255),b
  9864  001100                     l12582:
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;tff.c: 1862: if (c == 'u') r = 10;
  9868  001100  0E75               	movlw	117
  9869  001102  19DE               	xorwf	fprintf@c& (0+255),w,b
  9870  001104  A4D8               	btfss	status,2,c
  9871  001106  D002               	goto	l12586
  9872                           
  9873                           ; BSR set to: 0
  9874  001108  0E0A               	movlw	10
  9875  00110A  6FD4               	movwf	fprintf@r& (0+255),b
  9876  00110C                     l12586:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;tff.c: 1863: if (c == 'X') r = 16;
  9880  00110C  0E58               	movlw	88
  9881  00110E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9882  001110  A4D8               	btfss	status,2,c
  9883  001112  D002               	goto	l1274
  9884                           
  9885                           ; BSR set to: 0
  9886  001114  0E10               	movlw	16
  9887  001116  6FD4               	movwf	fprintf@r& (0+255),b
  9888  001118                     l1274:
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;tff.c: 1864: if (r == 0) break;
  9892  001118  51D4               	movf	fprintf@r& (0+255),w,b
  9893  00111A  B4D8               	btfsc	status,2,c
  9894  00111C  0012               	return	
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;tff.c: 1865: if (f & 2) {
  9898  00111E  A3D3               	btfss	fprintf@f& (0+255),1,b
  9899  001120  D00D               	goto	l12596
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9903  001122  51D9               	movf	fprintf@arp& (0+255),w,b
  9904  001124  6ED9               	movwf	fsr2l,c
  9905  001126  6ADA               	clrf	fsr2h,c
  9906  001128  CFDE F0D5          	movff	postinc2,fprintf@val
  9907  00112C  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9908  001130  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9909  001134  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9910                           
  9911                           ; BSR set to: 0
  9912  001138  0E04               	movlw	4
  9913  00113A  D01F               	goto	L1
  9914  00113C                     l12596:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9918  00113C  0E64               	movlw	100
  9919  00113E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9920  001140  B4D8               	btfsc	status,2,c
  9921  001142  D00E               	goto	l12602
  9922                           
  9923                           ; BSR set to: 0
  9924  001144  51D9               	movf	fprintf@arp& (0+255),w,b
  9925  001146  6ED9               	movwf	fsr2l,c
  9926  001148  6ADA               	clrf	fsr2h,c
  9927  00114A  CFDE F0BB          	movff	postinc2,??_fprintf
  9928  00114E  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9929  001152  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9930  001156  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9931  00115A  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9932  00115C  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9933  00115E  D00C               	goto	l12604
  9934  001160                     l12602:
  9935                           
  9936                           ; BSR set to: 0
  9937  001160  51D9               	movf	fprintf@arp& (0+255),w,b
  9938  001162  6ED9               	movwf	fsr2l,c
  9939  001164  6ADA               	clrf	fsr2h,c
  9940  001166  CFDE F0D5          	movff	postinc2,fprintf@val
  9941  00116A  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9942  00116E  0E00               	movlw	0
  9943  001170  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9944  001172  0EFF               	movlw	-1
  9945  001174  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9946  001176  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9947  001178                     l12604:
  9948                           
  9949                           ; BSR set to: 0
  9950  001178  0E02               	movlw	2
  9951  00117A                     L1:
  9952  00117A  27D9               	addwf	fprintf@arp& (0+255),f,b
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9956  00117C  0E64               	movlw	100
  9957  00117E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9958  001180  A4D8               	btfss	status,2,c
  9959  001182  D00E               	goto	l12614
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;tff.c: 1872: if (val >= 0x80000000) {
  9963  001184  0E80               	movlw	128
  9964  001186  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9965  001188  A0D8               	btfss	status,0,c
  9966  00118A  D00A               	goto	l12614
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;tff.c: 1873: val = 0 - val;
  9970  00118C  6DD5               	negf	fprintf@val& (0+255),b
  9971  00118E  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9972  001190  B0D8               	btfsc	status,0,c
  9973  001192  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9974  001194  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9975  001196  B0D8               	btfsc	status,0,c
  9976  001198  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9977  00119A  0E00               	movlw	0
  9978  00119C  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;tff.c: 1874: f |= 4;
  9982  00119E  85D3               	bsf	fprintf@f& (0+255),2,b
  9983  0011A0                     l12614:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9987  0011A0  0E00               	movlw	0
  9988  0011A2  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9989  0011A4  0E0F               	movlw	15
  9990  0011A6  6FDC               	movwf	fprintf@i& (0+255),b
  9991                           
  9992                           ; BSR set to: 0
  9993  0011A8  0E00               	movlw	0
  9994  0011AA  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9995  0011AC                     l12618:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9999  0011AC  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
 10000  0011B0  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
 10001  0011B4  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
 10002  0011B8  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
 10003  0011BC  51D4               	movf	fprintf@r& (0+255),w,b
 10004  0011BE  6E0E               	movwf	___llmod@divisor^0,c
 10005  0011C0  6A0F               	clrf	(___llmod@divisor+1)^0,c
 10006  0011C2  6A10               	clrf	(___llmod@divisor+2)^0,c
 10007  0011C4  6A11               	clrf	(___llmod@divisor+3)^0,c
 10008  0011C6  ECF9  F026         	call	___llmod	;wreg free
 10009  0011CA  500A               	movf	?___llmod^0,w,c
 10010  0011CC  0F30               	addlw	48
 10011  0011CE  0100               	movlb	0	; () banked
 10012  0011D0  6FDE               	movwf	fprintf@c& (0+255),b
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;tff.c: 1880: if (c > '9') c += 7;
 10016  0011D2  0E39               	movlw	57
 10017  0011D4  65DE               	cpfsgt	fprintf@c& (0+255),b
 10018  0011D6  D002               	goto	l12624
 10019                           
 10020                           ; BSR set to: 0
 10021  0011D8  0E07               	movlw	7
 10022  0011DA  27DE               	addwf	fprintf@c& (0+255),f,b
 10023  0011DC                     l12624:
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;tff.c: 1881: s[--i] = c;
 10027  0011DC  07DC               	decf	fprintf@i& (0+255),f,b
 10028  0011DE  A0D8               	btfss	status,0,c
 10029  0011E0  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10030  0011E2  51DC               	movf	fprintf@i& (0+255),w,b
 10031  0011E4  0FBD               	addlw	low fprintf@s
 10032  0011E6  6ED9               	movwf	fsr2l,c
 10033  0011E8  6ADA               	clrf	fsr2h,c
 10034  0011EA  C0DE  FFDF         	movff	fprintf@c,indf2
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;tff.c: 1882: val /= r;
 10038  0011EE  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
 10039  0011F2  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
 10040  0011F6  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
 10041  0011FA  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
 10042  0011FE  51D4               	movf	fprintf@r& (0+255),w,b
 10043  001200  6E0E               	movwf	___lldiv@divisor^0,c
 10044  001202  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 10045  001204  6A10               	clrf	(___lldiv@divisor+2)^0,c
 10046  001206  6A11               	clrf	(___lldiv@divisor+3)^0,c
 10047  001208  ECF4  F024         	call	___lldiv	;wreg free
 10048  00120C  C00A  F0D5         	movff	?___lldiv,fprintf@val
 10049  001210  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
 10050  001214  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
 10051  001218  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
 10052                           
 10053                           ;tff.c: 1883: } while (i && val);
 10054  00121C  0100               	movlb	0	; () banked
 10055  00121E  51DC               	movf	fprintf@i& (0+255),w,b
 10056  001220  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10057  001222  B4D8               	btfsc	status,2,c
 10058  001224  D006               	goto	u14870
 10059                           
 10060                           ; BSR set to: 0
 10061  001226  51D5               	movf	fprintf@val& (0+255),w,b
 10062  001228  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
 10063  00122A  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
 10064  00122C  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
 10065  00122E  A4D8               	btfss	status,2,c
 10066  001230  D7BD               	goto	l12618
 10067  001232                     u14870:
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
 10071  001232  51DC               	movf	fprintf@i& (0+255),w,b
 10072  001234  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10073  001236  A4D8               	btfss	status,2,c
 10074                           
 10075                           ; BSR set to: 0
 10076  001238  A5D3               	btfss	fprintf@f& (0+255),2,b
 10077  00123A  D009               	goto	l12638
 10078                           
 10079                           ; BSR set to: 0
 10080  00123C  07DC               	decf	fprintf@i& (0+255),f,b
 10081  00123E  A0D8               	btfss	status,0,c
 10082  001240  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10083  001242  51DC               	movf	fprintf@i& (0+255),w,b
 10084  001244  0FBD               	addlw	low fprintf@s
 10085  001246  6ED9               	movwf	fsr2l,c
 10086  001248  6ADA               	clrf	fsr2h,c
 10087  00124A  0E2D               	movlw	45
 10088  00124C  6EDF               	movwf	indf2,c
 10089  00124E                     l12638:
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
 10093  00124E  51D1               	movf	fprintf@w& (0+255),w,b
 10094  001250  080F               	sublw	15
 10095  001252  6FD1               	movwf	fprintf@w& (0+255),b
 10096  001254  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10097  001256  A0D8               	btfss	status,0,c
 10098  001258  2AE8               	incf	wreg,f,c
 10099  00125A  0800               	sublw	0
 10100  00125C  6FD2               	movwf	(fprintf@w+1)& (0+255),b
 10101                           
 10102                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
 10103  00125E  D013               	goto	l12646
 10104  001260                     l1291:
 10105                           
 10106                           ; BSR set to: 0
 10107  001260  B1D3               	btfsc	fprintf@f& (0+255),0,b
 10108  001262  D004               	goto	l12642
 10109                           
 10110                           ; BSR set to: 0
 10111  001264  0E00               	movlw	0
 10112  001266  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10113  001268  0E20               	movlw	32
 10114  00126A  D003               	goto	L2
 10115  00126C                     l12642:
 10116                           
 10117                           ; BSR set to: 0
 10118  00126C  0E00               	movlw	0
 10119  00126E  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10120  001270  0E30               	movlw	48
 10121  001272                     L2:
 10122  001272  6FCF               	movwf	_fprintf$2226& (0+255),b
 10123                           
 10124                           ; BSR set to: 0
 10125  001274  07DC               	decf	fprintf@i& (0+255),f,b
 10126  001276  A0D8               	btfss	status,0,c
 10127  001278  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10128  00127A  51DC               	movf	fprintf@i& (0+255),w,b
 10129  00127C  0FBD               	addlw	low fprintf@s
 10130  00127E  6ED9               	movwf	fsr2l,c
 10131  001280  6ADA               	clrf	fsr2h,c
 10132  001282  C0CF  FFDF         	movff	_fprintf$2226,indf2
 10133  001286                     l12646:
 10134                           
 10135                           ; BSR set to: 0
 10136  001286  51DC               	movf	fprintf@i& (0+255),w,b
 10137  001288  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10138  00128A  B4D8               	btfsc	status,2,c
 10139  00128C  D00A               	goto	u14920
 10140                           
 10141                           ; BSR set to: 0
 10142  00128E  51DC               	movf	fprintf@i& (0+255),w,b
 10143  001290  5DD1               	subwf	fprintf@w& (0+255),w,b
 10144  001292  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10145  001294  0A80               	xorlw	128
 10146  001296  6FBB               	movwf	??_fprintf& (0+255),b
 10147  001298  51DD               	movf	(fprintf@i+1)& (0+255),w,b
 10148  00129A  0A80               	xorlw	128
 10149  00129C  59BB               	subwfb	??_fprintf& (0+255),w,b
 10150  00129E  A0D8               	btfss	status,0,c
 10151  0012A0  D7DF               	goto	l1291
 10152  0012A2                     u14920:
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;tff.c: 1887: cc = fputs(&s[i], fil);
 10156  0012A2  51DC               	movf	fprintf@i& (0+255),w,b
 10157  0012A4  0FBD               	addlw	low fprintf@s
 10158  0012A6  6FBB               	movwf	??_fprintf& (0+255),b
 10159  0012A8  C0BB  F0AB         	movff	??_fprintf,fputs@str
 10160  0012AC  6BAC               	clrf	(fputs@str+1)& (0+255),b
 10161  0012AE  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
 10162  0012B2  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
 10163  0012B6  EC40  F028         	call	_fputs	;wreg free
 10164  0012BA  C0AB  F0DA         	movff	?_fputs,fprintf@cc
 10165  0012BE  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
 10166  0012C2                     l12652:
 10167                           
 10168                           ; BSR set to: 0
 10169  0012C2  51DA               	movf	fprintf@cc& (0+255),w,b
 10170  0012C4  27CD               	addwf	fprintf@res& (0+255),f,b
 10171  0012C6  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
 10172  0012C8  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
 10173  0012CA  D663               	goto	l12508
 10174  0012CC                     __end_of_fprintf:
 10175                           	callstack 0
 10176                           
 10177 ;; *************** function _fputs *****************
 10178 ;; Defined at:
 10179 ;;		line 1796 in file "bibliotecas/tff.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  str             2   75[BANK0 ] PTR const unsigned char 
 10182 ;;		 -> fprintf@s(16), ?_fprintf(2), lo(13), lt(12), 
 10183 ;;		 -> vel(6), hora(7), 
 10184 ;;  fil             2   77[BANK0 ] PTR struct _FIL
 10185 ;;		 -> fil(28), 
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;  n               2   79[BANK0 ] int 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  2   75[BANK0 ] int 
 10190 ;; Registers used:
 10191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10192 ;; Tracked objects:
 10193 ;;		On entry : 3F/0
 10194 ;;		On exit  : 3F/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10197 ;;      Params:         0       4       0       0       0       0       0       0       0
 10198 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10199 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10200 ;;      Totals:         1       6       0       0       0       0       0       0       0
 10201 ;;Total ram usage:        7 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:   12
 10204 ;; This function calls:
 10205 ;;		_fputc
 10206 ;; This function is called by:
 10207 ;;		_fprintf
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text66
 10212  005080                     __ptext66:
 10213                           	callstack 0
 10214  005080                     _fputs:
 10215                           	callstack 13
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;incstack = 0
 10222  005080  0E00               	movlw	0
 10223  005082  6FB0               	movwf	(fputs@n+1)& (0+255),b
 10224  005084  0E00               	movlw	0
 10225  005086  6FAF               	movwf	fputs@n& (0+255),b
 10226  005088  D01B               	goto	l12082
 10227  00508A                     l12076:
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
 10231  00508A  C0AB  FFD9         	movff	fputs@str,fsr2l
 10232  00508E  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10233  005092  50DF               	movf	indf2,w,c
 10234  005094  6E4C               	movwf	??_fputs^0,c
 10235  005096  504C               	movf	??_fputs^0,w,c
 10236  005098  6FA4               	movwf	fputc@chr& (0+255),b
 10237  00509A  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10238  00509C  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10239  0050A0  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10240  0050A4  EC98  F02A         	call	_fputc	;wreg free
 10241  0050A8  29A4               	incf	?_fputc& (0+255),w,b
 10242  0050AA  E106               	bnz	l12080
 10243  0050AC  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10244  0050AE  A4D8               	btfss	status,2,c
 10245  0050B0  D003               	goto	l12080
 10246                           
 10247                           ; BSR set to: 0
 10248  0050B2  69AB               	setf	?_fputs& (0+255),b
 10249  0050B4  69AC               	setf	(?_fputs+1)& (0+255),b
 10250  0050B6  0012               	return	
 10251  0050B8                     l12080:
 10252                           
 10253                           ; BSR set to: 0
 10254  0050B8  4BAB               	infsnz	fputs@str& (0+255),f,b
 10255  0050BA  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10256  0050BC  4BAF               	infsnz	fputs@n& (0+255),f,b
 10257  0050BE  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10258  0050C0                     l12082:
 10259                           
 10260                           ; BSR set to: 0
 10261  0050C0  C0AB  FFD9         	movff	fputs@str,fsr2l
 10262  0050C4  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10263  0050C8  50DF               	movf	indf2,w,c
 10264  0050CA  A4D8               	btfss	status,2,c
 10265  0050CC  D7DE               	goto	l12076
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;tff.c: 1806: };tff.c: 1807: return n;
 10269  0050CE  C0AF  F0AB         	movff	fputs@n,?_fputs
 10270  0050D2  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10271                           
 10272                           ; BSR set to: 0
 10273  0050D6  0012               	return		;funcret
 10274  0050D8                     __end_of_fputs:
 10275                           	callstack 0
 10276                           
 10277 ;; *************** function _fputc *****************
 10278 ;; Defined at:
 10279 ;;		line 1769 in file "bibliotecas/tff.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  chr             2   68[BANK0 ] int 
 10282 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10283 ;;		 -> fil(28), 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;  bw              2   73[BANK0 ] unsigned int 
 10286 ;;  c               1   72[BANK0 ] unsigned char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  2   68[BANK0 ] int 
 10289 ;; Registers used:
 10290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 3F/0
 10293 ;;		On exit  : 3F/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10296 ;;      Params:         0       4       0       0       0       0       0       0       0
 10297 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10299 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10300 ;;Total ram usage:        7 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:   11
 10303 ;; This function calls:
 10304 ;;		_f_write
 10305 ;; This function is called by:
 10306 ;;		_fputs
 10307 ;;		_fprintf
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text67
 10312  005530                     __ptext67:
 10313                           	callstack 0
 10314  005530                     _fputc:
 10315                           	callstack 13
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;incstack = 0
 10322  005530  51A6               	movf	fputc@fil& (0+255),w,b
 10323  005532  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10324  005534  A4D8               	btfss	status,2,c
 10325  005536  D005               	goto	l1241
 10326  005538                     u13270:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;tff.c: 1783: return chr;
 10330  005538  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10331  00553C  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10332  005540  0012               	return	
 10333  005542                     l1241:
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10337  005542  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10338                           
 10339                           ; BSR set to: 0
 10340                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10341  005546  C0A6  F086         	movff	fputc@fil,f_write@fp
 10342  00554A  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10343  00554E  0EA8               	movlw	low fputc@c
 10344  005550  6F88               	movwf	f_write@buff& (0+255),b
 10345  005552  0E00               	movlw	0
 10346  005554  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10347  005556  0E01               	movlw	1
 10348  005558  6F89               	movwf	f_write@btw& (0+255),b
 10349  00555A  0EA9               	movlw	low fputc@bw
 10350  00555C  6F8B               	movwf	f_write@bw& (0+255),b
 10351  00555E  EC09  F000         	call	_f_write	;wreg free
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;tff.c: 1787: return bw ? chr : -1;
 10355  005562  51A9               	movf	fputc@bw& (0+255),w,b
 10356  005564  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10357  005566  A4D8               	btfss	status,2,c
 10358  005568  D7E7               	goto	u13270
 10359                           
 10360                           ; BSR set to: 0
 10361  00556A  69A4               	setf	?_fputc& (0+255),b
 10362  00556C  69A5               	setf	(?_fputc+1)& (0+255),b
 10363                           
 10364                           ; BSR set to: 0
 10365  00556E  0012               	return		;funcret
 10366  005570                     __end_of_fputc:
 10367                           	callstack 0
 10368                           
 10369 ;; *************** function _f_write *****************
 10370 ;; Defined at:
 10371 ;;		line 999 in file "bibliotecas/tff.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10374 ;;		 -> fil(28), 
 10375 ;;  buff            1   40[BANK0 ] PTR const void 
 10376 ;;		 -> fputc@c(1), 
 10377 ;;  btw             2   41[BANK0 ] unsigned int 
 10378 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10379 ;;		 -> fputc@bw(2), 
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;  sect            4   58[BANK0 ] unsigned long 
 10382 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10383 ;;  clust           2   64[BANK0 ] unsigned short 
 10384 ;;  cc              2   62[BANK0 ] unsigned int 
 10385 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10386 ;;		 -> fputc@c(1), 
 10387 ;;  res             1   56[BANK0 ] enum E155
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      enum E155
 10390 ;; Registers used:
 10391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 3F/0
 10394 ;;		On exit  : 3F/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10397 ;;      Params:         0       6       0       0       0       0       0       0       0
 10398 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10399 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10400 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10401 ;;Total ram usage:       30 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; Hardware stack levels required when called:   10
 10404 ;; This function calls:
 10405 ;;		_clust2sect
 10406 ;;		_create_chain
 10407 ;;		_disk_write
 10408 ;;		_memcpy
 10409 ;;		_move_window
 10410 ;;		_validate
 10411 ;; This function is called by:
 10412 ;;		_fputc
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text68
 10417  000012                     __ptext68:
 10418                           	callstack 0
 10419  000012                     _f_write:
 10420                           	callstack 13
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;incstack = 0
 10427  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;tff.c: 1013: *bw = 0;
 10431  000016  518B               	movf	f_write@bw& (0+255),w,b
 10432  000018  6ED9               	movwf	fsr2l,c
 10433  00001A  6ADA               	clrf	fsr2h,c
 10434  00001C  0E00               	movlw	0
 10435  00001E  6EDE               	movwf	postinc2,c
 10436  000020  0E00               	movlw	0
 10437  000022  6EDD               	movwf	postdec2,c
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10441  000024  EE20 F004          	lfsr	2,4
 10442  000028  5186               	movf	f_write@fp& (0+255),w,b
 10443  00002A  26D9               	addwf	fsr2l,f,c
 10444  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10445  00002E  22DA               	addwfc	fsr2h,f,c
 10446  000030  CFDE F010          	movff	postinc2,validate@fs
 10447  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10448  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10449  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10450  000040  CFDE F012          	movff	postinc2,validate@id
 10451  000044  CFDD F013          	movff	postdec2,validate@id+1
 10452  000048  ECCC  F029         	call	_validate	;wreg free
 10453  00004C  0100               	movlb	0	; () banked
 10454  00004E  6F98               	movwf	f_write@res& (0+255),b
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;tff.c: 1015: if (res != FR_OK) return res;
 10458  000050  5198               	movf	f_write@res& (0+255),w,b
 10459  000052  A4D8               	btfss	status,2,c
 10460  000054  0012               	return	
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10464  000056  EE20 F002          	lfsr	2,2
 10465  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10466  00005C  26D9               	addwf	fsr2l,f,c
 10467  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10468  000060  22DA               	addwfc	fsr2h,f,c
 10469  000062  BEDF               	btfsc	indf2,7,c
 10470  000064  0012               	return	
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10474  000066  EE20 F002          	lfsr	2,2
 10475  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10476  00006C  26D9               	addwf	fsr2l,f,c
 10477  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10478  000070  22DA               	addwfc	fsr2h,f,c
 10479  000072  A2DF               	btfss	indf2,1,c
 10480  000074  0012               	return	
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10484  000076  EE20 F00A          	lfsr	2,10
 10485  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10486  00007C  26D9               	addwf	fsr2l,f,c
 10487  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10488  000080  22DA               	addwfc	fsr2h,f,c
 10489  000082  EE10 F00A          	lfsr	1,10
 10490  000086  5186               	movf	f_write@fp& (0+255),w,b
 10491  000088  26E1               	addwf	fsr1l,f,c
 10492  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10493  00008C  22E2               	addwfc	fsr1h,f,c
 10494  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10495  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10496  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10497  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10498  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10499  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10500  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10501  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10502  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10503  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10504  0000AA  0E00               	movlw	0
 10505  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10506  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10507  0000B0  0E00               	movlw	0
 10508  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10509  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10510  0000B6  50DE               	movf	postinc2,w,c
 10511  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10512  0000BA  50DE               	movf	postinc2,w,c
 10513  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10514  0000BE  50DE               	movf	postinc2,w,c
 10515  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10516  0000C2  50DE               	movf	postinc2,w,c
 10517  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10518  0000C6  A0D8               	btfss	status,0,c
 10519  0000C8  0012               	return	
 10520  0000CA  D22D               	goto	l11278
 10521  0000CC                     l11202:
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10525  0000CC  EE20 F006          	lfsr	2,6
 10526  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10527  0000D2  26D9               	addwf	fsr2l,f,c
 10528  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10529  0000D6  22DA               	addwfc	fsr2h,f,c
 10530  0000D8  0EFF               	movlw	255
 10531  0000DA  14DE               	andwf	postinc2,w,c
 10532  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10533  0000DE  0E01               	movlw	1
 10534  0000E0  14DE               	andwf	postinc2,w,c
 10535  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10536  0000E4  0E00               	movlw	0
 10537  0000E6  14DE               	andwf	postinc2,w,c
 10538  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10539  0000EA  0E00               	movlw	0
 10540  0000EC  14DE               	andwf	postinc2,w,c
 10541  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10542  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10543  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10544  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10545  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10546  0000F8  A4D8               	btfss	status,2,c
 10547  0000FA  D15E               	goto	l11254
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10551  0000FC  EE20 F004          	lfsr	2,4
 10552  000100  5186               	movf	f_write@fp& (0+255),w,b
 10553  000102  26D9               	addwf	fsr2l,f,c
 10554  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10555  000106  22DA               	addwfc	fsr2h,f,c
 10556  000108  EE10 F01D          	lfsr	1,29
 10557  00010C  50DE               	movf	postinc2,w,c
 10558  00010E  26E1               	addwf	fsr1l,f,c
 10559  000110  50DD               	movf	postdec2,w,c
 10560  000112  22E2               	addwfc	fsr1h,f,c
 10561  000114  EE20 F003          	lfsr	2,3
 10562  000118  5186               	movf	f_write@fp& (0+255),w,b
 10563  00011A  26D9               	addwf	fsr2l,f,c
 10564  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10565  00011E  22DA               	addwfc	fsr2h,f,c
 10566  000120  50E6               	movf	postinc1,w,c
 10567  000122  5CDE               	subwf	postinc2,w,c
 10568  000124  A0D8               	btfss	status,0,c
 10569  000126  D06B               	goto	l11226
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;tff.c: 1024: if (fp->fptr == 0) {
 10573  000128  EE20 F006          	lfsr	2,6
 10574  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10575  00012E  26D9               	addwf	fsr2l,f,c
 10576  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10577  000132  22DA               	addwfc	fsr2h,f,c
 10578  000134  50DE               	movf	postinc2,w,c
 10579  000136  10DE               	iorwf	postinc2,w,c
 10580  000138  10DE               	iorwf	postinc2,w,c
 10581  00013A  10DE               	iorwf	postinc2,w,c
 10582  00013C  A4D8               	btfss	status,2,c
 10583  00013E  D023               	goto	l11214
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;tff.c: 1025: clust = fp->org_clust;
 10587  000140  EE20 F00E          	lfsr	2,14
 10588  000144  5186               	movf	f_write@fp& (0+255),w,b
 10589  000146  26D9               	addwf	fsr2l,f,c
 10590  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10591  00014A  22DA               	addwfc	fsr2h,f,c
 10592  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10593  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;tff.c: 1026: if (clust == 0)
 10597  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10598  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10599  000158  A4D8               	btfss	status,2,c
 10600  00015A  D025               	goto	l11216
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10604  00015C  0E00               	movlw	0
 10605  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10606  000160  0E00               	movlw	0
 10607  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10608  000164  ECBB  F016         	call	_create_chain	;wreg free
 10609  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10610  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10611  000170  EE20 F00E          	lfsr	2,14
 10612  000174  5186               	movf	f_write@fp& (0+255),w,b
 10613  000176  26D9               	addwf	fsr2l,f,c
 10614  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10615  00017A  22DA               	addwfc	fsr2h,f,c
 10616  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10617  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10618  000184  D010               	goto	l11216
 10619  000186                     l11214:
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10623  000186  EE20 F010          	lfsr	2,16
 10624  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10625  00018C  26D9               	addwf	fsr2l,f,c
 10626  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10627  000190  22DA               	addwfc	fsr2h,f,c
 10628  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10629  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10630  00019A  ECBB  F016         	call	_create_chain	;wreg free
 10631  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10632  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10633  0001A6                     l11216:
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10637  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10638  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10639  0001AA  B4D8               	btfsc	status,2,c
 10640  0001AC  D1C0               	goto	u12750
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10644  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10645  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10646  0001B2  B4D8               	btfsc	status,2,c
 10647  0001B4  D1EF               	goto	l11288
 10648                           
 10649                           ; BSR set to: 0
 10650  0001B6  EE20 F004          	lfsr	2,4
 10651  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10652  0001BC  26D9               	addwf	fsr2l,f,c
 10653  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10654  0001C0  22DA               	addwfc	fsr2h,f,c
 10655  0001C2  EE10 F016          	lfsr	1,22
 10656  0001C6  50DE               	movf	postinc2,w,c
 10657  0001C8  26E1               	addwf	fsr1l,f,c
 10658  0001CA  50DD               	movf	postdec2,w,c
 10659  0001CC  22E2               	addwfc	fsr1h,f,c
 10660  0001CE  50E6               	movf	postinc1,w,c
 10661  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10662  0001D2  50E6               	movf	postinc1,w,c
 10663  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10664  0001D6  B0D8               	btfsc	status,0,c
 10665  0001D8  D1DD               	goto	l11288
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;tff.c: 1033: fp->curr_clust = clust;
 10669  0001DA  EE20 F010          	lfsr	2,16
 10670  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10671  0001E0  26D9               	addwf	fsr2l,f,c
 10672  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10673  0001E4  22DA               	addwfc	fsr2h,f,c
 10674  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10675  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10676                           
 10677                           ;tff.c: 1034: fp->csect = 0;
 10678  0001EE  EE20 F003          	lfsr	2,3
 10679  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10680  0001F4  26D9               	addwf	fsr2l,f,c
 10681  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10682  0001F8  22DA               	addwfc	fsr2h,f,c
 10683  0001FA  0E00               	movlw	0
 10684  0001FC  6EDF               	movwf	indf2,c
 10685  0001FE                     l11226:
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10689  0001FE  EE20 F010          	lfsr	2,16
 10690  000202  5186               	movf	f_write@fp& (0+255),w,b
 10691  000204  26D9               	addwf	fsr2l,f,c
 10692  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10693  000208  22DA               	addwfc	fsr2h,f,c
 10694  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10695  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10696  000212  EC04  F021         	call	_clust2sect	;wreg free
 10697  000216  0100               	movlb	0	; () banked
 10698  000218  EE20 F003          	lfsr	2,3
 10699  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10700  00021E  26D9               	addwf	fsr2l,f,c
 10701  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10702  000222  22DA               	addwfc	fsr2h,f,c
 10703  000224  50DF               	movf	indf2,w,c
 10704  000226  6F8C               	movwf	??_f_write& (0+255),b
 10705  000228  518C               	movf	??_f_write& (0+255),w,b
 10706  00022A  2416               	addwf	?_clust2sect^0,w,c
 10707  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10708  00022E  0E00               	movlw	0
 10709  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10710  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10711  000234  0E00               	movlw	0
 10712  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10713  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10714  00023A  0E00               	movlw	0
 10715  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10716  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;tff.c: 1037: cc = btw / 512U;
 10720  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10721  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10722  000248  0E09               	movlw	9
 10723  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10724  00024C                     u12665:
 10725  00024C  90D8               	bcf	status,0,c
 10726  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10727  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10728  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10729  000254  D7FB               	goto	u12665
 10730  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10731  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;tff.c: 1038: if (cc) {
 10735  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10736  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10737  000262  B4D8               	btfsc	status,2,c
 10738  000264  D06A               	goto	l11244
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10742  000266  EE20 F003          	lfsr	2,3
 10743  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10744  00026C  26D9               	addwf	fsr2l,f,c
 10745  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10746  000270  22DA               	addwfc	fsr2h,f,c
 10747  000272  50DF               	movf	indf2,w,c
 10748  000274  6F8C               	movwf	??_f_write& (0+255),b
 10749  000276  518C               	movf	??_f_write& (0+255),w,b
 10750  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10751  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10752  00027C  0E00               	movlw	0
 10753  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10754  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10755  000282  EE20 F004          	lfsr	2,4
 10756  000286  5186               	movf	f_write@fp& (0+255),w,b
 10757  000288  26D9               	addwf	fsr2l,f,c
 10758  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10759  00028C  22DA               	addwfc	fsr2h,f,c
 10760  00028E  EE10 F01D          	lfsr	1,29
 10761  000292  50DE               	movf	postinc2,w,c
 10762  000294  26E1               	addwf	fsr1l,f,c
 10763  000296  50DD               	movf	postdec2,w,c
 10764  000298  22E2               	addwfc	fsr1h,f,c
 10765  00029A  50E7               	movf	indf1,w,c
 10766  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10767  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10768  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10769  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10770  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10771  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10772  0002A8  B0D8               	btfsc	status,0,c
 10773  0002AA  D01C               	goto	l11236
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10777  0002AC  EE20 F004          	lfsr	2,4
 10778  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10779  0002B2  26D9               	addwf	fsr2l,f,c
 10780  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10781  0002B6  22DA               	addwfc	fsr2h,f,c
 10782  0002B8  EE10 F01D          	lfsr	1,29
 10783  0002BC  50DE               	movf	postinc2,w,c
 10784  0002BE  26E1               	addwf	fsr1l,f,c
 10785  0002C0  50DD               	movf	postdec2,w,c
 10786  0002C2  22E2               	addwfc	fsr1h,f,c
 10787  0002C4  50E7               	movf	indf1,w,c
 10788  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10789  0002C8  EE20 F003          	lfsr	2,3
 10790  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10791  0002CE  26D9               	addwf	fsr2l,f,c
 10792  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10793  0002D2  22DA               	addwfc	fsr2h,f,c
 10794  0002D4  50DF               	movf	indf2,w,c
 10795  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10796  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10797  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10798  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10799  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10800  0002E0  A0D8               	btfss	status,0,c
 10801  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10802  0002E4                     l11236:
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10806  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10807  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10808  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10809  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10810  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10811  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10812  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10813  0002FE  0E00               	movlw	0
 10814  000300  EC3A  F029         	call	_disk_write
 10815  000304  0900               	iorlw	0
 10816  000306  A4D8               	btfss	status,2,c
 10817  000308  D145               	goto	l11288
 10818                           
 10819                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10820  00030A  0100               	movlb	0	; () banked
 10821  00030C  EE20 F003          	lfsr	2,3
 10822  000310  5186               	movf	f_write@fp& (0+255),w,b
 10823  000312  26D9               	addwf	fsr2l,f,c
 10824  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10825  000316  22DA               	addwfc	fsr2h,f,c
 10826  000318  519E               	movf	f_write@cc& (0+255),w,b
 10827  00031A  26DF               	addwf	indf2,f,c
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;tff.c: 1044: wcnt = 512U * cc;
 10831  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10832  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10833  000324  0E09               	movlw	9
 10834  000326                     u12705:
 10835  000326  90D8               	bcf	status,0,c
 10836  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10837  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10838  00032C  2EE8               	decfsz	wreg,f,c
 10839  00032E  D7FB               	goto	u12705
 10840  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10841  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10842                           
 10843                           ;tff.c: 1045: continue;
 10844  000338  D0DC               	goto	l11270
 10845  00033A                     l11244:
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10849  00033A  EE20 F00A          	lfsr	2,10
 10850  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10851  000340  26D9               	addwf	fsr2l,f,c
 10852  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10853  000344  22DA               	addwfc	fsr2h,f,c
 10854  000346  EE10 F006          	lfsr	1,6
 10855  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10856  00034C  26E1               	addwf	fsr1l,f,c
 10857  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10858  000350  22E2               	addwfc	fsr1h,f,c
 10859  000352  50DE               	movf	postinc2,w,c
 10860  000354  5CE6               	subwf	postinc1,w,c
 10861  000356  50DE               	movf	postinc2,w,c
 10862  000358  58E6               	subwfb	postinc1,w,c
 10863  00035A  50DE               	movf	postinc2,w,c
 10864  00035C  58E6               	subwfb	postinc1,w,c
 10865  00035E  50DE               	movf	postinc2,w,c
 10866  000360  58E6               	subwfb	postinc1,w,c
 10867  000362  A0D8               	btfss	status,0,c
 10868  000364  D022               	goto	l11252
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10872  000366  0E00               	movlw	0
 10873  000368  6E35               	movwf	move_window@sector^0,c
 10874  00036A  0E00               	movlw	0
 10875  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10876  00036E  0E00               	movlw	0
 10877  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10878  000372  0E00               	movlw	0
 10879  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10880  000376  EC15  F015         	call	_move_window	;wreg free
 10881  00037A  0900               	iorlw	0
 10882  00037C  B4D8               	btfsc	status,2,c
 10883  00037E  D10A               	goto	l11288
 10884                           
 10885                           ;tff.c: 1049: fp->fs->winsect = sect;
 10886  000380  0100               	movlb	0	; () banked
 10887  000382  EE20 F004          	lfsr	2,4
 10888  000386  5186               	movf	f_write@fp& (0+255),w,b
 10889  000388  26D9               	addwf	fsr2l,f,c
 10890  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10891  00038C  22DA               	addwfc	fsr2h,f,c
 10892  00038E  EE10 F004          	lfsr	1,4
 10893  000392  50DE               	movf	postinc2,w,c
 10894  000394  26E1               	addwf	fsr1l,f,c
 10895  000396  50DD               	movf	postdec2,w,c
 10896  000398  22E2               	addwfc	fsr1h,f,c
 10897  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10898  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10899  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10900  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10901  0003AA                     l11252:
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10905  0003AA  EE20 F003          	lfsr	2,3
 10906  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10907  0003B0  26D9               	addwf	fsr2l,f,c
 10908  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10909  0003B4  22DA               	addwfc	fsr2h,f,c
 10910  0003B6  2ADF               	incf	indf2,f,c
 10911  0003B8                     l11254:
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10915  0003B8  EE20 F010          	lfsr	2,16
 10916  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10917  0003BE  26D9               	addwf	fsr2l,f,c
 10918  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10919  0003C2  22DA               	addwfc	fsr2h,f,c
 10920  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10921  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10922  0003CC  EC04  F021         	call	_clust2sect	;wreg free
 10923  0003D0  0100               	movlb	0	; () banked
 10924  0003D2  EE20 F003          	lfsr	2,3
 10925  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10926  0003D8  26D9               	addwf	fsr2l,f,c
 10927  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10928  0003DC  22DA               	addwfc	fsr2h,f,c
 10929  0003DE  50DF               	movf	indf2,w,c
 10930  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10931  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10932  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10933  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10934  0003E8  0E00               	movlw	0
 10935  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10936  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10937  0003EE  0E00               	movlw	0
 10938  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10939  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10940  0003F4  0E00               	movlw	0
 10941  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10942  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10943  0003FA  0EFF               	movlw	255
 10944  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10945  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10946  000400  0EFF               	movlw	255
 10947  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10948  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10949  000406  0EFF               	movlw	255
 10950  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10951  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10952  00040C  0EFF               	movlw	255
 10953  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10954  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10958  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10959  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10960  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10961  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10962  000422  EC15  F015         	call	_move_window	;wreg free
 10963  000426  0900               	iorlw	0
 10964  000428  B4D8               	btfsc	status,2,c
 10965  00042A  D0B4               	goto	l11288
 10966                           
 10967                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10968  00042C  0EFF               	movlw	255
 10969  00042E  0100               	movlb	0	; () banked
 10970  000430  6F8C               	movwf	??_f_write& (0+255),b
 10971  000432  0E01               	movlw	1
 10972  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10973  000436  EE20 F006          	lfsr	2,6
 10974  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10975  00043C  26D9               	addwf	fsr2l,f,c
 10976  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10977  000440  22DA               	addwfc	fsr2h,f,c
 10978  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10979  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10980  00044A  518C               	movf	??_f_write& (0+255),w,b
 10981  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10982  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10983  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10984  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10985  000454  0800               	sublw	0
 10986  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10987  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10988  00045A  A0D8               	btfss	status,0,c
 10989  00045C  2AE8               	incf	wreg,f,c
 10990  00045E  0802               	sublw	2
 10991  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10995  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10996  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10997  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10998  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10999  00046A  B0D8               	btfsc	status,0,c
 11000  00046C  D004               	goto	l11266
 11001                           
 11002                           ; BSR set to: 0
 11003  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 11004  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 11005  000476                     l11266:
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 11009  000476  0EFF               	movlw	255
 11010  000478  6F8C               	movwf	??_f_write& (0+255),b
 11011  00047A  0E01               	movlw	1
 11012  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 11013  00047E  EE20 F006          	lfsr	2,6
 11014  000482  5186               	movf	f_write@fp& (0+255),w,b
 11015  000484  26D9               	addwf	fsr2l,f,c
 11016  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11017  000488  22DA               	addwfc	fsr2h,f,c
 11018  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 11019  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 11020  000492  518C               	movf	??_f_write& (0+255),w,b
 11021  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 11022  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 11023  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 11024  00049A  EE20 F004          	lfsr	2,4
 11025  00049E  5186               	movf	f_write@fp& (0+255),w,b
 11026  0004A0  26D9               	addwf	fsr2l,f,c
 11027  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11028  0004A4  22DA               	addwfc	fsr2h,f,c
 11029  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 11030  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 11031  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 11032  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 11033  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 11034  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 11035  0004B6  0E20               	movlw	32
 11036  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 11037  0004BA  6E0A               	movwf	memcpy@d1^0,c
 11038  0004BC  0E00               	movlw	0
 11039  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 11040  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 11041  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 11042  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 11043  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 11044  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 11045  0004D0  EC13  F02A         	call	_memcpy	;wreg free
 11046                           
 11047                           ;tff.c: 1058: fp->fs->winflag = 1;
 11048  0004D4  0100               	movlb	0	; () banked
 11049  0004D6  EE20 F004          	lfsr	2,4
 11050  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 11051  0004DC  26D9               	addwf	fsr2l,f,c
 11052  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11053  0004E0  22DA               	addwfc	fsr2h,f,c
 11054  0004E2  EE10 F01F          	lfsr	1,31
 11055  0004E6  50DE               	movf	postinc2,w,c
 11056  0004E8  26E1               	addwf	fsr1l,f,c
 11057  0004EA  50DD               	movf	postdec2,w,c
 11058  0004EC  22E2               	addwfc	fsr1h,f,c
 11059  0004EE  0E01               	movlw	1
 11060  0004F0  6EE7               	movwf	indf1,c
 11061  0004F2                     l11270:
 11062                           
 11063                           ; BSR set to: 0
 11064  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 11065  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 11066                           
 11067                           ; BSR set to: 0
 11068  0004F6  EE20 F006          	lfsr	2,6
 11069  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 11070  0004FC  26D9               	addwf	fsr2l,f,c
 11071  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11072  000500  22DA               	addwfc	fsr2h,f,c
 11073  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 11074  000504  26DE               	addwf	postinc2,f,c
 11075  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11076  000508  22DE               	addwfc	postinc2,f,c
 11077  00050A  0E00               	movlw	0
 11078  00050C  22DE               	addwfc	postinc2,f,c
 11079  00050E  22DE               	addwfc	postinc2,f,c
 11080                           
 11081                           ; BSR set to: 0
 11082  000510  518B               	movf	f_write@bw& (0+255),w,b
 11083  000512  6ED9               	movwf	fsr2l,c
 11084  000514  6ADA               	clrf	fsr2h,c
 11085  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 11086  000518  26DE               	addwf	postinc2,f,c
 11087  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11088  00051C  22DD               	addwfc	postdec2,f,c
 11089                           
 11090                           ; BSR set to: 0
 11091  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 11092  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 11093  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11094  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 11095  000526                     l11278:
 11096                           
 11097                           ; BSR set to: 0
 11098  000526  5189               	movf	f_write@btw& (0+255),w,b
 11099  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 11100  00052A  A4D8               	btfss	status,2,c
 11101  00052C  D5CF               	goto	l11202
 11102  00052E                     u12750:
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 11106  00052E  EE20 F006          	lfsr	2,6
 11107  000532  5186               	movf	f_write@fp& (0+255),w,b
 11108  000534  26D9               	addwf	fsr2l,f,c
 11109  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11110  000538  22DA               	addwfc	fsr2h,f,c
 11111  00053A  EE10 F00A          	lfsr	1,10
 11112  00053E  5186               	movf	f_write@fp& (0+255),w,b
 11113  000540  26E1               	addwf	fsr1l,f,c
 11114  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11115  000544  22E2               	addwfc	fsr1h,f,c
 11116  000546  50DE               	movf	postinc2,w,c
 11117  000548  5CE6               	subwf	postinc1,w,c
 11118  00054A  50DE               	movf	postinc2,w,c
 11119  00054C  58E6               	subwfb	postinc1,w,c
 11120  00054E  50DE               	movf	postinc2,w,c
 11121  000550  58E6               	subwfb	postinc1,w,c
 11122  000552  50DE               	movf	postinc2,w,c
 11123  000554  58E6               	subwfb	postinc1,w,c
 11124  000556  B0D8               	btfsc	status,0,c
 11125  000558  D014               	goto	l11284
 11126                           
 11127                           ; BSR set to: 0
 11128  00055A  EE20 F006          	lfsr	2,6
 11129  00055E  5186               	movf	f_write@fp& (0+255),w,b
 11130  000560  26D9               	addwf	fsr2l,f,c
 11131  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11132  000564  22DA               	addwfc	fsr2h,f,c
 11133  000566  EE10 F00A          	lfsr	1,10
 11134  00056A  5186               	movf	f_write@fp& (0+255),w,b
 11135  00056C  26E1               	addwf	fsr1l,f,c
 11136  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11137  000570  22E2               	addwfc	fsr1h,f,c
 11138  000572  CFDE FFE6          	movff	postinc2,postinc1
 11139  000576  CFDE FFE6          	movff	postinc2,postinc1
 11140  00057A  CFDE FFE6          	movff	postinc2,postinc1
 11141  00057E  CFDE FFE6          	movff	postinc2,postinc1
 11142  000582                     l11284:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;tff.c: 1062: fp->flag |= 0x20;
 11146  000582  EE20 F002          	lfsr	2,2
 11147  000586  5186               	movf	f_write@fp& (0+255),w,b
 11148  000588  26D9               	addwf	fsr2l,f,c
 11149  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11150  00058C  22DA               	addwfc	fsr2h,f,c
 11151  00058E  0E00               	movlw	0
 11152  000590  8ADB               	bsf	plusw2,5,c
 11153  000592  0012               	return	
 11154  000594                     l11288:
 11155                           
 11156                           ;tff.c: 1066: fp->flag |= 0x80;
 11157  000594  0100               	movlb	0	; () banked
 11158  000596  EE20 F002          	lfsr	2,2
 11159  00059A  5186               	movf	f_write@fp& (0+255),w,b
 11160  00059C  26D9               	addwf	fsr2l,f,c
 11161  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11162  0005A0  22DA               	addwfc	fsr2h,f,c
 11163  0005A2  0E00               	movlw	0
 11164  0005A4  8EDB               	bsf	plusw2,7,c
 11165                           
 11166                           ; BSR set to: 0
 11167  0005A6  0012               	return		;funcret
 11168  0005A8                     __end_of_f_write:
 11169                           	callstack 0
 11170                           
 11171 ;; *************** function ___llmod *****************
 11172 ;; Defined at:
 11173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  dividend        4    9[COMRAM] unsigned long 
 11176 ;;  divisor         4   13[COMRAM] unsigned long 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  counter         1   17[COMRAM] unsigned char 
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  4    9[COMRAM] unsigned long 
 11181 ;; Registers used:
 11182 ;;		wreg, status,2, status,0
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11188 ;;      Params:         8       0       0       0       0       0       0       0       0
 11189 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11191 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11192 ;;Total ram usage:        9 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    2
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_fprintf
 11199 ;;		_ultoa
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text69
 11204  004DF2                     __ptext69:
 11205                           	callstack 0
 11206  004DF2                     ___llmod:
 11207                           	callstack 23
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;incstack = 0
 11211  004DF2  500E               	movf	___llmod@divisor^0,w,c
 11212  004DF4  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 11213  004DF6  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 11214  004DF8  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 11215  004DFA  B4D8               	btfsc	status,2,c
 11216  004DFC  D024               	goto	l2155
 11217  004DFE  0E01               	movlw	1
 11218  004E00  6E12               	movwf	___llmod@counter^0,c
 11219  004E02  D006               	goto	l12152
 11220  004E04                     l12150:
 11221  004E04  90D8               	bcf	status,0,c
 11222  004E06  360E               	rlcf	___llmod@divisor^0,f,c
 11223  004E08  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 11224  004E0A  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 11225  004E0C  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 11226  004E0E  2A12               	incf	___llmod@counter^0,f,c
 11227  004E10                     l12152:
 11228  004E10  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 11229  004E12  D7F8               	goto	l12150
 11230  004E14                     u14090:
 11231  004E14  500E               	movf	___llmod@divisor^0,w,c
 11232  004E16  5C0A               	subwf	___llmod@dividend^0,w,c
 11233  004E18  500F               	movf	(___llmod@divisor+1)^0,w,c
 11234  004E1A  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 11235  004E1C  5010               	movf	(___llmod@divisor+2)^0,w,c
 11236  004E1E  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 11237  004E20  5011               	movf	(___llmod@divisor+3)^0,w,c
 11238  004E22  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 11239  004E24  A0D8               	btfss	status,0,c
 11240  004E26  D008               	goto	l12158
 11241  004E28  500E               	movf	___llmod@divisor^0,w,c
 11242  004E2A  5E0A               	subwf	___llmod@dividend^0,f,c
 11243  004E2C  500F               	movf	(___llmod@divisor+1)^0,w,c
 11244  004E2E  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 11245  004E30  5010               	movf	(___llmod@divisor+2)^0,w,c
 11246  004E32  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 11247  004E34  5011               	movf	(___llmod@divisor+3)^0,w,c
 11248  004E36  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 11249  004E38                     l12158:
 11250  004E38  90D8               	bcf	status,0,c
 11251  004E3A  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 11252  004E3C  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 11253  004E3E  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 11254  004E40  320E               	rrcf	___llmod@divisor^0,f,c
 11255  004E42  2E12               	decfsz	___llmod@counter^0,f,c
 11256  004E44  D7E7               	goto	u14090
 11257  004E46                     l2155:
 11258  004E46  C00A  F00A         	movff	___llmod@dividend,?___llmod
 11259  004E4A  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 11260  004E4E  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 11261  004E52  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 11262  004E56  0012               	return		;funcret
 11263  004E58                     __end_of___llmod:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function _f_open *****************
 11267 ;; Defined at:
 11268 ;;		line 833 in file "bibliotecas/tff.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 11271 ;;		 -> fil(28), 
 11272 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 11273 ;;		 -> STR_16(13), filename(20), 
 11274 ;;  mode            1   60[BANK0 ] unsigned char 
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;  dw              4   79[BANK0 ] unsigned long 
 11277 ;;  rs              2   77[BANK0 ] unsigned short 
 11278 ;;  dj             14   86[BANK0 ] struct _DIR_E
 11279 ;;  fn             12   65[BANK0 ] unsigned char [12]
 11280 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 11281 ;;		 -> NULL(0), fs(544), 
 11282 ;;  res             1   83[BANK0 ] enum E155
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  1    wreg      enum E3231
 11285 ;; Registers used:
 11286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11287 ;; Tracked objects:
 11288 ;;		On entry : 3F/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11292 ;;      Params:         0       5       0       0       0       0       0       0       0
 11293 ;;      Locals:         0      35       0       0       0       0       0       0       0
 11294 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11295 ;;      Totals:         0      44       0       0       0       0       0       0       0
 11296 ;;Total ram usage:       44 bytes
 11297 ;; Hardware stack levels used:    1
 11298 ;; Hardware stack levels required when called:   11
 11299 ;; This function calls:
 11300 ;;		_auto_mount
 11301 ;;		_get_fattime
 11302 ;;		_memcpy
 11303 ;;		_memset
 11304 ;;		_move_window
 11305 ;;		_remove_chain
 11306 ;;		_reserve_direntry
 11307 ;;		_trace_path
 11308 ;; This function is called by:
 11309 ;;		_escrita_sdcard
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text70
 11314  0012CC                     __ptext70:
 11315                           	callstack 0
 11316  0012CC                     _f_open:
 11317                           	callstack 15
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 11321                           
 11322                           ;incstack = 0
 11323  0012CC  EE20 F004          	lfsr	2,4
 11324  0012D0  5198               	movf	f_open@fp& (0+255),w,b
 11325  0012D2  26D9               	addwf	fsr2l,f,c
 11326  0012D4  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11327  0012D6  22DA               	addwfc	fsr2h,f,c
 11328  0012D8  0E00               	movlw	0
 11329  0012DA  6EDE               	movwf	postinc2,c
 11330  0012DC  0E00               	movlw	0
 11331  0012DE  6EDD               	movwf	postdec2,c
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11335  0012E0  0E1F               	movlw	31
 11336  0012E2  179C               	andwf	f_open@mode& (0+255),f,b
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11340  0012E4  0E9A               	movlw	low f_open@path
 11341  0012E6  6E3D               	movwf	auto_mount@path^0,c
 11342  0012E8  519C               	movf	f_open@mode& (0+255),w,b
 11343  0012EA  0B1E               	andlw	30
 11344  0012EC  6E3E               	movwf	auto_mount@chk_wp^0,c
 11345  0012EE  ECD4  F002         	call	_auto_mount	;wreg free
 11346  0012F2  0100               	movlb	0	; () banked
 11347  0012F4  6FB3               	movwf	f_open@res& (0+255),b
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;tff.c: 853: if (res != FR_OK) return res;
 11351  0012F6  51B3               	movf	f_open@res& (0+255),w,b
 11352  0012F8  B4D8               	btfsc	status,2,c
 11353  0012FA  D002               	goto	l12278
 11354  0012FC                     u14250:
 11355                           
 11356                           ; BSR set to: 0
 11357  0012FC  51B3               	movf	f_open@res& (0+255),w,b
 11358  0012FE  0012               	return	
 11359  001300                     l12278:
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11363  001300  0EB6               	movlw	low f_open@dj
 11364  001302  6F7E               	movwf	trace_path@dj& (0+255),b
 11365  001304  0EA1               	movlw	low f_open@fn
 11366  001306  6F7F               	movwf	trace_path@fn& (0+255),b
 11367  001308  C09A  F080         	movff	f_open@path,trace_path@path
 11368  00130C  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11369  001310  0EB4               	movlw	low f_open@dir
 11370  001312  6F82               	movwf	trace_path@dir& (0+255),b
 11371  001314  EC41  F00F         	call	_trace_path	;wreg free
 11372  001318  0100               	movlb	0	; () banked
 11373  00131A  6FB3               	movwf	f_open@res& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11377  00131C  C09C  F09D         	movff	f_open@mode,??_f_open
 11378  001320  0E1C               	movlw	28
 11379  001322  179D               	andwf	??_f_open& (0+255),f,b
 11380  001324  B4D8               	btfsc	status,2,c
 11381  001326  D0E0               	goto	l12340
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11385  001328  51B3               	movf	f_open@res& (0+255),w,b
 11386  00132A  B4D8               	btfsc	status,2,c
 11387  00132C  D035               	goto	l1099
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11391  00132E  0E02               	movlw	2
 11392  001330  19B3               	xorwf	f_open@res& (0+255),w,b
 11393  001332  A4D8               	btfss	status,2,c
 11394  001334  D7E3               	goto	u14250
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11398  001336  0EB6               	movlw	low f_open@dj
 11399  001338  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11400  00133A  0EB4               	movlw	low f_open@dir
 11401  00133C  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11402  00133E  EC81  F010         	call	_reserve_direntry	;wreg free
 11403  001342  0100               	movlb	0	; () banked
 11404  001344  6FB3               	movwf	f_open@res& (0+255),b
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;tff.c: 864: if (res != FR_OK) return res;
 11408  001346  51B3               	movf	f_open@res& (0+255),w,b
 11409  001348  A4D8               	btfss	status,2,c
 11410  00134A  D7D8               	goto	u14250
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;tff.c: 865: memset(dir, 0, 32);
 11414  00134C  C0B4  F00A         	movff	f_open@dir,memset@p1
 11415  001350  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11416  001354  0E00               	movlw	0
 11417  001356  6E0D               	movwf	(memset@c+1)^0,c
 11418  001358  0E00               	movlw	0
 11419  00135A  6E0C               	movwf	memset@c^0,c
 11420  00135C  0E00               	movlw	0
 11421  00135E  6E0F               	movwf	(memset@n+1)^0,c
 11422  001360  0E20               	movlw	32
 11423  001362  6E0E               	movwf	memset@n^0,c
 11424  001364  EC09  F02C         	call	_memset	;wreg free
 11425                           
 11426                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11427  001368  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11428  00136C  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11429  001370  0EA1               	movlw	low f_open@fn
 11430  001372  6E0C               	movwf	memcpy@s1^0,c
 11431  001374  6A0D               	clrf	(memcpy@s1+1)^0,c
 11432  001376  0E00               	movlw	0
 11433  001378  6E0F               	movwf	(memcpy@n+1)^0,c
 11434  00137A  0E0B               	movlw	11
 11435  00137C  6E0E               	movwf	memcpy@n^0,c
 11436  00137E  EC13  F02A         	call	_memcpy	;wreg free
 11437                           
 11438                           ;tff.c: 867: dir[12] = fn[11];
 11439  001382  0100               	movlb	0	; () banked
 11440  001384  EE20 F00C          	lfsr	2,12
 11441  001388  51B4               	movf	f_open@dir& (0+255),w,b
 11442  00138A  26D9               	addwf	fsr2l,f,c
 11443  00138C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11444  00138E  22DA               	addwfc	fsr2h,f,c
 11445  001390  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;tff.c: 868: mode |= 0x08;
 11449  001394  879C               	bsf	f_open@mode& (0+255),3,b
 11450                           
 11451                           ;tff.c: 869: }
 11452  001396  D07B               	goto	l12328
 11453  001398                     l1099:
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11457  001398  A59C               	btfss	f_open@mode& (0+255),2,b
 11458  00139A  D002               	goto	l12308
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;tff.c: 872: return FR_EXIST;
 11462  00139C  0E07               	movlw	7
 11463  00139E  0012               	return	
 11464  0013A0                     l12308:
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11468  0013A0  51B4               	movf	f_open@dir& (0+255),w,b
 11469  0013A2  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11470  0013A4  B4D8               	btfsc	status,2,c
 11471  0013A6  D00C               	goto	u14320
 11472                           
 11473                           ; BSR set to: 0
 11474  0013A8  EE20 F00B          	lfsr	2,11
 11475  0013AC  51B4               	movf	f_open@dir& (0+255),w,b
 11476  0013AE  26D9               	addwf	fsr2l,f,c
 11477  0013B0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11478  0013B2  22DA               	addwfc	fsr2h,f,c
 11479  0013B4  50DF               	movf	indf2,w,c
 11480  0013B6  6F9D               	movwf	??_f_open& (0+255),b
 11481  0013B8  0E11               	movlw	17
 11482  0013BA  179D               	andwf	??_f_open& (0+255),f,b
 11483  0013BC  B4D8               	btfsc	status,2,c
 11484  0013BE  D002               	goto	l1104
 11485  0013C0                     u14320:
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;tff.c: 874: return FR_DENIED;
 11489  0013C0  0E06               	movlw	6
 11490  0013C2  0012               	return	
 11491  0013C4                     l1104:
 11492                           
 11493                           ; BSR set to: 0
 11494                           ;tff.c: 875: if (mode & 0x08) {
 11495  0013C4  A79C               	btfss	f_open@mode& (0+255),3,b
 11496  0013C6  D063               	goto	l12328
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11500  0013C8  EE20 F01A          	lfsr	2,26
 11501  0013CC  51B4               	movf	f_open@dir& (0+255),w,b
 11502  0013CE  26D9               	addwf	fsr2l,f,c
 11503  0013D0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11504  0013D2  22DA               	addwfc	fsr2h,f,c
 11505  0013D4  CFDE F0AD          	movff	postinc2,f_open@rs
 11506  0013D8  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11507                           
 11508                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11509  0013DC  EE20 F01A          	lfsr	2,26
 11510  0013E0  51B4               	movf	f_open@dir& (0+255),w,b
 11511  0013E2  26D9               	addwf	fsr2l,f,c
 11512  0013E4  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11513  0013E6  22DA               	addwfc	fsr2h,f,c
 11514  0013E8  0E00               	movlw	0
 11515  0013EA  6EDE               	movwf	postinc2,c
 11516  0013EC  0E00               	movlw	0
 11517  0013EE  6EDD               	movwf	postdec2,c
 11518                           
 11519                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11520  0013F0  EE20 F01C          	lfsr	2,28
 11521  0013F4  51B4               	movf	f_open@dir& (0+255),w,b
 11522  0013F6  26D9               	addwf	fsr2l,f,c
 11523  0013F8  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11524  0013FA  22DA               	addwfc	fsr2h,f,c
 11525  0013FC  6ADE               	clrf	postinc2,c
 11526  0013FE  6ADE               	clrf	postinc2,c
 11527  001400  6ADE               	clrf	postinc2,c
 11528  001402  6ADD               	clrf	postdec2,c
 11529                           
 11530                           ;tff.c: 884: dj.fs->winflag = 1;
 11531  001404  EE20 F01F          	lfsr	2,31
 11532  001408  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11533  00140A  26D9               	addwf	fsr2l,f,c
 11534  00140C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11535  00140E  22DA               	addwfc	fsr2h,f,c
 11536  001410  0E01               	movlw	1
 11537  001412  6EDF               	movwf	indf2,c
 11538                           
 11539                           ;tff.c: 885: dw = dj.fs->winsect;
 11540  001414  EE20 F004          	lfsr	2,4
 11541  001418  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11542  00141A  26D9               	addwf	fsr2l,f,c
 11543  00141C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11544  00141E  22DA               	addwfc	fsr2h,f,c
 11545  001420  CFDE F0AF          	movff	postinc2,f_open@dw
 11546  001424  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11547  001428  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11548  00142C  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11552  001430  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11553  001434  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11554  001438  ECB1  F022         	call	_remove_chain	;wreg free
 11555  00143C  0900               	iorlw	0
 11556  00143E  B4D8               	btfsc	status,2,c
 11557  001440  D00D               	goto	u14350
 11558  001442  C0AF  F035         	movff	f_open@dw,move_window@sector
 11559  001446  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11560  00144A  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11561  00144E  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11562  001452  EC15  F015         	call	_move_window	;wreg free
 11563  001456  0900               	iorlw	0
 11564  001458  A4D8               	btfss	status,2,c
 11565  00145A  D002               	goto	l12326
 11566  00145C                     u14350:
 11567                           
 11568                           ;tff.c: 887: return FR_RW_ERROR;
 11569  00145C  0E08               	movlw	8
 11570  00145E  0012               	return	
 11571  001460                     l12326:
 11572                           
 11573                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11574  001460  0EFF               	movlw	255
 11575  001462  0100               	movlb	0	; () banked
 11576  001464  6F9D               	movwf	??_f_open& (0+255),b
 11577  001466  0EFF               	movlw	255
 11578  001468  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11579  00146A  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11580  00146E  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11581  001472  519D               	movf	??_f_open& (0+255),w,b
 11582  001474  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11583  001476  519E               	movf	(??_f_open+1)& (0+255),w,b
 11584  001478  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11585  00147A  EE20 F018          	lfsr	2,24
 11586  00147E  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11587  001480  26D9               	addwf	fsr2l,f,c
 11588  001482  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11589  001484  22DA               	addwfc	fsr2h,f,c
 11590  001486  C09F  FFDE         	movff	??_f_open+2,postinc2
 11591  00148A  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11592  00148E                     l12328:
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11596  00148E  A79C               	btfss	f_open@mode& (0+255),3,b
 11597  001490  D046               	goto	l12360
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;tff.c: 892: dir[11] = 0;
 11601  001492  EE20 F00B          	lfsr	2,11
 11602  001496  51B4               	movf	f_open@dir& (0+255),w,b
 11603  001498  26D9               	addwf	fsr2l,f,c
 11604  00149A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11605  00149C  22DA               	addwfc	fsr2h,f,c
 11606  00149E  0E00               	movlw	0
 11607  0014A0  6EDF               	movwf	indf2,c
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;tff.c: 893: dw = get_fattime();
 11611  0014A2  EC58  F01A         	call	_get_fattime	;wreg free
 11612  0014A6  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11613  0014AA  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11614  0014AE  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11615  0014B2  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11616                           
 11617                           ; BSR set to: 1
 11618                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11619  0014B6  0100               	movlb	0	; () banked
 11620  0014B8  EE20 F00E          	lfsr	2,14
 11621  0014BC  51B4               	movf	f_open@dir& (0+255),w,b
 11622  0014BE  26D9               	addwf	fsr2l,f,c
 11623  0014C0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11624  0014C2  22DA               	addwfc	fsr2h,f,c
 11625  0014C4  C0AF  FFDE         	movff	f_open@dw,postinc2
 11626  0014C8  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11627  0014CC  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11628  0014D0  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;tff.c: 895: dj.fs->winflag = 1;
 11632  0014D4  EE20 F01F          	lfsr	2,31
 11633  0014D8  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11634  0014DA  26D9               	addwf	fsr2l,f,c
 11635  0014DC  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11636  0014DE  22DA               	addwfc	fsr2h,f,c
 11637  0014E0  0E01               	movlw	1
 11638  0014E2  6EDF               	movwf	indf2,c
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;tff.c: 896: mode |= 0x20;
 11642  0014E4  8B9C               	bsf	f_open@mode& (0+255),5,b
 11643  0014E6  D01B               	goto	l12360
 11644  0014E8                     l12340:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11648  0014E8  51B3               	movf	f_open@res& (0+255),w,b
 11649  0014EA  A4D8               	btfss	status,2,c
 11650  0014EC  D707               	goto	u14250
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11654  0014EE  51B4               	movf	f_open@dir& (0+255),w,b
 11655  0014F0  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11656  0014F2  B4D8               	btfsc	status,2,c
 11657  0014F4  D008               	goto	u14390
 11658                           
 11659                           ; BSR set to: 0
 11660  0014F6  EE20 F00B          	lfsr	2,11
 11661  0014FA  51B4               	movf	f_open@dir& (0+255),w,b
 11662  0014FC  26D9               	addwf	fsr2l,f,c
 11663  0014FE  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11664  001500  22DA               	addwfc	fsr2h,f,c
 11665  001502  A8DF               	btfss	indf2,4,c
 11666  001504  D002               	goto	l1114
 11667  001506                     u14390:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;tff.c: 904: return FR_NO_FILE;
 11671  001506  0E02               	movlw	2
 11672  001508  0012               	return	
 11673  00150A                     l1114:
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11677  00150A  A39C               	btfss	f_open@mode& (0+255),1,b
 11678  00150C  D008               	goto	l12360
 11679                           
 11680                           ; BSR set to: 0
 11681  00150E  EE20 F00B          	lfsr	2,11
 11682  001512  51B4               	movf	f_open@dir& (0+255),w,b
 11683  001514  26D9               	addwf	fsr2l,f,c
 11684  001516  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11685  001518  22DA               	addwfc	fsr2h,f,c
 11686  00151A  B0DF               	btfsc	indf2,0,c
 11687  00151C  D751               	goto	u14320
 11688  00151E                     l12360:
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11692  00151E  EE20 F004          	lfsr	2,4
 11693  001522  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11694  001524  26D9               	addwf	fsr2l,f,c
 11695  001526  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11696  001528  22DA               	addwfc	fsr2h,f,c
 11697  00152A  EE10 F016          	lfsr	1,22
 11698  00152E  5198               	movf	f_open@fp& (0+255),w,b
 11699  001530  26E1               	addwf	fsr1l,f,c
 11700  001532  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11701  001534  22E2               	addwfc	fsr1h,f,c
 11702  001536  CFDE FFE6          	movff	postinc2,postinc1
 11703  00153A  CFDE FFE6          	movff	postinc2,postinc1
 11704  00153E  CFDE FFE6          	movff	postinc2,postinc1
 11705  001542  CFDE FFE6          	movff	postinc2,postinc1
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;tff.c: 910: fp->dir_ptr = dir;
 11709  001546  EE20 F01A          	lfsr	2,26
 11710  00154A  5198               	movf	f_open@fp& (0+255),w,b
 11711  00154C  26D9               	addwf	fsr2l,f,c
 11712  00154E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11713  001550  22DA               	addwfc	fsr2h,f,c
 11714  001552  C0B4  FFDE         	movff	f_open@dir,postinc2
 11715  001556  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;tff.c: 912: fp->flag = mode;
 11719  00155A  EE20 F002          	lfsr	2,2
 11720  00155E  5198               	movf	f_open@fp& (0+255),w,b
 11721  001560  26D9               	addwf	fsr2l,f,c
 11722  001562  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11723  001564  22DA               	addwfc	fsr2h,f,c
 11724  001566  C09C  FFDF         	movff	f_open@mode,indf2
 11725                           
 11726                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11727  00156A  EE20 F01A          	lfsr	2,26
 11728  00156E  51B4               	movf	f_open@dir& (0+255),w,b
 11729  001570  26D9               	addwf	fsr2l,f,c
 11730  001572  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11731  001574  22DA               	addwfc	fsr2h,f,c
 11732  001576  EE10 F00E          	lfsr	1,14
 11733  00157A  5198               	movf	f_open@fp& (0+255),w,b
 11734  00157C  26E1               	addwf	fsr1l,f,c
 11735  00157E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11736  001580  22E2               	addwfc	fsr1h,f,c
 11737  001582  CFDE FFE6          	movff	postinc2,postinc1
 11738  001586  CFDD FFE5          	movff	postdec2,postdec1
 11739                           
 11740                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11741  00158A  EE20 F01C          	lfsr	2,28
 11742  00158E  51B4               	movf	f_open@dir& (0+255),w,b
 11743  001590  26D9               	addwf	fsr2l,f,c
 11744  001592  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11745  001594  22DA               	addwfc	fsr2h,f,c
 11746  001596  EE10 F00A          	lfsr	1,10
 11747  00159A  5198               	movf	f_open@fp& (0+255),w,b
 11748  00159C  26E1               	addwf	fsr1l,f,c
 11749  00159E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11750  0015A0  22E2               	addwfc	fsr1h,f,c
 11751  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 11752  0015A6  CFDE FFE6          	movff	postinc2,postinc1
 11753  0015AA  CFDE FFE6          	movff	postinc2,postinc1
 11754  0015AE  CFDE FFE6          	movff	postinc2,postinc1
 11755                           
 11756                           ; BSR set to: 0
 11757                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11758  0015B2  EE20 F006          	lfsr	2,6
 11759  0015B6  5198               	movf	f_open@fp& (0+255),w,b
 11760  0015B8  26D9               	addwf	fsr2l,f,c
 11761  0015BA  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11762  0015BC  22DA               	addwfc	fsr2h,f,c
 11763  0015BE  6ADE               	clrf	postinc2,c
 11764  0015C0  6ADE               	clrf	postinc2,c
 11765  0015C2  6ADE               	clrf	postinc2,c
 11766  0015C4  6ADD               	clrf	postdec2,c
 11767                           
 11768                           ; BSR set to: 0
 11769  0015C6  EE20 F003          	lfsr	2,3
 11770  0015CA  5198               	movf	f_open@fp& (0+255),w,b
 11771  0015CC  26D9               	addwf	fsr2l,f,c
 11772  0015CE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11773  0015D0  22DA               	addwfc	fsr2h,f,c
 11774  0015D2  0EFF               	movlw	255
 11775  0015D4  6EDF               	movwf	indf2,c
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11779  0015D6  EE20 F004          	lfsr	2,4
 11780  0015DA  5198               	movf	f_open@fp& (0+255),w,b
 11781  0015DC  26D9               	addwf	fsr2l,f,c
 11782  0015DE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11783  0015E0  22DA               	addwfc	fsr2h,f,c
 11784  0015E2  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11785  0015E6  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11786                           
 11787                           ; BSR set to: 0
 11788  0015EA  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11789  0015EE  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11790  0015F2  C098  FFE1         	movff	f_open@fp,fsr1l
 11791  0015F6  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11792  0015FA  CFDE FFE6          	movff	postinc2,postinc1
 11793  0015FE  CFDD FFE5          	movff	postdec2,postdec1
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;tff.c: 922: return FR_OK;
 11797  001602  0E00               	movlw	0
 11798  001604  0012               	return		;funcret
 11799  001606                     __end_of_f_open:
 11800                           	callstack 0
 11801                           
 11802 ;; *************** function _trace_path *****************
 11803 ;; Defined at:
 11804 ;;		line 502 in file "bibliotecas/tff.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11807 ;;		 -> f_open@dj(14), 
 11808 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11809 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11810 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11811 ;;		 -> STR_16(13), filename(20), 
 11812 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11813 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11816 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11817 ;;  clust           2   45[BANK0 ] unsigned short 
 11818 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11819 ;;		 -> NULL(0), fs(544), 
 11820 ;;  ds              1   47[BANK0 ] unsigned char 
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      enum E155
 11823 ;; Registers used:
 11824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 3F/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11830 ;;      Params:         0       5       0       0       0       0       0       0       0
 11831 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11832 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11833 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11834 ;;Total ram usage:       20 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:   10
 11837 ;; This function calls:
 11838 ;;		_clust2sect
 11839 ;;		_make_dirfile
 11840 ;;		_memcmp
 11841 ;;		_move_window
 11842 ;;		_next_dir_entry
 11843 ;; This function is called by:
 11844 ;;		_f_open
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848                           	psect	text71
 11849  001E82                     __ptext71:
 11850                           	callstack 0
 11851  001E82                     _trace_path:
 11852                           	callstack 15
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;tff.c: 512: FATFS *fs = FatFs;
 11856                           
 11857                           ;incstack = 0
 11858  001E82  C04D  F08B         	movff	_FatFs,trace_path@fs
 11859  001E86  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;tff.c: 515: dj->fs = fs;
 11863  001E8A  517E               	movf	trace_path@dj& (0+255),w,b
 11864  001E8C  6ED9               	movwf	fsr2l,c
 11865  001E8E  6ADA               	clrf	fsr2h,c
 11866  001E90  0E04               	movlw	4
 11867  001E92  26D9               	addwf	fsr2l,f,c
 11868  001E94  C08B  FFDE         	movff	trace_path@fs,postinc2
 11869  001E98  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;tff.c: 516: clust = fs->dirbase;
 11873  001E9C  EE20 F00C          	lfsr	2,12
 11874  001EA0  518B               	movf	trace_path@fs& (0+255),w,b
 11875  001EA2  26D9               	addwf	fsr2l,f,c
 11876  001EA4  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11877  001EA6  22DA               	addwfc	fsr2h,f,c
 11878  001EA8  CFDE F08D          	movff	postinc2,trace_path@clust
 11879  001EAC  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11883  001EB0  517E               	movf	trace_path@dj& (0+255),w,b
 11884  001EB2  6ED9               	movwf	fsr2l,c
 11885  001EB4  6ADA               	clrf	fsr2h,c
 11886  001EB6  0E06               	movlw	6
 11887  001EB8  26D9               	addwf	fsr2l,f,c
 11888  001EBA  0E00               	movlw	0
 11889  001EBC  6EDE               	movwf	postinc2,c
 11890  001EBE  0E00               	movlw	0
 11891  001EC0  6EDD               	movwf	postdec2,c
 11892  001EC2  517E               	movf	trace_path@dj& (0+255),w,b
 11893  001EC4  6EE1               	movwf	fsr1l,c
 11894  001EC6  6AE2               	clrf	fsr1h,c
 11895  001EC8  0E08               	movlw	8
 11896  001ECA  26E1               	addwf	fsr1l,f,c
 11897  001ECC  CFDE FFE6          	movff	postinc2,postinc1
 11898  001ED0  CFDD FFE5          	movff	postdec2,postdec1
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;tff.c: 525: dj->sect = clust;
 11902  001ED4  518D               	movf	trace_path@clust& (0+255),w,b
 11903  001ED6  6F83               	movwf	??_trace_path& (0+255),b
 11904  001ED8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11905  001EDA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11906  001EDC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11907  001EDE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11908  001EE0  517E               	movf	trace_path@dj& (0+255),w,b
 11909  001EE2  6ED9               	movwf	fsr2l,c
 11910  001EE4  6ADA               	clrf	fsr2h,c
 11911  001EE6  0E0A               	movlw	10
 11912  001EE8  26D9               	addwf	fsr2l,f,c
 11913  001EEA  C083  FFDE         	movff	??_trace_path,postinc2
 11914  001EEE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11915  001EF2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11916  001EF6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11920  001EFA  517E               	movf	trace_path@dj& (0+255),w,b
 11921  001EFC  6ED9               	movwf	fsr2l,c
 11922  001EFE  6ADA               	clrf	fsr2h,c
 11923  001F00  0E02               	movlw	2
 11924  001F02  26D9               	addwf	fsr2l,f,c
 11925  001F04  0E00               	movlw	0
 11926  001F06  6EDE               	movwf	postinc2,c
 11927  001F08  0E00               	movlw	0
 11928  001F0A  6EDD               	movwf	postdec2,c
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;tff.c: 529: if (*path == '\0') {
 11932  001F0C  C080  FFF6         	movff	trace_path@path,tblptrl
 11933  001F10  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11934  001F14  6AF8               	clrf	tblptru,c
 11935  001F16  0E07               	movlw	(high __ramtop+-1)
 11936  001F18  64F7               	cpfsgt	tblptrh,c
 11937  001F1A  D003               	bra	u13497
 11938  001F1C  0008               	tblrd		*
 11939  001F1E  50F5               	movf	tablat,w,c
 11940  001F20  D005               	bra	u13490
 11941  001F22                     u13497:
 11942  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11943  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11944  001F2A  50E7               	movf	indf1,w,c
 11945  001F2C                     u13490:
 11946  001F2C  0900               	iorlw	0
 11947  001F2E  A4D8               	btfss	status,2,c
 11948  001F30  D00A               	goto	l11790
 11949                           
 11950                           ;tff.c: 530: *dir = (0); return FR_OK;
 11951  001F32  0100               	movlb	0	; () banked
 11952  001F34  5182               	movf	trace_path@dir& (0+255),w,b
 11953  001F36  6ED9               	movwf	fsr2l,c
 11954  001F38  6ADA               	clrf	fsr2h,c
 11955  001F3A  0E00               	movlw	0
 11956  001F3C  6EDE               	movwf	postinc2,c
 11957  001F3E  0E00               	movlw	0
 11958  001F40  6EDD               	movwf	postdec2,c
 11959  001F42                     l11786:
 11960                           
 11961                           ; BSR set to: 0
 11962  001F42  0E00               	movlw	0
 11963  001F44  0012               	return	
 11964  001F46                     l11790:
 11965                           
 11966                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11967  001F46  0E80               	movlw	low trace_path@path
 11968  001F48  6E12               	movwf	make_dirfile@path^0,c
 11969  001F4A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11970  001F4E  ECAB  F019         	call	_make_dirfile	;wreg free
 11971  001F52  0100               	movlb	0	; () banked
 11972  001F54  6F8F               	movwf	trace_path@ds& (0+255),b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11976  001F56  058F               	decf	trace_path@ds& (0+255),w,b
 11977  001F58  A4D8               	btfss	status,2,c
 11978  001F5A  D002               	goto	l11798
 11979                           
 11980                           ; BSR set to: 0
 11981  001F5C  0E04               	movlw	4
 11982  001F5E  0012               	return	
 11983  001F60                     l11798:
 11984                           
 11985                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11986  001F60  0100               	movlb	0	; () banked
 11987  001F62  517E               	movf	trace_path@dj& (0+255),w,b
 11988  001F64  6ED9               	movwf	fsr2l,c
 11989  001F66  6ADA               	clrf	fsr2h,c
 11990  001F68  0E0A               	movlw	10
 11991  001F6A  26D9               	addwf	fsr2l,f,c
 11992  001F6C  CFDE F035          	movff	postinc2,move_window@sector
 11993  001F70  CFDE F036          	movff	postinc2,move_window@sector+1
 11994  001F74  CFDE F037          	movff	postinc2,move_window@sector+2
 11995  001F78  CFDE F038          	movff	postinc2,move_window@sector+3
 11996  001F7C  EC15  F015         	call	_move_window	;wreg free
 11997  001F80  0900               	iorlw	0
 11998  001F82  A4D8               	btfss	status,2,c
 11999  001F84  D002               	goto	l11804
 12000  001F86  0E08               	movlw	8
 12001  001F88  0012               	return	
 12002  001F8A                     l11804:
 12003                           
 12004                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 12005  001F8A  0100               	movlb	0	; () banked
 12006  001F8C  517E               	movf	trace_path@dj& (0+255),w,b
 12007  001F8E  6ED9               	movwf	fsr2l,c
 12008  001F90  6ADA               	clrf	fsr2h,c
 12009  001F92  0E02               	movlw	2
 12010  001F94  26D9               	addwf	fsr2l,f,c
 12011  001F96  CFDE F083          	movff	postinc2,??_trace_path
 12012  001F9A  CFDD F084          	movff	postdec2,??_trace_path+1
 12013  001F9E  0E0F               	movlw	15
 12014  001FA0  1783               	andwf	??_trace_path& (0+255),f,b
 12015  001FA2  0E00               	movlw	0
 12016  001FA4  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 12017  001FA6  0E05               	movlw	5
 12018  001FA8                     u13535:
 12019  001FA8  90D8               	bcf	status,0,c
 12020  001FAA  3783               	rlcf	??_trace_path& (0+255),f,b
 12021  001FAC  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 12022  001FAE  2EE8               	decfsz	wreg,f,c
 12023  001FB0  D7FB               	goto	u13535
 12024  001FB2  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 12025  001FB6  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 12026  001FBA  5183               	movf	??_trace_path& (0+255),w,b
 12027  001FBC  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 12028  001FBE  5184               	movf	(??_trace_path+1)& (0+255),w,b
 12029  001FC0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 12030  001FC2  0E20               	movlw	32
 12031  001FC4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 12032  001FC6  6F90               	movwf	trace_path@dptr& (0+255),b
 12033  001FC8  0E00               	movlw	0
 12034  001FCA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 12035  001FCC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;tff.c: 539: if (dptr[0] == 0)
 12039  001FCE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12040  001FD2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12041  001FD6  50DF               	movf	indf2,w,c
 12042  001FD8  A4D8               	btfss	status,2,c
 12043  001FDA  D00D               	goto	l11816
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12047  001FDC  518F               	movf	trace_path@ds& (0+255),w,b
 12048  001FDE  B4D8               	btfsc	status,2,c
 12049  001FE0  D004               	goto	l11812
 12050                           
 12051                           ; BSR set to: 0
 12052  001FE2  0E00               	movlw	0
 12053  001FE4  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12054  001FE6  0E03               	movlw	3
 12055  001FE8  D003               	goto	L3
 12056  001FEA                     l11812:
 12057                           
 12058                           ; BSR set to: 0
 12059  001FEA  0E00               	movlw	0
 12060  001FEC  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12061  001FEE  0E02               	movlw	2
 12062  001FF0                     L3:
 12063  001FF0  6F87               	movwf	_trace_path$1780& (0+255),b
 12064                           
 12065                           ; BSR set to: 0
 12066  001FF2  5187               	movf	_trace_path$1780& (0+255),w,b
 12067  001FF4  0012               	return	
 12068  001FF6                     l11816:
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 12072  001FF6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12073  001FFA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12074  001FFE  0EE5               	movlw	229
 12075  002000  18DE               	xorwf	postinc2,w,c
 12076  002002  B4D8               	btfsc	status,2,c
 12077  002004  D019               	goto	l11824
 12078                           
 12079                           ; BSR set to: 0
 12080  002006  EE20 F00B          	lfsr	2,11
 12081  00200A  5190               	movf	trace_path@dptr& (0+255),w,b
 12082  00200C  26D9               	addwf	fsr2l,f,c
 12083  00200E  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12084  002010  22DA               	addwfc	fsr2h,f,c
 12085  002012  B6DF               	btfsc	indf2,3,c
 12086  002014  D011               	goto	l11824
 12087                           
 12088                           ; BSR set to: 0
 12089  002016  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 12090  00201A  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 12091  00201E  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 12092  002022  6A0D               	clrf	(memcmp@s2+1)^0,c
 12093  002024  0E00               	movlw	0
 12094  002026  6E0F               	movwf	(memcmp@n+1)^0,c
 12095  002028  0E0B               	movlw	11
 12096  00202A  6E0E               	movwf	memcmp@n^0,c
 12097  00202C  EC9A  F023         	call	_memcmp	;wreg free
 12098  002030  500A               	movf	?_memcmp^0,w,c
 12099  002032  100B               	iorwf	(?_memcmp+1)^0,w,c
 12100  002034  B4D8               	btfsc	status,2,c
 12101  002036  D015               	goto	l11834
 12102  002038                     l11824:
 12103                           
 12104                           ;tff.c: 544: if (!next_dir_entry(dj))
 12105  002038  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 12106  00203C  EC47  F018         	call	_next_dir_entry	;wreg free
 12107  002040  0900               	iorlw	0
 12108  002042  A4D8               	btfss	status,2,c
 12109  002044  D78D               	goto	l11798
 12110                           
 12111                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12112  002046  0100               	movlb	0	; () banked
 12113  002048  518F               	movf	trace_path@ds& (0+255),w,b
 12114  00204A  B4D8               	btfsc	status,2,c
 12115  00204C  D004               	goto	l11830
 12116                           
 12117                           ; BSR set to: 0
 12118  00204E  0E00               	movlw	0
 12119  002050  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12120  002052  0E03               	movlw	3
 12121  002054  D003               	goto	L4
 12122  002056                     l11830:
 12123                           
 12124                           ; BSR set to: 0
 12125  002056  0E00               	movlw	0
 12126  002058  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12127  00205A  0E02               	movlw	2
 12128  00205C                     L4:
 12129  00205C  6F89               	movwf	_trace_path$1782& (0+255),b
 12130                           
 12131                           ; BSR set to: 0
 12132  00205E  5189               	movf	_trace_path$1782& (0+255),w,b
 12133  002060  0012               	return	
 12134  002062                     l11834:
 12135                           
 12136                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 12137  002062  0100               	movlb	0	; () banked
 12138  002064  518F               	movf	trace_path@ds& (0+255),w,b
 12139  002066  A4D8               	btfss	status,2,c
 12140  002068  D008               	goto	l11842
 12141                           
 12142                           ; BSR set to: 0
 12143  00206A  5182               	movf	trace_path@dir& (0+255),w,b
 12144  00206C  6ED9               	movwf	fsr2l,c
 12145  00206E  6ADA               	clrf	fsr2h,c
 12146  002070  C090  FFDE         	movff	trace_path@dptr,postinc2
 12147  002074  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 12148  002078  D764               	goto	l11786
 12149  00207A                     l11842:
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 12153  00207A  EE20 F00B          	lfsr	2,11
 12154  00207E  5190               	movf	trace_path@dptr& (0+255),w,b
 12155  002080  26D9               	addwf	fsr2l,f,c
 12156  002082  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12157  002084  22DA               	addwfc	fsr2h,f,c
 12158  002086  B8DF               	btfsc	indf2,4,c
 12159  002088  D002               	goto	l11848
 12160                           
 12161                           ; BSR set to: 0
 12162  00208A  0E03               	movlw	3
 12163  00208C  0012               	return	
 12164  00208E                     l11848:
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 12168  00208E  EE20 F01A          	lfsr	2,26
 12169  002092  5190               	movf	trace_path@dptr& (0+255),w,b
 12170  002094  26D9               	addwf	fsr2l,f,c
 12171  002096  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12172  002098  22DA               	addwfc	fsr2h,f,c
 12173  00209A  CFDE F08D          	movff	postinc2,trace_path@clust
 12174  00209E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 12178  0020A2  517E               	movf	trace_path@dj& (0+255),w,b
 12179  0020A4  6ED9               	movwf	fsr2l,c
 12180  0020A6  6ADA               	clrf	fsr2h,c
 12181  0020A8  0E06               	movlw	6
 12182  0020AA  26D9               	addwf	fsr2l,f,c
 12183  0020AC  C08D  FFDE         	movff	trace_path@clust,postinc2
 12184  0020B0  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 12185  0020B4  517E               	movf	trace_path@dj& (0+255),w,b
 12186  0020B6  6EE1               	movwf	fsr1l,c
 12187  0020B8  6AE2               	clrf	fsr1h,c
 12188  0020BA  0E08               	movlw	8
 12189  0020BC  26E1               	addwf	fsr1l,f,c
 12190  0020BE  CFDE FFE6          	movff	postinc2,postinc1
 12191  0020C2  CFDD FFE5          	movff	postdec2,postdec1
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;tff.c: 555: dj->sect = clust2sect(clust);
 12195  0020C6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 12196  0020CA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 12197  0020CE  EC04  F021         	call	_clust2sect	;wreg free
 12198  0020D2  0100               	movlb	0	; () banked
 12199  0020D4  517E               	movf	trace_path@dj& (0+255),w,b
 12200  0020D6  6ED9               	movwf	fsr2l,c
 12201  0020D8  6ADA               	clrf	fsr2h,c
 12202  0020DA  0E0A               	movlw	10
 12203  0020DC  26D9               	addwf	fsr2l,f,c
 12204  0020DE  C016  FFDE         	movff	?_clust2sect,postinc2
 12205  0020E2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12206  0020E6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12207  0020EA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;tff.c: 556: dj->index = 2;
 12211  0020EE  517E               	movf	trace_path@dj& (0+255),w,b
 12212  0020F0  6ED9               	movwf	fsr2l,c
 12213  0020F2  6ADA               	clrf	fsr2h,c
 12214  0020F4  0E02               	movlw	2
 12215  0020F6  26D9               	addwf	fsr2l,f,c
 12216  0020F8  0E02               	movlw	2
 12217  0020FA  6EDE               	movwf	postinc2,c
 12218  0020FC  0E00               	movlw	0
 12219  0020FE  6EDD               	movwf	postdec2,c
 12220                           
 12221                           ;tff.c: 557: }
 12222  002100  D722               	goto	l11790
 12223  002102                     __end_of_trace_path:
 12224                           	callstack 0
 12225                           
 12226 ;; *************** function _make_dirfile *****************
 12227 ;; Defined at:
 12228 ;;		line 439 in file "bibliotecas/tff.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 12231 ;;		 -> trace_path@path(2), 
 12232 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 12233 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  c               1   27[COMRAM] unsigned char 
 12236 ;;  n               1   26[COMRAM] unsigned char 
 12237 ;;  a               1   25[COMRAM] unsigned char 
 12238 ;;  t               1   24[COMRAM] unsigned char 
 12239 ;;  b               1   23[COMRAM] unsigned char 
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      unsigned char 
 12242 ;; Registers used:
 12243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12249 ;;      Params:         2       0       0       0       0       0       0       0       0
 12250 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12251 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12252 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:       11 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    3
 12256 ;; This function calls:
 12257 ;;		_memset
 12258 ;; This function is called by:
 12259 ;;		_trace_path
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           	psect	text72
 12264  003356                     __ptext72:
 12265                           	callstack 0
 12266  003356                     _make_dirfile:
 12267                           	callstack 21
 12268                           
 12269                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 12270                           
 12271                           ;incstack = 0
 12272  003356  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 12273  00335A  6A0B               	clrf	(memset@p1+1)^0,c
 12274  00335C  0E00               	movlw	0
 12275  00335E  6E0D               	movwf	(memset@c+1)^0,c
 12276  003360  0E20               	movlw	32
 12277  003362  6E0C               	movwf	memset@c^0,c
 12278  003364  0E00               	movlw	0
 12279  003366  6E0F               	movwf	(memset@n+1)^0,c
 12280  003368  0E0B               	movlw	11
 12281  00336A  6E0E               	movwf	memset@n^0,c
 12282  00336C  EC09  F02C         	call	_memset	;wreg free
 12283                           
 12284                           ;tff.c: 448: a = 0; b = 0x18;
 12285  003370  0E00               	movlw	0
 12286  003372  6E1A               	movwf	make_dirfile@a^0,c
 12287  003374  0E18               	movlw	24
 12288  003376  6E18               	movwf	make_dirfile@b^0,c
 12289                           
 12290                           ;tff.c: 449: n = 0; t = 8;
 12291  003378  0E00               	movlw	0
 12292  00337A  6E1B               	movwf	make_dirfile@n^0,c
 12293  00337C  0E08               	movlw	8
 12294  00337E  6E19               	movwf	make_dirfile@t^0,c
 12295  003380                     l11420:
 12296                           
 12297                           ;tff.c: 451: c = *(*path)++;
 12298  003380  5012               	movf	make_dirfile@path^0,w,c
 12299  003382  6ED9               	movwf	fsr2l,c
 12300  003384  6ADA               	clrf	fsr2h,c
 12301  003386  CFDF F014          	movff	indf2,??_make_dirfile
 12302  00338A  0E01               	movlw	1
 12303  00338C  26DE               	addwf	postinc2,f,c
 12304  00338E  CFDF F015          	movff	indf2,??_make_dirfile+1
 12305  003392  0E00               	movlw	0
 12306  003394  22DD               	addwfc	postdec2,f,c
 12307  003396  C014  FFF6         	movff	??_make_dirfile,tblptrl
 12308  00339A  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 12309  00339E  6AF8               	clrf	tblptru,c
 12310  0033A0  0E07               	movlw	(high __ramtop+-1)
 12311  0033A2  64F7               	cpfsgt	tblptrh,c
 12312  0033A4  D003               	bra	u12947
 12313  0033A6  0008               	tblrd		*
 12314  0033A8  50F5               	movf	tablat,w,c
 12315  0033AA  D005               	bra	u12940
 12316  0033AC                     u12947:
 12317  0033AC  CFF6 FFE1          	movff	tblptrl,fsr1l
 12318  0033B0  CFF7 FFE2          	movff	tblptrh,fsr1h
 12319  0033B4  50E7               	movf	indf1,w,c
 12320  0033B6                     u12940:
 12321  0033B6  6E1C               	movwf	make_dirfile@c^0,c
 12322                           
 12323                           ;tff.c: 452: if (c == '\0' || c == '/') {
 12324  0033B8  501C               	movf	make_dirfile@c^0,w,c
 12325  0033BA  B4D8               	btfsc	status,2,c
 12326  0033BC  D004               	goto	u12960
 12327  0033BE  0E2F               	movlw	47
 12328  0033C0  181C               	xorwf	make_dirfile@c^0,w,c
 12329  0033C2  A4D8               	btfss	status,2,c
 12330  0033C4  D012               	goto	l11440
 12331  0033C6                     u12960:
 12332                           
 12333                           ;tff.c: 453: if (n == 0) break;
 12334  0033C6  501B               	movf	make_dirfile@n^0,w,c
 12335  0033C8  B4D8               	btfsc	status,2,c
 12336  0033CA  D070               	goto	l11528
 12337  0033CC  501A               	movf	make_dirfile@a^0,w,c
 12338  0033CE  1418               	andwf	make_dirfile@b^0,w,c
 12339  0033D0  6E14               	movwf	??_make_dirfile^0,c
 12340  0033D2  5014               	movf	??_make_dirfile^0,w,c
 12341  0033D4  6E16               	movwf	_make_dirfile$1733^0,c
 12342  0033D6  6A17               	clrf	(_make_dirfile$1733+1)^0,c
 12343  0033D8  5013               	movf	make_dirfile@dirname^0,w,c
 12344  0033DA  6ED9               	movwf	fsr2l,c
 12345  0033DC  6ADA               	clrf	fsr2h,c
 12346  0033DE  0E0B               	movlw	11
 12347  0033E0  26D9               	addwf	fsr2l,f,c
 12348  0033E2  C016  FFDF         	movff	_make_dirfile$1733,indf2
 12349                           
 12350                           ;tff.c: 455: return c;
 12351  0033E6  501C               	movf	make_dirfile@c^0,w,c
 12352  0033E8  0012               	return	
 12353  0033EA                     l11440:
 12354                           
 12355                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12356  0033EA  0E20               	movlw	32
 12357  0033EC  641C               	cpfsgt	make_dirfile@c^0,c
 12358  0033EE  D05E               	goto	l11528
 12359  0033F0  0E7F               	movlw	127
 12360  0033F2  181C               	xorwf	make_dirfile@c^0,w,c
 12361  0033F4  B4D8               	btfsc	status,2,c
 12362  0033F6  D05A               	goto	l11528
 12363                           
 12364                           ;tff.c: 458: if (c == '.') {
 12365  0033F8  0E2E               	movlw	46
 12366  0033FA  181C               	xorwf	make_dirfile@c^0,w,c
 12367  0033FC  A4D8               	btfss	status,2,c
 12368  0033FE  D00C               	goto	l11470
 12369                           
 12370                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12371  003400  B01A               	btfsc	make_dirfile@a^0,0,c
 12372  003402  D054               	goto	l11528
 12373  003404  501B               	movf	make_dirfile@n^0,w,c
 12374  003406  B4D8               	btfsc	status,2,c
 12375  003408  D051               	goto	l11528
 12376  00340A  0E09               	movlw	9
 12377  00340C  601B               	cpfslt	make_dirfile@n^0,c
 12378  00340E  D04E               	goto	l11528
 12379                           
 12380                           ;tff.c: 460: n = 8; t = 11; continue;
 12381  003410  0E08               	movlw	8
 12382  003412  6E1B               	movwf	make_dirfile@n^0,c
 12383  003414  0E0B               	movlw	11
 12384  003416  D7B3               	goto	L5
 12385  003418                     l11470:
 12386                           
 12387                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12388  003418  0E22               	movlw	34
 12389  00341A  181C               	xorwf	make_dirfile@c^0,w,c
 12390  00341C  B4D8               	btfsc	status,2,c
 12391  00341E  D046               	goto	l11528
 12392                           
 12393                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12394  003420  0E2A               	movlw	42
 12395  003422  601C               	cpfslt	make_dirfile@c^0,c
 12396  003424  D001               	goto	l11478
 12397  003426  D035               	goto	l987
 12398  003428                     l11478:
 12399                           
 12400                           ;tff.c: 473: if (c <= ',') break;
 12401  003428  0E2D               	movlw	45
 12402  00342A  601C               	cpfslt	make_dirfile@c^0,c
 12403  00342C  D001               	goto	l11482
 12404  00342E  D03E               	goto	l11528
 12405  003430                     l11482:
 12406                           
 12407                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12408  003430  0E3A               	movlw	58
 12409  003432  601C               	cpfslt	make_dirfile@c^0,c
 12410  003434  D001               	goto	l11486
 12411  003436  D02D               	goto	l987
 12412  003438                     l11486:
 12413                           
 12414                           ;tff.c: 475: if (c <= '?') break;
 12415  003438  0E40               	movlw	64
 12416  00343A  601C               	cpfslt	make_dirfile@c^0,c
 12417  00343C  D001               	goto	l990
 12418  00343E  D036               	goto	l11528
 12419  003440                     l990:
 12420                           
 12421                           ;tff.c: 476: if (!(a & 1)) {
 12422  003440  B01A               	btfsc	make_dirfile@a^0,0,c
 12423  003442  D027               	goto	l987
 12424                           
 12425                           ;tff.c: 477: if (c == '|') break;
 12426  003444  0E7C               	movlw	124
 12427  003446  181C               	xorwf	make_dirfile@c^0,w,c
 12428  003448  B4D8               	btfsc	status,2,c
 12429  00344A  D030               	goto	l11528
 12430                           
 12431                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12432  00344C  0E5A               	movlw	90
 12433  00344E  641C               	cpfsgt	make_dirfile@c^0,c
 12434  003450  D004               	goto	l11500
 12435  003452  0E5E               	movlw	94
 12436  003454  601C               	cpfslt	make_dirfile@c^0,c
 12437  003456  D001               	goto	l11500
 12438  003458  D029               	goto	l11528
 12439  00345A                     l11500:
 12440  00345A  0E40               	movlw	64
 12441  00345C  641C               	cpfsgt	make_dirfile@c^0,c
 12442  00345E  D00A               	goto	l11510
 12443  003460  0E5B               	movlw	91
 12444  003462  601C               	cpfslt	make_dirfile@c^0,c
 12445  003464  D007               	goto	l11510
 12446                           
 12447                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12448  003466  0E08               	movlw	8
 12449  003468  1819               	xorwf	make_dirfile@t^0,w,c
 12450  00346A  A4D8               	btfss	status,2,c
 12451  00346C  D002               	goto	l11508
 12452  00346E  9618               	bcf	make_dirfile@b^0,3,c
 12453  003470  D001               	goto	l11510
 12454  003472                     l11508:
 12455  003472  9818               	bcf	make_dirfile@b^0,4,c
 12456  003474                     l11510:
 12457                           
 12458                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12459  003474  0E60               	movlw	96
 12460  003476  641C               	cpfsgt	make_dirfile@c^0,c
 12461  003478  D00C               	goto	l987
 12462  00347A  0E7B               	movlw	123
 12463  00347C  601C               	cpfslt	make_dirfile@c^0,c
 12464  00347E  D009               	goto	l987
 12465                           
 12466                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12467  003480  0E20               	movlw	32
 12468  003482  5E1C               	subwf	make_dirfile@c^0,f,c
 12469  003484  0E08               	movlw	8
 12470  003486  1819               	xorwf	make_dirfile@t^0,w,c
 12471  003488  A4D8               	btfss	status,2,c
 12472  00348A  D002               	goto	l11518
 12473  00348C  861A               	bsf	make_dirfile@a^0,3,c
 12474  00348E  D001               	goto	l987
 12475  003490                     l11518:
 12476  003490  881A               	bsf	make_dirfile@a^0,4,c
 12477  003492                     l987:
 12478                           
 12479                           ;tff.c: 487: a &= 0xFE;
 12480  003492  901A               	bcf	make_dirfile@a^0,0,c
 12481                           
 12482                           ;tff.c: 489: if (n >= t) break;
 12483  003494  5019               	movf	make_dirfile@t^0,w,c
 12484  003496  5C1B               	subwf	make_dirfile@n^0,w,c
 12485  003498  B0D8               	btfsc	status,0,c
 12486  00349A  D008               	goto	l11528
 12487                           
 12488                           ;tff.c: 490: dirname[n++] = c;
 12489  00349C  5013               	movf	make_dirfile@dirname^0,w,c
 12490  00349E  241B               	addwf	make_dirfile@n^0,w,c
 12491  0034A0  6ED9               	movwf	fsr2l,c
 12492  0034A2  6ADA               	clrf	fsr2h,c
 12493  0034A4  C01C  FFDF         	movff	make_dirfile@c,indf2
 12494  0034A8  2A1B               	incf	make_dirfile@n^0,f,c
 12495  0034AA  D76A               	goto	l11420
 12496  0034AC                     l11528:
 12497                           
 12498                           ;tff.c: 492: return 1;
 12499  0034AC  0E01               	movlw	1
 12500  0034AE  0012               	return		;funcret
 12501  0034B0                     __end_of_make_dirfile:
 12502                           	callstack 0
 12503                           
 12504 ;; *************** function _reserve_direntry *****************
 12505 ;; Defined at:
 12506 ;;		line 568 in file "bibliotecas/tff.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12509 ;;		 -> f_open@dj(14), 
 12510 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12511 ;;		 -> f_open@dir(2), 
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;  sector          4   44[BANK0 ] unsigned long 
 12514 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12515 ;;		 -> NULL(0), fs(544), 
 12516 ;;  clust           2   52[BANK0 ] unsigned short 
 12517 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12518 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12519 ;;  c               1   51[BANK0 ] unsigned char 
 12520 ;;  n               1   48[BANK0 ] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      enum E155
 12523 ;; Registers used:
 12524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12525 ;; Tracked objects:
 12526 ;;		On entry : 3F/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12530 ;;      Params:         0       2       0       0       0       0       0       0       0
 12531 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12532 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12533 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12534 ;;Total ram usage:       18 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:   10
 12537 ;; This function calls:
 12538 ;;		_clust2sect
 12539 ;;		_create_chain
 12540 ;;		_disk_write
 12541 ;;		_memset
 12542 ;;		_move_window
 12543 ;;		_next_dir_entry
 12544 ;; This function is called by:
 12545 ;;		_f_open
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text73
 12550  002102                     __ptext73:
 12551                           	callstack 0
 12552  002102                     _reserve_direntry:
 12553                           	callstack 15
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12557                           
 12558                           ;incstack = 0
 12559  002102  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12560  002104  6ED9               	movwf	fsr2l,c
 12561  002106  6ADA               	clrf	fsr2h,c
 12562  002108  0E04               	movlw	4
 12563  00210A  26D9               	addwf	fsr2l,f,c
 12564  00210C  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12565  002110  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12566                           
 12567                           ;tff.c: 580: clust = dj->sclust;
 12568  002114  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12569  002116  6ED9               	movwf	fsr2l,c
 12570  002118  6ADA               	clrf	fsr2h,c
 12571  00211A  0E06               	movlw	6
 12572  00211C  26D9               	addwf	fsr2l,f,c
 12573  00211E  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12574  002122  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;tff.c: 581: if (clust != 0) {
 12578  002126  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12579  002128  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12580  00212A  B4D8               	btfsc	status,2,c
 12581  00212C  D01E               	goto	l11864
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;tff.c: 582: dj->clust = clust;
 12585  00212E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12586  002130  6ED9               	movwf	fsr2l,c
 12587  002132  6ADA               	clrf	fsr2h,c
 12588  002134  0E08               	movlw	8
 12589  002136  26D9               	addwf	fsr2l,f,c
 12590  002138  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12591  00213C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12595  002140  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12596  002144  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12597  002148  EC04  F021         	call	_clust2sect	;wreg free
 12598  00214C  0100               	movlb	0	; () banked
 12599  00214E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12600  002150  6ED9               	movwf	fsr2l,c
 12601  002152  6ADA               	clrf	fsr2h,c
 12602  002154  0E0A               	movlw	10
 12603  002156  26D9               	addwf	fsr2l,f,c
 12604  002158  C016  FFDE         	movff	?_clust2sect,postinc2
 12605  00215C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12606  002160  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12607  002164  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12608                           
 12609                           ;tff.c: 584: } else {
 12610  002168  D013               	goto	l11866
 12611  00216A                     l11864:
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;tff.c: 585: dj->sect = fs->dirbase;
 12615  00216A  EE20 F00C          	lfsr	2,12
 12616  00216E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12617  002170  26D9               	addwf	fsr2l,f,c
 12618  002172  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12619  002174  22DA               	addwfc	fsr2h,f,c
 12620  002176  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12621  002178  6EE1               	movwf	fsr1l,c
 12622  00217A  6AE2               	clrf	fsr1h,c
 12623  00217C  0E0A               	movlw	10
 12624  00217E  26E1               	addwf	fsr1l,f,c
 12625  002180  CFDE FFE6          	movff	postinc2,postinc1
 12626  002184  CFDE FFE6          	movff	postinc2,postinc1
 12627  002188  CFDE FFE6          	movff	postinc2,postinc1
 12628  00218C  CFDE FFE6          	movff	postinc2,postinc1
 12629  002190                     l11866:
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12633  002190  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12634  002192  6ED9               	movwf	fsr2l,c
 12635  002194  6ADA               	clrf	fsr2h,c
 12636  002196  0E02               	movlw	2
 12637  002198  26D9               	addwf	fsr2l,f,c
 12638  00219A  0E00               	movlw	0
 12639  00219C  6EDE               	movwf	postinc2,c
 12640  00219E  0E00               	movlw	0
 12641  0021A0  6EDD               	movwf	postdec2,c
 12642  0021A2                     l11868:
 12643                           
 12644                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12645  0021A2  0100               	movlb	0	; () banked
 12646  0021A4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12647  0021A6  6ED9               	movwf	fsr2l,c
 12648  0021A8  6ADA               	clrf	fsr2h,c
 12649  0021AA  0E0A               	movlw	10
 12650  0021AC  26D9               	addwf	fsr2l,f,c
 12651  0021AE  CFDE F035          	movff	postinc2,move_window@sector
 12652  0021B2  CFDE F036          	movff	postinc2,move_window@sector+1
 12653  0021B6  CFDE F037          	movff	postinc2,move_window@sector+2
 12654  0021BA  CFDE F038          	movff	postinc2,move_window@sector+3
 12655  0021BE  EC15  F015         	call	_move_window	;wreg free
 12656  0021C2  0900               	iorlw	0
 12657  0021C4  A4D8               	btfss	status,2,c
 12658  0021C6  D002               	goto	l11874
 12659  0021C8                     u13640:
 12660  0021C8  0E08               	movlw	8
 12661  0021CA  0012               	return	
 12662  0021CC                     l11874:
 12663                           
 12664                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12665  0021CC  0100               	movlb	0	; () banked
 12666  0021CE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12667  0021D0  6ED9               	movwf	fsr2l,c
 12668  0021D2  6ADA               	clrf	fsr2h,c
 12669  0021D4  0E02               	movlw	2
 12670  0021D6  26D9               	addwf	fsr2l,f,c
 12671  0021D8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12672  0021DC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12673  0021E0  0E0F               	movlw	15
 12674  0021E2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12675  0021E4  0E00               	movlw	0
 12676  0021E6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12677  0021E8  0E05               	movlw	5
 12678  0021EA                     u13655:
 12679  0021EA  90D8               	bcf	status,0,c
 12680  0021EC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12681  0021EE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12682  0021F0  2EE8               	decfsz	wreg,f,c
 12683  0021F2  D7FB               	goto	u13655
 12684  0021F4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12685  0021F8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12686  0021FC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12687  0021FE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12688  002200  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12689  002202  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12690  002204  0E20               	movlw	32
 12691  002206  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12692  002208  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12693  00220A  0E00               	movlw	0
 12694  00220C  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12695  00220E  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;tff.c: 592: c = dptr[0];
 12699  002210  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12700  002214  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12701  002218  50DF               	movf	indf2,w,c
 12702  00221A  6F93               	movwf	reserve_direntry@c& (0+255),b
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12706  00221C  5193               	movf	reserve_direntry@c& (0+255),w,b
 12707  00221E  B4D8               	btfsc	status,2,c
 12708  002220  D004               	goto	u13670
 12709                           
 12710                           ; BSR set to: 0
 12711  002222  0EE5               	movlw	229
 12712  002224  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12713  002226  A4D8               	btfss	status,2,c
 12714  002228  D009               	goto	l11888
 12715  00222A                     u13670:
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12719  00222A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12720  00222C  6ED9               	movwf	fsr2l,c
 12721  00222E  6ADA               	clrf	fsr2h,c
 12722  002230  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12723  002234  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12724  002238                     l11884:
 12725                           
 12726                           ; BSR set to: 0
 12727  002238  0E00               	movlw	0
 12728  00223A  0012               	return	
 12729  00223C                     l11888:
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12733  00223C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12734  002240  EC47  F018         	call	_next_dir_entry	;wreg free
 12735  002244  0900               	iorlw	0
 12736  002246  A4D8               	btfss	status,2,c
 12737  002248  D7AC               	goto	l11868
 12738                           
 12739                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12740  00224A  0100               	movlb	0	; () banked
 12741  00224C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12742  00224E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12743  002250  B4D8               	btfsc	status,2,c
 12744  002252  D013               	goto	u13700
 12745                           
 12746                           ; BSR set to: 0
 12747  002254  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12748  002256  6ED9               	movwf	fsr2l,c
 12749  002258  6ADA               	clrf	fsr2h,c
 12750  00225A  0E08               	movlw	8
 12751  00225C  26D9               	addwf	fsr2l,f,c
 12752  00225E  CFDE F078          	movff	postinc2,create_chain@clust
 12753  002262  CFDD F079          	movff	postdec2,create_chain@clust+1
 12754  002266  ECBB  F016         	call	_create_chain	;wreg free
 12755  00226A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12756  00226E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12757  002272  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12758  002274  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12759  002276  A4D8               	btfss	status,2,c
 12760  002278  D002               	goto	l11898
 12761  00227A                     u13700:
 12762                           
 12763                           ; BSR set to: 0
 12764  00227A  0E06               	movlw	6
 12765  00227C  0012               	return	
 12766  00227E                     l11898:
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12770  00227E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12771  002280  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12772  002282  B4D8               	btfsc	status,2,c
 12773  002284  D7A1               	goto	u13640
 12774                           
 12775                           ; BSR set to: 0
 12776  002286  0E00               	movlw	0
 12777  002288  6E35               	movwf	move_window@sector^0,c
 12778  00228A  0E00               	movlw	0
 12779  00228C  6E36               	movwf	(move_window@sector+1)^0,c
 12780  00228E  0E00               	movlw	0
 12781  002290  6E37               	movwf	(move_window@sector+2)^0,c
 12782  002292  0E00               	movlw	0
 12783  002294  6E38               	movwf	(move_window@sector+3)^0,c
 12784  002296  EC15  F015         	call	_move_window	;wreg free
 12785  00229A  0900               	iorlw	0
 12786  00229C  B4D8               	btfsc	status,2,c
 12787  00229E  D794               	goto	u13640
 12788                           
 12789                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12790  0022A0  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12791  0022A4  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12792  0022A8  EC04  F021         	call	_clust2sect	;wreg free
 12793  0022AC  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12794  0022B0  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12795  0022B4  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12796  0022B8  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12797  0022BC  0100               	movlb	0	; () banked
 12798  0022BE  EE20 F004          	lfsr	2,4
 12799  0022C2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12800  0022C4  26D9               	addwf	fsr2l,f,c
 12801  0022C6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12802  0022C8  22DA               	addwfc	fsr2h,f,c
 12803  0022CA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12804  0022CE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12805  0022D2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12806  0022D6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12807                           
 12808                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12809  0022DA  0E20               	movlw	32
 12810  0022DC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12811  0022DE  6E0A               	movwf	memset@p1^0,c
 12812  0022E0  0E00               	movlw	0
 12813  0022E2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12814  0022E4  6E0B               	movwf	(memset@p1+1)^0,c
 12815  0022E6  0E00               	movlw	0
 12816  0022E8  6E0D               	movwf	(memset@c+1)^0,c
 12817  0022EA  0E00               	movlw	0
 12818  0022EC  6E0C               	movwf	memset@c^0,c
 12819  0022EE  0E02               	movlw	2
 12820  0022F0  6E0F               	movwf	(memset@n+1)^0,c
 12821  0022F2  0E00               	movlw	0
 12822  0022F4  6E0E               	movwf	memset@n^0,c
 12823  0022F6  EC09  F02C         	call	_memset	;wreg free
 12824                           
 12825                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12826  0022FA  0100               	movlb	0	; () banked
 12827  0022FC  EE20 F01D          	lfsr	2,29
 12828  002300  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12829  002302  26D9               	addwf	fsr2l,f,c
 12830  002304  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12831  002306  22DA               	addwfc	fsr2h,f,c
 12832  002308  50DF               	movf	indf2,w,c
 12833  00230A  6F90               	movwf	reserve_direntry@n& (0+255),b
 12834  00230C  D01E               	goto	l11920
 12835  00230E                     l11910:
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12839  00230E  0E20               	movlw	32
 12840  002310  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12841  002312  6E29               	movwf	disk_write@buff^0,c
 12842  002314  0E00               	movlw	0
 12843  002316  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12844  002318  6E2A               	movwf	(disk_write@buff+1)^0,c
 12845  00231A  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12846  00231E  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12847  002322  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12848  002326  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12849  00232A  0E01               	movlw	1
 12850  00232C  6E2F               	movwf	disk_write@count^0,c
 12851  00232E  0E00               	movlw	0
 12852  002330  EC3A  F029         	call	_disk_write
 12853  002334  0900               	iorlw	0
 12854  002336  A4D8               	btfss	status,2,c
 12855  002338  D747               	goto	u13640
 12856                           
 12857                           ;tff.c: 608: sector++;
 12858  00233A  0E01               	movlw	1
 12859  00233C  0100               	movlb	0	; () banked
 12860  00233E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12861  002340  0E00               	movlw	0
 12862  002342  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12863  002344  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12864  002346  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12865                           
 12866                           ; BSR set to: 0
 12867  002348  0790               	decf	reserve_direntry@n& (0+255),f,b
 12868  00234A                     l11920:
 12869                           
 12870                           ; BSR set to: 0
 12871  00234A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12872  00234C  A4D8               	btfss	status,2,c
 12873  00234E  D7DF               	goto	l11910
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12877  002350  EE20 F01F          	lfsr	2,31
 12878  002354  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12879  002356  26D9               	addwf	fsr2l,f,c
 12880  002358  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12881  00235A  22DA               	addwfc	fsr2h,f,c
 12882  00235C  0E01               	movlw	1
 12883  00235E  6EDF               	movwf	indf2,c
 12884                           
 12885                           ;tff.c: 611: *dir = fs->win;
 12886  002360  0E20               	movlw	32
 12887  002362  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12888  002364  6F88               	movwf	??_reserve_direntry& (0+255),b
 12889  002366  0E00               	movlw	0
 12890  002368  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12891  00236A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12892  00236C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12893  00236E  6ED9               	movwf	fsr2l,c
 12894  002370  6ADA               	clrf	fsr2h,c
 12895  002372  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12896  002376  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12897  00237A  D75E               	goto	l11884
 12898  00237C                     __end_of_reserve_direntry:
 12899                           	callstack 0
 12900                           
 12901 ;; *************** function _next_dir_entry *****************
 12902 ;; Defined at:
 12903 ;;		line 359 in file "bibliotecas/tff.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12906 ;;		 -> f_open@dj(14), 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  idx             2   28[BANK0 ] unsigned short 
 12909 ;;  clust           2   26[BANK0 ] unsigned short 
 12910 ;; Return value:  Size  Location     Type
 12911 ;;                  1    wreg      enum E105
 12912 ;; Registers used:
 12913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12914 ;; Tracked objects:
 12915 ;;		On entry : 0/0
 12916 ;;		On exit  : 0/0
 12917 ;;		Unchanged: 0/0
 12918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12919 ;;      Params:         1       0       0       0       0       0       0       0       0
 12920 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12921 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12922 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12923 ;;Total ram usage:       12 bytes
 12924 ;; Hardware stack levels used:    1
 12925 ;; Hardware stack levels required when called:    9
 12926 ;; This function calls:
 12927 ;;		_clust2sect
 12928 ;;		_get_cluster
 12929 ;; This function is called by:
 12930 ;;		_trace_path
 12931 ;;		_reserve_direntry
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           	psect	text74
 12936  00308E                     __ptext74:
 12937                           	callstack 0
 12938  00308E                     _next_dir_entry:
 12939                           	callstack 15
 12940                           
 12941                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12942                           
 12943                           ;incstack = 0
 12944  00308E  504C               	movf	next_dir_entry@dj^0,w,c
 12945  003090  6ED9               	movwf	fsr2l,c
 12946  003092  6ADA               	clrf	fsr2h,c
 12947  003094  0E02               	movlw	2
 12948  003096  26D9               	addwf	fsr2l,f,c
 12949  003098  CFDE F073          	movff	postinc2,??_next_dir_entry
 12950  00309C  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12951  0030A0  0E01               	movlw	1
 12952  0030A2  0100               	movlb	0	; () banked
 12953  0030A4  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12954  0030A6  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12955  0030A8  0E00               	movlw	0
 12956  0030AA  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12957  0030AC  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;tff.c: 368: if ((idx & 15) == 0) {
 12961  0030AE  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12962  0030B2  0E0F               	movlw	15
 12963  0030B4  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12964  0030B6  A4D8               	btfss	status,2,c
 12965  0030B8  D092               	goto	l11404
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;tff.c: 369: dj->sect++;
 12969  0030BA  504C               	movf	next_dir_entry@dj^0,w,c
 12970  0030BC  6ED9               	movwf	fsr2l,c
 12971  0030BE  6ADA               	clrf	fsr2h,c
 12972  0030C0  0E0A               	movlw	10
 12973  0030C2  26D9               	addwf	fsr2l,f,c
 12974  0030C4  2ADE               	incf	postinc2,f,c
 12975  0030C6  0E00               	movlw	0
 12976  0030C8  22DE               	addwfc	postinc2,f,c
 12977  0030CA  22DE               	addwfc	postinc2,f,c
 12978  0030CC  22DE               	addwfc	postinc2,f,c
 12979                           
 12980                           ;tff.c: 370: if (dj->clust == 0) {
 12981  0030CE  504C               	movf	next_dir_entry@dj^0,w,c
 12982  0030D0  6ED9               	movwf	fsr2l,c
 12983  0030D2  6ADA               	clrf	fsr2h,c
 12984  0030D4  0E08               	movlw	8
 12985  0030D6  26D9               	addwf	fsr2l,f,c
 12986  0030D8  50DE               	movf	postinc2,w,c
 12987  0030DA  10DE               	iorwf	postinc2,w,c
 12988  0030DC  A4D8               	btfss	status,2,c
 12989  0030DE  D013               	goto	l11388
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12993  0030E0  504C               	movf	next_dir_entry@dj^0,w,c
 12994  0030E2  6ED9               	movwf	fsr2l,c
 12995  0030E4  6ADA               	clrf	fsr2h,c
 12996  0030E6  0E04               	movlw	4
 12997  0030E8  26D9               	addwf	fsr2l,f,c
 12998  0030EA  EE10 F002          	lfsr	1,2
 12999  0030EE  50DE               	movf	postinc2,w,c
 13000  0030F0  26E1               	addwf	fsr1l,f,c
 13001  0030F2  50DD               	movf	postdec2,w,c
 13002  0030F4  22E2               	addwfc	fsr1h,f,c
 13003  0030F6  50E6               	movf	postinc1,w,c
 13004  0030F8  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 13005  0030FA  50E6               	movf	postinc1,w,c
 13006  0030FC  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 13007  0030FE  A0D8               	btfss	status,0,c
 13008  003100  D06E               	goto	l11404
 13009  003102                     u12890:
 13010                           
 13011                           ; BSR set to: 0
 13012  003102  0E00               	movlw	0
 13013  003104  0012               	return	
 13014  003106                     l11388:
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 13018  003106  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 13019  00310A  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 13020  00310E  0E04               	movlw	4
 13021  003110  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 13022  003112                     u12905:
 13023  003112  90D8               	bcf	status,0,c
 13024  003114  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 13025  003116  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 13026  003118  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 13027  00311A  D7FB               	goto	u12905
 13028  00311C  0EFF               	movlw	255
 13029  00311E  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 13030  003120  0EFF               	movlw	255
 13031  003122  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 13032  003124  504C               	movf	next_dir_entry@dj^0,w,c
 13033  003126  6ED9               	movwf	fsr2l,c
 13034  003128  6ADA               	clrf	fsr2h,c
 13035  00312A  0E04               	movlw	4
 13036  00312C  26D9               	addwf	fsr2l,f,c
 13037  00312E  EE10 F01D          	lfsr	1,29
 13038  003132  50DE               	movf	postinc2,w,c
 13039  003134  26E1               	addwf	fsr1l,f,c
 13040  003136  50DD               	movf	postdec2,w,c
 13041  003138  22E2               	addwfc	fsr1h,f,c
 13042  00313A  50E7               	movf	indf1,w,c
 13043  00313C  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 13044  00313E  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 13045  003140  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 13046  003142  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 13047  003144  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 13048  003146  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 13049  003148  5173               	movf	??_next_dir_entry& (0+255),w,b
 13050  00314A  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 13051  00314C  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 13052  00314E  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 13053  003150  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 13054  003152  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 13055  003154  A4D8               	btfss	status,2,c
 13056  003156  D043               	goto	l11404
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;tff.c: 374: clust = get_cluster(dj->clust);
 13060  003158  504C               	movf	next_dir_entry@dj^0,w,c
 13061  00315A  6ED9               	movwf	fsr2l,c
 13062  00315C  6ADA               	clrf	fsr2h,c
 13063  00315E  0E08               	movlw	8
 13064  003160  26D9               	addwf	fsr2l,f,c
 13065  003162  CFDE F04A          	movff	postinc2,get_cluster@clust
 13066  003166  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 13067  00316A  ECF4  F012         	call	_get_cluster	;wreg free
 13068  00316E  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 13069  003172  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 13070                           
 13071                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 13072  003176  0100               	movlb	0	; () banked
 13073  003178  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 13074  00317A  E104               	bnz	u12920
 13075  00317C  0E02               	movlw	2
 13076  00317E  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13077  003180  A0D8               	btfss	status,0,c
 13078  003182  D7BF               	goto	u12890
 13079  003184                     u12920:
 13080                           
 13081                           ; BSR set to: 0
 13082  003184  504C               	movf	next_dir_entry@dj^0,w,c
 13083  003186  6ED9               	movwf	fsr2l,c
 13084  003188  6ADA               	clrf	fsr2h,c
 13085  00318A  0E04               	movlw	4
 13086  00318C  26D9               	addwf	fsr2l,f,c
 13087  00318E  EE10 F016          	lfsr	1,22
 13088  003192  50DE               	movf	postinc2,w,c
 13089  003194  26E1               	addwf	fsr1l,f,c
 13090  003196  50DD               	movf	postdec2,w,c
 13091  003198  22E2               	addwfc	fsr1h,f,c
 13092  00319A  50E6               	movf	postinc1,w,c
 13093  00319C  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13094  00319E  50E6               	movf	postinc1,w,c
 13095  0031A0  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 13096  0031A2  B0D8               	btfsc	status,0,c
 13097  0031A4  D7AE               	goto	u12890
 13098                           
 13099                           ; BSR set to: 0
 13100                           ;tff.c: 377: dj->clust = clust;
 13101  0031A6  504C               	movf	next_dir_entry@dj^0,w,c
 13102  0031A8  6ED9               	movwf	fsr2l,c
 13103  0031AA  6ADA               	clrf	fsr2h,c
 13104  0031AC  0E08               	movlw	8
 13105  0031AE  26D9               	addwf	fsr2l,f,c
 13106  0031B0  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 13107  0031B4  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;tff.c: 378: dj->sect = clust2sect(clust);
 13111  0031B8  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 13112  0031BC  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 13113  0031C0  EC04  F021         	call	_clust2sect	;wreg free
 13114  0031C4  504C               	movf	next_dir_entry@dj^0,w,c
 13115  0031C6  6ED9               	movwf	fsr2l,c
 13116  0031C8  6ADA               	clrf	fsr2h,c
 13117  0031CA  0E0A               	movlw	10
 13118  0031CC  26D9               	addwf	fsr2l,f,c
 13119  0031CE  C016  FFDE         	movff	?_clust2sect,postinc2
 13120  0031D2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 13121  0031D6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 13122  0031DA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 13123  0031DE                     l11404:
 13124                           
 13125                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 13126  0031DE  504C               	movf	next_dir_entry@dj^0,w,c
 13127  0031E0  6ED9               	movwf	fsr2l,c
 13128  0031E2  6ADA               	clrf	fsr2h,c
 13129  0031E4  0E02               	movlw	2
 13130  0031E6  26D9               	addwf	fsr2l,f,c
 13131  0031E8  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 13132  0031EC  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 13133                           
 13134                           ;tff.c: 383: return TRUE;
 13135  0031F0  0E01               	movlw	1
 13136  0031F2  0012               	return		;funcret
 13137  0031F4                     __end_of_next_dir_entry:
 13138                           	callstack 0
 13139                           
 13140 ;; *************** function _clust2sect *****************
 13141 ;; Defined at:
 13142 ;;		line 339 in file "bibliotecas/tff.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;  clust           2   21[COMRAM] unsigned short 
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 13147 ;;		 -> NULL(0), fs(544), 
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  4   21[COMRAM] unsigned long 
 13150 ;; Registers used:
 13151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13157 ;;      Params:         4       0       0       0       0       0       0       0       0
 13158 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13159 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13160 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13161 ;;Total ram usage:       11 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; Hardware stack levels required when called:    3
 13164 ;; This function calls:
 13165 ;;		___lmul
 13166 ;; This function is called by:
 13167 ;;		_next_dir_entry
 13168 ;;		_trace_path
 13169 ;;		_reserve_direntry
 13170 ;;		_f_write
 13171 ;;		_f_read
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text75
 13176  004208                     __ptext75:
 13177                           	callstack 0
 13178  004208                     _clust2sect:
 13179                           	callstack 19
 13180                           
 13181                           ;tff.c: 343: FATFS *fs = FatFs;
 13182                           
 13183                           ;incstack = 0
 13184  004208  C04D  F01F         	movff	_FatFs,clust2sect@fs
 13185  00420C  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 13186                           
 13187                           ;tff.c: 346: clust -= 2;
 13188  004210  0E02               	movlw	2
 13189  004212  5E16               	subwf	clust2sect@clust^0,f,c
 13190  004214  0E00               	movlw	0
 13191  004216  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 13192                           
 13193                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 13194  004218  0EFE               	movlw	254
 13195  00421A  6E1A               	movwf	??_clust2sect^0,c
 13196  00421C  0EFF               	movlw	255
 13197  00421E  6E1B               	movwf	(??_clust2sect+1)^0,c
 13198  004220  EE20 F016          	lfsr	2,22
 13199  004224  501F               	movf	clust2sect@fs^0,w,c
 13200  004226  26D9               	addwf	fsr2l,f,c
 13201  004228  5020               	movf	(clust2sect@fs+1)^0,w,c
 13202  00422A  22DA               	addwfc	fsr2h,f,c
 13203  00422C  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13204  004230  CFDD F01D          	movff	postdec2,??_clust2sect+3
 13205  004234  501A               	movf	??_clust2sect^0,w,c
 13206  004236  261C               	addwf	(??_clust2sect+2)^0,f,c
 13207  004238  501B               	movf	(??_clust2sect+1)^0,w,c
 13208  00423A  221D               	addwfc	(??_clust2sect+3)^0,f,c
 13209  00423C  501C               	movf	(??_clust2sect+2)^0,w,c
 13210  00423E  5C16               	subwf	clust2sect@clust^0,w,c
 13211  004240  501D               	movf	(??_clust2sect+3)^0,w,c
 13212  004242  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 13213  004244  A0D8               	btfss	status,0,c
 13214  004246  D009               	goto	l10910
 13215  004248  0E00               	movlw	0
 13216  00424A  6E16               	movwf	?_clust2sect^0,c
 13217  00424C  0E00               	movlw	0
 13218  00424E  6E17               	movwf	(?_clust2sect+1)^0,c
 13219  004250  0E00               	movlw	0
 13220  004252  6E18               	movwf	(?_clust2sect+2)^0,c
 13221  004254  0E00               	movlw	0
 13222  004256  6E19               	movwf	(?_clust2sect+3)^0,c
 13223  004258  0012               	return	
 13224  00425A                     l10910:
 13225                           
 13226                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 13227  00425A  EE20 F010          	lfsr	2,16
 13228  00425E  501F               	movf	clust2sect@fs^0,w,c
 13229  004260  26D9               	addwf	fsr2l,f,c
 13230  004262  5020               	movf	(clust2sect@fs+1)^0,w,c
 13231  004264  22DA               	addwfc	fsr2h,f,c
 13232  004266  CFDE F01A          	movff	postinc2,??_clust2sect
 13233  00426A  CFDE F01B          	movff	postinc2,??_clust2sect+1
 13234  00426E  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13235  004272  CFDE F01D          	movff	postinc2,??_clust2sect+3
 13236  004276  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 13237  00427A  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 13238  00427E  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 13239  004280  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 13240  004282  EE20 F01D          	lfsr	2,29
 13241  004286  501F               	movf	clust2sect@fs^0,w,c
 13242  004288  26D9               	addwf	fsr2l,f,c
 13243  00428A  5020               	movf	(clust2sect@fs+1)^0,w,c
 13244  00428C  22DA               	addwfc	fsr2h,f,c
 13245  00428E  50DF               	movf	indf2,w,c
 13246  004290  6E1E               	movwf	(??_clust2sect+4)^0,c
 13247  004292  501E               	movf	(??_clust2sect+4)^0,w,c
 13248  004294  6E0E               	movwf	___lmul@multiplicand^0,c
 13249  004296  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13250  004298  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13251  00429A  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13252  00429C  EC6C  F028         	call	___lmul	;wreg free
 13253  0042A0  501A               	movf	??_clust2sect^0,w,c
 13254  0042A2  240A               	addwf	?___lmul^0,w,c
 13255  0042A4  6E16               	movwf	?_clust2sect^0,c
 13256  0042A6  501B               	movf	(??_clust2sect+1)^0,w,c
 13257  0042A8  200B               	addwfc	(?___lmul+1)^0,w,c
 13258  0042AA  6E17               	movwf	(?_clust2sect+1)^0,c
 13259  0042AC  501C               	movf	(??_clust2sect+2)^0,w,c
 13260  0042AE  200C               	addwfc	(?___lmul+2)^0,w,c
 13261  0042B0  6E18               	movwf	(?_clust2sect+2)^0,c
 13262  0042B2  501D               	movf	(??_clust2sect+3)^0,w,c
 13263  0042B4  200D               	addwfc	(?___lmul+3)^0,w,c
 13264  0042B6  6E19               	movwf	(?_clust2sect+3)^0,c
 13265  0042B8  0012               	return		;funcret
 13266  0042BA                     __end_of_clust2sect:
 13267                           	callstack 0
 13268                           
 13269 ;; *************** function _remove_chain *****************
 13270 ;; Defined at:
 13271 ;;		line 250 in file "bibliotecas/tff.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  clust           2   24[BANK0 ] unsigned short 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 13276 ;;		 -> NULL(0), fs(544), 
 13277 ;;  nxt             2   28[BANK0 ] unsigned short 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  1    wreg      enum E105
 13280 ;; Registers used:
 13281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13282 ;; Tracked objects:
 13283 ;;		On entry : 3F/0
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13287 ;;      Params:         0       2       0       0       0       0       0       0       0
 13288 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13289 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13290 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13291 ;;Total ram usage:        8 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:    9
 13294 ;; This function calls:
 13295 ;;		_get_cluster
 13296 ;;		_put_cluster
 13297 ;; This function is called by:
 13298 ;;		_f_open
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text76
 13303  004562                     __ptext76:
 13304                           	callstack 0
 13305  004562                     _remove_chain:
 13306                           	callstack 16
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 13310                           
 13311                           ;incstack = 0
 13312  004562  C04D  F07E         	movff	_FatFs,remove_chain@fs
 13313  004566  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 13314                           
 13315                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 13316  00456A  D037               	goto	l11762
 13317  00456C                     l11742:
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;tff.c: 259: nxt = get_cluster(clust);
 13321  00456C  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 13322  004570  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 13323  004574  ECF4  F012         	call	_get_cluster	;wreg free
 13324  004578  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 13325  00457C  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 13326                           
 13327                           ;tff.c: 260: if (nxt == 1) return FALSE;
 13328  004580  0100               	movlb	0	; () banked
 13329  004582  057C               	decf	remove_chain@nxt& (0+255),w,b
 13330  004584  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 13331  004586  A4D8               	btfss	status,2,c
 13332  004588  D002               	goto	l11750
 13333  00458A                     u13440:
 13334  00458A  0E00               	movlw	0
 13335  00458C  0012               	return	
 13336  00458E                     l11750:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13340  00458E  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13341  004592  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13342  004596  0E00               	movlw	0
 13343  004598  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13344  00459A  0E00               	movlw	0
 13345  00459C  6F62               	movwf	put_cluster@val& (0+255),b
 13346  00459E  ECBE  F011         	call	_put_cluster	;wreg free
 13347  0045A2  0900               	iorlw	0
 13348  0045A4  B4D8               	btfsc	status,2,c
 13349  0045A6  D7F1               	goto	u13440
 13350                           
 13351                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13352  0045A8  0100               	movlb	0	; () banked
 13353  0045AA  EE20 F01A          	lfsr	2,26
 13354  0045AE  517E               	movf	remove_chain@fs& (0+255),w,b
 13355  0045B0  26D9               	addwf	fsr2l,f,c
 13356  0045B2  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13357  0045B4  22DA               	addwfc	fsr2h,f,c
 13358  0045B6  28DE               	incf	postinc2,w,c
 13359  0045B8  E103               	bnz	u13460
 13360  0045BA  28DE               	incf	postinc2,w,c
 13361  0045BC  B4D8               	btfsc	status,2,c
 13362  0045BE  D009               	goto	l11760
 13363  0045C0                     u13460:
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;tff.c: 263: fs->free_clust++;
 13367  0045C0  EE20 F01A          	lfsr	2,26
 13368  0045C4  517E               	movf	remove_chain@fs& (0+255),w,b
 13369  0045C6  26D9               	addwf	fsr2l,f,c
 13370  0045C8  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13371  0045CA  22DA               	addwfc	fsr2h,f,c
 13372  0045CC  2ADE               	incf	postinc2,f,c
 13373  0045CE  0E00               	movlw	0
 13374  0045D0  22DD               	addwfc	postdec2,f,c
 13375  0045D2                     l11760:
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13379  0045D2  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13380  0045D6  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13381  0045DA                     l11762:
 13382                           
 13383                           ; BSR set to: 0
 13384  0045DA  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13385  0045DC  E104               	bnz	u13470
 13386  0045DE  0E02               	movlw	2
 13387  0045E0  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13388  0045E2  A0D8               	btfss	status,0,c
 13389  0045E4  D00C               	goto	u13480
 13390  0045E6                     u13470:
 13391                           
 13392                           ; BSR set to: 0
 13393  0045E6  EE20 F016          	lfsr	2,22
 13394  0045EA  517E               	movf	remove_chain@fs& (0+255),w,b
 13395  0045EC  26D9               	addwf	fsr2l,f,c
 13396  0045EE  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13397  0045F0  22DA               	addwfc	fsr2h,f,c
 13398  0045F2  50DE               	movf	postinc2,w,c
 13399  0045F4  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13400  0045F6  50DE               	movf	postinc2,w,c
 13401  0045F8  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13402  0045FA  A0D8               	btfss	status,0,c
 13403  0045FC  D7B7               	goto	l11742
 13404  0045FE                     u13480:
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13408  0045FE  0E01               	movlw	1
 13409  004600  0012               	return		;funcret
 13410  004602                     __end_of_remove_chain:
 13411                           	callstack 0
 13412                           
 13413 ;; *************** function _memcpy *****************
 13414 ;; Defined at:
 13415 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  d1              2    9[COMRAM] PTR void 
 13418 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13419 ;;  s1              2   11[COMRAM] PTR const void 
 13420 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13421 ;;		 -> fs(544), 
 13422 ;;  n               2   13[COMRAM] unsigned int 
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13425 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13426 ;;		 -> fs(544), 
 13427 ;;  d               2   16[COMRAM] PTR unsigned char 
 13428 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13429 ;;  tmp             1   15[COMRAM] unsigned char 
 13430 ;; Return value:  Size  Location     Type
 13431 ;;                  2    9[COMRAM] PTR void 
 13432 ;; Registers used:
 13433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13434 ;; Tracked objects:
 13435 ;;		On entry : 0/0
 13436 ;;		On exit  : 0/0
 13437 ;;		Unchanged: 0/0
 13438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13439 ;;      Params:         6       0       0       0       0       0       0       0       0
 13440 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13442 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13443 ;;Total ram usage:       11 bytes
 13444 ;; Hardware stack levels used:    1
 13445 ;; Hardware stack levels required when called:    2
 13446 ;; This function calls:
 13447 ;;		Nothing
 13448 ;; This function is called by:
 13449 ;;		_f_open
 13450 ;;		_f_write
 13451 ;;		_f_read
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text77
 13456  005426                     __ptext77:
 13457                           	callstack 0
 13458  005426                     _memcpy:
 13459                           	callstack 20
 13460                           
 13461                           ;incstack = 0
 13462  005426  C00C  F013         	movff	memcpy@s1,memcpy@s
 13463  00542A  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13464  00542E  C00A  F011         	movff	memcpy@d1,memcpy@d
 13465  005432  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13466  005436  D010               	goto	l10944
 13467  005438                     l10936:
 13468  005438  C013  FFD9         	movff	memcpy@s,fsr2l
 13469  00543C  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13470  005440  50DF               	movf	indf2,w,c
 13471  005442  6E10               	movwf	memcpy@tmp^0,c
 13472  005444  4A13               	infsnz	memcpy@s^0,f,c
 13473  005446  2A14               	incf	(memcpy@s+1)^0,f,c
 13474  005448  C011  FFD9         	movff	memcpy@d,fsr2l
 13475  00544C  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13476  005450  C010  FFDF         	movff	memcpy@tmp,indf2
 13477  005454  4A11               	infsnz	memcpy@d^0,f,c
 13478  005456  2A12               	incf	(memcpy@d+1)^0,f,c
 13479  005458                     l10944:
 13480  005458  060E               	decf	memcpy@n^0,f,c
 13481  00545A  A0D8               	btfss	status,0,c
 13482  00545C  060F               	decf	(memcpy@n+1)^0,f,c
 13483  00545E  280E               	incf	memcpy@n^0,w,c
 13484  005460  E1EB               	bnz	l10936
 13485  005462  280F               	incf	(memcpy@n+1)^0,w,c
 13486  005464  B4D8               	btfsc	status,2,c
 13487  005466  0012               	return	
 13488  005468  D7E7               	goto	l10936
 13489  00546A                     __end_of_memcpy:
 13490                           	callstack 0
 13491                           
 13492 ;; *************** function _auto_mount *****************
 13493 ;; Defined at:
 13494 ;;		line 652 in file "bibliotecas/tff.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13497 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13498 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13501 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13502 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13503 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13504 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13505 ;;		 -> NULL(0), fs(544), 
 13506 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13507 ;;		 -> STR_16(13), filename(20), 
 13508 ;;  stat            1   37[BANK0 ] unsigned char 
 13509 ;;  fmt             1   36[BANK0 ] unsigned char 
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      enum E155
 13512 ;; Registers used:
 13513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 3F/0
 13516 ;;		On exit  : 3E/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13519 ;;      Params:         2       0       0       0       0       0       0       0       0
 13520 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13521 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13522 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13523 ;;Total ram usage:       46 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    8
 13526 ;; This function calls:
 13527 ;;		___lldiv
 13528 ;;		___lmul
 13529 ;;		_check_fs
 13530 ;;		_disk_initialize
 13531 ;;		_disk_status
 13532 ;;		_memset
 13533 ;; This function is called by:
 13534 ;;		_f_open
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           	psect	text78
 13539  0005A8                     __ptext78:
 13540                           	callstack 0
 13541  0005A8                     _auto_mount:
 13542                           	callstack 17
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13546                           
 13547                           ;incstack = 0
 13548  0005A8  503D               	movf	auto_mount@path^0,w,c
 13549  0005AA  6ED9               	movwf	fsr2l,c
 13550  0005AC  6ADA               	clrf	fsr2h,c
 13551  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13552  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13553                           
 13554                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13555  0005B6  D003               	goto	l11932
 13556  0005B8                     l11930:
 13557  0005B8  0100               	movlb	0	; () banked
 13558  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13559  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13560  0005BE                     l11932:
 13561                           
 13562                           ; BSR set to: 0
 13563  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13564  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13565  0005C6  6AF8               	clrf	tblptru,c
 13566  0005C8  0E07               	movlw	(high __ramtop+-1)
 13567  0005CA  64F7               	cpfsgt	tblptrh,c
 13568  0005CC  D003               	bra	u13757
 13569  0005CE  0008               	tblrd		*
 13570  0005D0  50F5               	movf	tablat,w,c
 13571  0005D2  D005               	bra	u13750
 13572  0005D4                     u13757:
 13573  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13574  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13575  0005DC  50E7               	movf	indf1,w,c
 13576  0005DE                     u13750:
 13577  0005DE  0A20               	xorlw	32
 13578  0005E0  B4D8               	btfsc	status,2,c
 13579  0005E2  D7EA               	goto	l11930
 13580                           
 13581                           ;tff.c: 665: if (*p == '/') p++;
 13582  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13583  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13584  0005EC  6AF8               	clrf	tblptru,c
 13585  0005EE  0E07               	movlw	(high __ramtop+-1)
 13586  0005F0  64F7               	cpfsgt	tblptrh,c
 13587  0005F2  D003               	bra	u13777
 13588  0005F4  0008               	tblrd		*
 13589  0005F6  50F5               	movf	tablat,w,c
 13590  0005F8  D005               	bra	u13770
 13591  0005FA                     u13777:
 13592  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13593  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13594  000602  50E7               	movf	indf1,w,c
 13595  000604                     u13770:
 13596  000604  0A2F               	xorlw	47
 13597  000606  A4D8               	btfss	status,2,c
 13598  000608  D003               	goto	l11938
 13599  00060A  0100               	movlb	0	; () banked
 13600  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13601  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13602  000610                     l11938:
 13603                           
 13604                           ;tff.c: 666: *path = p;
 13605  000610  503D               	movf	auto_mount@path^0,w,c
 13606  000612  6ED9               	movwf	fsr2l,c
 13607  000614  6ADA               	clrf	fsr2h,c
 13608  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13609  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13610                           
 13611                           ;tff.c: 669: fs = FatFs;
 13612  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13613  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13614                           
 13615                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13616  000626  0100               	movlb	0	; () banked
 13617  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13618  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13619  00062C  A4D8               	btfss	status,2,c
 13620  00062E  D002               	goto	l11948
 13621                           
 13622                           ; BSR set to: 0
 13623  000630  0E0A               	movlw	10
 13624  000632  0012               	return	
 13625  000634                     l11948:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;tff.c: 672: if (fs->fs_type) {
 13629  000634  EE20 F01C          	lfsr	2,28
 13630  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13631  00063A  26D9               	addwf	fsr2l,f,c
 13632  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13633  00063E  22DA               	addwfc	fsr2h,f,c
 13634  000640  50DF               	movf	indf2,w,c
 13635  000642  B4D8               	btfsc	status,2,c
 13636  000644  D00F               	goto	l11966
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;tff.c: 673: stat = disk_status(0);
 13640  000646  0E00               	movlw	0
 13641  000648  ECAC  F02B         	call	_disk_status
 13642  00064C  0100               	movlb	0	; () banked
 13643  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;tff.c: 674: if (!(stat & 0x01)) {
 13647  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13648  000652  D008               	goto	l11966
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13652  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13653  000656  A4D8               	btfss	status,2,c
 13654                           
 13655                           ; BSR set to: 0
 13656  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13657  00065A  D002               	goto	l11962
 13658  00065C                     u13830:
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13662  00065C  0E09               	movlw	9
 13663  00065E  0012               	return	
 13664  000660                     l11962:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;tff.c: 679: return FR_OK;
 13668  000660  0E00               	movlw	0
 13669  000662  0012               	return	
 13670  000664                     l11966:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13674  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13675  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13676  00066C  0E00               	movlw	0
 13677  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13678  000670  0E00               	movlw	0
 13679  000672  6E0C               	movwf	memset@c^0,c
 13680  000674  0E02               	movlw	2
 13681  000676  6E0F               	movwf	(memset@n+1)^0,c
 13682  000678  0E20               	movlw	32
 13683  00067A  6E0E               	movwf	memset@n^0,c
 13684  00067C  EC09  F02C         	call	_memset	;wreg free
 13685                           
 13686                           ;tff.c: 686: stat = disk_initialize(0);
 13687  000680  0E00               	movlw	0
 13688  000682  EC88  F02C         	call	_disk_initialize
 13689  000686  0100               	movlb	0	; () banked
 13690  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;tff.c: 687: if (stat & 0x01)
 13694  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13695  00068C  D002               	goto	l11976
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;tff.c: 688: return FR_NOT_READY;
 13699  00068E  0E01               	movlw	1
 13700  000690  0012               	return	
 13701  000692                     l11976:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13705  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13706  000694  B4D8               	btfsc	status,2,c
 13707  000696  D002               	goto	l11984
 13708                           
 13709                           ; BSR set to: 0
 13710  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13711  00069A  D7E0               	goto	u13830
 13712  00069C                     l11984:
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13716  00069C  0E00               	movlw	0
 13717  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13718  0006A0  0E00               	movlw	0
 13719  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13720  0006A4  0E00               	movlw	0
 13721  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13722  0006A8  0E00               	movlw	0
 13723  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13724  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13725  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13726  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13727  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13728  0006BC  ECB3  F024         	call	_check_fs	;wreg free
 13729  0006C0  0100               	movlb	0	; () banked
 13730  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;tff.c: 697: if (fmt == 1) {
 13734  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13735  0006C6  A4D8               	btfss	status,2,c
 13736  0006C8  D023               	goto	l11994
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;tff.c: 699: if (fs->win[446+4]) {
 13740  0006CA  EE21 F0E2          	lfsr	2,482
 13741  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13742  0006D0  26D9               	addwf	fsr2l,f,c
 13743  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13744  0006D4  22DA               	addwfc	fsr2h,f,c
 13745  0006D6  50DF               	movf	indf2,w,c
 13746  0006D8  B4D8               	btfsc	status,2,c
 13747  0006DA  D01A               	goto	l11994
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13751  0006DC  EE21 F0E6          	lfsr	2,486
 13752  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13753  0006E2  26D9               	addwf	fsr2l,f,c
 13754  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13755  0006E6  22DA               	addwfc	fsr2h,f,c
 13756  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13757  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13758  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13759  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;tff.c: 701: fmt = check_fs(bootsect);
 13763  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13764  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13765  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13766  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13767  000708  ECB3  F024         	call	_check_fs	;wreg free
 13768  00070C  0100               	movlb	0	; () banked
 13769  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13770  000710                     l11994:
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13774  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13775  000712  A4D8               	btfss	status,2,c
 13776  000714  D00C               	goto	u13900
 13777                           
 13778                           ; BSR set to: 0
 13779  000716  EE20 F02B          	lfsr	2,43
 13780  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13781  00071C  26D9               	addwf	fsr2l,f,c
 13782  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13783  000720  22DA               	addwfc	fsr2h,f,c
 13784  000722  50DE               	movf	postinc2,w,c
 13785  000724  E104               	bnz	u13900
 13786  000726  0E02               	movlw	2
 13787  000728  18DE               	xorwf	postinc2,w,c
 13788  00072A  B4D8               	btfsc	status,2,c
 13789  00072C  D002               	goto	l12002
 13790  00072E                     u13900:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13794  00072E  0E0B               	movlw	11
 13795  000730  0012               	return	
 13796  000732                     l12002:
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13800  000732  EE20 F036          	lfsr	2,54
 13801  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13802  000738  26D9               	addwf	fsr2l,f,c
 13803  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13804  00073C  22DA               	addwfc	fsr2h,f,c
 13805  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13806  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13807  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13808  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13809  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13810  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13814  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13815  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13816  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13817  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13818  00075A  A4D8               	btfss	status,2,c
 13819  00075C  D00E               	goto	l1074
 13820                           
 13821                           ; BSR set to: 0
 13822  00075E  EE20 F044          	lfsr	2,68
 13823  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13824  000764  26D9               	addwf	fsr2l,f,c
 13825  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13826  000768  22DA               	addwfc	fsr2h,f,c
 13827  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13828  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13829  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13830  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13831  00077A                     l1074:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13835  00077A  EE20 F014          	lfsr	2,20
 13836  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13837  000780  26D9               	addwf	fsr2l,f,c
 13838  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13839  000784  22DA               	addwfc	fsr2h,f,c
 13840  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13841  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13845  00078E  EE20 F030          	lfsr	2,48
 13846  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13847  000794  26D9               	addwf	fsr2l,f,c
 13848  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13849  000798  22DA               	addwfc	fsr2h,f,c
 13850  00079A  EE10 F01E          	lfsr	1,30
 13851  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13852  0007A0  26E1               	addwf	fsr1l,f,c
 13853  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13854  0007A4  22E2               	addwfc	fsr1h,f,c
 13855  0007A6  CFDF FFE7          	movff	indf2,indf1
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;tff.c: 712: fatsize *= fs->n_fats;
 13859  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13860  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13861  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13862  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13863  0007BA  EE20 F01E          	lfsr	2,30
 13864  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13865  0007C0  26D9               	addwf	fsr2l,f,c
 13866  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13867  0007C4  22DA               	addwfc	fsr2h,f,c
 13868  0007C6  50DF               	movf	indf2,w,c
 13869  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13870  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13871  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13872  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13873  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13874  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13875  0007D4  EC6C  F028         	call	___lmul	;wreg free
 13876  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13877  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13878  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13879  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13880                           
 13881                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13882  0007E8  0100               	movlb	0	; () banked
 13883  0007EA  EE20 F02E          	lfsr	2,46
 13884  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13885  0007F0  26D9               	addwf	fsr2l,f,c
 13886  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13887  0007F4  22DA               	addwfc	fsr2h,f,c
 13888  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13889  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13890  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13891  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13892  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13893  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13894  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13895  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13896  00080A  0E00               	movlw	0
 13897  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13898  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13899  000810  0E00               	movlw	0
 13900  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13901  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13902  000816  EE20 F008          	lfsr	2,8
 13903  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13904  00081C  26D9               	addwf	fsr2l,f,c
 13905  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13906  000820  22DA               	addwfc	fsr2h,f,c
 13907  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13908  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13909  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13910  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;tff.c: 714: fs->csize = fs->win[13];
 13914  000832  EE20 F02D          	lfsr	2,45
 13915  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13916  000838  26D9               	addwf	fsr2l,f,c
 13917  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13918  00083C  22DA               	addwfc	fsr2h,f,c
 13919  00083E  EE10 F01D          	lfsr	1,29
 13920  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13921  000844  26E1               	addwf	fsr1l,f,c
 13922  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13923  000848  22E2               	addwfc	fsr1h,f,c
 13924  00084A  CFDF FFE7          	movff	indf2,indf1
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13928  00084E  EE20 F031          	lfsr	2,49
 13929  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13930  000854  26D9               	addwf	fsr2l,f,c
 13931  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13932  000858  22DA               	addwfc	fsr2h,f,c
 13933  00085A  EE10 F002          	lfsr	1,2
 13934  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13935  000860  26E1               	addwf	fsr1l,f,c
 13936  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13937  000864  22E2               	addwfc	fsr1h,f,c
 13938  000866  CFDE FFE6          	movff	postinc2,postinc1
 13939  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13943  00086E  EE20 F033          	lfsr	2,51
 13944  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13945  000874  26D9               	addwf	fsr2l,f,c
 13946  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13947  000878  22DA               	addwfc	fsr2h,f,c
 13948  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13949  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13950  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13951  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13952  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13953  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13957  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13958  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13959  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13960  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13961  000896  A4D8               	btfss	status,2,c
 13962  000898  D00E               	goto	l12024
 13963                           
 13964                           ; BSR set to: 0
 13965  00089A  EE20 F040          	lfsr	2,64
 13966  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13967  0008A0  26D9               	addwf	fsr2l,f,c
 13968  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13969  0008A4  22DA               	addwfc	fsr2h,f,c
 13970  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13971  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13972  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13973  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13974  0008B6                     l12024:
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13978  0008B6  EE20 F002          	lfsr	2,2
 13979  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13980  0008BC  26D9               	addwf	fsr2l,f,c
 13981  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13982  0008C0  22DA               	addwfc	fsr2h,f,c
 13983  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13984  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13985  0008CA  0E04               	movlw	4
 13986  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13987  0008CE                     u13935:
 13988  0008CE  90D8               	bcf	status,0,c
 13989  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13990  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13991  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13992  0008D6  D7FB               	goto	u13935
 13993  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13994  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13995  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13996  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13997  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13998  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13999  0008E4  EE20 F02E          	lfsr	2,46
 14000  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 14001  0008EA  26D9               	addwf	fsr2l,f,c
 14002  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14003  0008EE  22DA               	addwfc	fsr2h,f,c
 14004  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 14005  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 14006  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 14007  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14008  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 14009  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14010  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 14011  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 14012  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 14013  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 14014  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 14015  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 14016  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 14017  00090E  0E00               	movlw	0
 14018  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 14019  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 14020  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 14021  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14022  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 14023  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14024  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14025  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 14026  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14027  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14028  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 14029  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 14030  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14031  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 14032  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 14033  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 14034  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 14035  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 14036  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14037  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 14038  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 14039  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14040  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 14041  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 14042  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 14043  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 14044  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 14045  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 14046  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 14047  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 14048  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 14049  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 14050  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 14051  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 14052  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 14053  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 14054  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 14055  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 14056  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 14057  00095E  EE20 F01D          	lfsr	2,29
 14058  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 14059  000964  26D9               	addwf	fsr2l,f,c
 14060  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14061  000968  22DA               	addwfc	fsr2h,f,c
 14062  00096A  50DF               	movf	indf2,w,c
 14063  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 14064  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 14065  000970  6E0E               	movwf	___lldiv@divisor^0,c
 14066  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 14067  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 14068  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 14069  000978  ECF4  F024         	call	___lldiv	;wreg free
 14070  00097C  0E02               	movlw	2
 14071  00097E  240A               	addwf	?___lldiv^0,w,c
 14072  000980  0100               	movlb	0	; () banked
 14073  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 14074  000984  0E00               	movlw	0
 14075  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 14076  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 14077  00098A  0E00               	movlw	0
 14078  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 14079  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 14080  000990  0E00               	movlw	0
 14081  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 14082  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 14083  000996  EE20 F016          	lfsr	2,22
 14084  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 14085  00099C  26D9               	addwf	fsr2l,f,c
 14086  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14087  0009A0  22DA               	addwfc	fsr2h,f,c
 14088  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 14089  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;tff.c: 722: fmt = 1;
 14093  0009AA  0E01               	movlw	1
 14094  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 14098  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14099  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14100  0009B2  E106               	bnz	u13940
 14101  0009B4  0EF7               	movlw	247
 14102  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14103  0009B8  0E0F               	movlw	15
 14104  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14105  0009BC  A0D8               	btfss	status,0,c
 14106  0009BE  D002               	goto	l12032
 14107  0009C0                     u13940:
 14108                           
 14109                           ; BSR set to: 0
 14110  0009C0  0E02               	movlw	2
 14111  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 14112  0009C4                     l12032:
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 14116  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14117  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14118  0009C8  E107               	bnz	u13950
 14119  0009CA  0EF7               	movlw	247
 14120  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14121  0009CE  0EFF               	movlw	255
 14122  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14123  0009D2  B0D8               	btfsc	status,0,c
 14124  0009D4  D6AC               	goto	u13900
 14125  0009D6  D001               	goto	l12038
 14126  0009D8                     u13950:
 14127  0009D8  D6AA               	goto	u13900
 14128  0009DA                     l12038:
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 14132  0009DA  EE20 F008          	lfsr	2,8
 14133  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 14134  0009E0  26D9               	addwf	fsr2l,f,c
 14135  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14136  0009E4  22DA               	addwfc	fsr2h,f,c
 14137  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 14138  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 14139  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 14140  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 14141  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14142  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 14143  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 14144  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14145  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14146  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 14147  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14148  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14149  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14150  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14151  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14152  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14153  000A0E  EE20 F00C          	lfsr	2,12
 14154  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 14155  000A14  26D9               	addwf	fsr2l,f,c
 14156  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14157  000A18  22DA               	addwfc	fsr2h,f,c
 14158  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 14159  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 14160  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 14161  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 14162                           
 14163                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 14164  000A2A  EE20 F008          	lfsr	2,8
 14165  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 14166  000A30  26D9               	addwf	fsr2l,f,c
 14167  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14168  000A34  22DA               	addwfc	fsr2h,f,c
 14169  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 14170  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 14171  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 14172  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 14173  000A46  EE20 F002          	lfsr	2,2
 14174  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 14175  000A4C  26D9               	addwf	fsr2l,f,c
 14176  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14177  000A50  22DA               	addwfc	fsr2h,f,c
 14178  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 14179  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 14180  000A5A  0E04               	movlw	4
 14181  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14182  000A5E                     u13965:
 14183  000A5E  90D8               	bcf	status,0,c
 14184  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 14185  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 14186  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 14187  000A66  D7FB               	goto	u13965
 14188  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14189  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 14190  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14191  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14192  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14193  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 14194  000A74  0E00               	movlw	0
 14195  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14196  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14197  000A7A  0E00               	movlw	0
 14198  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14199  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14200  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14201  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 14202  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 14203  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14204  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 14205  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 14206  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14207  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 14208  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14209  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14210  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 14211  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14212  000A98  EE20 F010          	lfsr	2,16
 14213  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 14214  000A9E  26D9               	addwf	fsr2l,f,c
 14215  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14216  000AA2  22DA               	addwfc	fsr2h,f,c
 14217  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 14218  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 14219  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 14220  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 14221                           
 14222                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 14223  000AB4  EE20 F01A          	lfsr	2,26
 14224  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 14225  000ABA  26D9               	addwf	fsr2l,f,c
 14226  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14227  000ABE  22DA               	addwfc	fsr2h,f,c
 14228  000AC0  0EFF               	movlw	255
 14229  000AC2  6EDE               	movwf	postinc2,c
 14230  000AC4  0EFF               	movlw	255
 14231  000AC6  6EDD               	movwf	postdec2,c
 14232                           
 14233                           ;tff.c: 754: fs->fs_type = fmt;
 14234  000AC8  EE20 F01C          	lfsr	2,28
 14235  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 14236  000ACE  26D9               	addwf	fsr2l,f,c
 14237  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14238  000AD2  22DA               	addwfc	fsr2h,f,c
 14239  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;tff.c: 755: fs->id = ++fsid;
 14243  000AD8  0101               	movlb	1	; () banked
 14244  000ADA  4B72               	infsnz	_fsid& (0+255),f,b
 14245  000ADC  2B73               	incf	(_fsid+1)& (0+255),f,b
 14246  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 14247  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 14248  000AE6  C172  FFDE         	movff	_fsid,postinc2
 14249  000AEA  C173  FFDD         	movff	_fsid+1,postdec2
 14250                           
 14251                           ;tff.c: 756: return FR_OK;
 14252  000AEE  0E00               	movlw	0
 14253  000AF0  0012               	return		;funcret
 14254  000AF2                     __end_of_auto_mount:
 14255                           	callstack 0
 14256                           
 14257 ;; *************** function _memset *****************
 14258 ;; Defined at:
 14259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;  p1              2    9[COMRAM] PTR void 
 14262 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14263 ;;  c               2   11[COMRAM] int 
 14264 ;;  n               2   13[COMRAM] unsigned int 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  p               2   15[COMRAM] PTR unsigned char 
 14267 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  2    9[COMRAM] PTR void 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14277 ;;      Params:         6       0       0       0       0       0       0       0       0
 14278 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14280 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14281 ;;Total ram usage:        8 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:    2
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_make_dirfile
 14288 ;;		_reserve_direntry
 14289 ;;		_auto_mount
 14290 ;;		_f_open
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           	psect	text79
 14295  005812                     __ptext79:
 14296                           	callstack 0
 14297  005812                     _memset:
 14298                           	callstack 21
 14299                           
 14300                           ;incstack = 0
 14301  005812  C00A  F010         	movff	memset@p1,memset@p
 14302  005816  C00B  F011         	movff	memset@p1+1,memset@p+1
 14303  00581A  D008               	goto	l11162
 14304  00581C                     l11158:
 14305  00581C  C010  FFD9         	movff	memset@p,fsr2l
 14306  005820  C011  FFDA         	movff	memset@p+1,fsr2h
 14307  005824  C00C  FFDF         	movff	memset@c,indf2
 14308  005828  4A10               	infsnz	memset@p^0,f,c
 14309  00582A  2A11               	incf	(memset@p+1)^0,f,c
 14310  00582C                     l11162:
 14311  00582C  060E               	decf	memset@n^0,f,c
 14312  00582E  A0D8               	btfss	status,0,c
 14313  005830  060F               	decf	(memset@n+1)^0,f,c
 14314  005832  280E               	incf	memset@n^0,w,c
 14315  005834  E1F3               	bnz	l11158
 14316  005836  280F               	incf	(memset@n+1)^0,w,c
 14317  005838  B4D8               	btfsc	status,2,c
 14318  00583A  0012               	return	
 14319  00583C  D7EF               	goto	l11158
 14320  00583E                     __end_of_memset:
 14321                           	callstack 0
 14322                           
 14323 ;; *************** function _disk_initialize *****************
 14324 ;; Defined at:
 14325 ;;		line 59 in file "bibliotecas/diskio.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  pdrv            1    wreg     unsigned char 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  pdrv            1   41[COMRAM] unsigned char 
 14330 ;;  result          2    0        int 
 14331 ;;  stat            1   42[COMRAM] unsigned char 
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      unsigned char 
 14334 ;; Registers used:
 14335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0
 14342 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14343 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14344 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14345 ;;Total ram usage:        2 bytes
 14346 ;; Hardware stack levels used:    1
 14347 ;; Hardware stack levels required when called:    7
 14348 ;; This function calls:
 14349 ;;		_sdc_disk_initialize
 14350 ;; This function is called by:
 14351 ;;		_auto_mount
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           	psect	text80
 14356  005910                     __ptext80:
 14357                           	callstack 0
 14358  005910                     _disk_initialize:
 14359                           	callstack 17
 14360                           
 14361                           ;incstack = 0
 14362                           ;disk_initialize@pdrv stored from wreg
 14363  005910  6E2A               	movwf	disk_initialize@pdrv^0,c
 14364                           
 14365                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14366  005912  D005               	goto	l11350
 14367  005914                     l11332:
 14368                           
 14369                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14370  005914  EC8A  F00C         	call	_sdc_disk_initialize	;wreg free
 14371  005918  6E2B               	movwf	disk_initialize@stat^0,c
 14372  00591A                     l11334:
 14373                           
 14374                           ;diskio.c: 72: return stat;
 14375  00591A  502B               	movf	disk_initialize@stat^0,w,c
 14376  00591C  0012               	return	
 14377  00591E                     l11350:
 14378  00591E  502A               	movf	disk_initialize@pdrv^0,w,c
 14379                           
 14380                           ; Switch size 1, requested type "simple"
 14381                           ; Number of cases is 3, Range of values is 0 to 2
 14382                           ; switch strategies available:
 14383                           ; Name         Instructions Cycles
 14384                           ; simple_byte           10     6 (average)
 14385                           ;	Chosen strategy is simple_byte
 14386  005920  0A00               	xorlw	0	; case 0
 14387  005922  B4D8               	btfsc	status,2,c
 14388  005924  D7F7               	goto	l11332
 14389  005926  0A01               	xorlw	1	; case 1
 14390  005928  B4D8               	btfsc	status,2,c
 14391  00592A  D7F4               	goto	l11332
 14392  00592C  0A03               	xorlw	3	; case 2
 14393  00592E  B4D8               	btfsc	status,2,c
 14394  005930  D7F4               	goto	l11334
 14395                           
 14396                           ;diskio.c: 88: return 0x01;
 14397  005932  0E01               	movlw	1
 14398  005934  0012               	return		;funcret
 14399  005936                     __end_of_disk_initialize:
 14400                           	callstack 0
 14401                           
 14402 ;; *************** function _sdc_disk_initialize *****************
 14403 ;; Defined at:
 14404 ;;		line 275 in file "bibliotecas/diskio.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;		None
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;  count2          2   38[COMRAM] int 
 14409 ;;  crc_number      2   34[COMRAM] int 
 14410 ;;  count1          2   32[COMRAM] int 
 14411 ;;  i               2    0        int 
 14412 ;;  buff            1   40[COMRAM] unsigned char 
 14413 ;;  ocr             1   37[COMRAM] unsigned char 
 14414 ;;  buff_i          1   36[COMRAM] unsigned char 
 14415 ;;  stat            1   31[COMRAM] unsigned char 
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      unsigned char 
 14418 ;; Registers used:
 14419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0
 14426 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14427 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14428 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14429 ;;Total ram usage:       13 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:    6
 14432 ;; This function calls:
 14433 ;;		_command
 14434 ;;		_dummy_clocks
 14435 ;;		_escreve_frase_ram_lcd
 14436 ;;		_posicao_cursor_lcd
 14437 ;;		_proceed
 14438 ;;		_response
 14439 ;;		_sdc_reset
 14440 ;; This function is called by:
 14441 ;;		_disk_initialize
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text81
 14446  001914                     __ptext81:
 14447                           	callstack 0
 14448  001914                     _sdc_disk_initialize:
 14449                           	callstack 17
 14450                           
 14451                           ;incstack = 0
 14452  001914  0E00               	movlw	0
 14453  001916  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14454  001918  0E00               	movlw	0
 14455  00191A  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14456  00191C  0E00               	movlw	0
 14457  00191E  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14458  001920  0E00               	movlw	0
 14459  001922  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14460                           
 14461                           ;diskio.c: 280: BYTE buff = 0;
 14462  001924  0E00               	movlw	0
 14463  001926  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14464                           
 14465                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14466  001928  0E10               	movlw	16
 14467  00192A  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14468  00192C  0E94               	movlw	148
 14469  00192E                     u16717:
 14470  00192E  2EE8               	decfsz	wreg,f,c
 14471  001930  D7FE               	bra	u16717
 14472  001932  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14473  001934  D7FC               	bra	u16717
 14474  001936  D000               	nop2	
 14475                           
 14476                           ;diskio.c: 284: dummy_clocks(100);
 14477  001938  0E64               	movlw	100
 14478  00193A  ECD7  F02A         	call	_dummy_clocks
 14479                           
 14480                           ;diskio.c: 287: sdc_reset();
 14481  00193E  ECE3  F023         	call	_sdc_reset	;wreg free
 14482                           
 14483                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14484  001942  0EAA               	movlw	170
 14485  001944  6E0F               	movwf	command@arg^0,c
 14486  001946  0E01               	movlw	1
 14487  001948  6E10               	movwf	(command@arg+1)^0,c
 14488  00194A  0E00               	movlw	0
 14489  00194C  6E11               	movwf	(command@arg+2)^0,c
 14490  00194E  0E00               	movlw	0
 14491  001950  6E12               	movwf	(command@arg+3)^0,c
 14492  001952  0E87               	movlw	135
 14493  001954  6E13               	movwf	command@CRC^0,c
 14494  001956  0E48               	movlw	72
 14495  001958  ECBB  F027         	call	_command
 14496                           
 14497                           ;diskio.c: 289: proceed();
 14498  00195C  ECFF  F02D         	call	_proceed	;wreg free
 14499  001960                     l10970:
 14500                           
 14501                           ;diskio.c: 291: buff_i = response();
 14502  001960  ECF9  F02D         	call	_response	;wreg free
 14503  001964  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14504                           
 14505                           ;diskio.c: 292: if(buff_i == 1)
 14506  001966  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14507  001968  A4D8               	btfss	status,2,c
 14508  00196A  D004               	goto	l10976
 14509                           
 14510                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14511  00196C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14512  00196E  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14513  001970  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14514                           
 14515                           ;diskio.c: 295: }
 14516  001972  D006               	goto	l10980
 14517  001974                     l10976:
 14518                           
 14519                           ;diskio.c: 296: else if(buff_i==0xAA)
 14520  001974  0EAA               	movlw	170
 14521  001976  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14522  001978  A4D8               	btfss	status,2,c
 14523  00197A  D002               	goto	l10980
 14524                           
 14525                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14526  00197C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14527  00197E  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14528  001980                     l10980:
 14529                           
 14530                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14531  001980  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14532  001982  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14533                           
 14534                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14535  001984  0EAA               	movlw	170
 14536  001986  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14537  001988  E103               	bnz	u12290
 14538  00198A  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14539  00198C  B4D8               	btfsc	status,2,c
 14540  00198E  D008               	goto	u12300
 14541  001990                     u12290:
 14542  001990  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14543  001992  D7E6               	goto	l10970
 14544  001994  0EE8               	movlw	232
 14545  001996  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14546  001998  0E03               	movlw	3
 14547  00199A  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14548  00199C  A0D8               	btfss	status,0,c
 14549  00199E  D7E0               	goto	l10970
 14550  0019A0                     u12300:
 14551                           
 14552                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14553  0019A0  0EAA               	movlw	170
 14554  0019A2  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14555  0019A4  E102               	bnz	u12311
 14556  0019A6  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14557  0019A8  A4D8               	btfss	status,2,c
 14558  0019AA                     u12311:
 14559  0019AA  D099               	goto	l11058
 14560  0019AC                     u12310:
 14561                           
 14562                           ;diskio.c: 310: count2 = 0;
 14563                           
 14564                           ;diskio.c: 309: do{
 14565  0019AC  0E00               	movlw	0
 14566  0019AE  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14567  0019B0  0E00               	movlw	0
 14568  0019B2  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14569  0019B4                     
 14570                           ;diskio.c: 319: dummy_clocks(10);
 14571  0019B4  0E0A               	movlw	10
 14572  0019B6  ECD7  F02A         	call	_dummy_clocks
 14573                           
 14574                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14575  0019BA  0E00               	movlw	0
 14576  0019BC  6E0F               	movwf	command@arg^0,c
 14577  0019BE  0E00               	movlw	0
 14578  0019C0  6E10               	movwf	(command@arg+1)^0,c
 14579  0019C2  0E00               	movlw	0
 14580  0019C4  6E11               	movwf	(command@arg+2)^0,c
 14581  0019C6  0E00               	movlw	0
 14582  0019C8  6E12               	movwf	(command@arg+3)^0,c
 14583  0019CA  0E00               	movlw	0
 14584  0019CC  6E13               	movwf	command@CRC^0,c
 14585  0019CE  0E77               	movlw	119
 14586  0019D0  ECBB  F027         	call	_command
 14587                           
 14588                           ;diskio.c: 323: proceed();
 14589  0019D4  ECFF  F02D         	call	_proceed	;wreg free
 14590  0019D8                     l11000:
 14591                           
 14592                           ;diskio.c: 325: buff = response();
 14593  0019D8  ECF9  F02D         	call	_response	;wreg free
 14594  0019DC  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14595                           
 14596                           ;diskio.c: 326: count2++;
 14597  0019DE  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14598  0019E0  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14599                           
 14600                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14601  0019E2  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14602  0019E4  B4D8               	btfsc	status,2,c
 14603  0019E6  D008               	goto	u12330
 14604  0019E8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14605  0019EA  D7F6               	goto	l11000
 14606  0019EC  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14607  0019EE  E104               	bnz	u12330
 14608  0019F0  0E0A               	movlw	10
 14609  0019F2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14610  0019F4  A0D8               	btfss	status,0,c
 14611  0019F6  D7F0               	goto	l11000
 14612  0019F8                     u12330:
 14613                           
 14614                           ;diskio.c: 328: count2 = 0;
 14615  0019F8  0E00               	movlw	0
 14616  0019FA  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14617  0019FC  0E00               	movlw	0
 14618  0019FE  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14619                           
 14620                           ;diskio.c: 332: dummy_clocks(10);
 14621  001A00  0E0A               	movlw	10
 14622  001A02  ECD7  F02A         	call	_dummy_clocks
 14623                           
 14624                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14625  001A06  0E00               	movlw	0
 14626  001A08  6E0F               	movwf	command@arg^0,c
 14627  001A0A  0E00               	movlw	0
 14628  001A0C  6E10               	movwf	(command@arg+1)^0,c
 14629  001A0E  0E00               	movlw	0
 14630  001A10  6E11               	movwf	(command@arg+2)^0,c
 14631  001A12  0E40               	movlw	64
 14632  001A14  6E12               	movwf	(command@arg+3)^0,c
 14633  001A16  0E00               	movlw	0
 14634  001A18  6E13               	movwf	command@CRC^0,c
 14635  001A1A  0E69               	movlw	105
 14636  001A1C  ECBB  F027         	call	_command
 14637                           
 14638                           ;diskio.c: 334: proceed();
 14639  001A20  ECFF  F02D         	call	_proceed	;wreg free
 14640                           
 14641                           ;diskio.c: 335: buff = response();
 14642  001A24  ECF9  F02D         	call	_response	;wreg free
 14643  001A28  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14644                           
 14645                           ;diskio.c: 336: count2++;
 14646  001A2A  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14647  001A2C  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14648                           
 14649                           ;diskio.c: 337: }while(buff!=0X00);
 14650  001A2E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14651  001A30  A4D8               	btfss	status,2,c
 14652  001A32  D7C0               	goto	l10990
 14653                           
 14654                           ;diskio.c: 342: dummy_clocks(10);
 14655  001A34  0E0A               	movlw	10
 14656  001A36  ECD7  F02A         	call	_dummy_clocks
 14657                           
 14658                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14659  001A3A  0E00               	movlw	0
 14660  001A3C  6E0F               	movwf	command@arg^0,c
 14661  001A3E  0E00               	movlw	0
 14662  001A40  6E10               	movwf	(command@arg+1)^0,c
 14663  001A42  0E00               	movlw	0
 14664  001A44  6E11               	movwf	(command@arg+2)^0,c
 14665  001A46  0E00               	movlw	0
 14666  001A48  6E12               	movwf	(command@arg+3)^0,c
 14667  001A4A  0EFF               	movlw	255
 14668  001A4C  6E13               	movwf	command@CRC^0,c
 14669  001A4E  0E7A               	movlw	122
 14670  001A50  ECBB  F027         	call	_command
 14671                           
 14672                           ;diskio.c: 344: proceed();
 14673  001A54  ECFF  F02D         	call	_proceed	;wreg free
 14674  001A58                     l11024:
 14675                           
 14676                           ;diskio.c: 346: buff = response();
 14677  001A58  ECF9  F02D         	call	_response	;wreg free
 14678  001A5C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14679                           
 14680                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14681  001A5E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14682  001A60  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14683  001A62  0B80               	andlw	128
 14684  001A64  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14685                           
 14686                           ;diskio.c: 348: count2++;
 14687  001A66  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14688  001A68  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14689                           
 14690                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14691  001A6A  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14692  001A6C  B4D8               	btfsc	status,2,c
 14693  001A6E  D00B               	goto	u12370
 14694  001A70  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14695  001A72  B4D8               	btfsc	status,2,c
 14696  001A74  D008               	goto	u12370
 14697  001A76  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14698  001A78  D7EF               	goto	l11024
 14699  001A7A  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14700  001A7C  E104               	bnz	u12370
 14701  001A7E  0E0A               	movlw	10
 14702  001A80  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14703  001A82  A0D8               	btfss	status,0,c
 14704  001A84  D7E9               	goto	l11024
 14705  001A86                     u12370:
 14706                           
 14707                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14708  001A86  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14709  001A88  B4D8               	btfsc	status,2,c
 14710  001A8A  D003               	goto	u12390
 14711  001A8C  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14712  001A8E  A4D8               	btfss	status,2,c
 14713  001A90  D78D               	goto	u12310
 14714  001A92                     u12390:
 14715                           
 14716                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14717  001A92  0E10               	movlw	16
 14718  001A94  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14719  001A96  0E94               	movlw	148
 14720  001A98                     u16727:
 14721  001A98  2EE8               	decfsz	wreg,f,c
 14722  001A9A  D7FE               	bra	u16727
 14723  001A9C  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14724  001A9E  D7FC               	bra	u16727
 14725  001AA0  D000               	nop2	
 14726                           
 14727                           ;diskio.c: 356: stat = 0X00;
 14728  001AA2  0E00               	movlw	0
 14729  001AA4  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14730                           
 14731                           ;diskio.c: 358: if(!ocr)
 14732  001AA6  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14733  001AA8  A4D8               	btfss	status,2,c
 14734  001AAA  D0A6               	goto	u12490
 14735                           
 14736                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14737  001AAC  0E0A               	movlw	10
 14738  001AAE  ECD7  F02A         	call	_dummy_clocks
 14739                           
 14740                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14741  001AB2  0E00               	movlw	0
 14742  001AB4  6E0F               	movwf	command@arg^0,c
 14743  001AB6  0E02               	movlw	2
 14744  001AB8  6E10               	movwf	(command@arg+1)^0,c
 14745  001ABA  0E00               	movlw	0
 14746  001ABC  6E11               	movwf	(command@arg+2)^0,c
 14747  001ABE  0E00               	movlw	0
 14748  001AC0  6E12               	movwf	(command@arg+3)^0,c
 14749  001AC2  0EFF               	movlw	255
 14750  001AC4  6E13               	movwf	command@CRC^0,c
 14751  001AC6  0E50               	movlw	80
 14752  001AC8  ECBB  F027         	call	_command
 14753                           
 14754                           ;diskio.c: 363: proceed();
 14755  001ACC  ECFF  F02D         	call	_proceed	;wreg free
 14756  001AD0                     
 14757                           ;diskio.c: 367: buff = response();
 14758  001AD0  ECF9  F02D         	call	_response	;wreg free
 14759  001AD4  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14760                           
 14761                           ;diskio.c: 368: }while(buff!=0X00);
 14762  001AD6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14763  001AD8  B4D8               	btfsc	status,2,c
 14764  001ADA  D08E               	goto	u12490
 14765  001ADC  D7F9               	goto	l11052
 14766  001ADE                     l11058:
 14767                           
 14768                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14769  001ADE  0E00               	movlw	0
 14770  001AE0  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14771  001AE2  0E00               	movlw	0
 14772  001AE4  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14773                           
 14774                           ;diskio.c: 378: dummy_clocks(1);
 14775  001AE6  0E01               	movlw	1
 14776  001AE8  ECD7  F02A         	call	_dummy_clocks
 14777                           
 14778                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14779  001AEC  0E00               	movlw	0
 14780  001AEE  6E0F               	movwf	command@arg^0,c
 14781  001AF0  0E00               	movlw	0
 14782  001AF2  6E10               	movwf	(command@arg+1)^0,c
 14783  001AF4  0E00               	movlw	0
 14784  001AF6  6E11               	movwf	(command@arg+2)^0,c
 14785  001AF8  0E00               	movlw	0
 14786  001AFA  6E12               	movwf	(command@arg+3)^0,c
 14787  001AFC  0EFF               	movlw	255
 14788  001AFE  6E13               	movwf	command@CRC^0,c
 14789  001B00  0E69               	movlw	105
 14790  001B02  ECBB  F027         	call	_command
 14791                           
 14792                           ;diskio.c: 380: proceed();
 14793  001B06  ECFF  F02D         	call	_proceed	;wreg free
 14794  001B0A                     l11068:
 14795                           
 14796                           ;diskio.c: 382: buff = response();
 14797  001B0A  ECF9  F02D         	call	_response	;wreg free
 14798  001B0E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14799                           
 14800                           ;diskio.c: 383: count2++;
 14801  001B10  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14802  001B12  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14803                           
 14804                           ;diskio.c: 384: if(buff==0x00)
 14805  001B14  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14806  001B16  A4D8               	btfss	status,2,c
 14807  001B18  D00B               	goto	l11078
 14808                           
 14809                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14810  001B1A  0E00               	movlw	0
 14811  001B1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14812  001B1E  0E01               	movlw	1
 14813  001B20  EC5E  F027         	call	_posicao_cursor_lcd
 14814                           
 14815                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14816  001B24  0E24               	movlw	low STR_3
 14817  001B26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14818  001B28  0E62               	movlw	high STR_3
 14819  001B2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14820  001B2C  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14821  001B30                     l11078:
 14822                           
 14823                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14824  001B30  0E10               	movlw	16
 14825  001B32  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14826  001B34  0E94               	movlw	148
 14827  001B36                     u16737:
 14828  001B36  2EE8               	decfsz	wreg,f,c
 14829  001B38  D7FE               	bra	u16737
 14830  001B3A  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14831  001B3C  D7FC               	bra	u16737
 14832  001B3E  D000               	nop2	
 14833                           
 14834                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14835  001B40  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14836  001B42  B4D8               	btfsc	status,2,c
 14837  001B44  D008               	goto	u12440
 14838  001B46  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14839  001B48  D7E0               	goto	l11068
 14840  001B4A  0E10               	movlw	16
 14841  001B4C  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14842  001B4E  0E27               	movlw	39
 14843  001B50  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14844  001B52  A0D8               	btfss	status,0,c
 14845  001B54  D7DA               	goto	l11068
 14846  001B56                     u12440:
 14847                           
 14848                           ;diskio.c: 393: if(count2==10)
 14849  001B56  0E0A               	movlw	10
 14850  001B58  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14851  001B5A  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14852  001B5C  A4D8               	btfss	status,2,c
 14853  001B5E  D034               	goto	u12480
 14854                           
 14855                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14856  001B60  0E00               	movlw	0
 14857  001B62  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14858  001B64  0E00               	movlw	0
 14859  001B66  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14860                           
 14861                           ;diskio.c: 396: dummy_clocks(10);
 14862  001B68  0E0A               	movlw	10
 14863  001B6A  ECD7  F02A         	call	_dummy_clocks
 14864                           
 14865                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14866  001B6E  0E00               	movlw	0
 14867  001B70  6E0F               	movwf	command@arg^0,c
 14868  001B72  0E00               	movlw	0
 14869  001B74  6E10               	movwf	(command@arg+1)^0,c
 14870  001B76  0E00               	movlw	0
 14871  001B78  6E11               	movwf	(command@arg+2)^0,c
 14872  001B7A  0E00               	movlw	0
 14873  001B7C  6E12               	movwf	(command@arg+3)^0,c
 14874  001B7E  0EFF               	movlw	255
 14875  001B80  6E13               	movwf	command@CRC^0,c
 14876  001B82  0E41               	movlw	65
 14877  001B84  ECBB  F027         	call	_command
 14878                           
 14879                           ;diskio.c: 398: proceed();
 14880  001B88  ECFF  F02D         	call	_proceed	;wreg free
 14881  001B8C                     l11094:
 14882                           
 14883                           ;diskio.c: 400: buff = response();
 14884  001B8C  ECF9  F02D         	call	_response	;wreg free
 14885  001B90  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14886                           
 14887                           ;diskio.c: 401: count2++;
 14888  001B92  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14889  001B94  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14890                           
 14891                           ;diskio.c: 402: if(buff==0x00)
 14892  001B96  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14893  001B98  A4D8               	btfss	status,2,c
 14894  001B9A  D00B               	goto	l11104
 14895                           
 14896                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14897  001B9C  0E00               	movlw	0
 14898  001B9E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14899  001BA0  0E01               	movlw	1
 14900  001BA2  EC5E  F027         	call	_posicao_cursor_lcd
 14901                           
 14902                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14903  001BA6  0EE6               	movlw	low STR_4
 14904  001BA8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14905  001BAA  0E61               	movlw	high STR_4
 14906  001BAC  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14907  001BAE  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14908  001BB2                     l11104:
 14909                           
 14910                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14911  001BB2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14912  001BB4  B4D8               	btfsc	status,2,c
 14913  001BB6  D008               	goto	u12480
 14914  001BB8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14915  001BBA  D7E8               	goto	l11094
 14916  001BBC  0E10               	movlw	16
 14917  001BBE  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14918  001BC0  0E27               	movlw	39
 14919  001BC2  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14920  001BC4  A0D8               	btfss	status,0,c
 14921  001BC6  D7E2               	goto	l11094
 14922  001BC8                     u12480:
 14923                           
 14924                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14925  001BC8  0E0A               	movlw	10
 14926  001BCA  ECD7  F02A         	call	_dummy_clocks
 14927                           
 14928                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14929  001BCE  0E00               	movlw	0
 14930  001BD0  6E0F               	movwf	command@arg^0,c
 14931  001BD2  0E02               	movlw	2
 14932  001BD4  6E10               	movwf	(command@arg+1)^0,c
 14933  001BD6  0E00               	movlw	0
 14934  001BD8  6E11               	movwf	(command@arg+2)^0,c
 14935  001BDA  0E00               	movlw	0
 14936  001BDC  6E12               	movwf	(command@arg+3)^0,c
 14937  001BDE  0EFF               	movlw	255
 14938  001BE0  6E13               	movwf	command@CRC^0,c
 14939  001BE2  0E50               	movlw	80
 14940  001BE4  ECBB  F027         	call	_command
 14941                           
 14942                           ;diskio.c: 414: proceed();
 14943  001BE8  ECFF  F02D         	call	_proceed	;wreg free
 14944  001BEC                     
 14945                           ;diskio.c: 418: buff = response();
 14946  001BEC  ECF9  F02D         	call	_response	;wreg free
 14947  001BF0  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14948                           
 14949                           ;diskio.c: 419: }while(buff!=0X00);
 14950  001BF2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14951  001BF4  A4D8               	btfss	status,2,c
 14952  001BF6  D7FA               	goto	l11112
 14953  001BF8                     u12490:
 14954                           
 14955                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14956  001BF8  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14957  001BFA  0012               	return		;funcret
 14958  001BFC                     __end_of_sdc_disk_initialize:
 14959                           	callstack 0
 14960                           
 14961 ;; *************** function _sdc_reset *****************
 14962 ;; Defined at:
 14963 ;;		line 238 in file "bibliotecas/diskio.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;		None
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;  teste          10    0        unsigned char [10]
 14968 ;;  count           2   25[COMRAM] int 
 14969 ;;  count_nosd      2   23[COMRAM] int 
 14970 ;;  i               2    0        int 
 14971 ;;  receive         2    0        unsigned int 
 14972 ;;  buff            1   27[COMRAM] unsigned char 
 14973 ;;  stat            1    0        unsigned char 
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  1    wreg      void 
 14976 ;; Registers used:
 14977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14983 ;;      Params:         0       0       0       0       0       0       0       0       0
 14984 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14986 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14987 ;;Total ram usage:        7 bytes
 14988 ;; Hardware stack levels used:    1
 14989 ;; Hardware stack levels required when called:    5
 14990 ;; This function calls:
 14991 ;;		_command
 14992 ;;		_escreve_frase_ram_lcd
 14993 ;;		_posicao_cursor_lcd
 14994 ;;		_proceed
 14995 ;;		_response
 14996 ;; This function is called by:
 14997 ;;		_sdc_disk_initialize
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text82
 15002  0047C6                     __ptext82:
 15003                           	callstack 0
 15004  0047C6                     _sdc_reset:
 15005                           	callstack 17
 15006                           
 15007                           ;incstack = 0
 15008  0047C6  0E00               	movlw	0
 15009  0047C8  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15010  0047CA  0E00               	movlw	0
 15011  0047CC  6E1A               	movwf	sdc_reset@count^0,c
 15012  0047CE  0E00               	movlw	0
 15013  0047D0  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 15014  0047D2  0E00               	movlw	0
 15015  0047D4  6E18               	movwf	sdc_reset@count_nosd^0,c
 15016  0047D6                     l10800:
 15017                           
 15018                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 15019  0047D6  0E00               	movlw	0
 15020  0047D8  6E0F               	movwf	command@arg^0,c
 15021  0047DA  0E00               	movlw	0
 15022  0047DC  6E10               	movwf	(command@arg+1)^0,c
 15023  0047DE  0E00               	movlw	0
 15024  0047E0  6E11               	movwf	(command@arg+2)^0,c
 15025  0047E2  0E00               	movlw	0
 15026  0047E4  6E12               	movwf	(command@arg+3)^0,c
 15027  0047E6  0E95               	movlw	149
 15028  0047E8  6E13               	movwf	command@CRC^0,c
 15029  0047EA  0E40               	movlw	64
 15030  0047EC  ECBB  F027         	call	_command
 15031                           
 15032                           ;diskio.c: 249: proceed();
 15033  0047F0  ECFF  F02D         	call	_proceed	;wreg free
 15034  0047F4                     l10804:
 15035                           
 15036                           ;diskio.c: 251: buff = response();
 15037  0047F4  ECF9  F02D         	call	_response	;wreg free
 15038  0047F8  6E1C               	movwf	sdc_reset@buff^0,c
 15039                           
 15040                           ;diskio.c: 252: count++;
 15041  0047FA  4A1A               	infsnz	sdc_reset@count^0,f,c
 15042  0047FC  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 15043                           
 15044                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 15045  0047FE  041C               	decf	sdc_reset@buff^0,w,c
 15046  004800  B4D8               	btfsc	status,2,c
 15047  004802  D008               	goto	u12020
 15048  004804  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 15049  004806  D7F6               	goto	l10804
 15050  004808  501B               	movf	(sdc_reset@count+1)^0,w,c
 15051  00480A  E104               	bnz	u12020
 15052  00480C  0E0A               	movlw	10
 15053  00480E  5C1A               	subwf	sdc_reset@count^0,w,c
 15054  004810  A0D8               	btfss	status,0,c
 15055  004812  D7F0               	goto	l10804
 15056  004814                     u12020:
 15057                           
 15058                           ;diskio.c: 254: count = 0;
 15059  004814  0E00               	movlw	0
 15060  004816  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15061  004818  0E00               	movlw	0
 15062  00481A  6E1A               	movwf	sdc_reset@count^0,c
 15063                           
 15064                           ;diskio.c: 255: if(buff != 0x01)
 15065  00481C  041C               	decf	sdc_reset@buff^0,w,c
 15066  00481E  B4D8               	btfsc	status,2,c
 15067  004820  D016               	goto	l10822
 15068                           
 15069                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 15070  004822  0E00               	movlw	0
 15071  004824  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15072  004826  0E01               	movlw	1
 15073  004828  EC5E  F027         	call	_posicao_cursor_lcd
 15074                           
 15075                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 15076  00482C  0EF1               	movlw	low STR_1
 15077  00482E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15078  004830  0E61               	movlw	high STR_1
 15079  004832  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15080  004834  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15081                           
 15082                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 15083  004838  0E00               	movlw	0
 15084  00483A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15085  00483C  0E02               	movlw	2
 15086  00483E  EC5E  F027         	call	_posicao_cursor_lcd
 15087                           
 15088                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 15089  004842  0E92               	movlw	low STR_2
 15090  004844  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15091  004846  0E61               	movlw	high STR_2
 15092  004848  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15093  00484A  ECC0  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15094  00484E                     l10822:
 15095                           
 15096                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 15097  00484E  041C               	decf	sdc_reset@buff^0,w,c
 15098  004850  B4D8               	btfsc	status,2,c
 15099  004852  0012               	return	
 15100  004854  D7C0               	goto	l10800
 15101  004856                     __end_of_sdc_reset:
 15102                           	callstack 0
 15103                           
 15104 ;; *************** function _posicao_cursor_lcd *****************
 15105 ;; Defined at:
 15106 ;;		line 271 in file "bibliotecas/display_lcd.c"
 15107 ;; Parameters:    Size  Location     Type
 15108 ;;  linha           1    wreg     unsigned char 
 15109 ;;  coluna          1   12[COMRAM] unsigned char 
 15110 ;; Auto vars:     Size  Location     Type
 15111 ;;  linha           1   13[COMRAM] unsigned char 
 15112 ;;  endereco        1   14[COMRAM] unsigned char 
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      void 
 15115 ;; Registers used:
 15116 ;;		wreg, status,2, status,0, cstack
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15122 ;;      Params:         1       0       0       0       0       0       0       0       0
 15123 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15125 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15126 ;;Total ram usage:        3 bytes
 15127 ;; Hardware stack levels used:    1
 15128 ;; Hardware stack levels required when called:    4
 15129 ;; This function calls:
 15130 ;;		_endereco_cursor_lcd
 15131 ;; This function is called by:
 15132 ;;		_sdc_reset
 15133 ;;		_sdc_disk_initialize
 15134 ;;		_mostra_dados_display
 15135 ;;		_mensagem_inicial
 15136 ;;		_troca_de_tela
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text83
 15141  004EBC                     __ptext83:
 15142                           	callstack 0
 15143  004EBC                     _posicao_cursor_lcd:
 15144                           	callstack 25
 15145                           
 15146                           ;incstack = 0
 15147                           ;posicao_cursor_lcd@linha stored from wreg
 15148  004EBC  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 15149                           
 15150                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 15151  004EBE  0E11               	movlw	17
 15152  004EC0  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 15153  004EC2  0012               	return	
 15154  004EC4  D01B               	goto	l10664
 15155  004EC6                     l232:
 15156                           
 15157                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 15158  004EC6  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 15159                           
 15160                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 15161  004ECA  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15162  004ECC  EC5C  F026         	call	_endereco_cursor_lcd
 15163                           
 15164                           ;display_lcd.c: 284: break;
 15165  004ED0  D022               	goto	l10666
 15166  004ED2                     l10648:
 15167                           
 15168                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 15169  004ED2  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15170  004ED4  0F40               	addlw	64
 15171  004ED6  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15172                           
 15173                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 15174  004ED8  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15175  004EDA  EC5C  F026         	call	_endereco_cursor_lcd
 15176                           
 15177                           ;display_lcd.c: 289: break;
 15178  004EDE  D01B               	goto	l10666
 15179  004EE0                     l10652:
 15180                           
 15181                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 15182  004EE0  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15183  004EE2  0F14               	addlw	20
 15184  004EE4  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15185                           
 15186                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 15187  004EE6  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15188  004EE8  EC5C  F026         	call	_endereco_cursor_lcd
 15189                           
 15190                           ;display_lcd.c: 294: break;
 15191  004EEC  D014               	goto	l10666
 15192  004EEE                     l10656:
 15193                           
 15194                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 15195  004EEE  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15196  004EF0  0F54               	addlw	84
 15197  004EF2  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15198                           
 15199                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 15200  004EF4  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15201  004EF6  EC5C  F026         	call	_endereco_cursor_lcd
 15202                           
 15203                           ;display_lcd.c: 303: break;
 15204                           
 15205                           ;display_lcd.c: 299: break;
 15206  004EFA  D00D               	goto	l10666
 15207  004EFC                     l10664:
 15208  004EFC  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 15209                           
 15210                           ; Switch size 1, requested type "simple"
 15211                           ; Number of cases is 4, Range of values is 1 to 4
 15212                           ; switch strategies available:
 15213                           ; Name         Instructions Cycles
 15214                           ; simple_byte           13     7 (average)
 15215                           ;	Chosen strategy is simple_byte
 15216  004EFE  0A01               	xorlw	1	; case 1
 15217  004F00  B4D8               	btfsc	status,2,c
 15218  004F02  D7E1               	goto	l232
 15219  004F04  0A03               	xorlw	3	; case 2
 15220  004F06  B4D8               	btfsc	status,2,c
 15221  004F08  D7E4               	goto	l10648
 15222  004F0A  0A01               	xorlw	1	; case 3
 15223  004F0C  B4D8               	btfsc	status,2,c
 15224  004F0E  D7E8               	goto	l10652
 15225  004F10  0A07               	xorlw	7	; case 4
 15226  004F12  B4D8               	btfsc	status,2,c
 15227  004F14  D7EC               	goto	l10656
 15228  004F16                     l10666:
 15229                           
 15230                           ;display_lcd.c: 306: coluna++;
 15231  004F16  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 15232                           
 15233                           ;display_lcd.c: 307: }
 15234  004F18  0012               	return	
 15235  004F1A                     __end_of_posicao_cursor_lcd:
 15236                           	callstack 0
 15237                           
 15238 ;; *************** function _endereco_cursor_lcd *****************
 15239 ;; Defined at:
 15240 ;;		line 218 in file "bibliotecas/display_lcd.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;  endereco        1    wreg     unsigned char 
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  endereco        1   11[COMRAM] unsigned char 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  1    wreg      void 
 15247 ;; Registers used:
 15248 ;;		wreg, status,2, status,0, cstack
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0
 15255 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15257 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15258 ;;Total ram usage:        1 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:    3
 15261 ;; This function calls:
 15262 ;;		_delay
 15263 ;; This function is called by:
 15264 ;;		_posicao_cursor_lcd
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text84
 15269  004CB8                     __ptext84:
 15270                           	callstack 0
 15271  004CB8                     _endereco_cursor_lcd:
 15272                           	callstack 25
 15273                           
 15274                           ;incstack = 0
 15275                           ;endereco_cursor_lcd@endereco stored from wreg
 15276  004CB8  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 15277                           
 15278                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 15279  004CBA  9483               	bcf	131,2,c	;volatile
 15280                           
 15281                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 15282  004CBC  9283               	bcf	131,1,c	;volatile
 15283                           
 15284                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 15285  004CBE  9083               	bcf	131,0,c	;volatile
 15286                           
 15287                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 15288  004CC0  8E83               	bsf	131,7,c	;volatile
 15289                           
 15290                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 15291  004CC2  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 15292  004CC4  D002               	goto	l213
 15293  004CC6  8883               	bsf	131,4,c	;volatile
 15294  004CC8  D001               	goto	l10502
 15295  004CCA                     l213:
 15296                           
 15297                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 15298  004CCA  9883               	bcf	131,4,c	;volatile
 15299  004CCC                     l10502:
 15300                           
 15301                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 15302  004CCC  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 15303  004CCE  D002               	goto	l215
 15304  004CD0  8A83               	bsf	131,5,c	;volatile
 15305  004CD2  D001               	goto	l10506
 15306  004CD4                     l215:
 15307                           
 15308                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 15309  004CD4  9A83               	bcf	131,5,c	;volatile
 15310  004CD6                     l10506:
 15311                           
 15312                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 15313  004CD6  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 15314  004CD8  D002               	goto	l217
 15315  004CDA  8C83               	bsf	131,6,c	;volatile
 15316  004CDC  D001               	goto	l218
 15317  004CDE                     l217:
 15318                           
 15319                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 15320  004CDE  9C83               	bcf	131,6,c	;volatile
 15321  004CE0                     l218:
 15322                           
 15323                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 15324  004CE0  8083               	bsf	131,0,c	;volatile
 15325                           
 15326                           ;display_lcd.c: 236: delay();
 15327  004CE2  EC67  F02D         	call	_delay	;wreg free
 15328                           
 15329                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15330  004CE6  9083               	bcf	131,0,c	;volatile
 15331                           
 15332                           ;display_lcd.c: 238: delay();
 15333  004CE8  EC67  F02D         	call	_delay	;wreg free
 15334                           
 15335                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15336  004CEC  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15337  004CEE  D002               	goto	l219
 15338  004CF0  8883               	bsf	131,4,c	;volatile
 15339  004CF2  D001               	goto	l220
 15340  004CF4                     l219:
 15341                           
 15342                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15343  004CF4  9883               	bcf	131,4,c	;volatile
 15344  004CF6                     l220:
 15345                           
 15346                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15347  004CF6  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15348  004CF8  D002               	goto	l221
 15349  004CFA  8A83               	bsf	131,5,c	;volatile
 15350  004CFC  D001               	goto	l222
 15351  004CFE                     l221:
 15352                           
 15353                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15354  004CFE  9A83               	bcf	131,5,c	;volatile
 15355  004D00                     l222:
 15356                           
 15357                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15358  004D00  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15359  004D02  D002               	goto	l223
 15360  004D04  8C83               	bsf	131,6,c	;volatile
 15361  004D06  D001               	goto	l224
 15362  004D08                     l223:
 15363                           
 15364                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15365  004D08  9C83               	bcf	131,6,c	;volatile
 15366  004D0A                     l224:
 15367                           
 15368                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15369  004D0A  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15370  004D0C  D002               	goto	l225
 15371  004D0E  8E83               	bsf	131,7,c	;volatile
 15372  004D10  D001               	goto	l226
 15373  004D12                     l225:
 15374                           
 15375                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15376  004D12  9E83               	bcf	131,7,c	;volatile
 15377  004D14                     l226:
 15378                           
 15379                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15380  004D14  8083               	bsf	131,0,c	;volatile
 15381                           
 15382                           ;display_lcd.c: 252: delay();
 15383  004D16  EC67  F02D         	call	_delay	;wreg free
 15384                           
 15385                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15386  004D1A  9083               	bcf	131,0,c	;volatile
 15387                           
 15388                           ;display_lcd.c: 254: delay();
 15389  004D1C  EC67  F02D         	call	_delay	;wreg free
 15390  004D20  0012               	return		;funcret
 15391  004D22                     __end_of_endereco_cursor_lcd:
 15392                           	callstack 0
 15393                           
 15394 ;; *************** function _escreve_frase_ram_lcd *****************
 15395 ;; Defined at:
 15396 ;;		line 445 in file "bibliotecas/display_lcd.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 15399 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 15400 ;;		 -> STR_29(5), STR_28(2), STR_27(6), STR_26(7), 
 15401 ;;		 -> STR_25(7), STR_24(2), STR_23(6), STR_22(7), 
 15402 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 15403 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 15404 ;;		 -> STR_5(15), rawLongitude(13), rawLatitude(12), escreve_inteiro_lcd@texto(7), 
 15405 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15417 ;;      Params:         2       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        2 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    4
 15424 ;; This function calls:
 15425 ;;		_escreve_caractere_lcd
 15426 ;; This function is called by:
 15427 ;;		_sdc_reset
 15428 ;;		_sdc_disk_initialize
 15429 ;;		_escreve_inteiro_lcd
 15430 ;;		_mostra_dados_display
 15431 ;;		_mensagem_inicial
 15432 ;;		_troca_de_tela
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text85
 15437  005180                     __ptext85:
 15438                           	callstack 0
 15439  005180                     _escreve_frase_ram_lcd:
 15440                           	callstack 25
 15441                           
 15442                           ;display_lcd.c: 447: while(*buffer)
 15443                           
 15444                           ;incstack = 0
 15445  005180  D014               	goto	l10676
 15446  005182                     l10672:
 15447                           
 15448                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 15449  005182  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15450  005186  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15451  00518A  6AF8               	clrf	tblptru,c
 15452  00518C  0E07               	movlw	(high __ramtop+-1)
 15453  00518E  64F7               	cpfsgt	tblptrh,c
 15454  005190  D003               	bra	u11797
 15455  005192  0008               	tblrd		*
 15456  005194  50F5               	movf	tablat,w,c
 15457  005196  D005               	bra	u11790
 15458  005198                     u11797:
 15459  005198  CFF6 FFE1          	movff	tblptrl,fsr1l
 15460  00519C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15461  0051A0  50E7               	movf	indf1,w,c
 15462  0051A2                     u11790:
 15463  0051A2  ECEC  F025         	call	_escreve_caractere_lcd
 15464                           
 15465                           ;display_lcd.c: 450: buffer++;
 15466  0051A6  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 15467  0051A8  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 15468  0051AA                     l10676:
 15469  0051AA  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15470  0051AE  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15471  0051B2  6AF8               	clrf	tblptru,c
 15472  0051B4  0E07               	movlw	(high __ramtop+-1)
 15473  0051B6  64F7               	cpfsgt	tblptrh,c
 15474  0051B8  D003               	bra	u11807
 15475  0051BA  0008               	tblrd		*
 15476  0051BC  50F5               	movf	tablat,w,c
 15477  0051BE  D005               	bra	u11800
 15478  0051C0                     u11807:
 15479  0051C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 15480  0051C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 15481  0051C8  50E7               	movf	indf1,w,c
 15482  0051CA                     u11800:
 15483  0051CA  0900               	iorlw	0
 15484  0051CC  B4D8               	btfsc	status,2,c
 15485  0051CE  0012               	return	
 15486  0051D0  D7D8               	goto	l10672
 15487  0051D2                     __end_of_escreve_frase_ram_lcd:
 15488                           	callstack 0
 15489                           
 15490 ;; *************** function _escreve_caractere_lcd *****************
 15491 ;; Defined at:
 15492 ;;		line 323 in file "bibliotecas/display_lcd.c"
 15493 ;; Parameters:    Size  Location     Type
 15494 ;;  data            1    wreg     unsigned char 
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;  data            1   11[COMRAM] unsigned char 
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      void 
 15499 ;; Registers used:
 15500 ;;		wreg, status,2, status,0, cstack
 15501 ;; Tracked objects:
 15502 ;;		On entry : 0/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15506 ;;      Params:         0       0       0       0       0       0       0       0       0
 15507 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15509 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15510 ;;Total ram usage:        1 bytes
 15511 ;; Hardware stack levels used:    1
 15512 ;; Hardware stack levels required when called:    3
 15513 ;; This function calls:
 15514 ;;		_delay
 15515 ;; This function is called by:
 15516 ;;		_escreve_frase_ram_lcd
 15517 ;;		_troca_de_tela
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text86
 15522  004BD8                     __ptext86:
 15523                           	callstack 0
 15524  004BD8                     _escreve_caractere_lcd:
 15525                           	callstack 25
 15526                           
 15527                           ;incstack = 0
 15528                           ;escreve_caractere_lcd@data stored from wreg
 15529  004BD8  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 15530                           
 15531                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 15532  004BDA  9483               	bcf	131,2,c	;volatile
 15533                           
 15534                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 15535  004BDC  8283               	bsf	131,1,c	;volatile
 15536                           
 15537                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 15538  004BDE  9083               	bcf	131,0,c	;volatile
 15539                           
 15540                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 15541  004BE0  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 15542  004BE2  D002               	goto	l242
 15543  004BE4  8883               	bsf	131,4,c	;volatile
 15544  004BE6  D001               	goto	l10534
 15545  004BE8                     l242:
 15546                           
 15547                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 15548  004BE8  9883               	bcf	131,4,c	;volatile
 15549  004BEA                     l10534:
 15550                           
 15551                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 15552  004BEA  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 15553  004BEC  D002               	goto	l244
 15554  004BEE  8A83               	bsf	131,5,c	;volatile
 15555  004BF0  D001               	goto	l10538
 15556  004BF2                     l244:
 15557                           
 15558                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 15559  004BF2  9A83               	bcf	131,5,c	;volatile
 15560  004BF4                     l10538:
 15561                           
 15562                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 15563  004BF4  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 15564  004BF6  D002               	goto	l246
 15565  004BF8  8C83               	bsf	131,6,c	;volatile
 15566  004BFA  D001               	goto	l10542
 15567  004BFC                     l246:
 15568                           
 15569                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 15570  004BFC  9C83               	bcf	131,6,c	;volatile
 15571  004BFE                     l10542:
 15572                           
 15573                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 15574  004BFE  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 15575  004C00  D002               	goto	l248
 15576  004C02  8E83               	bsf	131,7,c	;volatile
 15577  004C04  D001               	goto	l249
 15578  004C06                     l248:
 15579                           
 15580                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 15581  004C06  9E83               	bcf	131,7,c	;volatile
 15582  004C08                     l249:
 15583                           
 15584                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 15585  004C08  8083               	bsf	131,0,c	;volatile
 15586                           
 15587                           ;display_lcd.c: 342: delay();
 15588  004C0A  EC67  F02D         	call	_delay	;wreg free
 15589                           
 15590                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 15591  004C0E  9083               	bcf	131,0,c	;volatile
 15592                           
 15593                           ;display_lcd.c: 344: delay();
 15594  004C10  EC67  F02D         	call	_delay	;wreg free
 15595                           
 15596                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 15597  004C14  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 15598  004C16  D002               	goto	l250
 15599  004C18  8883               	bsf	131,4,c	;volatile
 15600  004C1A  D001               	goto	l251
 15601  004C1C                     l250:
 15602                           
 15603                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 15604  004C1C  9883               	bcf	131,4,c	;volatile
 15605  004C1E                     l251:
 15606                           
 15607                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 15608  004C1E  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 15609  004C20  D002               	goto	l252
 15610  004C22  8A83               	bsf	131,5,c	;volatile
 15611  004C24  D001               	goto	l253
 15612  004C26                     l252:
 15613                           
 15614                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 15615  004C26  9A83               	bcf	131,5,c	;volatile
 15616  004C28                     l253:
 15617                           
 15618                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 15619  004C28  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 15620  004C2A  D002               	goto	l254
 15621  004C2C  8C83               	bsf	131,6,c	;volatile
 15622  004C2E  D001               	goto	l255
 15623  004C30                     l254:
 15624                           
 15625                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 15626  004C30  9C83               	bcf	131,6,c	;volatile
 15627  004C32                     l255:
 15628                           
 15629                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 15630  004C32  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 15631  004C34  D002               	goto	l256
 15632  004C36  8E83               	bsf	131,7,c	;volatile
 15633  004C38  D001               	goto	l257
 15634  004C3A                     l256:
 15635                           
 15636                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 15637  004C3A  9E83               	bcf	131,7,c	;volatile
 15638  004C3C                     l257:
 15639                           
 15640                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 15641  004C3C  8083               	bsf	131,0,c	;volatile
 15642                           
 15643                           ;display_lcd.c: 359: delay();
 15644  004C3E  EC67  F02D         	call	_delay	;wreg free
 15645                           
 15646                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 15647  004C42  9083               	bcf	131,0,c	;volatile
 15648                           
 15649                           ;display_lcd.c: 361: delay();
 15650  004C44  EC67  F02D         	call	_delay	;wreg free
 15651  004C48  0012               	return		;funcret
 15652  004C4A                     __end_of_escreve_caractere_lcd:
 15653                           	callstack 0
 15654                           
 15655 ;; *************** function _delay *****************
 15656 ;; Defined at:
 15657 ;;		line 45 in file "bibliotecas/display_lcd.c"
 15658 ;; Parameters:    Size  Location     Type
 15659 ;;		None
 15660 ;; Auto vars:     Size  Location     Type
 15661 ;;  contador_int    1   10[COMRAM] unsigned char 
 15662 ;;  contador_ext    1    9[COMRAM] unsigned char 
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  1    wreg      void 
 15665 ;; Registers used:
 15666 ;;		wreg, status,2, status,0
 15667 ;; Tracked objects:
 15668 ;;		On entry : 0/0
 15669 ;;		On exit  : 0/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15672 ;;      Params:         0       0       0       0       0       0       0       0       0
 15673 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15674 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15675 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15676 ;;Total ram usage:        2 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:    2
 15679 ;; This function calls:
 15680 ;;		Nothing
 15681 ;; This function is called by:
 15682 ;;		_init_lcd
 15683 ;;		_escreve_cmd_lcd
 15684 ;;		_endereco_cursor_lcd
 15685 ;;		_escreve_caractere_lcd
 15686 ;; This function uses a non-reentrant model
 15687 ;;
 15688                           
 15689                           	psect	text87
 15690  005ACE                     __ptext87:
 15691                           	callstack 0
 15692  005ACE                     _delay:
 15693                           	callstack 25
 15694                           
 15695                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 15696                           
 15697                           ;incstack = 0
 15698  005ACE  0E00               	movlw	0
 15699  005AD0  6E0A               	movwf	delay@contador_ext^0,c
 15700  005AD2                     l181:
 15701                           
 15702                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 15703  005AD2  F000               	nop	
 15704                           
 15705                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 15706  005AD4  0E00               	movlw	0
 15707  005AD6  6E0B               	movwf	delay@contador_int^0,c
 15708  005AD8                     l183:
 15709                           
 15710                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 15711  005AD8  F000               	nop	
 15712  005ADA  2A0B               	incf	delay@contador_int^0,f,c
 15713  005ADC  0E31               	movlw	49
 15714  005ADE  640B               	cpfsgt	delay@contador_int^0,c
 15715  005AE0  D7FB               	goto	l183
 15716  005AE2  2A0A               	incf	delay@contador_ext^0,f,c
 15717  005AE4  0E63               	movlw	99
 15718  005AE6  640A               	cpfsgt	delay@contador_ext^0,c
 15719  005AE8  D7F4               	goto	l181
 15720  005AEA  0012               	return	
 15721  005AEC                     __end_of_delay:
 15722                           	callstack 0
 15723                           
 15724 ;; *************** function _check_fs *****************
 15725 ;; Defined at:
 15726 ;;		line 624 in file "bibliotecas/tff.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;  sect            4   52[COMRAM] unsigned long 
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15731 ;;		 -> NULL(0), fs(544), 
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      unsigned char 
 15734 ;; Registers used:
 15735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 3F/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15741 ;;      Params:         4       0       0       0       0       0       0       0       0
 15742 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15743 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15744 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15745 ;;Total ram usage:        8 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    7
 15748 ;; This function calls:
 15749 ;;		_disk_read
 15750 ;;		_memcmp
 15751 ;; This function is called by:
 15752 ;;		_auto_mount
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text88
 15757  004966                     __ptext88:
 15758                           	callstack 0
 15759  004966                     _check_fs:
 15760                           	callstack 17
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;tff.c: 628: FATFS *fs = FatFs;
 15764                           
 15765                           ;incstack = 0
 15766  004966  C04D  F03B         	movff	_FatFs,check_fs@fs
 15767  00496A  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15768                           
 15769                           ; BSR set to: 0
 15770                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15771  00496E  0E20               	movlw	32
 15772  004970  243B               	addwf	check_fs@fs^0,w,c
 15773  004972  6E29               	movwf	disk_read@buff^0,c
 15774  004974  0E00               	movlw	0
 15775  004976  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15776  004978  6E2A               	movwf	(disk_read@buff+1)^0,c
 15777  00497A  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15778  00497E  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15779  004982  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15780  004986  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15781  00498A  0E01               	movlw	1
 15782  00498C  6E2F               	movwf	disk_read@count^0,c
 15783  00498E  0E00               	movlw	0
 15784  004990  EC25  F026         	call	_disk_read
 15785  004994  0900               	iorlw	0
 15786  004996  B4D8               	btfsc	status,2,c
 15787  004998  D002               	goto	l11540
 15788  00499A                     u13200:
 15789  00499A                     l11536:
 15790                           
 15791                           ;tff.c: 631: return 2;
 15792  00499A  0E02               	movlw	2
 15793  00499C  0012               	return	
 15794  00499E                     l11540:
 15795                           
 15796                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15797  00499E  EE22 F01E          	lfsr	2,542
 15798  0049A2  503B               	movf	check_fs@fs^0,w,c
 15799  0049A4  26D9               	addwf	fsr2l,f,c
 15800  0049A6  503C               	movf	(check_fs@fs+1)^0,w,c
 15801  0049A8  22DA               	addwfc	fsr2h,f,c
 15802  0049AA  0E55               	movlw	85
 15803  0049AC  18DE               	xorwf	postinc2,w,c
 15804  0049AE  E1F5               	bnz	l11536
 15805  0049B0  0EAA               	movlw	170
 15806  0049B2  18DE               	xorwf	postinc2,w,c
 15807  0049B4  A4D8               	btfss	status,2,c
 15808  0049B6  D7F1               	goto	u13200
 15809                           
 15810                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15811  0049B8  0E56               	movlw	86
 15812  0049BA  243B               	addwf	check_fs@fs^0,w,c
 15813  0049BC  6E0A               	movwf	memcmp@s1^0,c
 15814  0049BE  0E00               	movlw	0
 15815  0049C0  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15816  0049C2  6E0B               	movwf	(memcmp@s1+1)^0,c
 15817  0049C4  0E74               	movlw	low STR_17
 15818  0049C6  6E0C               	movwf	memcmp@s2^0,c
 15819  0049C8  0E62               	movlw	high STR_17
 15820  0049CA  6E0D               	movwf	(memcmp@s2+1)^0,c
 15821  0049CC  0E00               	movlw	0
 15822  0049CE  6E0F               	movwf	(memcmp@n+1)^0,c
 15823  0049D0  0E03               	movlw	3
 15824  0049D2  6E0E               	movwf	memcmp@n^0,c
 15825  0049D4  EC9A  F023         	call	_memcmp	;wreg free
 15826  0049D8  500A               	movf	?_memcmp^0,w,c
 15827  0049DA  100B               	iorwf	(?_memcmp+1)^0,w,c
 15828  0049DC  A4D8               	btfss	status,2,c
 15829  0049DE  D002               	goto	l11552
 15830                           
 15831                           ;tff.c: 636: return 0;
 15832  0049E0  0E00               	movlw	0
 15833  0049E2  0012               	return	
 15834  0049E4                     l11552:
 15835                           
 15836                           ;tff.c: 641: return 1;
 15837  0049E4  0E01               	movlw	1
 15838  0049E6  0012               	return		;funcret
 15839  0049E8                     __end_of_check_fs:
 15840                           	callstack 0
 15841                           
 15842 ;; *************** function _memcmp *****************
 15843 ;; Defined at:
 15844 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  s1              2    9[COMRAM] PTR const void 
 15847 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15848 ;;  s2              2   11[COMRAM] PTR const void 
 15849 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15850 ;;  n               2   13[COMRAM] unsigned int 
 15851 ;; Auto vars:     Size  Location     Type
 15852 ;;		None
 15853 ;; Return value:  Size  Location     Type
 15854 ;;                  2    9[COMRAM] int 
 15855 ;; Registers used:
 15856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15857 ;; Tracked objects:
 15858 ;;		On entry : 0/0
 15859 ;;		On exit  : 0/0
 15860 ;;		Unchanged: 0/0
 15861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15862 ;;      Params:         6       0       0       0       0       0       0       0       0
 15863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15864 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15865 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15866 ;;Total ram usage:        8 bytes
 15867 ;; Hardware stack levels used:    1
 15868 ;; Hardware stack levels required when called:    2
 15869 ;; This function calls:
 15870 ;;		Nothing
 15871 ;; This function is called by:
 15872 ;;		_trace_path
 15873 ;;		_check_fs
 15874 ;; This function uses a non-reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text89
 15878  004734                     __ptext89:
 15879                           	callstack 0
 15880  004734                     _memcmp:
 15881                           	callstack 22
 15882                           
 15883                           ;incstack = 0
 15884  004734  D03B               	goto	l11174
 15885  004736                     l11166:
 15886  004736  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15887  00473A  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15888  00473E  50DF               	movf	indf2,w,c
 15889  004740  6E10               	movwf	??_memcmp^0,c
 15890  004742  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15891  004746  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15892  00474A  6AF8               	clrf	tblptru,c
 15893  00474C  0E07               	movlw	(high __ramtop+-1)
 15894  00474E  64F7               	cpfsgt	tblptrh,c
 15895  004750  D003               	bra	u12517
 15896  004752  0008               	tblrd		*
 15897  004754  50F5               	movf	tablat,w,c
 15898  004756  D005               	bra	u12510
 15899  004758                     u12517:
 15900  004758  CFF6 FFE1          	movff	tblptrl,fsr1l
 15901  00475C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15902  004760  50E7               	movf	indf1,w,c
 15903  004762                     u12510:
 15904  004762  1810               	xorwf	??_memcmp^0,w,c
 15905  004764  B4D8               	btfsc	status,2,c
 15906  004766  D01E               	goto	l11172
 15907  004768  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15908  00476C  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15909  004770  50DF               	movf	indf2,w,c
 15910  004772  6E10               	movwf	??_memcmp^0,c
 15911  004774  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15912  004778  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15913  00477C  6AF8               	clrf	tblptru,c
 15914  00477E  0E07               	movlw	(high __ramtop+-1)
 15915  004780  64F7               	cpfsgt	tblptrh,c
 15916  004782  D003               	bra	u12537
 15917  004784  0008               	tblrd		*
 15918  004786  50F5               	movf	tablat,w,c
 15919  004788  D005               	bra	u12530
 15920  00478A                     u12537:
 15921  00478A  CFF6 FFE1          	movff	tblptrl,fsr1l
 15922  00478E  CFF7 FFE2          	movff	tblptrh,fsr1h
 15923  004792  50E7               	movf	indf1,w,c
 15924  004794                     u12530:
 15925  004794  6E11               	movwf	(??_memcmp+1)^0,c
 15926  004796  5011               	movf	(??_memcmp+1)^0,w,c
 15927  004798  5C10               	subwf	??_memcmp^0,w,c
 15928  00479A  6E0A               	movwf	?_memcmp^0,c
 15929  00479C  6A0B               	clrf	(?_memcmp+1)^0,c
 15930  00479E  A0D8               	btfss	status,0,c
 15931  0047A0  060B               	decf	(?_memcmp+1)^0,f,c
 15932  0047A2  0012               	return	
 15933  0047A4                     l11172:
 15934  0047A4  4A0A               	infsnz	memcmp@s1^0,f,c
 15935  0047A6  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15936  0047A8  4A0C               	infsnz	memcmp@s2^0,f,c
 15937  0047AA  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15938  0047AC                     l11174:
 15939  0047AC  060E               	decf	memcmp@n^0,f,c
 15940  0047AE  A0D8               	btfss	status,0,c
 15941  0047B0  060F               	decf	(memcmp@n+1)^0,f,c
 15942  0047B2  280E               	incf	memcmp@n^0,w,c
 15943  0047B4  E1C0               	bnz	l11166
 15944  0047B6  280F               	incf	(memcmp@n+1)^0,w,c
 15945  0047B8  A4D8               	btfss	status,2,c
 15946  0047BA  D7BD               	goto	l11166
 15947  0047BC  0E00               	movlw	0
 15948  0047BE  6E0B               	movwf	(?_memcmp+1)^0,c
 15949  0047C0  0E00               	movlw	0
 15950  0047C2  6E0A               	movwf	?_memcmp^0,c
 15951  0047C4  0012               	return		;funcret
 15952  0047C6                     __end_of_memcmp:
 15953                           	callstack 0
 15954                           
 15955 ;; *************** function ___lmul *****************
 15956 ;; Defined at:
 15957 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  multiplier      4    9[COMRAM] unsigned long 
 15960 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;  product         4   17[COMRAM] unsigned long 
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  4    9[COMRAM] unsigned long 
 15965 ;; Registers used:
 15966 ;;		wreg, status,2, status,0
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15972 ;;      Params:         8       0       0       0       0       0       0       0       0
 15973 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15975 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15976 ;;Total ram usage:       12 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; Hardware stack levels required when called:    2
 15979 ;; This function calls:
 15980 ;;		Nothing
 15981 ;; This function is called by:
 15982 ;;		_clust2sect
 15983 ;;		_auto_mount
 15984 ;;		_atol
 15985 ;; This function uses a non-reentrant model
 15986 ;;
 15987                           
 15988                           	psect	text90
 15989  0050D8                     __ptext90:
 15990                           	callstack 0
 15991  0050D8                     ___lmul:
 15992                           	callstack 20
 15993                           
 15994                           ;incstack = 0
 15995  0050D8  0E00               	movlw	0
 15996  0050DA  6E12               	movwf	___lmul@product^0,c
 15997  0050DC  0E00               	movlw	0
 15998  0050DE  6E13               	movwf	(___lmul@product+1)^0,c
 15999  0050E0  0E00               	movlw	0
 16000  0050E2  6E14               	movwf	(___lmul@product+2)^0,c
 16001  0050E4  0E00               	movlw	0
 16002  0050E6  6E15               	movwf	(___lmul@product+3)^0,c
 16003  0050E8                     l10790:
 16004  0050E8  A00A               	btfss	___lmul@multiplier^0,0,c
 16005  0050EA  D008               	goto	l10794
 16006  0050EC  500E               	movf	___lmul@multiplicand^0,w,c
 16007  0050EE  2612               	addwf	___lmul@product^0,f,c
 16008  0050F0  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 16009  0050F2  2213               	addwfc	(___lmul@product+1)^0,f,c
 16010  0050F4  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 16011  0050F6  2214               	addwfc	(___lmul@product+2)^0,f,c
 16012  0050F8  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 16013  0050FA  2215               	addwfc	(___lmul@product+3)^0,f,c
 16014  0050FC                     l10794:
 16015  0050FC  90D8               	bcf	status,0,c
 16016  0050FE  360E               	rlcf	___lmul@multiplicand^0,f,c
 16017  005100  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16018  005102  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16019  005104  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16020  005106  90D8               	bcf	status,0,c
 16021  005108  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 16022  00510A  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 16023  00510C  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 16024  00510E  320A               	rrcf	___lmul@multiplier^0,f,c
 16025  005110  500A               	movf	___lmul@multiplier^0,w,c
 16026  005112  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 16027  005114  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 16028  005116  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 16029  005118  A4D8               	btfss	status,2,c
 16030  00511A  D7E6               	goto	l10790
 16031  00511C  C012  F00A         	movff	___lmul@product,?___lmul
 16032  005120  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 16033  005124  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 16034  005128  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 16035  00512C  0012               	return		;funcret
 16036  00512E                     __end_of___lmul:
 16037                           	callstack 0
 16038                           
 16039 ;; *************** function _f_mount *****************
 16040 ;; Defined at:
 16041 ;;		line 794 in file "bibliotecas/tff.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;  drv             1    wreg     unsigned char 
 16044 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 16045 ;;		 -> fs(544), 
 16046 ;; Auto vars:     Size  Location     Type
 16047 ;;  drv             1   11[COMRAM] unsigned char 
 16048 ;; Return value:  Size  Location     Type
 16049 ;;                  1    wreg      enum E3231
 16050 ;; Registers used:
 16051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16052 ;; Tracked objects:
 16053 ;;		On entry : 0/1
 16054 ;;		On exit  : 0/0
 16055 ;;		Unchanged: 0/0
 16056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16057 ;;      Params:         2       0       0       0       0       0       0       0       0
 16058 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16060 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16061 ;;Total ram usage:        3 bytes
 16062 ;; Hardware stack levels used:    1
 16063 ;; Hardware stack levels required when called:    2
 16064 ;; This function calls:
 16065 ;;		Nothing
 16066 ;; This function is called by:
 16067 ;;		_escrita_sdcard
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071                           	psect	text91
 16072  005350                     __ptext91:
 16073                           	callstack 0
 16074  005350                     _f_mount:
 16075                           	callstack 24
 16076                           
 16077                           ;incstack = 0
 16078                           ;f_mount@drv stored from wreg
 16079  005350  6E0C               	movwf	f_mount@drv^0,c
 16080                           
 16081                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 16082  005352  500C               	movf	f_mount@drv^0,w,c
 16083  005354  B4D8               	btfsc	status,2,c
 16084  005356  D002               	goto	l12252
 16085  005358  0E05               	movlw	5
 16086  00535A  0012               	return	
 16087  00535C                     l12252:
 16088                           
 16089                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 16090  00535C  504D               	movf	_FatFs^0,w,c
 16091  00535E  104E               	iorwf	(_FatFs+1)^0,w,c
 16092  005360  B4D8               	btfsc	status,2,c
 16093  005362  D008               	goto	l12256
 16094  005364  EE20 F01C          	lfsr	2,28
 16095  005368  504D               	movf	_FatFs^0,w,c
 16096  00536A  26D9               	addwf	fsr2l,f,c
 16097  00536C  504E               	movf	(_FatFs+1)^0,w,c
 16098  00536E  22DA               	addwfc	fsr2h,f,c
 16099  005370  0E00               	movlw	0
 16100  005372  6EDF               	movwf	indf2,c
 16101  005374                     l12256:
 16102                           
 16103                           ;tff.c: 803: FatFs = fs;
 16104  005374  C00A  F04D         	movff	f_mount@fs,_FatFs
 16105  005378  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 16106                           
 16107                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 16108  00537C  500A               	movf	f_mount@fs^0,w,c
 16109  00537E  100B               	iorwf	(f_mount@fs+1)^0,w,c
 16110  005380  B4D8               	btfsc	status,2,c
 16111  005382  D008               	goto	l12262
 16112  005384  EE20 F01C          	lfsr	2,28
 16113  005388  500A               	movf	f_mount@fs^0,w,c
 16114  00538A  26D9               	addwf	fsr2l,f,c
 16115  00538C  500B               	movf	(f_mount@fs+1)^0,w,c
 16116  00538E  22DA               	addwfc	fsr2h,f,c
 16117  005390  0E00               	movlw	0
 16118  005392  6EDF               	movwf	indf2,c
 16119  005394                     l12262:
 16120                           
 16121                           ;tff.c: 806: return FR_OK;
 16122  005394  0E00               	movlw	0
 16123  005396  0012               	return		;funcret
 16124  005398                     __end_of_f_mount:
 16125                           	callstack 0
 16126                           
 16127 ;; *************** function _f_lseek *****************
 16128 ;; Defined at:
 16129 ;;		line 1140 in file "bibliotecas/tff.c"
 16130 ;; Parameters:    Size  Location     Type
 16131 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 16132 ;;		 -> fil(28), 
 16133 ;;  ofs             4   40[BANK0 ] unsigned long 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  csize           4   65[BANK0 ] unsigned long 
 16136 ;;  ifptr           4   61[BANK0 ] unsigned long 
 16137 ;;  clust           2   69[BANK0 ] unsigned short 
 16138 ;;  res             1   60[BANK0 ] enum E155
 16139 ;; Return value:  Size  Location     Type
 16140 ;;                  1    wreg      enum E3231
 16141 ;; Registers used:
 16142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16143 ;; Tracked objects:
 16144 ;;		On entry : 3F/0
 16145 ;;		On exit  : 3F/0
 16146 ;;		Unchanged: 0/0
 16147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16148 ;;      Params:         0       6       0       0       0       0       0       0       0
 16149 ;;      Locals:         0      11       0       0       0       0       0       0       0
 16150 ;;      Temps:          0      16       0       0       0       0       0       0       0
 16151 ;;      Totals:         0      33       0       0       0       0       0       0       0
 16152 ;;Total ram usage:       33 bytes
 16153 ;; Hardware stack levels used:    1
 16154 ;; Hardware stack levels required when called:   10
 16155 ;; This function calls:
 16156 ;;		___lldiv
 16157 ;;		_create_chain
 16158 ;;		_get_cluster
 16159 ;;		_validate
 16160 ;; This function is called by:
 16161 ;;		_escrita_sdcard
 16162 ;; This function uses a non-reentrant model
 16163 ;;
 16164                           
 16165                           	psect	text92
 16166  000AF2                     __ptext92:
 16167                           	callstack 0
 16168  000AF2                     _f_lseek:
 16169                           	callstack 16
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 16173                           
 16174                           ;incstack = 0
 16175  000AF2  EE20 F004          	lfsr	2,4
 16176  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 16177  000AF8  26D9               	addwf	fsr2l,f,c
 16178  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16179  000AFC  22DA               	addwfc	fsr2h,f,c
 16180  000AFE  CFDE F010          	movff	postinc2,validate@fs
 16181  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 16182  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 16183  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 16184  000B0E  CFDE F012          	movff	postinc2,validate@id
 16185  000B12  CFDD F013          	movff	postdec2,validate@id+1
 16186  000B16  ECCC  F029         	call	_validate	;wreg free
 16187  000B1A  0100               	movlb	0	; () banked
 16188  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;tff.c: 1151: if (res != FR_OK) return res;
 16192  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 16193  000B20  A4D8               	btfss	status,2,c
 16194  000B22  0012               	return	
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 16198  000B24  EE20 F002          	lfsr	2,2
 16199  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 16200  000B2A  26D9               	addwf	fsr2l,f,c
 16201  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16202  000B2E  22DA               	addwfc	fsr2h,f,c
 16203  000B30  BEDF               	btfsc	indf2,7,c
 16204  000B32  0012               	return	
 16205                           
 16206                           ; BSR set to: 0
 16207                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 16208  000B34  EE20 F00A          	lfsr	2,10
 16209  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 16210  000B3A  26D9               	addwf	fsr2l,f,c
 16211  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16212  000B3E  22DA               	addwfc	fsr2h,f,c
 16213  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 16214  000B42  5CDE               	subwf	postinc2,w,c
 16215  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16216  000B46  58DE               	subwfb	postinc2,w,c
 16217  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16218  000B4A  58DE               	subwfb	postinc2,w,c
 16219  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16220  000B4E  58DE               	subwfb	postinc2,w,c
 16221  000B50  B0D8               	btfsc	status,0,c
 16222  000B52  D016               	goto	l1188
 16223                           
 16224                           ; BSR set to: 0
 16225  000B54  EE20 F002          	lfsr	2,2
 16226  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 16227  000B5A  26D9               	addwf	fsr2l,f,c
 16228  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16229  000B5E  22DA               	addwfc	fsr2h,f,c
 16230  000B60  B2DF               	btfsc	indf2,1,c
 16231  000B62  D00E               	goto	l1188
 16232                           
 16233                           ; BSR set to: 0
 16234  000B64  EE20 F00A          	lfsr	2,10
 16235  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 16236  000B6A  26D9               	addwf	fsr2l,f,c
 16237  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16238  000B6E  22DA               	addwfc	fsr2h,f,c
 16239  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 16240  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 16241  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 16242  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 16243  000B80                     l1188:
 16244                           
 16245                           ; BSR set to: 0
 16246                           ;tff.c: 1159: ifptr = fp->fptr;
 16247  000B80  EE20 F006          	lfsr	2,6
 16248  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 16249  000B86  26D9               	addwf	fsr2l,f,c
 16250  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16251  000B8A  22DA               	addwfc	fsr2h,f,c
 16252  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 16253  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 16254  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 16255  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 16256                           
 16257                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 16258  000B9C  EE20 F006          	lfsr	2,6
 16259  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 16260  000BA2  26D9               	addwf	fsr2l,f,c
 16261  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16262  000BA6  22DA               	addwfc	fsr2h,f,c
 16263  000BA8  6ADE               	clrf	postinc2,c
 16264  000BAA  6ADE               	clrf	postinc2,c
 16265  000BAC  6ADE               	clrf	postinc2,c
 16266  000BAE  6ADD               	clrf	postdec2,c
 16267  000BB0  EE20 F003          	lfsr	2,3
 16268  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 16269  000BB6  26D9               	addwf	fsr2l,f,c
 16270  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16271  000BBA  22DA               	addwfc	fsr2h,f,c
 16272  000BBC  0EFF               	movlw	255
 16273  000BBE  6EDF               	movwf	indf2,c
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;tff.c: 1161: if (ofs > 0) {
 16277  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 16278  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 16279  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 16280  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 16281  000BC8  B4D8               	btfsc	status,2,c
 16282  000BCA  D19D               	goto	l12492
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 16286  000BCC  EE20 F004          	lfsr	2,4
 16287  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 16288  000BD2  26D9               	addwf	fsr2l,f,c
 16289  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16290  000BD6  22DA               	addwfc	fsr2h,f,c
 16291  000BD8  EE10 F01D          	lfsr	1,29
 16292  000BDC  50DE               	movf	postinc2,w,c
 16293  000BDE  26E1               	addwf	fsr1l,f,c
 16294  000BE0  50DD               	movf	postdec2,w,c
 16295  000BE2  22E2               	addwfc	fsr1h,f,c
 16296  000BE4  50E7               	movf	indf1,w,c
 16297  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 16298  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 16299  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 16300  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 16301  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 16302  000BF2  0E09               	movlw	9
 16303  000BF4                     u14525:
 16304  000BF4  90D8               	bcf	status,0,c
 16305  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 16306  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 16307  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 16308  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 16309  000BFE  2EE8               	decfsz	wreg,f,c
 16310  000C00  D7F9               	goto	u14525
 16311  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 16312  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 16313  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 16314  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 16318  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 16319  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 16320  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 16321  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 16322  000C1A  B4D8               	btfsc	status,2,c
 16323  000C1C  D093               	goto	l12450
 16324                           
 16325                           ; BSR set to: 0
 16326  000C1E  0EFF               	movlw	255
 16327  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 16328  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 16329  000C24  0EFF               	movlw	255
 16330  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 16331  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16332  000C2A  0EFF               	movlw	255
 16333  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 16334  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16335  000C30  0EFF               	movlw	255
 16336  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 16337  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16338  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16339  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16340  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16341  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16342  000C46  ECF4  F024         	call	___lldiv	;wreg free
 16343  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 16344  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 16345  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 16346  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 16347  000C5A  0EFF               	movlw	255
 16348  000C5C  0100               	movlb	0	; () banked
 16349  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16350  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 16351  000C62  0EFF               	movlw	255
 16352  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16353  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16354  000C68  0EFF               	movlw	255
 16355  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16356  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16357  000C6E  0EFF               	movlw	255
 16358  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16359  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16360  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16361  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16362  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16363  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16364  000C84  ECF4  F024         	call	___lldiv	;wreg free
 16365  000C88  500A               	movf	?___lldiv^0,w,c
 16366  000C8A  0100               	movlb	0	; () banked
 16367  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 16368  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 16369  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 16370  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 16371  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 16372  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 16373  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 16374  000C9A  A0D8               	btfss	status,0,c
 16375  000C9C  D053               	goto	l12450
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 16379  000C9E  0EFF               	movlw	255
 16380  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 16381  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 16382  000CA4  0EFF               	movlw	255
 16383  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 16384  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16385  000CAA  0EFF               	movlw	255
 16386  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 16387  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16388  000CB0  0EFF               	movlw	255
 16389  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 16390  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16391  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 16392  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 16393  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 16394  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 16395  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 16396  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 16397  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 16398  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 16399  000CC6  0EFF               	movlw	255
 16400  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16401  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 16402  000CCC  0EFF               	movlw	255
 16403  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16404  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 16405  000CD2  0EFF               	movlw	255
 16406  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16407  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 16408  000CD8  0EFF               	movlw	255
 16409  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16410  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 16411  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 16412  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 16413  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 16414  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 16415  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 16416  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 16417  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 16418  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 16419  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 16420  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 16421  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 16422  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 16423  000CF6  EE20 F006          	lfsr	2,6
 16424  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 16425  000CFC  26D9               	addwf	fsr2l,f,c
 16426  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16427  000D00  22DA               	addwfc	fsr2h,f,c
 16428  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 16429  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 16430  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 16431  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 16432                           
 16433                           ;tff.c: 1166: ofs -= fp->fptr;
 16434  000D12  EE20 F006          	lfsr	2,6
 16435  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 16436  000D18  26D9               	addwf	fsr2l,f,c
 16437  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16438  000D1C  22DA               	addwfc	fsr2h,f,c
 16439  000D1E  50DE               	movf	postinc2,w,c
 16440  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16441  000D22  50DE               	movf	postinc2,w,c
 16442  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16443  000D26  50DE               	movf	postinc2,w,c
 16444  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16445  000D2A  50DD               	movf	postdec2,w,c
 16446  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16447                           
 16448                           ;tff.c: 1167: clust = fp->curr_clust;
 16449  000D2E  EE20 F010          	lfsr	2,16
 16450  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 16451  000D34  26D9               	addwf	fsr2l,f,c
 16452  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16453  000D38  22DA               	addwfc	fsr2h,f,c
 16454  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16455  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16456                           
 16457                           ;tff.c: 1168: } else {
 16458  000D42  D030               	goto	l12462
 16459  000D44                     l12450:
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;tff.c: 1169: clust = fp->org_clust;
 16463  000D44  EE20 F00E          	lfsr	2,14
 16464  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 16465  000D4A  26D9               	addwf	fsr2l,f,c
 16466  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16467  000D4E  22DA               	addwfc	fsr2h,f,c
 16468  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16469  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;tff.c: 1171: if (clust == 0) {
 16473  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 16474  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16475  000D5C  A4D8               	btfss	status,2,c
 16476  000D5E  D018               	goto	l1192
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;tff.c: 1172: clust = create_chain(0);
 16480  000D60  0E00               	movlw	0
 16481  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 16482  000D64  0E00               	movlw	0
 16483  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 16484  000D68  ECBB  F016         	call	_create_chain	;wreg free
 16485  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16486  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 16490  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 16491  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16492  000D78  B4D8               	btfsc	status,2,c
 16493  000D7A  D0F8               	goto	l12500
 16494                           
 16495                           ; BSR set to: 0
 16496                           ;tff.c: 1174: fp->org_clust = clust;
 16497  000D7C  EE20 F00E          	lfsr	2,14
 16498  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 16499  000D82  26D9               	addwf	fsr2l,f,c
 16500  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16501  000D86  22DA               	addwfc	fsr2h,f,c
 16502  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16503  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16504  000D90                     l1192:
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 16508  000D90  EE20 F010          	lfsr	2,16
 16509  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 16510  000D96  26D9               	addwf	fsr2l,f,c
 16511  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16512  000D9A  22DA               	addwfc	fsr2h,f,c
 16513  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16514  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16515  000DA4                     l12462:
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 16519  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 16520  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16521  000DA8  A4D8               	btfss	status,2,c
 16522  000DAA  D063               	goto	l12484
 16523  000DAC  D0AC               	goto	l12492
 16524  000DAE                     l12466:
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;tff.c: 1182: if (fp->flag & 0x02) {
 16528  000DAE  EE20 F002          	lfsr	2,2
 16529  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 16530  000DB4  26D9               	addwf	fsr2l,f,c
 16531  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16532  000DB8  22DA               	addwfc	fsr2h,f,c
 16533  000DBA  A2DF               	btfss	indf2,1,c
 16534  000DBC  D017               	goto	l12474
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;tff.c: 1183: clust = create_chain(clust);
 16538  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 16539  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 16540  000DC6  ECBB  F016         	call	_create_chain	;wreg free
 16541  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16542  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;tff.c: 1184: if (clust == 0) {
 16546  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 16547  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16548  000DD6  A4D8               	btfss	status,2,c
 16549  000DD8  D013               	goto	l12476
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;tff.c: 1185: ofs = csize; break;
 16553  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 16554  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 16555  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 16556  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 16557  000DEA  D04D               	goto	u14620
 16558  000DEC                     l12474:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;tff.c: 1189: clust = get_cluster(clust);
 16562  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 16563  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 16564  000DF4  ECF4  F012         	call	_get_cluster	;wreg free
 16565  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 16566  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 16567  000E00                     l12476:
 16568                           
 16569                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 16570  000E00  0100               	movlb	0	; () banked
 16571  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 16572  000E04  E104               	bnz	u14600
 16573  000E06  0E02               	movlw	2
 16574  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16575  000E0A  A0D8               	btfss	status,0,c
 16576  000E0C  D0AF               	goto	l12500
 16577  000E0E                     u14600:
 16578                           
 16579                           ; BSR set to: 0
 16580  000E0E  EE20 F004          	lfsr	2,4
 16581  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 16582  000E14  26D9               	addwf	fsr2l,f,c
 16583  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16584  000E18  22DA               	addwfc	fsr2h,f,c
 16585  000E1A  EE10 F016          	lfsr	1,22
 16586  000E1E  50DE               	movf	postinc2,w,c
 16587  000E20  26E1               	addwf	fsr1l,f,c
 16588  000E22  50DD               	movf	postdec2,w,c
 16589  000E24  22E2               	addwfc	fsr1h,f,c
 16590  000E26  50E6               	movf	postinc1,w,c
 16591  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16592  000E2A  50E6               	movf	postinc1,w,c
 16593  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 16594  000E2E  B0D8               	btfsc	status,0,c
 16595  000E30  D09D               	goto	l12500
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;tff.c: 1191: fp->curr_clust = clust;
 16599  000E32  EE20 F010          	lfsr	2,16
 16600  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 16601  000E38  26D9               	addwf	fsr2l,f,c
 16602  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16603  000E3C  22DA               	addwfc	fsr2h,f,c
 16604  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16605  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16606                           
 16607                           ;tff.c: 1192: fp->fptr += csize;
 16608  000E46  EE20 F006          	lfsr	2,6
 16609  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 16610  000E4C  26D9               	addwf	fsr2l,f,c
 16611  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16612  000E50  22DA               	addwfc	fsr2h,f,c
 16613  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 16614  000E54  26DE               	addwf	postinc2,f,c
 16615  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16616  000E58  22DE               	addwfc	postinc2,f,c
 16617  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16618  000E5C  22DE               	addwfc	postinc2,f,c
 16619  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16620  000E60  22DE               	addwfc	postinc2,f,c
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;tff.c: 1193: ofs -= csize;
 16624  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 16625  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16626  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16627  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16628  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16629  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16630  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16631  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16632  000E72                     l12484:
 16633                           
 16634                           ; BSR set to: 0
 16635  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 16636  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 16637  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16638  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 16639  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16640  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 16641  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16642  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 16643  000E82  A0D8               	btfss	status,0,c
 16644  000E84  D794               	goto	l12466
 16645  000E86                     u14620:
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 16649  000E86  EE20 F006          	lfsr	2,6
 16650  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 16651  000E8C  26D9               	addwf	fsr2l,f,c
 16652  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16653  000E90  22DA               	addwfc	fsr2h,f,c
 16654  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 16655  000E94  26DE               	addwf	postinc2,f,c
 16656  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16657  000E98  22DE               	addwfc	postinc2,f,c
 16658  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16659  000E9C  22DE               	addwfc	postinc2,f,c
 16660  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16661  000EA0  22DE               	addwfc	postinc2,f,c
 16662                           
 16663                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16664  000EA2  EE20 F003          	lfsr	2,3
 16665  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16666  000EA8  26D9               	addwf	fsr2l,f,c
 16667  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16668  000EAC  22DA               	addwfc	fsr2h,f,c
 16669  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16670  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16671  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16672  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16673  000EBE  0E0A               	movlw	10
 16674  000EC0  D005               	goto	u14630
 16675  000EC2                     u14635:
 16676  000EC2  90D8               	bcf	status,0,c
 16677  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16678  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16679  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16680  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16681  000ECC                     u14630:
 16682  000ECC  2EE8               	decfsz	wreg,f,c
 16683  000ECE  D7F9               	goto	u14635
 16684  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16685  000ED2  6EDF               	movwf	indf2,c
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16689  000ED4  0EFF               	movlw	255
 16690  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16691  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16692  000EDA  0E01               	movlw	1
 16693  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16694  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16695  000EE0  0E00               	movlw	0
 16696  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16697  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16698  000EE6  0E00               	movlw	0
 16699  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16700  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16701  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16702  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16703  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16704  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16705  000EF4  B4D8               	btfsc	status,2,c
 16706  000EF6  D007               	goto	l12492
 16707                           
 16708                           ; BSR set to: 0
 16709  000EF8  EE20 F003          	lfsr	2,3
 16710  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16711  000EFE  26D9               	addwf	fsr2l,f,c
 16712  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16713  000F02  22DA               	addwfc	fsr2h,f,c
 16714  000F04  2ADF               	incf	indf2,f,c
 16715  000F06                     l12492:
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16719  000F06  EE20 F006          	lfsr	2,6
 16720  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16721  000F0C  26D9               	addwf	fsr2l,f,c
 16722  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16723  000F10  22DA               	addwfc	fsr2h,f,c
 16724  000F12  EE10 F00A          	lfsr	1,10
 16725  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16726  000F18  26E1               	addwf	fsr1l,f,c
 16727  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16728  000F1C  22E2               	addwfc	fsr1h,f,c
 16729  000F1E  50DE               	movf	postinc2,w,c
 16730  000F20  5CE6               	subwf	postinc1,w,c
 16731  000F22  50DE               	movf	postinc2,w,c
 16732  000F24  58E6               	subwfb	postinc1,w,c
 16733  000F26  50DE               	movf	postinc2,w,c
 16734  000F28  58E6               	subwfb	postinc1,w,c
 16735  000F2A  50DE               	movf	postinc2,w,c
 16736  000F2C  58E6               	subwfb	postinc1,w,c
 16737  000F2E  B0D8               	btfsc	status,0,c
 16738  000F30  0012               	return	
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16742  000F32  EE20 F006          	lfsr	2,6
 16743  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16744  000F38  26D9               	addwf	fsr2l,f,c
 16745  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16746  000F3C  22DA               	addwfc	fsr2h,f,c
 16747  000F3E  EE10 F00A          	lfsr	1,10
 16748  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16749  000F44  26E1               	addwf	fsr1l,f,c
 16750  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16751  000F48  22E2               	addwfc	fsr1h,f,c
 16752  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16753  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16754  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16755  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16756                           
 16757                           ; BSR set to: 0
 16758                           ;tff.c: 1204: fp->flag |= 0x20;
 16759  000F5A  EE20 F002          	lfsr	2,2
 16760  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16761  000F60  26D9               	addwf	fsr2l,f,c
 16762  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16763  000F64  22DA               	addwfc	fsr2h,f,c
 16764  000F66  0E00               	movlw	0
 16765  000F68  8ADB               	bsf	plusw2,5,c
 16766  000F6A  0012               	return	
 16767  000F6C                     l12500:
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;tff.c: 1211: fp->flag |= 0x80;
 16771  000F6C  EE20 F002          	lfsr	2,2
 16772  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16773  000F72  26D9               	addwf	fsr2l,f,c
 16774  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16775  000F76  22DA               	addwfc	fsr2h,f,c
 16776  000F78  0E00               	movlw	0
 16777  000F7A  8EDB               	bsf	plusw2,7,c
 16778                           
 16779                           ; BSR set to: 0
 16780  000F7C  0012               	return		;funcret
 16781  000F7E                     __end_of_f_lseek:
 16782                           	callstack 0
 16783                           
 16784 ;; *************** function _create_chain *****************
 16785 ;; Defined at:
 16786 ;;		line 283 in file "bibliotecas/tff.c"
 16787 ;; Parameters:    Size  Location     Type
 16788 ;;  clust           2   24[BANK0 ] unsigned short 
 16789 ;; Auto vars:     Size  Location     Type
 16790 ;;  ncl             2   36[BANK0 ] unsigned short 
 16791 ;;  scl             2   34[BANK0 ] unsigned short 
 16792 ;;  cstat           2   32[BANK0 ] unsigned short 
 16793 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16794 ;;		 -> NULL(0), fs(544), 
 16795 ;;  mcl             2   28[BANK0 ] unsigned short 
 16796 ;; Return value:  Size  Location     Type
 16797 ;;                  2   24[BANK0 ] unsigned short 
 16798 ;; Registers used:
 16799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16800 ;; Tracked objects:
 16801 ;;		On entry : 3F/0
 16802 ;;		On exit  : 3F/0
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16805 ;;      Params:         0       2       0       0       0       0       0       0       0
 16806 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16807 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16808 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16809 ;;Total ram usage:       14 bytes
 16810 ;; Hardware stack levels used:    1
 16811 ;; Hardware stack levels required when called:    9
 16812 ;; This function calls:
 16813 ;;		_get_cluster
 16814 ;;		_put_cluster
 16815 ;; This function is called by:
 16816 ;;		_reserve_direntry
 16817 ;;		_f_write
 16818 ;;		_f_lseek
 16819 ;; This function uses a non-reentrant model
 16820 ;;
 16821                           
 16822                           	psect	text93
 16823  002D76                     __ptext93:
 16824                           	callstack 0
 16825  002D76                     _create_chain:
 16826                           	callstack 13
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;incstack = 0
 16833  002D76  C04D  F07E         	movff	_FatFs,create_chain@fs
 16834  002D7A  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;tff.c: 291: mcl = fs->max_clust;
 16838  002D7E  EE20 F016          	lfsr	2,22
 16839  002D82  517E               	movf	create_chain@fs& (0+255),w,b
 16840  002D84  26D9               	addwf	fsr2l,f,c
 16841  002D86  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16842  002D88  22DA               	addwfc	fsr2h,f,c
 16843  002D8A  CFDE F07C          	movff	postinc2,create_chain@mcl
 16844  002D8E  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16845                           
 16846                           ; BSR set to: 0
 16847                           ;tff.c: 292: if (clust == 0) {
 16848  002D92  5178               	movf	create_chain@clust& (0+255),w,b
 16849  002D94  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16850  002D96  A4D8               	btfss	status,2,c
 16851  002D98  D01B               	goto	l10838
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;tff.c: 293: scl = fs->last_clust;
 16855  002D9A  EE20 F018          	lfsr	2,24
 16856  002D9E  517E               	movf	create_chain@fs& (0+255),w,b
 16857  002DA0  26D9               	addwf	fsr2l,f,c
 16858  002DA2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16859  002DA4  22DA               	addwfc	fsr2h,f,c
 16860  002DA6  CFDE F082          	movff	postinc2,create_chain@scl
 16861  002DAA  CFDD F083          	movff	postdec2,create_chain@scl+1
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16865  002DAE  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16866  002DB0  E104               	bnz	u12060
 16867  002DB2  0E02               	movlw	2
 16868  002DB4  5D82               	subwf	create_chain@scl& (0+255),w,b
 16869  002DB6  A0D8               	btfss	status,0,c
 16870  002DB8  D006               	goto	u12070
 16871  002DBA                     u12060:
 16872                           
 16873                           ; BSR set to: 0
 16874  002DBA  517C               	movf	create_chain@mcl& (0+255),w,b
 16875  002DBC  5D82               	subwf	create_chain@scl& (0+255),w,b
 16876  002DBE  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16877  002DC0  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16878  002DC2  A0D8               	btfss	status,0,c
 16879  002DC4  D02B               	goto	l913
 16880  002DC6                     u12070:
 16881                           
 16882                           ; BSR set to: 0
 16883  002DC6  0E00               	movlw	0
 16884  002DC8  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16885  002DCA  0E01               	movlw	1
 16886  002DCC  6F82               	movwf	create_chain@scl& (0+255),b
 16887  002DCE  D026               	goto	l913
 16888  002DD0                     l10838:
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16892  002DD0  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16893  002DD4  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16894  002DD8  ECF4  F012         	call	_get_cluster	;wreg free
 16895  002DDC  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16896  002DE0  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16897                           
 16898                           ;tff.c: 298: if (cstat < 2) return 1;
 16899  002DE4  0100               	movlb	0	; () banked
 16900  002DE6  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16901  002DE8  E10A               	bnz	l10846
 16902  002DEA  0E02               	movlw	2
 16903  002DEC  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16904  002DEE  B0D8               	btfsc	status,0,c
 16905  002DF0  D006               	goto	l10846
 16906  002DF2                     u12080:
 16907  002DF2  0E00               	movlw	0
 16908  002DF4  0100               	movlb	0	; () banked
 16909  002DF6  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16910  002DF8  0E01               	movlw	1
 16911  002DFA  6F78               	movwf	?_create_chain& (0+255),b
 16912  002DFC  0012               	return	
 16913  002DFE                     l10846:
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16917  002DFE  517C               	movf	create_chain@mcl& (0+255),w,b
 16918  002E00  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16919  002E02  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16920  002E04  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16921  002E06  B0D8               	btfsc	status,0,c
 16922  002E08  D005               	goto	l916
 16923                           
 16924                           ; BSR set to: 0
 16925  002E0A  C080  F078         	movff	create_chain@cstat,?_create_chain
 16926  002E0E  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16927  002E12  0012               	return	
 16928  002E14                     l916:
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;tff.c: 300: scl = clust;
 16932  002E14  C078  F082         	movff	create_chain@clust,create_chain@scl
 16933  002E18  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16934  002E1C                     l913:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16938  002E1C  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16939  002E20  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16940  002E24                     l10850:
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;tff.c: 305: ncl++;
 16944  002E24  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16945  002E26  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;tff.c: 306: if (ncl >= mcl) {
 16949  002E28  517C               	movf	create_chain@mcl& (0+255),w,b
 16950  002E2A  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16951  002E2C  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16952  002E2E  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16953  002E30  A0D8               	btfss	status,0,c
 16954  002E32  D00F               	goto	l10862
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;tff.c: 307: ncl = 2;
 16958  002E34  0E00               	movlw	0
 16959  002E36  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16960  002E38  0E02               	movlw	2
 16961  002E3A  6F84               	movwf	create_chain@ncl& (0+255),b
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;tff.c: 308: if (ncl > scl) return 0;
 16965  002E3C  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16966  002E3E  E109               	bnz	l10862
 16967  002E40  0E02               	movlw	2
 16968  002E42  5D82               	subwf	create_chain@scl& (0+255),w,b
 16969  002E44  B0D8               	btfsc	status,0,c
 16970  002E46  D005               	goto	l10862
 16971  002E48                     u12110:
 16972                           
 16973                           ; BSR set to: 0
 16974  002E48  0E00               	movlw	0
 16975  002E4A  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16976  002E4C  0E00               	movlw	0
 16977  002E4E  6F78               	movwf	?_create_chain& (0+255),b
 16978  002E50  0012               	return	
 16979  002E52                     l10862:
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16983  002E52  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16984  002E56  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16985  002E5A  ECF4  F012         	call	_get_cluster	;wreg free
 16986  002E5E  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16987  002E62  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16988                           
 16989                           ;tff.c: 311: if (cstat == 0) break;
 16990  002E66  0100               	movlb	0	; () banked
 16991  002E68  5180               	movf	create_chain@cstat& (0+255),w,b
 16992  002E6A  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16993  002E6C  B4D8               	btfsc	status,2,c
 16994  002E6E  D00C               	goto	l10880
 16995                           
 16996                           ; BSR set to: 0
 16997                           ;tff.c: 312: if (cstat == 1) return 1;
 16998  002E70  0580               	decf	create_chain@cstat& (0+255),w,b
 16999  002E72  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 17000  002E74  B4D8               	btfsc	status,2,c
 17001  002E76  D7BD               	goto	u12080
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;tff.c: 313: if (ncl == scl) return 0;
 17005  002E78  5182               	movf	create_chain@scl& (0+255),w,b
 17006  002E7A  1984               	xorwf	create_chain@ncl& (0+255),w,b
 17007  002E7C  E1D3               	bnz	l10850
 17008  002E7E  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 17009  002E80  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 17010  002E82  B4D8               	btfsc	status,2,c
 17011  002E84  D7E1               	goto	u12110
 17012  002E86  D7CE               	goto	l10850
 17013  002E88                     l10880:
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 17017  002E88  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 17018  002E8C  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 17019  002E90  0EFF               	movlw	255
 17020  002E92  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 17021  002E94  6962               	setf	put_cluster@val& (0+255),b
 17022  002E96  ECBE  F011         	call	_put_cluster	;wreg free
 17023  002E9A  0900               	iorlw	0
 17024  002E9C  B4D8               	btfsc	status,2,c
 17025  002E9E  D7A9               	goto	u12080
 17026                           
 17027                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 17028  002EA0  0100               	movlb	0	; () banked
 17029  002EA2  5178               	movf	create_chain@clust& (0+255),w,b
 17030  002EA4  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 17031  002EA6  B4D8               	btfsc	status,2,c
 17032  002EA8  D00D               	goto	l10894
 17033                           
 17034                           ; BSR set to: 0
 17035  002EAA  C078  F060         	movff	create_chain@clust,put_cluster@clust
 17036  002EAE  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 17037  002EB2  C084  F062         	movff	create_chain@ncl,put_cluster@val
 17038  002EB6  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 17039  002EBA  ECBE  F011         	call	_put_cluster	;wreg free
 17040  002EBE  0900               	iorlw	0
 17041  002EC0  B4D8               	btfsc	status,2,c
 17042  002EC2  D797               	goto	u12080
 17043  002EC4                     l10894:
 17044                           
 17045                           ;tff.c: 319: fs->last_clust = ncl;
 17046  002EC4  0100               	movlb	0	; () banked
 17047  002EC6  EE20 F018          	lfsr	2,24
 17048  002ECA  517E               	movf	create_chain@fs& (0+255),w,b
 17049  002ECC  26D9               	addwf	fsr2l,f,c
 17050  002ECE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17051  002ED0  22DA               	addwfc	fsr2h,f,c
 17052  002ED2  C084  FFDE         	movff	create_chain@ncl,postinc2
 17053  002ED6  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 17054                           
 17055                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 17056  002EDA  EE20 F01A          	lfsr	2,26
 17057  002EDE  517E               	movf	create_chain@fs& (0+255),w,b
 17058  002EE0  26D9               	addwf	fsr2l,f,c
 17059  002EE2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17060  002EE4  22DA               	addwfc	fsr2h,f,c
 17061  002EE6  28DE               	incf	postinc2,w,c
 17062  002EE8  E103               	bnz	u12180
 17063  002EEA  28DE               	incf	postinc2,w,c
 17064  002EEC  B4D8               	btfsc	status,2,c
 17065  002EEE  D009               	goto	l10898
 17066  002EF0                     u12180:
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;tff.c: 321: fs->free_clust--;
 17070  002EF0  EE20 F01A          	lfsr	2,26
 17071  002EF4  517E               	movf	create_chain@fs& (0+255),w,b
 17072  002EF6  26D9               	addwf	fsr2l,f,c
 17073  002EF8  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17074  002EFA  22DA               	addwfc	fsr2h,f,c
 17075  002EFC  06DE               	decf	postinc2,f,c
 17076  002EFE  0E00               	movlw	0
 17077  002F00  5ADD               	subwfb	postdec2,f,c
 17078  002F02                     l10898:
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;tff.c: 325: };tff.c: 327: return ncl;
 17082  002F02  C084  F078         	movff	create_chain@ncl,?_create_chain
 17083  002F06  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 17084                           
 17085                           ; BSR set to: 0
 17086  002F0A  0012               	return		;funcret
 17087  002F0C                     __end_of_create_chain:
 17088                           	callstack 0
 17089                           
 17090 ;; *************** function _put_cluster *****************
 17091 ;; Defined at:
 17092 ;;		line 198 in file "bibliotecas/tff.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;  clust           2    0[BANK0 ] unsigned short 
 17095 ;;  val             2    2[BANK0 ] unsigned short 
 17096 ;; Auto vars:     Size  Location     Type
 17097 ;;  fatsect         4   14[BANK0 ] unsigned long 
 17098 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 17099 ;;		 -> NULL(0), fs(544), 
 17100 ;;  p               2   20[BANK0 ] PTR unsigned char 
 17101 ;;		 -> fs.win(512), NULL(0), fs(544), 
 17102 ;;  bc              2   18[BANK0 ] unsigned short 
 17103 ;; Return value:  Size  Location     Type
 17104 ;;                  1    wreg      enum E105
 17105 ;; Registers used:
 17106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17107 ;; Tracked objects:
 17108 ;;		On entry : 3F/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17112 ;;      Params:         0       4       0       0       0       0       0       0       0
 17113 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17114 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17115 ;;      Totals:         0      24       0       0       0       0       0       0       0
 17116 ;;Total ram usage:       24 bytes
 17117 ;; Hardware stack levels used:    1
 17118 ;; Hardware stack levels required when called:    8
 17119 ;; This function calls:
 17120 ;;		___wmul
 17121 ;;		_move_window
 17122 ;; This function is called by:
 17123 ;;		_remove_chain
 17124 ;;		_create_chain
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128                           	psect	text94
 17129  00237C                     __ptext94:
 17130                           	callstack 0
 17131  00237C                     _put_cluster:
 17132                           	callstack 13
 17133                           
 17134                           ; BSR set to: 0
 17135                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;incstack = 0
 17139  00237C  C04D  F076         	movff	_FatFs,put_cluster@fs
 17140  002380  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;tff.c: 209: fatsect = fs->fatbase;
 17144  002384  EE20 F008          	lfsr	2,8
 17145  002388  5176               	movf	put_cluster@fs& (0+255),w,b
 17146  00238A  26D9               	addwf	fsr2l,f,c
 17147  00238C  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17148  00238E  22DA               	addwfc	fsr2h,f,c
 17149  002390  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 17150  002394  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 17151  002398  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 17152  00239C  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 17153                           
 17154                           ;tff.c: 210: switch (fs->fs_type) {
 17155  0023A0  D10B               	goto	l10780
 17156  0023A2                     l10728:
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 17160  0023A2  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 17161  0023A6  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 17162  0023AA  0E00               	movlw	0
 17163  0023AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17164  0023AE  0E03               	movlw	3
 17165  0023B0  6E0C               	movwf	___wmul@multiplicand^0,c
 17166  0023B2  EC9B  F02C         	call	___wmul	;wreg free
 17167  0023B6  90D8               	bcf	status,0,c
 17168  0023B8  300B               	rrcf	(?___wmul+1)^0,w,c
 17169  0023BA  0100               	movlb	0	; () banked
 17170  0023BC  6F64               	movwf	??_put_cluster& (0+255),b
 17171  0023BE  300A               	rrcf	?___wmul^0,w,c
 17172  0023C0  6F72               	movwf	put_cluster@bc& (0+255),b
 17173  0023C2  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17177  0023C6  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17178  0023CA  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17179  0023CE  0E09               	movlw	9
 17180  0023D0  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17181  0023D2                     u11915:
 17182  0023D2  90D8               	bcf	status,0,c
 17183  0023D4  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17184  0023D6  3364               	rrcf	??_put_cluster& (0+255),f,b
 17185  0023D8  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17186  0023DA  D7FB               	goto	u11915
 17187  0023DC  5164               	movf	??_put_cluster& (0+255),w,b
 17188  0023DE  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17189  0023E0  6E35               	movwf	move_window@sector^0,c
 17190  0023E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17191  0023E4  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17192  0023E6  6E36               	movwf	(move_window@sector+1)^0,c
 17193  0023E8  0E00               	movlw	0
 17194  0023EA  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17195  0023EC  6E37               	movwf	(move_window@sector+2)^0,c
 17196  0023EE  0E00               	movlw	0
 17197  0023F0  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17198  0023F2  6E38               	movwf	(move_window@sector+3)^0,c
 17199  0023F4  EC15  F015         	call	_move_window	;wreg free
 17200  0023F8  0900               	iorlw	0
 17201  0023FA  A4D8               	btfss	status,2,c
 17202  0023FC  D002               	goto	l10736
 17203  0023FE                     u11920:
 17204  0023FE  0E00               	movlw	0
 17205  002400  0012               	return	
 17206  002402                     l10736:
 17207                           
 17208                           ;tff.c: 214: p = &fs->win[bc % 512U];
 17209  002402  0EFF               	movlw	255
 17210  002404  0100               	movlb	0	; () banked
 17211  002406  6F64               	movwf	??_put_cluster& (0+255),b
 17212  002408  0E01               	movlw	1
 17213  00240A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17214  00240C  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17215  002410  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17216  002414  5164               	movf	??_put_cluster& (0+255),w,b
 17217  002416  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17218  002418  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17219  00241A  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17220  00241C  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17221  002420  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17222  002424  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17223  002426  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17224  002428  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17225  00242A  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17226  00242C  0E20               	movlw	32
 17227  00242E  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17228  002430  6F74               	movwf	put_cluster@p& (0+255),b
 17229  002432  0E00               	movlw	0
 17230  002434  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17231  002436  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 17235  002438  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17236  00243A  D004               	goto	l10742
 17237                           
 17238                           ; BSR set to: 0
 17239  00243C  C062  F06A         	movff	put_cluster@val,_put_cluster$1623
 17240  002440  6B6B               	clrf	(_put_cluster$1623+1)& (0+255),b
 17241  002442  D01A               	goto	l10744
 17242  002444                     l10742:
 17243                           
 17244                           ; BSR set to: 0
 17245  002444  5162               	movf	put_cluster@val& (0+255),w,b
 17246  002446  6F64               	movwf	??_put_cluster& (0+255),b
 17247  002448  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 17248  00244A  3B64               	swapf	??_put_cluster& (0+255),f,b
 17249  00244C  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 17250  00244E  0EF0               	movlw	240
 17251  002450  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 17252  002452  5164               	movf	??_put_cluster& (0+255),w,b
 17253  002454  0B0F               	andlw	15
 17254  002456  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 17255  002458  0EF0               	movlw	240
 17256  00245A  1764               	andwf	??_put_cluster& (0+255),f,b
 17257  00245C  C074  FFD9         	movff	put_cluster@p,fsr2l
 17258  002460  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17259  002464  50DF               	movf	indf2,w,c
 17260  002466  0B0F               	andlw	15
 17261  002468  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17262  00246A  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 17263  00246C  5164               	movf	??_put_cluster& (0+255),w,b
 17264  00246E  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 17265  002470  6F6A               	movwf	_put_cluster$1623& (0+255),b
 17266  002472  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17267  002474  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 17268  002476  6F6B               	movwf	(_put_cluster$1623+1)& (0+255),b
 17269  002478                     l10744:
 17270                           
 17271                           ; BSR set to: 0
 17272  002478  C074  FFD9         	movff	put_cluster@p,fsr2l
 17273  00247C  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17274  002480  C06A  FFDF         	movff	_put_cluster$1623,indf2
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;tff.c: 216: bc++;
 17278  002484  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 17279  002486  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;tff.c: 217: fs->winflag = 1;
 17283  002488  EE20 F01F          	lfsr	2,31
 17284  00248C  5176               	movf	put_cluster@fs& (0+255),w,b
 17285  00248E  26D9               	addwf	fsr2l,f,c
 17286  002490  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17287  002492  22DA               	addwfc	fsr2h,f,c
 17288  002494  0E01               	movlw	1
 17289  002496  6EDF               	movwf	indf2,c
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17293  002498  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17294  00249C  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17295  0024A0  0E09               	movlw	9
 17296  0024A2  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17297  0024A4                     u11945:
 17298  0024A4  90D8               	bcf	status,0,c
 17299  0024A6  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17300  0024A8  3364               	rrcf	??_put_cluster& (0+255),f,b
 17301  0024AA  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17302  0024AC  D7FB               	goto	u11945
 17303  0024AE  5164               	movf	??_put_cluster& (0+255),w,b
 17304  0024B0  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17305  0024B2  6E35               	movwf	move_window@sector^0,c
 17306  0024B4  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17307  0024B6  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17308  0024B8  6E36               	movwf	(move_window@sector+1)^0,c
 17309  0024BA  0E00               	movlw	0
 17310  0024BC  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17311  0024BE  6E37               	movwf	(move_window@sector+2)^0,c
 17312  0024C0  0E00               	movlw	0
 17313  0024C2  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17314  0024C4  6E38               	movwf	(move_window@sector+3)^0,c
 17315  0024C6  EC15  F015         	call	_move_window	;wreg free
 17316  0024CA  0900               	iorlw	0
 17317  0024CC  B4D8               	btfsc	status,2,c
 17318  0024CE  D797               	goto	u11920
 17319                           
 17320                           ;tff.c: 219: p = &fs->win[bc % 512U];
 17321  0024D0  0EFF               	movlw	255
 17322  0024D2  0100               	movlb	0	; () banked
 17323  0024D4  6F64               	movwf	??_put_cluster& (0+255),b
 17324  0024D6  0E01               	movlw	1
 17325  0024D8  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17326  0024DA  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17327  0024DE  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17328  0024E2  5164               	movf	??_put_cluster& (0+255),w,b
 17329  0024E4  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17330  0024E6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17331  0024E8  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17332  0024EA  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17333  0024EE  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17334  0024F2  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17335  0024F4  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17336  0024F6  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17337  0024F8  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17338  0024FA  0E20               	movlw	32
 17339  0024FC  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17340  0024FE  6F74               	movwf	put_cluster@p& (0+255),b
 17341  002500  0E00               	movlw	0
 17342  002502  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17343  002504  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17344                           
 17345                           ; BSR set to: 0
 17346                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 17347  002506  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17348  002508  D00E               	goto	l10762
 17349                           
 17350                           ; BSR set to: 0
 17351  00250A  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 17352  00250E  0E0F               	movlw	15
 17353  002510  1764               	andwf	??_put_cluster& (0+255),f,b
 17354  002512  C074  FFD9         	movff	put_cluster@p,fsr2l
 17355  002516  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17356  00251A  50DF               	movf	indf2,w,c
 17357  00251C  0BF0               	andlw	240
 17358  00251E  1164               	iorwf	??_put_cluster& (0+255),w,b
 17359  002520  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17360  002522  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17361  002524  D00C               	goto	L6
 17362  002526                     l10762:
 17363                           
 17364                           ; BSR set to: 0
 17365  002526  C062  F064         	movff	put_cluster@val,??_put_cluster
 17366  00252A  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 17367  00252E  0E04               	movlw	4
 17368  002530  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17369  002532                     u11975:
 17370  002532  90D8               	bcf	status,0,c
 17371  002534  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17372  002536  3364               	rrcf	??_put_cluster& (0+255),f,b
 17373  002538  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17374  00253A  D7FB               	goto	u11975
 17375  00253C  5164               	movf	??_put_cluster& (0+255),w,b
 17376  00253E                     L6:
 17377  00253E  6F6C               	movwf	_put_cluster$1624& (0+255),b
 17378  002540  6B6D               	clrf	(_put_cluster$1624+1)& (0+255),b
 17379                           
 17380                           ; BSR set to: 0
 17381  002542  C074  FFD9         	movff	put_cluster@p,fsr2l
 17382  002546  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17383  00254A  C06C  FFDF         	movff	_put_cluster$1624,indf2
 17384                           
 17385                           ;tff.c: 221: break;
 17386  00254E  D042               	goto	l10782
 17387  002550                     l10766:
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 17391  002550  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 17392  002552  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17393  002554  6E35               	movwf	move_window@sector^0,c
 17394  002556  0E00               	movlw	0
 17395  002558  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17396  00255A  6E36               	movwf	(move_window@sector+1)^0,c
 17397  00255C  0E00               	movlw	0
 17398  00255E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17399  002560  6E37               	movwf	(move_window@sector+2)^0,c
 17400  002562  0E00               	movlw	0
 17401  002564  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17402  002566  6E38               	movwf	(move_window@sector+3)^0,c
 17403  002568  EC15  F015         	call	_move_window	;wreg free
 17404  00256C  0900               	iorlw	0
 17405  00256E  B4D8               	btfsc	status,2,c
 17406  002570  D746               	goto	u11920
 17407                           
 17408                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 17409  002572  0EFF               	movlw	255
 17410  002574  0100               	movlb	0	; () banked
 17411  002576  6F64               	movwf	??_put_cluster& (0+255),b
 17412  002578  0E01               	movlw	1
 17413  00257A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17414  00257C  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 17415  002580  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 17416  002584  90D8               	bcf	status,0,c
 17417  002586  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 17418  002588  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 17419  00258A  5164               	movf	??_put_cluster& (0+255),w,b
 17420  00258C  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17421  00258E  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17422  002590  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17423  002592  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17424  002596  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17425  00259A  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17426  00259C  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17427  00259E  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17428  0025A0  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17429  0025A2  0E20               	movlw	32
 17430  0025A4  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17431  0025A6  6ED9               	movwf	fsr2l,c
 17432  0025A8  0E00               	movlw	0
 17433  0025AA  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17434  0025AC  6EDA               	movwf	fsr2h,c
 17435  0025AE  C062  FFDE         	movff	put_cluster@val,postinc2
 17436  0025B2  C063  FFDD         	movff	put_cluster@val+1,postdec2
 17437                           
 17438                           ;tff.c: 226: break;
 17439  0025B6  D00E               	goto	l10782
 17440  0025B8                     l10780:
 17441                           
 17442                           ; BSR set to: 0
 17443  0025B8  EE20 F01C          	lfsr	2,28
 17444  0025BC  5176               	movf	put_cluster@fs& (0+255),w,b
 17445  0025BE  26D9               	addwf	fsr2l,f,c
 17446  0025C0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17447  0025C2  22DA               	addwfc	fsr2h,f,c
 17448  0025C4  50DF               	movf	indf2,w,c
 17449                           
 17450                           ; Switch size 1, requested type "simple"
 17451                           ; Number of cases is 2, Range of values is 1 to 2
 17452                           ; switch strategies available:
 17453                           ; Name         Instructions Cycles
 17454                           ; simple_byte            7     4 (average)
 17455                           ;	Chosen strategy is simple_byte
 17456  0025C6  0A01               	xorlw	1	; case 1
 17457  0025C8  B4D8               	btfsc	status,2,c
 17458  0025CA  D6EB               	goto	l10728
 17459  0025CC  0A03               	xorlw	3	; case 2
 17460  0025CE  B4D8               	btfsc	status,2,c
 17461  0025D0  D7BF               	goto	l10766
 17462  0025D2  D715               	goto	u11920
 17463  0025D4                     l10782:
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;tff.c: 236: fs->winflag = 1;
 17467  0025D4  EE20 F01F          	lfsr	2,31
 17468  0025D8  5176               	movf	put_cluster@fs& (0+255),w,b
 17469  0025DA  26D9               	addwf	fsr2l,f,c
 17470  0025DC  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17471  0025DE  22DA               	addwfc	fsr2h,f,c
 17472  0025E0  0E01               	movlw	1
 17473  0025E2  6EDF               	movwf	indf2,c
 17474                           
 17475                           ; BSR set to: 0
 17476                           ;tff.c: 237: return TRUE;
 17477  0025E4  0E01               	movlw	1
 17478  0025E6  0012               	return		;funcret
 17479  0025E8                     __end_of_put_cluster:
 17480                           	callstack 0
 17481                           
 17482 ;; *************** function _get_cluster *****************
 17483 ;; Defined at:
 17484 ;;		line 155 in file "bibliotecas/tff.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  clust           2   73[COMRAM] unsigned short 
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;  fatsect         4   11[BANK0 ] unsigned long 
 17489 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 17490 ;;		 -> NULL(0), fs(544), 
 17491 ;;  bc              2   15[BANK0 ] unsigned short 
 17492 ;;  wc              2    9[BANK0 ] unsigned short 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2   73[COMRAM] unsigned short 
 17495 ;; Registers used:
 17496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17497 ;; Tracked objects:
 17498 ;;		On entry : 3F/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17502 ;;      Params:         2       0       0       0       0       0       0       0       0
 17503 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17504 ;;      Temps:          0       9       0       0       0       0       0       0       0
 17505 ;;      Totals:         2      19       0       0       0       0       0       0       0
 17506 ;;Total ram usage:       21 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:    8
 17509 ;; This function calls:
 17510 ;;		___wmul
 17511 ;;		_move_window
 17512 ;; This function is called by:
 17513 ;;		_remove_chain
 17514 ;;		_create_chain
 17515 ;;		_next_dir_entry
 17516 ;;		_f_lseek
 17517 ;;		_f_read
 17518 ;; This function uses a non-reentrant model
 17519 ;;
 17520                           
 17521                           	psect	text95
 17522  0025E8                     __ptext95:
 17523                           	callstack 0
 17524  0025E8                     _get_cluster:
 17525                           	callstack 13
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 17529                           
 17530                           ;incstack = 0
 17531  0025E8  C04D  F071         	movff	_FatFs,get_cluster@fs
 17532  0025EC  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 17533                           
 17534                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 17535  0025F0  504B               	movf	(get_cluster@clust+1)^0,w,c
 17536  0025F2  E104               	bnz	u11820
 17537  0025F4  0E02               	movlw	2
 17538  0025F6  5C4A               	subwf	get_cluster@clust^0,w,c
 17539  0025F8  A0D8               	btfss	status,0,c
 17540  0025FA  D105               	goto	l10720
 17541  0025FC                     u11820:
 17542                           
 17543                           ; BSR set to: 0
 17544  0025FC  EE20 F016          	lfsr	2,22
 17545  002600  5171               	movf	get_cluster@fs& (0+255),w,b
 17546  002602  26D9               	addwf	fsr2l,f,c
 17547  002604  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17548  002606  22DA               	addwfc	fsr2h,f,c
 17549  002608  50DE               	movf	postinc2,w,c
 17550  00260A  5C4A               	subwf	get_cluster@clust^0,w,c
 17551  00260C  50DE               	movf	postinc2,w,c
 17552  00260E  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 17553  002610  B0D8               	btfsc	status,0,c
 17554  002612  D0F9               	goto	l10720
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;tff.c: 165: fatsect = fs->fatbase;
 17558  002614  EE20 F008          	lfsr	2,8
 17559  002618  5171               	movf	get_cluster@fs& (0+255),w,b
 17560  00261A  26D9               	addwf	fsr2l,f,c
 17561  00261C  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17562  00261E  22DA               	addwfc	fsr2h,f,c
 17563  002620  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 17564  002624  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 17565  002628  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 17566  00262C  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 17567                           
 17568                           ;tff.c: 166: switch (fs->fs_type) {
 17569  002630  D0DD               	goto	l10718
 17570  002632                     l10684:
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 17574  002632  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 17575  002636  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 17576  00263A  0E00               	movlw	0
 17577  00263C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17578  00263E  0E03               	movlw	3
 17579  002640  6E0C               	movwf	___wmul@multiplicand^0,c
 17580  002642  EC9B  F02C         	call	___wmul	;wreg free
 17581  002646  90D8               	bcf	status,0,c
 17582  002648  300B               	rrcf	(?___wmul+1)^0,w,c
 17583  00264A  0100               	movlb	0	; () banked
 17584  00264C  6F60               	movwf	??_get_cluster& (0+255),b
 17585  00264E  300A               	rrcf	?___wmul^0,w,c
 17586  002650  6F6F               	movwf	get_cluster@bc& (0+255),b
 17587  002652  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 17591  002656  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17592  00265A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17593  00265E  0E09               	movlw	9
 17594  002660  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17595  002662                     u11845:
 17596  002662  90D8               	bcf	status,0,c
 17597  002664  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17598  002666  3360               	rrcf	??_get_cluster& (0+255),f,b
 17599  002668  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17600  00266A  D7FB               	goto	u11845
 17601  00266C  5160               	movf	??_get_cluster& (0+255),w,b
 17602  00266E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17603  002670  6E35               	movwf	move_window@sector^0,c
 17604  002672  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17605  002674  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17606  002676  6E36               	movwf	(move_window@sector+1)^0,c
 17607  002678  0E00               	movlw	0
 17608  00267A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17609  00267C  6E37               	movwf	(move_window@sector+2)^0,c
 17610  00267E  0E00               	movlw	0
 17611  002680  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17612  002682  6E38               	movwf	(move_window@sector+3)^0,c
 17613  002684  EC15  F015         	call	_move_window	;wreg free
 17614  002688  0900               	iorlw	0
 17615  00268A  B4D8               	btfsc	status,2,c
 17616  00268C  D0BC               	goto	l10720
 17617                           
 17618                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 17619  00268E  0EFF               	movlw	255
 17620  002690  0100               	movlb	0	; () banked
 17621  002692  6F60               	movwf	??_get_cluster& (0+255),b
 17622  002694  0E01               	movlw	1
 17623  002696  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17624  002698  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17625  00269C  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17626  0026A0  5160               	movf	??_get_cluster& (0+255),w,b
 17627  0026A2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17628  0026A4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17629  0026A6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17630  0026A8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17631  0026AC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17632  0026B0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17633  0026B2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17634  0026B4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17635  0026B6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17636  0026B8  0E20               	movlw	32
 17637  0026BA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17638  0026BC  6ED9               	movwf	fsr2l,c
 17639  0026BE  0E00               	movlw	0
 17640  0026C0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17641  0026C2  6EDA               	movwf	fsr2h,c
 17642  0026C4  50DF               	movf	indf2,w,c
 17643  0026C6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17644  0026C8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17645  0026CA  6F69               	movwf	get_cluster@wc& (0+255),b
 17646  0026CC  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 17647                           
 17648                           ; BSR set to: 0
 17649  0026CE  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 17650  0026D0  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 17654  0026D2  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17655  0026D6  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17656  0026DA  0E09               	movlw	9
 17657  0026DC  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17658  0026DE                     u11865:
 17659  0026DE  90D8               	bcf	status,0,c
 17660  0026E0  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17661  0026E2  3360               	rrcf	??_get_cluster& (0+255),f,b
 17662  0026E4  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17663  0026E6  D7FB               	goto	u11865
 17664  0026E8  5160               	movf	??_get_cluster& (0+255),w,b
 17665  0026EA  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17666  0026EC  6E35               	movwf	move_window@sector^0,c
 17667  0026EE  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17668  0026F0  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17669  0026F2  6E36               	movwf	(move_window@sector+1)^0,c
 17670  0026F4  0E00               	movlw	0
 17671  0026F6  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17672  0026F8  6E37               	movwf	(move_window@sector+2)^0,c
 17673  0026FA  0E00               	movlw	0
 17674  0026FC  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17675  0026FE  6E38               	movwf	(move_window@sector+3)^0,c
 17676  002700  EC15  F015         	call	_move_window	;wreg free
 17677  002704  0900               	iorlw	0
 17678  002706  B4D8               	btfsc	status,2,c
 17679  002708  D07E               	goto	l10720
 17680                           
 17681                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17682  00270A  0EFF               	movlw	255
 17683  00270C  0100               	movlb	0	; () banked
 17684  00270E  6F60               	movwf	??_get_cluster& (0+255),b
 17685  002710  0E01               	movlw	1
 17686  002712  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17687  002714  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17688  002718  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17689  00271C  5160               	movf	??_get_cluster& (0+255),w,b
 17690  00271E  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17691  002720  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17692  002722  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17693  002724  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17694  002728  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17695  00272C  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17696  00272E  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17697  002730  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17698  002732  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17699  002734  0E20               	movlw	32
 17700  002736  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17701  002738  6ED9               	movwf	fsr2l,c
 17702  00273A  0E00               	movlw	0
 17703  00273C  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17704  00273E  6EDA               	movwf	fsr2h,c
 17705  002740  50DF               	movf	indf2,w,c
 17706  002742  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17707  002744  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17708  002746  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17709  002748  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17710  00274A  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17711  00274C  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17712  00274E  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17713  002750  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17717  002752  B04A               	btfsc	get_cluster@clust^0,0,c
 17718  002754  D007               	goto	l10704
 17719                           
 17720                           ; BSR set to: 0
 17721  002756  0EFF               	movlw	255
 17722  002758  1569               	andwf	get_cluster@wc& (0+255),w,b
 17723  00275A  6E4A               	movwf	?_get_cluster^0,c
 17724  00275C  0E0F               	movlw	15
 17725  00275E  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17726  002760  6E4B               	movwf	(?_get_cluster+1)^0,c
 17727  002762  0012               	return	
 17728  002764                     l10704:
 17729                           
 17730                           ; BSR set to: 0
 17731  002764  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17732  002768  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17733  00276C  0E04               	movlw	4
 17734  00276E  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17735  002770                     u11895:
 17736  002770  90D8               	bcf	status,0,c
 17737  002772  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17738  002774  3360               	rrcf	??_get_cluster& (0+255),f,b
 17739  002776  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17740  002778  D7FB               	goto	u11895
 17741  00277A  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17742  00277E  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17743  002782  0012               	return	
 17744  002784                     l10708:
 17745                           
 17746                           ; BSR set to: 0
 17747                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17748  002784  504B               	movf	(get_cluster@clust+1)^0,w,c
 17749  002786  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17750  002788  6E35               	movwf	move_window@sector^0,c
 17751  00278A  0E00               	movlw	0
 17752  00278C  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17753  00278E  6E36               	movwf	(move_window@sector+1)^0,c
 17754  002790  0E00               	movlw	0
 17755  002792  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17756  002794  6E37               	movwf	(move_window@sector+2)^0,c
 17757  002796  0E00               	movlw	0
 17758  002798  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17759  00279A  6E38               	movwf	(move_window@sector+3)^0,c
 17760  00279C  EC15  F015         	call	_move_window	;wreg free
 17761  0027A0  0900               	iorlw	0
 17762  0027A2  B4D8               	btfsc	status,2,c
 17763  0027A4  D030               	goto	l10720
 17764                           
 17765                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17766  0027A6  0EFF               	movlw	255
 17767  0027A8  0100               	movlb	0	; () banked
 17768  0027AA  6F60               	movwf	??_get_cluster& (0+255),b
 17769  0027AC  0E01               	movlw	1
 17770  0027AE  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17771  0027B0  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17772  0027B4  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17773  0027B8  90D8               	bcf	status,0,c
 17774  0027BA  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17775  0027BC  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17776  0027BE  5160               	movf	??_get_cluster& (0+255),w,b
 17777  0027C0  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17778  0027C2  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17779  0027C4  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17780  0027C6  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17781  0027CA  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17782  0027CE  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17783  0027D0  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17784  0027D2  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17785  0027D4  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17786  0027D6  0E20               	movlw	32
 17787  0027D8  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17788  0027DA  6ED9               	movwf	fsr2l,c
 17789  0027DC  0E00               	movlw	0
 17790  0027DE  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17791  0027E0  6EDA               	movwf	fsr2h,c
 17792  0027E2  CFDE F04A          	movff	postinc2,?_get_cluster
 17793  0027E6  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17794  0027EA  0012               	return	
 17795  0027EC                     l10718:
 17796                           
 17797                           ; BSR set to: 0
 17798  0027EC  EE20 F01C          	lfsr	2,28
 17799  0027F0  5171               	movf	get_cluster@fs& (0+255),w,b
 17800  0027F2  26D9               	addwf	fsr2l,f,c
 17801  0027F4  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17802  0027F6  22DA               	addwfc	fsr2h,f,c
 17803  0027F8  50DF               	movf	indf2,w,c
 17804                           
 17805                           ; Switch size 1, requested type "simple"
 17806                           ; Number of cases is 2, Range of values is 1 to 2
 17807                           ; switch strategies available:
 17808                           ; Name         Instructions Cycles
 17809                           ; simple_byte            7     4 (average)
 17810                           ;	Chosen strategy is simple_byte
 17811  0027FA  0A01               	xorlw	1	; case 1
 17812  0027FC  B4D8               	btfsc	status,2,c
 17813  0027FE  D719               	goto	l10684
 17814  002800  0A03               	xorlw	3	; case 2
 17815  002802  B4D8               	btfsc	status,2,c
 17816  002804  D7BF               	goto	l10708
 17817  002806                     l10720:
 17818                           
 17819                           ;tff.c: 184: };tff.c: 186: return 1;
 17820  002806  0E00               	movlw	0
 17821  002808  6E4B               	movwf	(?_get_cluster+1)^0,c
 17822  00280A  0E01               	movlw	1
 17823  00280C  6E4A               	movwf	?_get_cluster^0,c
 17824  00280E  0012               	return		;funcret
 17825  002810                     __end_of_get_cluster:
 17826                           	callstack 0
 17827                           
 17828 ;; *************** function ___lldiv *****************
 17829 ;; Defined at:
 17830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  dividend        4    9[COMRAM] unsigned long 
 17833 ;;  divisor         4   13[COMRAM] unsigned long 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;  quotient        4   17[COMRAM] unsigned long 
 17836 ;;  counter         1   21[COMRAM] unsigned char 
 17837 ;; Return value:  Size  Location     Type
 17838 ;;                  4    9[COMRAM] unsigned long 
 17839 ;; Registers used:
 17840 ;;		wreg, status,2, status,0
 17841 ;; Tracked objects:
 17842 ;;		On entry : 0/0
 17843 ;;		On exit  : 0/0
 17844 ;;		Unchanged: 0/0
 17845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17846 ;;      Params:         8       0       0       0       0       0       0       0       0
 17847 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17849 ;;      Totals:        13       0       0       0       0       0       0       0       0
 17850 ;;Total ram usage:       13 bytes
 17851 ;; Hardware stack levels used:    1
 17852 ;; Hardware stack levels required when called:    2
 17853 ;; This function calls:
 17854 ;;		Nothing
 17855 ;; This function is called by:
 17856 ;;		_auto_mount
 17857 ;;		_f_lseek
 17858 ;;		_fprintf
 17859 ;;		_ultoa
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text96
 17864  0049E8                     __ptext96:
 17865                           	callstack 0
 17866  0049E8                     ___lldiv:
 17867                           	callstack 23
 17868                           
 17869                           ;incstack = 0
 17870  0049E8  0E00               	movlw	0
 17871  0049EA  6E12               	movwf	___lldiv@quotient^0,c
 17872  0049EC  0E00               	movlw	0
 17873  0049EE  6E13               	movwf	(___lldiv@quotient+1)^0,c
 17874  0049F0  0E00               	movlw	0
 17875  0049F2  6E14               	movwf	(___lldiv@quotient+2)^0,c
 17876  0049F4  0E00               	movlw	0
 17877  0049F6  6E15               	movwf	(___lldiv@quotient+3)^0,c
 17878  0049F8  500E               	movf	___lldiv@divisor^0,w,c
 17879  0049FA  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 17880  0049FC  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 17881  0049FE  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 17882  004A00  B4D8               	btfsc	status,2,c
 17883  004A02  D02A               	goto	l1774
 17884  004A04  0E01               	movlw	1
 17885  004A06  6E16               	movwf	___lldiv@counter^0,c
 17886  004A08  D006               	goto	l11628
 17887  004A0A                     l11626:
 17888  004A0A  90D8               	bcf	status,0,c
 17889  004A0C  360E               	rlcf	___lldiv@divisor^0,f,c
 17890  004A0E  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 17891  004A10  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 17892  004A12  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 17893  004A14  2A16               	incf	___lldiv@counter^0,f,c
 17894  004A16                     l11628:
 17895  004A16  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 17896  004A18  D7F8               	goto	l11626
 17897  004A1A                     u13340:
 17898  004A1A  90D8               	bcf	status,0,c
 17899  004A1C  3612               	rlcf	___lldiv@quotient^0,f,c
 17900  004A1E  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 17901  004A20  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 17902  004A22  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 17903  004A24  500E               	movf	___lldiv@divisor^0,w,c
 17904  004A26  5C0A               	subwf	___lldiv@dividend^0,w,c
 17905  004A28  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17906  004A2A  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 17907  004A2C  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17908  004A2E  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 17909  004A30  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17910  004A32  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 17911  004A34  A0D8               	btfss	status,0,c
 17912  004A36  D009               	goto	l11638
 17913  004A38  500E               	movf	___lldiv@divisor^0,w,c
 17914  004A3A  5E0A               	subwf	___lldiv@dividend^0,f,c
 17915  004A3C  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17916  004A3E  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 17917  004A40  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17918  004A42  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 17919  004A44  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17920  004A46  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 17921  004A48  8012               	bsf	___lldiv@quotient^0,0,c
 17922  004A4A                     l11638:
 17923  004A4A  90D8               	bcf	status,0,c
 17924  004A4C  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 17925  004A4E  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 17926  004A50  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 17927  004A52  320E               	rrcf	___lldiv@divisor^0,f,c
 17928  004A54  2E16               	decfsz	___lldiv@counter^0,f,c
 17929  004A56  D7E1               	goto	u13340
 17930  004A58                     l1774:
 17931  004A58  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 17932  004A5C  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 17933  004A60  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 17934  004A64  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 17935  004A68  0012               	return		;funcret
 17936  004A6A                     __end_of___lldiv:
 17937                           	callstack 0
 17938                           
 17939 ;; *************** function _f_close *****************
 17940 ;; Defined at:
 17941 ;;		line 1116 in file "bibliotecas/tff.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17944 ;;		 -> fil(28), 
 17945 ;; Auto vars:     Size  Location     Type
 17946 ;;  res             1   75[COMRAM] enum E155
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  1    wreg      enum E3231
 17949 ;; Registers used:
 17950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17951 ;; Tracked objects:
 17952 ;;		On entry : 3F/0
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17956 ;;      Params:         0       2       0       0       0       0       0       0       0
 17957 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17959 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17960 ;;Total ram usage:        3 bytes
 17961 ;; Hardware stack levels used:    1
 17962 ;; Hardware stack levels required when called:   10
 17963 ;; This function calls:
 17964 ;;		_f_sync
 17965 ;; This function is called by:
 17966 ;;		_escrita_sdcard
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970                           	psect	text97
 17971  00583E                     __ptext97:
 17972                           	callstack 0
 17973  00583E                     _f_close:
 17974                           	callstack 16
 17975                           
 17976                           ; BSR set to: 0
 17977                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17978                           
 17979                           ;incstack = 0
 17980  00583E  C069  F060         	movff	f_close@fp,f_sync@fp
 17981  005842  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17982  005846  ECA8  F01B         	call	_f_sync	;wreg free
 17983  00584A  6E4C               	movwf	f_close@res^0,c
 17984                           
 17985                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17986  00584C  504C               	movf	f_close@res^0,w,c
 17987  00584E  A4D8               	btfss	status,2,c
 17988  005850  0012               	return	
 17989  005852  0100               	movlb	0	; () banked
 17990  005854  EE20 F004          	lfsr	2,4
 17991  005858  5169               	movf	f_close@fp& (0+255),w,b
 17992  00585A  26D9               	addwf	fsr2l,f,c
 17993  00585C  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17994  00585E  22DA               	addwfc	fsr2h,f,c
 17995  005860  0E00               	movlw	0
 17996  005862  6EDE               	movwf	postinc2,c
 17997  005864  0E00               	movlw	0
 17998  005866  6EDD               	movwf	postdec2,c
 17999  005868  0012               	return		;funcret
 18000  00586A                     __end_of_f_close:
 18001                           	callstack 0
 18002                           
 18003 ;; *************** function _f_sync *****************
 18004 ;; Defined at:
 18005 ;;		line 1077 in file "bibliotecas/tff.c"
 18006 ;; Parameters:    Size  Location     Type
 18007 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 18008 ;;		 -> fil(28), 
 18009 ;; Auto vars:     Size  Location     Type
 18010 ;;  tim             4    2[BANK0 ] unsigned long 
 18011 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 18012 ;;		 -> NULL(0), fs(544), 
 18013 ;;  res             1    6[BANK0 ] enum E155
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  1    wreg      enum E155
 18016 ;; Registers used:
 18017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18018 ;; Tracked objects:
 18019 ;;		On entry : 3F/0
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18023 ;;      Params:         0       2       0       0       0       0       0       0       0
 18024 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18025 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18026 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18027 ;;Total ram usage:        9 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; Hardware stack levels required when called:    9
 18030 ;; This function calls:
 18031 ;;		_get_fattime
 18032 ;;		_move_window
 18033 ;;		_sync
 18034 ;;		_validate
 18035 ;; This function is called by:
 18036 ;;		_f_close
 18037 ;; This function uses a non-reentrant model
 18038 ;;
 18039                           
 18040                           	psect	text98
 18041  003750                     __ptext98:
 18042                           	callstack 0
 18043  003750                     _f_sync:
 18044                           	callstack 16
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 18048                           
 18049                           ;incstack = 0
 18050  003750  EE20 F004          	lfsr	2,4
 18051  003754  5160               	movf	f_sync@fp& (0+255),w,b
 18052  003756  26D9               	addwf	fsr2l,f,c
 18053  003758  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18054  00375A  22DA               	addwfc	fsr2h,f,c
 18055  00375C  CFDE F010          	movff	postinc2,validate@fs
 18056  003760  CFDD F011          	movff	postdec2,validate@fs+1
 18057  003764  C060  FFD9         	movff	f_sync@fp,fsr2l
 18058  003768  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 18059  00376C  CFDE F012          	movff	postinc2,validate@id
 18060  003770  CFDD F013          	movff	postdec2,validate@id+1
 18061  003774  ECCC  F029         	call	_validate	;wreg free
 18062  003778  0100               	movlb	0	; () banked
 18063  00377A  6F66               	movwf	f_sync@res& (0+255),b
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;tff.c: 1087: if (res == FR_OK) {
 18067  00377C  5166               	movf	f_sync@res& (0+255),w,b
 18068  00377E  A4D8               	btfss	status,2,c
 18069  003780  D079               	goto	l12070
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;tff.c: 1088: if (fp->flag & 0x20) {
 18073  003782  EE20 F002          	lfsr	2,2
 18074  003786  5160               	movf	f_sync@fp& (0+255),w,b
 18075  003788  26D9               	addwf	fsr2l,f,c
 18076  00378A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18077  00378C  22DA               	addwfc	fsr2h,f,c
 18078  00378E  AADF               	btfss	indf2,5,c
 18079  003790  D071               	goto	l12070
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 18083  003792  EE20 F016          	lfsr	2,22
 18084  003796  5160               	movf	f_sync@fp& (0+255),w,b
 18085  003798  26D9               	addwf	fsr2l,f,c
 18086  00379A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18087  00379C  22DA               	addwfc	fsr2h,f,c
 18088  00379E  CFDE F035          	movff	postinc2,move_window@sector
 18089  0037A2  CFDE F036          	movff	postinc2,move_window@sector+1
 18090  0037A6  CFDE F037          	movff	postinc2,move_window@sector+2
 18091  0037AA  CFDE F038          	movff	postinc2,move_window@sector+3
 18092  0037AE  EC15  F015         	call	_move_window	;wreg free
 18093  0037B2  0900               	iorlw	0
 18094  0037B4  A4D8               	btfss	status,2,c
 18095  0037B6  D002               	goto	l12056
 18096                           
 18097                           ;tff.c: 1091: return FR_RW_ERROR;
 18098  0037B8  0E08               	movlw	8
 18099  0037BA  0012               	return	
 18100  0037BC                     l12056:
 18101                           
 18102                           ;tff.c: 1092: dir = fp->dir_ptr;
 18103  0037BC  0100               	movlb	0	; () banked
 18104  0037BE  EE20 F01A          	lfsr	2,26
 18105  0037C2  5160               	movf	f_sync@fp& (0+255),w,b
 18106  0037C4  26D9               	addwf	fsr2l,f,c
 18107  0037C6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18108  0037C8  22DA               	addwfc	fsr2h,f,c
 18109  0037CA  CFDE F067          	movff	postinc2,f_sync@dir
 18110  0037CE  CFDD F068          	movff	postdec2,f_sync@dir+1
 18111                           
 18112                           ;tff.c: 1093: dir[11] |= 0x20;
 18113  0037D2  EE20 F00B          	lfsr	2,11
 18114  0037D6  5167               	movf	f_sync@dir& (0+255),w,b
 18115  0037D8  26D9               	addwf	fsr2l,f,c
 18116  0037DA  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18117  0037DC  22DA               	addwfc	fsr2h,f,c
 18118  0037DE  0E00               	movlw	0
 18119  0037E0  8ADB               	bsf	plusw2,5,c
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 18123  0037E2  EE20 F00A          	lfsr	2,10
 18124  0037E6  5160               	movf	f_sync@fp& (0+255),w,b
 18125  0037E8  26D9               	addwf	fsr2l,f,c
 18126  0037EA  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18127  0037EC  22DA               	addwfc	fsr2h,f,c
 18128  0037EE  EE10 F01C          	lfsr	1,28
 18129  0037F2  5167               	movf	f_sync@dir& (0+255),w,b
 18130  0037F4  26E1               	addwf	fsr1l,f,c
 18131  0037F6  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18132  0037F8  22E2               	addwfc	fsr1h,f,c
 18133  0037FA  CFDE FFE6          	movff	postinc2,postinc1
 18134  0037FE  CFDE FFE6          	movff	postinc2,postinc1
 18135  003802  CFDE FFE6          	movff	postinc2,postinc1
 18136  003806  CFDE FFE6          	movff	postinc2,postinc1
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 18140  00380A  EE20 F00E          	lfsr	2,14
 18141  00380E  5160               	movf	f_sync@fp& (0+255),w,b
 18142  003810  26D9               	addwf	fsr2l,f,c
 18143  003812  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18144  003814  22DA               	addwfc	fsr2h,f,c
 18145  003816  EE10 F01A          	lfsr	1,26
 18146  00381A  5167               	movf	f_sync@dir& (0+255),w,b
 18147  00381C  26E1               	addwf	fsr1l,f,c
 18148  00381E  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18149  003820  22E2               	addwfc	fsr1h,f,c
 18150  003822  CFDE FFE6          	movff	postinc2,postinc1
 18151  003826  CFDD FFE5          	movff	postdec2,postdec1
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;tff.c: 1099: tim = get_fattime();
 18155  00382A  EC58  F01A         	call	_get_fattime	;wreg free
 18156  00382E  C00E  F062         	movff	?_get_fattime,f_sync@tim
 18157  003832  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 18158  003836  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 18159  00383A  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 18160                           
 18161                           ; BSR set to: 1
 18162                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 18163  00383E  0100               	movlb	0	; () banked
 18164  003840  EE20 F016          	lfsr	2,22
 18165  003844  5167               	movf	f_sync@dir& (0+255),w,b
 18166  003846  26D9               	addwf	fsr2l,f,c
 18167  003848  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18168  00384A  22DA               	addwfc	fsr2h,f,c
 18169  00384C  C062  FFDE         	movff	f_sync@tim,postinc2
 18170  003850  C063  FFDE         	movff	f_sync@tim+1,postinc2
 18171  003854  C064  FFDE         	movff	f_sync@tim+2,postinc2
 18172  003858  C065  FFDE         	movff	f_sync@tim+3,postinc2
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 18176  00385C  EE20 F002          	lfsr	2,2
 18177  003860  5160               	movf	f_sync@fp& (0+255),w,b
 18178  003862  26D9               	addwf	fsr2l,f,c
 18179  003864  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18180  003866  22DA               	addwfc	fsr2h,f,c
 18181  003868  0EDF               	movlw	223
 18182  00386A  16DF               	andwf	indf2,f,c
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;tff.c: 1102: res = sync();
 18186  00386C  ECE9  F028         	call	_sync	;wreg free
 18187  003870  0100               	movlb	0	; () banked
 18188  003872  6F66               	movwf	f_sync@res& (0+255),b
 18189  003874                     l12070:
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 18193  003874  5166               	movf	f_sync@res& (0+255),w,b
 18194  003876  0012               	return		;funcret
 18195  003878                     __end_of_f_sync:
 18196                           	callstack 0
 18197                           
 18198 ;; *************** function _validate *****************
 18199 ;; Defined at:
 18200 ;;		line 767 in file "bibliotecas/tff.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 18203 ;;		 -> NULL(0), fs(544), 
 18204 ;;  id              2   17[COMRAM] unsigned short 
 18205 ;; Auto vars:     Size  Location     Type
 18206 ;;		None
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  1    wreg      enum E155
 18209 ;; Registers used:
 18210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18211 ;; Tracked objects:
 18212 ;;		On entry : 3F/0
 18213 ;;		On exit  : 0/0
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18216 ;;      Params:         4       0       0       0       0       0       0       0       0
 18217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18218 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18219 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18220 ;;Total ram usage:        6 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:    4
 18223 ;; This function calls:
 18224 ;;		_disk_status
 18225 ;; This function is called by:
 18226 ;;		_f_write
 18227 ;;		_f_sync
 18228 ;;		_f_lseek
 18229 ;;		_f_read
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text99
 18234  005398                     __ptext99:
 18235                           	callstack 0
 18236  005398                     _validate:
 18237                           	callstack 18
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 18241                           
 18242                           ;incstack = 0
 18243  005398  5010               	movf	validate@fs^0,w,c
 18244  00539A  1011               	iorwf	(validate@fs+1)^0,w,c
 18245  00539C  B4D8               	btfsc	status,2,c
 18246  00539E  D014               	goto	u12220
 18247                           
 18248                           ; BSR set to: 0
 18249  0053A0  EE20 F01C          	lfsr	2,28
 18250  0053A4  5010               	movf	validate@fs^0,w,c
 18251  0053A6  26D9               	addwf	fsr2l,f,c
 18252  0053A8  5011               	movf	(validate@fs+1)^0,w,c
 18253  0053AA  22DA               	addwfc	fsr2h,f,c
 18254  0053AC  50DF               	movf	indf2,w,c
 18255  0053AE  B4D8               	btfsc	status,2,c
 18256  0053B0  D00B               	goto	u12220
 18257                           
 18258                           ; BSR set to: 0
 18259  0053B2  C010  FFD9         	movff	validate@fs,fsr2l
 18260  0053B6  C011  FFDA         	movff	validate@fs+1,fsr2h
 18261  0053BA  5012               	movf	validate@id^0,w,c
 18262  0053BC  18DE               	xorwf	postinc2,w,c
 18263  0053BE  E104               	bnz	u12220
 18264  0053C0  5013               	movf	(validate@id+1)^0,w,c
 18265  0053C2  18DE               	xorwf	postinc2,w,c
 18266  0053C4  B4D8               	btfsc	status,2,c
 18267  0053C6  D002               	goto	l10924
 18268  0053C8                     u12220:
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;tff.c: 773: return FR_INVALID_OBJECT;
 18272  0053C8  0E0C               	movlw	12
 18273  0053CA  0012               	return	
 18274  0053CC                     l10924:
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;tff.c: 774: if (disk_status(0) & 0x01)
 18278  0053CC  0E00               	movlw	0
 18279  0053CE  ECAC  F02B         	call	_disk_status
 18280  0053D2  6E14               	movwf	??_validate^0,c
 18281  0053D4  A014               	btfss	??_validate^0,0,c
 18282  0053D6  D002               	goto	l10930
 18283                           
 18284                           ;tff.c: 775: return FR_NOT_READY;
 18285  0053D8  0E01               	movlw	1
 18286  0053DA  0012               	return	
 18287  0053DC                     l10930:
 18288                           
 18289                           ;tff.c: 777: return FR_OK;
 18290  0053DC  0E00               	movlw	0
 18291  0053DE  0012               	return		;funcret
 18292  0053E0                     __end_of_validate:
 18293                           	callstack 0
 18294                           
 18295 ;; *************** function _disk_status *****************
 18296 ;; Defined at:
 18297 ;;		line 27 in file "bibliotecas/diskio.c"
 18298 ;; Parameters:    Size  Location     Type
 18299 ;;  pdrv            1    wreg     unsigned char 
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;  pdrv            1   13[COMRAM] unsigned char 
 18302 ;;  result          2    0        int 
 18303 ;;  stat            1   14[COMRAM] unsigned char 
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  1    wreg      unsigned char 
 18306 ;; Registers used:
 18307 ;;		wreg, status,2, status,0, cstack
 18308 ;; Tracked objects:
 18309 ;;		On entry : 3F/0
 18310 ;;		On exit  : 0/0
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18313 ;;      Params:         0       0       0       0       0       0       0       0       0
 18314 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18316 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18317 ;;Total ram usage:        4 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:    3
 18320 ;; This function calls:
 18321 ;;		_sdc_disk_status
 18322 ;; This function is called by:
 18323 ;;		_auto_mount
 18324 ;;		_validate
 18325 ;; This function uses a non-reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text100
 18329  005758                     __ptext100:
 18330                           	callstack 0
 18331  005758                     _disk_status:
 18332                           	callstack 18
 18333                           
 18334                           ;incstack = 0
 18335                           ;disk_status@pdrv stored from wreg
 18336  005758  6E0E               	movwf	disk_status@pdrv^0,c
 18337                           
 18338                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 18339  00575A  D00A               	goto	l10634
 18340  00575C                     l10616:
 18341                           
 18342                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 18343  00575C  500E               	movf	disk_status@pdrv^0,w,c
 18344  00575E  ECD3  F02D         	call	_sdc_disk_status
 18345  005762  6E0F               	movwf	disk_status@stat^0,c
 18346  005764                     l10618:
 18347                           
 18348                           ;diskio.c: 39: return stat;
 18349  005764  500F               	movf	disk_status@stat^0,w,c
 18350  005766  0012               	return	
 18351  005768                     l10622:
 18352  005768  500E               	movf	disk_status@pdrv^0,w,c
 18353  00576A  ECD3  F02D         	call	_sdc_disk_status
 18354  00576E  D7FA               	goto	l10618
 18355  005770                     l10634:
 18356  005770  500E               	movf	disk_status@pdrv^0,w,c
 18357                           
 18358                           ; Switch size 1, requested type "simple"
 18359                           ; Number of cases is 3, Range of values is 0 to 2
 18360                           ; switch strategies available:
 18361                           ; Name         Instructions Cycles
 18362                           ; simple_byte           10     6 (average)
 18363                           ;	Chosen strategy is simple_byte
 18364  005772  0A00               	xorlw	0	; case 0
 18365  005774  B4D8               	btfsc	status,2,c
 18366  005776  D7F2               	goto	l10616
 18367  005778  0A01               	xorlw	1	; case 1
 18368  00577A  B4D8               	btfsc	status,2,c
 18369  00577C  D7F5               	goto	l10622
 18370  00577E  0A03               	xorlw	3	; case 2
 18371  005780  B4D8               	btfsc	status,2,c
 18372  005782  D7F0               	goto	l10618
 18373                           
 18374                           ;diskio.c: 50: return 0x01;
 18375  005784  0E01               	movlw	1
 18376  005786  0012               	return		;funcret
 18377  005788                     __end_of_disk_status:
 18378                           	callstack 0
 18379                           
 18380 ;; *************** function _sdc_disk_status *****************
 18381 ;; Defined at:
 18382 ;;		line 588 in file "bibliotecas/diskio.c"
 18383 ;; Parameters:    Size  Location     Type
 18384 ;;  pdrv            1    wreg     unsigned char 
 18385 ;; Auto vars:     Size  Location     Type
 18386 ;;  pdrv            1   10[COMRAM] unsigned char 
 18387 ;;  stat            1    0        unsigned char 
 18388 ;;  cont            1    0        unsigned char 
 18389 ;;  buff            1    0        unsigned char 
 18390 ;; Return value:  Size  Location     Type
 18391 ;;                  1    wreg      unsigned char 
 18392 ;; Registers used:
 18393 ;;		wreg, status,2
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0
 18400 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18402 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18403 ;;Total ram usage:        2 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:    2
 18406 ;; This function calls:
 18407 ;;		Nothing
 18408 ;; This function is called by:
 18409 ;;		_disk_status
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text101
 18414  005BA6                     __ptext101:
 18415                           	callstack 0
 18416  005BA6                     _sdc_disk_status:
 18417                           	callstack 18
 18418                           
 18419                           ;incstack = 0
 18420                           ;sdc_disk_status@pdrv stored from wreg
 18421  005BA6  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 18422                           
 18423                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 18424  005BA8  500B               	movf	sdc_disk_status@pdrv^0,w,c
 18425  005BAA  B4D8               	btfsc	status,2,c
 18426  005BAC  D002               	goto	l10492
 18427  005BAE  0E01               	movlw	1
 18428  005BB0  0012               	return	
 18429  005BB2                     l10492:
 18430                           
 18431                           ;diskio.c: 595: return FR_OK;
 18432  005BB2  0E00               	movlw	0
 18433  005BB4  0012               	return		;funcret
 18434  005BB6                     __end_of_sdc_disk_status:
 18435                           	callstack 0
 18436                           
 18437 ;; *************** function _sync *****************
 18438 ;; Defined at:
 18439 ;;		line 119 in file "bibliotecas/tff.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;		None
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 18444 ;;		 -> NULL(0), fs(544), 
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      enum E155
 18447 ;; Registers used:
 18448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18449 ;; Tracked objects:
 18450 ;;		On entry : 3F/0
 18451 ;;		On exit  : 0/0
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18454 ;;      Params:         0       0       0       0       0       0       0       0       0
 18455 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18456 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18457 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18458 ;;Total ram usage:        2 bytes
 18459 ;; Hardware stack levels used:    1
 18460 ;; Hardware stack levels required when called:    8
 18461 ;; This function calls:
 18462 ;;		_disk_ioctl
 18463 ;;		_move_window
 18464 ;; This function is called by:
 18465 ;;		_f_sync
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text102
 18470  0051D2                     __ptext102:
 18471                           	callstack 0
 18472  0051D2                     _sync:
 18473                           	callstack 16
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;tff.c: 121: FATFS *fs = FatFs;
 18477                           
 18478                           ;incstack = 0
 18479  0051D2  C04D  F04A         	movff	_FatFs,sync@fs
 18480  0051D6  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;tff.c: 124: fs->winflag = 1;
 18484  0051DA  EE20 F01F          	lfsr	2,31
 18485  0051DE  504A               	movf	sync@fs^0,w,c
 18486  0051E0  26D9               	addwf	fsr2l,f,c
 18487  0051E2  504B               	movf	(sync@fs+1)^0,w,c
 18488  0051E4  22DA               	addwfc	fsr2h,f,c
 18489  0051E6  0E01               	movlw	1
 18490  0051E8  6EDF               	movwf	indf2,c
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 18494  0051EA  0E00               	movlw	0
 18495  0051EC  6E35               	movwf	move_window@sector^0,c
 18496  0051EE  0E00               	movlw	0
 18497  0051F0  6E36               	movwf	(move_window@sector+1)^0,c
 18498  0051F2  0E00               	movlw	0
 18499  0051F4  6E37               	movwf	(move_window@sector+2)^0,c
 18500  0051F6  0E00               	movlw	0
 18501  0051F8  6E38               	movwf	(move_window@sector+3)^0,c
 18502  0051FA  EC15  F015         	call	_move_window	;wreg free
 18503  0051FE  0900               	iorlw	0
 18504  005200  A4D8               	btfss	status,2,c
 18505  005202  D002               	goto	l11366
 18506  005204                     u12850:
 18507  005204  0E08               	movlw	8
 18508  005206  0012               	return	
 18509  005208                     l11366:
 18510                           
 18511                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 18512  005208  0E00               	movlw	0
 18513  00520A  6E0A               	movwf	disk_ioctl@cmd^0,c
 18514  00520C  0E00               	movlw	0
 18515  00520E  6E0B               	movwf	disk_ioctl@buff^0,c
 18516  005210  0E00               	movlw	0
 18517  005212  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 18518  005214  0E00               	movlw	0
 18519  005216  EC57  F02D         	call	_disk_ioctl
 18520  00521A  0900               	iorlw	0
 18521  00521C  A4D8               	btfss	status,2,c
 18522  00521E  D7F2               	goto	u12850
 18523                           
 18524                           ;tff.c: 143: return FR_OK;
 18525  005220  0E00               	movlw	0
 18526  005222  0012               	return		;funcret
 18527  005224                     __end_of_sync:
 18528                           	callstack 0
 18529                           
 18530 ;; *************** function _move_window *****************
 18531 ;; Defined at:
 18532 ;;		line 77 in file "bibliotecas/tff.c"
 18533 ;; Parameters:    Size  Location     Type
 18534 ;;  sector          4   52[COMRAM] unsigned long 
 18535 ;; Auto vars:     Size  Location     Type
 18536 ;;  n               1   66[COMRAM] unsigned char 
 18537 ;;  wsect           4   67[COMRAM] unsigned long 
 18538 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 18539 ;;		 -> NULL(0), fs(544), 
 18540 ;; Return value:  Size  Location     Type
 18541 ;;                  1    wreg      enum E105
 18542 ;; Registers used:
 18543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18544 ;; Tracked objects:
 18545 ;;		On entry : 0/0
 18546 ;;		On exit  : 0/0
 18547 ;;		Unchanged: 0/0
 18548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18549 ;;      Params:         4       0       0       0       0       0       0       0       0
 18550 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18551 ;;      Temps:         10       0       0       0       0       0       0       0       0
 18552 ;;      Totals:        21       0       0       0       0       0       0       0       0
 18553 ;;Total ram usage:       21 bytes
 18554 ;; Hardware stack levels used:    1
 18555 ;; Hardware stack levels required when called:    7
 18556 ;; This function calls:
 18557 ;;		_disk_read
 18558 ;;		_disk_write
 18559 ;; This function is called by:
 18560 ;;		_sync
 18561 ;;		_get_cluster
 18562 ;;		_put_cluster
 18563 ;;		_trace_path
 18564 ;;		_reserve_direntry
 18565 ;;		_f_open
 18566 ;;		_f_write
 18567 ;;		_f_sync
 18568 ;;		_f_read
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           	psect	text103
 18573  002A2A                     __ptext103:
 18574                           	callstack 0
 18575  002A2A                     _move_window:
 18576                           	callstack 15
 18577                           
 18578                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 18579                           
 18580                           ;incstack = 0
 18581  002A2A  C04D  F048         	movff	_FatFs,move_window@fs
 18582  002A2E  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 18583                           
 18584                           ;tff.c: 85: wsect = fs->winsect;
 18585  002A32  EE20 F004          	lfsr	2,4
 18586  002A36  5048               	movf	move_window@fs^0,w,c
 18587  002A38  26D9               	addwf	fsr2l,f,c
 18588  002A3A  5049               	movf	(move_window@fs+1)^0,w,c
 18589  002A3C  22DA               	addwfc	fsr2h,f,c
 18590  002A3E  CFDE F044          	movff	postinc2,move_window@wsect
 18591  002A42  CFDE F045          	movff	postinc2,move_window@wsect+1
 18592  002A46  CFDE F046          	movff	postinc2,move_window@wsect+2
 18593  002A4A  CFDE F047          	movff	postinc2,move_window@wsect+3
 18594                           
 18595                           ;tff.c: 86: if (wsect != sector) {
 18596  002A4E  5035               	movf	move_window@sector^0,w,c
 18597  002A50  1844               	xorwf	move_window@wsect^0,w,c
 18598  002A52  E10A               	bnz	u11710
 18599  002A54  5036               	movf	(move_window@sector+1)^0,w,c
 18600  002A56  1845               	xorwf	(move_window@wsect+1)^0,w,c
 18601  002A58  E107               	bnz	u11710
 18602  002A5A  5037               	movf	(move_window@sector+2)^0,w,c
 18603  002A5C  1846               	xorwf	(move_window@wsect+2)^0,w,c
 18604  002A5E  E104               	bnz	u11710
 18605  002A60  5038               	movf	(move_window@sector+3)^0,w,c
 18606  002A62  1847               	xorwf	(move_window@wsect+3)^0,w,c
 18607  002A64  B4D8               	btfsc	status,2,c
 18608  002A66  D0B4               	goto	l10604
 18609  002A68                     u11710:
 18610                           
 18611                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 18612  002A68  EE20 F01F          	lfsr	2,31
 18613  002A6C  5048               	movf	move_window@fs^0,w,c
 18614  002A6E  26D9               	addwf	fsr2l,f,c
 18615  002A70  5049               	movf	(move_window@fs+1)^0,w,c
 18616  002A72  22DA               	addwfc	fsr2h,f,c
 18617  002A74  50DF               	movf	indf2,w,c
 18618  002A76  B4D8               	btfsc	status,2,c
 18619  002A78  D081               	goto	l10594
 18620                           
 18621                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 18622  002A7A  0E20               	movlw	32
 18623  002A7C  2448               	addwf	move_window@fs^0,w,c
 18624  002A7E  6E29               	movwf	disk_write@buff^0,c
 18625  002A80  0E00               	movlw	0
 18626  002A82  2049               	addwfc	(move_window@fs+1)^0,w,c
 18627  002A84  6E2A               	movwf	(disk_write@buff+1)^0,c
 18628  002A86  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18629  002A8A  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18630  002A8E  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18631  002A92  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18632  002A96  0E01               	movlw	1
 18633  002A98  6E2F               	movwf	disk_write@count^0,c
 18634  002A9A  0E00               	movlw	0
 18635  002A9C  EC3A  F029         	call	_disk_write
 18636  002AA0  0900               	iorlw	0
 18637  002AA2  B4D8               	btfsc	status,2,c
 18638  002AA4  D002               	goto	l10578
 18639  002AA6                     u11730:
 18640                           
 18641                           ;tff.c: 91: return FALSE;
 18642  002AA6  0E00               	movlw	0
 18643  002AA8  0012               	return	
 18644  002AAA                     l10578:
 18645                           
 18646                           ;tff.c: 92: fs->winflag = 0;
 18647  002AAA  EE20 F01F          	lfsr	2,31
 18648  002AAE  5048               	movf	move_window@fs^0,w,c
 18649  002AB0  26D9               	addwf	fsr2l,f,c
 18650  002AB2  5049               	movf	(move_window@fs+1)^0,w,c
 18651  002AB4  22DA               	addwfc	fsr2h,f,c
 18652  002AB6  0E00               	movlw	0
 18653  002AB8  6EDF               	movwf	indf2,c
 18654                           
 18655                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 18656  002ABA  EE20 F008          	lfsr	2,8
 18657  002ABE  5048               	movf	move_window@fs^0,w,c
 18658  002AC0  26D9               	addwf	fsr2l,f,c
 18659  002AC2  5049               	movf	(move_window@fs+1)^0,w,c
 18660  002AC4  22DA               	addwfc	fsr2h,f,c
 18661  002AC6  CFDE F039          	movff	postinc2,??_move_window
 18662  002ACA  CFDE F03A          	movff	postinc2,??_move_window+1
 18663  002ACE  CFDE F03B          	movff	postinc2,??_move_window+2
 18664  002AD2  CFDE F03C          	movff	postinc2,??_move_window+3
 18665  002AD6  EE20 F014          	lfsr	2,20
 18666  002ADA  5048               	movf	move_window@fs^0,w,c
 18667  002ADC  26D9               	addwf	fsr2l,f,c
 18668  002ADE  5049               	movf	(move_window@fs+1)^0,w,c
 18669  002AE0  22DA               	addwfc	fsr2h,f,c
 18670  002AE2  CFDE F03D          	movff	postinc2,??_move_window+4
 18671  002AE6  CFDD F03E          	movff	postdec2,??_move_window+5
 18672  002AEA  503D               	movf	(??_move_window+4)^0,w,c
 18673  002AEC  2439               	addwf	??_move_window^0,w,c
 18674  002AEE  6E3F               	movwf	(??_move_window+6)^0,c
 18675  002AF0  503E               	movf	(??_move_window+5)^0,w,c
 18676  002AF2  203A               	addwfc	(??_move_window+1)^0,w,c
 18677  002AF4  6E40               	movwf	(??_move_window+7)^0,c
 18678  002AF6  0E00               	movlw	0
 18679  002AF8  203B               	addwfc	(??_move_window+2)^0,w,c
 18680  002AFA  6E41               	movwf	(??_move_window+8)^0,c
 18681  002AFC  0E00               	movlw	0
 18682  002AFE  203C               	addwfc	(??_move_window+3)^0,w,c
 18683  002B00  6E42               	movwf	(??_move_window+9)^0,c
 18684  002B02  503F               	movf	(??_move_window+6)^0,w,c
 18685  002B04  5C44               	subwf	move_window@wsect^0,w,c
 18686  002B06  5040               	movf	(??_move_window+7)^0,w,c
 18687  002B08  5845               	subwfb	(move_window@wsect+1)^0,w,c
 18688  002B0A  5041               	movf	(??_move_window+8)^0,w,c
 18689  002B0C  5846               	subwfb	(move_window@wsect+2)^0,w,c
 18690  002B0E  5042               	movf	(??_move_window+9)^0,w,c
 18691  002B10  5847               	subwfb	(move_window@wsect+3)^0,w,c
 18692  002B12  B0D8               	btfsc	status,0,c
 18693  002B14  D033               	goto	l10594
 18694                           
 18695                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 18696  002B16  EE20 F01E          	lfsr	2,30
 18697  002B1A  5048               	movf	move_window@fs^0,w,c
 18698  002B1C  26D9               	addwf	fsr2l,f,c
 18699  002B1E  5049               	movf	(move_window@fs+1)^0,w,c
 18700  002B20  22DA               	addwfc	fsr2h,f,c
 18701  002B22  50DF               	movf	indf2,w,c
 18702  002B24  6E43               	movwf	move_window@n^0,c
 18703  002B26                     l10582:
 18704  002B26  0E02               	movlw	2
 18705  002B28  6043               	cpfslt	move_window@n^0,c
 18706  002B2A  D001               	goto	l10586
 18707  002B2C  D027               	goto	l10594
 18708  002B2E                     l10586:
 18709                           
 18710                           ;tff.c: 95: wsect += fs->sects_fat;
 18711  002B2E  EE20 F014          	lfsr	2,20
 18712  002B32  5048               	movf	move_window@fs^0,w,c
 18713  002B34  26D9               	addwf	fsr2l,f,c
 18714  002B36  5049               	movf	(move_window@fs+1)^0,w,c
 18715  002B38  22DA               	addwfc	fsr2h,f,c
 18716  002B3A  CFDE F039          	movff	postinc2,??_move_window
 18717  002B3E  CFDD F03A          	movff	postdec2,??_move_window+1
 18718  002B42  5039               	movf	??_move_window^0,w,c
 18719  002B44  2644               	addwf	move_window@wsect^0,f,c
 18720  002B46  503A               	movf	(??_move_window+1)^0,w,c
 18721  002B48  2245               	addwfc	(move_window@wsect+1)^0,f,c
 18722  002B4A  0E00               	movlw	0
 18723  002B4C  2246               	addwfc	(move_window@wsect+2)^0,f,c
 18724  002B4E  0E00               	movlw	0
 18725  002B50  2247               	addwfc	(move_window@wsect+3)^0,f,c
 18726                           
 18727                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 18728  002B52  0E20               	movlw	32
 18729  002B54  2448               	addwf	move_window@fs^0,w,c
 18730  002B56  6E29               	movwf	disk_write@buff^0,c
 18731  002B58  0E00               	movlw	0
 18732  002B5A  2049               	addwfc	(move_window@fs+1)^0,w,c
 18733  002B5C  6E2A               	movwf	(disk_write@buff+1)^0,c
 18734  002B5E  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18735  002B62  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18736  002B66  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18737  002B6A  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18738  002B6E  0E01               	movlw	1
 18739  002B70  6E2F               	movwf	disk_write@count^0,c
 18740  002B72  0E00               	movlw	0
 18741  002B74  EC3A  F029         	call	_disk_write
 18742  002B78  0643               	decf	move_window@n^0,f,c
 18743  002B7A  D7D5               	goto	l10582
 18744  002B7C                     l10594:
 18745                           
 18746                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 18747  002B7C  5035               	movf	move_window@sector^0,w,c
 18748  002B7E  1036               	iorwf	(move_window@sector+1)^0,w,c
 18749  002B80  1037               	iorwf	(move_window@sector+2)^0,w,c
 18750  002B82  1038               	iorwf	(move_window@sector+3)^0,w,c
 18751  002B84  B4D8               	btfsc	status,2,c
 18752  002B86  D024               	goto	l10604
 18753                           
 18754                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 18755  002B88  0E20               	movlw	32
 18756  002B8A  2448               	addwf	move_window@fs^0,w,c
 18757  002B8C  6E29               	movwf	disk_read@buff^0,c
 18758  002B8E  0E00               	movlw	0
 18759  002B90  2049               	addwfc	(move_window@fs+1)^0,w,c
 18760  002B92  6E2A               	movwf	(disk_read@buff+1)^0,c
 18761  002B94  C035  F02B         	movff	move_window@sector,disk_read@sector
 18762  002B98  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 18763  002B9C  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 18764  002BA0  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 18765  002BA4  0E01               	movlw	1
 18766  002BA6  6E2F               	movwf	disk_read@count^0,c
 18767  002BA8  0E00               	movlw	0
 18768  002BAA  EC25  F026         	call	_disk_read
 18769  002BAE  0900               	iorlw	0
 18770  002BB0  A4D8               	btfss	status,2,c
 18771  002BB2  D779               	goto	u11730
 18772                           
 18773                           ;tff.c: 104: fs->winsect = sector;
 18774  002BB4  EE20 F004          	lfsr	2,4
 18775  002BB8  5048               	movf	move_window@fs^0,w,c
 18776  002BBA  26D9               	addwf	fsr2l,f,c
 18777  002BBC  5049               	movf	(move_window@fs+1)^0,w,c
 18778  002BBE  22DA               	addwfc	fsr2h,f,c
 18779  002BC0  C035  FFDE         	movff	move_window@sector,postinc2
 18780  002BC4  C036  FFDE         	movff	move_window@sector+1,postinc2
 18781  002BC8  C037  FFDE         	movff	move_window@sector+2,postinc2
 18782  002BCC  C038  FFDE         	movff	move_window@sector+3,postinc2
 18783  002BD0                     l10604:
 18784                           
 18785                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18786  002BD0  0E01               	movlw	1
 18787  002BD2  0012               	return		;funcret
 18788  002BD4                     __end_of_move_window:
 18789                           	callstack 0
 18790                           
 18791 ;; *************** function _disk_write *****************
 18792 ;; Defined at:
 18793 ;;		line 150 in file "bibliotecas/diskio.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  pdrv            1    wreg     unsigned char 
 18796 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18797 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18798 ;;  sector          4   42[COMRAM] unsigned long 
 18799 ;;  count           1   46[COMRAM] unsigned char 
 18800 ;; Auto vars:     Size  Location     Type
 18801 ;;  pdrv            1   48[COMRAM] unsigned char 
 18802 ;;  result          2   49[COMRAM] int 
 18803 ;;  res             1   51[COMRAM] enum E25
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      enum E25
 18806 ;; Registers used:
 18807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18813 ;;      Params:         7       0       0       0       0       0       0       0       0
 18814 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18815 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18816 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18817 ;;Total ram usage:       12 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    6
 18820 ;; This function calls:
 18821 ;;		_sdc_disk_write
 18822 ;; This function is called by:
 18823 ;;		_move_window
 18824 ;;		_reserve_direntry
 18825 ;;		_f_write
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829                           	psect	text104
 18830  005274                     __ptext104:
 18831                           	callstack 0
 18832  005274                     _disk_write:
 18833                           	callstack 15
 18834                           
 18835                           ;incstack = 0
 18836                           ;disk_write@pdrv stored from wreg
 18837  005274  6E31               	movwf	disk_write@pdrv^0,c
 18838                           
 18839                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18840  005276  D018               	goto	l10458
 18841  005278                     l10436:
 18842                           
 18843                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18844  005278  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18845  00527C  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18846  005280  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18847  005284  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18848  005288  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18849  00528C  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18850  005290  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18851  005294  ECEA  F015         	call	_sdc_disk_write	;wreg free
 18852  005298  6E30               	movwf	??_disk_write^0,c
 18853  00529A  5030               	movf	??_disk_write^0,w,c
 18854  00529C  6E32               	movwf	disk_write@result^0,c
 18855  00529E  6A33               	clrf	(disk_write@result+1)^0,c
 18856                           
 18857                           ;diskio.c: 165: res = result;
 18858  0052A0  C032  F034         	movff	disk_write@result,disk_write@res
 18859  0052A4                     l10440:
 18860                           
 18861                           ;diskio.c: 168: return res;
 18862  0052A4  5034               	movf	disk_write@res^0,w,c
 18863  0052A6  0012               	return	
 18864  0052A8                     l10458:
 18865  0052A8  5031               	movf	disk_write@pdrv^0,w,c
 18866                           
 18867                           ; Switch size 1, requested type "simple"
 18868                           ; Number of cases is 3, Range of values is 0 to 2
 18869                           ; switch strategies available:
 18870                           ; Name         Instructions Cycles
 18871                           ; simple_byte           10     6 (average)
 18872                           ;	Chosen strategy is simple_byte
 18873  0052AA  0A00               	xorlw	0	; case 0
 18874  0052AC  B4D8               	btfsc	status,2,c
 18875  0052AE  D7E4               	goto	l10436
 18876  0052B0  0A01               	xorlw	1	; case 1
 18877  0052B2  B4D8               	btfsc	status,2,c
 18878  0052B4  D7E1               	goto	l10436
 18879  0052B6  0A03               	xorlw	3	; case 2
 18880  0052B8  B4D8               	btfsc	status,2,c
 18881  0052BA  D7F4               	goto	l10440
 18882                           
 18883                           ;diskio.c: 189: return RES_PARERR;
 18884  0052BC  0E04               	movlw	4
 18885  0052BE  0012               	return		;funcret
 18886  0052C0                     __end_of_disk_write:
 18887                           	callstack 0
 18888                           
 18889 ;; *************** function _sdc_disk_write *****************
 18890 ;; Defined at:
 18891 ;;		line 509 in file "bibliotecas/diskio.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18894 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18895 ;;  sector          4   23[COMRAM] unsigned long 
 18896 ;;  count           1   27[COMRAM] unsigned char 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;  j               2   37[COMRAM] int 
 18899 ;;  count1          2   34[COMRAM] int 
 18900 ;;  i               2    0        int 
 18901 ;;  buff            1   39[COMRAM] unsigned char 
 18902 ;;  res             1   36[COMRAM] enum E25
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      enum E25
 18905 ;; Registers used:
 18906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18907 ;; Tracked objects:
 18908 ;;		On entry : 0/0
 18909 ;;		On exit  : 0/0
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18912 ;;      Params:         7       0       0       0       0       0       0       0       0
 18913 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18914 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18915 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18916 ;;Total ram usage:       19 bytes
 18917 ;; Hardware stack levels used:    1
 18918 ;; Hardware stack levels required when called:    5
 18919 ;; This function calls:
 18920 ;;		_command
 18921 ;;		_dummy_clocks
 18922 ;;		_escreve_SPI
 18923 ;;		_leitura_SPI
 18924 ;;		_proceed
 18925 ;;		_response
 18926 ;; This function is called by:
 18927 ;;		_disk_write
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           	psect	text105
 18932  002BD4                     __ptext105:
 18933                           	callstack 0
 18934  002BD4                     _sdc_disk_write:
 18935                           	callstack 15
 18936                           
 18937                           ;incstack = 0
 18938  002BD4  0E00               	movlw	0
 18939  002BD6  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18940  002BD8  0E00               	movlw	0
 18941  002BDA  6E23               	movwf	sdc_disk_write@count1^0,c
 18942                           
 18943                           ;diskio.c: 515: if(count>1)
 18944  002BDC  0E01               	movlw	1
 18945  002BDE  641C               	cpfsgt	sdc_disk_write@count^0,c
 18946  002BE0  D065               	goto	l144
 18947                           
 18948                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18949  002BE2  9E8B               	bcf	139,7,c	;volatile
 18950                           
 18951                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18952  002BE4  9A8A               	bcf	138,5,c	;volatile
 18953                           
 18954                           ;diskio.c: 519: dummy_clocks(10);
 18955  002BE6  0E0A               	movlw	10
 18956  002BE8  ECD7  F02A         	call	_dummy_clocks
 18957                           
 18958                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18959  002BEC  501C               	movf	sdc_disk_write@count^0,w,c
 18960  002BEE  6E0F               	movwf	command@arg^0,c
 18961  002BF0  6A10               	clrf	(command@arg+1)^0,c
 18962  002BF2  6A11               	clrf	(command@arg+2)^0,c
 18963  002BF4  6A12               	clrf	(command@arg+3)^0,c
 18964  002BF6  0EFF               	movlw	255
 18965  002BF8  6E13               	movwf	command@CRC^0,c
 18966  002BFA  0E57               	movlw	87
 18967  002BFC  ECBB  F027         	call	_command
 18968                           
 18969                           ;diskio.c: 521: proceed();
 18970  002C00  ECFF  F02D         	call	_proceed	;wreg free
 18971  002C04                     l10324:
 18972                           
 18973                           ;diskio.c: 523: buff = response();
 18974  002C04  ECF9  F02D         	call	_response	;wreg free
 18975  002C08  6E28               	movwf	sdc_disk_write@buff^0,c
 18976                           
 18977                           ;diskio.c: 524: }while(buff!=0X00);
 18978  002C0A  5028               	movf	sdc_disk_write@buff^0,w,c
 18979  002C0C  A4D8               	btfss	status,2,c
 18980  002C0E  D7FA               	goto	l10324
 18981                           
 18982                           ;diskio.c: 526: dummy_clocks(10);
 18983  002C10  0E0A               	movlw	10
 18984  002C12  ECD7  F02A         	call	_dummy_clocks
 18985                           
 18986                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18987  002C16  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18988  002C1A  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18989  002C1E  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18990  002C22  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18991  002C26  0E09               	movlw	9
 18992  002C28                     u11465:
 18993  002C28  90D8               	bcf	status,0,c
 18994  002C2A  361D               	rlcf	??_sdc_disk_write^0,f,c
 18995  002C2C  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18996  002C2E  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18997  002C30  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18998  002C32  2EE8               	decfsz	wreg,f,c
 18999  002C34  D7F9               	goto	u11465
 19000  002C36  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19001  002C3A  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19002  002C3E  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19003  002C42  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19004  002C46  0EFF               	movlw	255
 19005  002C48  6E13               	movwf	command@CRC^0,c
 19006  002C4A  0E59               	movlw	89
 19007  002C4C  ECBB  F027         	call	_command
 19008                           
 19009                           ;diskio.c: 528: proceed();
 19010  002C50  ECFF  F02D         	call	_proceed	;wreg free
 19011  002C54                     l10332:
 19012                           
 19013                           ;diskio.c: 530: buff = response();
 19014  002C54  ECF9  F02D         	call	_response	;wreg free
 19015  002C58  6E28               	movwf	sdc_disk_write@buff^0,c
 19016                           
 19017                           ;diskio.c: 531: }while(buff!=0X00);
 19018  002C5A  5028               	movf	sdc_disk_write@buff^0,w,c
 19019  002C5C  A4D8               	btfss	status,2,c
 19020  002C5E  D7FA               	goto	l10332
 19021                           
 19022                           ;diskio.c: 533: dummy_clocks(1);
 19023  002C60  0E01               	movlw	1
 19024  002C62  ECD7  F02A         	call	_dummy_clocks
 19025                           
 19026                           ;diskio.c: 534: escreve_SPI(0XFC);
 19027  002C66  0EFC               	movlw	252
 19028  002C68  ECDB  F02D         	call	_escreve_SPI
 19029                           
 19030                           ;diskio.c: 535: for(j=0;j<512;j++)
 19031  002C6C  0E00               	movlw	0
 19032  002C6E  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19033  002C70  0E00               	movlw	0
 19034  002C72  6E26               	movwf	sdc_disk_write@j^0,c
 19035  002C74                     l10346:
 19036                           
 19037                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 19038  002C74  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19039  002C78  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19040  002C7C  50DF               	movf	indf2,w,c
 19041  002C7E  ECDB  F02D         	call	_escreve_SPI
 19042                           
 19043                           ;diskio.c: 538: p_buff++;
 19044  002C82  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19045  002C84  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19046  002C86  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19047  002C88  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19048  002C8A  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19049  002C8C  D7F3               	goto	l10346
 19050  002C8E  0E02               	movlw	2
 19051  002C90  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19052  002C92  A0D8               	btfss	status,0,c
 19053  002C94  D7EF               	goto	l10346
 19054                           
 19055                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 19056  002C96  EC05  F02E         	call	_leitura_SPI	;wreg free
 19057                           
 19058                           ;diskio.c: 541: leitura_SPI();
 19059  002C9A  EC05  F02E         	call	_leitura_SPI	;wreg free
 19060                           
 19061                           ;diskio.c: 543: dummy_clocks(1);
 19062  002C9E  0E01               	movlw	1
 19063  002CA0  ECD7  F02A         	call	_dummy_clocks
 19064                           
 19065                           ;diskio.c: 544: escreve_SPI(0XFD);
 19066  002CA4  0EFD               	movlw	253
 19067  002CA6  ECDB  F02D         	call	_escreve_SPI
 19068                           
 19069                           ;diskio.c: 546: }
 19070  002CAA  D063               	goto	u11520
 19071  002CAC                     l144:
 19072                           
 19073                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 19074  002CAC  9E8B               	bcf	139,7,c	;volatile
 19075                           
 19076                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 19077  002CAE  9A8A               	bcf	138,5,c	;volatile
 19078                           
 19079                           ;diskio.c: 551: dummy_clocks(10);
 19080  002CB0  0E0A               	movlw	10
 19081  002CB2  ECD7  F02A         	call	_dummy_clocks
 19082                           
 19083                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 19084  002CB6  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 19085  002CBA  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 19086  002CBE  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 19087  002CC2  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 19088  002CC6  0E09               	movlw	9
 19089  002CC8                     u11495:
 19090  002CC8  90D8               	bcf	status,0,c
 19091  002CCA  361D               	rlcf	??_sdc_disk_write^0,f,c
 19092  002CCC  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 19093  002CCE  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 19094  002CD0  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 19095  002CD2  2EE8               	decfsz	wreg,f,c
 19096  002CD4  D7F9               	goto	u11495
 19097  002CD6  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19098  002CDA  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19099  002CDE  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19100  002CE2  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19101  002CE6  0E00               	movlw	0
 19102  002CE8  6E13               	movwf	command@CRC^0,c
 19103  002CEA  0E58               	movlw	88
 19104  002CEC  ECBB  F027         	call	_command
 19105                           
 19106                           ;diskio.c: 553: proceed();
 19107  002CF0  ECFF  F02D         	call	_proceed	;wreg free
 19108  002CF4                     l10364:
 19109                           
 19110                           ;diskio.c: 555: buff = response();
 19111  002CF4  ECF9  F02D         	call	_response	;wreg free
 19112  002CF8  6E28               	movwf	sdc_disk_write@buff^0,c
 19113                           
 19114                           ;diskio.c: 556: }while(buff!=0X00);
 19115  002CFA  5028               	movf	sdc_disk_write@buff^0,w,c
 19116  002CFC  A4D8               	btfss	status,2,c
 19117  002CFE  D7FA               	goto	l10364
 19118                           
 19119                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 19120  002D00  9A8A               	bcf	138,5,c	;volatile
 19121                           
 19122                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 19123  002D02  9E8B               	bcf	139,7,c	;volatile
 19124                           
 19125                           ;diskio.c: 560: dummy_clocks(1);
 19126  002D04  0E01               	movlw	1
 19127  002D06  ECD7  F02A         	call	_dummy_clocks
 19128                           
 19129                           ;diskio.c: 561: escreve_SPI(0XFE);
 19130  002D0A  0EFE               	movlw	254
 19131  002D0C  ECDB  F02D         	call	_escreve_SPI
 19132                           
 19133                           ;diskio.c: 562: for(j=0;j<512;j++)
 19134  002D10  0E00               	movlw	0
 19135  002D12  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19136  002D14  0E00               	movlw	0
 19137  002D16  6E26               	movwf	sdc_disk_write@j^0,c
 19138  002D18                     l10378:
 19139                           
 19140                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 19141  002D18  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19142  002D1C  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19143  002D20  50DF               	movf	indf2,w,c
 19144  002D22  ECDB  F02D         	call	_escreve_SPI
 19145                           
 19146                           ;diskio.c: 565: p_buff++;
 19147  002D26  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19148  002D28  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19149  002D2A  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19150  002D2C  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19151  002D2E  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19152  002D30  D7F3               	goto	l10378
 19153  002D32  0E02               	movlw	2
 19154  002D34  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19155  002D36  A0D8               	btfss	status,0,c
 19156  002D38  D7EF               	goto	l10378
 19157                           
 19158                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 19159  002D3A  EC05  F02E         	call	_leitura_SPI	;wreg free
 19160                           
 19161                           ;diskio.c: 568: leitura_SPI();
 19162  002D3E  EC05  F02E         	call	_leitura_SPI	;wreg free
 19163                           
 19164                           ;diskio.c: 570: dummy_clocks(10);
 19165  002D42  0E0A               	movlw	10
 19166  002D44  ECD7  F02A         	call	_dummy_clocks
 19167                           
 19168                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 19169  002D48  0E00               	movlw	0
 19170  002D4A  6E0F               	movwf	command@arg^0,c
 19171  002D4C  0E00               	movlw	0
 19172  002D4E  6E10               	movwf	(command@arg+1)^0,c
 19173  002D50  0E00               	movlw	0
 19174  002D52  6E11               	movwf	(command@arg+2)^0,c
 19175  002D54  0E00               	movlw	0
 19176  002D56  6E12               	movwf	(command@arg+3)^0,c
 19177  002D58  0E00               	movlw	0
 19178  002D5A  6E13               	movwf	command@CRC^0,c
 19179  002D5C  0E4D               	movlw	77
 19180  002D5E  ECBB  F027         	call	_command
 19181                           
 19182                           ;diskio.c: 572: proceed();
 19183  002D62  ECFF  F02D         	call	_proceed	;wreg free
 19184  002D66                     l10394:
 19185                           
 19186                           ;diskio.c: 574: buff = response();
 19187  002D66  ECF9  F02D         	call	_response	;wreg free
 19188  002D6A  6E28               	movwf	sdc_disk_write@buff^0,c
 19189                           
 19190                           ;diskio.c: 575: }while(buff!=0X00 );
 19191  002D6C  5028               	movf	sdc_disk_write@buff^0,w,c
 19192  002D6E  A4D8               	btfss	status,2,c
 19193  002D70  D7FA               	goto	l10394
 19194  002D72                     u11520:
 19195                           
 19196                           ;diskio.c: 576: };diskio.c: 577: return res;
 19197  002D72  5025               	movf	sdc_disk_write@res^0,w,c
 19198  002D74  0012               	return		;funcret
 19199  002D76                     __end_of_sdc_disk_write:
 19200                           	callstack 0
 19201                           
 19202 ;; *************** function _disk_read *****************
 19203 ;; Defined at:
 19204 ;;		line 97 in file "bibliotecas/diskio.c"
 19205 ;; Parameters:    Size  Location     Type
 19206 ;;  pdrv            1    wreg     unsigned char 
 19207 ;;  buff            2   40[COMRAM] PTR unsigned char 
 19208 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19209 ;;  sector          4   42[COMRAM] unsigned long 
 19210 ;;  count           1   46[COMRAM] unsigned char 
 19211 ;; Auto vars:     Size  Location     Type
 19212 ;;  pdrv            1   48[COMRAM] unsigned char 
 19213 ;;  result          2   49[COMRAM] int 
 19214 ;;  res             1   51[COMRAM] enum E25
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  1    wreg      enum E25
 19217 ;; Registers used:
 19218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19224 ;;      Params:         7       0       0       0       0       0       0       0       0
 19225 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19226 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19227 ;;      Totals:        12       0       0       0       0       0       0       0       0
 19228 ;;Total ram usage:       12 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:    6
 19231 ;; This function calls:
 19232 ;;		_sdc_disk_read
 19233 ;; This function is called by:
 19234 ;;		_move_window
 19235 ;;		_check_fs
 19236 ;;		_f_read
 19237 ;; This function uses a non-reentrant model
 19238 ;;
 19239                           
 19240                           	psect	text106
 19241  004C4A                     __ptext106:
 19242                           	callstack 0
 19243  004C4A                     _disk_read:
 19244                           	callstack 15
 19245                           
 19246                           ;incstack = 0
 19247                           ;disk_read@pdrv stored from wreg
 19248  004C4A  6E31               	movwf	disk_read@pdrv^0,c
 19249                           
 19250                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 19251  004C4C  D029               	goto	l10428
 19252  004C4E                     l10404:
 19253                           
 19254                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 19255  004C4E  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19256  004C52  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19257  004C56  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19258  004C5A  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19259  004C5E  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19260  004C62  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19261  004C66  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19262  004C6A  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19263  004C6E  6E30               	movwf	??_disk_read^0,c
 19264  004C70  5030               	movf	??_disk_read^0,w,c
 19265  004C72  6E32               	movwf	disk_read@result^0,c
 19266  004C74  6A33               	clrf	(disk_read@result+1)^0,c
 19267                           
 19268                           ;diskio.c: 115: res = result;
 19269  004C76  C032  F034         	movff	disk_read@result,disk_read@res
 19270  004C7A                     l10408:
 19271                           
 19272                           ;diskio.c: 117: return res;
 19273  004C7A  5034               	movf	disk_read@res^0,w,c
 19274  004C7C  0012               	return	
 19275  004C7E                     l10412:
 19276                           
 19277                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 19278  004C7E  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19279  004C82  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19280  004C86  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19281  004C8A  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19282  004C8E  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19283  004C92  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19284  004C96  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19285  004C9A  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19286  004C9E  D7E7               	goto	L7
 19287  004CA0                     l10428:
 19288  004CA0  5031               	movf	disk_read@pdrv^0,w,c
 19289                           
 19290                           ; Switch size 1, requested type "simple"
 19291                           ; Number of cases is 3, Range of values is 0 to 2
 19292                           ; switch strategies available:
 19293                           ; Name         Instructions Cycles
 19294                           ; simple_byte           10     6 (average)
 19295                           ;	Chosen strategy is simple_byte
 19296  004CA2  0A00               	xorlw	0	; case 0
 19297  004CA4  B4D8               	btfsc	status,2,c
 19298  004CA6  D7D3               	goto	l10404
 19299  004CA8  0A01               	xorlw	1	; case 1
 19300  004CAA  B4D8               	btfsc	status,2,c
 19301  004CAC  D7E8               	goto	l10412
 19302  004CAE  0A03               	xorlw	3	; case 2
 19303  004CB0  B4D8               	btfsc	status,2,c
 19304  004CB2  D7E3               	goto	l10408
 19305                           
 19306                           ;diskio.c: 141: return RES_PARERR;
 19307  004CB4  0E04               	movlw	4
 19308  004CB6  0012               	return		;funcret
 19309  004CB8                     __end_of_disk_read:
 19310                           	callstack 0
 19311                           
 19312 ;; *************** function _sdc_disk_read *****************
 19313 ;; Defined at:
 19314 ;;		line 439 in file "bibliotecas/diskio.c"
 19315 ;; Parameters:    Size  Location     Type
 19316 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 19317 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19318 ;;  sector          4   23[COMRAM] unsigned long 
 19319 ;;  count           1   27[COMRAM] unsigned char 
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;  start_add       4   33[COMRAM] unsigned long 
 19322 ;;  length          2   37[COMRAM] int 
 19323 ;;  count1          2    0        int 
 19324 ;;  i               2    0        int 
 19325 ;;  buff            1   39[COMRAM] unsigned char 
 19326 ;;  ptr             1    0        unsigned char 
 19327 ;;  res             1    0        enum E25
 19328 ;; Return value:  Size  Location     Type
 19329 ;;                  1    wreg      enum E25
 19330 ;; Registers used:
 19331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19332 ;; Tracked objects:
 19333 ;;		On entry : 0/0
 19334 ;;		On exit  : 0/0
 19335 ;;		Unchanged: 0/0
 19336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19337 ;;      Params:         7       0       0       0       0       0       0       0       0
 19338 ;;      Locals:         8       0       0       0       0       0       0       0       0
 19339 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19340 ;;      Totals:        19       0       0       0       0       0       0       0       0
 19341 ;;Total ram usage:       19 bytes
 19342 ;; Hardware stack levels used:    1
 19343 ;; Hardware stack levels required when called:    5
 19344 ;; This function calls:
 19345 ;;		_command
 19346 ;;		_dummy_clocks
 19347 ;;		_proceed
 19348 ;;		_response
 19349 ;; This function is called by:
 19350 ;;		_disk_read
 19351 ;; This function uses a non-reentrant model
 19352 ;;
 19353                           
 19354                           	psect	text107
 19355  00399A                     __ptext107:
 19356                           	callstack 0
 19357  00399A                     _sdc_disk_read:
 19358                           	callstack 15
 19359                           
 19360                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 19361                           
 19362                           ;incstack = 0
 19363  00399A  0E0A               	movlw	10
 19364  00399C  ECD7  F02A         	call	_dummy_clocks
 19365                           
 19366                           ;diskio.c: 452: start_add = sector*512;
 19367  0039A0  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 19368  0039A4  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 19369  0039A8  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 19370  0039AC  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 19371  0039B0  0E09               	movlw	9
 19372  0039B2                     u11375:
 19373  0039B2  90D8               	bcf	status,0,c
 19374  0039B4  361D               	rlcf	??_sdc_disk_read^0,f,c
 19375  0039B6  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 19376  0039B8  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 19377  0039BA  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 19378  0039BC  2EE8               	decfsz	wreg,f,c
 19379  0039BE  D7F9               	goto	u11375
 19380  0039C0  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 19381  0039C4  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 19382  0039C8  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 19383  0039CC  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 19384                           
 19385                           ;diskio.c: 455: if(sector != 1)
 19386  0039D0  0418               	decf	sdc_disk_read@sector^0,w,c
 19387  0039D2  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 19388  0039D4  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 19389  0039D6  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 19390  0039D8  B4D8               	btfsc	status,2,c
 19391  0039DA  D01B               	goto	l10274
 19392                           
 19393                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 19394  0039DC  0E0A               	movlw	10
 19395  0039DE  ECD7  F02A         	call	_dummy_clocks
 19396                           
 19397                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 19398  0039E2  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 19399  0039E6  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 19400  0039EA  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 19401  0039EE  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 19402  0039F2  0E00               	movlw	0
 19403  0039F4  6E13               	movwf	command@CRC^0,c
 19404  0039F6  0E52               	movlw	82
 19405  0039F8  ECBB  F027         	call	_command
 19406                           
 19407                           ;diskio.c: 459: proceed();
 19408  0039FC  ECFF  F02D         	call	_proceed	;wreg free
 19409  003A00                     l10268:
 19410                           
 19411                           ;diskio.c: 461: buff = response();
 19412  003A00  ECF9  F02D         	call	_response	;wreg free
 19413  003A04  6E28               	movwf	sdc_disk_read@buff^0,c
 19414                           
 19415                           ;diskio.c: 462: }while(buff!=0X00);
 19416  003A06  5028               	movf	sdc_disk_read@buff^0,w,c
 19417  003A08  A4D8               	btfss	status,2,c
 19418  003A0A  D7FA               	goto	l10268
 19419  003A0C                     u11390:
 19420                           
 19421                           ;diskio.c: 463: proceed();
 19422  003A0C  ECFF  F02D         	call	_proceed	;wreg free
 19423                           
 19424                           ;diskio.c: 464: }
 19425  003A10  D01C               	goto	l10286
 19426  003A12                     l10274:
 19427                           
 19428                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 19429  003A12  0E0A               	movlw	10
 19430  003A14  ECD7  F02A         	call	_dummy_clocks
 19431                           
 19432                           ;diskio.c: 468: command(0X51,sector ,0X00);
 19433  003A18  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 19434  003A1C  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 19435  003A20  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 19436  003A24  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 19437  003A28  0E00               	movlw	0
 19438  003A2A  6E13               	movwf	command@CRC^0,c
 19439  003A2C  0E51               	movlw	81
 19440  003A2E  ECBB  F027         	call	_command
 19441                           
 19442                           ;diskio.c: 469: proceed();
 19443  003A32  ECFF  F02D         	call	_proceed	;wreg free
 19444  003A36                     l10278:
 19445                           
 19446                           ;diskio.c: 471: buff = response();
 19447  003A36  ECF9  F02D         	call	_response	;wreg free
 19448  003A3A  6E28               	movwf	sdc_disk_read@buff^0,c
 19449                           
 19450                           ;diskio.c: 472: }while(buff!=0X00);
 19451  003A3C  5028               	movf	sdc_disk_read@buff^0,w,c
 19452  003A3E  B4D8               	btfsc	status,2,c
 19453  003A40  D7E5               	goto	u11390
 19454  003A42  D7F9               	goto	l10278
 19455  003A44                     l10284:
 19456                           
 19457                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 19458  003A44  ECF9  F02D         	call	_response	;wreg free
 19459  003A48  6E28               	movwf	sdc_disk_read@buff^0,c
 19460  003A4A                     l10286:
 19461  003A4A  0EFE               	movlw	254
 19462  003A4C  1828               	xorwf	sdc_disk_read@buff^0,w,c
 19463  003A4E  A4D8               	btfss	status,2,c
 19464  003A50  D7F9               	goto	l10284
 19465                           
 19466                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 19467  003A52  0E00               	movlw	0
 19468  003A54  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 19469  003A56  0E00               	movlw	0
 19470  003A58  6E26               	movwf	sdc_disk_read@length^0,c
 19471                           
 19472                           ;diskio.c: 484: while ( length < 512 )
 19473  003A5A  D00B               	goto	l10294
 19474  003A5C                     l10290:
 19475                           
 19476                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 19477  003A5C  5026               	movf	sdc_disk_read@length^0,w,c
 19478  003A5E  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 19479  003A60  6ED9               	movwf	fsr2l,c
 19480  003A62  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 19481  003A64  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 19482  003A66  6EDA               	movwf	fsr2h,c
 19483  003A68  ECF9  F02D         	call	_response	;wreg free
 19484  003A6C  6EDF               	movwf	indf2,c
 19485                           
 19486                           ;diskio.c: 487: length++;
 19487  003A6E  4A26               	infsnz	sdc_disk_read@length^0,f,c
 19488  003A70  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 19489  003A72                     l10294:
 19490  003A72  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 19491  003A74  D7F3               	goto	l10290
 19492  003A76  0E02               	movlw	2
 19493  003A78  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 19494  003A7A  A0D8               	btfss	status,0,c
 19495  003A7C  D7EF               	goto	l10290
 19496                           
 19497                           ;diskio.c: 491: dummy_clocks(10);
 19498  003A7E  0E0A               	movlw	10
 19499  003A80  ECD7  F02A         	call	_dummy_clocks
 19500                           
 19501                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 19502  003A84  0E00               	movlw	0
 19503  003A86  6E0F               	movwf	command@arg^0,c
 19504  003A88  0E00               	movlw	0
 19505  003A8A  6E10               	movwf	(command@arg+1)^0,c
 19506  003A8C  0E00               	movlw	0
 19507  003A8E  6E11               	movwf	(command@arg+2)^0,c
 19508  003A90  0E00               	movlw	0
 19509  003A92  6E12               	movwf	(command@arg+3)^0,c
 19510  003A94  0E00               	movlw	0
 19511  003A96  6E13               	movwf	command@CRC^0,c
 19512  003A98  0E4C               	movlw	76
 19513  003A9A  ECBB  F027         	call	_command
 19514                           
 19515                           ;diskio.c: 494: proceed();
 19516  003A9E  ECFF  F02D         	call	_proceed	;wreg free
 19517  003AA2                     l10304:
 19518                           
 19519                           ;diskio.c: 496: buff = response();
 19520  003AA2  ECF9  F02D         	call	_response	;wreg free
 19521  003AA6  6E28               	movwf	sdc_disk_read@buff^0,c
 19522                           
 19523                           ;diskio.c: 497: }while(buff!=0xFF);
 19524  003AA8  2828               	incf	sdc_disk_read@buff^0,w,c
 19525  003AAA  A4D8               	btfss	status,2,c
 19526  003AAC  D7FA               	goto	l10304
 19527                           
 19528                           ;diskio.c: 500: return RES_OK;
 19529  003AAE  0E00               	movlw	0
 19530  003AB0  0012               	return		;funcret
 19531  003AB2                     __end_of_sdc_disk_read:
 19532                           	callstack 0
 19533                           
 19534 ;; *************** function _response *****************
 19535 ;; Defined at:
 19536 ;;		line 61 in file "bibliotecas/SDCard.c"
 19537 ;; Parameters:    Size  Location     Type
 19538 ;;		None
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  buff            1    9[COMRAM] unsigned char 
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  1    wreg      unsigned char 
 19543 ;; Registers used:
 19544 ;;		wreg, status,2, cstack
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19550 ;;      Params:         0       0       0       0       0       0       0       0       0
 19551 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19553 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19554 ;;Total ram usage:        1 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:    3
 19557 ;; This function calls:
 19558 ;;		_leitura_SPI
 19559 ;; This function is called by:
 19560 ;;		_sdc_reset
 19561 ;;		_sdc_disk_initialize
 19562 ;;		_sdc_disk_read
 19563 ;;		_sdc_disk_write
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           	psect	text108
 19568  005BF2                     __ptext108:
 19569                           	callstack 0
 19570  005BF2                     _response:
 19571                           	callstack 16
 19572                           
 19573                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 19574                           
 19575                           ;incstack = 0
 19576  005BF2  9A8A               	bcf	138,5,c	;volatile
 19577                           
 19578                           ;SDCard.c: 65: buff= leitura_SPI();
 19579  005BF4  EC05  F02E         	call	_leitura_SPI	;wreg free
 19580  005BF8  6E0A               	movwf	response@buff^0,c
 19581                           
 19582                           ;SDCard.c: 66: return buff;
 19583  005BFA  500A               	movf	response@buff^0,w,c
 19584  005BFC  0012               	return		;funcret
 19585  005BFE                     __end_of_response:
 19586                           	callstack 0
 19587                           
 19588 ;; *************** function _proceed *****************
 19589 ;; Defined at:
 19590 ;;		line 94 in file "bibliotecas/SDCard.c"
 19591 ;; Parameters:    Size  Location     Type
 19592 ;;		None
 19593 ;; Auto vars:     Size  Location     Type
 19594 ;;		None
 19595 ;; Return value:  Size  Location     Type
 19596 ;;                  1    wreg      void 
 19597 ;; Registers used:
 19598 ;;		wreg, cstack
 19599 ;; Tracked objects:
 19600 ;;		On entry : 0/0
 19601 ;;		On exit  : 0/0
 19602 ;;		Unchanged: 0/0
 19603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19604 ;;      Params:         0       0       0       0       0       0       0       0       0
 19605 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19607 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19608 ;;Total ram usage:        0 bytes
 19609 ;; Hardware stack levels used:    1
 19610 ;; Hardware stack levels required when called:    3
 19611 ;; This function calls:
 19612 ;;		_escreve_SPI
 19613 ;; This function is called by:
 19614 ;;		_sdc_reset
 19615 ;;		_sdc_disk_initialize
 19616 ;;		_sdc_disk_read
 19617 ;;		_sdc_disk_write
 19618 ;; This function uses a non-reentrant model
 19619 ;;
 19620                           
 19621                           	psect	text109
 19622  005BFE                     __ptext109:
 19623                           	callstack 0
 19624  005BFE                     _proceed:
 19625                           	callstack 16
 19626                           
 19627                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 19628                           
 19629                           ;incstack = 0
 19630  005BFE  9A8A               	bcf	138,5,c	;volatile
 19631                           
 19632                           ;SDCard.c: 97: escreve_SPI(0xFF);
 19633  005C00  0EFF               	movlw	255
 19634  005C02  ECDB  F02D         	call	_escreve_SPI
 19635                           
 19636                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 19637  005C06  8A8A               	bsf	138,5,c	;volatile
 19638  005C08  0012               	return		;funcret
 19639  005C0A                     __end_of_proceed:
 19640                           	callstack 0
 19641                           
 19642 ;; *************** function _command *****************
 19643 ;; Defined at:
 19644 ;;		line 127 in file "bibliotecas/SDCard.c"
 19645 ;; Parameters:    Size  Location     Type
 19646 ;;  CMD             1    wreg     unsigned char 
 19647 ;;  arg             4   14[COMRAM] unsigned long 
 19648 ;;  CRC             1   18[COMRAM] unsigned char 
 19649 ;; Auto vars:     Size  Location     Type
 19650 ;;  CMD             1   19[COMRAM] unsigned char 
 19651 ;;  argument        1   20[COMRAM] unsigned char 
 19652 ;; Return value:  Size  Location     Type
 19653 ;;                  1    wreg      void 
 19654 ;; Registers used:
 19655 ;;		wreg, status,2, status,0, cstack
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/0
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19661 ;;      Params:         5       0       0       0       0       0       0       0       0
 19662 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19664 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19665 ;;Total ram usage:        7 bytes
 19666 ;; Hardware stack levels used:    1
 19667 ;; Hardware stack levels required when called:    4
 19668 ;; This function calls:
 19669 ;;		_dummy_clocks
 19670 ;;		_escreve_SPI
 19671 ;;		_wait_ready
 19672 ;; This function is called by:
 19673 ;;		_sdc_reset
 19674 ;;		_sdc_disk_initialize
 19675 ;;		_sdc_disk_read
 19676 ;;		_sdc_disk_write
 19677 ;; This function uses a non-reentrant model
 19678 ;;
 19679                           
 19680                           	psect	text110
 19681  004F76                     __ptext110:
 19682                           	callstack 0
 19683  004F76                     _command:
 19684                           	callstack 15
 19685                           
 19686                           ;incstack = 0
 19687                           ;command@CMD stored from wreg
 19688  004F76  6E14               	movwf	command@CMD^0,c
 19689                           
 19690                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 19691  004F78  EC49  F02B         	call	_wait_ready	;wreg free
 19692  004F7C  0AFF               	xorlw	255
 19693  004F7E  A4D8               	btfss	status,2,c
 19694  004F80  D004               	goto	l702
 19695  004F82  D008               	goto	u11360
 19696  004F84                     l10218:
 19697                           
 19698                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 19699  004F84  0E0A               	movlw	10
 19700  004F86  ECD7  F02A         	call	_dummy_clocks
 19701  004F8A                     l702:
 19702  004F8A  EC49  F02B         	call	_wait_ready	;wreg free
 19703  004F8E  0AFF               	xorlw	255
 19704  004F90  A4D8               	btfss	status,2,c
 19705  004F92  D7F8               	goto	l10218
 19706  004F94                     u11360:
 19707                           
 19708                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 19709  004F94  0EFF               	movlw	255
 19710  004F96  ECDB  F02D         	call	_escreve_SPI
 19711                           
 19712                           ;SDCard.c: 139: escreve_SPI(CMD);
 19713  004F9A  5014               	movf	command@CMD^0,w,c
 19714  004F9C  ECDB  F02D         	call	_escreve_SPI
 19715                           
 19716                           ;SDCard.c: 140: argument = arg>>24;
 19717  004FA0  C012  F015         	movff	command@arg+3,command@argument
 19718                           
 19719                           ;SDCard.c: 141: escreve_SPI(argument);
 19720  004FA4  5015               	movf	command@argument^0,w,c
 19721  004FA6  ECDB  F02D         	call	_escreve_SPI
 19722                           
 19723                           ;SDCard.c: 142: argument = arg>>16;
 19724  004FAA  C011  F015         	movff	command@arg+2,command@argument
 19725                           
 19726                           ;SDCard.c: 143: escreve_SPI(argument);
 19727  004FAE  5015               	movf	command@argument^0,w,c
 19728  004FB0  ECDB  F02D         	call	_escreve_SPI
 19729                           
 19730                           ;SDCard.c: 144: argument = arg>>8;
 19731  004FB4  C010  F015         	movff	command@arg+1,command@argument
 19732                           
 19733                           ;SDCard.c: 145: escreve_SPI(argument);
 19734  004FB8  5015               	movf	command@argument^0,w,c
 19735  004FBA  ECDB  F02D         	call	_escreve_SPI
 19736                           
 19737                           ;SDCard.c: 146: argument = arg;
 19738  004FBE  C00F  F015         	movff	command@arg,command@argument
 19739                           
 19740                           ;SDCard.c: 147: escreve_SPI(argument);
 19741  004FC2  5015               	movf	command@argument^0,w,c
 19742  004FC4  ECDB  F02D         	call	_escreve_SPI
 19743                           
 19744                           ;SDCard.c: 148: escreve_SPI(CRC);
 19745  004FC8  5013               	movf	command@CRC^0,w,c
 19746  004FCA  ECDB  F02D         	call	_escreve_SPI
 19747  004FCE  0012               	return		;funcret
 19748  004FD0                     __end_of_command:
 19749                           	callstack 0
 19750                           
 19751 ;; *************** function _wait_ready *****************
 19752 ;; Defined at:
 19753 ;;		line 107 in file "bibliotecas/SDCard.c"
 19754 ;; Parameters:    Size  Location     Type
 19755 ;;		None
 19756 ;; Auto vars:     Size  Location     Type
 19757 ;;  msg            10    0        unsigned char [10]
 19758 ;;  timeout         4    9[COMRAM] unsigned long 
 19759 ;;  res             1   13[COMRAM] unsigned char 
 19760 ;; Return value:  Size  Location     Type
 19761 ;;                  1    wreg      unsigned char 
 19762 ;; Registers used:
 19763 ;;		wreg, status,2, status,0, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19769 ;;      Params:         0       0       0       0       0       0       0       0       0
 19770 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19772 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19773 ;;Total ram usage:        5 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:    3
 19776 ;; This function calls:
 19777 ;;		_leitura_SPI
 19778 ;; This function is called by:
 19779 ;;		_command
 19780 ;; This function uses a non-reentrant model
 19781 ;;
 19782                           
 19783                           	psect	text111
 19784  005692                     __ptext111:
 19785                           	callstack 0
 19786  005692                     _wait_ready:
 19787                           	callstack 15
 19788                           
 19789                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19790                           
 19791                           ;incstack = 0
 19792  005692  0EFF               	movlw	255
 19793  005694  6E0A               	movwf	wait_ready@timeout^0,c
 19794  005696  0E7F               	movlw	127
 19795  005698  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19796  00569A  0E00               	movlw	0
 19797  00569C  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19798  00569E  0E00               	movlw	0
 19799  0056A0  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19800  0056A2                     l10204:
 19801                           
 19802                           ;SDCard.c: 114: res = leitura_SPI();
 19803  0056A2  EC05  F02E         	call	_leitura_SPI	;wreg free
 19804  0056A6  6E0E               	movwf	wait_ready@res^0,c
 19805                           
 19806                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19807  0056A8  280E               	incf	wait_ready@res^0,w,c
 19808  0056AA  B4D8               	btfsc	status,2,c
 19809  0056AC  D00B               	goto	u11340
 19810  0056AE  060A               	decf	wait_ready@timeout^0,f,c
 19811  0056B0  0E00               	movlw	0
 19812  0056B2  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19813  0056B4  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19814  0056B6  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19815  0056B8  500A               	movf	wait_ready@timeout^0,w,c
 19816  0056BA  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19817  0056BC  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19818  0056BE  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19819  0056C0  A4D8               	btfss	status,2,c
 19820  0056C2  D7EF               	goto	l10204
 19821  0056C4                     u11340:
 19822                           
 19823                           ;SDCard.c: 117: return res;
 19824  0056C4  500E               	movf	wait_ready@res^0,w,c
 19825  0056C6  0012               	return		;funcret
 19826  0056C8                     __end_of_wait_ready:
 19827                           	callstack 0
 19828                           
 19829 ;; *************** function _escreve_SPI *****************
 19830 ;; Defined at:
 19831 ;;		line 105 in file "bibliotecas/SPI.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;  dado            1    wreg     unsigned char 
 19834 ;; Auto vars:     Size  Location     Type
 19835 ;;  dado            1   10[COMRAM] unsigned char 
 19836 ;;  TempVar         1    0        unsigned char 
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  1    wreg      void 
 19839 ;; Registers used:
 19840 ;;		wreg
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0
 19847 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19849 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19850 ;;Total ram usage:        2 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; Hardware stack levels required when called:    2
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_sdc_disk_write
 19857 ;;		_proceed
 19858 ;;		_command
 19859 ;; This function uses a non-reentrant model
 19860 ;;
 19861                           
 19862                           	psect	text112
 19863  005BB6                     __ptext112:
 19864                           	callstack 0
 19865  005BB6                     _escreve_SPI:
 19866                           	callstack 16
 19867                           
 19868                           ;incstack = 0
 19869                           ;escreve_SPI@dado stored from wreg
 19870  005BB6  6E0B               	movwf	escreve_SPI@dado^0,c
 19871  005BB8  50C9               	movf	201,w,c	;volatile
 19872                           
 19873                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19874  005BBA  969E               	bcf	158,3,c	;volatile
 19875                           
 19876                           ;SPI.c: 111: SSPBUF = dado;
 19877  005BBC  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19878  005BC0                     l806:
 19879  005BC0  B69E               	btfsc	158,3,c	;volatile
 19880  005BC2  0012               	return	
 19881  005BC4  D7FD               	goto	l806
 19882  005BC6                     __end_of_escreve_SPI:
 19883                           	callstack 0
 19884                           
 19885 ;; *************** function _dummy_clocks *****************
 19886 ;; Defined at:
 19887 ;;		line 76 in file "bibliotecas/SDCard.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;  n               1    wreg     unsigned char 
 19890 ;; Auto vars:     Size  Location     Type
 19891 ;;  n               1   11[COMRAM] unsigned char 
 19892 ;;  i               2   12[COMRAM] unsigned int 
 19893 ;; Return value:  Size  Location     Type
 19894 ;;                  1    wreg      void 
 19895 ;; Registers used:
 19896 ;;		wreg, status,2, status,0, cstack
 19897 ;; Tracked objects:
 19898 ;;		On entry : 0/0
 19899 ;;		On exit  : 0/0
 19900 ;;		Unchanged: 0/0
 19901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19902 ;;      Params:         0       0       0       0       0       0       0       0       0
 19903 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19904 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19905 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19906 ;;Total ram usage:        5 bytes
 19907 ;; Hardware stack levels used:    1
 19908 ;; Hardware stack levels required when called:    3
 19909 ;; This function calls:
 19910 ;;		_leitura_SPI
 19911 ;; This function is called by:
 19912 ;;		_sdc_disk_initialize
 19913 ;;		_sdc_disk_read
 19914 ;;		_sdc_disk_write
 19915 ;;		_command
 19916 ;; This function uses a non-reentrant model
 19917 ;;
 19918                           
 19919                           	psect	text113
 19920  0055AE                     __ptext113:
 19921                           	callstack 0
 19922  0055AE                     _dummy_clocks:
 19923                           	callstack 16
 19924                           
 19925                           ;incstack = 0
 19926                           ;dummy_clocks@n stored from wreg
 19927  0055AE  6E0C               	movwf	dummy_clocks@n^0,c
 19928                           
 19929                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19930  0055B0  0E10               	movlw	16
 19931  0055B2  6E0A               	movwf	??_dummy_clocks^0,c
 19932  0055B4  0E94               	movlw	148
 19933  0055B6                     u16747:
 19934  0055B6  2EE8               	decfsz	wreg,f,c
 19935  0055B8  D7FE               	bra	u16747
 19936  0055BA  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19937  0055BC  D7FC               	bra	u16747
 19938  0055BE  D000               	nop2	
 19939                           
 19940                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19941  0055C0  0E00               	movlw	0
 19942  0055C2  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19943  0055C4  0E00               	movlw	0
 19944  0055C6  6E0D               	movwf	dummy_clocks@i^0,c
 19945  0055C8  D006               	goto	l10196
 19946  0055CA                     l686:
 19947                           
 19948                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19949  0055CA  8A8A               	bsf	138,5,c	;volatile
 19950                           
 19951                           ;SDCard.c: 83: leitura_SPI();
 19952  0055CC  EC05  F02E         	call	_leitura_SPI	;wreg free
 19953                           
 19954                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19955  0055D0  9A8A               	bcf	138,5,c	;volatile
 19956  0055D2  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19957  0055D4  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19958  0055D6                     l10196:
 19959  0055D6  500C               	movf	dummy_clocks@n^0,w,c
 19960  0055D8  6E0A               	movwf	??_dummy_clocks^0,c
 19961  0055DA  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19962  0055DC  500A               	movf	??_dummy_clocks^0,w,c
 19963  0055DE  5C0D               	subwf	dummy_clocks@i^0,w,c
 19964  0055E0  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19965  0055E2  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19966  0055E4  B0D8               	btfsc	status,0,c
 19967  0055E6  0012               	return	
 19968  0055E8  D7F0               	goto	l686
 19969  0055EA                     __end_of_dummy_clocks:
 19970                           	callstack 0
 19971                           
 19972 ;; *************** function _leitura_SPI *****************
 19973 ;; Defined at:
 19974 ;;		line 90 in file "bibliotecas/SPI.c"
 19975 ;; Parameters:    Size  Location     Type
 19976 ;;		None
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;		None
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  1    wreg      unsigned char 
 19981 ;; Registers used:
 19982 ;;		wreg, status,2
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19988 ;;      Params:         0       0       0       0       0       0       0       0       0
 19989 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19991 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19992 ;;Total ram usage:        0 bytes
 19993 ;; Hardware stack levels used:    1
 19994 ;; Hardware stack levels required when called:    2
 19995 ;; This function calls:
 19996 ;;		Nothing
 19997 ;; This function is called by:
 19998 ;;		_sdc_disk_write
 19999 ;;		_response
 20000 ;;		_dummy_clocks
 20001 ;;		_wait_ready
 20002 ;; This function uses a non-reentrant model
 20003 ;;
 20004                           
 20005                           	psect	text114
 20006  005C0A                     __ptext114:
 20007                           	callstack 0
 20008  005C0A                     _leitura_SPI:
 20009                           	callstack 16
 20010                           
 20011                           ;SPI.c: 92: SSPBUF = 0xFF;
 20012                           
 20013                           ;incstack = 0
 20014  005C0A  68C9               	setf	201,c	;volatile
 20015                           
 20016                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 20017  005C0C  90C7               	bcf	199,0,c	;volatile
 20018  005C0E                     l800:
 20019  005C0E  A0C7               	btfss	199,0,c	;volatile
 20020  005C10  D7FE               	goto	l800
 20021                           
 20022                           ;SPI.c: 95: return (SSPBUF);
 20023  005C12  50C9               	movf	201,w,c	;volatile
 20024  005C14  0012               	return		;funcret
 20025  005C16                     __end_of_leitura_SPI:
 20026                           	callstack 0
 20027                           
 20028 ;; *************** function _disk_ioctl *****************
 20029 ;; Defined at:
 20030 ;;		line 198 in file "bibliotecas/diskio.c"
 20031 ;; Parameters:    Size  Location     Type
 20032 ;;  pdrv            1    wreg     unsigned char 
 20033 ;;  cmd             1    9[COMRAM] unsigned char 
 20034 ;;  buff            2   10[COMRAM] PTR void 
 20035 ;;		 -> NULL(0), 
 20036 ;; Auto vars:     Size  Location     Type
 20037 ;;  pdrv            1   12[COMRAM] unsigned char 
 20038 ;;  result          2    0        int 
 20039 ;;  res             1   13[COMRAM] enum E25
 20040 ;; Return value:  Size  Location     Type
 20041 ;;                  1    wreg      enum E25
 20042 ;; Registers used:
 20043 ;;		wreg, status,2, status,0
 20044 ;; Tracked objects:
 20045 ;;		On entry : 0/0
 20046 ;;		On exit  : 0/0
 20047 ;;		Unchanged: 0/0
 20048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20049 ;;      Params:         3       0       0       0       0       0       0       0       0
 20050 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20052 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20053 ;;Total ram usage:        5 bytes
 20054 ;; Hardware stack levels used:    1
 20055 ;; Hardware stack levels required when called:    2
 20056 ;; This function calls:
 20057 ;;		Nothing
 20058 ;; This function is called by:
 20059 ;;		_sync
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text115
 20064  005AAE                     __ptext115:
 20065                           	callstack 0
 20066  005AAE                     _disk_ioctl:
 20067                           	callstack 21
 20068                           
 20069                           ;incstack = 0
 20070                           ;disk_ioctl@pdrv stored from wreg
 20071  005AAE  6E0D               	movwf	disk_ioctl@pdrv^0,c
 20072                           
 20073                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 20074  005AB0  D002               	goto	l11126
 20075  005AB2                     l68:
 20076                           
 20077                           ;diskio.c: 212: return res;
 20078  005AB2  500E               	movf	disk_ioctl@res^0,w,c
 20079  005AB4  0012               	return	
 20080  005AB6                     l11126:
 20081  005AB6  500D               	movf	disk_ioctl@pdrv^0,w,c
 20082                           
 20083                           ; Switch size 1, requested type "simple"
 20084                           ; Number of cases is 3, Range of values is 0 to 2
 20085                           ; switch strategies available:
 20086                           ; Name         Instructions Cycles
 20087                           ; simple_byte           10     6 (average)
 20088                           ;	Chosen strategy is simple_byte
 20089  005AB8  0A00               	xorlw	0	; case 0
 20090  005ABA  B4D8               	btfsc	status,2,c
 20091  005ABC  D7FA               	goto	l68
 20092  005ABE  0A01               	xorlw	1	; case 1
 20093  005AC0  B4D8               	btfsc	status,2,c
 20094  005AC2  D7F7               	goto	l68
 20095  005AC4  0A03               	xorlw	3	; case 2
 20096  005AC6  B4D8               	btfsc	status,2,c
 20097  005AC8  D7F4               	goto	l68
 20098                           
 20099                           ;diskio.c: 227: return RES_PARERR;
 20100  005ACA  0E04               	movlw	4
 20101  005ACC  0012               	return		;funcret
 20102  005ACE                     __end_of_disk_ioctl:
 20103                           	callstack 0
 20104                           
 20105 ;; *************** function _get_fattime *****************
 20106 ;; Defined at:
 20107 ;;		line 810 in file "bibliotecas/tff.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;		None
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  f_time         10   55[COMRAM] struct .
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  4   13[COMRAM] unsigned long 
 20114 ;; Registers used:
 20115 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20116 ;; Tracked objects:
 20117 ;;		On entry : 3F/0
 20118 ;;		On exit  : 3F/1
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20121 ;;      Params:         4       0       0       0       0       0       0       0       0
 20122 ;;      Locals:        10       0       0       0       0       0       0       0       0
 20123 ;;      Temps:         38       0       0       0       0       0       0       0       0
 20124 ;;      Totals:        52       0       0       0       0       0       0       0       0
 20125 ;;Total ram usage:       52 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:    3
 20128 ;; This function calls:
 20129 ;;		_gps_ano
 20130 ;;		_gps_dia
 20131 ;;		_gps_hora
 20132 ;;		_gps_mes
 20133 ;;		_gps_minutos
 20134 ;;		_gps_segundos
 20135 ;; This function is called by:
 20136 ;;		_f_open
 20137 ;;		_f_sync
 20138 ;; This function uses a non-reentrant model
 20139 ;;
 20140                           
 20141                           	psect	text116
 20142  0034B0                     __ptext116:
 20143                           	callstack 0
 20144  0034B0                     _get_fattime:
 20145                           	callstack 22
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 20149                           
 20150                           ;incstack = 0
 20151  0034B0  ECAE  F02C         	call	_gps_hora	;wreg free
 20152  0034B4  0EFD               	movlw	253
 20153  0034B6  240A               	addwf	?_gps_hora^0,w,c
 20154  0034B8  6E38               	movwf	get_fattime@f_time^0,c
 20155  0034BA  0EFF               	movlw	255
 20156  0034BC  200B               	addwfc	(?_gps_hora+1)^0,w,c
 20157  0034BE  6E39               	movwf	(get_fattime@f_time+1)^0,c
 20158                           
 20159                           ;tff.c: 815: f_time.min = gps_minutos();
 20160  0034C0  ECF3  F02C         	call	_gps_minutos	;wreg free
 20161  0034C4  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 20162  0034C8  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 20163                           
 20164                           ;tff.c: 816: f_time.seg = gps_segundos();
 20165  0034CC  ECE2  F02C         	call	_gps_segundos	;wreg free
 20166  0034D0  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 20167  0034D4  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 20168                           
 20169                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 20170  0034D8  EC26  F02D         	call	_gps_ano	;wreg free
 20171  0034DC  0ED0               	movlw	208
 20172  0034DE  240A               	addwf	?_gps_ano^0,w,c
 20173  0034E0  6E40               	movwf	(get_fattime@f_time+8)^0,c
 20174  0034E2  0E07               	movlw	7
 20175  0034E4  200B               	addwfc	(?_gps_ano+1)^0,w,c
 20176  0034E6  6E41               	movwf	(get_fattime@f_time+9)^0,c
 20177                           
 20178                           ;tff.c: 818: f_time.mes = gps_mes();
 20179  0034E8  EC04  F02D         	call	_gps_mes	;wreg free
 20180  0034EC  500A               	movf	?_gps_mes^0,w,c
 20181  0034EE  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 20182                           
 20183                           ;tff.c: 819: f_time.dia = gps_dia();
 20184  0034F0  EC15  F02D         	call	_gps_dia	;wreg free
 20185  0034F4  500A               	movf	?_gps_dia^0,w,c
 20186  0034F6  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 20187                           
 20188                           ; BSR set to: 1
 20189                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 20190  0034F8  90D8               	bcf	status,0,c
 20191  0034FA  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 20192  0034FC  6E13               	movwf	(??_get_fattime+1)^0,c
 20193  0034FE  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 20194  003500  6E12               	movwf	??_get_fattime^0,c
 20195  003502  503A               	movf	(get_fattime@f_time+2)^0,w,c
 20196  003504  6E14               	movwf	(??_get_fattime+2)^0,c
 20197  003506  503B               	movf	(get_fattime@f_time+3)^0,w,c
 20198  003508  6E15               	movwf	(??_get_fattime+3)^0,c
 20199  00350A  6A16               	clrf	(??_get_fattime+4)^0,c
 20200  00350C  6A17               	clrf	(??_get_fattime+5)^0,c
 20201  00350E  0E05               	movlw	5
 20202  003510                     u13235:
 20203  003510  90D8               	bcf	status,0,c
 20204  003512  3614               	rlcf	(??_get_fattime+2)^0,f,c
 20205  003514  3615               	rlcf	(??_get_fattime+3)^0,f,c
 20206  003516  3616               	rlcf	(??_get_fattime+4)^0,f,c
 20207  003518  3617               	rlcf	(??_get_fattime+5)^0,f,c
 20208  00351A  2EE8               	decfsz	wreg,f,c
 20209  00351C  D7F9               	goto	u13235
 20210  00351E  5038               	movf	get_fattime@f_time^0,w,c
 20211  003520  6E18               	movwf	(??_get_fattime+6)^0,c
 20212  003522  5039               	movf	(get_fattime@f_time+1)^0,w,c
 20213  003524  6E19               	movwf	(??_get_fattime+7)^0,c
 20214  003526  6A1A               	clrf	(??_get_fattime+8)^0,c
 20215  003528  6A1B               	clrf	(??_get_fattime+9)^0,c
 20216  00352A  0E0B               	movlw	11
 20217  00352C                     u13245:
 20218  00352C  90D8               	bcf	status,0,c
 20219  00352E  3618               	rlcf	(??_get_fattime+6)^0,f,c
 20220  003530  3619               	rlcf	(??_get_fattime+7)^0,f,c
 20221  003532  361A               	rlcf	(??_get_fattime+8)^0,f,c
 20222  003534  361B               	rlcf	(??_get_fattime+9)^0,f,c
 20223  003536  2EE8               	decfsz	wreg,f,c
 20224  003538  D7F9               	goto	u13245
 20225  00353A  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 20226  00353E  6A1D               	clrf	(??_get_fattime+11)^0,c
 20227  003540  6A1E               	clrf	(??_get_fattime+12)^0,c
 20228  003542  6A1F               	clrf	(??_get_fattime+13)^0,c
 20229  003544  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 20230  003548  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 20231  00354C  6A1D               	clrf	(??_get_fattime+11)^0,c
 20232  00354E  6A1C               	clrf	(??_get_fattime+10)^0,c
 20233  003550  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 20234  003554  6A21               	clrf	(??_get_fattime+15)^0,c
 20235  003556  6A22               	clrf	(??_get_fattime+16)^0,c
 20236  003558  6A23               	clrf	(??_get_fattime+17)^0,c
 20237  00355A  0E15               	movlw	21
 20238  00355C                     u13255:
 20239  00355C  90D8               	bcf	status,0,c
 20240  00355E  3620               	rlcf	(??_get_fattime+14)^0,f,c
 20241  003560  3621               	rlcf	(??_get_fattime+15)^0,f,c
 20242  003562  3622               	rlcf	(??_get_fattime+16)^0,f,c
 20243  003564  3623               	rlcf	(??_get_fattime+17)^0,f,c
 20244  003566  2EE8               	decfsz	wreg,f,c
 20245  003568  D7F9               	goto	u13255
 20246  00356A  0EC4               	movlw	196
 20247  00356C  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 20248  00356E  6E24               	movwf	(??_get_fattime+18)^0,c
 20249  003570  0EFF               	movlw	255
 20250  003572  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 20251  003574  6E25               	movwf	(??_get_fattime+19)^0,c
 20252  003576  6A26               	clrf	(??_get_fattime+20)^0,c
 20253  003578  6A27               	clrf	(??_get_fattime+21)^0,c
 20254  00357A  0E19               	movlw	25
 20255  00357C                     u13265:
 20256  00357C  90D8               	bcf	status,0,c
 20257  00357E  3624               	rlcf	(??_get_fattime+18)^0,f,c
 20258  003580  3625               	rlcf	(??_get_fattime+19)^0,f,c
 20259  003582  3626               	rlcf	(??_get_fattime+20)^0,f,c
 20260  003584  3627               	rlcf	(??_get_fattime+21)^0,f,c
 20261  003586  2EE8               	decfsz	wreg,f,c
 20262  003588  D7F9               	goto	u13265
 20263  00358A  5020               	movf	(??_get_fattime+14)^0,w,c
 20264  00358C  1024               	iorwf	(??_get_fattime+18)^0,w,c
 20265  00358E  6E28               	movwf	(??_get_fattime+22)^0,c
 20266  003590  5021               	movf	(??_get_fattime+15)^0,w,c
 20267  003592  1025               	iorwf	(??_get_fattime+19)^0,w,c
 20268  003594  6E29               	movwf	(??_get_fattime+23)^0,c
 20269  003596  5022               	movf	(??_get_fattime+16)^0,w,c
 20270  003598  1026               	iorwf	(??_get_fattime+20)^0,w,c
 20271  00359A  6E2A               	movwf	(??_get_fattime+24)^0,c
 20272  00359C  5023               	movf	(??_get_fattime+17)^0,w,c
 20273  00359E  1027               	iorwf	(??_get_fattime+21)^0,w,c
 20274  0035A0  6E2B               	movwf	(??_get_fattime+25)^0,c
 20275  0035A2  501C               	movf	(??_get_fattime+10)^0,w,c
 20276  0035A4  1028               	iorwf	(??_get_fattime+22)^0,w,c
 20277  0035A6  6E2C               	movwf	(??_get_fattime+26)^0,c
 20278  0035A8  501D               	movf	(??_get_fattime+11)^0,w,c
 20279  0035AA  1029               	iorwf	(??_get_fattime+23)^0,w,c
 20280  0035AC  6E2D               	movwf	(??_get_fattime+27)^0,c
 20281  0035AE  501E               	movf	(??_get_fattime+12)^0,w,c
 20282  0035B0  102A               	iorwf	(??_get_fattime+24)^0,w,c
 20283  0035B2  6E2E               	movwf	(??_get_fattime+28)^0,c
 20284  0035B4  501F               	movf	(??_get_fattime+13)^0,w,c
 20285  0035B6  102B               	iorwf	(??_get_fattime+25)^0,w,c
 20286  0035B8  6E2F               	movwf	(??_get_fattime+29)^0,c
 20287  0035BA  5018               	movf	(??_get_fattime+6)^0,w,c
 20288  0035BC  102C               	iorwf	(??_get_fattime+26)^0,w,c
 20289  0035BE  6E30               	movwf	(??_get_fattime+30)^0,c
 20290  0035C0  5019               	movf	(??_get_fattime+7)^0,w,c
 20291  0035C2  102D               	iorwf	(??_get_fattime+27)^0,w,c
 20292  0035C4  6E31               	movwf	(??_get_fattime+31)^0,c
 20293  0035C6  501A               	movf	(??_get_fattime+8)^0,w,c
 20294  0035C8  102E               	iorwf	(??_get_fattime+28)^0,w,c
 20295  0035CA  6E32               	movwf	(??_get_fattime+32)^0,c
 20296  0035CC  501B               	movf	(??_get_fattime+9)^0,w,c
 20297  0035CE  102F               	iorwf	(??_get_fattime+29)^0,w,c
 20298  0035D0  6E33               	movwf	(??_get_fattime+33)^0,c
 20299  0035D2  5014               	movf	(??_get_fattime+2)^0,w,c
 20300  0035D4  1030               	iorwf	(??_get_fattime+30)^0,w,c
 20301  0035D6  6E34               	movwf	(??_get_fattime+34)^0,c
 20302  0035D8  5015               	movf	(??_get_fattime+3)^0,w,c
 20303  0035DA  1031               	iorwf	(??_get_fattime+31)^0,w,c
 20304  0035DC  6E35               	movwf	(??_get_fattime+35)^0,c
 20305  0035DE  5016               	movf	(??_get_fattime+4)^0,w,c
 20306  0035E0  1032               	iorwf	(??_get_fattime+32)^0,w,c
 20307  0035E2  6E36               	movwf	(??_get_fattime+36)^0,c
 20308  0035E4  5017               	movf	(??_get_fattime+5)^0,w,c
 20309  0035E6  1033               	iorwf	(??_get_fattime+33)^0,w,c
 20310  0035E8  6E37               	movwf	(??_get_fattime+37)^0,c
 20311  0035EA  5012               	movf	??_get_fattime^0,w,c
 20312  0035EC  1034               	iorwf	(??_get_fattime+34)^0,w,c
 20313  0035EE  6E0E               	movwf	?_get_fattime^0,c
 20314  0035F0  5013               	movf	(??_get_fattime+1)^0,w,c
 20315  0035F2  1035               	iorwf	(??_get_fattime+35)^0,w,c
 20316  0035F4  6E0F               	movwf	(?_get_fattime+1)^0,c
 20317  0035F6  0E00               	movlw	0
 20318  0035F8  1036               	iorwf	(??_get_fattime+36)^0,w,c
 20319  0035FA  6E10               	movwf	(?_get_fattime+2)^0,c
 20320  0035FC  0E00               	movlw	0
 20321  0035FE  1037               	iorwf	(??_get_fattime+37)^0,w,c
 20322  003600  6E11               	movwf	(?_get_fattime+3)^0,c
 20323                           
 20324                           ; BSR set to: 1
 20325  003602  0012               	return		;funcret
 20326  003604                     __end_of_get_fattime:
 20327                           	callstack 0
 20328                           
 20329 ;; *************** function _gps_segundos *****************
 20330 ;; Defined at:
 20331 ;;		line 530 in file "bibliotecas/GPS.c"
 20332 ;; Parameters:    Size  Location     Type
 20333 ;;		None
 20334 ;; Auto vars:     Size  Location     Type
 20335 ;;		None
 20336 ;; Return value:  Size  Location     Type
 20337 ;;                  2    9[COMRAM] unsigned int 
 20338 ;; Registers used:
 20339 ;;		wreg, status,2, status,0, prodl, prodh
 20340 ;; Tracked objects:
 20341 ;;		On entry : 3F/1
 20342 ;;		On exit  : 3F/1
 20343 ;;		Unchanged: 0/0
 20344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20345 ;;      Params:         2       0       0       0       0       0       0       0       0
 20346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20347 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20348 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20349 ;;Total ram usage:        4 bytes
 20350 ;; Hardware stack levels used:    1
 20351 ;; Hardware stack levels required when called:    2
 20352 ;; This function calls:
 20353 ;;		Nothing
 20354 ;; This function is called by:
 20355 ;;		_get_fattime
 20356 ;; This function uses a non-reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text117
 20360  0059C4                     __ptext117:
 20361                           	callstack 0
 20362  0059C4                     _gps_segundos:
 20363                           	callstack 22
 20364                           
 20365                           ; BSR set to: 1
 20366                           ;GPS.c: 532: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 20367                           
 20368                           ; BSR set to: 1
 20369                           ;incstack = 0
 20370  0059C4  51D5               	movf	(_rawTime+4)& (0+255),w,b
 20371  0059C6  0D0A               	mullw	10
 20372  0059C8  CFF3 F00C          	movff	prodl,??_gps_segundos
 20373  0059CC  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 20374  0059D0  51D6               	movf	(_rawTime+5)& (0+255),w,b
 20375  0059D2  260C               	addwf	??_gps_segundos^0,f,c
 20376  0059D4  0E00               	movlw	0
 20377  0059D6  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 20378  0059D8  0EF0               	movlw	240
 20379  0059DA  240C               	addwf	??_gps_segundos^0,w,c
 20380  0059DC  6E0A               	movwf	?_gps_segundos^0,c
 20381  0059DE  0EFD               	movlw	253
 20382  0059E0  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 20383  0059E2  6E0B               	movwf	(?_gps_segundos+1)^0,c
 20384                           
 20385                           ; BSR set to: 1
 20386  0059E4  0012               	return		;funcret
 20387  0059E6                     __end_of_gps_segundos:
 20388                           	callstack 0
 20389                           
 20390 ;; *************** function _gps_minutos *****************
 20391 ;; Defined at:
 20392 ;;		line 541 in file "bibliotecas/GPS.c"
 20393 ;; Parameters:    Size  Location     Type
 20394 ;;		None
 20395 ;; Auto vars:     Size  Location     Type
 20396 ;;		None
 20397 ;; Return value:  Size  Location     Type
 20398 ;;                  2    9[COMRAM] unsigned int 
 20399 ;; Registers used:
 20400 ;;		wreg, status,2, status,0, prodl, prodh
 20401 ;; Tracked objects:
 20402 ;;		On entry : 3F/1
 20403 ;;		On exit  : 3F/1
 20404 ;;		Unchanged: 0/0
 20405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20406 ;;      Params:         2       0       0       0       0       0       0       0       0
 20407 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20408 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20409 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20410 ;;Total ram usage:        4 bytes
 20411 ;; Hardware stack levels used:    1
 20412 ;; Hardware stack levels required when called:    2
 20413 ;; This function calls:
 20414 ;;		Nothing
 20415 ;; This function is called by:
 20416 ;;		_get_fattime
 20417 ;; This function uses a non-reentrant model
 20418 ;;
 20419                           
 20420                           	psect	text118
 20421  0059E6                     __ptext118:
 20422                           	callstack 0
 20423  0059E6                     _gps_minutos:
 20424                           	callstack 22
 20425                           
 20426                           ; BSR set to: 1
 20427                           ;GPS.c: 543: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 20428                           
 20429                           ; BSR set to: 1
 20430                           ;incstack = 0
 20431  0059E6  51D3               	movf	(_rawTime+2)& (0+255),w,b
 20432  0059E8  0D0A               	mullw	10
 20433  0059EA  CFF3 F00C          	movff	prodl,??_gps_minutos
 20434  0059EE  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 20435  0059F2  51D4               	movf	(_rawTime+3)& (0+255),w,b
 20436  0059F4  260C               	addwf	??_gps_minutos^0,f,c
 20437  0059F6  0E00               	movlw	0
 20438  0059F8  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 20439  0059FA  0EF0               	movlw	240
 20440  0059FC  240C               	addwf	??_gps_minutos^0,w,c
 20441  0059FE  6E0A               	movwf	?_gps_minutos^0,c
 20442  005A00  0EFD               	movlw	253
 20443  005A02  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 20444  005A04  6E0B               	movwf	(?_gps_minutos+1)^0,c
 20445                           
 20446                           ; BSR set to: 1
 20447  005A06  0012               	return		;funcret
 20448  005A08                     __end_of_gps_minutos:
 20449                           	callstack 0
 20450                           
 20451 ;; *************** function _gps_mes *****************
 20452 ;; Defined at:
 20453 ;;		line 578 in file "bibliotecas/GPS.c"
 20454 ;; Parameters:    Size  Location     Type
 20455 ;;		None
 20456 ;; Auto vars:     Size  Location     Type
 20457 ;;		None
 20458 ;; Return value:  Size  Location     Type
 20459 ;;                  2    9[COMRAM] unsigned int 
 20460 ;; Registers used:
 20461 ;;		wreg, status,2, status,0, prodl, prodh
 20462 ;; Tracked objects:
 20463 ;;		On entry : 3F/1
 20464 ;;		On exit  : 3F/1
 20465 ;;		Unchanged: 0/0
 20466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20467 ;;      Params:         2       0       0       0       0       0       0       0       0
 20468 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20469 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20470 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20471 ;;Total ram usage:        4 bytes
 20472 ;; Hardware stack levels used:    1
 20473 ;; Hardware stack levels required when called:    2
 20474 ;; This function calls:
 20475 ;;		Nothing
 20476 ;; This function is called by:
 20477 ;;		_get_fattime
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text119
 20482  005A08                     __ptext119:
 20483                           	callstack 0
 20484  005A08                     _gps_mes:
 20485                           	callstack 22
 20486                           
 20487                           ; BSR set to: 1
 20488                           ;GPS.c: 580: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 20489                           
 20490                           ; BSR set to: 1
 20491                           ;incstack = 0
 20492  005A08  51E6               	movf	(_rawDate+2)& (0+255),w,b
 20493  005A0A  0D0A               	mullw	10
 20494  005A0C  CFF3 F00C          	movff	prodl,??_gps_mes
 20495  005A10  CFF4 F00D          	movff	prodh,??_gps_mes+1
 20496  005A14  51E7               	movf	(_rawDate+3)& (0+255),w,b
 20497  005A16  260C               	addwf	??_gps_mes^0,f,c
 20498  005A18  0E00               	movlw	0
 20499  005A1A  220D               	addwfc	(??_gps_mes+1)^0,f,c
 20500  005A1C  0EF0               	movlw	240
 20501  005A1E  240C               	addwf	??_gps_mes^0,w,c
 20502  005A20  6E0A               	movwf	?_gps_mes^0,c
 20503  005A22  0EFD               	movlw	253
 20504  005A24  200D               	addwfc	(??_gps_mes+1)^0,w,c
 20505  005A26  6E0B               	movwf	(?_gps_mes+1)^0,c
 20506                           
 20507                           ; BSR set to: 1
 20508  005A28  0012               	return		;funcret
 20509  005A2A                     __end_of_gps_mes:
 20510                           	callstack 0
 20511                           
 20512 ;; *************** function _gps_hora *****************
 20513 ;; Defined at:
 20514 ;;		line 553 in file "bibliotecas/GPS.c"
 20515 ;; Parameters:    Size  Location     Type
 20516 ;;		None
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;		None
 20519 ;; Return value:  Size  Location     Type
 20520 ;;                  2    9[COMRAM] unsigned int 
 20521 ;; Registers used:
 20522 ;;		wreg, status,2, status,0, prodl, prodh
 20523 ;; Tracked objects:
 20524 ;;		On entry : 3F/0
 20525 ;;		On exit  : 3F/1
 20526 ;;		Unchanged: 0/0
 20527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20528 ;;      Params:         2       0       0       0       0       0       0       0       0
 20529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20530 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20531 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20532 ;;Total ram usage:        4 bytes
 20533 ;; Hardware stack levels used:    1
 20534 ;; Hardware stack levels required when called:    2
 20535 ;; This function calls:
 20536 ;;		Nothing
 20537 ;; This function is called by:
 20538 ;;		_get_fattime
 20539 ;; This function uses a non-reentrant model
 20540 ;;
 20541                           
 20542                           	psect	text120
 20543  00595C                     __ptext120:
 20544                           	callstack 0
 20545  00595C                     _gps_hora:
 20546                           	callstack 22
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;GPS.c: 555: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 20550                           
 20551                           ; BSR set to: 1
 20552                           ;incstack = 0
 20553  00595C  0101               	movlb	1	; () banked
 20554  00595E  51D1               	movf	_rawTime& (0+255),w,b
 20555  005960  0D0A               	mullw	10
 20556  005962  CFF3 F00C          	movff	prodl,??_gps_hora
 20557  005966  CFF4 F00D          	movff	prodh,??_gps_hora+1
 20558  00596A  51D2               	movf	(_rawTime+1)& (0+255),w,b
 20559  00596C  260C               	addwf	??_gps_hora^0,f,c
 20560  00596E  0E00               	movlw	0
 20561  005970  220D               	addwfc	(??_gps_hora+1)^0,f,c
 20562  005972  0EF0               	movlw	240
 20563  005974  240C               	addwf	??_gps_hora^0,w,c
 20564  005976  6E0A               	movwf	?_gps_hora^0,c
 20565  005978  0EFD               	movlw	253
 20566  00597A  200D               	addwfc	(??_gps_hora+1)^0,w,c
 20567  00597C  6E0B               	movwf	(?_gps_hora+1)^0,c
 20568                           
 20569                           ; BSR set to: 1
 20570  00597E  0012               	return		;funcret
 20571  005980                     __end_of_gps_hora:
 20572                           	callstack 0
 20573                           
 20574 ;; *************** function _gps_dia *****************
 20575 ;; Defined at:
 20576 ;;		line 565 in file "bibliotecas/GPS.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;		None
 20579 ;; Auto vars:     Size  Location     Type
 20580 ;;		None
 20581 ;; Return value:  Size  Location     Type
 20582 ;;                  2    9[COMRAM] unsigned int 
 20583 ;; Registers used:
 20584 ;;		wreg, status,2, status,0, prodl, prodh
 20585 ;; Tracked objects:
 20586 ;;		On entry : 3F/1
 20587 ;;		On exit  : 3F/1
 20588 ;;		Unchanged: 0/0
 20589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20590 ;;      Params:         2       0       0       0       0       0       0       0       0
 20591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20592 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20593 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20594 ;;Total ram usage:        4 bytes
 20595 ;; Hardware stack levels used:    1
 20596 ;; Hardware stack levels required when called:    2
 20597 ;; This function calls:
 20598 ;;		Nothing
 20599 ;; This function is called by:
 20600 ;;		_get_fattime
 20601 ;; This function uses a non-reentrant model
 20602 ;;
 20603                           
 20604                           	psect	text121
 20605  005A2A                     __ptext121:
 20606                           	callstack 0
 20607  005A2A                     _gps_dia:
 20608                           	callstack 22
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;GPS.c: 567: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 20612                           
 20613                           ; BSR set to: 1
 20614                           ;incstack = 0
 20615  005A2A  51E4               	movf	_rawDate& (0+255),w,b
 20616  005A2C  0D0A               	mullw	10
 20617  005A2E  CFF3 F00C          	movff	prodl,??_gps_dia
 20618  005A32  CFF4 F00D          	movff	prodh,??_gps_dia+1
 20619  005A36  51E5               	movf	(_rawDate+1)& (0+255),w,b
 20620  005A38  260C               	addwf	??_gps_dia^0,f,c
 20621  005A3A  0E00               	movlw	0
 20622  005A3C  220D               	addwfc	(??_gps_dia+1)^0,f,c
 20623  005A3E  0EF0               	movlw	240
 20624  005A40  240C               	addwf	??_gps_dia^0,w,c
 20625  005A42  6E0A               	movwf	?_gps_dia^0,c
 20626  005A44  0EFD               	movlw	253
 20627  005A46  200D               	addwfc	(??_gps_dia+1)^0,w,c
 20628  005A48  6E0B               	movwf	(?_gps_dia+1)^0,c
 20629                           
 20630                           ; BSR set to: 1
 20631  005A4A  0012               	return		;funcret
 20632  005A4C                     __end_of_gps_dia:
 20633                           	callstack 0
 20634                           
 20635 ;; *************** function _gps_ano *****************
 20636 ;; Defined at:
 20637 ;;		line 590 in file "bibliotecas/GPS.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;		None
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;		None
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  2    9[COMRAM] unsigned int 
 20644 ;; Registers used:
 20645 ;;		wreg, status,2, status,0, prodl, prodh
 20646 ;; Tracked objects:
 20647 ;;		On entry : 3F/1
 20648 ;;		On exit  : 3F/1
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20651 ;;      Params:         2       0       0       0       0       0       0       0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20653 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20654 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20655 ;;Total ram usage:        4 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; Hardware stack levels required when called:    2
 20658 ;; This function calls:
 20659 ;;		Nothing
 20660 ;; This function is called by:
 20661 ;;		_get_fattime
 20662 ;; This function uses a non-reentrant model
 20663 ;;
 20664                           
 20665                           	psect	text122
 20666  005A4C                     __ptext122:
 20667                           	callstack 0
 20668  005A4C                     _gps_ano:
 20669                           	callstack 22
 20670                           
 20671                           ; BSR set to: 1
 20672                           ;GPS.c: 592: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 20673                           
 20674                           ; BSR set to: 1
 20675                           ;incstack = 0
 20676  005A4C  51E8               	movf	(_rawDate+4)& (0+255),w,b
 20677  005A4E  0D0A               	mullw	10
 20678  005A50  CFF3 F00C          	movff	prodl,??_gps_ano
 20679  005A54  CFF4 F00D          	movff	prodh,??_gps_ano+1
 20680  005A58  51E9               	movf	(_rawDate+5)& (0+255),w,b
 20681  005A5A  260C               	addwf	??_gps_ano^0,f,c
 20682  005A5C  0E00               	movlw	0
 20683  005A5E  220D               	addwfc	(??_gps_ano+1)^0,f,c
 20684  005A60  0EF0               	movlw	240
 20685  005A62  240C               	addwf	??_gps_ano^0,w,c
 20686  005A64  6E0A               	movwf	?_gps_ano^0,c
 20687  005A66  0EFD               	movlw	253
 20688  005A68  200D               	addwfc	(??_gps_ano+1)^0,w,c
 20689  005A6A  6E0B               	movwf	(?_gps_ano+1)^0,c
 20690                           
 20691                           ; BSR set to: 1
 20692  005A6C  0012               	return		;funcret
 20693  005A6E                     __end_of_gps_ano:
 20694                           	callstack 0
 20695                           
 20696 ;; *************** function _data_nome *****************
 20697 ;; Defined at:
 20698 ;;		line 396 in file "bibliotecas/SDCard.c"
 20699 ;; Parameters:    Size  Location     Type
 20700 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 20701 ;;		 -> data(6), 
 20702 ;; Auto vars:     Size  Location     Type
 20703 ;;  i               1   11[COMRAM] unsigned char 
 20704 ;; Return value:  Size  Location     Type
 20705 ;;                  1    wreg      void 
 20706 ;; Registers used:
 20707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20708 ;; Tracked objects:
 20709 ;;		On entry : 3F/1
 20710 ;;		On exit  : 3F/1
 20711 ;;		Unchanged: 3F/0
 20712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20713 ;;      Params:         2       0       0       0       0       0       0       0       0
 20714 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20715 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20716 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20717 ;;Total ram usage:        3 bytes
 20718 ;; Hardware stack levels used:    1
 20719 ;; Hardware stack levels required when called:    2
 20720 ;; This function calls:
 20721 ;;		Nothing
 20722 ;; This function is called by:
 20723 ;;		_escrita_sdcard
 20724 ;; This function uses a non-reentrant model
 20725 ;;
 20726                           
 20727                           	psect	text123
 20728  0058BE                     __ptext123:
 20729                           	callstack 0
 20730  0058BE                     _data_nome:
 20731                           	callstack 24
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;SDCard.c: 398: unsigned char i;;SDCard.c: 399: for(i=0; i<4;i++)
 20735                           
 20736                           ; BSR set to: 1
 20737                           ;incstack = 0
 20738  0058BE  0E00               	movlw	0
 20739  0058C0  6E0C               	movwf	data_nome@i^0,c
 20740  0058C2                     l12392:
 20741                           
 20742                           ; BSR set to: 1
 20743                           ;SDCard.c: 400: {;SDCard.c: 401: filename[i] = *p_buff;
 20744  0058C2  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 20745  0058C6  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 20746  0058CA  0E56               	movlw	low _filename
 20747  0058CC  240C               	addwf	data_nome@i^0,w,c
 20748  0058CE  6EE1               	movwf	fsr1l,c
 20749  0058D0  6AE2               	clrf	fsr1h,c
 20750  0058D2  0E02               	movlw	high _filename
 20751  0058D4  22E2               	addwfc	fsr1h,f,c
 20752  0058D6  CFDF FFE7          	movff	indf2,indf1
 20753                           
 20754                           ; BSR set to: 1
 20755                           ;SDCard.c: 402: p_buff++;
 20756  0058DA  4A0A               	infsnz	data_nome@p_buff^0,f,c
 20757  0058DC  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 20758                           
 20759                           ; BSR set to: 1
 20760  0058DE  2A0C               	incf	data_nome@i^0,f,c
 20761                           
 20762                           ; BSR set to: 1
 20763  0058E0  0E03               	movlw	3
 20764  0058E2  640C               	cpfsgt	data_nome@i^0,c
 20765  0058E4  D7EE               	goto	l12392
 20766  0058E6  0012               	return	
 20767  0058E8                     __end_of_data_nome:
 20768                           	callstack 0
 20769                           
 20770 ;; *************** function _desliga_uart *****************
 20771 ;; Defined at:
 20772 ;;		line 223 in file "bibliotecas/uart.c"
 20773 ;; Parameters:    Size  Location     Type
 20774 ;;		None
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;		None
 20777 ;; Return value:  Size  Location     Type
 20778 ;;                  1    wreg      void 
 20779 ;; Registers used:
 20780 ;;		wreg, status,2
 20781 ;; Tracked objects:
 20782 ;;		On entry : 0/1
 20783 ;;		On exit  : 0/0
 20784 ;;		Unchanged: 0/0
 20785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20786 ;;      Params:         0       0       0       0       0       0       0       0       0
 20787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20789 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20790 ;;Total ram usage:        0 bytes
 20791 ;; Hardware stack levels used:    1
 20792 ;; Hardware stack levels required when called:    2
 20793 ;; This function calls:
 20794 ;;		Nothing
 20795 ;; This function is called by:
 20796 ;;		_grava_sd
 20797 ;; This function uses a non-reentrant model
 20798 ;;
 20799                           
 20800                           	psect	text124
 20801  005B82                     __ptext124:
 20802                           	callstack 0
 20803  005B82                     _desliga_uart:
 20804                           	callstack 25
 20805                           
 20806                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20807                           
 20808                           ; BSR set to: 1
 20809                           ;incstack = 0
 20810  005B82  8C94               	bsf	148,6,c	;volatile
 20811                           
 20812                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20813  005B84  8E94               	bsf	148,7,c	;volatile
 20814                           
 20815                           ;uart.c: 230: TXSTA = 0x00;
 20816  005B86  0E00               	movlw	0
 20817  005B88  6EAC               	movwf	172,c	;volatile
 20818                           
 20819                           ;uart.c: 232: RCSTA = 0x00;
 20820  005B8A  0E00               	movlw	0
 20821  005B8C  6EAB               	movwf	171,c	;volatile
 20822                           
 20823                           ;uart.c: 233: RCREG = 0x00;
 20824  005B8E  0E00               	movlw	0
 20825  005B90  6EAE               	movwf	174,c	;volatile
 20826  005B92  0012               	return		;funcret
 20827  005B94                     __end_of_desliga_uart:
 20828                           	callstack 0
 20829                           
 20830 ;; *************** function _desliga_SPI *****************
 20831 ;; Defined at:
 20832 ;;		line 75 in file "bibliotecas/SPI.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;		None
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;		None
 20837 ;; Return value:  Size  Location     Type
 20838 ;;                  1    wreg      void 
 20839 ;; Registers used:
 20840 ;;		wreg, status,2
 20841 ;; Tracked objects:
 20842 ;;		On entry : 0/1
 20843 ;;		On exit  : 0/0
 20844 ;;		Unchanged: 0/0
 20845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20846 ;;      Params:         0       0       0       0       0       0       0       0       0
 20847 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20849 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20850 ;;Total ram usage:        0 bytes
 20851 ;; Hardware stack levels used:    1
 20852 ;; Hardware stack levels required when called:    2
 20853 ;; This function calls:
 20854 ;;		Nothing
 20855 ;; This function is called by:
 20856 ;;		_grava_sd
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text125
 20861  005BC6                     __ptext125:
 20862                           	callstack 0
 20863  005BC6                     _desliga_SPI:
 20864                           	callstack 25
 20865                           
 20866                           ;SPI.c: 77: SSPSTAT = 0x00;
 20867                           
 20868                           ;incstack = 0
 20869  005BC6  0E00               	movlw	0
 20870  005BC8  6EC7               	movwf	199,c	;volatile
 20871                           
 20872                           ;SPI.c: 78: SSPCON1 = 0x00;
 20873  005BCA  0E00               	movlw	0
 20874  005BCC  6EC6               	movwf	198,c	;volatile
 20875                           
 20876                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20877  005BCE  9AC6               	bcf	198,5,c	;volatile
 20878                           
 20879                           ;SPI.c: 80: SSPBUF = 0x00;
 20880  005BD0  0E00               	movlw	0
 20881  005BD2  6EC9               	movwf	201,c	;volatile
 20882  005BD4  0012               	return		;funcret
 20883  005BD6                     __end_of_desliga_SPI:
 20884                           	callstack 0
 20885                           
 20886 ;; *************** function _dados_gps_to_sd *****************
 20887 ;; Defined at:
 20888 ;;		line 702 in file "bibliotecas/GPS.c"
 20889 ;; Parameters:    Size  Location     Type
 20890 ;;		None
 20891 ;; Auto vars:     Size  Location     Type
 20892 ;;		None
 20893 ;; Return value:  Size  Location     Type
 20894 ;;                  1    wreg      void 
 20895 ;; Registers used:
 20896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20897 ;; Tracked objects:
 20898 ;;		On entry : 0/1
 20899 ;;		On exit  : 0/0
 20900 ;;		Unchanged: 0/0
 20901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20902 ;;      Params:         0       0       0       0       0       0       0       0       0
 20903 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20904 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20905 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20906 ;;Total ram usage:        0 bytes
 20907 ;; Hardware stack levels used:    1
 20908 ;; Hardware stack levels required when called:    4
 20909 ;; This function calls:
 20910 ;;		_monta_sd
 20911 ;; This function is called by:
 20912 ;;		_disparo_gravacao
 20913 ;; This function uses a non-reentrant model
 20914 ;;
 20915                           
 20916                           	psect	text126
 20917  004E58                     __ptext126:
 20918                           	callstack 0
 20919  004E58                     _dados_gps_to_sd:
 20920                           	callstack 24
 20921                           
 20922                           ;GPS.c: 705: monta_sd(0, rawTime);
 20923                           
 20924                           ;incstack = 0
 20925  004E58  0ED1               	movlw	low _rawTime
 20926  004E5A  6E10               	movwf	monta_sd@dado^0,c
 20927  004E5C  0E01               	movlw	high _rawTime
 20928  004E5E  6E11               	movwf	(monta_sd@dado+1)^0,c
 20929  004E60  0E00               	movlw	0
 20930  004E62  EC03  F00B         	call	_monta_sd
 20931                           
 20932                           ;GPS.c: 706: monta_sd(1, rawDate);
 20933  004E66  0EE4               	movlw	low _rawDate
 20934  004E68  6E10               	movwf	monta_sd@dado^0,c
 20935  004E6A  0E01               	movlw	high _rawDate
 20936  004E6C  6E11               	movwf	(monta_sd@dado+1)^0,c
 20937  004E6E  0E01               	movlw	1
 20938  004E70  EC03  F00B         	call	_monta_sd
 20939                           
 20940                           ;GPS.c: 707: monta_sd(2, rawLatitude);
 20941  004E74  0EBE               	movlw	low _rawLatitude
 20942  004E76  6E10               	movwf	monta_sd@dado^0,c
 20943  004E78  0E01               	movlw	high _rawLatitude
 20944  004E7A  6E11               	movwf	(monta_sd@dado+1)^0,c
 20945  004E7C  0E02               	movlw	2
 20946  004E7E  EC03  F00B         	call	_monta_sd
 20947                           
 20948                           ;GPS.c: 708: monta_sd(3, rawLongitude);
 20949  004E82  0EA5               	movlw	low _rawLongitude
 20950  004E84  6E10               	movwf	monta_sd@dado^0,c
 20951  004E86  0E01               	movlw	high _rawLongitude
 20952  004E88  6E11               	movwf	(monta_sd@dado+1)^0,c
 20953  004E8A  0E03               	movlw	3
 20954  004E8C  EC03  F00B         	call	_monta_sd
 20955                           
 20956                           ;GPS.c: 709: monta_sd(5, rawTime);
 20957  004E90  0ED1               	movlw	low _rawTime
 20958  004E92  6E10               	movwf	monta_sd@dado^0,c
 20959  004E94  0E01               	movlw	high _rawTime
 20960  004E96  6E11               	movwf	(monta_sd@dado+1)^0,c
 20961  004E98  0E05               	movlw	5
 20962  004E9A  EC03  F00B         	call	_monta_sd
 20963                           
 20964                           ;GPS.c: 710: monta_sd(6, rawDate);
 20965  004E9E  0EE4               	movlw	low _rawDate
 20966  004EA0  6E10               	movwf	monta_sd@dado^0,c
 20967  004EA2  0E01               	movlw	high _rawDate
 20968  004EA4  6E11               	movwf	(monta_sd@dado+1)^0,c
 20969  004EA6  0E06               	movlw	6
 20970  004EA8  EC03  F00B         	call	_monta_sd
 20971                           
 20972                           ;GPS.c: 711: monta_sd(7, rawSpeed);
 20973  004EAC  0E6A               	movlw	low _rawSpeed
 20974  004EAE  6E10               	movwf	monta_sd@dado^0,c
 20975  004EB0  0E02               	movlw	high _rawSpeed
 20976  004EB2  6E11               	movwf	(monta_sd@dado+1)^0,c
 20977  004EB4  0E07               	movlw	7
 20978  004EB6  EC03  F00B         	call	_monta_sd
 20979  004EBA  0012               	return		;funcret
 20980  004EBC                     __end_of_dados_gps_to_sd:
 20981                           	callstack 0
 20982                           
 20983 ;; *************** function _monta_sd *****************
 20984 ;; Defined at:
 20985 ;;		line 305 in file "bibliotecas/SDCard.c"
 20986 ;; Parameters:    Size  Location     Type
 20987 ;;  index           1    wreg     unsigned char 
 20988 ;;  dado            2   15[COMRAM] PTR unsigned char 
 20989 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 20990 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 20991 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 20992 ;; Auto vars:     Size  Location     Type
 20993 ;;  index           1   18[COMRAM] unsigned char 
 20994 ;;  i               1   19[COMRAM] unsigned char 
 20995 ;;  size            1    0        unsigned char 
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21000 ;; Tracked objects:
 21001 ;;		On entry : 0/2
 21002 ;;		On exit  : 0/0
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21005 ;;      Params:         2       0       0       0       0       0       0       0       0
 21006 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21008 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21009 ;;Total ram usage:        5 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; Hardware stack levels required when called:    3
 21012 ;; This function calls:
 21013 ;;		_strlen
 21014 ;; This function is called by:
 21015 ;;		_dados_gps_to_sd
 21016 ;;		_verifica_fence
 21017 ;;		_disparo_gravacao
 21018 ;; This function uses a non-reentrant model
 21019 ;;
 21020                           
 21021                           	psect	text127
 21022  001606                     __ptext127:
 21023                           	callstack 0
 21024  001606                     _monta_sd:
 21025                           	callstack 24
 21026                           
 21027                           ;incstack = 0
 21028                           ;monta_sd@index stored from wreg
 21029  001606  6E13               	movwf	monta_sd@index^0,c
 21030  001608  C010  F00A         	movff	monta_sd@dado,strlen@s
 21031  00160C  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21032  001610  EC77  F02A         	call	_strlen	;wreg free
 21033                           
 21034                           ;SDCard.c: 309: switch(index)
 21035  001614  D165               	goto	l12922
 21036  001616                     l12808:
 21037                           
 21038                           ;SDCard.c: 312: for(i=0; i<7;i++)
 21039  001616  0E00               	movlw	0
 21040  001618  6E14               	movwf	monta_sd@i^0,c
 21041  00161A                     l12814:
 21042                           
 21043                           ;SDCard.c: 313: {;SDCard.c: 314: if(*dado != '\0')
 21044  00161A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21045  00161E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21046  001622  6AF8               	clrf	tblptru,c
 21047  001624  0E07               	movlw	(high __ramtop+-1)
 21048  001626  64F7               	cpfsgt	tblptrh,c
 21049  001628  D003               	bra	u15217
 21050  00162A  0008               	tblrd		*
 21051  00162C  50F5               	movf	tablat,w,c
 21052  00162E  D005               	bra	u15210
 21053  001630                     u15217:
 21054  001630  CFF6 FFE1          	movff	tblptrl,fsr1l
 21055  001634  CFF7 FFE2          	movff	tblptrh,fsr1h
 21056  001638  50E7               	movf	indf1,w,c
 21057  00163A                     u15210:
 21058  00163A  0900               	iorlw	0
 21059  00163C  B4D8               	btfsc	status,2,c
 21060  00163E  D017               	goto	l12818
 21061                           
 21062                           ;SDCard.c: 315: {;SDCard.c: 316: hora[i] = *dado;
 21063  001640  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21064  001644  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21065  001648  6AF8               	clrf	tblptru,c
 21066  00164A  0ECA               	movlw	low _hora
 21067  00164C  2414               	addwf	monta_sd@i^0,w,c
 21068  00164E  6ED9               	movwf	fsr2l,c
 21069  001650  6ADA               	clrf	fsr2h,c
 21070  001652  0E01               	movlw	high _hora
 21071  001654  22DA               	addwfc	fsr2h,f,c
 21072  001656  0E07               	movlw	(high __ramtop+-1)
 21073  001658  64F7               	cpfsgt	tblptrh,c
 21074  00165A  D003               	bra	u15237
 21075  00165C  0008               	tblrd		*
 21076  00165E  50F5               	movf	tablat,w,c
 21077  001660  D005               	bra	u15230
 21078  001662                     u15237:
 21079  001662  CFF6 FFE1          	movff	tblptrl,fsr1l
 21080  001666  CFF7 FFE2          	movff	tblptrh,fsr1h
 21081  00166A  50E7               	movf	indf1,w,c
 21082  00166C                     u15230:
 21083  00166C  6EDF               	movwf	indf2,c
 21084  00166E                     l12818:
 21085                           
 21086                           ;SDCard.c: 317: };SDCard.c: 318: dado++;
 21087  00166E  4A10               	infsnz	monta_sd@dado^0,f,c
 21088  001670  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21089  001672  2A14               	incf	monta_sd@i^0,f,c
 21090  001674  0E06               	movlw	6
 21091  001676  6414               	cpfsgt	monta_sd@i^0,c
 21092  001678  D7D0               	goto	l12814
 21093  00167A  0012               	return	
 21094  00167C                     l12824:
 21095                           
 21096                           ;SDCard.c: 323: for(i=0; i<6;i++)
 21097  00167C  0E00               	movlw	0
 21098  00167E  6E14               	movwf	monta_sd@i^0,c
 21099  001680                     l12830:
 21100                           
 21101                           ;SDCard.c: 324: {;SDCard.c: 325: if(*dado != '\0')
 21102  001680  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21103  001684  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21104  001688  6AF8               	clrf	tblptru,c
 21105  00168A  0E07               	movlw	(high __ramtop+-1)
 21106  00168C  64F7               	cpfsgt	tblptrh,c
 21107  00168E  D003               	bra	u15257
 21108  001690  0008               	tblrd		*
 21109  001692  50F5               	movf	tablat,w,c
 21110  001694  D005               	bra	u15250
 21111  001696                     u15257:
 21112  001696  CFF6 FFE1          	movff	tblptrl,fsr1l
 21113  00169A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21114  00169E  50E7               	movf	indf1,w,c
 21115  0016A0                     u15250:
 21116  0016A0  0900               	iorlw	0
 21117  0016A2  B4D8               	btfsc	status,2,c
 21118  0016A4  D017               	goto	l12834
 21119                           
 21120                           ;SDCard.c: 326: {;SDCard.c: 327: data[i] = *dado;
 21121  0016A6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21122  0016AA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21123  0016AE  6AF8               	clrf	tblptru,c
 21124  0016B0  0ED8               	movlw	low _data
 21125  0016B2  2414               	addwf	monta_sd@i^0,w,c
 21126  0016B4  6ED9               	movwf	fsr2l,c
 21127  0016B6  6ADA               	clrf	fsr2h,c
 21128  0016B8  0E01               	movlw	high _data
 21129  0016BA  22DA               	addwfc	fsr2h,f,c
 21130  0016BC  0E07               	movlw	(high __ramtop+-1)
 21131  0016BE  64F7               	cpfsgt	tblptrh,c
 21132  0016C0  D003               	bra	u15277
 21133  0016C2  0008               	tblrd		*
 21134  0016C4  50F5               	movf	tablat,w,c
 21135  0016C6  D005               	bra	u15270
 21136  0016C8                     u15277:
 21137  0016C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21138  0016CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21139  0016D0  50E7               	movf	indf1,w,c
 21140  0016D2                     u15270:
 21141  0016D2  6EDF               	movwf	indf2,c
 21142  0016D4                     l12834:
 21143                           
 21144                           ;SDCard.c: 328: };SDCard.c: 329: dado++;
 21145  0016D4  4A10               	infsnz	monta_sd@dado^0,f,c
 21146  0016D6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21147  0016D8  2A14               	incf	monta_sd@i^0,f,c
 21148  0016DA  0E05               	movlw	5
 21149  0016DC  6414               	cpfsgt	monta_sd@i^0,c
 21150  0016DE  D7D0               	goto	l12830
 21151  0016E0  0012               	return	
 21152  0016E2                     l12840:
 21153                           
 21154                           ;SDCard.c: 334: for(i=0; i<11;i++)
 21155  0016E2  0E00               	movlw	0
 21156  0016E4  6E14               	movwf	monta_sd@i^0,c
 21157  0016E6                     l12846:
 21158                           
 21159                           ;SDCard.c: 335: {;SDCard.c: 336: if(*dado != '\0')
 21160  0016E6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21161  0016EA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21162  0016EE  6AF8               	clrf	tblptru,c
 21163  0016F0  0E07               	movlw	(high __ramtop+-1)
 21164  0016F2  64F7               	cpfsgt	tblptrh,c
 21165  0016F4  D003               	bra	u15297
 21166  0016F6  0008               	tblrd		*
 21167  0016F8  50F5               	movf	tablat,w,c
 21168  0016FA  D005               	bra	u15290
 21169  0016FC                     u15297:
 21170  0016FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21171  001700  CFF7 FFE2          	movff	tblptrh,fsr1h
 21172  001704  50E7               	movf	indf1,w,c
 21173  001706                     u15290:
 21174  001706  0900               	iorlw	0
 21175  001708  B4D8               	btfsc	status,2,c
 21176  00170A  D017               	goto	l12850
 21177                           
 21178                           ;SDCard.c: 337: {;SDCard.c: 338: lt[i] = *dado;
 21179  00170C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21180  001710  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21181  001714  6AF8               	clrf	tblptru,c
 21182  001716  0EB2               	movlw	low _lt
 21183  001718  2414               	addwf	monta_sd@i^0,w,c
 21184  00171A  6ED9               	movwf	fsr2l,c
 21185  00171C  6ADA               	clrf	fsr2h,c
 21186  00171E  0E01               	movlw	high _lt
 21187  001720  22DA               	addwfc	fsr2h,f,c
 21188  001722  0E07               	movlw	(high __ramtop+-1)
 21189  001724  64F7               	cpfsgt	tblptrh,c
 21190  001726  D003               	bra	u15317
 21191  001728  0008               	tblrd		*
 21192  00172A  50F5               	movf	tablat,w,c
 21193  00172C  D005               	bra	u15310
 21194  00172E                     u15317:
 21195  00172E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21196  001732  CFF7 FFE2          	movff	tblptrh,fsr1h
 21197  001736  50E7               	movf	indf1,w,c
 21198  001738                     u15310:
 21199  001738  6EDF               	movwf	indf2,c
 21200  00173A                     l12850:
 21201                           
 21202                           ;SDCard.c: 339: };SDCard.c: 340: dado++;
 21203  00173A  4A10               	infsnz	monta_sd@dado^0,f,c
 21204  00173C  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21205  00173E  2A14               	incf	monta_sd@i^0,f,c
 21206  001740  0E0A               	movlw	10
 21207  001742  6414               	cpfsgt	monta_sd@i^0,c
 21208  001744  D7D0               	goto	l12846
 21209  001746  0012               	return	
 21210  001748                     l12856:
 21211                           
 21212                           ;SDCard.c: 345: for(i=0; i<12;i++)
 21213  001748  0E00               	movlw	0
 21214  00174A  6E14               	movwf	monta_sd@i^0,c
 21215  00174C                     l12862:
 21216                           
 21217                           ;SDCard.c: 346: {;SDCard.c: 347: if(*dado != '\0')
 21218  00174C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21219  001750  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21220  001754  6AF8               	clrf	tblptru,c
 21221  001756  0E07               	movlw	(high __ramtop+-1)
 21222  001758  64F7               	cpfsgt	tblptrh,c
 21223  00175A  D003               	bra	u15337
 21224  00175C  0008               	tblrd		*
 21225  00175E  50F5               	movf	tablat,w,c
 21226  001760  D005               	bra	u15330
 21227  001762                     u15337:
 21228  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
 21229  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
 21230  00176A  50E7               	movf	indf1,w,c
 21231  00176C                     u15330:
 21232  00176C  0900               	iorlw	0
 21233  00176E  B4D8               	btfsc	status,2,c
 21234  001770  D017               	goto	l12866
 21235                           
 21236                           ;SDCard.c: 348: {;SDCard.c: 349: lo[i] = *dado;
 21237  001772  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21238  001776  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21239  00177A  6AF8               	clrf	tblptru,c
 21240  00177C  0E98               	movlw	low _lo
 21241  00177E  2414               	addwf	monta_sd@i^0,w,c
 21242  001780  6ED9               	movwf	fsr2l,c
 21243  001782  6ADA               	clrf	fsr2h,c
 21244  001784  0E01               	movlw	high _lo
 21245  001786  22DA               	addwfc	fsr2h,f,c
 21246  001788  0E07               	movlw	(high __ramtop+-1)
 21247  00178A  64F7               	cpfsgt	tblptrh,c
 21248  00178C  D003               	bra	u15357
 21249  00178E  0008               	tblrd		*
 21250  001790  50F5               	movf	tablat,w,c
 21251  001792  D005               	bra	u15350
 21252  001794                     u15357:
 21253  001794  CFF6 FFE1          	movff	tblptrl,fsr1l
 21254  001798  CFF7 FFE2          	movff	tblptrh,fsr1h
 21255  00179C  50E7               	movf	indf1,w,c
 21256  00179E                     u15350:
 21257  00179E  6EDF               	movwf	indf2,c
 21258  0017A0                     l12866:
 21259                           
 21260                           ;SDCard.c: 350: };SDCard.c: 351: dado++;
 21261  0017A0  4A10               	infsnz	monta_sd@dado^0,f,c
 21262  0017A2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21263  0017A4  2A14               	incf	monta_sd@i^0,f,c
 21264  0017A6  0E0B               	movlw	11
 21265  0017A8  6414               	cpfsgt	monta_sd@i^0,c
 21266  0017AA  D7D0               	goto	l12862
 21267  0017AC  0012               	return	
 21268  0017AE                     l12872:
 21269                           
 21270                           ;SDCard.c: 357: fence = *dado;
 21271  0017AE  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21272  0017B2  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21273  0017B6  6AF8               	clrf	tblptru,c
 21274  0017B8  0E07               	movlw	(high __ramtop+-1)
 21275  0017BA  64F7               	cpfsgt	tblptrh,c
 21276  0017BC  D003               	bra	u15377
 21277  0017BE  0008               	tblrd		*
 21278  0017C0  50F5               	movf	tablat,w,c
 21279  0017C2  D005               	bra	u15370
 21280  0017C4                     u15377:
 21281  0017C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21282  0017C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21283  0017CC  50E7               	movf	indf1,w,c
 21284  0017CE                     u15370:
 21285  0017CE  0100               	movlb	0	; () banked
 21286  0017D0  6FF5               	movwf	_fence& (0+255),b
 21287                           
 21288                           ;SDCard.c: 358: break;
 21289  0017D2  0012               	return	
 21290  0017D4                     l12874:
 21291                           
 21292                           ;SDCard.c: 361: for(i=0; i<4;i++)
 21293  0017D4  0E00               	movlw	0
 21294  0017D6  6E14               	movwf	monta_sd@i^0,c
 21295  0017D8                     l12880:
 21296                           
 21297                           ;SDCard.c: 362: {;SDCard.c: 363: string_dado.hora_name[i] = *dado;
 21298  0017D8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21299  0017DC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21300  0017E0  6AF8               	clrf	tblptru,c
 21301  0017E2  0E14               	movlw	low (_string_dado+20)
 21302  0017E4  2414               	addwf	monta_sd@i^0,w,c
 21303  0017E6  6ED9               	movwf	fsr2l,c
 21304  0017E8  6ADA               	clrf	fsr2h,c
 21305  0017EA  0E02               	movlw	high (_string_dado+20)
 21306  0017EC  22DA               	addwfc	fsr2h,f,c
 21307  0017EE  0E07               	movlw	(high __ramtop+-1)
 21308  0017F0  64F7               	cpfsgt	tblptrh,c
 21309  0017F2  D003               	bra	u15387
 21310  0017F4  0008               	tblrd		*
 21311  0017F6  50F5               	movf	tablat,w,c
 21312  0017F8  D005               	bra	u15380
 21313  0017FA                     u15387:
 21314  0017FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21315  0017FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21316  001802  50E7               	movf	indf1,w,c
 21317  001804                     u15380:
 21318  001804  6EDF               	movwf	indf2,c
 21319                           
 21320                           ;SDCard.c: 364: dado++;
 21321  001806  4A10               	infsnz	monta_sd@dado^0,f,c
 21322  001808  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21323  00180A  2A14               	incf	monta_sd@i^0,f,c
 21324  00180C  0E03               	movlw	3
 21325  00180E  6414               	cpfsgt	monta_sd@i^0,c
 21326  001810  D7E3               	goto	l12880
 21327  001812  0012               	return	
 21328  001814                     l12888:
 21329                           
 21330                           ;SDCard.c: 370: for(i=0; i<4;i++)
 21331  001814  0E00               	movlw	0
 21332  001816  6E14               	movwf	monta_sd@i^0,c
 21333  001818                     l12894:
 21334                           
 21335                           ;SDCard.c: 371: {;SDCard.c: 372: string_dado.data_name[i] = *dado;
 21336  001818  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21337  00181C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21338  001820  6AF8               	clrf	tblptru,c
 21339  001822  0E12               	movlw	low (_string_dado+18)
 21340  001824  2414               	addwf	monta_sd@i^0,w,c
 21341  001826  6ED9               	movwf	fsr2l,c
 21342  001828  6ADA               	clrf	fsr2h,c
 21343  00182A  0E02               	movlw	high (_string_dado+18)
 21344  00182C  22DA               	addwfc	fsr2h,f,c
 21345  00182E  0E07               	movlw	(high __ramtop+-1)
 21346  001830  64F7               	cpfsgt	tblptrh,c
 21347  001832  D003               	bra	u15407
 21348  001834  0008               	tblrd		*
 21349  001836  50F5               	movf	tablat,w,c
 21350  001838  D005               	bra	u15400
 21351  00183A                     u15407:
 21352  00183A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21353  00183E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21354  001842  50E7               	movf	indf1,w,c
 21355  001844                     u15400:
 21356  001844  6EDF               	movwf	indf2,c
 21357                           
 21358                           ;SDCard.c: 373: dado++;
 21359  001846  4A10               	infsnz	monta_sd@dado^0,f,c
 21360  001848  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21361  00184A  2A14               	incf	monta_sd@i^0,f,c
 21362  00184C  0E03               	movlw	3
 21363  00184E  6414               	cpfsgt	monta_sd@i^0,c
 21364  001850  D7E3               	goto	l12894
 21365  001852  0012               	return	
 21366  001854                     l12902:
 21367                           
 21368                           ;SDCard.c: 378: for(i=0; i<6;i++)
 21369  001854  0E00               	movlw	0
 21370  001856  6E14               	movwf	monta_sd@i^0,c
 21371  001858                     l12908:
 21372                           
 21373                           ;SDCard.c: 379: {;SDCard.c: 380: if(*dado != ' ' && *dado != '\0')
 21374  001858  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21375  00185C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21376  001860  6AF8               	clrf	tblptru,c
 21377  001862  0E07               	movlw	(high __ramtop+-1)
 21378  001864  64F7               	cpfsgt	tblptrh,c
 21379  001866  D003               	bra	u15427
 21380  001868  0008               	tblrd		*
 21381  00186A  50F5               	movf	tablat,w,c
 21382  00186C  D005               	bra	u15420
 21383  00186E                     u15427:
 21384  00186E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21385  001872  CFF7 FFE2          	movff	tblptrh,fsr1h
 21386  001876  50E7               	movf	indf1,w,c
 21387  001878                     u15420:
 21388  001878  0A20               	xorlw	32
 21389  00187A  B4D8               	btfsc	status,2,c
 21390  00187C  D02A               	goto	l12914
 21391  00187E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21392  001882  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21393  001886  6AF8               	clrf	tblptru,c
 21394  001888  0E07               	movlw	(high __ramtop+-1)
 21395  00188A  64F7               	cpfsgt	tblptrh,c
 21396  00188C  D003               	bra	u15447
 21397  00188E  0008               	tblrd		*
 21398  001890  50F5               	movf	tablat,w,c
 21399  001892  D005               	bra	u15440
 21400  001894                     u15447:
 21401  001894  CFF6 FFE1          	movff	tblptrl,fsr1l
 21402  001898  CFF7 FFE2          	movff	tblptrh,fsr1h
 21403  00189C  50E7               	movf	indf1,w,c
 21404  00189E                     u15440:
 21405  00189E  0900               	iorlw	0
 21406  0018A0  B4D8               	btfsc	status,2,c
 21407  0018A2  D017               	goto	l12914
 21408                           
 21409                           ;SDCard.c: 381: {;SDCard.c: 382: vel[i] = *dado;
 21410  0018A4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21411  0018A8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21412  0018AC  6AF8               	clrf	tblptru,c
 21413  0018AE  0EDE               	movlw	low _vel
 21414  0018B0  2414               	addwf	monta_sd@i^0,w,c
 21415  0018B2  6ED9               	movwf	fsr2l,c
 21416  0018B4  6ADA               	clrf	fsr2h,c
 21417  0018B6  0E01               	movlw	high _vel
 21418  0018B8  22DA               	addwfc	fsr2h,f,c
 21419  0018BA  0E07               	movlw	(high __ramtop+-1)
 21420  0018BC  64F7               	cpfsgt	tblptrh,c
 21421  0018BE  D003               	bra	u15467
 21422  0018C0  0008               	tblrd		*
 21423  0018C2  50F5               	movf	tablat,w,c
 21424  0018C4  D005               	bra	u15460
 21425  0018C6                     u15467:
 21426  0018C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21427  0018CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21428  0018CE  50E7               	movf	indf1,w,c
 21429  0018D0                     u15460:
 21430  0018D0  6EDF               	movwf	indf2,c
 21431  0018D2                     l12914:
 21432                           
 21433                           ;SDCard.c: 383: };SDCard.c: 385: dado++;
 21434  0018D2  4A10               	infsnz	monta_sd@dado^0,f,c
 21435  0018D4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21436  0018D6  2A14               	incf	monta_sd@i^0,f,c
 21437  0018D8  0E05               	movlw	5
 21438  0018DA  6414               	cpfsgt	monta_sd@i^0,c
 21439  0018DC  D7BD               	goto	l12908
 21440  0018DE  0012               	return	
 21441  0018E0                     l12922:
 21442  0018E0  5013               	movf	monta_sd@index^0,w,c
 21443                           
 21444                           ; Switch size 1, requested type "simple"
 21445                           ; Number of cases is 8, Range of values is 0 to 7
 21446                           ; switch strategies available:
 21447                           ; Name         Instructions Cycles
 21448                           ; simple_byte           25    13 (average)
 21449                           ;	Chosen strategy is simple_byte
 21450  0018E2  0A00               	xorlw	0	; case 0
 21451  0018E4  B4D8               	btfsc	status,2,c
 21452  0018E6  D697               	goto	l12808
 21453  0018E8  0A01               	xorlw	1	; case 1
 21454  0018EA  B4D8               	btfsc	status,2,c
 21455  0018EC  D6C7               	goto	l12824
 21456  0018EE  0A03               	xorlw	3	; case 2
 21457  0018F0  B4D8               	btfsc	status,2,c
 21458  0018F2  D6F7               	goto	l12840
 21459  0018F4  0A01               	xorlw	1	; case 3
 21460  0018F6  B4D8               	btfsc	status,2,c
 21461  0018F8  D727               	goto	l12856
 21462  0018FA  0A07               	xorlw	7	; case 4
 21463  0018FC  B4D8               	btfsc	status,2,c
 21464  0018FE  D757               	goto	l12872
 21465  001900  0A01               	xorlw	1	; case 5
 21466  001902  B4D8               	btfsc	status,2,c
 21467  001904  D767               	goto	l12874
 21468  001906  0A03               	xorlw	3	; case 6
 21469  001908  B4D8               	btfsc	status,2,c
 21470  00190A  D784               	goto	l12888
 21471  00190C  0A01               	xorlw	1	; case 7
 21472  00190E  A4D8               	btfss	status,2,c
 21473  001910  0012               	return	
 21474  001912  D7A0               	goto	l12902
 21475  001914                     __end_of_monta_sd:
 21476                           	callstack 0
 21477                           
 21478 ;; *************** function _strlen *****************
 21479 ;; Defined at:
 21480 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21481 ;; Parameters:    Size  Location     Type
 21482 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21483 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21484 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21485 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21486 ;; Auto vars:     Size  Location     Type
 21487 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21488 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21489 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21490 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21491 ;; Return value:  Size  Location     Type
 21492 ;;                  2    9[COMRAM] unsigned int 
 21493 ;; Registers used:
 21494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21495 ;; Tracked objects:
 21496 ;;		On entry : 0/2
 21497 ;;		On exit  : 0/0
 21498 ;;		Unchanged: 0/0
 21499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21500 ;;      Params:         2       0       0       0       0       0       0       0       0
 21501 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21503 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21504 ;;Total ram usage:        4 bytes
 21505 ;; Hardware stack levels used:    1
 21506 ;; Hardware stack levels required when called:    2
 21507 ;; This function calls:
 21508 ;;		Nothing
 21509 ;; This function is called by:
 21510 ;;		_monta_sd
 21511 ;; This function uses a non-reentrant model
 21512 ;;
 21513                           
 21514                           	psect	text128
 21515  0054EE                     __ptext128:
 21516                           	callstack 0
 21517  0054EE                     _strlen:
 21518                           	callstack 24
 21519                           
 21520                           ;incstack = 0
 21521  0054EE  C00A  F00C         	movff	strlen@s,strlen@cp
 21522  0054F2  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21523  0054F6  D002               	goto	l12664
 21524  0054F8                     l12662:
 21525  0054F8  4A0C               	infsnz	strlen@cp^0,f,c
 21526  0054FA  2A0D               	incf	(strlen@cp+1)^0,f,c
 21527  0054FC                     l12664:
 21528  0054FC  C00C  FFF6         	movff	strlen@cp,tblptrl
 21529  005500  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21530  005504  6AF8               	clrf	tblptru,c
 21531  005506  0E07               	movlw	(high __ramtop+-1)
 21532  005508  64F7               	cpfsgt	tblptrh,c
 21533  00550A  D003               	bra	u14937
 21534  00550C  0008               	tblrd		*
 21535  00550E  50F5               	movf	tablat,w,c
 21536  005510  D005               	bra	u14930
 21537  005512                     u14937:
 21538  005512  CFF6 FFE1          	movff	tblptrl,fsr1l
 21539  005516  CFF7 FFE2          	movff	tblptrh,fsr1h
 21540  00551A  50E7               	movf	indf1,w,c
 21541  00551C                     u14930:
 21542  00551C  0900               	iorlw	0
 21543  00551E  A4D8               	btfss	status,2,c
 21544  005520  D7EB               	goto	l12662
 21545  005522  500A               	movf	strlen@s^0,w,c
 21546  005524  5C0C               	subwf	strlen@cp^0,w,c
 21547  005526  6E0A               	movwf	?_strlen^0,c
 21548  005528  500B               	movf	(strlen@s+1)^0,w,c
 21549  00552A  580D               	subwfb	(strlen@cp+1)^0,w,c
 21550  00552C  6E0B               	movwf	(?_strlen+1)^0,c
 21551  00552E  0012               	return		;funcret
 21552  005530                     __end_of_strlen:
 21553                           	callstack 0
 21554                           
 21555 ;; *************** function _atoi *****************
 21556 ;; Defined at:
 21557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21558 ;; Parameters:    Size  Location     Type
 21559 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21560 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;  a               2   21[COMRAM] int 
 21563 ;;  sign            1   20[COMRAM] unsigned char 
 21564 ;; Return value:  Size  Location     Type
 21565 ;;                  2   15[COMRAM] int 
 21566 ;; Registers used:
 21567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21568 ;; Tracked objects:
 21569 ;;		On entry : 0/0
 21570 ;;		On exit  : 0/0
 21571 ;;		Unchanged: 0/0
 21572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21573 ;;      Params:         3       0       0       0       0       0       0       0       0
 21574 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21575 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21576 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21577 ;;Total ram usage:        8 bytes
 21578 ;; Hardware stack levels used:    1
 21579 ;; Hardware stack levels required when called:    3
 21580 ;; This function calls:
 21581 ;;		___wmul
 21582 ;;		_isdigit
 21583 ;; This function is called by:
 21584 ;;		_verifica_dados_operacionais
 21585 ;;		_disparo_gravacao
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text129
 21590  0031F4                     __ptext129:
 21591                           	callstack 0
 21592  0031F4                     _atoi:
 21593                           	callstack 25
 21594                           
 21595                           ;incstack = 0
 21596  0031F4  D006               	goto	l13252
 21597  0031F6                     l13250:
 21598  0031F6  0E01               	movlw	1
 21599  0031F8  2610               	addwf	atoi@s^0,f,c
 21600  0031FA  0E00               	movlw	0
 21601  0031FC  2211               	addwfc	(atoi@s+1)^0,f,c
 21602  0031FE  0E00               	movlw	0
 21603  003200  2212               	addwfc	(atoi@s+2)^0,f,c
 21604  003202                     l13252:
 21605  003202  C010  FFF6         	movff	atoi@s,tblptrl
 21606  003206  C011  FFF7         	movff	atoi@s+1,tblptrh
 21607  00320A  C012  FFF8         	movff	atoi@s+2,tblptru
 21608  00320E  BAF8               	btfsc	tblptru,5,c
 21609  003210  D003               	bra	u15917
 21610  003212  0008               	tblrd		*
 21611  003214  50F5               	movf	tablat,w,c
 21612  003216  D005               	bra	u15910
 21613  003218                     u15917:
 21614  003218  CFF6 FFE1          	movff	tblptrl,fsr1l
 21615  00321C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21616  003220  50E7               	movf	indf1,w,c
 21617  003222                     u15910:
 21618  003222  0A20               	xorlw	32
 21619  003224  B4D8               	btfsc	status,2,c
 21620  003226  D7E7               	goto	l13250
 21621  003228  C010  FFF6         	movff	atoi@s,tblptrl
 21622  00322C  C011  FFF7         	movff	atoi@s+1,tblptrh
 21623  003230  C012  FFF8         	movff	atoi@s+2,tblptru
 21624  003234  BAF8               	btfsc	tblptru,5,c
 21625  003236  D003               	bra	u15937
 21626  003238  0008               	tblrd		*
 21627  00323A  50F5               	movf	tablat,w,c
 21628  00323C  D005               	bra	u15930
 21629  00323E                     u15937:
 21630  00323E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21631  003242  CFF7 FFE2          	movff	tblptrh,fsr1h
 21632  003246  50E7               	movf	indf1,w,c
 21633  003248                     u15930:
 21634  003248  0A09               	xorlw	9
 21635  00324A  B4D8               	btfsc	status,2,c
 21636  00324C  D7D4               	goto	l13250
 21637  00324E  0E00               	movlw	0
 21638  003250  6E17               	movwf	(atoi@a+1)^0,c
 21639  003252  0E00               	movlw	0
 21640  003254  6E16               	movwf	atoi@a^0,c
 21641  003256  0E00               	movlw	0
 21642  003258  6E15               	movwf	atoi@sign^0,c
 21643  00325A  C010  FFF6         	movff	atoi@s,tblptrl
 21644  00325E  C011  FFF7         	movff	atoi@s+1,tblptrh
 21645  003262  C012  FFF8         	movff	atoi@s+2,tblptru
 21646  003266  BAF8               	btfsc	tblptru,5,c
 21647  003268  D003               	bra	u15957
 21648  00326A  0008               	tblrd		*
 21649  00326C  50F5               	movf	tablat,w,c
 21650  00326E  D005               	bra	u15950
 21651  003270                     u15957:
 21652  003270  CFF6 FFE1          	movff	tblptrl,fsr1l
 21653  003274  CFF7 FFE2          	movff	tblptrh,fsr1h
 21654  003278  50E7               	movf	indf1,w,c
 21655  00327A                     u15950:
 21656  00327A  0A2D               	xorlw	45
 21657  00327C  A4D8               	btfss	status,2,c
 21658  00327E  D008               	goto	l13264
 21659  003280  2A15               	incf	atoi@sign^0,f,c
 21660  003282                     l13262:
 21661  003282  0E01               	movlw	1
 21662  003284  2610               	addwf	atoi@s^0,f,c
 21663  003286  0E00               	movlw	0
 21664  003288  2211               	addwfc	(atoi@s+1)^0,f,c
 21665  00328A  0E00               	movlw	0
 21666  00328C  2212               	addwfc	(atoi@s+2)^0,f,c
 21667  00328E  D03A               	goto	l13272
 21668  003290                     l13264:
 21669  003290  C010  FFF6         	movff	atoi@s,tblptrl
 21670  003294  C011  FFF7         	movff	atoi@s+1,tblptrh
 21671  003298  C012  FFF8         	movff	atoi@s+2,tblptru
 21672  00329C  BAF8               	btfsc	tblptru,5,c
 21673  00329E  D003               	bra	u15977
 21674  0032A0  0008               	tblrd		*
 21675  0032A2  50F5               	movf	tablat,w,c
 21676  0032A4  D005               	bra	u15970
 21677  0032A6                     u15977:
 21678  0032A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21679  0032AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21680  0032AE  50E7               	movf	indf1,w,c
 21681  0032B0                     u15970:
 21682  0032B0  0A2B               	xorlw	43
 21683  0032B2  B4D8               	btfsc	status,2,c
 21684  0032B4  D7E6               	goto	l13262
 21685  0032B6  D026               	goto	l13272
 21686  0032B8                     l13268:
 21687  0032B8  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21688  0032BC  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21689  0032C0  0E00               	movlw	0
 21690  0032C2  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21691  0032C4  0E0A               	movlw	10
 21692  0032C6  6E0C               	movwf	___wmul@multiplicand^0,c
 21693  0032C8  EC9B  F02C         	call	___wmul	;wreg free
 21694  0032CC  C010  FFF6         	movff	atoi@s,tblptrl
 21695  0032D0  C011  FFF7         	movff	atoi@s+1,tblptrh
 21696  0032D4  C012  FFF8         	movff	atoi@s+2,tblptru
 21697  0032D8  BAF8               	btfsc	tblptru,5,c
 21698  0032DA  D003               	bra	u15997
 21699  0032DC  0008               	tblrd		*
 21700  0032DE  50F5               	movf	tablat,w,c
 21701  0032E0  D005               	bra	u15990
 21702  0032E2                     u15997:
 21703  0032E2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21704  0032E6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21705  0032EA  50E7               	movf	indf1,w,c
 21706  0032EC                     u15990:
 21707  0032EC  6E13               	movwf	??_atoi^0,c
 21708  0032EE  5013               	movf	??_atoi^0,w,c
 21709  0032F0  260A               	addwf	?___wmul^0,f,c
 21710  0032F2  0E00               	movlw	0
 21711  0032F4  220B               	addwfc	(?___wmul+1)^0,f,c
 21712  0032F6  0ED0               	movlw	208
 21713  0032F8  240A               	addwf	?___wmul^0,w,c
 21714  0032FA  6E16               	movwf	atoi@a^0,c
 21715  0032FC  0EFF               	movlw	255
 21716  0032FE  200B               	addwfc	(?___wmul+1)^0,w,c
 21717  003300  6E17               	movwf	(atoi@a+1)^0,c
 21718  003302  D7BF               	goto	l13262
 21719  003304                     l13272:
 21720  003304  C010  FFF6         	movff	atoi@s,tblptrl
 21721  003308  C011  FFF7         	movff	atoi@s+1,tblptrh
 21722  00330C  C012  FFF8         	movff	atoi@s+2,tblptru
 21723  003310  BAF8               	btfsc	tblptru,5,c
 21724  003312  D003               	bra	u16007
 21725  003314  0008               	tblrd		*
 21726  003316  50F5               	movf	tablat,w,c
 21727  003318  D005               	bra	u16000
 21728  00331A                     u16007:
 21729  00331A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21730  00331E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21731  003322  50E7               	movf	indf1,w,c
 21732  003324                     u16000:
 21733  003324  EC76  F02D         	call	_isdigit
 21734  003328  B0D8               	btfsc	status,0,c
 21735  00332A  D7C6               	goto	l13268
 21736  00332C  5015               	movf	atoi@sign^0,w,c
 21737  00332E  B4D8               	btfsc	status,2,c
 21738  003330  D00D               	goto	l2424
 21739  003332  C016  F013         	movff	atoi@a,??_atoi
 21740  003336  C017  F014         	movff	atoi@a+1,??_atoi+1
 21741  00333A  1E13               	comf	??_atoi^0,f,c
 21742  00333C  1E14               	comf	(??_atoi+1)^0,f,c
 21743  00333E  4A13               	infsnz	??_atoi^0,f,c
 21744  003340  2A14               	incf	(??_atoi+1)^0,f,c
 21745  003342  C013  F010         	movff	??_atoi,?_atoi
 21746  003346  C014  F011         	movff	??_atoi+1,?_atoi+1
 21747  00334A  0012               	return	
 21748  00334C                     l2424:
 21749  00334C  C016  F010         	movff	atoi@a,?_atoi
 21750  003350  C017  F011         	movff	atoi@a+1,?_atoi+1
 21751  003354  0012               	return		;funcret
 21752  003356                     __end_of_atoi:
 21753                           	callstack 0
 21754                           
 21755 ;; *************** function _isdigit *****************
 21756 ;; Defined at:
 21757 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21758 ;; Parameters:    Size  Location     Type
 21759 ;;  c               1    wreg     unsigned char 
 21760 ;; Auto vars:     Size  Location     Type
 21761 ;;  c               1   11[COMRAM] unsigned char 
 21762 ;; Return value:  Size  Location     Type
 21763 ;;		None               void
 21764 ;; Registers used:
 21765 ;;		wreg, status,2, status,0
 21766 ;; Tracked objects:
 21767 ;;		On entry : 0/0
 21768 ;;		On exit  : 0/0
 21769 ;;		Unchanged: 0/0
 21770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21771 ;;      Params:         0       0       0       0       0       0       0       0       0
 21772 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21773 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21774 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21775 ;;Total ram usage:        3 bytes
 21776 ;; Hardware stack levels used:    1
 21777 ;; Hardware stack levels required when called:    2
 21778 ;; This function calls:
 21779 ;;		Nothing
 21780 ;; This function is called by:
 21781 ;;		_atoi
 21782 ;;		_atol
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786                           	psect	text130
 21787  005AEC                     __ptext130:
 21788                           	callstack 0
 21789  005AEC                     _isdigit:
 21790                           	callstack 20
 21791                           
 21792                           ;incstack = 0
 21793                           ;isdigit@c stored from wreg
 21794  005AEC  6E0C               	movwf	isdigit@c^0,c
 21795  005AEE  0E00               	movlw	0
 21796  005AF0  6E0B               	movwf	_isdigit$3275^0,c
 21797  005AF2  0E3A               	movlw	58
 21798  005AF4  600C               	cpfslt	isdigit@c^0,c
 21799  005AF6  D005               	goto	l10954
 21800  005AF8  0E2F               	movlw	47
 21801  005AFA  640C               	cpfsgt	isdigit@c^0,c
 21802  005AFC  D002               	goto	l10954
 21803  005AFE  0E01               	movlw	1
 21804  005B00  6E0B               	movwf	_isdigit$3275^0,c
 21805  005B02                     l10954:
 21806  005B02  C00B  F00A         	movff	_isdigit$3275,??_isdigit
 21807  005B06  300A               	rrcf	??_isdigit^0,w,c
 21808  005B08  0012               	return		;funcret
 21809  005B0A                     __end_of_isdigit:
 21810                           	callstack 0
 21811                           
 21812 ;; *************** function ___wmul *****************
 21813 ;; Defined at:
 21814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21815 ;; Parameters:    Size  Location     Type
 21816 ;;  multiplier      2    9[COMRAM] unsigned int 
 21817 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21818 ;; Auto vars:     Size  Location     Type
 21819 ;;  product         2   13[COMRAM] unsigned int 
 21820 ;; Return value:  Size  Location     Type
 21821 ;;                  2    9[COMRAM] unsigned int 
 21822 ;; Registers used:
 21823 ;;		wreg, status,2, status,0, prodl, prodh
 21824 ;; Tracked objects:
 21825 ;;		On entry : 0/2
 21826 ;;		On exit  : 0/0
 21827 ;;		Unchanged: 0/0
 21828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21829 ;;      Params:         4       0       0       0       0       0       0       0       0
 21830 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21832 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21833 ;;Total ram usage:        6 bytes
 21834 ;; Hardware stack levels used:    1
 21835 ;; Hardware stack levels required when called:    2
 21836 ;; This function calls:
 21837 ;;		Nothing
 21838 ;; This function is called by:
 21839 ;;		_get_cluster
 21840 ;;		_put_cluster
 21841 ;;		_fprintf
 21842 ;;		_atoi
 21843 ;;		_disparo_gravacao
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           	psect	text131
 21848  005936                     __ptext131:
 21849                           	callstack 0
 21850  005936                     ___wmul:
 21851                           	callstack 25
 21852                           
 21853                           ;incstack = 0
 21854  005936  500A               	movf	___wmul@multiplier^0,w,c
 21855  005938  020C               	mulwf	___wmul@multiplicand^0,c
 21856  00593A  CFF3 F00E          	movff	prodl,___wmul@product
 21857  00593E  CFF4 F00F          	movff	prodh,___wmul@product+1
 21858  005942  500A               	movf	___wmul@multiplier^0,w,c
 21859  005944  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21860  005946  50F3               	movf	243,w,c
 21861  005948  260F               	addwf	(___wmul@product+1)^0,f,c
 21862  00594A  500B               	movf	(___wmul@multiplier+1)^0,w,c
 21863  00594C  020C               	mulwf	___wmul@multiplicand^0,c
 21864  00594E  50F3               	movf	243,w,c
 21865  005950  260F               	addwf	(___wmul@product+1)^0,f,c
 21866  005952  C00E  F00A         	movff	___wmul@product,?___wmul
 21867  005956  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 21868  00595A  0012               	return		;funcret
 21869  00595C                     __end_of___wmul:
 21870                           	callstack 0
 21871                           
 21872 ;; *************** function _isr *****************
 21873 ;; Defined at:
 21874 ;;		line 111 in file "main.c"
 21875 ;; Parameters:    Size  Location     Type
 21876 ;;		None
 21877 ;; Auto vars:     Size  Location     Type
 21878 ;;  cont            1    8[COMRAM] unsigned char 
 21879 ;; Return value:  Size  Location     Type
 21880 ;;                  1    wreg      void 
 21881 ;; Registers used:
 21882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21883 ;; Tracked objects:
 21884 ;;		On entry : 0/0
 21885 ;;		On exit  : 0/0
 21886 ;;		Unchanged: 0/0
 21887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21888 ;;      Params:         0       0       0       0       0       0       0       0       0
 21889 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21890 ;;      Temps:          6       0       0       0       0       0       0       0       0
 21891 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21892 ;;Total ram usage:        7 bytes
 21893 ;; Hardware stack levels used:    1
 21894 ;; Hardware stack levels required when called:    1
 21895 ;; This function calls:
 21896 ;;		_recebe_dado_uart
 21897 ;;		_tratamento_uart
 21898 ;;		i2_write_timer_zero
 21899 ;; This function is called by:
 21900 ;;		Interrupt level 2
 21901 ;; This function uses a non-reentrant model
 21902 ;;
 21903                           
 21904                           	psect	intcode
 21905  000008                     __pintcode:
 21906                           	callstack 0
 21907  000008                     _isr:
 21908                           	callstack 13
 21909                           
 21910                           ;incstack = 0
 21911  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21912  00000A  EDE0  F01E         	call	int_func,f	;refresh shadow registers
 21913                           
 21914                           	psect	intcode_body
 21915  003DC0                     __pintcode_body:
 21916                           	callstack 13
 21917  003DC0                     int_func:
 21918                           	callstack 13
 21919  003DC0  0006               	pop		; remove dummy address from shadow register refresh
 21920  003DC2  CFD9 F005          	movff	fsr2l,??_isr+2
 21921  003DC6  CFDA F006          	movff	fsr2h,??_isr+3
 21922  003DCA  CFF3 F007          	movff	prodl,??_isr+4
 21923  003DCE  CFF4 F008          	movff	prodh,??_isr+5
 21924                           
 21925                           ;main.c: 113: unsigned char cont;;main.c: 116: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21926  003DD2  BA9D               	btfsc	157,5,c	;volatile
 21927  003DD4  AA9E               	btfss	158,5,c	;volatile
 21928  003DD6  D015               	goto	i2l10114
 21929                           
 21930                           ;main.c: 117: {;main.c: 118: PIR1bits.RCIF = 0;
 21931  003DD8  9A9E               	bcf	158,5,c	;volatile
 21932                           
 21933                           ;main.c: 119: data_uart_recebe = recebe_dado_uart();
 21934  003DDA  ECCA  F02D         	call	_recebe_dado_uart	;wreg free
 21935  003DDE  0100               	movlb	0	; () banked
 21936  003DE0  6FF3               	movwf	_data_uart_recebe& (0+255),b
 21937                           
 21938                           ; BSR set to: 0
 21939                           ;main.c: 120: tratamento_uart(data_uart_recebe);
 21940  003DE2  51F3               	movf	_data_uart_recebe& (0+255),w,b
 21941  003DE4  EC59  F01D         	call	_tratamento_uart
 21942                           
 21943                           ;main.c: 121: PORTBbits.RB2 = !PORTBbits.RB2;
 21944  003DE8  B481               	btfsc	129,2,c	;volatile
 21945  003DEA  D003               	goto	i2u1117_40
 21946  003DEC  6A03               	clrf	??_isr^0,c
 21947  003DEE  2A03               	incf	??_isr^0,f,c
 21948  003DF0  D001               	goto	i2u1118_48
 21949  003DF2                     i2u1117_40:
 21950  003DF2  6A03               	clrf	??_isr^0,c
 21951  003DF4                     i2u1118_48:
 21952  003DF4  4603               	rlncf	??_isr^0,f,c
 21953  003DF6  4603               	rlncf	??_isr^0,f,c
 21954  003DF8  5081               	movf	129,w,c	;volatile
 21955  003DFA  1803               	xorwf	??_isr^0,w,c
 21956  003DFC  0BFB               	andlw	-5
 21957  003DFE  1803               	xorwf	??_isr^0,w,c
 21958  003E00  6E81               	movwf	129,c	;volatile
 21959  003E02                     i2l10114:
 21960                           
 21961                           ;main.c: 122: };main.c: 125: unsigned char cont;;main.c: 127: if (TMR0IF && T0IF)
 21962  003E02  B4F2               	btfsc	4082,2,c	;volatile
 21963  003E04  A4F2               	btfss	4082,2,c	;volatile
 21964  003E06  D046               	goto	i2l10152
 21965                           
 21966                           ;main.c: 128: {;main.c: 129: INTCONbits.TMR0IF = 0;
 21967  003E08  94F2               	bcf	242,2,c	;volatile
 21968                           
 21969                           ;main.c: 130: sinaliza_int_timer = 1;
 21970  003E0A  0E01               	movlw	1
 21971  003E0C  0100               	movlb	0	; () banked
 21972  003E0E  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
 21973                           
 21974                           ;main.c: 132: for(cont= 0; cont<3;cont++)
 21975  003E10  0E00               	movlw	0
 21976  003E12  6E09               	movwf	isr@cont^0,c
 21977  003E14                     i2l10126:
 21978                           
 21979                           ;main.c: 133: {;main.c: 134: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21980  003E14  5009               	movf	isr@cont^0,w,c
 21981  003E16  0D02               	mullw	2
 21982  003E18  0E2D               	movlw	low _tempo_tarefa
 21983  003E1A  24F3               	addwf	243,w,c
 21984  003E1C  6ED9               	movwf	fsr2l,c
 21985  003E1E  0E01               	movlw	high _tempo_tarefa
 21986  003E20  20F4               	addwfc	prodh,w,c
 21987  003E22  6EDA               	movwf	fsr2h,c
 21988  003E24  50DE               	movf	postinc2,w,c
 21989  003E26  10DE               	iorwf	postinc2,w,c
 21990  003E28  B4D8               	btfsc	status,2,c
 21991  003E2A  D00B               	goto	i2l10130
 21992  003E2C  5009               	movf	isr@cont^0,w,c
 21993  003E2E  0D02               	mullw	2
 21994  003E30  0E2D               	movlw	low _tempo_tarefa
 21995  003E32  24F3               	addwf	243,w,c
 21996  003E34  6ED9               	movwf	fsr2l,c
 21997  003E36  0E01               	movlw	high _tempo_tarefa
 21998  003E38  20F4               	addwfc	prodh,w,c
 21999  003E3A  6EDA               	movwf	fsr2h,c
 22000  003E3C  06DE               	decf	postinc2,f,c
 22001  003E3E  0E00               	movlw	0
 22002  003E40  5ADD               	subwfb	postdec2,f,c
 22003  003E42                     i2l10130:
 22004  003E42  2A09               	incf	isr@cont^0,f,c
 22005  003E44  0E02               	movlw	2
 22006  003E46  6409               	cpfsgt	isr@cont^0,c
 22007  003E48  D7E5               	goto	i2l10126
 22008                           
 22009                           ;main.c: 136: };main.c: 137: if(time_sd > 0) time_sd--;
 22010  003E4A  0101               	movlb	1	; () banked
 22011  003E4C  516E               	movf	_time_sd& (0+255),w,b
 22012  003E4E  116F               	iorwf	(_time_sd+1)& (0+255),w,b
 22013  003E50  B4D8               	btfsc	status,2,c
 22014  003E52  D003               	goto	i2l10138
 22015                           
 22016                           ; BSR set to: 1
 22017  003E54  076E               	decf	_time_sd& (0+255),f,b
 22018  003E56  A0D8               	btfss	status,0,c
 22019  003E58  076F               	decf	(_time_sd+1)& (0+255),f,b
 22020  003E5A                     i2l10138:
 22021                           
 22022                           ; BSR set to: 1
 22023                           ;main.c: 138: if(time_atualizacao > 0) time_atualizacao--;
 22024  003E5A  0100               	movlb	0	; () banked
 22025  003E5C  51EA               	movf	_time_atualizacao& (0+255),w,b
 22026  003E5E  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22027  003E60  B4D8               	btfsc	status,2,c
 22028  003E62  D003               	goto	i2l10142
 22029                           
 22030                           ; BSR set to: 0
 22031  003E64  07EA               	decf	_time_atualizacao& (0+255),f,b
 22032  003E66  A0D8               	btfss	status,0,c
 22033  003E68  07EB               	decf	(_time_atualizacao+1)& (0+255),f,b
 22034  003E6A                     i2l10142:
 22035                           
 22036                           ; BSR set to: 0
 22037                           ;main.c: 140: if(tarefa_em_execucao == 1)
 22038  003E6A  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22039  003E6C  A4D8               	btfss	status,2,c
 22040  003E6E  D00C               	goto	i2l10150
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;main.c: 141: {;main.c: 142: timeout_tarefa--;
 22044  003E70  0101               	movlb	1	; () banked
 22045  003E72  0770               	decf	_timeout_tarefa& (0+255),f,b
 22046  003E74  A0D8               	btfss	status,0,c
 22047  003E76  0771               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22048                           
 22049                           ; BSR set to: 1
 22050                           ;main.c: 143: if(!timeout_tarefa)
 22051  003E78  5170               	movf	_timeout_tarefa& (0+255),w,b
 22052  003E7A  1171               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22053  003E7C  A4D8               	btfss	status,2,c
 22054  003E7E  D004               	goto	i2l10150
 22055                           
 22056                           ; BSR set to: 1
 22057                           ;main.c: 144: {;main.c: 146: PCLATH = 0;
 22058  003E80  0E00               	movlw	0
 22059  003E82  6EFA               	movwf	250,c	;volatile
 22060                           
 22061                           ;main.c: 147: PCL = 0;
 22062  003E84  0E00               	movlw	0
 22063  003E86  6EF9               	movwf	249,c	;volatile
 22064  003E88                     i2l10150:
 22065                           
 22066                           ;main.c: 148: };main.c: 149: };main.c: 152: write_timer_zero(0x45);
 22067  003E88  0E00               	movlw	0
 22068  003E8A  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22069  003E8C  0E45               	movlw	69
 22070  003E8E  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22071  003E90  EC2E  F02E         	call	i2_write_timer_zero	;wreg free
 22072  003E94                     i2l10152:
 22073                           
 22074                           ;main.c: 153: };main.c: 155: if (INT0IF && INT0IE)
 22075  003E94  B2F2               	btfsc	4082,1,c	;volatile
 22076  003E96  A8F2               	btfss	4082,4,c	;volatile
 22077  003E98  D001               	goto	i2l1545
 22078                           
 22079                           ;main.c: 156: {;main.c: 157: INT0IF = 0;
 22080  003E9A  92F2               	bcf	4082,1,c	;volatile
 22081  003E9C                     i2l1545:
 22082  003E9C  C008  FFF4         	movff	??_isr+5,prodh
 22083  003EA0  C007  FFF3         	movff	??_isr+4,prodl
 22084  003EA4  C006  FFDA         	movff	??_isr+3,fsr2h
 22085  003EA8  C005  FFD9         	movff	??_isr+2,fsr2l
 22086  003EAC  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22087  003EAE  0011               	retfie		f
 22088  003EB0                     __end_of_isr:
 22089                           	callstack 0
 22090                           
 22091 ;; *************** function i2_write_timer_zero *****************
 22092 ;; Defined at:
 22093 ;;		line 134 in file "bibliotecas/hardware.c"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;  timer0          2    0[COMRAM] unsigned int 
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;		None
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1    wreg      void 
 22100 ;; Registers used:
 22101 ;;		None
 22102 ;; Tracked objects:
 22103 ;;		On entry : 3E/0
 22104 ;;		On exit  : 3E/0
 22105 ;;		Unchanged: 3E/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22107 ;;      Params:         2       0       0       0       0       0       0       0       0
 22108 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22110 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22111 ;;Total ram usage:        2 bytes
 22112 ;; Hardware stack levels used:    1
 22113 ;; This function calls:
 22114 ;;		Nothing
 22115 ;; This function is called by:
 22116 ;;		_isr
 22117 ;; This function uses a non-reentrant model
 22118 ;;
 22119                           
 22120                           	psect	text133
 22121  005C5C                     __ptext133:
 22122                           	callstack 0
 22123  005C5C                     i2_write_timer_zero:
 22124                           	callstack 13
 22125                           
 22126                           ;hardware.c: 142: TMR0 = timer0;
 22127                           
 22128                           ;incstack = 0
 22129  005C5C  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22130  005C60  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22131  005C64  0012               	return		;funcret
 22132  005C66                     __end_ofi2_write_timer_zero:
 22133                           	callstack 0
 22134                           
 22135 ;; *************** function _tratamento_uart *****************
 22136 ;; Defined at:
 22137 ;;		line 347 in file "bibliotecas/GPS.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;  received_cha    1    wreg     unsigned char 
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;  received_cha    1    0[COMRAM] unsigned char 
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  1    wreg      void 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22146 ;; Tracked objects:
 22147 ;;		On entry : 3F/0
 22148 ;;		On exit  : 3E/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0
 22152 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22154 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22155 ;;Total ram usage:        1 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; This function calls:
 22158 ;;		Nothing
 22159 ;; This function is called by:
 22160 ;;		_isr
 22161 ;; This function uses a non-reentrant model
 22162 ;;
 22163                           
 22164                           	psect	text134
 22165  003AB2                     __ptext134:
 22166                           	callstack 0
 22167  003AB2                     _tratamento_uart:
 22168                           	callstack 13
 22169                           
 22170                           ;incstack = 0
 22171                           ;tratamento_uart@received_char stored from wreg
 22172  003AB2  6E01               	movwf	tratamento_uart@received_char^0,c
 22173                           
 22174                           ;GPS.c: 349: if(received_char =='$'){
 22175  003AB4  0E24               	movlw	36
 22176  003AB6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22177  003AB8  A4D8               	btfss	status,2,c
 22178  003ABA  D011               	goto	i2l9902
 22179                           
 22180                           ;GPS.c: 350: gga_index = 0;
 22181  003ABC  0E00               	movlw	0
 22182  003ABE  0100               	movlb	0	; () banked
 22183  003AC0  6FEF               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22184  003AC2  0E00               	movlw	0
 22185  003AC4  6FEE               	movwf	_gga_index& (0+255),b	;volatile
 22186                           
 22187                           ;GPS.c: 351: rmc_index = 0;
 22188  003AC6  0E00               	movlw	0
 22189  003AC8  6FED               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22190  003ACA  0E00               	movlw	0
 22191  003ACC  6FEC               	movwf	_rmc_index& (0+255),b	;volatile
 22192                           
 22193                           ;GPS.c: 352: is_it_gga_string = 0;
 22194  003ACE  0E00               	movlw	0
 22195  003AD0  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22196                           
 22197                           ;GPS.c: 353: is_it_rmc_string = 0;
 22198  003AD2  0E00               	movlw	0
 22199  003AD4  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22200                           
 22201                           ;GPS.c: 354: comma_counter_gga = 0;
 22202  003AD6  0E00               	movlw	0
 22203  003AD8  6FF9               	movwf	_comma_counter_gga& (0+255),b
 22204                           
 22205                           ;GPS.c: 355: comma_counter_rmc = 0;
 22206  003ADA  0E00               	movlw	0
 22207  003ADC  6FF8               	movwf	_comma_counter_rmc& (0+255),b
 22208  003ADE                     i2l9902:
 22209                           
 22210                           ;GPS.c: 356: };GPS.c: 358: if(is_it_gga_string == 1)
 22211  003ADE  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22212  003AE0  A4D8               	btfss	status,2,c
 22213  003AE2  D01A               	goto	i2l9912
 22214                           
 22215                           ;GPS.c: 359: {;GPS.c: 360: if(received_char == ',' )
 22216  003AE4  0E2C               	movlw	44
 22217  003AE6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22218  003AE8  A4D8               	btfss	status,2,c
 22219  003AEA  D00A               	goto	i2l9910
 22220                           
 22221                           ;GPS.c: 361: {;GPS.c: 362: gga_pointers[comma_counter_gga++] = gga_index;
 22222  003AEC  0E16               	movlw	low _gga_pointers
 22223  003AEE  0100               	movlb	0	; () banked
 22224  003AF0  25F9               	addwf	_comma_counter_gga& (0+255),w,b
 22225  003AF2  6ED9               	movwf	fsr2l,c
 22226  003AF4  6ADA               	clrf	fsr2h,c
 22227  003AF6  0E02               	movlw	high _gga_pointers
 22228  003AF8  22DA               	addwfc	fsr2h,f,c
 22229  003AFA  C0EE  FFDF         	movff	_gga_index,indf2	;volatile
 22230                           
 22231                           ; BSR set to: 0
 22232  003AFE  2BF9               	incf	_comma_counter_gga& (0+255),f,b
 22233  003B00                     i2l9910:
 22234                           
 22235                           ;GPS.c: 363: };GPS.c: 364: gga_buffer[gga_index++] = received_char;
 22236  003B00  0E00               	movlw	low _gga_buffer
 22237  003B02  0100               	movlb	0	; () banked
 22238  003B04  25EE               	addwf	_gga_index& (0+255),w,b	;volatile
 22239  003B06  6ED9               	movwf	fsr2l,c
 22240  003B08  0E03               	movlw	high _gga_buffer
 22241  003B0A  21EF               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22242  003B0C  6EDA               	movwf	fsr2h,c
 22243  003B0E  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22244  003B12  4BEE               	infsnz	_gga_index& (0+255),f,b	;volatile
 22245  003B14  2BEF               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22246                           
 22247                           ;GPS.c: 365: }
 22248  003B16  D01C               	goto	i2l9920
 22249  003B18                     i2l9912:
 22250                           
 22251                           ;GPS.c: 366: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22252  003B18  0E47               	movlw	71
 22253  003B1A  0101               	movlb	1	; () banked
 22254  003B1C  195C               	xorwf	_gga_code& (0+255),w,b
 22255  003B1E  A4D8               	btfss	status,2,c
 22256  003B20  D011               	goto	i2l439
 22257                           
 22258                           ; BSR set to: 1
 22259  003B22  0E47               	movlw	71
 22260  003B24  195D               	xorwf	(_gga_code+1)& (0+255),w,b
 22261  003B26  A4D8               	btfss	status,2,c
 22262  003B28  D00D               	goto	i2l439
 22263                           
 22264                           ; BSR set to: 1
 22265  003B2A  0E41               	movlw	65
 22266  003B2C  195E               	xorwf	(_gga_code+2)& (0+255),w,b
 22267  003B2E  A4D8               	btfss	status,2,c
 22268  003B30  D009               	goto	i2l439
 22269                           
 22270                           ; BSR set to: 1
 22271                           ;GPS.c: 367: is_it_gga_string = 1;
 22272  003B32  0E01               	movlw	1
 22273  003B34  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22274                           
 22275                           ;GPS.c: 368: gga_code[0] = 0;
 22276  003B36  0E00               	movlw	0
 22277  003B38  6F5C               	movwf	_gga_code& (0+255),b
 22278                           
 22279                           ;GPS.c: 369: gga_code[1] = 0;
 22280  003B3A  0E00               	movlw	0
 22281  003B3C  6F5D               	movwf	(_gga_code+1)& (0+255),b
 22282                           
 22283                           ;GPS.c: 370: gga_code[2] = 0;
 22284  003B3E  0E00               	movlw	0
 22285  003B40  6F5E               	movwf	(_gga_code+2)& (0+255),b
 22286                           
 22287                           ;GPS.c: 371: }
 22288  003B42  D006               	goto	i2l9920
 22289  003B44                     i2l439:
 22290                           
 22291                           ; BSR set to: 1
 22292                           ;GPS.c: 372: else{;GPS.c: 373: gga_code[0] = gga_code[1];
 22293  003B44  C15D  F15C         	movff	_gga_code+1,_gga_code
 22294                           
 22295                           ;GPS.c: 374: gga_code[1] = gga_code[2];
 22296  003B48  C15E  F15D         	movff	_gga_code+2,_gga_code+1
 22297                           
 22298                           ;GPS.c: 375: gga_code[2] = received_char;
 22299  003B4C  C001  F15E         	movff	tratamento_uart@received_char,_gga_code+2
 22300  003B50                     i2l9920:
 22301                           
 22302                           ;GPS.c: 376: };GPS.c: 378: if(is_it_rmc_string == 1)
 22303  003B50  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22304  003B52  A4D8               	btfss	status,2,c
 22305  003B54  D01A               	goto	i2l9930
 22306                           
 22307                           ;GPS.c: 379: {;GPS.c: 380: if(received_char == ',' )
 22308  003B56  0E2C               	movlw	44
 22309  003B58  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22310  003B5A  A4D8               	btfss	status,2,c
 22311  003B5C  D00A               	goto	i2l9928
 22312                           
 22313                           ;GPS.c: 381: {;GPS.c: 382: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22314  003B5E  0E2A               	movlw	low _rmc_pointers
 22315  003B60  0100               	movlb	0	; () banked
 22316  003B62  25F8               	addwf	_comma_counter_rmc& (0+255),w,b
 22317  003B64  6ED9               	movwf	fsr2l,c
 22318  003B66  6ADA               	clrf	fsr2h,c
 22319  003B68  0E02               	movlw	high _rmc_pointers
 22320  003B6A  22DA               	addwfc	fsr2h,f,c
 22321  003B6C  C0EC  FFDF         	movff	_rmc_index,indf2	;volatile
 22322                           
 22323                           ; BSR set to: 0
 22324  003B70  2BF8               	incf	_comma_counter_rmc& (0+255),f,b
 22325  003B72                     i2l9928:
 22326                           
 22327                           ;GPS.c: 383: };GPS.c: 384: rmc_buffer[rmc_index++] = received_char;
 22328  003B72  0E50               	movlw	low _rmc_buffer
 22329  003B74  0100               	movlb	0	; () banked
 22330  003B76  25EC               	addwf	_rmc_index& (0+255),w,b	;volatile
 22331  003B78  6ED9               	movwf	fsr2l,c
 22332  003B7A  0E03               	movlw	high _rmc_buffer
 22333  003B7C  21ED               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22334  003B7E  6EDA               	movwf	fsr2h,c
 22335  003B80  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22336  003B84  4BEC               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22337  003B86  2BED               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22338                           
 22339                           ;GPS.c: 385: }
 22340  003B88  0012               	return	
 22341  003B8A                     i2l9930:
 22342                           
 22343                           ;GPS.c: 386: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22344  003B8A  0E52               	movlw	82
 22345  003B8C  0101               	movlb	1	; () banked
 22346  003B8E  1959               	xorwf	_rmc_code& (0+255),w,b
 22347  003B90  A4D8               	btfss	status,2,c
 22348  003B92  D011               	goto	i2l444
 22349                           
 22350                           ; BSR set to: 1
 22351  003B94  0E4D               	movlw	77
 22352  003B96  195A               	xorwf	(_rmc_code+1)& (0+255),w,b
 22353  003B98  A4D8               	btfss	status,2,c
 22354  003B9A  D00D               	goto	i2l444
 22355                           
 22356                           ; BSR set to: 1
 22357  003B9C  0E43               	movlw	67
 22358  003B9E  195B               	xorwf	(_rmc_code+2)& (0+255),w,b
 22359  003BA0  A4D8               	btfss	status,2,c
 22360  003BA2  D009               	goto	i2l444
 22361                           
 22362                           ; BSR set to: 1
 22363                           ;GPS.c: 387: is_it_rmc_string = 1;
 22364  003BA4  0E01               	movlw	1
 22365  003BA6  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22366                           
 22367                           ;GPS.c: 388: rmc_code[0] = 0;
 22368  003BA8  0E00               	movlw	0
 22369  003BAA  6F59               	movwf	_rmc_code& (0+255),b
 22370                           
 22371                           ;GPS.c: 389: rmc_code[1] = 0;
 22372  003BAC  0E00               	movlw	0
 22373  003BAE  6F5A               	movwf	(_rmc_code+1)& (0+255),b
 22374                           
 22375                           ;GPS.c: 390: rmc_code[2] = 0;
 22376  003BB0  0E00               	movlw	0
 22377  003BB2  6F5B               	movwf	(_rmc_code+2)& (0+255),b
 22378                           
 22379                           ;GPS.c: 391: }
 22380  003BB4  0012               	return	
 22381  003BB6                     i2l444:
 22382                           
 22383                           ; BSR set to: 1
 22384                           ;GPS.c: 392: else{;GPS.c: 393: rmc_code[0] = rmc_code[1];
 22385  003BB6  C15A  F159         	movff	_rmc_code+1,_rmc_code
 22386                           
 22387                           ;GPS.c: 394: rmc_code[1] = rmc_code[2];
 22388  003BBA  C15B  F15A         	movff	_rmc_code+2,_rmc_code+1
 22389                           
 22390                           ;GPS.c: 395: rmc_code[2] = received_char;
 22391  003BBE  C001  F15B         	movff	tratamento_uart@received_char,_rmc_code+2
 22392  003BC2  0012               	return		;funcret
 22393  003BC4                     __end_of_tratamento_uart:
 22394                           	callstack 0
 22395                           
 22396 ;; *************** function _recebe_dado_uart *****************
 22397 ;; Defined at:
 22398 ;;		line 138 in file "bibliotecas/uart.c"
 22399 ;; Parameters:    Size  Location     Type
 22400 ;;		None
 22401 ;; Auto vars:     Size  Location     Type
 22402 ;;		None
 22403 ;; Return value:  Size  Location     Type
 22404 ;;                  1    wreg      unsigned char 
 22405 ;; Registers used:
 22406 ;;		wreg, status,2
 22407 ;; Tracked objects:
 22408 ;;		On entry : 0/0
 22409 ;;		On exit  : 0/0
 22410 ;;		Unchanged: 0/0
 22411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22412 ;;      Params:         0       0       0       0       0       0       0       0       0
 22413 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22415 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22416 ;;Total ram usage:        0 bytes
 22417 ;; Hardware stack levels used:    1
 22418 ;; This function calls:
 22419 ;;		Nothing
 22420 ;; This function is called by:
 22421 ;;		_isr
 22422 ;; This function uses a non-reentrant model
 22423 ;;
 22424                           
 22425                           	psect	text135
 22426  005B94                     __ptext135:
 22427                           	callstack 0
 22428  005B94                     _recebe_dado_uart:
 22429                           	callstack 13
 22430                           
 22431                           ;uart.c: 140: while(RCIF==0);
 22432                           
 22433                           ;incstack = 0
 22434  005B94  AA9E               	btfss	3998,5,c	;volatile
 22435  005B96  D7FE               	goto	_recebe_dado_uart
 22436                           
 22437                           ;uart.c: 141: if(RCSTAbits.OERR)
 22438  005B98  A2AB               	btfss	171,1,c	;volatile
 22439  005B9A  D003               	goto	i2l10040
 22440                           
 22441                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22442  005B9C  98AB               	bcf	4011,4,c	;volatile
 22443                           
 22444                           ;uart.c: 144: __nop();
 22445  005B9E  F000               	nop	
 22446                           
 22447                           ;uart.c: 145: CREN=1;
 22448  005BA0  88AB               	bsf	4011,4,c	;volatile
 22449  005BA2                     i2l10040:
 22450                           
 22451                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22452  005BA2  50AE               	movf	174,w,c	;volatile
 22453  005BA4  0012               	return		;funcret
 22454  005BA6                     __end_of_recebe_dado_uart:
 22455                           	callstack 0
 22456                           
 22457                           	psect	text136
 22458  000000                     __ptext136:
 22459                           	callstack 0
 22460                           
 22461                           	psect	rparam
 22462  0000                     
 22463                           	psect	temp
 22464  000056                     btemp:
 22465                           	callstack 0
 22466  000056                     	ds	1
 22467  0000                     int$flags	set	btemp
 22468  0000                     wtemp8	set	btemp+1
 22469  0000                     ttemp5	set	btemp+1
 22470  0000                     ttemp6	set	btemp+4
 22471  0000                     ttemp7	set	btemp+8
 22472                           
 22473                           	psect	idloc
 22474                           
 22475                           ;Config register IDLOC0 @ 0x200000
 22476                           ;	unspecified, using default values
 22477  200000                     	org	2097152
 22478  200000  FF                 	db	255
 22479                           
 22480                           ;Config register IDLOC1 @ 0x200001
 22481                           ;	unspecified, using default values
 22482  200001                     	org	2097153
 22483  200001  FF                 	db	255
 22484                           
 22485                           ;Config register IDLOC2 @ 0x200002
 22486                           ;	unspecified, using default values
 22487  200002                     	org	2097154
 22488  200002  FF                 	db	255
 22489                           
 22490                           ;Config register IDLOC3 @ 0x200003
 22491                           ;	unspecified, using default values
 22492  200003                     	org	2097155
 22493  200003  FF                 	db	255
 22494                           
 22495                           ;Config register IDLOC4 @ 0x200004
 22496                           ;	unspecified, using default values
 22497  200004                     	org	2097156
 22498  200004  FF                 	db	255
 22499                           
 22500                           ;Config register IDLOC5 @ 0x200005
 22501                           ;	unspecified, using default values
 22502  200005                     	org	2097157
 22503  200005  FF                 	db	255
 22504                           
 22505                           ;Config register IDLOC6 @ 0x200006
 22506                           ;	unspecified, using default values
 22507  200006                     	org	2097158
 22508  200006  FF                 	db	255
 22509                           
 22510                           ;Config register IDLOC7 @ 0x200007
 22511                           ;	unspecified, using default values
 22512  200007                     	org	2097159
 22513  200007  FF                 	db	255
 22514                           
 22515                           	psect	config
 22516                           
 22517                           ;Config register CONFIG1L @ 0x300000
 22518                           ;	unspecified, using default values
 22519                           ;	PLL Prescaler Selection bits
 22520                           ;	PLLDIV = 0x0, unprogrammed default
 22521                           ;	System Clock Postscaler Selection bits
 22522                           ;	CPUDIV = 0x0, unprogrammed default
 22523                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22524                           ;	USBDIV = 0x0, unprogrammed default
 22525  300000                     	org	3145728
 22526  300000  00                 	db	0
 22527                           
 22528                           ;Config register CONFIG1H @ 0x300001
 22529                           ;	unspecified, using default values
 22530                           ;	Oscillator Selection bits
 22531                           ;	FOSC = 0x5, unprogrammed default
 22532                           ;	Fail-Safe Clock Monitor Enable bit
 22533                           ;	FCMEN = 0x0, unprogrammed default
 22534                           ;	Internal/External Oscillator Switchover bit
 22535                           ;	IESO = 0x0, unprogrammed default
 22536  300001                     	org	3145729
 22537  300001  05                 	db	5
 22538                           
 22539                           ;Config register CONFIG2L @ 0x300002
 22540                           ;	unspecified, using default values
 22541                           ;	Power-up Timer Enable bit
 22542                           ;	PWRT = 0x1, unprogrammed default
 22543                           ;	Brown-out Reset Enable bits
 22544                           ;	BOR = 0x3, unprogrammed default
 22545                           ;	Brown-out Reset Voltage bits
 22546                           ;	BORV = 0x3, unprogrammed default
 22547                           ;	USB Voltage Regulator Enable bit
 22548                           ;	VREGEN = 0x0, unprogrammed default
 22549  300002                     	org	3145730
 22550  300002  1F                 	db	31
 22551                           
 22552                           ;Config register CONFIG2H @ 0x300003
 22553                           ;	unspecified, using default values
 22554                           ;	Watchdog Timer Enable bit
 22555                           ;	WDT = 0x1, unprogrammed default
 22556                           ;	Watchdog Timer Postscale Select bits
 22557                           ;	WDTPS = 0xF, unprogrammed default
 22558  300003                     	org	3145731
 22559  300003  1F                 	db	31
 22560                           
 22561                           ; Padding undefined space
 22562  300004                     	org	3145732
 22563  300004  FF                 	db	255
 22564                           
 22565                           ;Config register CONFIG3H @ 0x300005
 22566                           ;	unspecified, using default values
 22567                           ;	CCP2 MUX bit
 22568                           ;	CCP2MX = 0x1, unprogrammed default
 22569                           ;	PORTB A/D Enable bit
 22570                           ;	PBADEN = 0x1, unprogrammed default
 22571                           ;	Low-Power Timer 1 Oscillator Enable bit
 22572                           ;	LPT1OSC = 0x0, unprogrammed default
 22573                           ;	MCLR Pin Enable bit
 22574                           ;	MCLRE = 0x1, unprogrammed default
 22575  300005                     	org	3145733
 22576  300005  83                 	db	131
 22577                           
 22578                           ;Config register CONFIG4L @ 0x300006
 22579                           ;	unspecified, using default values
 22580                           ;	Stack Full/Underflow Reset Enable bit
 22581                           ;	STVREN = 0x1, unprogrammed default
 22582                           ;	Single-Supply ICSP Enable bit
 22583                           ;	LVP = 0x1, unprogrammed default
 22584                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22585                           ;	ICPRT = 0x0, unprogrammed default
 22586                           ;	Extended Instruction Set Enable bit
 22587                           ;	XINST = 0x0, unprogrammed default
 22588                           ;	Background Debugger Enable bit
 22589                           ;	DEBUG = 0x1, unprogrammed default
 22590  300006                     	org	3145734
 22591  300006  85                 	db	133
 22592                           
 22593                           ; Padding undefined space
 22594  300007                     	org	3145735
 22595  300007  FF                 	db	255
 22596                           
 22597                           ;Config register CONFIG5L @ 0x300008
 22598                           ;	unspecified, using default values
 22599                           ;	Code Protection bit
 22600                           ;	CP0 = 0x1, unprogrammed default
 22601                           ;	Code Protection bit
 22602                           ;	CP1 = 0x1, unprogrammed default
 22603                           ;	Code Protection bit
 22604                           ;	CP2 = 0x1, unprogrammed default
 22605                           ;	Code Protection bit
 22606                           ;	CP3 = 0x1, unprogrammed default
 22607  300008                     	org	3145736
 22608  300008  0F                 	db	15
 22609                           
 22610                           ;Config register CONFIG5H @ 0x300009
 22611                           ;	unspecified, using default values
 22612                           ;	Boot Block Code Protection bit
 22613                           ;	CPB = 0x1, unprogrammed default
 22614                           ;	Data EEPROM Code Protection bit
 22615                           ;	CPD = 0x1, unprogrammed default
 22616  300009                     	org	3145737
 22617  300009  C0                 	db	192
 22618                           
 22619                           ;Config register CONFIG6L @ 0x30000A
 22620                           ;	unspecified, using default values
 22621                           ;	Write Protection bit
 22622                           ;	WRT0 = 0x1, unprogrammed default
 22623                           ;	Write Protection bit
 22624                           ;	WRT1 = 0x1, unprogrammed default
 22625                           ;	Write Protection bit
 22626                           ;	WRT2 = 0x1, unprogrammed default
 22627                           ;	Write Protection bit
 22628                           ;	WRT3 = 0x1, unprogrammed default
 22629  30000A                     	org	3145738
 22630  30000A  0F                 	db	15
 22631                           
 22632                           ;Config register CONFIG6H @ 0x30000B
 22633                           ;	unspecified, using default values
 22634                           ;	Configuration Register Write Protection bit
 22635                           ;	WRTC = 0x1, unprogrammed default
 22636                           ;	Boot Block Write Protection bit
 22637                           ;	WRTB = 0x1, unprogrammed default
 22638                           ;	Data EEPROM Write Protection bit
 22639                           ;	WRTD = 0x1, unprogrammed default
 22640  30000B                     	org	3145739
 22641  30000B  E0                 	db	224
 22642                           
 22643                           ;Config register CONFIG7L @ 0x30000C
 22644                           ;	unspecified, using default values
 22645                           ;	Table Read Protection bit
 22646                           ;	EBTR0 = 0x1, unprogrammed default
 22647                           ;	Table Read Protection bit
 22648                           ;	EBTR1 = 0x1, unprogrammed default
 22649                           ;	Table Read Protection bit
 22650                           ;	EBTR2 = 0x1, unprogrammed default
 22651                           ;	Table Read Protection bit
 22652                           ;	EBTR3 = 0x1, unprogrammed default
 22653  30000C                     	org	3145740
 22654  30000C  0F                 	db	15
 22655                           
 22656                           ;Config register CONFIG7H @ 0x30000D
 22657                           ;	unspecified, using default values
 22658                           ;	Boot Block Table Read Protection bit
 22659                           ;	EBTRB = 0x1, unprogrammed default
 22660  30000D                     	org	3145741
 22661  30000D  40                 	db	64
 22662                           tosu	equ	0xFFF
 22663                           tosh	equ	0xFFE
 22664                           tosl	equ	0xFFD
 22665                           stkptr	equ	0xFFC
 22666                           pclatu	equ	0xFFB
 22667                           pclath	equ	0xFFA
 22668                           pcl	equ	0xFF9
 22669                           tblptru	equ	0xFF8
 22670                           tblptrh	equ	0xFF7
 22671                           tblptrl	equ	0xFF6
 22672                           tablat	equ	0xFF5
 22673                           prodh	equ	0xFF4
 22674                           prodl	equ	0xFF3
 22675                           indf0	equ	0xFEF
 22676                           postinc0	equ	0xFEE
 22677                           postdec0	equ	0xFED
 22678                           preinc0	equ	0xFEC
 22679                           plusw0	equ	0xFEB
 22680                           fsr0h	equ	0xFEA
 22681                           fsr0l	equ	0xFE9
 22682                           wreg	equ	0xFE8
 22683                           indf1	equ	0xFE7
 22684                           postinc1	equ	0xFE6
 22685                           postdec1	equ	0xFE5
 22686                           preinc1	equ	0xFE4
 22687                           plusw1	equ	0xFE3
 22688                           fsr1h	equ	0xFE2
 22689                           fsr1l	equ	0xFE1
 22690                           bsr	equ	0xFE0
 22691                           indf2	equ	0xFDF
 22692                           postinc2	equ	0xFDE
 22693                           postdec2	equ	0xFDD
 22694                           preinc2	equ	0xFDC
 22695                           plusw2	equ	0xFDB
 22696                           fsr2h	equ	0xFDA
 22697                           fsr2l	equ	0xFD9
 22698                           status	equ	0xFD8

Data Sizes:
    Strings     258
    Constant    118
    Data        120
    BSS         1089
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     250
    BANK2           256     19     250
    BANK3           256      0     150
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3668	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    troca_de_tela@fix_signal	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), lo(BANK1[13]), lt(BANK1[12]), 
		 -> vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1466_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S795_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S795_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    gps@flag_fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[6]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[6]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), escreve_inteiro_lcd@texto(COMRAM[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->_verifica_fence
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _gps->_fix
    _gps->_get_fix
    _gps->_get_latitude
    _gps->_get_longitude
    _gps->_get_rawdate
    _gps->_get_rawspeed
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  514250
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  504584
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   26803
                                             67 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        3     3      0   20307
                                             53 COMRAM     3     3      0
              _escreve_caractere_lcd
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6386
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6532
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  457168
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16353
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (5) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426316
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425198
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                                _gps
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _gps                                                  3     3      0     844
                                             11 COMRAM     3     3      0
                                _fix
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        17    17      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0     130
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205014
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2849
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2693
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2693
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _gps
             _fix
             _get_fix
             _get_gpstime
             _get_latitude
             _get_longitude
             _get_rawdate
             _get_rawspeed
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_caractere_lcd
         _delay
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
   _gps
     _fix
     _get_fix
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      96      11       58.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      20        0.0%
DATA                 0      0     59F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Jun 26 15:24:13 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 4734                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5AB2                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 0396                                               _lo 0198  
                                             _lt 01B2                              ___wmul@multiplicand 000C  
                                    _put_cluster 237C                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 489C                                              l201 48A4  
                                            l202 48A6                                              l203 48AE  
                                            l220 4CF6                                              l204 48B0  
                                            l221 4CFE                                              l213 4CCA  
                                            l205 48B8                                              l222 4D00  
                                            l206 48BA                                              l223 4D08  
                                            l215 4CD4                           __size_of_troca_de_tela 0286  
                                            l144 2CAC                                              l224 4D0A  
                                            l232 4EC6                                              l225 4D12  
                                            l217 4CDE                                              l250 4C1C  
                                            l242 4BE8                                              l226 4D14  
                                            l218 4CE0                                              l251 4C1E  
                                            l219 4CF4                                              l252 4C26  
                                            l244 4BF2                                              l181 5AD2  
                                            l253 4C28                                              l254 4C30  
                                            l246 4BFC                                              l183 5AD8  
                                            l255 4C32                                              l191 4866  
                                            l256 4C3A                                              l248 4C06  
                                            l257 4C3C                                              l249 4C08  
                                            l193 4870                                              l195 487A  
                                            l197 4884                                              l702 4F8A  
                                            l198 4886                                              l199 489A  
                                            l800 5C0E                                              l806 5BC0  
                                            l913 2E1C                                              l916 2E14  
                                            l686 55CA                                              l990 3440  
                                            l987 3492                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 00FA  
                            _latitude_to_convert 4B5E                                              _fil 017C  
                               ??_init_oscilador 000A                                              _fix 5C52  
                                            _n_s 00FB                                              _gps 565C  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01DE                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 000B  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1104 13C4                                             l1114 150A  
                                           l1241 5542                                             l1074 077A  
                                           l1192 0D90                                             l1274 1118  
                                           l2226 5176                                             l1099 1398  
                                           l2155 4E46                                             l1291 1260  
                                           l1188 0B80                                             l2236 54E4  
                                           l2424 334C                                             l1573 4F64  
                                           l2438 3988                                             l2470 3F7A  
                                           l2456 453E                                             l1774 4A58  
                                           ?_fix 000A                                             ?_gps 0001  
                                           ?_isr 0001                                             l9310 4300  
                                           l9314 4316                                             l9306 42D8  
                                           l9316 4334                                             l9308 42E2  
                                           l9318 433E                                             l9610 4028  
                                           l9534 3D1C                                             l9606 4018  
                                           l9552 3D5E                                             l9528 3CF4  
                                           l9624 4058                                             l9616 4030  
                                           l9562 3D86                                             l9618 403C  
                                           l9548 3D4E                                             l9558 3D76  
                                           l9578 5638                            _escreve_caractere_lcd 4BD8  
                                           l9588 3FC4                                             STR_1 61F1  
                                           STR_2 6192                                             STR_3 6224  
                                           STR_4 61E6                                             STR_5 61B1  
                                           STR_6 617D                                             STR_7 61C0  
                                           STR_8 621A                                             STR_9 6210  
                                 timer_dois@flag 00F7                                             _BRGH 007D62  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 007E  
                                   trace_path@fn 007F                                     trace_path@ds 008F  
                                   trace_path@fs 008B                                    ?_make_dirfile 0012  
                                           _Term 00FC                                             _dado 0110  
                                           _data 01D8                                             _atoi 31F4  
                                           _atol 3878                                             _main 5788  
                                           _fsid 0172                                             _hora 01CA  
                                   ___ftpack@arg 000A                                             _itoa 55EA  
                                   ___ftpack@exp 000D                                             _ltoa 546A  
                        __end_of_fence_diff_long 6155                                             fsr1h 000FE2  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 0056  
                                           _utoa 44BE                                             _sync 51D2  
                                  disk_ioctl@cmd 000A                                    disk_read@buff 0029  
                                  disk_ioctl@res 000E                                   ??_get_latitude 000A  
                                  disk_read@pdrv 0031                             ?_latitude_to_convert 0001  
                                           prodh 000FF4                                             prodl 000FF3  
                   tratamento_uart@received_char 0001                            get_latitude@index_lat 000A  
                                           start 000E                                      gps@flag_fix 000D  
                              disparo_gravacao@i 02F9                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 000C                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014C  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l11000 19D8  
                                          l10204 56A2                                            l10304 3AA2  
                                          l11112 1BEC                                            l11104 1BB2  
                                          l11024 1A58                                            l10218 4F84  
                                          l12002 0732                                            l11202 00CC  
                                          l10412 4C7E                                            l10404 4C4E  
                                          l10332 2C54                                            l10324 2C04  
                                          l11052 1AD0                                            l12100 4132  
                                          l11126 5AB6                                            l10502 4CCC  
                                          l11214 0186                                            l12110 4158  
                                          l11310 38F4                                            l10408 4C7A  
                                          l10440 52A4                                            l12032 09C4  
                                          l12024 08B6                                            l11216 01A6  
                                          l10290 3A5C                                            l10274 3A12  
                                          l10346 2C74                                            l10506 4CD6  
                                          l11058 1ADE                                            l11162 582C  
                                          l11226 01FE                                            l12122 4192  
                                          l11322 3944                                            l11306 38CC  
                                          l12202 4948                                            l12210 4954  
                                          l10196 55D6                                            l10284 3A44  
                                          l10268 3A00                                            l10428 4CA0  
                                          l10364 2CF4                                            l10436 5278  
                                          l10604 2BD0                                            l11172 47A4  
                                          l11068 1B0A                                            l11332 5914  
                                          l11404 31DE                                            l11500 345A  
                                          l11420 3380                                            l11252 03AA  
                                          l11236 02E4                                            l11244 033A  
                                          l12124 419E                                            l12116 4170  
                                          l11316 38FE                                            l12212 495E  
                                          l13004 4D94                                            l10294 3A72  
                                          l10278 3A36                                            l10286 3A4A  
                                          l10622 5768                                            l12070 3874  
                                          l11166 4736                                            l11174 47AC  
                                          l10542 4BFE                                            l10534 4BEA  
                                          l11094 1B8C                                            l11078 1B30  
                                          l11334 591A                                            l11350 591E  
                                          l11158 581C                                            l12038 09DA  
                                          l11510 3474                                            l12150 4E04  
                                          l11270 04F2                                            l11254 03B8  
                                          l12142 41F6                                            l12134 41D2  
                                          l13014 4DAE                                            l10616 575C  
                                          l12056 37BC                                            l10704 2764  
                                          l10720 2806                                            l10800 47D6  
                                          l11440 33EA                                            l12152 4E10  
                                          l12080 50B8                                            l13024 4DC6  
                                          l10394 2D66                                            l10378 2D18  
                                          l10458 52A8                                            l10618 5764  
                                          l10634 5770                                            l10538 4BF4  
                                          l11266 0476                                            l12082 50C0  
                                          l12138 41E0                                            l12242 590C  
                                          l13130 4AD4                                            l10492 5BB2  
                                          l10708 2784                                            l12500 0F6C  
                                          l12252 535C                                            l11540 499E  
                                          l10652 4EE0                                            l10804 47F4  
                                          l11508 3472                                            l12308 13A0  
                                          l12340 14E8                                            l11284 0582  
                                          l12076 508A                                            l12420 53FE  
                                          l11612 5004                                            l12092 40D0  
                                          l12172 48E4                                            l13028 4DCA  
                                          l13060 4DE2                                            l10582 2B26  
                                          l11366 5208                                            l10718 27EC  
                                          l10742 2444                                            l12262 5394  
                                          l10822 484E                                            l10910 425A  
                                          l11518 3490                                            l11470 3418  
                                          l12326 1460                                            l12158 4E38  
                                          l11278 0526                                            l11710 5300  
                                          l12406 586E                                            l12422 5406  
                                          l11606 4FD8                                            l12086 406E  
                                          l12190 491C                                            l10744 2478  
                                          l10736 2402                                            l10728 23A2  
                                          l12256 5374                                            l11552 49E4  
                                          l11536 499A                                            l10672 5182  
                                          l10656 4EEE                                            l10648 4ED2  
                                          l10664 4EFC                                            l11528 34AC  
                                          l12360 151E                                            l12328 148E  
                                          l11288 0594                                            l12512 0F9C  
                                          l12416 53EA                                            l12184 4910  
                                          l13064 4A72                                            l13250 31F6  
                                          l10586 2B2E                                            l10578 2AAA  
                                          l10594 2B7C                                            l10930 53DC  
                                          l11626 4A0A                                            l10762 2526  
                                          l10850 2E24                                            l12450 0D44  
                                          l10666 4F16                                            l11482 3430  
                                          l12602 1160                                            l12418 53EE  
                                          l12178 48EC                                            l13074 4A8C  
                                          l13306 2F20                                            l13410 1CA2  
                                          l13252 3202                                            l10924 53CC  
                                          l11628 4A16                                            l10684 2632  
                                          l10780 25B8                                            l10676 51AA  
                                          l11388 3106                                            l11812 1FEA  
                                          l11804 1F8A                                            l12604 1178  
                                          l12508 0F92                                            l11732 56D0  
                                          l12700 516C                                            l11580 5030  
                                          l12196 4924                                            l13084 4AA4  
                                          l13172 4872                                            l13500 1E7C  
                                          l13262 3282                                            l11638 4A4A  
                                          l10766 2550                                            l10782 25D4  
                                          l10862 2E52                                            l10846 2DFE  
                                          l10838 2DD0                                            l12462 0DA4  
                                          l10790 50E8                                            l11750 458E  
                                          l11742 456C                                            l11910 230E  
                                          l11486 3438                                            l11478 3428  
                                          l11830 2056                                            l12278 1300  
                                          l12614 11A0                                            l12542 102C  
                                          l11718 5700                                            l12710 54C2  
                                          l13326 3086                                            l13272 3304  
                                          l13264 3290                                            l12392 58C2  
                                          l10880 2E88                                            l10936 5438  
                                          l10944 5458                                            l11760 45D2  
                                          l11920 234A                                            l11824 2038  
                                          l11816 1FF6                                            l12624 11DC  
                                          l12560 1082                                            l12528 0FEC  
                                          l11648 5730                                            l12800 4B48  
                                          l13088 4AA8                                            l13176 487C  
                                          l13168 4868                                            l13280 57C0  
                                          l10954 5B02                                            l12474 0DEC  
                                          l12466 0DAE                                            l10794 50FC  
                                          l10970 1960                                            l11930 05B8  
                                          l11762 45DA                                            l11842 207A  
                                          l11834 2062                                            l12642 126C  
                                          l12618 11AC                                            l12538 1016  
                                          l11666 5898                                            l11690 5348  
                                          l11586 505C                                            l13098 4ABE  
                                          l12722 3EC0                                            l13282 57C8  
                                          l13434 1D14                                            l13418 1CD0  
                                          l13268 32B8                                            l12476 0E00  
                                          l12484 0E72                                            l12492 0F06  
                                          l10980 1980                                            l11932 05BE  
                                          l12548 1058                                            l12652 12C2  
                                          l12716 54DA                                            l12708 54BA  
                                          l12732 3F10                                            l12662 54F8  
                                          l12902 1854                                            l12830 1680  
                                          l12814 161A                                            l10894 2EC4  
                                          l10990 19B4                                            l11790 1F46  
                                          l12646 1286                                            l12638 124E  
                                          l12582 1100                                            l12566 10B2  
                                          l11678 5310                                            l13470 1DF2  
                                          l12664 54FC                                            l12840 16E2  
                                          l12824 167C                                            l12808 1616  
                                          l10976 1974                                            l11864 216A  
                                          l11848 208E                                            l12576 10F0  
                                          l13448 1D8C                                            l13456 1DC6  
                                          l12914 18D2                                            l12850 173A  
                                          l12834 16D4                                            l12818 166E  
                                          l12922 18E0                                            l10898 2F02  
                                          l11962 0660                                            l11938 0610  
                                          l11874 21CC                                            l11866 2190  
                                          l11786 1F42                                            l12586 110C  
                                          l11698 52C8                                            l12690 514C  
                                          l13722 44C6                                            l12754 548A  
                                          l13490 1E3C                                            l13458 1DCA  
                                          l12908 1858                                            l11948 0634  
                                          l11884 2238                                            l11868 21A2  
                                          l12596 113C                                            l13732 4500  
                                          l12764 4B68                                            l13812 2A1A  
                                          l13396 1C2A                                            l12862 174C  
                                          l12846 16E6                                            l11966 0664  
                                          l11798 1F60                                            l12678 3CB4  
                                          l13806 29F8                                            l13814 2A1E  
                                          l12880 17D8                                            l12872 17AE  
                                          l12856 1748                                            l11984 069C  
                                          l11976 0692                                            l11888 223C  
                                          l12960 365E                                            l12688 5144  
                                          l12776 4BC2                                            l13488 1E38  
                                          l12874 17D4                                            l12866 17A0  
                                          l11994 0710                                            l11898 227E  
                                          l13850 44B4                                            l12788 4AEE  
                                          l12894 1818                                            l12974 3726  
                                          l13758 5606                                            l13790 28FE  
                                          l13838 4418                                            l12888 1814  
                                          l13784 2878                                            l12994 5A78  
                                          l13874 57B0                                            l13868 57A0  
                                          l12998 5A80                                  __end_of___aldiv 4208  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6237                                            ?_ltoa 0023  
                                          STR_11 6267                                            STR_20 627B  
                                          STR_12 61A2                                            STR_21 622C  
                                          STR_13 61FC                                            STR_30 6270  
                                          STR_22 624F                                            STR_14 6206  
                                          STR_31 626C                                            STR_15 625C  
                                          STR_23 6256                                            STR_24 627D  
                                          STR_32 622E                                            STR_16 61CE  
                                          STR_17 6274                                            STR_25 6248  
                                          STR_33 6240                                            STR_26 624F  
                                          STR_18 6278                                            STR_27 6256  
                                          STR_19 61DB                                            STR_28 627D  
                                          STR_29 6262                                     ?_leitura_SPI 0001  
                                          u10010 42CA                                  __end_of___lldiv 4A6A  
                                          ?_utoa 0011                                            u10050 4348  
                                          ?_sync 0001                                            u10411 3D04  
                                          u12020 4814                                  __end_of___ftmul 3DC0  
                                          u12110 2E48                                            u10520 4042  
                                          _T0CON 000FD5                                            u11340 56C4  
                                          u12220 53C8                                            u12060 2DBA  
                                          u12300 19A0                                            u10461 3FA8  
                                          u12070 2DC6                                            u12310 19AC  
                                          u10470 3FB2                                            u12311 19AA  
                                          u10391 3CDC                                            u11360 4F94  
                                          u11520 2D72                                            u12080 2DF2  
                                          u13200 499A                                            u10480 3FE2  
                                __end_of___llmod 4E58                                            u12330 19F8  
                                          u12180 2EF0                                            u10485 3FDA  
                                __end_of___fttol 406A                                            u11390 3A0C  
                                          u11710 2A68                                            u12510 4762  
                                          u11375 39B2                                            u11800 51CA  
                                          u12440 1B56                                            _T2CON 000FCA  
                                          u11465 2C28                                            u11730 2AA6  
                                          u12530 4794                                            u12370 1A86  
                                          u12290 1990                                            u14050 41A2  
                                          u13235 3510                                            u13340 4A1A  
                                          u11820 25FC                                            u15020 5150  
                                          u13245 352C                                            u12517 4758  
                                          u12390 1A92                                            u13270 5538  
                                          u13255 355C                                            u11495 2CC8  
                                          u11807 51C0                                            u16000 3324  
                                          u11920 23FE                                            u12480 1BC8  
                                          u13440 458A                                            u14320 13C0  
                                          u13265 357C                                            u12537 478A  
                                          u12705 0326                                            u15210 163A  
                                          u12490 1BF8                                            u14250 12FC  
                                          u14090 4E14                                            u15050 54C6  
                                          u12810 38EC                                            u11915 23D2  
                                          u13460 45C0                                            u13700 227A  
                                          u11845 2662                                            u15310 1738  
                                          u15230 166C                                            u11790 51A2  
                                          u13470 45E6                                            u14350 145C  
                                          u12750 052E                                            u16007 331A  
                                          u13535 1FA8                                            u15400 1844  
                                          u14600 0E0E                                            u13480 45FE  
                                          u12920 3184                                            u13640 21C8  
                                          u15217 1630                                            u11865 26DE  
                                          u11945 24A4                                            u12905 3112  
                                          u12665 024C                                            u12817 38E2  
                                          u15330 176C                                            u15250 16A0  
                                          u12850 5204                                            u13490 1F2C  
                                          u12770 3898                                            u16210 1D40  
                                          u15420 1878                                            u14620 0E86  
                                          u13900 072E                                            u12940 33B6  
                                          u16220 1D7C                                            u16140 1C06  
                                          u15317 172E                                            u15237 1662  
                                          u14525 0BF4                                            u11797 5198  
                                          u15350 179E                                            u15270 16D2  
                                          u14630 0ECC                                            u13830 065C  
                                          u13750 05DE                                            u13670 222A  
                                          u14390 1506                                            u15407 183A  
                                          u11895 2770                                            u11975 2532  
                                          u13655 21EA                                            u15440 189E  
                                          u12960 33C6                                            u14720 1064  
                                          u16240 1DD6                                            u15337 1762  
                                          u15257 1696                                            u13497 1F22  
                                          u12777 388E                                            u15370 17CE  
                                          u15290 1706                                            u13770 0604  
                                          u12890 3102                                            u16218 1D42  
                                          u16170 1C56                                            u15427 186E  
                                          u14635 0EC2                                            u12947 33AC  
                                          u15460 18D0                                            u15380 1804  
                                          u13940 09C0                                            u16228 1D7E  
                                          u16180 1C92                                            u16500 46B2  
                                          u15357 1794                                            u15277 16C8  
                                          u13757 05D4                                            u13950 09D8  
                                          u15630 4A84                                            u16510 46CE  
                                          u15447 1894                                            u13935 08CE  
                                          u14920 12A2                                            u14760 10EE  
                                          u15640 4A88                                            u15560 4DAA  
                                          u15377 17C4                                            u15297 16FC  
                                          u13777 05FA                                            u14930 551C  
                                          u14690 0FE2                                            u16178 1C58  
                                          u15467 18C6                                            u15387 17FA  
                                          u15900 4F52                                            u16188 1C94  
                                          u13965 0A5E                                            u15910 3222  
                                          u14870 1232                                            u15590 4DDC  
                                          u14937 5512                                            u15930 3248  
                                          u14955 3BD6                                            u16707 465C  
                                          u15860 48DC                                            u15917 3218  
                                          u16717 192E                                            u14965 3C0E  
                                          u15950 327A                                            u16590 2874  
                                          u16727 1A98                                            u15871 557A  
                                          u16648 4474                                            u15937 323E  
                                          u16737 1B36                                            u14985 3C50  
                                          u16649 4486                                            u15970 32B0  
                                          u16747 55B6                                            u14995 3C88  
                                __end_of___lwdiv 5180                                            u15957 3270  
                                          u16677 470A                                            u15990 32EC  
                                          u16687 4624                                            u15977 32A6  
                                          u16697 4640                                            u15997 32E2  
                                __end_of___lwmod 54EE                                            i2l444 3BB6  
                                          i2l439 3B44                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 586A                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 5398  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5C48  
                                  get_cluster@bc 006F                                  __end_of_get_fix 5758  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FD0                                    ___awtoft@sign 001B  
                                          _delay 5ACE                                  clust2sect@clust 0016  
                                          _fence 00F5                                  __end_of_gps_dia 5A4C  
                                __end_of_gps_ano 5A6E                                  __end_of_gps_mes 5A2A  
                                __end_of_fprintf 12CC                                            _fputc 5530  
                                          _fputs 5080                                  __end_of_isdigit 5B0A  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0174  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3EB0                                  __end_of_rawdata 5C34  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5C2A  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5C0A                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 1BFC  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4368  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 3356  
                                   __end_of_atol 399A                                     __end_of_main 57B6  
                                   clust2sect@fs 001F                                     __end_of_itoa 5624  
                                   __end_of_ltoa 54AC     verifica_dados_operacionais@contador_anterior 00F0  
                                   __end_of_utoa 4562                                     __end_of_sync 5224  
                             _inicializa_tarefas 5224                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000A                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5B94                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 308E  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 5980  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 565C  
                               __end_of___ftpack 4368                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1545 3E9C  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9910 3B00                                           i2l9902 3ADE  
                                         i2l9920 3B50                                           i2l9912 3B18  
                                         i2l9930 3B8A                                           i2l9928 3B72  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5BA6                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 49E8  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000B                       __end_of_posicao_cursor_lcd 4F1A  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F0C  
                                   _dado_arquivo 0242                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 50D8  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 5936                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 12CC  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5B5A  
                           __size_of_get_gpstime 002A                                           _f_sync 3750  
                                      ??___lwmod 000E                                           _buffer 0236  
                           __size_of_get_rawdate 0030                                 __end_of_latitude 5C48  
                               __end_of_gps_hora 5980                                           _estado 00F4  
                                         _memcmp 4734                                           _memcpy 5426  
                               __end_of_init_lcd 46A0                                           _memset 5812  
                                      ??_f_close 004C                                           _rawFix 01EA  
                                         clear_0 43C2                                           clear_1 43D4  
                                         clear_2 43E0                                           clear_3 43EC  
                                         clear_4 43F8                                           clear_5 4404  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 000A                                           _strcat 53E0  
                            _sdc_disk_initialize 1914                                        ??_command 0014  
                                         _strcpy 57B6                                           _strlen 54EE  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 1914  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 237C  
                                      ??_gps_mes 000C                                 __end_of_validate 53E0  
                         __end_of_next_dir_entry 31F4                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 5350  
                               __end_of_response 5BFE                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6106  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 59A2                                        ??_proceed 000C  
                               _write_timer_zero 5C16                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 56F8  
                            _escreve_inteiro_lcd 5570                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 440A                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 4FD0                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5C52                                  _tratamento_uart 3AB2  
                    __end_of_endereco_cursor_lcd 4D22                                     __pidataBANK0 5C78  
                                   __pidataBANK1 5BD6                                     __pidataBANK2 4D22  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3BC4  
                                  __end_of_delay 5AEC                                   _escrita_sdcard 3604  
                                hora_nome@p_buff 000A                                    __end_of_fputc 5570  
                                  __end_of_fputs 50D8                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 0044                 __end_of_convert_to_int_point_lat 5080  
                             __size_of_data_nome 002A                                    __end_of_ultoa 3F98  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 34B0                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000A  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5C66  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000B  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5B5A                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 5910  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02C3  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02D5                                       _dados_long 027E  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51D2  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4B5E  
                      escreve_inteiro_uart@F3215 01EC                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 3750  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3677 6118                            mensagem_inicial@F3679 6107  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 00E7                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10040 5BA2  
                                        i2l10130 3E42                                          i2l10114 3E02  
                                        i2l10150 3E88                                          i2l10142 3E6A  
                                        i2l10126 3E14                                          i2l10152 3E94  
                                        i2l10138 3E5A                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5AAE  
                                     _disk_write 5274                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 0182                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4208                                   _inicializa_SPI 5A8E  
                                trace_path@clust 008D                                __end_of_data_nome 58E8  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3BC4                                __end_of_diferenca 413C  
                                  _sdc_disk_read 399A                                     _desliga_uart 5B82  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4CB8  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 413C  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 49E8                                  __size_of___wmul 0026  
                                        ___ftmul 3CCC                                          ___llmod 4DF2  
                                        ___fttol 3F98                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 512E  
                                        ___lwmod 54AC                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 55EA  
                          __size_of_get_latitude 0048                                          _f_close 583E  
                                        __pcinit 4368                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5B0A  
                                        __ramtop 0800                                          _f_mount 5350  
                                        __ptext0 5788                                          __ptext1 46A0  
                                        __ptext2 4602                                          __ptext3 5B5A  
                                        __ptext4 5B0A                                          __ptext5 5C66  
                                        __ptext6 5B70                                          __ptext7 5B26  
                                        __ptext8 5C16                                          __ptext9 5BE4  
                           __end_of_gps_segundos 59E6                                          _f_write 0012  
                                        _get_fix 5728                                          _command 4F76  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 5894  
                                        _gps_dia 5A2A                                          _gps_ano 5A4C  
                                        _gps_mes 5A08                                          _fprintf 0F7E  
                                   __size_of_fix 000A                                     __size_of_gps 0036  
                                        _rawDate 01E4                                          _isdigit 5AEC  
                                   __size_of_isr 3EA8             __size_of_verifica_plausibilidade_lat 007A  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0030                                          _rawTime 01D1  
                               ___aldiv@dividend 000A                                          _rawdata 5C2A  
                                        _rawhora 5C20                                          _time_sd 016E  
                                   _create_chain 2D76                                          _proceed 5BFE  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 016A  
                              __end_of_sdc_reset 4856                           __end_of_inicializa_SPI 5AAE  
                          __end_of_armazena_ltlo 4966                      __end_of_latitude_to_convert 4BD8  
                                     f_lseek@ofs 0088                                   __pintcode_body 3DC0  
                                     f_lseek@res 009C                             end_of_initialization 440A  
                              __end_of_longitude 5C3E             __end_of_verifica_plausibilidade_long 4DF2  
          __size_of_verifica_plausibilidade_long 0066                     _verifica_plausibilidade_long 4D8C  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0006  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000A  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3DC0  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1117_40 3DF2  
                                      i2u1118_48 3DF4                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 015F  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 5308                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 6155                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5C20  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5A6E                            __end_of_get_longitude 5308  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 5692  
                                   _get_rawspeed 56C8                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 021A  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1E82  
                             _posicao_cursor_lcd 4EBC                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3CCC  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4AE4  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 4856  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 000A                                      ?_clust2sect 0016  
                               _put_cluster$1623 006A                                 _put_cluster$1624 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 3356  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 617D                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1733 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 512E  
                                 _temp_buff_long 0164                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 595C                                   __end_of_f_open 1606  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 3878                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 47C6                                   __end_of_memcpy 546A  
                                 __end_of_memset 583E                __end_of_convert_to_int_point_long 5028  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 5426  
                                 __end_of_strcpy 57E4                                   __end_of_strlen 5530  
                               _time_atualizacao 00EA                              start_initialization 4368  
                                    __end_of_fix 5C5C                                      __end_of_gps 5692  
                                    __end_of_isr 3EB0                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02F7                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5BD6  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5812  
                                _sdc_disk_status 5BA6                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5C5C  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 5910                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5A8E                               _verifica_recep_gps 58E8  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00F3                                wait_ready@timeout 000A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 0084  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                                     hora_nome@i 000C                              __size_of_disk_write 004C  
                                       ??___lmul 0012                            __size_of_gps_segundos 0022  
                                     fprintf@fil 00B1                                       fprintf@arp 00D9  
                                       ??___wmul 000E                                       fprintf@res 00CD  
                                     fprintf@val 00D5                                       fprintf@str 00B3  
                            __end_of_get_fattime 3604                                         ??_f_open 009D  
                            ?_verifica_recep_gps 0001                                         ??_f_sync 004C  
                                    ?_wait_ready 0001                                      __pdataBANK0 00FF  
                                    __pdataBANK1 01EC                                      __pdataBANK2 027E  
                            __end_of_get_cluster 2810                  verifica_dados_operacionais@dado 0121  
                                       ??_memcmp 0010                              __end_of_disk_status 5788  
                                       ??_memcpy 0010                              __size_of_clust2sect 00B2  
                                       ??_memset 0010                              __end_of_get_gpstime 58BE  
                         sdc_disk_read@start_add 0022                             __end_of_remove_chain 4602  
                              ??_dados_gps_to_sd 0015                              __end_of_get_rawdate 5728  
                        sdc_disk_initialize@buff 0029                                    ??_leitura_SPI 000A  
                        __end_of_escreve_cmd_lcd 48E2                                         ??_strcat 000E  
                                       ??_strcpy 0010                                         ??_strlen 000C  
                        sdc_disk_initialize@stat 0020                                      ?_trace_path 007E  
                                  ??_gps_minutos 000C                                     _fprintf$2226 00CF  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 0396  
                                  monta_sd@index 0013                                      __pbssCOMRAM 004D  
                                _trace_path$1780 0087                                  _trace_path$1782 0089  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02E7  
                                 _init_interrupt 5B70                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 44BE  
                    __end_of_sdc_disk_initialize 1BFC                                __size_of_check_fs 0082  
                                   _isdigit$3275 000B                                     check_fs@sect 0035  
                                    _char_number 00FE                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 55AE                                   _init_oscilador 5C66  
                          __end_of_troca_de_tela 1E82                                 ??_escrita_sdcard 004D  
                                      _dados_lat 02A2                              __size_of_init_ports 001C  
                                      _dados_vel 0127                                     _gps_segundos 59C4  
                          _escreve_frase_ram_lcd 5180                                __size_of_grava_sd 001A  
                                      _data_buff 017A                                        _data_hoje 00F6  
                    __end_of_escreve_inteiro_lcd 55AE                                        _data_nome 58BE  
                            __end_of_escreve_SPI 5BC6                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00EE  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 308E  
                    _verifica_dados_operacionais 2F0C                                        _diferenca 406A  
                                      __pintcode 0008                                    __pmediumconst 6106  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 5758  
                                      __ptext101 5BA6                                        __ptext110 4F76  
                                      __ptext102 51D2                                        __ptext111 5692  
                                      __ptext103 2A2A                                        __ptext120 595C  
                                      __ptext112 5BB6                                        __ptext104 5274  
                                      __ptext121 5A2A                                        __ptext113 55AE  
                                      __ptext105 2BD4                          troca_de_tela@fix_signal 0037  
                                      __ptext130 5AEC                                        __ptext122 5A4C  
                                      __ptext114 5C0A                                        __ptext106 4C4A  
                                      __ptext131 5936                                        __ptext123 58BE  
                                      __ptext115 5AAE                                        __ptext107 399A  
                                      __ptext124 5B82                                        __ptext116 34B0  
                                      __ptext108 5BF2                                        __ptext133 5C5C  
                                      __ptext125 5BC6                                        __ptext117 59C4  
                                      __ptext109 5BFE                                        __ptext134 3AB2  
                                      __ptext126 4E58                                        __ptext118 59E6  
                                      __ptext135 5B94                                        __ptext127 1606  
                                      __ptext119 5A08                                        __ptext136 0000  
                                      __ptext128 54EE                                        __ptext129 31F4  
                              __size_of_monta_sd 030E                                         ?___lldiv 000A  
                                       ?___ftmul 001C                                         ?___llmod 000A  
                              __size_of_validate 0048                                         ?___fttol 002B  
                                       ?___lwdiv 000A                                         ?___lwmod 000A  
                              __size_of_response 000C                                         ?_f_close 0069  
                                      _disk_read 4C4A                               _sinaliza_int_timer 00F2  
                                       ?_f_lseek 0086                                         ?_f_mount 000A  
                               _disparo_gravacao 2810                                         ?_f_write 0086  
                         ??_longitude_to_convert 0042                                         ?_get_fix 0001  
                                       ?_command 000F                           __end_of_init_interrupt 5B82  
                                       ?_gps_dia 000A                                         ?_gps_ano 000A  
                                       ?_gps_mes 000A                                         ?_fprintf 00B1  
                                       ?_isdigit 0001                                      _desliga_SPI 5BC6  
                            sdc_disk_read@p_buff 0016                          troca_de_tela@last_state 004F  
                            sdc_disk_read@length 0026                                         ?_rawdata 000A  
                            sdc_disk_read@sector 0018                                         ?_rawhora 000A  
                        __end_of_sdc_disk_status 5BB6                   __size_of_escreve_caractere_lcd 0072  
                                 __size_of_Speed 000A                    __end_of_escreve_caractere_lcd 4C4A  
                                       ?_proceed 0001                                        f_close@fp 0069  
                            __end_of_leitura_SPI 5C16                                        _hora_nome 586A  
                               ___lwdiv@quotient 000F                                   __size_of_delay 001E  
                        __end_of_disk_initialize 5936                           __end_of_init_oscilador 5C6E  
                            __end_of_gps_minutos 5A08                                   __size_of_fputc 0040  
                                 __size_of_fputs 0058                              make_dirfile@dirname 0013  
                                     validate@id 0012                                       validate@fs 0010  
                           __end_of_posicao_long 5C78                                        _p_tarefas 0139  
                                 __size_of_ultoa 00E8                          __size_of_verifica_fence 005C  
                                      _rawCourse 013F                                 make_dirfile@path 0012  
                                       _GPGGA_ok 0176                                        _sdc_reset 47C6  
                            __size_of_wait_ready 0036                                  ___aldiv@divisor 000E  
                    latitude_to_convert@latitude 0060                                  ___aldiv@counter 0012  
                                 ___wmul@product 000E                                         _LATBbits 000F8A  
                                      f_lseek@fp 0086                                         _LATCbits 000F8B  
            __end_of_verifica_plausibilidade_lat 4AE4                      _verifica_plausibilidade_lat 4A6A  
                                       _GPRMC_ok 0178                                        f_open@dir 00B4  
                                      f_open@res 00B3                                        _longitude 5C34  
                                       _PIE1bits 000F9D                                      _get_fattime 34B0  
                                   _rawLongitude 01A5                                 ?_recebe_dado_gps 0001  
                                     ?_data_nome 000A                              __size_of_trace_path 0280  
                                      _rmc_index 00EC                                      _get_cluster 25E8  
                                    _disk_status 5758                                    ??_move_window 0039  
                                      f_mount@fs 000A                                         _PIR1bits 000F9E  
                                    _get_gpstime 5894                                       ?_diferenca 0001  
                                  move_window@fs 0048                                      _get_rawdate 56F8  
             verifica_plausibilidade_lat@posicao 000A      verifica_dados_operacionais@velocidade_atual 0166  
    verifica_dados_operacionais@velocidade_media 0155                                ?_write_timer_zero 000A  
                                remove_chain@nxt 007C                                        f_sync@dir 0067  
                                      f_sync@res 0066                                        f_sync@tim 0062  
                       posicao_cursor_lcd@coluna 000D                                       ?_disk_read 0029  
                             ??_write_timer_zero 000C                                        f_write@cc 009E  
                     posicao_cursor_lcd@endereco 000F                                        f_write@bw 008B  
                                      f_write@fp 0086                             _mostra_dados_display 57E4  
                      __size_of_recebe_dado_uart 0012                                      _escalonador 4414  
                              ___wmul@multiplier 000A                                 ?_escreve_cmd_lcd 0001  
                    escreve_frase_ram_lcd@buffer 000D                                 ??_inicializa_SPI 000A  
                                ?_init_interrupt 0001                                     ??_disk_ioctl 000D  
                                   ??_disk_write 0030                              armazena_ltlo@buffer 003E  
                                   f_lseek@clust 00A5                                  _inicializa_uart 59A2  
                                   f_lseek@csize 00A1                                     f_lseek@ifptr 009D  
                               _mensagem_inicial 46A0                                    ??_posicao_lat 000A  
                                     ?_hora_nome 000A                                    _temp_buff_lat 0162  
                                ?_init_oscilador 0001                                     ??_clust2sect 001A  
                              ___lmul@multiplier 000A                                        copy_data0 437C  
                                      copy_data1 439C                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5BB6                                    _flag_anomalia 00F1  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2BD4  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 007A  
                       escreve_inteiro_lcd@F3223 01F3                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5ACE                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 52C0                                     _SentenceType 00FD  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2BD4  
                                       ___awtoft 5624                                         ___ftpack 42BA  
                             __end_of_clust2sect 42BA                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5C0A                       disparo_gravacao@velocidade 02E7  
                               __size_of_f_write 0596                                 __size_of_get_fix 0030  
                                    _gps_minutos 59E6                                 __size_of_command 005A  
                          __end_of_init_hardware 5B70                                         _check_fs 4966  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 015C                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 016C  
                       _convert_to_int_point_lat 5028                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5224                                 __size_of_rawhora 000A  
                                       __ptext11 4414                                         __ptext20 3F98  
                                       __ptext12 1BFC                                         __ptext21 3CCC  
                                       __ptext13 2810                                         __ptext30 4F1A  
                                       __ptext22 5624                                         __ptext14 2F0C  
                                       __ptext31 4D8C                                         __ptext23 42BA  
                                       __ptext15 57B6                                         __ptext40 406A  
                                       __ptext32 5C74                                         __ptext24 5C48  
                                       __ptext16 5C20                                         __ptext41 4FD0  
                                       __ptext33 4A6A                                         __ptext25 57E4  
                                       __ptext17 5C2A                                         __ptext50 59A2  
                                       __ptext42 5028                                         __ptext34 5C6E  
                                       __ptext26 5570                                         __ptext18 5C34  
                                       __ptext51 3BC4                                         __ptext43 5980  
                                       __ptext35 5A6E                                         __ptext27 546A  
                                       __ptext19 5C3E                                         __ptext60 52C0  
                                       __ptext52 413C                                         __ptext44 3878  
                                       __ptext36 58E8                                         __ptext28 3EB0  
                                       __ptext61 5308                                         __ptext53 5A8E  
                                       __ptext45 55EA                                         __ptext37 4AE4  
                                       __ptext29 4856                                         __ptext70 12CC  
                                       __ptext62 5894                                         __ptext54 3604  
                                       __ptext46 44BE                                         __ptext38 4B5E  
                                       __ptext71 1E82                                         __ptext63 5728  
                                       __ptext55 53E0                                         __ptext47 54AC  
                                       __ptext39 48E2                                         __ptext80 5910  
                                       __ptext72 3356                                         __ptext64 5C52  
                                       __ptext56 586A                                         __ptext48 512E  
                                       __ptext81 1914                                         __ptext73 2102  
                                       __ptext65 0F7E                                         __ptext57 565C  
                                       __ptext49 5B40                                         __ptext90 50D8  
                                       __ptext82 47C6                                         __ptext74 308E  
                                       __ptext66 5080                                         __ptext58 56C8  
                                       __ptext91 5350                                         __ptext83 4EBC  
                                       __ptext75 4208                                         __ptext67 5530  
                                       __ptext59 56F8                                         __ptext92 0AF2  
                                       __ptext84 4CB8                                         __ptext76 4562  
                                       __ptext68 0012                                         __ptext93 2D76  
                                       __ptext85 5180                                         __ptext77 5426  
                                       __ptext69 4DF2                                         __ptext94 237C  
                                       __ptext86 4BD8                                         __ptext78 05A8  
                                       __ptext95 25E8                                         __ptext87 5ACE  
                                       __ptext79 5812                                         __ptext96 49E8  
                                       __ptext88 4966                                         __ptext97 583E  
                                       __ptext89 4734                                         __ptext98 3750  
                                       __ptext99 5398                                 __size_of_proceed 000C  
                                       _filename 0256                                      _rawAltitude 011A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 0170  
                                   _rmc_pointers 022A                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0048                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5274  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5B40  
                         __end_of_sdc_disk_write 2D76                                        monta_sd@i 0014  
                                       _gps_flag 014B                                         _latitude 5C3E  
                                       _gps_hora 595C                                      _rawLatitude 01BE  
                                       _init_lcd 4602                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 4562                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5C74  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4CB8                               __end_of_init_ports 5B26  
                                       _rawSpeed 026A                                      ??_data_nome 000C  
                              _comma_counter_gga 00F9                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00F8                                  _dados_gps_to_sd 4E58  
                                       _rmc_code 0159                                         _monta_sd 1606  
                                       _validate 5398                                      ??_diferenca 0035  
                                       _sentence 0145                                     move_window@n 0043  
                                       _response 5BF2                                         f_sync@fp 0060  
                            _point_buff_gps_long 0168                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 59C4                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0004                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 25E8  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5BE4  
                                   _tempo_backup 0133                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5B26  
                                 _verifica_fence 4F1A                                    _armazena_ltlo 48E2  
                                   _poligono_ext 0100                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 012D                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0151                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 56C8                         __end_of_disparo_gravacao 2A2A  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3AB2                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000B  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 2102                              ??_config_timer_zero 000C  
                                    _move_window 2A2A                                  _fence_diff_long 6129  
                              get_latitude@index 000B                           ??_mostra_dados_display 0010  
                                   _posicao_long 5C74                                    _get_longitude 52C0  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5B94                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5BF2  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5B40                           __end_of_verifica_fence 4F76  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5C6E  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4EBC  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 00FF                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 2102  
                        disparo_gravacao@fix_gps 02F3                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3677 6129                    __end_ofmensagem_inicial@F3679 6118  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02F5  
