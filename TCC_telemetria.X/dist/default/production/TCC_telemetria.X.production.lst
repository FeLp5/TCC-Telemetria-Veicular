

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu May 19 16:03:58 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   142                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   151                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   152                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   153                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   154  0000                     
   155                           ; Version 2.30
   156                           ; Generated 26/08/2020 GMT
   157                           ; 
   158                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution. Publication is not required when
   172                           ;        this file is used in an embedded application.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC18F4550 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190  0000                     
   191                           	psect	idataCOMRAM
   192  005A90                     __pidataCOMRAM:
   193                           	callstack 0
   194                           
   195                           ;initializer for leitura_sdcard@size
   196  005A90  58                 	db	88
   197                           
   198                           	psect	idataBANK1
   199  0059EC                     __pidataBANK1:
   200                           	callstack 0
   201                           
   202                           ;initializer for escreve_inteiro_uart@F3215
   203  0059EC  30                 	db	48
   204  0059ED  30                 	db	48
   205  0059EE  30                 	db	48
   206  0059EF  30                 	db	48
   207  0059F0  30                 	db	48
   208  0059F1  30                 	db	48
   209  0059F2  00                 	db	0
   210                           
   211                           ;initializer for escreve_inteiro_lcd@F3223
   212  0059F3  30                 	db	48
   213  0059F4  30                 	db	48
   214  0059F5  30                 	db	48
   215  0059F6  30                 	db	48
   216  0059F7  30                 	db	48
   217  0059F8  30                 	db	48
   218  0059F9  00                 	db	0
   219                           
   220                           	psect	idataBANK2
   221  004A46                     __pidataBANK2:
   222                           	callstack 0
   223                           
   224                           ;initializer for verifica_dados_operacionais@dados_long
   225  004A46  30                 	db	48
   226  004A47  30                 	db	48
   227  004A48  30                 	db	48
   228  004A49  30                 	db	48
   229  004A4A  30                 	db	48
   230  004A4B  30                 	db	48
   231  004A4C  30                 	db	48
   232  004A4D  30                 	db	48
   233  004A4E  30                 	db	48
   234  004A4F  30                 	db	48
   235  004A50  30                 	db	48
   236  004A51  30                 	db	48
   237  004A52  30                 	db	48
   238  004A53  30                 	db	48
   239  004A54  30                 	db	48
   240  004A55  30                 	db	48
   241  004A56  30                 	db	48
   242  004A57  30                 	db	48
   243  004A58  30                 	db	48
   244  004A59  30                 	db	48
   245  004A5A  30                 	db	48
   246  004A5B  30                 	db	48
   247  004A5C  30                 	db	48
   248  004A5D  30                 	db	48
   249  004A5E  30                 	db	48
   250  004A5F  30                 	db	48
   251  004A60  30                 	db	48
   252  004A61  30                 	db	48
   253  004A62  30                 	db	48
   254  004A63  30                 	db	48
   255  004A64  30                 	db	48
   256  004A65  30                 	db	48
   257  004A66  30                 	db	48
   258  004A67  30                 	db	48
   259  004A68  30                 	db	48
   260  004A69  30                 	db	48
   261                           
   262                           ;initializer for verifica_dados_operacionais@dados_lat
   263  004A6A  30                 	db	48
   264  004A6B  30                 	db	48
   265  004A6C  30                 	db	48
   266  004A6D  30                 	db	48
   267  004A6E  30                 	db	48
   268  004A6F  30                 	db	48
   269  004A70  30                 	db	48
   270  004A71  30                 	db	48
   271  004A72  30                 	db	48
   272  004A73  30                 	db	48
   273  004A74  00                 	db	0
   274  004A75  30                 	db	48
   275  004A76  30                 	db	48
   276  004A77  30                 	db	48
   277  004A78  30                 	db	48
   278  004A79  30                 	db	48
   279  004A7A  30                 	db	48
   280  004A7B  30                 	db	48
   281  004A7C  30                 	db	48
   282  004A7D  30                 	db	48
   283  004A7E  30                 	db	48
   284  004A7F  00                 	db	0
   285  004A80  30                 	db	48
   286  004A81  30                 	db	48
   287  004A82  30                 	db	48
   288  004A83  30                 	db	48
   289  004A84  30                 	db	48
   290  004A85  30                 	db	48
   291  004A86  30                 	db	48
   292  004A87  30                 	db	48
   293  004A88  30                 	db	48
   294  004A89  30                 	db	48
   295  004A8A  00                 	db	0
   296                           
   297                           ;initializer for verifica_dados_operacionais@dados_data
   298  004A8B  30                 	db	48
   299  004A8C  30                 	db	48
   300  004A8D  30                 	db	48
   301  004A8E  30                 	db	48
   302  004A8F  30                 	db	48
   303  004A90  30                 	db	48
   304  004A91  30                 	db	48
   305  004A92  30                 	db	48
   306  004A93  30                 	db	48
   307  004A94  30                 	db	48
   308  004A95  30                 	db	48
   309  004A96  30                 	db	48
   310  004A97  30                 	db	48
   311  004A98  30                 	db	48
   312  004A99  30                 	db	48
   313  004A9A  30                 	db	48
   314  004A9B  30                 	db	48
   315  004A9C  30                 	db	48
   316                           
   317                           ;initializer for verifica_dados_operacionais@dados_hora
   318  004A9D  30                 	db	48
   319  004A9E  30                 	db	48
   320  004A9F  30                 	db	48
   321  004AA0  30                 	db	48
   322  004AA1  30                 	db	48
   323  004AA2  30                 	db	48
   324  004AA3  30                 	db	48
   325  004AA4  30                 	db	48
   326  004AA5  30                 	db	48
   327  004AA6  30                 	db	48
   328  004AA7  30                 	db	48
   329  004AA8  30                 	db	48
   330  004AA9  30                 	db	48
   331  004AAA  30                 	db	48
   332  004AAB  30                 	db	48
   333  004AAC  30                 	db	48
   334  004AAD  30                 	db	48
   335  004AAE  30                 	db	48
   336                           
   337                           ;initializer for verifica_dados_operacionais@dados_vel
   338  004AAF  30                 	db	48
   339  004AB0  30                 	db	48
   340  004AB1  30                 	db	48
   341  004AB2  30                 	db	48
   342  004AB3  30                 	db	48
   343  004AB4  30                 	db	48
   344  004AB5  30                 	db	48
   345  004AB6  30                 	db	48
   346  004AB7  30                 	db	48
   347  004AB8  30                 	db	48
   348  004AB9  30                 	db	48
   349  004ABA  30                 	db	48
   350  004ABB  30                 	db	48
   351  004ABC  30                 	db	48
   352  004ABD  30                 	db	48
   353  004ABE  30                 	db	48
   354  004ABF  30                 	db	48
   355  004AC0  30                 	db	48
   356                           
   357                           	psect	mediumconst
   358  006100                     __pmediumconst:
   359                           	callstack 0
   360  006100  00                 	db	0
   361  006101                     mensagem_inicial@F3666:
   362                           	callstack 0
   363  006101  54                 	db	84
   364  006102  43                 	db	67
   365  006103  43                 	db	67
   366  006104  2D                 	db	45
   367  006105  2D                 	db	45
   368  006106  54                 	db	84
   369  006107  45                 	db	69
   370  006108  4C                 	db	76
   371  006109  45                 	db	69
   372  00610A  4D                 	db	77
   373  00610B  54                 	db	84
   374  00610C  52                 	db	82
   375  00610D  49                 	db	73
   376  00610E  41                 	db	65
   377  00610F  00                 	db	0
   378  006110  00                 	db	0
   379  006111  00                 	db	0
   380  006112                     __end_ofmensagem_inicial@F3666:
   381                           	callstack 0
   382  006112                     mensagem_inicial@F3664:
   383                           	callstack 0
   384  006112  46                 	db	70
   385  006113  41                 	db	65
   386  006114  54                 	db	84
   387  006115  45                 	db	69
   388  006116  43                 	db	67
   389  006117  20                 	db	32
   390  006118  53                 	db	83
   391  006119  54                 	db	84
   392  00611A  20                 	db	32
   393  00611B  41                 	db	65
   394  00611C  4E                 	db	78
   395  00611D  44                 	db	68
   396  00611E  52                 	db	82
   397  00611F  45                 	db	69
   398  006120  00                 	db	0
   399  006121  00                 	db	0
   400  006122  00                 	db	0
   401  006123                     __end_ofmensagem_inicial@F3664:
   402                           	callstack 0
   403  006123                     _fence_diff_long:
   404                           	callstack 0
   405  006123  2D                 	db	45
   406  006124  30                 	db	48
   407  006125  34                 	db	52
   408  006126  36                 	db	54
   409  006127  33                 	db	51
   410  006128  33                 	db	51
   411  006129  39                 	db	57
   412  00612A  34                 	db	52
   413  00612B  30                 	db	48
   414  00612C  35                 	db	53
   415  00612D  30                 	db	48
   416  00612E  2D                 	db	45
   417  00612F  30                 	db	48
   418  006130  34                 	db	52
   419  006131  36                 	db	54
   420  006132  32                 	db	50
   421  006133  39                 	db	57
   422  006134  34                 	db	52
   423  006135  31                 	db	49
   424  006136  34                 	db	52
   425  006137  37                 	db	55
   426  006138  34                 	db	52
   427  006139  2D                 	db	45
   428  00613A  30                 	db	48
   429  00613B  34                 	db	52
   430  00613C  36                 	db	54
   431  00613D  32                 	db	50
   432  00613E  39                 	db	57
   433  00613F  34                 	db	52
   434  006140  31                 	db	49
   435  006141  34                 	db	52
   436  006142  37                 	db	55
   437  006143  34                 	db	52
   438  006144  2D                 	db	45
   439  006145  30                 	db	48
   440  006146  34                 	db	52
   441  006147  36                 	db	54
   442  006148  33                 	db	51
   443  006149  33                 	db	51
   444  00614A  39                 	db	57
   445  00614B  34                 	db	52
   446  00614C  30                 	db	48
   447  00614D  35                 	db	53
   448  00614E  30                 	db	48
   449  00614F                     __end_of_fence_diff_long:
   450                           	callstack 0
   451  00614F                     _fence_diff_lat:
   452                           	callstack 0
   453  00614F  2D                 	db	45
   454  006150  32                 	db	50
   455  006151  33                 	db	51
   456  006152  33                 	db	51
   457  006153  36                 	db	54
   458  006154  34                 	db	52
   459  006155  36                 	db	54
   460  006156  36                 	db	54
   461  006157  35                 	db	53
   462  006158  33                 	db	51
   463  006159  2D                 	db	45
   464  00615A  32                 	db	50
   465  00615B  33                 	db	51
   466  00615C  33                 	db	51
   467  00615D  36                 	db	54
   468  00615E  34                 	db	52
   469  00615F  36                 	db	54
   470  006160  36                 	db	54
   471  006161  35                 	db	53
   472  006162  33                 	db	51
   473  006163  2D                 	db	45
   474  006164  32                 	db	50
   475  006165  33                 	db	51
   476  006166  34                 	db	52
   477  006167  30                 	db	48
   478  006168  35                 	db	53
   479  006169  39                 	db	57
   480  00616A  36                 	db	54
   481  00616B  34                 	db	52
   482  00616C  32                 	db	50
   483  00616D  2D                 	db	45
   484  00616E  32                 	db	50
   485  00616F  33                 	db	51
   486  006170  34                 	db	52
   487  006171  30                 	db	48
   488  006172  35                 	db	53
   489  006173  39                 	db	57
   490  006174  36                 	db	54
   491  006175  34                 	db	52
   492  006176  32                 	db	50
   493  006177                     __end_of_fence_diff_lat:
   494                           	callstack 0
   495  0000                     _TMR0	set	4054
   496  0000                     _PORTEbits	set	3972
   497  0000                     _PCL	set	4089
   498  0000                     _PCLATH	set	4090
   499  0000                     _PIE1bits	set	3997
   500  0000                     _RCSTA	set	4011
   501  0000                     _TXSTA	set	4012
   502  0000                     _RCREG	set	4014
   503  0000                     _RCSTAbits	set	4011
   504  0000                     _SPBRG	set	4015
   505  0000                     _PIR1bits	set	3998
   506  0000                     _SSPBUF	set	4041
   507  0000                     _SSPCON1bits	set	4038
   508  0000                     _SSPSTATbits	set	4039
   509  0000                     _SSPCON1	set	4038
   510  0000                     _SSPSTAT	set	4039
   511  0000                     _TRISCbits	set	3988
   512  0000                     _TRISBbits	set	3987
   513  0000                     _PORTBbits	set	3969
   514  0000                     _PR2	set	4043
   515  0000                     _TMR2	set	4044
   516  0000                     _T2CON	set	4042
   517  0000                     _OSCCONbits	set	4051
   518  0000                     _TRISE	set	3990
   519  0000                     _TRISC	set	3988
   520  0000                     _TRISA	set	3986
   521  0000                     _TRISD	set	3989
   522  0000                     _LATB	set	3978
   523  0000                     _TRISB	set	3987
   524  0000                     _ADCON1	set	4033
   525  0000                     _T0CONbits	set	4053
   526  0000                     _INTCONbits	set	4082
   527  0000                     _PIE1	set	3997
   528  0000                     _INTCON3	set	4080
   529  0000                     _INTCON2	set	4081
   530  0000                     _INTCON	set	4082
   531  0000                     _SPPCFG	set	3939
   532  0000                     _SPPCON	set	3941
   533  0000                     _T0CON	set	4053
   534  0000                     _PORTDbits	set	3971
   535  0000                     _TRISDbits	set	3989
   536  0000                     _LATBbits	set	3978
   537  0000                     _LATCbits	set	3979
   538  0000                     _INT0IE	set	32660
   539  0000                     _INT0IF	set	32657
   540  0000                     _T0IF	set	32658
   541  0000                     _TMR0IF	set	32658
   542  0000                     _RCIF	set	31989
   543  0000                     _TXEN	set	32101
   544  0000                     _CREN	set	32092
   545  0000                     _SPEN	set	32095
   546  0000                     _SYNC	set	32100
   547  0000                     _BRGH	set	32098
   548  006177  6F                 	db	111	;'o'
   549  006178  20                 	db	32
   550  006179  53                 	db	83	;'S'
   551  00617A  69                 	db	105	;'i'
   552  00617B  73                 	db	115	;'s'
   553  00617C  74                 	db	116	;'t'
   554  00617D  65                 	db	101	;'e'
   555  00617E  6D                 	db	109	;'m'
   556  00617F  61                 	db	97	;'a'
   557  006180  20                 	db	32
   558  006181  64                 	db	100	;'d'
   559  006182  65                 	db	101	;'e'
   560  006183  20                 	db	32
   561  006184  61                 	db	97	;'a'
   562  006185  72                 	db	114	;'r'
   563  006186  71                 	db	113	;'q'
   564  006187  75                 	db	117	;'u'
   565  006188  69                 	db	105	;'i'
   566  006189  76                 	db	118	;'v'
   567  00618A  6F                 	db	111	;'o'
   568  00618B  00                 	db	0
   569  00618C                     STR_2:
   570  00618C  49                 	db	73	;'I'
   571  00618D  6E                 	db	110	;'n'
   572  00618E  73                 	db	115	;'s'
   573  00618F  69                 	db	105	;'i'
   574  006190  72                 	db	114	;'r'
   575  006191  61                 	db	97	;'a'
   576  006192  20                 	db	32
   577  006193  6F                 	db	111	;'o'
   578  006194  20                 	db	32
   579  006195  43                 	db	67	;'C'
   580  006196  61                 	db	97	;'a'
   581  006197  72                 	db	114	;'r'
   582  006198  74                 	db	116	;'t'
   583  006199  61                 	db	97	;'a'
   584  00619A  6F                 	db	111	;'o'
   585  00619B  00                 	db	0
   586  00619C                     STR_15:
   587  00619C  76                 	db	118	;'v'
   588  00619D  25                 	db	37
   589  00619E  73                 	db	115	;'s'
   590  00619F  3B                 	db	59	;';'
   591  0061A0  6C                 	db	108	;'l'
   592  0061A1  74                 	db	116	;'t'
   593  0061A2  25                 	db	37
   594  0061A3  73                 	db	115	;'s'
   595  0061A4  3B                 	db	59	;';'
   596  0061A5  6C                 	db	108	;'l'
   597  0061A6  6F                 	db	111	;'o'
   598  0061A7  25                 	db	37
   599  0061A8  73                 	db	115	;'s'
   600  0061A9  3B                 	db	59	;';'
   601  0061AA  00                 	db	0
   602  0061AB  45                 	db	69	;'E'
   603  0061AC  72                 	db	114	;'r'
   604  0061AD  72                 	db	114	;'r'
   605  0061AE  6F                 	db	111	;'o'
   606  0061AF  20                 	db	32
   607  0061B0  61                 	db	97	;'a'
   608  0061B1  6F                 	db	111	;'o'
   609  0061B2  20                 	db	32
   610  0061B3  6D                 	db	109	;'m'
   611  0061B4  6F                 	db	111	;'o'
   612  0061B5  6E                 	db	110	;'n'
   613  0061B6  74                 	db	116	;'t'
   614  0061B7  61                 	db	97	;'a'
   615  0061B8  72                 	db	114	;'r'
   616  0061B9  00                 	db	0
   617  0061BA  45                 	db	69	;'E'
   618  0061BB  72                 	db	114	;'r'
   619  0061BC  72                 	db	114	;'r'
   620  0061BD  6F                 	db	111	;'o'
   621  0061BE  20                 	db	32
   622  0061BF  61                 	db	97	;'a'
   623  0061C0  6F                 	db	111	;'o'
   624  0061C1  20                 	db	32
   625  0061C2  63                 	db	99	;'c'
   626  0061C3  72                 	db	114	;'r'
   627  0061C4  69                 	db	105	;'i'
   628  0061C5  61                 	db	97	;'a'
   629  0061C6  72                 	db	114	;'r'
   630  0061C7  00                 	db	0
   631  0061C8  65                 	db	101	;'e'
   632  0061C9  78                 	db	120	;'x'
   633  0061CA  74                 	db	116	;'t'
   634  0061CB  66                 	db	102	;'f'
   635  0061CC  65                 	db	101	;'e'
   636  0061CD  6E                 	db	110	;'n'
   637  0061CE  63                 	db	99	;'c'
   638  0061CF  65                 	db	101	;'e'
   639  0061D0  2E                 	db	46
   640  0061D1  74                 	db	116	;'t'
   641  0061D2  78                 	db	120	;'x'
   642  0061D3  74                 	db	116	;'t'
   643  0061D4  00                 	db	0
   644  0061D5                     STR_22:
   645  0061D5  41                 	db	65	;'A'
   646  0061D6  47                 	db	71	;'G'
   647  0061D7  55                 	db	85	;'U'
   648  0061D8  41                 	db	65	;'A'
   649  0061D9  52                 	db	82	;'R'
   650  0061DA  44                 	db	68	;'D'
   651  0061DB  45                 	db	69	;'E'
   652  0061DC  2E                 	db	46
   653  0061DD  2E                 	db	46
   654  0061DE  2E                 	db	46
   655  0061DF  00                 	db	0
   656  0061E0                     STR_4:
   657  0061E0  4D                 	db	77	;'M'
   658  0061E1  4D                 	db	77	;'M'
   659  0061E2  43                 	db	67	;'C'
   660  0061E3  20                 	db	32
   661  0061E4  56                 	db	86	;'V'
   662  0061E5  65                 	db	101	;'e'
   663  0061E6  72                 	db	114	;'r'
   664  0061E7  2E                 	db	46
   665  0061E8  20                 	db	32
   666  0061E9  33                 	db	51	;'3'
   667  0061EA  00                 	db	0
   668  0061EB                     STR_1:
   669  0061EB  53                 	db	83	;'S'
   670  0061EC  65                 	db	101	;'e'
   671  0061ED  6D                 	db	109	;'m'
   672  0061EE  20                 	db	32
   673  0061EF  43                 	db	67	;'C'
   674  0061F0  61                 	db	97	;'a'
   675  0061F1  72                 	db	114	;'r'
   676  0061F2  74                 	db	116	;'t'
   677  0061F3  61                 	db	97	;'a'
   678  0061F4  6F                 	db	111	;'o'
   679  0061F5  00                 	db	0
   680  0061F6                     STR_17:
   681  0061F6  68                 	db	104	;'h'
   682  0061F7  25                 	db	37
   683  0061F8  73                 	db	115	;'s'
   684  0061F9  3B                 	db	59	;';'
   685  0061FA  64                 	db	100	;'d'
   686  0061FB  4E                 	db	78	;'N'
   687  0061FC  2F                 	db	47
   688  0061FD  41                 	db	65	;'A'
   689  0061FE  3B                 	db	59	;';'
   690  0061FF  00                 	db	0
   691  006200  56                 	db	86	;'V'
   692  006201  65                 	db	101	;'e'
   693  006202  72                 	db	114	;'r'
   694  006203  69                 	db	105	;'i'
   695  006204  66                 	db	102	;'f'
   696  006205  69                 	db	105	;'i'
   697  006206  71                 	db	113	;'q'
   698  006207  75                 	db	117	;'u'
   699  006208  65                 	db	101	;'e'
   700  006209  00                 	db	0
   701  00620A  6F                 	db	111	;'o'
   702  00620B  20                 	db	32
   703  00620C  61                 	db	97	;'a'
   704  00620D  72                 	db	114	;'r'
   705  00620E  71                 	db	113	;'q'
   706  00620F  75                 	db	117	;'u'
   707  006210  69                 	db	105	;'i'
   708  006211  76                 	db	118	;'v'
   709  006212  6F                 	db	111	;'o'
   710  006213  00                 	db	0
   711  006214                     STR_3:
   712  006214  53                 	db	83	;'S'
   713  006215  44                 	db	68	;'D'
   714  006216  20                 	db	32
   715  006217  56                 	db	86	;'V'
   716  006218  45                 	db	69	;'E'
   717  006219  52                 	db	82	;'R'
   718  00621A  2E                 	db	46
   719  00621B  20                 	db	32
   720  00621C  31                 	db	49	;'1'
   721  00621D  00                 	db	0
   722  00621E                     STR_35:
   723  00621E  42                 	db	66	;'B'
   724  00621F  31                 	db	49	;'1'
   725  006220  3A                 	db	58	;':'
   726  006221  46                 	db	70	;'F'
   727  006222  45                 	db	69	;'E'
   728  006223  4E                 	db	78	;'N'
   729  006224  43                 	db	67	;'C'
   730  006225  45                 	db	69	;'E'
   731  006226  00                 	db	0
   732  006227  6F                 	db	111	;'o'
   733  006228  20                 	db	32
   734  006229  63                 	db	99	;'c'
   735  00622A  61                 	db	97	;'a'
   736  00622B  72                 	db	114	;'r'
   737  00622C  74                 	db	116	;'t'
   738  00622D  61                 	db	97	;'a'
   739  00622E  6F                 	db	111	;'o'
   740  00622F  00                 	db	0
   741  006230                     STR_36:
   742  006230  42                 	db	66	;'B'
   743  006231  32                 	db	50	;'2'
   744  006232  3A                 	db	58	;':'
   745  006233  4C                 	db	76	;'L'
   746  006234  54                 	db	84	;'T'
   747  006235  4C                 	db	76	;'L'
   748  006236  4F                 	db	79	;'O'
   749  006237  00                 	db	0
   750  006238                     STR_28:
   751  006238  46                 	db	70	;'F'
   752  006239  45                 	db	69	;'E'
   753  00623A  4E                 	db	78	;'N'
   754  00623B  43                 	db	67	;'C'
   755  00623C  45                 	db	69	;'E'
   756  00623D  3A                 	db	58	;':'
   757  00623E  00                 	db	0
   758  00623F                     STR_24:
   759  00623F  44                 	db	68	;'D'
   760  006240  45                 	db	69	;'E'
   761  006241  4E                 	db	78	;'N'
   762  006242  54                 	db	84	;'T'
   763  006243  52                 	db	82	;'R'
   764  006244  4F                 	db	79	;'O'
   765  006245  00                 	db	0
   766  006246                     STR_13:
   767  006246  74                 	db	116	;'t'
   768  006247  65                 	db	101	;'e'
   769  006248  73                 	db	115	;'s'
   770  006249  74                 	db	116	;'t'
   771  00624A  65                 	db	101	;'e'
   772  00624B  33                 	db	51	;'3'
   773  00624C  00                 	db	0
   774  00624D                     STR_18:
   775  00624D  66                 	db	102	;'f'
   776  00624E  25                 	db	37
   777  00624F  73                 	db	115	;'s'
   778  006250  3B                 	db	59	;';'
   779  006251  0A                 	db	10
   780  006252  00                 	db	0
   781  006253                     STR_6:
   782  006253  47                 	db	71	;'G'
   783  006254  50                 	db	80	;'P'
   784  006255  47                 	db	71	;'G'
   785  006256  47                 	db	71	;'G'
   786  006257  41                 	db	65	;'A'
   787  006258  00                 	db	0
   788  006259                     STR_5:
   789  006259  47                 	db	71	;'G'
   790  00625A  50                 	db	80	;'P'
   791  00625B  52                 	db	82	;'R'
   792  00625C  4D                 	db	77	;'M'
   793  00625D  43                 	db	67	;'C'
   794  00625E  00                 	db	0
   795  00625F                     STR_32:
   796  00625F  46                 	db	70	;'F'
   797  006260  49                 	db	73	;'I'
   798  006261  58                 	db	88	;'X'
   799  006262  3A                 	db	58	;':'
   800  006263  00                 	db	0
   801  006264                     STR_23:
   802  006264  46                 	db	70	;'F'
   803  006265  4F                 	db	79	;'O'
   804  006266  52                 	db	82	;'R'
   805  006267  41                 	db	65	;'A'
   806  006268  00                 	db	0
   807  006269                     STR_14:
   808  006269  2E                 	db	46
   809  00626A  74                 	db	116	;'t'
   810  00626B  6C                 	db	108	;'l'
   811  00626C  6D                 	db	109	;'m'
   812  00626D  00                 	db	0
   813  00626E                     STR_34:
   814  00626E  6C                 	db	108	;'l'
   815  00626F  6F                 	db	111	;'o'
   816  006270  3A                 	db	58	;':'
   817  006271  00                 	db	0
   818  006272                     STR_33:
   819  006272  6C                 	db	108	;'l'
   820  006273  74                 	db	116	;'t'
   821  006274  3A                 	db	58	;':'
   822  006275  00                 	db	0
   823  006276                     STR_20:
   824  006276  46                 	db	70	;'F'
   825  006277  41                 	db	65	;'A'
   826  006278  54                 	db	84	;'T'
   827  006279  00                 	db	0
   828  00627A  0D                 	db	13
   829  00627B  0A                 	db	10
   830  00627C  00                 	db	0
   831  00627D                     STR_27:
   832  00627D  7C                 	db	124
   833  00627E  00                 	db	0
   834  00627F  00                 	db	0	; dummy byte at the end
   835  0000                     
   836                           ; #config settings
   837                           
   838                           	psect	cinit
   839  004404                     __pcinit:
   840                           	callstack 0
   841  004404                     start_initialization:
   842                           	callstack 0
   843  004404                     __initialization:
   844                           	callstack 0
   845                           
   846                           ; Initialize objects allocated to BANK2 (123 bytes)
   847                           ; load TBLPTR registers with __pidataBANK2
   848  004404  0E46               	movlw	low __pidataBANK2
   849  004406  6EF6               	movwf	tblptrl,c
   850  004408  0E4A               	movlw	high __pidataBANK2
   851  00440A  6EF7               	movwf	tblptrh,c
   852  00440C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   853  00440E  6EF8               	movwf	tblptru,c
   854  004410  EE02  F000         	lfsr	0,__pdataBANK2
   855  004414  EE10 F07B          	lfsr	1,123
   856  004418                     copy_data0:
   857  004418  0009               	tblrd		*+
   858  00441A  CFF5 FFEE          	movff	tablat,postinc0
   859  00441E  50E5               	movf	postdec1,w,c
   860  004420  50E1               	movf	fsr1l,w,c
   861  004422  E1FA               	bnz	copy_data0
   862                           
   863                           ; Initialize objects allocated to BANK1 (14 bytes)
   864                           ; load TBLPTR registers with __pidataBANK1
   865  004424  0EEC               	movlw	low __pidataBANK1
   866  004426  6EF6               	movwf	tblptrl,c
   867  004428  0E59               	movlw	high __pidataBANK1
   868  00442A  6EF7               	movwf	tblptrh,c
   869  00442C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   870  00442E  6EF8               	movwf	tblptru,c
   871  004430  EE01  F0E5         	lfsr	0,__pdataBANK1
   872  004434  EE10 F00E          	lfsr	1,14
   873  004438                     copy_data1:
   874  004438  0009               	tblrd		*+
   875  00443A  CFF5 FFEE          	movff	tablat,postinc0
   876  00443E  50E5               	movf	postdec1,w,c
   877  004440  50E1               	movf	fsr1l,w,c
   878  004442  E1FA               	bnz	copy_data1
   879                           
   880                           ; Initialize objects allocated to COMRAM (1 bytes)
   881                           ; load TBLPTR registers with __pidataCOMRAM
   882  004444  0E90               	movlw	low __pidataCOMRAM
   883  004446  6EF6               	movwf	tblptrl,c
   884  004448  0E5A               	movlw	high __pidataCOMRAM
   885  00444A  6EF7               	movwf	tblptrh,c
   886  00444C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   887  00444E  6EF8               	movwf	tblptru,c
   888  004450  0009               	tblrd		*+	;fetch initializer
   889  004452  CFF5 F045          	movff	tablat,__pdataCOMRAM
   890                           
   891                           ; Clear objects allocated to BIGRAM (544 bytes)
   892  004456  EE02  F0DB         	lfsr	0,__pbssBIGRAM
   893  00445A  EE12 F020          	lfsr	1,544
   894  00445E                     clear_0:
   895  00445E  6AEE               	clrf	postinc0,c
   896  004460  50E5               	movf	postdec1,w,c
   897  004462  50E1               	movf	fsr1l,w,c
   898  004464  E1FC               	bnz	clear_0
   899  004466  50E2               	movf	fsr1h,w,c
   900  004468  E1FA               	bnz	clear_0
   901                           
   902                           ; Clear objects allocated to BANK2 (62 bytes)
   903  00446A  EE02  F07B         	lfsr	0,__pbssBANK2
   904  00446E  0E3E               	movlw	62
   905  004470                     clear_1:
   906  004470  6AEE               	clrf	postinc0,c
   907  004472  06E8               	decf	wreg,f,c
   908  004474  E1FD               	bnz	clear_1
   909                           
   910                           ; Clear objects allocated to BANK1 (229 bytes)
   911  004476  EE01  F000         	lfsr	0,__pbssBANK1
   912  00447A  0EE5               	movlw	229
   913  00447C                     clear_2:
   914  00447C  6AEE               	clrf	postinc0,c
   915  00447E  06E8               	decf	wreg,f,c
   916  004480  E1FD               	bnz	clear_2
   917                           
   918                           ; Clear objects allocated to BANK0 (19 bytes)
   919  004482  EE00  F0ED         	lfsr	0,__pbssBANK0
   920  004486  0E13               	movlw	19
   921  004488                     clear_3:
   922  004488  6AEE               	clrf	postinc0,c
   923  00448A  06E8               	decf	wreg,f,c
   924  00448C  E1FD               	bnz	clear_3
   925                           
   926                           ; Clear objects allocated to COMRAM (20 bytes)
   927  00448E  EE00  F031         	lfsr	0,__pbssCOMRAM
   928  004492  0E14               	movlw	20
   929  004494                     clear_4:
   930  004494  6AEE               	clrf	postinc0,c
   931  004496  06E8               	decf	wreg,f,c
   932  004498  E1FD               	bnz	clear_4
   933  00449A                     end_of_initialization:
   934                           	callstack 0
   935  00449A                     __end_of__initialization:
   936                           	callstack 0
   937  00449A  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   938  00449C  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   939  00449E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   940  0044A0  6EF8               	movwf	tblptru,c
   941  0044A2  0100               	movlb	0
   942  0044A4  EF6B  F02B         	goto	_main	;jump to C main() function
   943                           
   944                           	psect	bssCOMRAM
   945  000031                     __pbssCOMRAM:
   946                           	callstack 0
   947  000031                     _fence_flag:
   948                           	callstack 0
   949  000031                     	ds	3
   950  000034                     _time_atualizacao:
   951                           	callstack 0
   952  000034                     	ds	2
   953  000036                     _FatFs:
   954                           	callstack 0
   955  000036                     	ds	2
   956  000038                     troca_de_tela@last_state:
   957                           	callstack 0
   958  000038                     	ds	1
   959  000039                     troca_de_tela@state:
   960                           	callstack 0
   961  000039                     	ds	1
   962  00003A                     _flag_anomalia:
   963                           	callstack 0
   964  00003A                     	ds	1
   965  00003B                     _tarefa_em_execucao:
   966                           	callstack 0
   967  00003B                     	ds	1
   968  00003C                     _sinaliza_int_timer:
   969                           	callstack 0
   970  00003C                     	ds	1
   971  00003D                     _data_uart_recebe:
   972                           	callstack 0
   973  00003D                     	ds	1
   974  00003E                     _estado:
   975                           	callstack 0
   976  00003E                     	ds	1
   977  00003F                     escrita_sdcard@f_fix:
   978                           	callstack 0
   979  00003F                     	ds	1
   980  000040                     _data_hoje:
   981                           	callstack 0
   982  000040                     	ds	1
   983  000041                     	ds	1
   984  000042                     _Term:
   985                           	callstack 0
   986  000042                     	ds	1
   987  000043                     _SentenceType:
   988                           	callstack 0
   989  000043                     	ds	1
   990  000044                     _char_number:
   991                           	callstack 0
   992  000044                     	ds	1
   993                           
   994                           	psect	dataCOMRAM
   995  000045                     __pdataCOMRAM:
   996                           	callstack 0
   997  000045                     	ds	1
   998                           
   999                           	psect	bssBANK0
  1000  0000ED                     __pbssBANK0:
  1001                           	callstack 0
  1002  0000ED                     _poligono_ext:
  1003                           	callstack 0
  1004  0000ED                     	ds	16
  1005  0000FD                     verifica_dados_operacionais@contador_gravacoes:
  1006                           	callstack 0
  1007  0000FD                     	ds	1
  1008  0000FE                     verifica_dados_operacionais@contador_anterior:
  1009                           	callstack 0
  1010  0000FE                     	ds	1
  1011  0000FF                     verifica_dados_operacionais@contador_atual:
  1012                           	callstack 0
  1013  0000FF                     	ds	1
  1014                           
  1015                           	psect	bssBANK1
  1016  000100                     __pbssBANK1:
  1017                           	callstack 0
  1018  000100                     _dado:
  1019                           	callstack 0
  1020  000100                     	ds	10
  1021  00010A                     _rawAltitude:
  1022                           	callstack 0
  1023  00010A                     	ds	7
  1024  000111                     _tempo_tarefa:
  1025                           	callstack 0
  1026  000111                     	ds	6
  1027  000117                     _tempo_backup:
  1028                           	callstack 0
  1029  000117                     	ds	6
  1030  00011D                     _p_tarefas:
  1031                           	callstack 0
  1032  00011D                     	ds	6
  1033  000123                     _data:
  1034                           	callstack 0
  1035  000123                     	ds	6
  1036  000129                     _rawCourse:
  1037                           	callstack 0
  1038  000129                     	ds	6
  1039  00012F                     _gps_flag:
  1040                           	callstack 0
  1041  00012F                     	ds	6
  1042  000135                     verifica_dados_operacionais@velocidade_atual_int:
  1043                           	callstack 0
  1044  000135                     	ds	4
  1045  000139                     	ds	4
  1046  00013D                     _rawSatellites:
  1047                           	callstack 0
  1048  00013D                     	ds	3
  1049  000140                     _temp_buff_lat:
  1050                           	callstack 0
  1051  000140                     	ds	2
  1052  000142                     _temp_buff_long:
  1053                           	callstack 0
  1054  000142                     	ds	2
  1055  000144                     verifica_dados_operacionais@velocidade_atual:
  1056                           	callstack 0
  1057  000144                     	ds	2
  1058  000146                     _point_buff_gps_long:
  1059                           	callstack 0
  1060  000146                     	ds	2
  1061  000148                     _point_buff_gps_lat:
  1062                           	callstack 0
  1063  000148                     	ds	2
  1064  00014A                     _time_recovery:
  1065                           	callstack 0
  1066  00014A                     	ds	2
  1067  00014C                     _time_sd:
  1068                           	callstack 0
  1069  00014C                     	ds	2
  1070  00014E                     _timeout_tarefa:
  1071                           	callstack 0
  1072  00014E                     	ds	2
  1073  000150                     _fsid:
  1074                           	callstack 0
  1075  000150                     	ds	2
  1076  000152                     _GPGGA_ok:
  1077                           	callstack 0
  1078  000152                     	ds	2
  1079  000154                     _GPRMC_ok:
  1080                           	callstack 0
  1081  000154                     	ds	2
  1082  000156                     _data_buff:
  1083                           	callstack 0
  1084  000156                     	ds	2
  1085  000158                     _fil:
  1086                           	callstack 0
  1087  000158                     	ds	28
  1088  000174                     _lo:
  1089                           	callstack 0
  1090  000174                     	ds	13
  1091  000181                     _rawLongitude:
  1092                           	callstack 0
  1093  000181                     	ds	13
  1094  00018E                     _lt:
  1095                           	callstack 0
  1096  00018E                     	ds	12
  1097  00019A                     _rawLatitude:
  1098                           	callstack 0
  1099  00019A                     	ds	12
  1100  0001A6                     _buffer:
  1101                           	callstack 0
  1102  0001A6                     	ds	12
  1103  0001B2                     _rawTime:
  1104                           	callstack 0
  1105  0001B2                     	ds	11
  1106  0001BD                     _fence:
  1107                           	callstack 0
  1108  0001BD                     	ds	7
  1109  0001C4                     _rawDate:
  1110                           	callstack 0
  1111  0001C4                     	ds	7
  1112  0001CB                     _hora:
  1113                           	callstack 0
  1114  0001CB                     	ds	6
  1115  0001D1                     _vel:
  1116                           	callstack 0
  1117  0001D1                     	ds	6
  1118  0001D7                     _rawSpeed:
  1119                           	callstack 0
  1120  0001D7                     	ds	6
  1121  0001DD                     _sentence:
  1122                           	callstack 0
  1123  0001DD                     	ds	6
  1124  0001E3                     _rawFix:
  1125                           	callstack 0
  1126  0001E3                     	ds	2
  1127                           
  1128                           	psect	dataBANK1
  1129  0001E5                     __pdataBANK1:
  1130                           	callstack 0
  1131  0001E5                     	ds	7
  1132  0001EC                     escreve_inteiro_lcd@F3223:
  1133                           	callstack 0
  1134  0001EC                     	ds	7
  1135                           
  1136                           	psect	bssBANK2
  1137  00027B                     __pbssBANK2:
  1138                           	callstack 0
  1139  00027B                     _string_dado:
  1140                           	callstack 0
  1141  00027B                     	ds	22
  1142  000291                     _dado_arquivo:
  1143                           	callstack 0
  1144  000291                     	ds	20
  1145  0002A5                     _filename:
  1146                           	callstack 0
  1147  0002A5                     	ds	20
  1148                           
  1149                           	psect	dataBANK2
  1150  000200                     __pdataBANK2:
  1151                           	callstack 0
  1152  000200                     verifica_dados_operacionais@dados_long:
  1153                           	callstack 0
  1154  000200                     	ds	36
  1155  000224                     verifica_dados_operacionais@dados_lat:
  1156                           	callstack 0
  1157  000224                     	ds	33
  1158  000245                     verifica_dados_operacionais@dados_data:
  1159                           	callstack 0
  1160  000245                     	ds	18
  1161  000257                     verifica_dados_operacionais@dados_hora:
  1162                           	callstack 0
  1163  000257                     	ds	18
  1164  000269                     verifica_dados_operacionais@dados_vel:
  1165                           	callstack 0
  1166  000269                     	ds	18
  1167                           
  1168                           	psect	bssBIGRAM
  1169  0002DB                     __pbssBIGRAM:
  1170                           	callstack 0
  1171  0002DB                     _fs:
  1172                           	callstack 0
  1173  0002DB                     	ds	544
  1174                           
  1175                           	psect	cstackBANK2
  1176  0002B9                     __pcstackBANK2:
  1177                           	callstack 0
  1178  0002B9                     fprintf@s:
  1179                           	callstack 0
  1180                           
  1181                           ; 16 bytes @ 0x0
  1182  0002B9                     	ds	16
  1183  0002C9                     fprintf@res:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x10
  1187  0002C9                     	ds	2
  1188  0002CB                     _fprintf$2170:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x12
  1192  0002CB                     	ds	2
  1193  0002CD                     fprintf@w:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x14
  1197  0002CD                     	ds	2
  1198  0002CF                     fprintf@f:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x16
  1202  0002CF                     	ds	1
  1203  0002D0                     fprintf@r:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x17
  1207  0002D0                     	ds	1
  1208  0002D1                     fprintf@val:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x18
  1212  0002D1                     	ds	4
  1213  0002D5                     fprintf@arp:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x1C
  1217  0002D5                     	ds	1
  1218  0002D6                     fprintf@cc:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x1D
  1222  0002D6                     	ds	2
  1223  0002D8                     fprintf@i:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x1F
  1227  0002D8                     	ds	2
  1228  0002DA                     fprintf@c:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x21
  1232  0002DA                     	ds	1
  1233                           
  1234                           	psect	cstackBANK1
  1235  0001F3                     __pcstackBANK1:
  1236                           	callstack 0
  1237  0001F3                     
  1238                           ; 1 bytes @ 0x0
  1239  0001F3                     	ds	1
  1240  0001F4                     disparo_gravacao@fix_gps:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x1
  1244  0001F4                     	ds	2
  1245  0001F6                     
  1246                           ; 1 bytes @ 0x3
  1247  0001F6                     	ds	2
  1248  0001F8                     escalonador@cont:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x5
  1252  0001F8                     	ds	1
  1253                           
  1254                           	psect	cstackBANK0
  1255  000060                     __pcstackBANK0:
  1256                           	callstack 0
  1257  000060                     ??___ftmul:
  1258  000060                     ??_get_fattime:
  1259  000060                     ??_configura_baudrate_uart:
  1260  000060                     atol@sign:
  1261                           	callstack 0
  1262  000060                     ultoa@v:
  1263                           	callstack 0
  1264  000060                     mensagem_inicial@msg_linha_um:
  1265                           	callstack 0
  1266                           
  1267                           ; 17 bytes @ 0x0
  1268  000060                     	ds	1
  1269  000061                     sdc_disk_read@start_add:
  1270                           	callstack 0
  1271  000061                     atol@a:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x1
  1275  000061                     	ds	1
  1276  000062                     sdc_disk_initialize@stat:
  1277                           	callstack 0
  1278  000062                     sdc_disk_write@count1:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x2
  1282  000062                     	ds	1
  1283  000063                     ___ftmul@exp:
  1284                           	callstack 0
  1285  000063                     sdc_disk_initialize@count1:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x3
  1289  000063                     	ds	1
  1290  000064                     sdc_disk_write@res:
  1291                           	callstack 0
  1292  000064                     ultoa@c:
  1293                           	callstack 0
  1294  000064                     ___ftmul@f3_as_product:
  1295                           	callstack 0
  1296                           
  1297                           ; 3 bytes @ 0x4
  1298  000064                     	ds	1
  1299  000065                     atol@c:
  1300                           	callstack 0
  1301  000065                     ltoa@buf:
  1302                           	callstack 0
  1303  000065                     sdc_disk_initialize@crc_number:
  1304                           	callstack 0
  1305  000065                     sdc_disk_read@length:
  1306                           	callstack 0
  1307  000065                     sdc_disk_write@j:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x5
  1311  000065                     	ds	1
  1312  000066                     ?_convert_to_int_point_lat:
  1313                           	callstack 0
  1314  000066                     ?_convert_to_int:
  1315                           	callstack 0
  1316  000066                     ?_convert_to_int_point_long:
  1317                           	callstack 0
  1318  000066                     convert_to_int@p_buff:
  1319                           	callstack 0
  1320  000066                     ltoa@val:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x6
  1324  000066                     	ds	1
  1325  000067                     sdc_disk_initialize@buff_i:
  1326                           	callstack 0
  1327  000067                     sdc_disk_read@buff:
  1328                           	callstack 0
  1329  000067                     sdc_disk_write@buff:
  1330                           	callstack 0
  1331  000067                     ___ftmul@cntr:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x7
  1335  000067                     	ds	1
  1336  000068                     sdc_disk_initialize@ocr:
  1337                           	callstack 0
  1338  000068                     ___ftmul@sign:
  1339                           	callstack 0
  1340  000068                     disk_read@buff:
  1341                           	callstack 0
  1342  000068                     disk_write@buff:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346  000068                     	ds	1
  1347  000069                     ?___fttol:
  1348                           	callstack 0
  1349  000069                     sdc_disk_initialize@count2:
  1350                           	callstack 0
  1351  000069                     ___fttol@f1:
  1352                           	callstack 0
  1353                           
  1354                           ; 3 bytes @ 0x9
  1355  000069                     	ds	1
  1356  00006A                     ltoa@base:
  1357                           	callstack 0
  1358  00006A                     disk_read@sector:
  1359                           	callstack 0
  1360  00006A                     disk_write@sector:
  1361                           	callstack 0
  1362  00006A                     convert_to_int_point_lat@convert_str_lat:
  1363                           	callstack 0
  1364  00006A                     convert_to_int_point_long@convert_str_long:
  1365                           	callstack 0
  1366                           
  1367                           ; 10 bytes @ 0xA
  1368  00006A                     	ds	1
  1369  00006B                     sdc_disk_initialize@buff:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0xB
  1373  00006B                     	ds	1
  1374  00006C                     escreve_inteiro_lcd@valor:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0xC
  1378  00006C                     	ds	1
  1379  00006D                     ??___fttol:
  1380                           
  1381                           ; 1 bytes @ 0xD
  1382  00006D                     	ds	1
  1383  00006E                     disk_read@count:
  1384                           	callstack 0
  1385  00006E                     disk_write@count:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0xE
  1389  00006E                     	ds	1
  1390  00006F                     ??_disk_read:
  1391  00006F                     ??_disk_write:
  1392                           
  1393                           ; 1 bytes @ 0xF
  1394  00006F                     	ds	1
  1395  000070                     disk_read@pdrv:
  1396                           	callstack 0
  1397  000070                     disk_write@pdrv:
  1398                           	callstack 0
  1399  000070                     escreve_inteiro_lcd@texto:
  1400                           	callstack 0
  1401                           
  1402                           ; 7 bytes @ 0x10
  1403  000070                     	ds	1
  1404  000071                     disk_read@result:
  1405                           	callstack 0
  1406  000071                     disk_write@result:
  1407                           	callstack 0
  1408  000071                     mensagem_inicial@msg_dois:
  1409                           	callstack 0
  1410                           
  1411                           ; 17 bytes @ 0x11
  1412  000071                     	ds	1
  1413  000072                     ___fttol@sign1:
  1414                           	callstack 0
  1415                           
  1416                           ; 1 bytes @ 0x12
  1417  000072                     	ds	1
  1418  000073                     disk_read@res:
  1419                           	callstack 0
  1420  000073                     disk_write@res:
  1421                           	callstack 0
  1422  000073                     ___fttol@lval:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x13
  1426  000073                     	ds	1
  1427  000074                     convert_to_int_point_long@j:
  1428                           	callstack 0
  1429  000074                     move_window@sector:
  1430                           	callstack 0
  1431  000074                     check_fs@sect:
  1432                           	callstack 0
  1433                           
  1434                           ; 4 bytes @ 0x14
  1435  000074                     	ds	1
  1436  000075                     convert_to_int_point_lat@j:
  1437                           	callstack 0
  1438  000075                     convert_to_int_point_long@i:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x15
  1442  000075                     	ds	1
  1443  000076                     convert_to_int_point_lat@i:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x16
  1447  000076                     	ds	1
  1448  000077                     diferenca@index:
  1449                           	callstack 0
  1450  000077                     ___fttol@exp1:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x17
  1454  000077                     	ds	1
  1455  000078                     ??_move_window:
  1456  000078                     diferenca@valor_lat:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x18
  1460  000078                     	ds	2
  1461  00007A                     check_fs@fs:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x1A
  1465  00007A                     	ds	2
  1466  00007C                     auto_mount@path:
  1467                           	callstack 0
  1468  00007C                     diferenca@valor_long:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x1C
  1472  00007C                     	ds	1
  1473  00007D                     auto_mount@chk_wp:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x1D
  1477  00007D                     	ds	1
  1478  00007E                     ??_auto_mount:
  1479                           
  1480                           ; 1 bytes @ 0x1E
  1481  00007E                     	ds	2
  1482  000080                     armazena_ltlo@j:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x20
  1486  000080                     	ds	1
  1487  000081                     armazena_ltlo@i:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x21
  1491  000081                     	ds	1
  1492  000082                     move_window@n:
  1493                           	callstack 0
  1494  000082                     latitude_to_convert@latitude:
  1495                           	callstack 0
  1496  000082                     longitude_to_convert@longitude:
  1497                           	callstack 0
  1498                           
  1499                           ; 11 bytes @ 0x22
  1500  000082                     	ds	1
  1501  000083                     move_window@wsect:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x23
  1505  000083                     	ds	4
  1506  000087                     move_window@fs:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x27
  1510  000087                     	ds	2
  1511  000089                     ?_get_cluster:
  1512                           	callstack 0
  1513  000089                     sync@fs:
  1514                           	callstack 0
  1515  000089                     get_cluster@clust:
  1516                           	callstack 0
  1517  000089                     put_cluster@clust:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x29
  1521  000089                     	ds	2
  1522  00008B                     ??_get_cluster:
  1523  00008B                     latitude_to_convert@j:
  1524                           	callstack 0
  1525  00008B                     put_cluster@val:
  1526                           	callstack 0
  1527  00008B                     f_sync@fp:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x2B
  1531  00008B                     	ds	1
  1532  00008C                     latitude_to_convert@i:
  1533                           	callstack 0
  1534                           
  1535                           ; 1 bytes @ 0x2C
  1536  00008C                     	ds	1
  1537  00008D                     ??_put_cluster:
  1538  00008D                     longitude_to_convert@j:
  1539                           	callstack 0
  1540  00008D                     f_sync@tim:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x2D
  1544  00008D                     	ds	1
  1545  00008E                     longitude_to_convert@i:
  1546                           	callstack 0
  1547                           
  1548                           ; 1 bytes @ 0x2E
  1549  00008E                     	ds	1
  1550  00008F                     ??_verifica_fence:
  1551                           
  1552                           ; 1 bytes @ 0x2F
  1553  00008F                     	ds	1
  1554  000090                     ??_verifica_dados_operacionais:
  1555                           
  1556                           ; 1 bytes @ 0x30
  1557  000090                     	ds	1
  1558  000091                     f_sync@res:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0x31
  1562  000091                     	ds	1
  1563  000092                     f_sync@dir:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x32
  1567  000092                     	ds	1
  1568  000093                     _put_cluster$1567:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x33
  1572  000093                     	ds	1
  1573  000094                     get_cluster@wc:
  1574                           	callstack 0
  1575  000094                     f_close@fp:
  1576                           	callstack 0
  1577  000094                     auto_mount@maxclust:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x34
  1581  000094                     	ds	1
  1582  000095                     verifica_dados_operacionais@vel:
  1583                           	callstack 0
  1584  000095                     _put_cluster$1568:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x35
  1588  000095                     	ds	1
  1589  000096                     f_close@res:
  1590                           	callstack 0
  1591  000096                     verifica_dados_operacionais@i:
  1592                           	callstack 0
  1593  000096                     get_cluster@fatsect:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x36
  1597  000096                     	ds	1
  1598  000097                     put_cluster@fatsect:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x37
  1602  000097                     	ds	1
  1603  000098                     auto_mount@bootsect:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x38
  1607  000098                     	ds	2
  1608  00009A                     get_cluster@bc:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x3A
  1612  00009A                     	ds	1
  1613  00009B                     put_cluster@bc:
  1614                           	callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x3B
  1617  00009B                     	ds	1
  1618  00009C                     get_cluster@fs:
  1619                           	callstack 0
  1620  00009C                     auto_mount@totalsect:
  1621                           	callstack 0
  1622                           
  1623                           ; 4 bytes @ 0x3C
  1624  00009C                     	ds	1
  1625  00009D                     put_cluster@p:
  1626                           	callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x3D
  1629  00009D                     	ds	1
  1630  00009E                     next_dir_entry@dj:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x3E
  1634  00009E                     	ds	1
  1635  00009F                     ??_next_dir_entry:
  1636  00009F                     put_cluster@fs:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x3F
  1640  00009F                     	ds	1
  1641  0000A0                     auto_mount@p:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x40
  1645  0000A0                     	ds	1
  1646  0000A1                     ?_create_chain:
  1647                           	callstack 0
  1648  0000A1                     remove_chain@clust:
  1649                           	callstack 0
  1650  0000A1                     create_chain@clust:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x41
  1654  0000A1                     	ds	1
  1655  0000A2                     auto_mount@fmt:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x42
  1659  0000A2                     	ds	1
  1660  0000A3                     auto_mount@stat:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x43
  1664  0000A3                     	ds	1
  1665  0000A4                     auto_mount@fatsize:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x44
  1669  0000A4                     	ds	1
  1670  0000A5                     remove_chain@nxt:
  1671                           	callstack 0
  1672  0000A5                     create_chain@mcl:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x45
  1676  0000A5                     	ds	1
  1677  0000A6                     next_dir_entry@clust:
  1678                           	callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x46
  1681  0000A6                     	ds	1
  1682  0000A7                     remove_chain@fs:
  1683                           	callstack 0
  1684  0000A7                     create_chain@fs:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x47
  1688  0000A7                     	ds	1
  1689  0000A8                     next_dir_entry@idx:
  1690                           	callstack 0
  1691  0000A8                     auto_mount@fs:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x48
  1695  0000A8                     	ds	1
  1696  0000A9                     create_chain@cstat:
  1697                           	callstack 0
  1698                           
  1699                           ; 2 bytes @ 0x49
  1700  0000A9                     	ds	1
  1701  0000AA                     trace_path@dj:
  1702                           	callstack 0
  1703                           
  1704                           ; 1 bytes @ 0x4A
  1705  0000AA                     	ds	1
  1706  0000AB                     trace_path@fn:
  1707                           	callstack 0
  1708  0000AB                     create_chain@scl:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x4B
  1712  0000AB                     	ds	1
  1713  0000AC                     trace_path@path:
  1714                           	callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x4C
  1717  0000AC                     	ds	1
  1718  0000AD                     create_chain@ncl:
  1719                           	callstack 0
  1720                           
  1721                           ; 2 bytes @ 0x4D
  1722  0000AD                     	ds	1
  1723  0000AE                     trace_path@dir:
  1724                           	callstack 0
  1725                           
  1726                           ; 1 bytes @ 0x4E
  1727  0000AE                     	ds	1
  1728  0000AF                     ??_trace_path:
  1729  0000AF                     reserve_direntry@dj:
  1730                           	callstack 0
  1731  0000AF                     f_write@fp:
  1732                           	callstack 0
  1733  0000AF                     f_lseek@fp:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x4F
  1737  0000AF                     	ds	1
  1738  0000B0                     reserve_direntry@dir:
  1739                           	callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x50
  1742  0000B0                     	ds	1
  1743  0000B1                     ??_reserve_direntry:
  1744  0000B1                     f_write@buff:
  1745                           	callstack 0
  1746  0000B1                     f_lseek@ofs:
  1747                           	callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x51
  1750  0000B1                     	ds	1
  1751  0000B2                     f_write@btw:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x52
  1755  0000B2                     	ds	1
  1756  0000B3                     _trace_path$1724:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x53
  1760  0000B3                     	ds	1
  1761  0000B4                     f_write@bw:
  1762                           	callstack 0
  1763                           
  1764                           ; 1 bytes @ 0x54
  1765  0000B4                     	ds	1
  1766  0000B5                     ??_f_lseek:
  1767  0000B5                     ??_f_write:
  1768  0000B5                     _trace_path$1726:
  1769                           	callstack 0
  1770  0000B5                     reserve_direntry@sector:
  1771                           	callstack 0
  1772                           
  1773                           ; 4 bytes @ 0x55
  1774  0000B5                     	ds	2
  1775  0000B7                     trace_path@fs:
  1776                           	callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x57
  1779  0000B7                     	ds	2
  1780  0000B9                     reserve_direntry@n:
  1781                           	callstack 0
  1782  0000B9                     trace_path@clust:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x59
  1786  0000B9                     	ds	1
  1787  0000BA                     reserve_direntry@dptr:
  1788                           	callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x5A
  1791  0000BA                     	ds	1
  1792  0000BB                     trace_path@ds:
  1793                           	callstack 0
  1794                           
  1795                           ; 1 bytes @ 0x5B
  1796  0000BB                     	ds	1
  1797  0000BC                     reserve_direntry@c:
  1798                           	callstack 0
  1799  0000BC                     trace_path@dptr:
  1800                           	callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x5C
  1803  0000BC                     	ds	1
  1804  0000BD                     reserve_direntry@clust:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x5D
  1808  0000BD                     	ds	2
  1809  0000BF                     reserve_direntry@fs:
  1810                           	callstack 0
  1811                           
  1812                           ; 2 bytes @ 0x5F
  1813  0000BF                     	ds	2
  1814  0000C1                     f_write@res:
  1815                           	callstack 0
  1816  0000C1                     f_open@fp:
  1817                           	callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x61
  1820  0000C1                     	ds	1
  1821  0000C2                     f_write@wbuff:
  1822                           	callstack 0
  1823                           
  1824                           ; 1 bytes @ 0x62
  1825  0000C2                     	ds	1
  1826  0000C3                     f_open@path:
  1827                           	callstack 0
  1828  0000C3                     f_write@sect:
  1829                           	callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x63
  1832  0000C3                     	ds	2
  1833  0000C5                     f_open@mode:
  1834                           	callstack 0
  1835  0000C5                     f_lseek@res:
  1836                           	callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x65
  1839  0000C5                     	ds	1
  1840  0000C6                     ??_f_open:
  1841  0000C6                     f_lseek@ifptr:
  1842                           	callstack 0
  1843                           
  1844                           ; 4 bytes @ 0x66
  1845  0000C6                     	ds	1
  1846  0000C7                     f_write@cc:
  1847                           	callstack 0
  1848                           
  1849                           ; 2 bytes @ 0x67
  1850  0000C7                     	ds	2
  1851  0000C9                     f_write@clust:
  1852                           	callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x69
  1855  0000C9                     	ds	1
  1856  0000CA                     f_lseek@csize:
  1857                           	callstack 0
  1858  0000CA                     f_open@fn:
  1859                           	callstack 0
  1860                           
  1861                           ; 12 bytes @ 0x6A
  1862  0000CA                     	ds	1
  1863  0000CB                     f_write@wcnt:
  1864                           	callstack 0
  1865                           
  1866                           ; 2 bytes @ 0x6B
  1867  0000CB                     	ds	2
  1868  0000CD                     ?_fputc:
  1869                           	callstack 0
  1870  0000CD                     fputc@chr:
  1871                           	callstack 0
  1872                           
  1873                           ; 2 bytes @ 0x6D
  1874  0000CD                     	ds	1
  1875  0000CE                     f_lseek@clust:
  1876                           	callstack 0
  1877                           
  1878                           ; 2 bytes @ 0x6E
  1879  0000CE                     	ds	1
  1880  0000CF                     fputc@fil:
  1881                           	callstack 0
  1882                           
  1883                           ; 2 bytes @ 0x6F
  1884  0000CF                     	ds	2
  1885  0000D1                     fputc@c:
  1886                           	callstack 0
  1887                           
  1888                           ; 1 bytes @ 0x71
  1889  0000D1                     	ds	1
  1890  0000D2                     fputc@bw:
  1891                           	callstack 0
  1892                           
  1893                           ; 2 bytes @ 0x72
  1894  0000D2                     	ds	2
  1895  0000D4                     ?_fputs:
  1896                           	callstack 0
  1897  0000D4                     fputs@str:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x74
  1901  0000D4                     	ds	2
  1902  0000D6                     f_open@rs:
  1903                           	callstack 0
  1904  0000D6                     fputs@fil:
  1905                           	callstack 0
  1906                           
  1907                           ; 2 bytes @ 0x76
  1908  0000D6                     	ds	2
  1909  0000D8                     ??_fputs:
  1910  0000D8                     f_open@dw:
  1911                           	callstack 0
  1912                           
  1913                           ; 4 bytes @ 0x78
  1914  0000D8                     	ds	1
  1915  0000D9                     fputs@n:
  1916                           	callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x79
  1919  0000D9                     	ds	2
  1920  0000DB                     ?_fprintf:
  1921                           	callstack 0
  1922  0000DB                     fprintf@fil:
  1923                           	callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x7B
  1926  0000DB                     	ds	1
  1927  0000DC                     f_open@res:
  1928                           	callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x7C
  1931  0000DC                     	ds	1
  1932  0000DD                     f_open@dir:
  1933                           	callstack 0
  1934  0000DD                     fprintf@str:
  1935                           	callstack 0
  1936                           
  1937                           ; 2 bytes @ 0x7D
  1938  0000DD                     	ds	2
  1939  0000DF                     f_open@dj:
  1940                           	callstack 0
  1941                           
  1942                           ; 14 bytes @ 0x7F
  1943  0000DF                     	ds	6
  1944  0000E5                     ??_fprintf:
  1945                           
  1946                           ; 1 bytes @ 0x85
  1947  0000E5                     	ds	8
  1948                           
  1949                           	psect	cstackCOMRAM
  1950  000001                     __pcstackCOMRAM:
  1951                           	callstack 0
  1952  000001                     ?_strcmp:
  1953                           	callstack 0
  1954  000001                     stringcpy@str1:
  1955                           	callstack 0
  1956  000001                     strcmp@s1:
  1957                           	callstack 0
  1958  000001                     i2write_timer_zero@timer0:
  1959                           	callstack 0
  1960                           
  1961                           ; 2 bytes @ 0x0
  1962  000001                     	ds	2
  1963  000003                     stringcpy@str2:
  1964                           	callstack 0
  1965  000003                     strcmp@s2:
  1966                           	callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x2
  1969  000003                     	ds	2
  1970  000005                     ??_strcmp:
  1971  000005                     stringcpy@dir:
  1972                           	callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x4
  1975  000005                     	ds	2
  1976  000007                     stringcpy@size:
  1977                           	callstack 0
  1978  000007                     strcmp@r:
  1979                           	callstack 0
  1980                           
  1981                           ; 1 bytes @ 0x6
  1982  000007                     	ds	1
  1983  000008                     ??_stringcpy:
  1984                           
  1985                           ; 1 bytes @ 0x7
  1986  000008                     	ds	2
  1987  00000A                     stringcpy@chr:
  1988                           	callstack 0
  1989                           
  1990                           ; 1 bytes @ 0x9
  1991  00000A                     	ds	1
  1992  00000B                     GPSRead@buff:
  1993                           	callstack 0
  1994                           
  1995                           ; 1 bytes @ 0xA
  1996  00000B                     	ds	1
  1997  00000C                     GPSRead@c:
  1998                           	callstack 0
  1999                           
  2000                           ; 1 bytes @ 0xB
  2001  00000C                     	ds	1
  2002  00000D                     ??_isr:
  2003                           
  2004                           ; 1 bytes @ 0xC
  2005  00000D                     	ds	12
  2006  000019                     isr@cont:
  2007                           	callstack 0
  2008                           
  2009                           ; 1 bytes @ 0x18
  2010  000019                     	ds	1
  2011  00001A                     ??_dummy_clocks:
  2012  00001A                     ??_isdigit:
  2013  00001A                     ?_latitude:
  2014                           	callstack 0
  2015  00001A                     ?_longitude:
  2016                           	callstack 0
  2017  00001A                     ?_rawhora:
  2018                           	callstack 0
  2019  00001A                     ?_rawdata:
  2020                           	callstack 0
  2021  00001A                     ?_fix:
  2022                           	callstack 0
  2023  00001A                     ?_Speed:
  2024                           	callstack 0
  2025  00001A                     ?_strlen:
  2026                           	callstack 0
  2027  00001A                     ?_memcmp:
  2028                           	callstack 0
  2029  00001A                     ?_gps_segundos:
  2030                           	callstack 0
  2031  00001A                     ?_gps_minutos:
  2032                           	callstack 0
  2033  00001A                     ?_gps_hora:
  2034                           	callstack 0
  2035  00001A                     ?_gps_dia:
  2036                           	callstack 0
  2037  00001A                     ?_gps_mes:
  2038                           	callstack 0
  2039  00001A                     ?_gps_ano:
  2040                           	callstack 0
  2041  00001A                     ?___wmul:
  2042                           	callstack 0
  2043  00001A                     ?___ftpack:
  2044                           	callstack 0
  2045  00001A                     ?___lmul:
  2046                           	callstack 0
  2047  00001A                     ?___lldiv:
  2048                           	callstack 0
  2049  00001A                     ?___aldiv:
  2050                           	callstack 0
  2051  00001A                     ?___llmod:
  2052                           	callstack 0
  2053  00001A                     disk_ioctl@cmd:
  2054                           	callstack 0
  2055  00001A                     delay@contador_ext:
  2056                           	callstack 0
  2057  00001A                     response@buff:
  2058                           	callstack 0
  2059  00001A                     recebe_dado_gps@flag_recebe:
  2060                           	callstack 0
  2061  00001A                     verifica_plausibilidade_long@posicao:
  2062                           	callstack 0
  2063  00001A                     verifica_plausibilidade_lat@posicao:
  2064                           	callstack 0
  2065  00001A                     write_timer_zero@timer0:
  2066                           	callstack 0
  2067  00001A                     f_mount@fs:
  2068                           	callstack 0
  2069  00001A                     ___wmul@multiplier:
  2070                           	callstack 0
  2071  00001A                     memcmp@s1:
  2072                           	callstack 0
  2073  00001A                     memcpy@d1:
  2074                           	callstack 0
  2075  00001A                     memset@p1:
  2076                           	callstack 0
  2077  00001A                     strcat@to:
  2078                           	callstack 0
  2079  00001A                     strlen@s:
  2080                           	callstack 0
  2081  00001A                     ___ftpack@arg:
  2082                           	callstack 0
  2083  00001A                     wait_ready@timeout:
  2084                           	callstack 0
  2085  00001A                     ___lmul@multiplier:
  2086                           	callstack 0
  2087  00001A                     ___lldiv@dividend:
  2088                           	callstack 0
  2089  00001A                     ___aldiv@dividend:
  2090                           	callstack 0
  2091  00001A                     ___llmod@dividend:
  2092                           	callstack 0
  2093                           
  2094                           ; 4 bytes @ 0x19
  2095  00001A                     	ds	1
  2096  00001B                     sdc_disk_status@pdrv:
  2097                           	callstack 0
  2098  00001B                     delay@contador_int:
  2099                           	callstack 0
  2100  00001B                     escreve_SPI@dado:
  2101                           	callstack 0
  2102  00001B                     recebe_dado_gps@timeout:
  2103                           	callstack 0
  2104  00001B                     _isdigit$3209:
  2105                           	callstack 0
  2106  00001B                     disk_ioctl@buff:
  2107                           	callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x1A
  2110  00001B                     	ds	1
  2111  00001C                     ??_gps_segundos:
  2112  00001C                     ??_gps_minutos:
  2113  00001C                     ??_gps_hora:
  2114  00001C                     ??_gps_dia:
  2115  00001C                     ??_gps_mes:
  2116  00001C                     ??_gps_ano:
  2117  00001C                     escreve_cmd_lcd@comando:
  2118                           	callstack 0
  2119  00001C                     endereco_cursor_lcd@endereco:
  2120                           	callstack 0
  2121  00001C                     escreve_caractere_lcd@data:
  2122                           	callstack 0
  2123  00001C                     dummy_clocks@n:
  2124                           	callstack 0
  2125  00001C                     f_mount@drv:
  2126                           	callstack 0
  2127  00001C                     isdigit@c:
  2128                           	callstack 0
  2129  00001C                     ___wmul@multiplicand:
  2130                           	callstack 0
  2131  00001C                     memcmp@s2:
  2132                           	callstack 0
  2133  00001C                     memcpy@s1:
  2134                           	callstack 0
  2135  00001C                     memset@c:
  2136                           	callstack 0
  2137  00001C                     strcat@from:
  2138                           	callstack 0
  2139  00001C                     strcpy@to:
  2140                           	callstack 0
  2141  00001C                     strlen@cp:
  2142                           	callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x1B
  2145  00001C                     	ds	1
  2146  00001D                     ??_init_lcd:
  2147  00001D                     disk_ioctl@pdrv:
  2148                           	callstack 0
  2149  00001D                     posicao_cursor_lcd@coluna:
  2150                           	callstack 0
  2151  00001D                     ___ftpack@exp:
  2152                           	callstack 0
  2153  00001D                     escreve_frase_ram_lcd@buffer:
  2154                           	callstack 0
  2155  00001D                     dummy_clocks@i:
  2156                           	callstack 0
  2157                           
  2158                           ; 2 bytes @ 0x1C
  2159  00001D                     	ds	1
  2160  00001E                     ?_get_fattime:
  2161                           	callstack 0
  2162  00001E                     disk_status@pdrv:
  2163                           	callstack 0
  2164  00001E                     disk_ioctl@res:
  2165                           	callstack 0
  2166  00001E                     posicao_cursor_lcd@linha:
  2167                           	callstack 0
  2168  00001E                     wait_ready@res:
  2169                           	callstack 0
  2170  00001E                     ___ftpack@sign:
  2171                           	callstack 0
  2172  00001E                     ___wmul@product:
  2173                           	callstack 0
  2174  00001E                     memcmp@n:
  2175                           	callstack 0
  2176  00001E                     memcpy@n:
  2177                           	callstack 0
  2178  00001E                     memset@n:
  2179                           	callstack 0
  2180  00001E                     strcat@cp:
  2181                           	callstack 0
  2182  00001E                     strcpy@from:
  2183                           	callstack 0
  2184  00001E                     ___lmul@multiplicand:
  2185                           	callstack 0
  2186  00001E                     ___lldiv@divisor:
  2187                           	callstack 0
  2188  00001E                     ___aldiv@divisor:
  2189                           	callstack 0
  2190  00001E                     ___llmod@divisor:
  2191                           	callstack 0
  2192                           
  2193                           ; 4 bytes @ 0x1D
  2194  00001E                     	ds	1
  2195  00001F                     ??___ftpack:
  2196  00001F                     disk_status@stat:
  2197                           	callstack 0
  2198  00001F                     posicao_cursor_lcd@endereco:
  2199                           	callstack 0
  2200  00001F                     command@arg:
  2201                           	callstack 0
  2202                           
  2203                           ; 4 bytes @ 0x1E
  2204  00001F                     	ds	1
  2205  000020                     ??_memcmp:
  2206  000020                     ??_mensagem_inicial:
  2207  000020                     ?_atoi:
  2208                           	callstack 0
  2209  000020                     memcpy@tmp:
  2210                           	callstack 0
  2211  000020                     monta_sd@dado:
  2212                           	callstack 0
  2213  000020                     validate@fs:
  2214                           	callstack 0
  2215  000020                     atoi@s:
  2216                           	callstack 0
  2217  000020                     memset@p:
  2218                           	callstack 0
  2219  000020                     strcpy@cp:
  2220                           	callstack 0
  2221                           
  2222                           ; 2 bytes @ 0x1F
  2223  000020                     	ds	1
  2224  000021                     memcpy@d:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0x20
  2228  000021                     	ds	1
  2229  000022                     ??_atoi:
  2230  000022                     make_dirfile@path:
  2231                           	callstack 0
  2232  000022                     ___aldiv@counter:
  2233                           	callstack 0
  2234  000022                     ___llmod@counter:
  2235                           	callstack 0
  2236  000022                     validate@id:
  2237                           	callstack 0
  2238  000022                     ___lmul@product:
  2239                           	callstack 0
  2240  000022                     ___lldiv@quotient:
  2241                           	callstack 0
  2242  000022                     get_fattime@f_time:
  2243                           	callstack 0
  2244                           
  2245                           ; 10 bytes @ 0x21
  2246  000022                     	ds	1
  2247  000023                     command@CRC:
  2248                           	callstack 0
  2249  000023                     monta_sd@index:
  2250                           	callstack 0
  2251  000023                     make_dirfile@dirname:
  2252                           	callstack 0
  2253  000023                     ___aldiv@sign:
  2254                           	callstack 0
  2255  000023                     memcpy@s:
  2256                           	callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x22
  2259  000023                     	ds	1
  2260  000024                     ??_make_dirfile:
  2261  000024                     ??_validate:
  2262  000024                     command@CMD:
  2263                           	callstack 0
  2264  000024                     monta_sd@i:
  2265                           	callstack 0
  2266  000024                     atoi@sign:
  2267                           	callstack 0
  2268  000024                     ___aldiv@quotient:
  2269                           	callstack 0
  2270                           
  2271                           ; 4 bytes @ 0x23
  2272  000024                     	ds	1
  2273  000025                     command@argument:
  2274                           	callstack 0
  2275  000025                     atoi@a:
  2276                           	callstack 0
  2277                           
  2278                           ; 2 bytes @ 0x24
  2279  000025                     	ds	1
  2280  000026                     ?_atol:
  2281                           	callstack 0
  2282  000026                     ?_clust2sect:
  2283                           	callstack 0
  2284  000026                     ___lldiv@counter:
  2285                           	callstack 0
  2286  000026                     sdc_disk_read@p_buff:
  2287                           	callstack 0
  2288  000026                     sdc_disk_write@p_buff:
  2289                           	callstack 0
  2290  000026                     clust2sect@clust:
  2291                           	callstack 0
  2292  000026                     _make_dirfile$1677:
  2293                           	callstack 0
  2294  000026                     atol@s:
  2295                           	callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x25
  2298  000026                     	ds	1
  2299  000027                     ?___awtoft:
  2300                           	callstack 0
  2301  000027                     ultoa@buf:
  2302                           	callstack 0
  2303  000027                     ___awtoft@c:
  2304                           	callstack 0
  2305                           
  2306                           ; 2 bytes @ 0x26
  2307  000027                     	ds	1
  2308  000028                     make_dirfile@b:
  2309                           	callstack 0
  2310  000028                     sdc_reset@count_nosd:
  2311                           	callstack 0
  2312  000028                     sdc_disk_read@sector:
  2313                           	callstack 0
  2314  000028                     sdc_disk_write@sector:
  2315                           	callstack 0
  2316  000028                     configura_baudrate_uart@baudrate:
  2317                           	callstack 0
  2318  000028                     ultoa@val:
  2319                           	callstack 0
  2320                           
  2321                           ; 4 bytes @ 0x27
  2322  000028                     	ds	1
  2323  000029                     make_dirfile@t:
  2324                           	callstack 0
  2325                           
  2326                           ; 1 bytes @ 0x28
  2327  000029                     	ds	1
  2328  00002A                     ??_atol:
  2329  00002A                     ??_clust2sect:
  2330  00002A                     make_dirfile@a:
  2331                           	callstack 0
  2332  00002A                     ___awtoft@sign:
  2333                           	callstack 0
  2334  00002A                     sdc_reset@count:
  2335                           	callstack 0
  2336                           
  2337                           ; 2 bytes @ 0x29
  2338  00002A                     	ds	1
  2339  00002B                     ?___ftmul:
  2340                           	callstack 0
  2341  00002B                     make_dirfile@n:
  2342                           	callstack 0
  2343  00002B                     ___ftmul@f1:
  2344                           	callstack 0
  2345                           
  2346                           ; 3 bytes @ 0x2A
  2347  00002B                     	ds	1
  2348  00002C                     sdc_reset@buff:
  2349                           	callstack 0
  2350  00002C                     sdc_disk_read@count:
  2351                           	callstack 0
  2352  00002C                     sdc_disk_write@count:
  2353                           	callstack 0
  2354  00002C                     make_dirfile@c:
  2355                           	callstack 0
  2356  00002C                     configura_baudrate_uart@x:
  2357                           	callstack 0
  2358  00002C                     ultoa@base:
  2359                           	callstack 0
  2360                           
  2361                           ; 2 bytes @ 0x2B
  2362  00002C                     	ds	1
  2363  00002D                     ??_sdc_disk_initialize:
  2364  00002D                     ??_sdc_disk_read:
  2365  00002D                     ??_sdc_disk_write:
  2366                           
  2367                           ; 1 bytes @ 0x2C
  2368  00002D                     	ds	1
  2369  00002E                     disk_initialize@pdrv:
  2370                           	callstack 0
  2371  00002E                     armazena_ltlo@buffer:
  2372                           	callstack 0
  2373  00002E                     ___ftmul@f2:
  2374                           	callstack 0
  2375                           
  2376                           ; 3 bytes @ 0x2D
  2377  00002E                     	ds	1
  2378  00002F                     ??_troca_de_tela:
  2379  00002F                     disk_initialize@stat:
  2380                           	callstack 0
  2381  00002F                     armazena_ltlo@index:
  2382                           	callstack 0
  2383  00002F                     clust2sect@fs:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x2E
  2387  00002F                     	ds	1
  2388  000030                     
  2389                           ; 1 bytes @ 0x2F
  2390  000030                     	ds	1
  2391  000031                     
  2392                           ; 1 bytes @ 0x30
  2393 ;;
  2394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2395 ;;
  2396 ;; *************** function _main *****************
  2397 ;; Defined at:
  2398 ;;		line 219 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 3F/1
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels required when called:   19
  2418 ;; This function calls:
  2419 ;;		_escalonador
  2420 ;;		_inicializa_tarefas
  2421 ;;		_inicializa_uart
  2422 ;;		_init_hardware
  2423 ;;		_init_lcd
  2424 ;;		_mensagem_inicial
  2425 ;; This function is called by:
  2426 ;;		Startup code after reset
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text0
  2431  0056D6                     __ptext0:
  2432                           	callstack 0
  2433  0056D6                     _main:
  2434                           	callstack 12
  2435                           
  2436                           ;main.c: 221: init_hardware();
  2437                           
  2438                           ;incstack = 0
  2439  0056D6  ECB8  F02C         	call	_init_hardware	;wreg free
  2440                           
  2441                           ;main.c: 222: T0CONbits.TMR0ON = 0;
  2442  0056DA  9ED5               	bcf	213,7,c	;volatile
  2443                           
  2444                           ;main.c: 223: init_lcd();
  2445  0056DC  ECA5  F022         	call	_init_lcd	;wreg free
  2446                           
  2447                           ;main.c: 224: mensagem_inicial();
  2448  0056E0  ECD3  F023         	call	_mensagem_inicial	;wreg free
  2449                           
  2450                           ;main.c: 225: inicializa_tarefas();
  2451  0056E4  ECD8  F028         	call	_inicializa_tarefas	;wreg free
  2452                           
  2453                           ; BSR set to: 1
  2454                           ;main.c: 226: inicializa_uart();
  2455  0056E8  ECDC  F02B         	call	_inicializa_uart	;wreg free
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;main.c: 228: T0CONbits.TMR0ON = 1;
  2459  0056EC  8ED5               	bsf	213,7,c	;volatile
  2460  0056EE                     l13490:
  2461                           
  2462                           ;main.c: 230: {;main.c: 232: if ((sinaliza_int_timer == 1) && (3))
  2463  0056EE  043C               	decf	_sinaliza_int_timer^0,w,c
  2464  0056F0  A4D8               	btfss	status,2,c
  2465  0056F2  D7FD               	goto	l13490
  2466                           
  2467                           ;main.c: 233: {;main.c: 234: sinaliza_int_timer = 0;
  2468  0056F4  0E00               	movlw	0
  2469  0056F6  6E3C               	movwf	_sinaliza_int_timer^0,c
  2470                           
  2471                           ;main.c: 235: escalonador();
  2472  0056F8  EC54  F022         	call	_escalonador	;wreg free
  2473  0056FC  D7F8               	goto	l13490
  2474  0056FE                     __end_of_main:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _mensagem_inicial *****************
  2478 ;; Defined at:
  2479 ;;		line 245 in file "main.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2484 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0
  2495 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2496 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2497 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2498 ;;Total ram usage:       36 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		_escreve_cmd_lcd
  2503 ;;		_escreve_frase_ram_lcd
  2504 ;;		_posicao_cursor_lcd
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text1
  2511  0047A6                     __ptext1:
  2512                           	callstack 0
  2513  0047A6                     _mensagem_inicial:
  2514                           	callstack 24
  2515                           
  2516                           ;main.c: 247: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;incstack = 0
  2520  0047A6  0E12               	movlw	low mensagem_inicial@F3664
  2521  0047A8  6EF6               	movwf	tblptrl,c
  2522  0047AA                     	if	1	;There is more than 1 active tblptr byte
  2523  0047AA  0E61               	movlw	high mensagem_inicial@F3664
  2524  0047AC  6EF7               	movwf	tblptrh,c
  2525  0047AE                     	endif
  2526  0047AE                     	if	0	;There are less than 3 active tblptr bytes
  2527  0047AE                     	endif
  2528  0047AE  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2529  0047B2  0E10               	movlw	16
  2530  0047B4                     u16780:
  2531  0047B4  0009               	tblrd		*+
  2532  0047B6  CFF5 FFDE          	movff	tablat,postinc2
  2533  0047BA  06E8               	decf	wreg,f,c
  2534  0047BC  E2FB               	bc	u16780
  2535                           
  2536                           ;main.c: 248: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2537  0047BE  0E01               	movlw	low mensagem_inicial@F3666
  2538  0047C0  6EF6               	movwf	tblptrl,c
  2539  0047C2                     	if	1	;There is more than 1 active tblptr byte
  2540  0047C2  0E61               	movlw	high mensagem_inicial@F3666
  2541  0047C4  6EF7               	movwf	tblptrh,c
  2542  0047C6                     	endif
  2543  0047C6                     	if	0	;There are less than 3 active tblptr bytes
  2544  0047C6                     	endif
  2545  0047C6  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2546  0047CA  0E10               	movlw	16
  2547  0047CC                     u16790:
  2548  0047CC  0009               	tblrd		*+
  2549  0047CE  CFF5 FFDE          	movff	tablat,postinc2
  2550  0047D2  06E8               	decf	wreg,f,c
  2551  0047D4  E2FB               	bc	u16790
  2552                           
  2553                           ;main.c: 250: posicao_cursor_lcd(1,0);
  2554  0047D6  0E00               	movlw	0
  2555  0047D8  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2556  0047DA  0E01               	movlw	1
  2557  0047DC  EC21  F027         	call	_posicao_cursor_lcd
  2558                           
  2559                           ;main.c: 251: escreve_frase_ram_lcd(msg_linha_um);
  2560  0047E0  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2561  0047E2  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2562  0047E4  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2563  0047E6  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2564                           
  2565                           ;main.c: 253: posicao_cursor_lcd(2,0);
  2566  0047EA  0E00               	movlw	0
  2567  0047EC  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2568  0047EE  0E02               	movlw	2
  2569  0047F0  EC21  F027         	call	_posicao_cursor_lcd
  2570                           
  2571                           ;main.c: 254: escreve_frase_ram_lcd(msg_dois);
  2572  0047F4  0E71               	movlw	low mensagem_inicial@msg_dois
  2573  0047F6  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2574  0047F8  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2575  0047FA  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2576                           
  2577                           ;main.c: 255: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2578  0047FE  0E3D               	movlw	61
  2579  004800  6E21               	movwf	(??_mensagem_inicial+1)^0,c
  2580  004802  0EE1               	movlw	225
  2581  004804  6E20               	movwf	??_mensagem_inicial^0,c
  2582  004806  0E40               	movlw	64
  2583  004808                     u16957:
  2584  004808  2EE8               	decfsz	wreg,f,c
  2585  00480A  D7FE               	bra	u16957
  2586  00480C  2E20               	decfsz	??_mensagem_inicial^0,f,c
  2587  00480E  D7FC               	bra	u16957
  2588  004810  2E21               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2589  004812  D7FA               	bra	u16957
  2590                           
  2591                           ;main.c: 256: escreve_cmd_lcd(0b00000001);
  2592  004814  0E01               	movlw	1
  2593  004816  EC19  F024         	call	_escreve_cmd_lcd
  2594                           
  2595                           ;main.c: 257: posicao_cursor_lcd(1,0);
  2596  00481A  0E00               	movlw	0
  2597  00481C  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2598  00481E  0E01               	movlw	1
  2599  004820  EC21  F027         	call	_posicao_cursor_lcd
  2600                           
  2601                           ;main.c: 258: escreve_frase_ram_lcd("AGUARDE...");
  2602  004824  0ED5               	movlw	low STR_22
  2603  004826  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2604  004828  0E61               	movlw	high STR_22
  2605  00482A  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2606  00482C  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2607  004830  0012               	return		;funcret
  2608  004832                     __end_of_mensagem_inicial:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _init_lcd *****************
  2612 ;; Defined at:
  2613 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2629 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2630 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    5
  2634 ;; This function calls:
  2635 ;;		_delay
  2636 ;;		_escreve_cmd_lcd
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text2
  2643  00454A                     __ptext2:
  2644                           	callstack 0
  2645  00454A                     _init_lcd:
  2646                           	callstack 25
  2647                           
  2648                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2649                           
  2650                           ;incstack = 0
  2651  00454A  9495               	bcf	149,2,c	;volatile
  2652                           
  2653                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2654  00454C  9295               	bcf	149,1,c	;volatile
  2655                           
  2656                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2657  00454E  9095               	bcf	149,0,c	;volatile
  2658                           
  2659                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2660  004550  9895               	bcf	149,4,c	;volatile
  2661                           
  2662                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2663  004552  9A95               	bcf	149,5,c	;volatile
  2664                           
  2665                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2666  004554  9C95               	bcf	149,6,c	;volatile
  2667                           
  2668                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2669  004556  9E95               	bcf	149,7,c	;volatile
  2670                           
  2671                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2672  004558  9483               	bcf	131,2,c	;volatile
  2673                           
  2674                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2675  00455A  9283               	bcf	131,1,c	;volatile
  2676                           
  2677                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2678  00455C  9083               	bcf	131,0,c	;volatile
  2679                           
  2680                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2681  00455E  9E83               	bcf	131,7,c	;volatile
  2682                           
  2683                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2684  004560  9C83               	bcf	131,6,c	;volatile
  2685                           
  2686                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2687  004562  8A83               	bsf	131,5,c	;volatile
  2688                           
  2689                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2690  004564  8883               	bsf	131,4,c	;volatile
  2691                           
  2692                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2693  004566  0EEA               	movlw	234
  2694  004568  6E1D               	movwf	??_init_lcd^0,c
  2695  00456A  0EC3               	movlw	195
  2696  00456C                     u16967:
  2697  00456C  2EE8               	decfsz	wreg,f,c
  2698  00456E  D7FE               	bra	u16967
  2699  004570  2E1D               	decfsz	??_init_lcd^0,f,c
  2700  004572  D7FC               	bra	u16967
  2701  004574  F000               	nop	
  2702                           
  2703                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2704  004576  8083               	bsf	131,0,c	;volatile
  2705                           
  2706                           ;display_lcd.c: 108: delay();
  2707  004578  EC81  F02C         	call	_delay	;wreg free
  2708                           
  2709                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2710  00457C  9083               	bcf	131,0,c	;volatile
  2711                           
  2712                           ;display_lcd.c: 110: delay();
  2713  00457E  EC81  F02C         	call	_delay	;wreg free
  2714                           
  2715                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2716  004582  0E4E               	movlw	78
  2717  004584  6E1D               	movwf	??_init_lcd^0,c
  2718  004586  0EEB               	movlw	235
  2719  004588                     u16977:
  2720  004588  2EE8               	decfsz	wreg,f,c
  2721  00458A  D7FE               	bra	u16977
  2722  00458C  2E1D               	decfsz	??_init_lcd^0,f,c
  2723  00458E  D7FC               	bra	u16977
  2724  004590  F000               	nop	
  2725                           
  2726                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2727  004592  8083               	bsf	131,0,c	;volatile
  2728                           
  2729                           ;display_lcd.c: 119: delay();
  2730  004594  EC81  F02C         	call	_delay	;wreg free
  2731                           
  2732                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2733  004598  9083               	bcf	131,0,c	;volatile
  2734                           
  2735                           ;display_lcd.c: 121: delay();
  2736  00459A  EC81  F02C         	call	_delay	;wreg free
  2737                           
  2738                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2739  00459E  0E4E               	movlw	78
  2740  0045A0  6E1D               	movwf	??_init_lcd^0,c
  2741  0045A2  0EEB               	movlw	235
  2742  0045A4                     u16987:
  2743  0045A4  2EE8               	decfsz	wreg,f,c
  2744  0045A6  D7FE               	bra	u16987
  2745  0045A8  2E1D               	decfsz	??_init_lcd^0,f,c
  2746  0045AA  D7FC               	bra	u16987
  2747  0045AC  F000               	nop	
  2748                           
  2749                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2750  0045AE  8083               	bsf	131,0,c	;volatile
  2751                           
  2752                           ;display_lcd.c: 130: delay();
  2753  0045B0  EC81  F02C         	call	_delay	;wreg free
  2754                           
  2755                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2756  0045B4  9083               	bcf	131,0,c	;volatile
  2757                           
  2758                           ;display_lcd.c: 132: delay();
  2759  0045B6  EC81  F02C         	call	_delay	;wreg free
  2760                           
  2761                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2762  0045BA  9E83               	bcf	131,7,c	;volatile
  2763                           
  2764                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2765  0045BC  9C83               	bcf	131,6,c	;volatile
  2766                           
  2767                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2768  0045BE  8A83               	bsf	131,5,c	;volatile
  2769                           
  2770                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2771  0045C0  9883               	bcf	131,4,c	;volatile
  2772                           
  2773                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2774  0045C2  8083               	bsf	131,0,c	;volatile
  2775                           
  2776                           ;display_lcd.c: 143: delay();
  2777  0045C4  EC81  F02C         	call	_delay	;wreg free
  2778                           
  2779                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2780  0045C8  9083               	bcf	131,0,c	;volatile
  2781                           
  2782                           ;display_lcd.c: 145: delay();
  2783  0045CA  EC81  F02C         	call	_delay	;wreg free
  2784                           
  2785                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2786  0045CE  0E28               	movlw	40
  2787  0045D0  EC19  F024         	call	_escreve_cmd_lcd
  2788                           
  2789                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2790  0045D4  0E06               	movlw	6
  2791  0045D6  EC19  F024         	call	_escreve_cmd_lcd
  2792                           
  2793                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2794  0045DA  0E0E               	movlw	14
  2795  0045DC  EC19  F024         	call	_escreve_cmd_lcd
  2796                           
  2797                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2798  0045E0  0E01               	movlw	1
  2799  0045E2  EC19  F024         	call	_escreve_cmd_lcd
  2800  0045E6  0012               	return		;funcret
  2801  0045E8                     __end_of_init_lcd:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _init_hardware *****************
  2805 ;; Defined at:
  2806 ;;		line 52 in file "bibliotecas/hardware.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    5
  2827 ;; This function calls:
  2828 ;;		_config_timer_dois
  2829 ;;		_config_timer_zero
  2830 ;;		_init_interrupt
  2831 ;;		_init_oscilador
  2832 ;;		_init_ports
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text3
  2839  005970                     __ptext3:
  2840                           	callstack 0
  2841  005970                     _init_hardware:
  2842                           	callstack 25
  2843                           
  2844                           ;hardware.c: 55: init_oscilador();
  2845                           
  2846                           ;incstack = 0
  2847  005970  EC3E  F02D         	call	_init_oscilador	;wreg free
  2848                           
  2849                           ;hardware.c: 58: init_ports();
  2850  005974  EC90  F02C         	call	_init_ports	;wreg free
  2851                           
  2852                           ;hardware.c: 61: config_timer_zero();
  2853  005978  EC9E  F02C         	call	_config_timer_zero	;wreg free
  2854                           
  2855                           ;hardware.c: 64: config_timer_dois();
  2856  00597C  ECFD  F02C         	call	_config_timer_dois	;wreg free
  2857                           
  2858                           ;hardware.c: 67: init_interrupt();
  2859  005980  ECC3  F02C         	call	_init_interrupt	;wreg free
  2860  005984  0012               	return		;funcret
  2861  005986                     __end_of_init_hardware:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _init_ports *****************
  2865 ;; Defined at:
  2866 ;;		line 151 in file "bibliotecas/hardware.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    3
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_init_hardware
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text4
  2895  005920                     __ptext4:
  2896                           	callstack 0
  2897  005920                     _init_ports:
  2898                           	callstack 26
  2899                           
  2900                           ;hardware.c: 153: ADCON1 = 0X0F;
  2901                           
  2902                           ;incstack = 0
  2903  005920  0E0F               	movlw	15
  2904  005922  6EC1               	movwf	193,c	;volatile
  2905                           
  2906                           ;hardware.c: 154: TRISB = 0b00000001;
  2907  005924  0E01               	movlw	1
  2908  005926  6E93               	movwf	147,c	;volatile
  2909                           
  2910                           ;hardware.c: 155: LATB = 0xFF;
  2911  005928  688A               	setf	138,c	;volatile
  2912                           
  2913                           ;hardware.c: 156: TRISD = 0x00;
  2914  00592A  0E00               	movlw	0
  2915  00592C  6E95               	movwf	149,c	;volatile
  2916                           
  2917                           ;hardware.c: 157: TRISA = 0b00000111;
  2918  00592E  0E07               	movlw	7
  2919  005930  6E92               	movwf	146,c	;volatile
  2920                           
  2921                           ;hardware.c: 158: TRISC = 0x01111111;
  2922  005932  0E11               	movlw	17
  2923  005934  6E94               	movwf	148,c	;volatile
  2924                           
  2925                           ;hardware.c: 159: TRISE = 0b00000111;
  2926  005936  0E07               	movlw	7
  2927  005938  6E96               	movwf	150,c	;volatile
  2928  00593A  0012               	return		;funcret
  2929  00593C                     __end_of_init_ports:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _init_oscilador *****************
  2933 ;; Defined at:
  2934 ;;		line 169 in file "bibliotecas/hardware.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		None
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    3
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_init_hardware
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text5
  2963  005A7C                     __ptext5:
  2964                           	callstack 0
  2965  005A7C                     _init_oscilador:
  2966                           	callstack 26
  2967                           
  2968                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  2969                           
  2970                           ;incstack = 0
  2971  005A7C  88D3               	bsf	211,4,c	;volatile
  2972                           
  2973                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  2974  005A7E  8AD3               	bsf	211,5,c	;volatile
  2975                           
  2976                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  2977  005A80  8CD3               	bsf	211,6,c	;volatile
  2978  005A82  0012               	return		;funcret
  2979  005A84                     __end_of_init_oscilador:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _init_interrupt *****************
  2983 ;; Defined at:
  2984 ;;		line 94 in file "bibliotecas/hardware.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_init_hardware
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text6
  3013  005986                     __ptext6:
  3014                           	callstack 0
  3015  005986                     _init_interrupt:
  3016                           	callstack 26
  3017                           
  3018                           ;hardware.c: 96: INTCON = 0b10110000;
  3019                           
  3020                           ;incstack = 0
  3021  005986  0EB0               	movlw	176
  3022  005988  6EF2               	movwf	242,c	;volatile
  3023                           
  3024                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3025  00598A  0E00               	movlw	0
  3026  00598C  6EF1               	movwf	241,c	;volatile
  3027                           
  3028                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3029  00598E  0E00               	movlw	0
  3030  005990  6EF0               	movwf	240,c	;volatile
  3031                           
  3032                           ;hardware.c: 100: PIE1 = 0b00101000;
  3033  005992  0E28               	movlw	40
  3034  005994  6E9D               	movwf	157,c	;volatile
  3035  005996  0012               	return		;funcret
  3036  005998                     __end_of_init_interrupt:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _config_timer_zero *****************
  3040 ;; Defined at:
  3041 ;;		line 79 in file "bibliotecas/hardware.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    4
  3062 ;; This function calls:
  3063 ;;		_write_timer_zero
  3064 ;; This function is called by:
  3065 ;;		_init_hardware
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text7
  3070  00593C                     __ptext7:
  3071                           	callstack 0
  3072  00593C                     _config_timer_zero:
  3073                           	callstack 25
  3074                           
  3075                           ;hardware.c: 81: T0CON = 0b11000101;
  3076                           
  3077                           ;incstack = 0
  3078  00593C  0EC5               	movlw	197
  3079  00593E  6ED5               	movwf	213,c	;volatile
  3080                           
  3081                           ;hardware.c: 82: SPPCON = 0b00000000;
  3082  005940  0E00               	movlw	0
  3083  005942  6E65               	movwf	101,c	;volatile
  3084                           
  3085                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3086  005944  0E00               	movlw	0
  3087  005946  6E63               	movwf	99,c	;volatile
  3088                           
  3089                           ;hardware.c: 84: write_timer_zero(0x45);
  3090  005948  0E00               	movlw	0
  3091  00594A  6E1B               	movwf	(write_timer_zero@timer0+1)^0,c
  3092  00594C  0E45               	movlw	69
  3093  00594E  6E1A               	movwf	write_timer_zero@timer0^0,c
  3094  005950  EC16  F02D         	call	_write_timer_zero	;wreg free
  3095  005954  0012               	return		;funcret
  3096  005956                     __end_of_config_timer_zero:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _write_timer_zero *****************
  3100 ;; Defined at:
  3101 ;;		line 134 in file "bibliotecas/hardware.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  timer0          2   25[COMRAM] unsigned int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		None
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3115 ;;      Params:         2       0       0       0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3118 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    3
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_config_timer_zero
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text8
  3130  005A2C                     __ptext8:
  3131                           	callstack 0
  3132  005A2C                     _write_timer_zero:
  3133                           	callstack 25
  3134                           
  3135                           ;hardware.c: 142: TMR0 = timer0;
  3136                           
  3137                           ;incstack = 0
  3138  005A2C  C01A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3139  005A30  C01B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3140  005A34  0012               	return		;funcret
  3141  005A36                     __end_of_write_timer_zero:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _config_timer_dois *****************
  3145 ;; Defined at:
  3146 ;;		line 198 in file "bibliotecas/hardware.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    3
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_init_hardware
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text9
  3175  0059FA                     __ptext9:
  3176                           	callstack 0
  3177  0059FA                     _config_timer_dois:
  3178                           	callstack 26
  3179                           
  3180                           ;hardware.c: 200: T2CON = 0b00000100;
  3181                           
  3182                           ;incstack = 0
  3183  0059FA  0E04               	movlw	4
  3184  0059FC  6ECA               	movwf	202,c	;volatile
  3185                           
  3186                           ;hardware.c: 201: TMR2 = 0;
  3187  0059FE  0E00               	movlw	0
  3188  005A00  6ECC               	movwf	204,c	;volatile
  3189                           
  3190                           ;hardware.c: 202: PR2 = 0x01;
  3191  005A02  0E01               	movlw	1
  3192  005A04  6ECB               	movwf	203,c	;volatile
  3193  005A06  0012               	return		;funcret
  3194  005A08                     __end_of_config_timer_dois:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _inicializa_tarefas *****************
  3198 ;; Defined at:
  3199 ;;		line 169 in file "main.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 3F/1
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text10
  3228  0051B0                     __ptext10:
  3229                           	callstack 0
  3230  0051B0                     _inicializa_tarefas:
  3231                           	callstack 27
  3232                           
  3233                           ;main.c: 172: p_tarefas[0] = verifica_dados_operacionais;
  3234                           
  3235                           ;incstack = 0
  3236  0051B0  0E16               	movlw	low _verifica_dados_operacionais
  3237  0051B2  0101               	movlb	1	; () banked
  3238  0051B4  6F1D               	movwf	_p_tarefas& (0+255),b
  3239  0051B6  0E29               	movlw	high _verifica_dados_operacionais
  3240  0051B8  6F1E               	movwf	(_p_tarefas+1)& (0+255),b
  3241                           
  3242                           ;main.c: 173: p_tarefas[1] = disparo_gravacao;
  3243  0051BA  0E3C               	movlw	low _disparo_gravacao
  3244  0051BC  6F1F               	movwf	(_p_tarefas+2)& (0+255),b
  3245  0051BE  0E55               	movlw	high _disparo_gravacao
  3246  0051C0  6F20               	movwf	(_p_tarefas+3)& (0+255),b
  3247                           
  3248                           ;main.c: 174: p_tarefas[2] = troca_de_tela;
  3249  0051C2  0E46               	movlw	low _troca_de_tela
  3250  0051C4  6F21               	movwf	(_p_tarefas+4)& (0+255),b
  3251  0051C6  0E24               	movlw	high _troca_de_tela
  3252  0051C8  6F22               	movwf	(_p_tarefas+5)& (0+255),b
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;main.c: 178: tempo_backup[0] = 500;
  3256  0051CA  0E01               	movlw	1
  3257  0051CC  6F18               	movwf	(_tempo_backup+1)& (0+255),b
  3258  0051CE  0EF4               	movlw	244
  3259  0051D0  6F17               	movwf	_tempo_backup& (0+255),b
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;main.c: 179: tempo_backup[1] = 1000;
  3263  0051D2  0E03               	movlw	3
  3264  0051D4  6F1A               	movwf	(_tempo_backup+3)& (0+255),b
  3265  0051D6  0EE8               	movlw	232
  3266  0051D8  6F19               	movwf	(_tempo_backup+2)& (0+255),b
  3267                           
  3268                           ; BSR set to: 1
  3269                           ;main.c: 180: tempo_backup[2] = 5000;
  3270  0051DA  0E13               	movlw	19
  3271  0051DC  6F1C               	movwf	(_tempo_backup+5)& (0+255),b
  3272  0051DE  0E88               	movlw	136
  3273  0051E0  6F1B               	movwf	(_tempo_backup+4)& (0+255),b
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;main.c: 183: tempo_tarefa[0] = 500;
  3277  0051E2  0E01               	movlw	1
  3278  0051E4  6F12               	movwf	(_tempo_tarefa+1)& (0+255),b
  3279  0051E6  0EF4               	movlw	244
  3280  0051E8  6F11               	movwf	_tempo_tarefa& (0+255),b
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;main.c: 184: tempo_tarefa[1] = 1000;
  3284  0051EA  0E03               	movlw	3
  3285  0051EC  6F14               	movwf	(_tempo_tarefa+3)& (0+255),b
  3286  0051EE  0EE8               	movlw	232
  3287  0051F0  6F13               	movwf	(_tempo_tarefa+2)& (0+255),b
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;main.c: 185: tempo_tarefa[2] = 5000;
  3291  0051F2  0E13               	movlw	19
  3292  0051F4  6F16               	movwf	(_tempo_tarefa+5)& (0+255),b
  3293  0051F6  0E88               	movlw	136
  3294  0051F8  6F15               	movwf	(_tempo_tarefa+4)& (0+255),b
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;main.c: 187: tarefa_em_execucao = 0;
  3298  0051FA  0E00               	movlw	0
  3299  0051FC  6E3B               	movwf	_tarefa_em_execucao^0,c	;volatile
  3300                           
  3301                           ; BSR set to: 1
  3302  0051FE  0012               	return		;funcret
  3303  005200                     __end_of_inicializa_tarefas:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _escalonador *****************
  3307 ;; Defined at:
  3308 ;;		line 198 in file "main.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  cont            1    5[BANK1 ] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 3F/1
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0
  3323 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3324 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3325 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3326 ;;Total ram usage:        3 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:   18
  3329 ;; This function calls:
  3330 ;;		_disparo_gravacao
  3331 ;;		_troca_de_tela
  3332 ;;		_verifica_dados_operacionais
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text11
  3339  0044A8                     __ptext11:
  3340                           	callstack 0
  3341  0044A8                     _escalonador:
  3342                           	callstack 12
  3343                           
  3344                           ;main.c: 200: unsigned char cont;;main.c: 201: for(cont = 0; cont<3;cont++)
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;incstack = 0
  3348  0044A8  0E00               	movlw	0
  3349  0044AA  0101               	movlb	1	; () banked
  3350  0044AC  6FF8               	movwf	escalonador@cont& (0+255),b
  3351  0044AE                     l13386:
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;main.c: 202: {;main.c: 203: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3355  0044AE  51F8               	movf	escalonador@cont& (0+255),w,b
  3356  0044B0  0D02               	mullw	2
  3357  0044B2  0E1D               	movlw	low _p_tarefas
  3358  0044B4  24F3               	addwf	243,w,c
  3359  0044B6  6ED9               	movwf	fsr2l,c
  3360  0044B8  0E01               	movlw	high _p_tarefas
  3361  0044BA  20F4               	addwfc	prodh,w,c
  3362  0044BC  6EDA               	movwf	fsr2h,c
  3363  0044BE  50DE               	movf	postinc2,w,c
  3364  0044C0  10DE               	iorwf	postinc2,w,c
  3365  0044C2  B4D8               	btfsc	status,2,c
  3366  0044C4  D03D               	goto	l13398
  3367                           
  3368                           ; BSR set to: 1
  3369  0044C6  51F8               	movf	escalonador@cont& (0+255),w,b
  3370  0044C8  0D02               	mullw	2
  3371  0044CA  0E11               	movlw	low _tempo_tarefa
  3372  0044CC  24F3               	addwf	243,w,c
  3373  0044CE  6ED9               	movwf	fsr2l,c
  3374  0044D0  0E01               	movlw	high _tempo_tarefa
  3375  0044D2  20F4               	addwfc	prodh,w,c
  3376  0044D4  6EDA               	movwf	fsr2h,c
  3377  0044D6  50DE               	movf	postinc2,w,c
  3378  0044D8  10DE               	iorwf	postinc2,w,c
  3379  0044DA  A4D8               	btfss	status,2,c
  3380  0044DC  D031               	goto	l13398
  3381                           
  3382                           ; BSR set to: 1
  3383                           ;main.c: 204: {;main.c: 205: tarefa_em_execucao = 1;
  3384  0044DE  0E01               	movlw	1
  3385  0044E0  6E3B               	movwf	_tarefa_em_execucao^0,c	;volatile
  3386                           
  3387                           ;main.c: 206: timeout_tarefa = 65000;
  3388  0044E2  0EFD               	movlw	253
  3389  0044E4  6F4F               	movwf	(_timeout_tarefa+1)& (0+255),b
  3390  0044E6  0EE8               	movlw	232
  3391  0044E8  6F4E               	movwf	_timeout_tarefa& (0+255),b
  3392                           
  3393                           ; BSR set to: 1
  3394                           ;main.c: 207: p_tarefas[cont]();
  3395  0044EA  51F8               	movf	escalonador@cont& (0+255),w,b
  3396  0044EC  0D02               	mullw	2
  3397  0044EE  0E1D               	movlw	low _p_tarefas
  3398  0044F0  24F3               	addwf	243,w,c
  3399  0044F2  6ED9               	movwf	fsr2l,c
  3400  0044F4  0E01               	movlw	high _p_tarefas
  3401  0044F6  20F4               	addwfc	prodh,w,c
  3402  0044F8  6EDA               	movwf	fsr2h,c
  3403  0044FA  D801               	call	u16768
  3404  0044FC  D00A               	goto	u16769
  3405  0044FE                     u16768:
  3406  0044FE  0005               	push	
  3407  004500  6EFA               	movwf	pclath,c
  3408  004502  50DE               	movf	postinc2,w,c
  3409  004504  6EFD               	movwf	tosl,c
  3410  004506  50DE               	movf	postinc2,w,c
  3411  004508  6EFE               	movwf	tosh,c
  3412  00450A  50F8               	movf	tblptru,w,c
  3413  00450C  6EFF               	movwf	tosu,c
  3414  00450E  50FA               	movf	pclath,w,c
  3415  004510  0012               	return		;indir
  3416  004512                     u16769:
  3417                           
  3418                           ;main.c: 208: tarefa_em_execucao = 0;
  3419  004512  0E00               	movlw	0
  3420  004514  6E3B               	movwf	_tarefa_em_execucao^0,c	;volatile
  3421                           
  3422                           ;main.c: 209: tempo_tarefa[cont] = tempo_backup[cont];
  3423  004516  0101               	movlb	1	; () banked
  3424  004518  51F8               	movf	escalonador@cont& (0+255),w,b
  3425  00451A  0D02               	mullw	2
  3426  00451C  0E17               	movlw	low _tempo_backup
  3427  00451E  24F3               	addwf	243,w,c
  3428  004520  6ED9               	movwf	fsr2l,c
  3429  004522  0E01               	movlw	high _tempo_backup
  3430  004524  20F4               	addwfc	prodh,w,c
  3431  004526  6EDA               	movwf	fsr2h,c
  3432  004528  51F8               	movf	escalonador@cont& (0+255),w,b
  3433  00452A  0D02               	mullw	2
  3434  00452C  0E11               	movlw	low _tempo_tarefa
  3435  00452E  24F3               	addwf	243,w,c
  3436  004530  6EE1               	movwf	fsr1l,c
  3437  004532  0E01               	movlw	high _tempo_tarefa
  3438  004534  20F4               	addwfc	prodh,w,c
  3439  004536  6EE2               	movwf	fsr1h,c
  3440  004538  CFDE FFE6          	movff	postinc2,postinc1
  3441  00453C  CFDD FFE5          	movff	postdec2,postdec1
  3442  004540                     l13398:
  3443                           
  3444                           ; BSR set to: 1
  3445  004540  2BF8               	incf	escalonador@cont& (0+255),f,b
  3446                           
  3447                           ; BSR set to: 1
  3448  004542  0E02               	movlw	2
  3449  004544  65F8               	cpfsgt	escalonador@cont& (0+255),b
  3450  004546  D7B3               	goto	l13386
  3451  004548  0012               	return	
  3452  00454A                     __end_of_escalonador:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _troca_de_tela *****************
  3456 ;; Defined at:
  3457 ;;		line 421 in file "main.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 3F/1
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3473 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3474 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3475 ;;Total ram usage:        1 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    7
  3478 ;; This function calls:
  3479 ;;		_escreve_cmd_lcd
  3480 ;;		_escreve_frase_ram_lcd
  3481 ;;		_escreve_inteiro_lcd
  3482 ;;		_fix
  3483 ;;		_mostra_dados_display
  3484 ;;		_posicao_cursor_lcd
  3485 ;;		_recebe_dado_gps
  3486 ;; This function is called by:
  3487 ;;		_inicializa_tarefas
  3488 ;;		_escalonador
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text12
  3493  002446                     __ptext12:
  3494                           	callstack 0
  3495  002446                     _troca_de_tela:
  3496                           	callstack 22
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;main.c: 423: static unsigned char state = 0;;main.c: 424: static unsigned char last_sta
      +                          te = 0;;main.c: 426: if(!PORTEbits.RE0 || (state == 1 ))
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;incstack = 0
  3503  002446  A084               	btfss	132,0,c	;volatile
  3504  002448  D003               	goto	u16150
  3505                           
  3506                           ; BSR set to: 1
  3507  00244A  0439               	decf	troca_de_tela@state^0,w,c
  3508  00244C  A4D8               	btfss	status,2,c
  3509  00244E  D0D6               	goto	l13060
  3510  002450                     u16150:
  3511                           
  3512                           ; BSR set to: 1
  3513                           ;main.c: 427: {;main.c: 429: if(!time_atualizacao)
  3514  002450  5034               	movf	_time_atualizacao^0,w,c
  3515  002452  1035               	iorwf	(_time_atualizacao+1)^0,w,c
  3516  002454  A4D8               	btfss	status,2,c
  3517  002456  D05B               	goto	l13020
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;main.c: 430: {;main.c: 431: if(!fence_flag[2].point)
  3521  002458  B033               	btfsc	(_fence_flag+2)^0,0,c
  3522  00245A  D00C               	goto	l13000
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;main.c: 432: {;main.c: 433: posicao_cursor_lcd(1,8);
  3526  00245C  0E08               	movlw	8
  3527  00245E  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3528  002460  0E01               	movlw	1
  3529  002462  EC21  F027         	call	_posicao_cursor_lcd
  3530                           
  3531                           ;main.c: 434: escreve_frase_ram_lcd("DENTRO");
  3532  002466  0E3F               	movlw	low STR_24
  3533  002468  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3534  00246A  0E62               	movlw	high STR_24
  3535  00246C  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3536  00246E  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3537                           
  3538                           ;main.c: 435: }
  3539  002472  D03C               	goto	l13014
  3540  002474                     l13000:
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;main.c: 436: else;main.c: 437: {;main.c: 438: posicao_cursor_lcd(1,8);
  3544  002474  0E08               	movlw	8
  3545  002476  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3546  002478  0E01               	movlw	1
  3547  00247A  EC21  F027         	call	_posicao_cursor_lcd
  3548                           
  3549                           ;main.c: 439: escreve_frase_ram_lcd("FORA");
  3550  00247E  0E64               	movlw	low STR_23
  3551  002480  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3552  002482  0E62               	movlw	high STR_23
  3553  002484  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3554  002486  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3555                           
  3556                           ;main.c: 440: posicao_cursor_lcd(1,13);
  3557  00248A  0E0D               	movlw	13
  3558  00248C  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3559  00248E  0E01               	movlw	1
  3560  002490  EC21  F027         	call	_posicao_cursor_lcd
  3561                           
  3562                           ;main.c: 441: escreve_inteiro_lcd(fence_flag[0].point);
  3563  002494  A031               	btfss	_fence_flag^0,0,c
  3564  002496  D003               	goto	u16180
  3565  002498  6A2F               	clrf	??_troca_de_tela^0,c
  3566  00249A  2A2F               	incf	??_troca_de_tela^0,f,c
  3567  00249C  D001               	goto	u16188
  3568  00249E                     u16180:
  3569  00249E  6A2F               	clrf	??_troca_de_tela^0,c
  3570  0024A0                     u16188:
  3571  0024A0  502F               	movf	??_troca_de_tela^0,w,c
  3572  0024A2  0100               	movlb	0	; () banked
  3573  0024A4  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3574  0024A6  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3575  0024A8  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3576  0024AA  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3577  0024AC  EC7F  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3578                           
  3579                           ;main.c: 442: posicao_cursor_lcd(1,14);
  3580  0024B0  0E0E               	movlw	14
  3581  0024B2  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3582  0024B4  0E01               	movlw	1
  3583  0024B6  EC21  F027         	call	_posicao_cursor_lcd
  3584                           
  3585                           ;main.c: 443: escreve_frase_ram_lcd("|");
  3586  0024BA  0E7D               	movlw	low STR_27
  3587  0024BC  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3588  0024BE  0E62               	movlw	high STR_27
  3589  0024C0  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3590  0024C2  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3591                           
  3592                           ;main.c: 444: posicao_cursor_lcd(1,15);
  3593  0024C6  0E0F               	movlw	15
  3594  0024C8  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3595  0024CA  0E01               	movlw	1
  3596  0024CC  EC21  F027         	call	_posicao_cursor_lcd
  3597                           
  3598                           ;main.c: 445: escreve_inteiro_lcd(fence_flag[1].point);
  3599  0024D0  A032               	btfss	(_fence_flag+1)^0,0,c
  3600  0024D2  D003               	goto	u16190
  3601  0024D4  6A2F               	clrf	??_troca_de_tela^0,c
  3602  0024D6  2A2F               	incf	??_troca_de_tela^0,f,c
  3603  0024D8  D001               	goto	u16198
  3604  0024DA                     u16190:
  3605  0024DA  6A2F               	clrf	??_troca_de_tela^0,c
  3606  0024DC                     u16198:
  3607  0024DC  502F               	movf	??_troca_de_tela^0,w,c
  3608  0024DE  0100               	movlb	0	; () banked
  3609  0024E0  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3610  0024E2  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3611  0024E4  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3612  0024E6  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3613  0024E8  EC7F  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3614  0024EC                     l13014:
  3615                           
  3616                           ;main.c: 446: };main.c: 448: posicao_cursor_lcd(2,8);
  3617  0024EC  0E08               	movlw	8
  3618  0024EE  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3619  0024F0  0E02               	movlw	2
  3620  0024F2  EC21  F027         	call	_posicao_cursor_lcd
  3621                           
  3622                           ;main.c: 449: escreve_frase_ram_lcd(fix());
  3623  0024F6  EC34  F02D         	call	_fix	;wreg free
  3624  0024FA  C01A  F01D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3625  0024FE  C01B  F01E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3626  002502  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3627                           
  3628                           ;main.c: 450: time_atualizacao = 10000;
  3629  002506  0E27               	movlw	39
  3630  002508  6E35               	movwf	(_time_atualizacao+1)^0,c
  3631  00250A  0E10               	movlw	16
  3632  00250C  6E34               	movwf	_time_atualizacao^0,c
  3633  00250E                     l13020:
  3634                           
  3635                           ;main.c: 451: };main.c: 453: if(last_state != 1)
  3636  00250E  0438               	decf	troca_de_tela@last_state^0,w,c
  3637  002510  B4D8               	btfsc	status,2,c
  3638  002512  D072               	goto	l13058
  3639                           
  3640                           ;main.c: 454: {;main.c: 455: state = 1;
  3641  002514  0E01               	movlw	1
  3642  002516  6E39               	movwf	troca_de_tela@state^0,c
  3643                           
  3644                           ;main.c: 456: escreve_cmd_lcd(0b00000001);
  3645  002518  0E01               	movlw	1
  3646  00251A  EC19  F024         	call	_escreve_cmd_lcd
  3647                           
  3648                           ;main.c: 457: posicao_cursor_lcd(1,0);
  3649  00251E  0E00               	movlw	0
  3650  002520  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3651  002522  0E01               	movlw	1
  3652  002524  EC21  F027         	call	_posicao_cursor_lcd
  3653                           
  3654                           ;main.c: 458: escreve_frase_ram_lcd("FENCE:");
  3655  002528  0E38               	movlw	low STR_28
  3656  00252A  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3657  00252C  0E62               	movlw	high STR_28
  3658  00252E  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3659  002530  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3660                           
  3661                           ;main.c: 460: if(!fence_flag[2].point)
  3662  002534  B033               	btfsc	(_fence_flag+2)^0,0,c
  3663  002536  D00C               	goto	l13036
  3664                           
  3665                           ;main.c: 461: {;main.c: 462: posicao_cursor_lcd(1,8);
  3666  002538  0E08               	movlw	8
  3667  00253A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3668  00253C  0E01               	movlw	1
  3669  00253E  EC21  F027         	call	_posicao_cursor_lcd
  3670                           
  3671                           ;main.c: 463: escreve_frase_ram_lcd("DENTRO");
  3672  002542  0E3F               	movlw	low STR_24
  3673  002544  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3674  002546  0E62               	movlw	high STR_24
  3675  002548  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3676  00254A  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3677                           
  3678                           ;main.c: 464: }
  3679  00254E  D03C               	goto	l13050
  3680  002550                     l13036:
  3681                           
  3682                           ;main.c: 465: else;main.c: 466: {;main.c: 467: posicao_cursor_lcd(1,8);
  3683  002550  0E08               	movlw	8
  3684  002552  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3685  002554  0E01               	movlw	1
  3686  002556  EC21  F027         	call	_posicao_cursor_lcd
  3687                           
  3688                           ;main.c: 468: escreve_frase_ram_lcd("FORA");
  3689  00255A  0E64               	movlw	low STR_23
  3690  00255C  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3691  00255E  0E62               	movlw	high STR_23
  3692  002560  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3693  002562  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3694                           
  3695                           ;main.c: 469: posicao_cursor_lcd(1,13);
  3696  002566  0E0D               	movlw	13
  3697  002568  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3698  00256A  0E01               	movlw	1
  3699  00256C  EC21  F027         	call	_posicao_cursor_lcd
  3700                           
  3701                           ;main.c: 470: escreve_inteiro_lcd(fence_flag[0].point);
  3702  002570  A031               	btfss	_fence_flag^0,0,c
  3703  002572  D003               	goto	u16220
  3704  002574  6A2F               	clrf	??_troca_de_tela^0,c
  3705  002576  2A2F               	incf	??_troca_de_tela^0,f,c
  3706  002578  D001               	goto	u16228
  3707  00257A                     u16220:
  3708  00257A  6A2F               	clrf	??_troca_de_tela^0,c
  3709  00257C                     u16228:
  3710  00257C  502F               	movf	??_troca_de_tela^0,w,c
  3711  00257E  0100               	movlb	0	; () banked
  3712  002580  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3713  002582  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3714  002584  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3715  002586  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3716  002588  EC7F  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3717                           
  3718                           ;main.c: 471: posicao_cursor_lcd(1,14);
  3719  00258C  0E0E               	movlw	14
  3720  00258E  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3721  002590  0E01               	movlw	1
  3722  002592  EC21  F027         	call	_posicao_cursor_lcd
  3723                           
  3724                           ;main.c: 472: escreve_frase_ram_lcd("|");
  3725  002596  0E7D               	movlw	low STR_27
  3726  002598  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3727  00259A  0E62               	movlw	high STR_27
  3728  00259C  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3729  00259E  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3730                           
  3731                           ;main.c: 473: posicao_cursor_lcd(1,15);
  3732  0025A2  0E0F               	movlw	15
  3733  0025A4  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3734  0025A6  0E01               	movlw	1
  3735  0025A8  EC21  F027         	call	_posicao_cursor_lcd
  3736                           
  3737                           ;main.c: 474: escreve_inteiro_lcd(fence_flag[1].point);
  3738  0025AC  A032               	btfss	(_fence_flag+1)^0,0,c
  3739  0025AE  D003               	goto	u16230
  3740  0025B0  6A2F               	clrf	??_troca_de_tela^0,c
  3741  0025B2  2A2F               	incf	??_troca_de_tela^0,f,c
  3742  0025B4  D001               	goto	u16238
  3743  0025B6                     u16230:
  3744  0025B6  6A2F               	clrf	??_troca_de_tela^0,c
  3745  0025B8                     u16238:
  3746  0025B8  502F               	movf	??_troca_de_tela^0,w,c
  3747  0025BA  0100               	movlb	0	; () banked
  3748  0025BC  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3749  0025BE  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3750  0025C0  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3751  0025C2  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3752  0025C4  EC7F  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3753  0025C8                     l13050:
  3754                           
  3755                           ;main.c: 475: };main.c: 477: posicao_cursor_lcd(2,0);
  3756  0025C8  0E00               	movlw	0
  3757  0025CA  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3758  0025CC  0E02               	movlw	2
  3759  0025CE  EC21  F027         	call	_posicao_cursor_lcd
  3760                           
  3761                           ;main.c: 478: escreve_frase_ram_lcd("FIX:");
  3762  0025D2  0E5F               	movlw	low STR_32
  3763  0025D4  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3764  0025D6  0E62               	movlw	high STR_32
  3765  0025D8  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3766  0025DA  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3767                           
  3768                           ;main.c: 479: posicao_cursor_lcd(2,8);
  3769  0025DE  0E08               	movlw	8
  3770  0025E0  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3771  0025E2  0E02               	movlw	2
  3772  0025E4  EC21  F027         	call	_posicao_cursor_lcd
  3773                           
  3774                           ;main.c: 480: escreve_frase_ram_lcd(fix());
  3775  0025E8  EC34  F02D         	call	_fix	;wreg free
  3776  0025EC  C01A  F01D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3777  0025F0  C01B  F01E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3778  0025F4  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3779  0025F8                     l13058:
  3780                           
  3781                           ;main.c: 481: };main.c: 482: last_state = 1;
  3782  0025F8  0E01               	movlw	1
  3783  0025FA  6E38               	movwf	troca_de_tela@last_state^0,c
  3784  0025FC                     l13060:
  3785                           
  3786                           ;main.c: 484: };main.c: 494: if(!PORTEbits.RE1 || (state == 2))
  3787  0025FC  A284               	btfss	132,1,c	;volatile
  3788  0025FE  D004               	goto	u16250
  3789  002600  0E02               	movlw	2
  3790  002602  1839               	xorwf	troca_de_tela@state^0,w,c
  3791  002604  A4D8               	btfss	status,2,c
  3792  002606  D031               	goto	l13092
  3793  002608                     u16250:
  3794                           
  3795                           ;main.c: 495: {;main.c: 496: if(!time_atualizacao)
  3796  002608  5034               	movf	_time_atualizacao^0,w,c
  3797  00260A  1035               	iorwf	(_time_atualizacao+1)^0,w,c
  3798  00260C  A4D8               	btfss	status,2,c
  3799  00260E  D008               	goto	l13072
  3800                           
  3801                           ;main.c: 497: {;main.c: 498: recebe_dado_gps();
  3802  002610  EC42  F02C         	call	_recebe_dado_gps	;wreg free
  3803                           
  3804                           ;main.c: 499: mostra_dados_display();
  3805  002614  EC29  F02B         	call	_mostra_dados_display	;wreg free
  3806                           
  3807                           ;main.c: 500: time_atualizacao = 2000;
  3808  002618  0E07               	movlw	7
  3809  00261A  6E35               	movwf	(_time_atualizacao+1)^0,c
  3810  00261C  0ED0               	movlw	208
  3811  00261E  6E34               	movwf	_time_atualizacao^0,c
  3812  002620                     l13072:
  3813                           
  3814                           ;main.c: 501: };main.c: 504: if(last_state != 2)
  3815  002620  0E02               	movlw	2
  3816  002622  1838               	xorwf	troca_de_tela@last_state^0,w,c
  3817  002624  B4D8               	btfsc	status,2,c
  3818  002626  D01F               	goto	l13090
  3819                           
  3820                           ;main.c: 505: {;main.c: 506: state = 2;
  3821  002628  0E02               	movlw	2
  3822  00262A  6E39               	movwf	troca_de_tela@state^0,c
  3823                           
  3824                           ;main.c: 507: escreve_cmd_lcd(0b00000001);
  3825  00262C  0E01               	movlw	1
  3826  00262E  EC19  F024         	call	_escreve_cmd_lcd
  3827                           
  3828                           ;main.c: 508: posicao_cursor_lcd(1,0);
  3829  002632  0E00               	movlw	0
  3830  002634  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3831  002636  0E01               	movlw	1
  3832  002638  EC21  F027         	call	_posicao_cursor_lcd
  3833                           
  3834                           ;main.c: 509: escreve_frase_ram_lcd("lt:");
  3835  00263C  0E72               	movlw	low STR_33
  3836  00263E  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3837  002640  0E62               	movlw	high STR_33
  3838  002642  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3839  002644  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3840                           
  3841                           ;main.c: 510: posicao_cursor_lcd(2,0);
  3842  002648  0E00               	movlw	0
  3843  00264A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3844  00264C  0E02               	movlw	2
  3845  00264E  EC21  F027         	call	_posicao_cursor_lcd
  3846                           
  3847                           ;main.c: 511: escreve_frase_ram_lcd("lo:");
  3848  002652  0E6E               	movlw	low STR_34
  3849  002654  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3850  002656  0E62               	movlw	high STR_34
  3851  002658  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3852  00265A  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3853                           
  3854                           ;main.c: 512: recebe_dado_gps();
  3855  00265E  EC42  F02C         	call	_recebe_dado_gps	;wreg free
  3856                           
  3857                           ;main.c: 513: mostra_dados_display();
  3858  002662  EC29  F02B         	call	_mostra_dados_display	;wreg free
  3859  002666                     l13090:
  3860                           
  3861                           ;main.c: 514: };main.c: 515: last_state = 2;
  3862  002666  0E02               	movlw	2
  3863  002668  6E38               	movwf	troca_de_tela@last_state^0,c
  3864  00266A                     l13092:
  3865                           
  3866                           ;main.c: 516: };main.c: 521: if(!state)
  3867  00266A  5039               	movf	troca_de_tela@state^0,w,c
  3868  00266C  A4D8               	btfss	status,2,c
  3869  00266E  0012               	return	
  3870                           
  3871                           ;main.c: 522: {;main.c: 523: if(last_state != 4)
  3872  002670  0E04               	movlw	4
  3873  002672  1838               	xorwf	troca_de_tela@last_state^0,w,c
  3874  002674  B4D8               	btfsc	status,2,c
  3875  002676  D019               	goto	l13102
  3876                           
  3877                           ;main.c: 524: {;main.c: 525: escreve_cmd_lcd(0b00000001);
  3878  002678  0E01               	movlw	1
  3879  00267A  EC19  F024         	call	_escreve_cmd_lcd
  3880                           
  3881                           ;main.c: 526: posicao_cursor_lcd(1,0);
  3882  00267E  0E00               	movlw	0
  3883  002680  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3884  002682  0E01               	movlw	1
  3885  002684  EC21  F027         	call	_posicao_cursor_lcd
  3886                           
  3887                           ;main.c: 527: escreve_frase_ram_lcd("B1:FENCE");
  3888  002688  0E1E               	movlw	low STR_35
  3889  00268A  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3890  00268C  0E62               	movlw	high STR_35
  3891  00268E  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3892  002690  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3893                           
  3894                           ;main.c: 528: posicao_cursor_lcd(2,0);
  3895  002694  0E00               	movlw	0
  3896  002696  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3897  002698  0E02               	movlw	2
  3898  00269A  EC21  F027         	call	_posicao_cursor_lcd
  3899                           
  3900                           ;main.c: 529: escreve_frase_ram_lcd("B2:LTLO");
  3901  00269E  0E30               	movlw	low STR_36
  3902  0026A0  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3903  0026A2  0E62               	movlw	high STR_36
  3904  0026A4  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3905  0026A6  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3906  0026AA                     l13102:
  3907                           
  3908                           ;main.c: 531: };main.c: 532: last_state = 4;
  3909  0026AA  0E04               	movlw	4
  3910  0026AC  6E38               	movwf	troca_de_tela@last_state^0,c
  3911  0026AE  0012               	return		;funcret
  3912  0026B0                     __end_of_troca_de_tela:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function _disparo_gravacao *****************
  3916 ;; Defined at:
  3917 ;;		line 395 in file "main.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  fix_gps         2    1[BANK1 ] PTR unsigned char 
  3922 ;;		 -> rawFix(2), 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 3F/1
  3929 ;;		On exit  : 3F/1
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3935 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3936 ;;Total ram usage:        3 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:   17
  3939 ;; This function calls:
  3940 ;;		_dados_gps_to_sd
  3941 ;;		_fix
  3942 ;;		_grava_sd
  3943 ;;		_recebe_dado_gps
  3944 ;; This function is called by:
  3945 ;;		_inicializa_tarefas
  3946 ;;		_escalonador
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text13
  3951  00553C                     __ptext13:
  3952                           	callstack 0
  3953  00553C                     _disparo_gravacao:
  3954                           	callstack 12
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;main.c: 397: unsigned char *fix_gps;;main.c: 399: if(!time_sd)
  3958                           
  3959                           ;incstack = 0
  3960  00553C  514C               	movf	_time_sd& (0+255),w,b
  3961  00553E  114D               	iorwf	(_time_sd+1)& (0+255),w,b
  3962  005540  A4D8               	btfss	status,2,c
  3963  005542  0012               	return	
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;main.c: 400: {;main.c: 401: fix_gps = fix();
  3967  005544  EC34  F02D         	call	_fix	;wreg free
  3968  005548  C01A  F1F4         	movff	?_fix,disparo_gravacao@fix_gps
  3969  00554C  C01B  F1F5         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  3970                           
  3971                           ;main.c: 402: if(fix_gps[0] == '0')
  3972  005550  C1F4  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  3973  005554  C1F5  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  3974  005558  0E30               	movlw	48
  3975  00555A  18DE               	xorwf	postinc2,w,c
  3976  00555C  A4D8               	btfss	status,2,c
  3977  00555E  D006               	goto	l12986
  3978                           
  3979                           ;main.c: 403: {;main.c: 405: recebe_dado_gps();
  3980  005560  EC42  F02C         	call	_recebe_dado_gps	;wreg free
  3981                           
  3982                           ;main.c: 406: dados_gps_to_sd();
  3983  005564  EC5B  F028         	call	_dados_gps_to_sd	;wreg free
  3984                           
  3985                           ;main.c: 407: grava_sd();
  3986  005568  ECAB  F02C         	call	_grava_sd	;wreg free
  3987  00556C                     l12986:
  3988                           
  3989                           ;main.c: 408: };main.c: 409: time_sd = 1000;
  3990  00556C  0E03               	movlw	3
  3991  00556E  0101               	movlb	1	; () banked
  3992  005570  6F4D               	movwf	(_time_sd+1)& (0+255),b
  3993  005572  0EE8               	movlw	232
  3994  005574  6F4C               	movwf	_time_sd& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997  005576  0012               	return		;funcret
  3998  005578                     __end_of_disparo_gravacao:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _verifica_dados_operacionais *****************
  4002 ;; Defined at:
  4003 ;;		line 303 in file "main.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  i               1   54[BANK0 ] unsigned char 
  4008 ;;  vel             1   53[BANK0 ] unsigned char 
  4009 ;;  flag_gps        1    0        unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 3F/1
  4016 ;;		On exit  : 3F/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0
  4020 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4021 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4022 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4023 ;;Total ram usage:        7 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:   10
  4026 ;; This function calls:
  4027 ;;		_Speed
  4028 ;;		___awtoft
  4029 ;;		___ftmul
  4030 ;;		___fttol
  4031 ;;		_atoi
  4032 ;;		_latitude
  4033 ;;		_longitude
  4034 ;;		_monta_sd
  4035 ;;		_rawdata
  4036 ;;		_rawhora
  4037 ;;		_strcpy
  4038 ;;		_verifica_fence
  4039 ;; This function is called by:
  4040 ;;		_inicializa_tarefas
  4041 ;;		_escalonador
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text14
  4046  002916                     __ptext14:
  4047                           	callstack 0
  4048  002916                     _verifica_dados_operacionais:
  4049                           	callstack 19
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;main.c: 306: unsigned char vel = 50;
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;incstack = 0
  4056  002916  0E32               	movlw	50
  4057  002918  0100               	movlb	0	; () banked
  4058  00291A  6F95               	movwf	verifica_dados_operacionais@vel& (0+255),b
  4059                           
  4060                           ;main.c: 307: unsigned char i = 0;
  4061  00291C  0E00               	movlw	0
  4062  00291E  6F96               	movwf	verifica_dados_operacionais@i& (0+255),b
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;main.c: 308: static unsigned char contador_atual =0;;main.c: 309: static unsigned char 
      +                          contador_anterior =0;;main.c: 310: static unsigned char contador_gravacoes = 0;;main.c: 
      +                          311: static unsigned long int velocidade_media;;main.c: 312: static unsigned long int ve
      +                          locidade_atual_int = 0;;main.c: 314: static unsigned char dados_vel[3][6] = {"000000", "
      +                          000000", "000000"};;main.c: 315: static unsigned char dados_lat[3][11] = {"0000000000", 
      +                          "0000000000", "0000000000"};;main.c: 316: static unsigned char dados_long[3][12] = {"000
      +                          000000000", "000000000000", "000000000000"};
  4066  002920  EC2F  F02D         	call	_Speed	;wreg free
  4067  002924  C01A  F144         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4068  002928  C01B  F145         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 326: verifica_fence();
  4072  00292C  EC04  F028         	call	_verifica_fence	;wreg free
  4073                           
  4074                           ;main.c: 329: if(contador_atual >=3)
  4075  002930  0E02               	movlw	2
  4076  002932  0100               	movlb	0	; () banked
  4077  002934  65FF               	cpfsgt	verifica_dados_operacionais@contador_atual& (0+255),b
  4078  002936  D04C               	goto	l12960
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 330: {;main.c: 331: time_sd = 0;
  4082  002938  0E00               	movlw	0
  4083  00293A  0101               	movlb	1	; () banked
  4084  00293C  6F4D               	movwf	(_time_sd+1)& (0+255),b
  4085  00293E  0E00               	movlw	0
  4086  002940  6F4C               	movwf	_time_sd& (0+255),b
  4087                           
  4088                           ; BSR set to: 1
  4089                           ;main.c: 332: monta_sd(0, dados_hora[contador_gravacoes]);
  4090  002942  0100               	movlb	0	; () banked
  4091  002944  51FD               	movf	verifica_dados_operacionais@contador_gravacoes& (0+255),w,b
  4092  002946  0D06               	mullw	6
  4093  002948  0E57               	movlw	low verifica_dados_operacionais@dados_hora
  4094  00294A  24F3               	addwf	243,w,c
  4095  00294C  6E20               	movwf	monta_sd@dado^0,c
  4096  00294E  0E02               	movlw	high verifica_dados_operacionais@dados_hora
  4097  002950  20F4               	addwfc	prodh,w,c
  4098  002952  6E21               	movwf	(monta_sd@dado+1)^0,c
  4099  002954  0E00               	movlw	0
  4100  002956  ECBA  F007         	call	_monta_sd
  4101                           
  4102                           ;main.c: 333: monta_sd(1, dados_data[contador_gravacoes]);
  4103  00295A  0100               	movlb	0	; () banked
  4104  00295C  51FD               	movf	verifica_dados_operacionais@contador_gravacoes& (0+255),w,b
  4105  00295E  0D06               	mullw	6
  4106  002960  0E45               	movlw	low verifica_dados_operacionais@dados_data
  4107  002962  24F3               	addwf	243,w,c
  4108  002964  6E20               	movwf	monta_sd@dado^0,c
  4109  002966  0E02               	movlw	high verifica_dados_operacionais@dados_data
  4110  002968  20F4               	addwfc	prodh,w,c
  4111  00296A  6E21               	movwf	(monta_sd@dado+1)^0,c
  4112  00296C  0E01               	movlw	1
  4113  00296E  ECBA  F007         	call	_monta_sd
  4114                           
  4115                           ;main.c: 334: monta_sd(2, dados_lat[contador_gravacoes]);
  4116  002972  0100               	movlb	0	; () banked
  4117  002974  51FD               	movf	verifica_dados_operacionais@contador_gravacoes& (0+255),w,b
  4118  002976  0D0B               	mullw	11
  4119  002978  0E24               	movlw	low verifica_dados_operacionais@dados_lat
  4120  00297A  24F3               	addwf	243,w,c
  4121  00297C  6E20               	movwf	monta_sd@dado^0,c
  4122  00297E  0E02               	movlw	high verifica_dados_operacionais@dados_lat
  4123  002980  20F4               	addwfc	prodh,w,c
  4124  002982  6E21               	movwf	(monta_sd@dado+1)^0,c
  4125  002984  0E02               	movlw	2
  4126  002986  ECBA  F007         	call	_monta_sd
  4127                           
  4128                           ;main.c: 335: monta_sd(3, dados_long[contador_gravacoes]);
  4129  00298A  0100               	movlb	0	; () banked
  4130  00298C  51FD               	movf	verifica_dados_operacionais@contador_gravacoes& (0+255),w,b
  4131  00298E  0D0C               	mullw	12
  4132  002990  0E00               	movlw	low verifica_dados_operacionais@dados_long
  4133  002992  24F3               	addwf	243,w,c
  4134  002994  6E20               	movwf	monta_sd@dado^0,c
  4135  002996  0E02               	movlw	high verifica_dados_operacionais@dados_long
  4136  002998  20F4               	addwfc	prodh,w,c
  4137  00299A  6E21               	movwf	(monta_sd@dado+1)^0,c
  4138  00299C  0E03               	movlw	3
  4139  00299E  ECBA  F007         	call	_monta_sd
  4140                           
  4141                           ;main.c: 336: monta_sd(7, dados_vel[contador_gravacoes]);
  4142  0029A2  0100               	movlb	0	; () banked
  4143  0029A4  51FD               	movf	verifica_dados_operacionais@contador_gravacoes& (0+255),w,b
  4144  0029A6  0D06               	mullw	6
  4145  0029A8  0E69               	movlw	low verifica_dados_operacionais@dados_vel
  4146  0029AA  24F3               	addwf	243,w,c
  4147  0029AC  6E20               	movwf	monta_sd@dado^0,c
  4148  0029AE  0E02               	movlw	high verifica_dados_operacionais@dados_vel
  4149  0029B0  20F4               	addwfc	prodh,w,c
  4150  0029B2  6E21               	movwf	(monta_sd@dado+1)^0,c
  4151  0029B4  0E07               	movlw	7
  4152  0029B6  ECBA  F007         	call	_monta_sd
  4153                           
  4154                           ;main.c: 338: contador_gravacoes++;
  4155  0029BA  0100               	movlb	0	; () banked
  4156  0029BC  2BFD               	incf	verifica_dados_operacionais@contador_gravacoes& (0+255),f,b
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;main.c: 339: if(contador_gravacoes >=3)
  4160  0029BE  0E02               	movlw	2
  4161  0029C0  65FD               	cpfsgt	verifica_dados_operacionais@contador_gravacoes& (0+255),b
  4162  0029C2  D006               	goto	l12960
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;main.c: 340: {;main.c: 341: contador_gravacoes = 0;
  4166  0029C4  0E00               	movlw	0
  4167  0029C6  6FFD               	movwf	verifica_dados_operacionais@contador_gravacoes& (0+255),b
  4168                           
  4169                           ;main.c: 342: contador_atual = 0;
  4170  0029C8  0E00               	movlw	0
  4171  0029CA  6FFF               	movwf	verifica_dados_operacionais@contador_atual& (0+255),b
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;main.c: 343: contador_anterior = contador_atual;
  4175  0029CC  0E00               	movlw	0
  4176  0029CE  6FFE               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4177  0029D0                     l12960:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;main.c: 344: };main.c: 345: };main.c: 348: velocidade_atual_int = ((atoi(velocidade_atu
      +                          al)*1.852*100));
  4181  0029D0  0E33               	movlw	51
  4182  0029D2  6E2E               	movwf	___ftmul@f2^0,c
  4183  0029D4  0E39               	movlw	57
  4184  0029D6  6E2F               	movwf	(___ftmul@f2+1)^0,c
  4185  0029D8  0E43               	movlw	67
  4186  0029DA  6E30               	movwf	(___ftmul@f2+2)^0,c
  4187  0029DC  C144  F020         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4188  0029E0  C145  F021         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4189  0029E4  EC1F  F020         	call	_atoi	;wreg free
  4190  0029E8  C020  F027         	movff	?_atoi,___awtoft@c
  4191  0029EC  C021  F028         	movff	?_atoi+1,___awtoft@c+1
  4192  0029F0  ECDA  F02A         	call	___awtoft	;wreg free
  4193  0029F4  C027  F02B         	movff	?___awtoft,___ftmul@f1
  4194  0029F8  C028  F02C         	movff	?___awtoft+1,___ftmul@f1+1
  4195  0029FC  C029  F02D         	movff	?___awtoft+2,___ftmul@f1+2
  4196  002A00  ECC2  F01E         	call	___ftmul	;wreg free
  4197  002A04  C02B  F069         	movff	?___ftmul,___fttol@f1
  4198  002A08  C02C  F06A         	movff	?___ftmul+1,___fttol@f1+1
  4199  002A0C  C02D  F06B         	movff	?___ftmul+2,___fttol@f1+2
  4200  002A10  ECB4  F01F         	call	___fttol	;wreg free
  4201  002A14  C069  F135         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4202  002A18  C06A  F136         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4203  002A1C  C06B  F137         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4204  002A20  C06C  F138         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 349: if((velocidade_atual_int > atoi(dados_vel[2])) &&;main.c: 350: contador_at
      +                          ual<3)
  4208  002A24  0E75               	movlw	low (verifica_dados_operacionais@dados_vel+12)
  4209  002A26  6E20               	movwf	atoi@s^0,c
  4210  002A28  0E02               	movlw	high (verifica_dados_operacionais@dados_vel+12)
  4211  002A2A  6E21               	movwf	(atoi@s+1)^0,c
  4212  002A2C  EC1F  F020         	call	_atoi	;wreg free
  4213  002A30  C020  F090         	movff	?_atoi,??_verifica_dados_operacionais
  4214  002A34  C021  F091         	movff	?_atoi+1,??_verifica_dados_operacionais+1
  4215  002A38  0E00               	movlw	0
  4216  002A3A  0100               	movlb	0	; () banked
  4217  002A3C  BF91               	btfsc	(??_verifica_dados_operacionais+1)& (0+255),7,b
  4218  002A3E  0EFF               	movlw	255
  4219  002A40  6F92               	movwf	(??_verifica_dados_operacionais+2)& (0+255),b
  4220  002A42  6F93               	movwf	(??_verifica_dados_operacionais+3)& (0+255),b
  4221  002A44  0101               	movlb	1	; () banked
  4222  002A46  5135               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4223  002A48  0100               	movlb	0	; () banked
  4224  002A4A  5D90               	subwf	??_verifica_dados_operacionais& (0+255),w,b
  4225  002A4C  0101               	movlb	1	; () banked
  4226  002A4E  5136               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4227  002A50  0100               	movlb	0	; () banked
  4228  002A52  5991               	subwfb	(??_verifica_dados_operacionais+1)& (0+255),w,b
  4229  002A54  0101               	movlb	1	; () banked
  4230  002A56  5137               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4231  002A58  0100               	movlb	0	; () banked
  4232  002A5A  5992               	subwfb	(??_verifica_dados_operacionais+2)& (0+255),w,b
  4233  002A5C  0101               	movlb	1	; () banked
  4234  002A5E  5138               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4235  002A60  0100               	movlb	0	; () banked
  4236  002A62  5993               	subwfb	(??_verifica_dados_operacionais+3)& (0+255),w,b
  4237  002A64  B0D8               	btfsc	status,0,c
  4238  002A66  0012               	return	
  4239                           
  4240                           ; BSR set to: 0
  4241  002A68  0E03               	movlw	3
  4242  002A6A  61FF               	cpfslt	verifica_dados_operacionais@contador_atual& (0+255),b
  4243  002A6C  0012               	return	
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 351: {;main.c: 355: if(velocidade_atual_int > atoi(dados_vel[contador_anterior]
      +                          ))
  4247  002A6E  51FE               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4248  002A70  0D06               	mullw	6
  4249  002A72  0E69               	movlw	low verifica_dados_operacionais@dados_vel
  4250  002A74  24F3               	addwf	243,w,c
  4251  002A76  6E20               	movwf	atoi@s^0,c
  4252  002A78  0E02               	movlw	high verifica_dados_operacionais@dados_vel
  4253  002A7A  20F4               	addwfc	prodh,w,c
  4254  002A7C  6E21               	movwf	(atoi@s+1)^0,c
  4255  002A7E  EC1F  F020         	call	_atoi	;wreg free
  4256  002A82  C020  F090         	movff	?_atoi,??_verifica_dados_operacionais
  4257  002A86  C021  F091         	movff	?_atoi+1,??_verifica_dados_operacionais+1
  4258  002A8A  0E00               	movlw	0
  4259  002A8C  0100               	movlb	0	; () banked
  4260  002A8E  BF91               	btfsc	(??_verifica_dados_operacionais+1)& (0+255),7,b
  4261  002A90  0EFF               	movlw	255
  4262  002A92  6F92               	movwf	(??_verifica_dados_operacionais+2)& (0+255),b
  4263  002A94  6F93               	movwf	(??_verifica_dados_operacionais+3)& (0+255),b
  4264  002A96  0101               	movlb	1	; () banked
  4265  002A98  5135               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4266  002A9A  0100               	movlb	0	; () banked
  4267  002A9C  5D90               	subwf	??_verifica_dados_operacionais& (0+255),w,b
  4268  002A9E  0101               	movlb	1	; () banked
  4269  002AA0  5136               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4270  002AA2  0100               	movlb	0	; () banked
  4271  002AA4  5991               	subwfb	(??_verifica_dados_operacionais+1)& (0+255),w,b
  4272  002AA6  0101               	movlb	1	; () banked
  4273  002AA8  5137               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4274  002AAA  0100               	movlb	0	; () banked
  4275  002AAC  5992               	subwfb	(??_verifica_dados_operacionais+2)& (0+255),w,b
  4276  002AAE  0101               	movlb	1	; () banked
  4277  002AB0  5138               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4278  002AB2  0100               	movlb	0	; () banked
  4279  002AB4  5993               	subwfb	(??_verifica_dados_operacionais+3)& (0+255),w,b
  4280  002AB6  B0D8               	btfsc	status,0,c
  4281  002AB8  D052               	goto	l12970
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 356: {;main.c: 357: strcpy(dados_vel[contador_atual], velocidade_atual);
  4285  002ABA  51FF               	movf	verifica_dados_operacionais@contador_atual& (0+255),w,b
  4286  002ABC  0D06               	mullw	6
  4287  002ABE  0E69               	movlw	low verifica_dados_operacionais@dados_vel
  4288  002AC0  24F3               	addwf	243,w,c
  4289  002AC2  6E1C               	movwf	strcpy@to^0,c
  4290  002AC4  0E02               	movlw	high verifica_dados_operacionais@dados_vel
  4291  002AC6  20F4               	addwfc	prodh,w,c
  4292  002AC8  6E1D               	movwf	(strcpy@to+1)^0,c
  4293  002ACA  C144  F01E         	movff	verifica_dados_operacionais@velocidade_atual,strcpy@from
  4294  002ACE  C145  F01F         	movff	verifica_dados_operacionais@velocidade_atual+1,strcpy@from+1
  4295  002AD2  ECB7  F029         	call	_strcpy	;wreg free
  4296                           
  4297                           ;main.c: 358: strcpy(dados_lat[contador_atual], latitude());
  4298  002AD6  0100               	movlb	0	; () banked
  4299  002AD8  51FF               	movf	verifica_dados_operacionais@contador_atual& (0+255),w,b
  4300  002ADA  0D0B               	mullw	11
  4301  002ADC  0E24               	movlw	low verifica_dados_operacionais@dados_lat
  4302  002ADE  24F3               	addwf	243,w,c
  4303  002AE0  6E1C               	movwf	strcpy@to^0,c
  4304  002AE2  0E02               	movlw	high verifica_dados_operacionais@dados_lat
  4305  002AE4  20F4               	addwfc	prodh,w,c
  4306  002AE6  6E1D               	movwf	(strcpy@to+1)^0,c
  4307  002AE8  EC2A  F02D         	call	_latitude	;wreg free
  4308  002AEC  C01A  F01E         	movff	?_latitude,strcpy@from
  4309  002AF0  C01B  F01F         	movff	?_latitude+1,strcpy@from+1
  4310  002AF4  ECB7  F029         	call	_strcpy	;wreg free
  4311                           
  4312                           ;main.c: 359: strcpy(dados_long[contador_atual], longitude());
  4313  002AF8  0100               	movlb	0	; () banked
  4314  002AFA  51FF               	movf	verifica_dados_operacionais@contador_atual& (0+255),w,b
  4315  002AFC  0D0C               	mullw	12
  4316  002AFE  0E00               	movlw	low verifica_dados_operacionais@dados_long
  4317  002B00  24F3               	addwf	243,w,c
  4318  002B02  6E1C               	movwf	strcpy@to^0,c
  4319  002B04  0E02               	movlw	high verifica_dados_operacionais@dados_long
  4320  002B06  20F4               	addwfc	prodh,w,c
  4321  002B08  6E1D               	movwf	(strcpy@to+1)^0,c
  4322  002B0A  EC25  F02D         	call	_longitude	;wreg free
  4323  002B0E  C01A  F01E         	movff	?_longitude,strcpy@from
  4324  002B12  C01B  F01F         	movff	?_longitude+1,strcpy@from+1
  4325  002B16  ECB7  F029         	call	_strcpy	;wreg free
  4326                           
  4327                           ;main.c: 360: strcpy(dados_hora[contador_atual], rawhora());
  4328  002B1A  0100               	movlb	0	; () banked
  4329  002B1C  51FF               	movf	verifica_dados_operacionais@contador_atual& (0+255),w,b
  4330  002B1E  0D06               	mullw	6
  4331  002B20  0E57               	movlw	low verifica_dados_operacionais@dados_hora
  4332  002B22  24F3               	addwf	243,w,c
  4333  002B24  6E1C               	movwf	strcpy@to^0,c
  4334  002B26  0E02               	movlw	high verifica_dados_operacionais@dados_hora
  4335  002B28  20F4               	addwfc	prodh,w,c
  4336  002B2A  6E1D               	movwf	(strcpy@to+1)^0,c
  4337  002B2C  EC1B  F02D         	call	_rawhora	;wreg free
  4338  002B30  C01A  F01E         	movff	?_rawhora,strcpy@from
  4339  002B34  C01B  F01F         	movff	?_rawhora+1,strcpy@from+1
  4340  002B38  ECB7  F029         	call	_strcpy	;wreg free
  4341                           
  4342                           ;main.c: 361: strcpy(dados_data[contador_atual], rawdata());
  4343  002B3C  0100               	movlb	0	; () banked
  4344  002B3E  51FF               	movf	verifica_dados_operacionais@contador_atual& (0+255),w,b
  4345  002B40  0D06               	mullw	6
  4346  002B42  0E45               	movlw	low verifica_dados_operacionais@dados_data
  4347  002B44  24F3               	addwf	243,w,c
  4348  002B46  6E1C               	movwf	strcpy@to^0,c
  4349  002B48  0E02               	movlw	high verifica_dados_operacionais@dados_data
  4350  002B4A  20F4               	addwfc	prodh,w,c
  4351  002B4C  6E1D               	movwf	(strcpy@to+1)^0,c
  4352  002B4E  EC20  F02D         	call	_rawdata	;wreg free
  4353  002B52  C01A  F01E         	movff	?_rawdata,strcpy@from
  4354  002B56  C01B  F01F         	movff	?_rawdata+1,strcpy@from+1
  4355  002B5A  ECB7  F029         	call	_strcpy	;wreg free
  4356  002B5E                     l12970:
  4357                           
  4358                           ;main.c: 362: };main.c: 369: contador_anterior = contador_atual;
  4359  002B5E  C0FF  F0FE         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4360                           
  4361                           ;main.c: 370: contador_atual++;
  4362  002B62  0100               	movlb	0	; () banked
  4363  002B64  2BFF               	incf	verifica_dados_operacionais@contador_atual& (0+255),f,b
  4364                           
  4365                           ; BSR set to: 0
  4366  002B66  0012               	return		;funcret
  4367  002B68                     __end_of_verifica_dados_operacionais:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _verifica_fence *****************
  4371 ;; Defined at:
  4372 ;;		line 270 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 3F/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4389 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        1 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    9
  4393 ;; This function calls:
  4394 ;;		_latitude_to_convert
  4395 ;;		_longitude_to_convert
  4396 ;;		_monta_sd
  4397 ;;		_recebe_dado_gps
  4398 ;;		_verifica_plausibilidade_lat
  4399 ;;		_verifica_plausibilidade_long
  4400 ;; This function is called by:
  4401 ;;		_verifica_dados_operacionais
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text15
  4406  005008                     __ptext15:
  4407                           	callstack 0
  4408  005008                     _verifica_fence:
  4409                           	callstack 19
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;main.c: 273: recebe_dado_gps();
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;incstack = 0
  4416  005008  EC42  F02C         	call	_recebe_dado_gps	;wreg free
  4417                           
  4418                           ;main.c: 274: longitude_to_convert();
  4419  00500C  EC61  F025         	call	_longitude_to_convert	;wreg free
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;main.c: 275: latitude_to_convert();
  4423  005010  ECDA  F025         	call	_latitude_to_convert	;wreg free
  4424                           
  4425                           ;main.c: 276: fence_flag[0].point = verifica_plausibilidade_long();
  4426  005014  ECEF  F026         	call	_verifica_plausibilidade_long	;wreg free
  4427  005018  6F8F               	movwf	??_verifica_fence& (0+255),b
  4428  00501A  5031               	movf	_fence_flag^0,w,c
  4429  00501C  198F               	xorwf	??_verifica_fence& (0+255),w,b
  4430  00501E  0BFE               	andlw	-2
  4431  005020  198F               	xorwf	??_verifica_fence& (0+255),w,b
  4432  005022  6E31               	movwf	_fence_flag^0,c
  4433                           
  4434                           ;main.c: 277: fence_flag[1].point = verifica_plausibilidade_lat();
  4435  005024  EC9E  F025         	call	_verifica_plausibilidade_lat	;wreg free
  4436  005028  6F8F               	movwf	??_verifica_fence& (0+255),b
  4437  00502A  5032               	movf	(_fence_flag+1)^0,w,c
  4438  00502C  198F               	xorwf	??_verifica_fence& (0+255),w,b
  4439  00502E  0BFE               	andlw	-2
  4440  005030  198F               	xorwf	??_verifica_fence& (0+255),w,b
  4441  005032  6E32               	movwf	(_fence_flag+1)^0,c
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;main.c: 282: if(fence_flag[0].point || fence_flag[1].point)
  4445  005034  B031               	btfsc	_fence_flag^0,0,c
  4446  005036  D002               	goto	u15820
  4447                           
  4448                           ; BSR set to: 0
  4449  005038  A032               	btfss	(_fence_flag+1)^0,0,c
  4450  00503A  D009               	goto	l1493
  4451  00503C                     u15820:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 283: {;main.c: 284: fence_flag[2].point = 1;
  4455  00503C  8033               	bsf	(_fence_flag+2)^0,0,c
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 285: monta_sd(4, "FORA");
  4459  00503E  0E64               	movlw	low STR_23
  4460  005040  6E20               	movwf	monta_sd@dado^0,c
  4461  005042  0E62               	movlw	high STR_23
  4462  005044  6E21               	movwf	(monta_sd@dado+1)^0,c
  4463  005046  0E04               	movlw	4
  4464  005048  ECBA  F007         	call	_monta_sd
  4465                           
  4466                           ;main.c: 286: }
  4467  00504C  0012               	return	
  4468  00504E                     l1493:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 287: else;main.c: 288: {;main.c: 289: fence_flag[2].point = 0;
  4472  00504E  9033               	bcf	(_fence_flag+2)^0,0,c
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 290: monta_sd(4, "DENTRO");
  4476  005050  0E3F               	movlw	low STR_24
  4477  005052  6E20               	movwf	monta_sd@dado^0,c
  4478  005054  0E62               	movlw	high STR_24
  4479  005056  6E21               	movwf	(monta_sd@dado+1)^0,c
  4480  005058  0E04               	movlw	4
  4481  00505A  ECBA  F007         	call	_monta_sd
  4482  00505E  0012               	return		;funcret
  4483  005060                     __end_of_verifica_fence:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _verifica_plausibilidade_long *****************
  4487 ;; Defined at:
  4488 ;;		line 311 in file "bibliotecas/fence.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  posicao         1   25[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      unsigned char 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 3F/0
  4499 ;;		On exit  : 3F/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4505 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:        1 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		_posicao_long
  4511 ;; This function is called by:
  4512 ;;		_verifica_fence
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text16
  4517  004DDE                     __ptext16:
  4518                           	callstack 0
  4519  004DDE                     _verifica_plausibilidade_long:
  4520                           	callstack 23
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;fence.c: 313: char posicao = posicao_long();
  4524                           
  4525                           ;incstack = 0
  4526  004DDE  EC42  F02D         	call	_posicao_long	;wreg free
  4527  004DE2  6E1A               	movwf	verifica_plausibilidade_long@posicao^0,c
  4528                           
  4529                           ;fence.c: 314: switch(posicao)
  4530  004DE4  D029               	goto	l12566
  4531  004DE6                     l12516:
  4532                           
  4533                           ; BSR set to: 1
  4534                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  4535  004DE6  0100               	movlb	0	; () banked
  4536  004DE8  BFF4               	btfsc	(_poligono_ext+7)& (0+255),7,b
  4537  004DEA  D00B               	goto	l12526
  4538                           
  4539                           ; BSR set to: 0
  4540  004DEC  BFFC               	btfsc	(_poligono_ext+15)& (0+255),7,b
  4541  004DEE  D007               	goto	u15440
  4542  004DF0  51FC               	movf	(_poligono_ext+15)& (0+255),w,b
  4543  004DF2  11FB               	iorwf	(_poligono_ext+14)& (0+255),w,b
  4544  004DF4  11FA               	iorwf	(_poligono_ext+13)& (0+255),w,b
  4545  004DF6  E105               	bnz	l12526
  4546  004DF8  05F9               	decf	(_poligono_ext+12)& (0+255),w,b
  4547  004DFA  B0D8               	btfsc	status,0,c
  4548  004DFC  D002               	goto	l12526
  4549  004DFE                     u15440:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;fence.c: 320: {;fence.c: 321: return 0;
  4553  004DFE  0E00               	movlw	0
  4554  004E00  0012               	return	
  4555  004E02                     l12526:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  4559  004E02  51F1               	movf	(_poligono_ext+4)& (0+255),w,b
  4560  004E04  11F2               	iorwf	(_poligono_ext+5)& (0+255),w,b
  4561  004E06  11F3               	iorwf	(_poligono_ext+6)& (0+255),w,b
  4562  004E08  11F4               	iorwf	(_poligono_ext+7)& (0+255),w,b
  4563  004E0A  B4D8               	btfsc	status,2,c
  4564  004E0C  D7F8               	goto	u15440
  4565                           
  4566                           ; BSR set to: 0
  4567  004E0E  51F9               	movf	(_poligono_ext+12)& (0+255),w,b
  4568  004E10  11FA               	iorwf	(_poligono_ext+13)& (0+255),w,b
  4569  004E12  11FB               	iorwf	(_poligono_ext+14)& (0+255),w,b
  4570  004E14  11FC               	iorwf	(_poligono_ext+15)& (0+255),w,b
  4571  004E16  B4D8               	btfsc	status,2,c
  4572  004E18  D7F2               	goto	u15440
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  4576  004E1A  0E01               	movlw	1
  4577  004E1C  0012               	return	
  4578  004E1E                     l12540:
  4579                           
  4580                           ; BSR set to: 1
  4581                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  4582  004E1E  0100               	movlb	0	; () banked
  4583  004E20  BFF4               	btfsc	(_poligono_ext+7)& (0+255),7,b
  4584  004E22  D007               	goto	u15470
  4585  004E24  51F4               	movf	(_poligono_ext+7)& (0+255),w,b
  4586  004E26  11F3               	iorwf	(_poligono_ext+6)& (0+255),w,b
  4587  004E28  11F2               	iorwf	(_poligono_ext+5)& (0+255),w,b
  4588  004E2A  E1EB               	bnz	l12526
  4589  004E2C  05F1               	decf	(_poligono_ext+4)& (0+255),w,b
  4590  004E2E  B0D8               	btfsc	status,0,c
  4591  004E30  D7E8               	goto	l12526
  4592  004E32                     u15470:
  4593                           
  4594                           ; BSR set to: 0
  4595  004E32  AFFC               	btfss	(_poligono_ext+15)& (0+255),7,b
  4596  004E34  D7E4               	goto	u15440
  4597  004E36  D7E5               	goto	l12526
  4598  004E38                     l12566:
  4599                           
  4600                           ; BSR set to: 1
  4601  004E38  501A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  4602                           
  4603                           ; Switch size 1, requested type "simple"
  4604                           ; Number of cases is 1, Range of values is 45 to 45
  4605                           ; switch strategies available:
  4606                           ; Name         Instructions Cycles
  4607                           ; simple_byte            4     3 (average)
  4608                           ;	Chosen strategy is simple_byte
  4609  004E3A  0A2D               	xorlw	45	; case 45
  4610  004E3C  B4D8               	btfsc	status,2,c
  4611  004E3E  D7D3               	goto	l12516
  4612  004E40  D7EE               	goto	l12540
  4613  004E42                     __end_of_verifica_plausibilidade_long:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _posicao_long *****************
  4617 ;; Defined at:
  4618 ;;		line 293 in file "bibliotecas/GPS.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      unsigned char 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2
  4627 ;; Tracked objects:
  4628 ;;		On entry : 3F/0
  4629 ;;		On exit  : 3F/1
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    3
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_verifica_plausibilidade_long
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text17
  4647  005A84                     __ptext17:
  4648                           	callstack 0
  4649  005A84                     _posicao_long:
  4650                           	callstack 23
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;GPS.c: 296: return rawLongitude[0];
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;incstack = 0
  4657  005A84  0101               	movlb	1	; () banked
  4658  005A86  5181               	movf	_rawLongitude& (0+255),w,b
  4659                           
  4660                           ; BSR set to: 1
  4661  005A88  0012               	return		;funcret
  4662  005A8A                     __end_of_posicao_long:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _verifica_plausibilidade_lat *****************
  4666 ;; Defined at:
  4667 ;;		line 365 in file "bibliotecas/fence.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  posicao         1   25[COMRAM] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      unsigned char 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 3F/0
  4678 ;;		On exit  : 3F/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        1 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    4
  4688 ;; This function calls:
  4689 ;;		_posicao_lat
  4690 ;; This function is called by:
  4691 ;;		_verifica_fence
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text18
  4696  004B3C                     __ptext18:
  4697                           	callstack 0
  4698  004B3C                     _verifica_plausibilidade_lat:
  4699                           	callstack 23
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;fence.c: 367: char posicao = posicao_lat();
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;incstack = 0
  4706  004B3C  EC45  F02D         	call	_posicao_lat	;wreg free
  4707  004B40  6E1A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  4708                           
  4709                           ;fence.c: 368: switch(posicao)
  4710  004B42  D033               	goto	l12630
  4711  004B44                     l12570:
  4712                           
  4713                           ; BSR set to: 1
  4714                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  4715  004B44  0100               	movlb	0	; () banked
  4716  004B46  BFF0               	btfsc	(_poligono_ext+3)& (0+255),7,b
  4717  004B48  D007               	goto	u15510
  4718  004B4A  51F0               	movf	(_poligono_ext+3)& (0+255),w,b
  4719  004B4C  11EF               	iorwf	(_poligono_ext+2)& (0+255),w,b
  4720  004B4E  11EE               	iorwf	(_poligono_ext+1)& (0+255),w,b
  4721  004B50  E107               	bnz	l12580
  4722  004B52  05ED               	decf	_poligono_ext& (0+255),w,b
  4723  004B54  B0D8               	btfsc	status,0,c
  4724  004B56  D004               	goto	l12580
  4725  004B58                     u15510:
  4726                           
  4727                           ; BSR set to: 0
  4728  004B58  BFF8               	btfsc	(_poligono_ext+11)& (0+255),7,b
  4729  004B5A  D002               	goto	l12580
  4730  004B5C                     u15520:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;fence.c: 374: {;fence.c: 375: return 0;
  4734  004B5C  0E00               	movlw	0
  4735  004B5E  0012               	return	
  4736  004B60                     l12580:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  4740  004B60  51ED               	movf	_poligono_ext& (0+255),w,b
  4741  004B62  11EE               	iorwf	(_poligono_ext+1)& (0+255),w,b
  4742  004B64  11EF               	iorwf	(_poligono_ext+2)& (0+255),w,b
  4743  004B66  11F0               	iorwf	(_poligono_ext+3)& (0+255),w,b
  4744  004B68  B4D8               	btfsc	status,2,c
  4745  004B6A  D7F8               	goto	u15520
  4746                           
  4747                           ; BSR set to: 0
  4748  004B6C  51F5               	movf	(_poligono_ext+8)& (0+255),w,b
  4749  004B6E  11F6               	iorwf	(_poligono_ext+9)& (0+255),w,b
  4750  004B70  11F7               	iorwf	(_poligono_ext+10)& (0+255),w,b
  4751  004B72  11F8               	iorwf	(_poligono_ext+11)& (0+255),w,b
  4752  004B74  B4D8               	btfsc	status,2,c
  4753  004B76  D7F2               	goto	u15520
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  4757  004B78  0E01               	movlw	1
  4758  004B7A  0012               	return	
  4759  004B7C                     l12594:
  4760                           
  4761                           ; BSR set to: 1
  4762                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  4763  004B7C  0100               	movlb	0	; () banked
  4764  004B7E  BFF0               	btfsc	(_poligono_ext+3)& (0+255),7,b
  4765  004B80  D009               	goto	l12604
  4766                           
  4767                           ; BSR set to: 0
  4768  004B82  BFF8               	btfsc	(_poligono_ext+11)& (0+255),7,b
  4769  004B84  D7EB               	goto	u15520
  4770  004B86  51F8               	movf	(_poligono_ext+11)& (0+255),w,b
  4771  004B88  11F7               	iorwf	(_poligono_ext+10)& (0+255),w,b
  4772  004B8A  11F6               	iorwf	(_poligono_ext+9)& (0+255),w,b
  4773  004B8C  E103               	bnz	l12604
  4774  004B8E  05F5               	decf	(_poligono_ext+8)& (0+255),w,b
  4775  004B90  A0D8               	btfss	status,0,c
  4776  004B92  D7E4               	goto	u15520
  4777  004B94                     l12604:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  4781  004B94  BFF0               	btfsc	(_poligono_ext+3)& (0+255),7,b
  4782                           
  4783                           ; BSR set to: 0
  4784  004B96  BFF8               	btfsc	(_poligono_ext+11)& (0+255),7,b
  4785  004B98  D7E1               	goto	u15520
  4786  004B9A  51F8               	movf	(_poligono_ext+11)& (0+255),w,b
  4787  004B9C  11F7               	iorwf	(_poligono_ext+10)& (0+255),w,b
  4788  004B9E  11F6               	iorwf	(_poligono_ext+9)& (0+255),w,b
  4789  004BA0  E1DF               	bnz	l12580
  4790  004BA2  05F5               	decf	(_poligono_ext+8)& (0+255),w,b
  4791  004BA4  A0D8               	btfss	status,0,c
  4792  004BA6  D7DA               	goto	u15520
  4793  004BA8  D7DB               	goto	l12580
  4794  004BAA                     l12630:
  4795                           
  4796                           ; BSR set to: 1
  4797  004BAA  501A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  4798                           
  4799                           ; Switch size 1, requested type "simple"
  4800                           ; Number of cases is 1, Range of values is 45 to 45
  4801                           ; switch strategies available:
  4802                           ; Name         Instructions Cycles
  4803                           ; simple_byte            4     3 (average)
  4804                           ;	Chosen strategy is simple_byte
  4805  004BAC  0A2D               	xorlw	45	; case 45
  4806  004BAE  B4D8               	btfsc	status,2,c
  4807  004BB0  D7C9               	goto	l12570
  4808  004BB2  D7E4               	goto	l12594
  4809  004BB4                     __end_of_verifica_plausibilidade_lat:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _posicao_lat *****************
  4813 ;; Defined at:
  4814 ;;		line 299 in file "bibliotecas/GPS.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      unsigned char 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2
  4823 ;; Tracked objects:
  4824 ;;		On entry : 3F/0
  4825 ;;		On exit  : 3F/1
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    3
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_verifica_plausibilidade_lat
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text19
  4843  005A8A                     __ptext19:
  4844                           	callstack 0
  4845  005A8A                     _posicao_lat:
  4846                           	callstack 23
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;GPS.c: 302: return rawLatitude[0];
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;incstack = 0
  4853  005A8A  0101               	movlb	1	; () banked
  4854  005A8C  519A               	movf	_rawLatitude& (0+255),w,b
  4855                           
  4856                           ; BSR set to: 1
  4857  005A8E  0012               	return		;funcret
  4858  005A90                     __end_of_posicao_lat:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _longitude_to_convert *****************
  4862 ;; Defined at:
  4863 ;;		line 274 in file "bibliotecas/GPS.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  longitude      11   34[BANK0 ] unsigned char [11]
  4868 ;;  i               1   46[BANK0 ] unsigned char 
  4869 ;;  j               1   45[BANK0 ] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 3F/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4881 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4882 ;;      Totals:         1      13       0       0       0       0       0       0       0
  4883 ;;Total ram usage:       14 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    8
  4886 ;; This function calls:
  4887 ;;		_armazena_ltlo
  4888 ;; This function is called by:
  4889 ;;		_verifica_fence
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text20
  4894  004AC2                     __ptext20:
  4895                           	callstack 0
  4896  004AC2                     _longitude_to_convert:
  4897                           	callstack 19
  4898                           
  4899                           ;GPS.c: 276: unsigned char i,j;;GPS.c: 277: unsigned char longitude[11];;GPS.c: 280: j =
      +                           0;
  4900                           
  4901                           ; BSR set to: 1
  4902                           ;incstack = 0
  4903  004AC2  0E00               	movlw	0
  4904  004AC4  0100               	movlb	0	; () banked
  4905  004AC6  6F8D               	movwf	longitude_to_convert@j& (0+255),b
  4906                           
  4907                           ;GPS.c: 281: for(i=0; i<12; i++)
  4908  004AC8  0E00               	movlw	0
  4909  004ACA  6F8E               	movwf	longitude_to_convert@i& (0+255),b
  4910  004ACC                     l12274:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;GPS.c: 282: {;GPS.c: 283: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  4914  004ACC  0E81               	movlw	low _rawLongitude
  4915  004ACE  258E               	addwf	longitude_to_convert@i& (0+255),w,b
  4916  004AD0  6ED9               	movwf	fsr2l,c
  4917  004AD2  6ADA               	clrf	fsr2h,c
  4918  004AD4  0E01               	movlw	high _rawLongitude
  4919  004AD6  22DA               	addwfc	fsr2h,f,c
  4920  004AD8  50DF               	movf	indf2,w,c
  4921  004ADA  B4D8               	btfsc	status,2,c
  4922  004ADC  D024               	goto	l12286
  4923                           
  4924                           ; BSR set to: 0
  4925  004ADE  0E81               	movlw	low _rawLongitude
  4926  004AE0  258E               	addwf	longitude_to_convert@i& (0+255),w,b
  4927  004AE2  6ED9               	movwf	fsr2l,c
  4928  004AE4  6ADA               	clrf	fsr2h,c
  4929  004AE6  0E01               	movlw	high _rawLongitude
  4930  004AE8  22DA               	addwfc	fsr2h,f,c
  4931  004AEA  0E2D               	movlw	45
  4932  004AEC  18DE               	xorwf	postinc2,w,c
  4933  004AEE  B4D8               	btfsc	status,2,c
  4934  004AF0  D01A               	goto	l12286
  4935                           
  4936                           ; BSR set to: 0
  4937  004AF2  0E81               	movlw	low _rawLongitude
  4938  004AF4  258E               	addwf	longitude_to_convert@i& (0+255),w,b
  4939  004AF6  6ED9               	movwf	fsr2l,c
  4940  004AF8  6ADA               	clrf	fsr2h,c
  4941  004AFA  0E01               	movlw	high _rawLongitude
  4942  004AFC  22DA               	addwfc	fsr2h,f,c
  4943  004AFE  0E2E               	movlw	46
  4944  004B00  18DE               	xorwf	postinc2,w,c
  4945  004B02  B4D8               	btfsc	status,2,c
  4946  004B04  D010               	goto	l12286
  4947                           
  4948                           ; BSR set to: 0
  4949  004B06  0E0A               	movlw	10
  4950  004B08  618D               	cpfslt	longitude_to_convert@j& (0+255),b
  4951  004B0A  D00D               	goto	l12286
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;GPS.c: 284: {;GPS.c: 286: longitude[j] = rawLongitude[i];
  4955  004B0C  0E81               	movlw	low _rawLongitude
  4956  004B0E  258E               	addwf	longitude_to_convert@i& (0+255),w,b
  4957  004B10  6ED9               	movwf	fsr2l,c
  4958  004B12  6ADA               	clrf	fsr2h,c
  4959  004B14  0E01               	movlw	high _rawLongitude
  4960  004B16  22DA               	addwfc	fsr2h,f,c
  4961  004B18  518D               	movf	longitude_to_convert@j& (0+255),w,b
  4962  004B1A  0F82               	addlw	low longitude_to_convert@longitude
  4963  004B1C  6EE1               	movwf	fsr1l,c
  4964  004B1E  6AE2               	clrf	fsr1h,c
  4965  004B20  CFDF FFE7          	movff	indf2,indf1
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;GPS.c: 287: j++;
  4969  004B24  2B8D               	incf	longitude_to_convert@j& (0+255),f,b
  4970  004B26                     l12286:
  4971                           
  4972                           ; BSR set to: 0
  4973  004B26  2B8E               	incf	longitude_to_convert@i& (0+255),f,b
  4974                           
  4975                           ; BSR set to: 0
  4976  004B28  0E0B               	movlw	11
  4977  004B2A  658E               	cpfsgt	longitude_to_convert@i& (0+255),b
  4978  004B2C  D7CF               	goto	l12274
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;GPS.c: 288: };GPS.c: 289: };GPS.c: 290: armazena_ltlo(longitude, 0);
  4982  004B2E  0E82               	movlw	low longitude_to_convert@longitude
  4983  004B30  6E2E               	movwf	armazena_ltlo@buffer^0,c
  4984  004B32  0E00               	movlw	0
  4985  004B34  6E2F               	movwf	armazena_ltlo@index^0,c
  4986  004B36  EC5F  F024         	call	_armazena_ltlo	;wreg free
  4987                           
  4988                           ; BSR set to: 0
  4989  004B3A  0012               	return		;funcret
  4990  004B3C                     __end_of_longitude_to_convert:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _latitude_to_convert *****************
  4994 ;; Defined at:
  4995 ;;		line 249 in file "bibliotecas/GPS.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  latitude        9   34[BANK0 ] unsigned char [9]
  5000 ;;  i               1   44[BANK0 ] unsigned char 
  5001 ;;  j               1   43[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 3F/0
  5008 ;;		On exit  : 3F/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         0      11       0       0       0       0       0       0       0
  5013 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5014 ;;      Totals:         1      11       0       0       0       0       0       0       0
  5015 ;;Total ram usage:       12 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    8
  5018 ;; This function calls:
  5019 ;;		_armazena_ltlo
  5020 ;; This function is called by:
  5021 ;;		_verifica_fence
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text21
  5026  004BB4                     __ptext21:
  5027                           	callstack 0
  5028  004BB4                     _latitude_to_convert:
  5029                           	callstack 19
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;GPS.c: 251: unsigned char i,j;;GPS.c: 252: unsigned char latitude[9];;GPS.c: 255: j = 0
      +                          ;
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;incstack = 0
  5036  004BB4  0E00               	movlw	0
  5037  004BB6  6F8B               	movwf	latitude_to_convert@j& (0+255),b
  5038                           
  5039                           ;GPS.c: 256: for(i=0; i<12; i++)
  5040  004BB8  0E00               	movlw	0
  5041  004BBA  6F8C               	movwf	latitude_to_convert@i& (0+255),b
  5042  004BBC                     l12250:
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;GPS.c: 257: {;GPS.c: 258: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  5046  004BBC  0E9A               	movlw	low _rawLatitude
  5047  004BBE  258C               	addwf	latitude_to_convert@i& (0+255),w,b
  5048  004BC0  6ED9               	movwf	fsr2l,c
  5049  004BC2  6ADA               	clrf	fsr2h,c
  5050  004BC4  0E01               	movlw	high _rawLatitude
  5051  004BC6  22DA               	addwfc	fsr2h,f,c
  5052  004BC8  50DF               	movf	indf2,w,c
  5053  004BCA  B4D8               	btfsc	status,2,c
  5054  004BCC  D024               	goto	l12262
  5055                           
  5056                           ; BSR set to: 0
  5057  004BCE  0E9A               	movlw	low _rawLatitude
  5058  004BD0  258C               	addwf	latitude_to_convert@i& (0+255),w,b
  5059  004BD2  6ED9               	movwf	fsr2l,c
  5060  004BD4  6ADA               	clrf	fsr2h,c
  5061  004BD6  0E01               	movlw	high _rawLatitude
  5062  004BD8  22DA               	addwfc	fsr2h,f,c
  5063  004BDA  0E2D               	movlw	45
  5064  004BDC  18DE               	xorwf	postinc2,w,c
  5065  004BDE  B4D8               	btfsc	status,2,c
  5066  004BE0  D01A               	goto	l12262
  5067                           
  5068                           ; BSR set to: 0
  5069  004BE2  0E9A               	movlw	low _rawLatitude
  5070  004BE4  258C               	addwf	latitude_to_convert@i& (0+255),w,b
  5071  004BE6  6ED9               	movwf	fsr2l,c
  5072  004BE8  6ADA               	clrf	fsr2h,c
  5073  004BEA  0E01               	movlw	high _rawLatitude
  5074  004BEC  22DA               	addwfc	fsr2h,f,c
  5075  004BEE  0E2E               	movlw	46
  5076  004BF0  18DE               	xorwf	postinc2,w,c
  5077  004BF2  B4D8               	btfsc	status,2,c
  5078  004BF4  D010               	goto	l12262
  5079                           
  5080                           ; BSR set to: 0
  5081  004BF6  0E09               	movlw	9
  5082  004BF8  618B               	cpfslt	latitude_to_convert@j& (0+255),b
  5083  004BFA  D00D               	goto	l12262
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;GPS.c: 259: {;GPS.c: 260: latitude[j] = rawLatitude[i];
  5087  004BFC  0E9A               	movlw	low _rawLatitude
  5088  004BFE  258C               	addwf	latitude_to_convert@i& (0+255),w,b
  5089  004C00  6ED9               	movwf	fsr2l,c
  5090  004C02  6ADA               	clrf	fsr2h,c
  5091  004C04  0E01               	movlw	high _rawLatitude
  5092  004C06  22DA               	addwfc	fsr2h,f,c
  5093  004C08  518B               	movf	latitude_to_convert@j& (0+255),w,b
  5094  004C0A  0F82               	addlw	low latitude_to_convert@latitude
  5095  004C0C  6EE1               	movwf	fsr1l,c
  5096  004C0E  6AE2               	clrf	fsr1h,c
  5097  004C10  CFDF FFE7          	movff	indf2,indf1
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;GPS.c: 261: j++;
  5101  004C14  2B8B               	incf	latitude_to_convert@j& (0+255),f,b
  5102  004C16                     l12262:
  5103                           
  5104                           ; BSR set to: 0
  5105  004C16  2B8C               	incf	latitude_to_convert@i& (0+255),f,b
  5106                           
  5107                           ; BSR set to: 0
  5108  004C18  0E0B               	movlw	11
  5109  004C1A  658C               	cpfsgt	latitude_to_convert@i& (0+255),b
  5110  004C1C  D7CF               	goto	l12250
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;GPS.c: 262: };GPS.c: 263: };GPS.c: 264: armazena_ltlo(latitude, 1);
  5114  004C1E  0E82               	movlw	low latitude_to_convert@latitude
  5115  004C20  6E2E               	movwf	armazena_ltlo@buffer^0,c
  5116  004C22  0E01               	movlw	1
  5117  004C24  6E2F               	movwf	armazena_ltlo@index^0,c
  5118  004C26  EC5F  F024         	call	_armazena_ltlo	;wreg free
  5119                           
  5120                           ; BSR set to: 0
  5121  004C2A  0012               	return		;funcret
  5122  004C2C                     __end_of_latitude_to_convert:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function _armazena_ltlo *****************
  5126 ;; Defined at:
  5127 ;;		line 64 in file "bibliotecas/fence.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  buffer          1   45[COMRAM] PTR unsigned char 
  5130 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  5131 ;;  index           1   46[COMRAM] unsigned char 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  i               1   33[BANK0 ] unsigned char 
  5134 ;;  j               1   32[BANK0 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 3F/0
  5141 ;;		On exit  : 3F/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:         2       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         2       2       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        4 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    7
  5151 ;; This function calls:
  5152 ;;		_diferenca
  5153 ;; This function is called by:
  5154 ;;		_latitude_to_convert
  5155 ;;		_longitude_to_convert
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text22
  5160  0048BE                     __ptext22:
  5161                           	callstack 0
  5162  0048BE                     _armazena_ltlo:
  5163                           	callstack 19
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;incstack = 0
  5170  0048BE  D038               	goto	l11756
  5171  0048C0                     l11718:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;fence.c: 75: j = 0;
  5175  0048C0  0E00               	movlw	0
  5176  0048C2  6F80               	movwf	armazena_ltlo@j& (0+255),b
  5177                           
  5178                           ;fence.c: 76: for(i=0; i<10; i++)
  5179  0048C4  0E00               	movlw	0
  5180  0048C6  6F81               	movwf	armazena_ltlo@i& (0+255),b
  5181  0048C8                     l11724:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  5185  0048C8  502E               	movf	armazena_ltlo@buffer^0,w,c
  5186  0048CA  6ED9               	movwf	fsr2l,c
  5187  0048CC  6ADA               	clrf	fsr2h,c
  5188  0048CE  50DF               	movf	indf2,w,c
  5189  0048D0  B4D8               	btfsc	status,2,c
  5190  0048D2  D00C               	goto	l11730
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  5194  0048D4  502E               	movf	armazena_ltlo@buffer^0,w,c
  5195  0048D6  6ED9               	movwf	fsr2l,c
  5196  0048D8  6ADA               	clrf	fsr2h,c
  5197  0048DA  0E00               	movlw	low _dado
  5198  0048DC  2580               	addwf	armazena_ltlo@j& (0+255),w,b
  5199  0048DE  6EE1               	movwf	fsr1l,c
  5200  0048E0  6AE2               	clrf	fsr1h,c
  5201  0048E2  0E01               	movlw	high _dado
  5202  0048E4  22E2               	addwfc	fsr1h,f,c
  5203  0048E6  CFDF FFE7          	movff	indf2,indf1
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;fence.c: 82: j++;
  5207  0048EA  2B80               	incf	armazena_ltlo@j& (0+255),f,b
  5208  0048EC                     l11730:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;fence.c: 83: };fence.c: 85: buffer++;
  5212  0048EC  2A2E               	incf	armazena_ltlo@buffer^0,f,c
  5213                           
  5214                           ; BSR set to: 0
  5215  0048EE  2B81               	incf	armazena_ltlo@i& (0+255),f,b
  5216                           
  5217                           ; BSR set to: 0
  5218  0048F0  0E09               	movlw	9
  5219  0048F2  6581               	cpfsgt	armazena_ltlo@i& (0+255),b
  5220  0048F4  D7E9               	goto	l11724
  5221  0048F6  D021               	goto	l11758
  5222  0048F8                     l11736:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;fence.c: 91: j = 0;
  5226  0048F8  0E00               	movlw	0
  5227  0048FA  6F80               	movwf	armazena_ltlo@j& (0+255),b
  5228                           
  5229                           ;fence.c: 92: for(i=0; i<11; i++)
  5230  0048FC  0E00               	movlw	0
  5231  0048FE  6F81               	movwf	armazena_ltlo@i& (0+255),b
  5232  004900                     l11742:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  5236  004900  502E               	movf	armazena_ltlo@buffer^0,w,c
  5237  004902  6ED9               	movwf	fsr2l,c
  5238  004904  6ADA               	clrf	fsr2h,c
  5239  004906  50DF               	movf	indf2,w,c
  5240  004908  B4D8               	btfsc	status,2,c
  5241  00490A  D00C               	goto	l11748
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  5245  00490C  502E               	movf	armazena_ltlo@buffer^0,w,c
  5246  00490E  6ED9               	movwf	fsr2l,c
  5247  004910  6ADA               	clrf	fsr2h,c
  5248  004912  0E00               	movlw	low _dado
  5249  004914  2580               	addwf	armazena_ltlo@j& (0+255),w,b
  5250  004916  6EE1               	movwf	fsr1l,c
  5251  004918  6AE2               	clrf	fsr1h,c
  5252  00491A  0E01               	movlw	high _dado
  5253  00491C  22E2               	addwfc	fsr1h,f,c
  5254  00491E  CFDF FFE7          	movff	indf2,indf1
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;fence.c: 98: j++;
  5258  004922  2B80               	incf	armazena_ltlo@j& (0+255),f,b
  5259  004924                     l11748:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;fence.c: 99: };fence.c: 101: buffer++;
  5263  004924  2A2E               	incf	armazena_ltlo@buffer^0,f,c
  5264                           
  5265                           ; BSR set to: 0
  5266  004926  2B81               	incf	armazena_ltlo@i& (0+255),f,b
  5267                           
  5268                           ; BSR set to: 0
  5269  004928  0E0A               	movlw	10
  5270  00492A  6581               	cpfsgt	armazena_ltlo@i& (0+255),b
  5271  00492C  D7E9               	goto	l11742
  5272  00492E  D005               	goto	l11758
  5273  004930                     l11756:
  5274                           
  5275                           ; BSR set to: 0
  5276  004930  502F               	movf	armazena_ltlo@index^0,w,c
  5277                           
  5278                           ; Switch size 1, requested type "simple"
  5279                           ; Number of cases is 1, Range of values is 1 to 1
  5280                           ; switch strategies available:
  5281                           ; Name         Instructions Cycles
  5282                           ; simple_byte            4     3 (average)
  5283                           ;	Chosen strategy is simple_byte
  5284  004932  0A01               	xorlw	1	; case 1
  5285  004934  B4D8               	btfsc	status,2,c
  5286  004936  D7C4               	goto	l11718
  5287  004938  D7DF               	goto	l11736
  5288  00493A                     l11758:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;fence.c: 108: diferenca(index);
  5292  00493A  502F               	movf	armazena_ltlo@index^0,w,c
  5293  00493C  EC86  F020         	call	_diferenca
  5294                           
  5295                           ; BSR set to: 0
  5296  004940  0012               	return		;funcret
  5297  004942                     __end_of_armazena_ltlo:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _diferenca *****************
  5301 ;; Defined at:
  5302 ;;		line 145 in file "bibliotecas/fence.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  index           1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  index           1   23[BANK0 ] unsigned char 
  5307 ;;  valor_long      4   28[BANK0 ] unsigned long 
  5308 ;;  valor_lat       4   24[BANK0 ] unsigned long 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 3F/0
  5315 ;;		On exit  : 3F/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0
  5319 ;;      Locals:         0       9       0       0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5321 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        9 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    6
  5325 ;; This function calls:
  5326 ;;		_convert_to_int
  5327 ;;		_convert_to_int_point_lat
  5328 ;;		_convert_to_int_point_long
  5329 ;; This function is called by:
  5330 ;;		_armazena_ltlo
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text23
  5335  00410C                     __ptext23:
  5336                           	callstack 0
  5337  00410C                     _diferenca:
  5338                           	callstack 19
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;incstack = 0
  5342                           ;diferenca@index stored from wreg
  5343  00410C  6F77               	movwf	diferenca@index& (0+255),b
  5344                           
  5345                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  5346  00410E  D05E               	goto	l11654
  5347  004110                     l11640:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  5351  004110  EC7D  F027         	call	_convert_to_int_point_lat	;wreg free
  5352  004114  C066  F078         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  5353  004118  C067  F079         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  5354  00411C  C068  F07A         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  5355  004120  C069  F07B         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  5359  004124  0E4F               	movlw	low _fence_diff_lat
  5360  004126  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5361  004128  0E61               	movlw	high _fence_diff_lat
  5362  00412A  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5363  00412C  ECCB  F02B         	call	_convert_to_int	;wreg free
  5364  004130  5178               	movf	diferenca@valor_lat& (0+255),w,b
  5365  004132  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5366  004134  6FED               	movwf	_poligono_ext& (0+255),b
  5367  004136  5179               	movf	(diferenca@valor_lat+1)& (0+255),w,b
  5368  004138  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5369  00413A  6FEE               	movwf	(_poligono_ext+1)& (0+255),b
  5370  00413C  517A               	movf	(diferenca@valor_lat+2)& (0+255),w,b
  5371  00413E  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5372  004140  6FEF               	movwf	(_poligono_ext+2)& (0+255),b
  5373  004142  517B               	movf	(diferenca@valor_lat+3)& (0+255),w,b
  5374  004144  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5375  004146  6FF0               	movwf	(_poligono_ext+3)& (0+255),b
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  5379  004148  0E63               	movlw	low (_fence_diff_lat+20)
  5380  00414A  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5381  00414C  0E61               	movlw	high (_fence_diff_lat+20)
  5382  00414E  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5383  004150  ECCB  F02B         	call	_convert_to_int	;wreg free
  5384  004154  5178               	movf	diferenca@valor_lat& (0+255),w,b
  5385  004156  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5386  004158  6FF5               	movwf	(_poligono_ext+8)& (0+255),b
  5387  00415A  5179               	movf	(diferenca@valor_lat+1)& (0+255),w,b
  5388  00415C  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5389  00415E  6FF6               	movwf	(_poligono_ext+9)& (0+255),b
  5390  004160  517A               	movf	(diferenca@valor_lat+2)& (0+255),w,b
  5391  004162  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5392  004164  6FF7               	movwf	(_poligono_ext+10)& (0+255),b
  5393  004166  517B               	movf	(diferenca@valor_lat+3)& (0+255),w,b
  5394  004168  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5395  00416A  6FF8               	movwf	(_poligono_ext+11)& (0+255),b
  5396                           
  5397                           ;fence.c: 157: break;
  5398  00416C  0012               	return	
  5399  00416E                     l11646:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  5403  00416E  EC50  F027         	call	_convert_to_int_point_long	;wreg free
  5404  004172  C066  F07C         	movff	?_convert_to_int_point_long,diferenca@valor_long
  5405  004176  C067  F07D         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  5406  00417A  C068  F07E         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  5407  00417E  C069  F07F         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  5411  004182  0E23               	movlw	low _fence_diff_long
  5412  004184  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5413  004186  0E61               	movlw	high _fence_diff_long
  5414  004188  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5415  00418A  ECCB  F02B         	call	_convert_to_int	;wreg free
  5416  00418E  517C               	movf	diferenca@valor_long& (0+255),w,b
  5417  004190  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5418  004192  6FF1               	movwf	(_poligono_ext+4)& (0+255),b
  5419  004194  517D               	movf	(diferenca@valor_long+1)& (0+255),w,b
  5420  004196  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5421  004198  6FF2               	movwf	(_poligono_ext+5)& (0+255),b
  5422  00419A  517E               	movf	(diferenca@valor_long+2)& (0+255),w,b
  5423  00419C  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5424  00419E  6FF3               	movwf	(_poligono_ext+6)& (0+255),b
  5425  0041A0  517F               	movf	(diferenca@valor_long+3)& (0+255),w,b
  5426  0041A2  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5427  0041A4  6FF4               	movwf	(_poligono_ext+7)& (0+255),b
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  5431  0041A6  0E39               	movlw	low (_fence_diff_long+22)
  5432  0041A8  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5433  0041AA  0E61               	movlw	high (_fence_diff_long+22)
  5434  0041AC  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5435  0041AE  ECCB  F02B         	call	_convert_to_int	;wreg free
  5436  0041B2  517C               	movf	diferenca@valor_long& (0+255),w,b
  5437  0041B4  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5438  0041B6  6FF9               	movwf	(_poligono_ext+12)& (0+255),b
  5439  0041B8  517D               	movf	(diferenca@valor_long+1)& (0+255),w,b
  5440  0041BA  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5441  0041BC  6FFA               	movwf	(_poligono_ext+13)& (0+255),b
  5442  0041BE  517E               	movf	(diferenca@valor_long+2)& (0+255),w,b
  5443  0041C0  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5444  0041C2  6FFB               	movwf	(_poligono_ext+14)& (0+255),b
  5445  0041C4  517F               	movf	(diferenca@valor_long+3)& (0+255),w,b
  5446  0041C6  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5447  0041C8  6FFC               	movwf	(_poligono_ext+15)& (0+255),b
  5448                           
  5449                           ;fence.c: 165: break;
  5450  0041CA  0012               	return	
  5451  0041CC                     l11654:
  5452  0041CC  0100               	movlb	0	; () banked
  5453  0041CE  5177               	movf	diferenca@index& (0+255),w,b
  5454                           
  5455                           ; Switch size 1, requested type "simple"
  5456                           ; Number of cases is 1, Range of values is 1 to 1
  5457                           ; switch strategies available:
  5458                           ; Name         Instructions Cycles
  5459                           ; simple_byte            4     3 (average)
  5460                           ;	Chosen strategy is simple_byte
  5461  0041D0  0A01               	xorlw	1	; case 1
  5462  0041D2  B4D8               	btfsc	status,2,c
  5463  0041D4  D79D               	goto	l11640
  5464  0041D6  D7CB               	goto	l11646
  5465  0041D8                     __end_of_diferenca:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _convert_to_int_point_long *****************
  5469 ;; Defined at:
  5470 ;;		line 455 in file "bibliotecas/fence.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  convert_str_   10   10[BANK0 ] unsigned char [10]
  5475 ;;  p               3    0        PTR unsigned char 
  5476 ;;  i               1   21[BANK0 ] unsigned char 
  5477 ;;  j               1   20[BANK0 ] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  4    6[BANK0 ] unsigned long 
  5480 ;; Registers used:
  5481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 3F/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         0       4       0       0       0       0       0       0       0
  5488 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5491 ;;Total ram usage:       16 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    5
  5494 ;; This function calls:
  5495 ;;		_atol
  5496 ;; This function is called by:
  5497 ;;		_diferenca
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text24
  5502  004EA0                     __ptext24:
  5503                           	callstack 0
  5504  004EA0                     _convert_to_int_point_long:
  5505                           	callstack 19
  5506                           
  5507                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;incstack = 0
  5511  004EA0  0E00               	movlw	0
  5512  004EA2  0100               	movlb	0	; () banked
  5513  004EA4  6F74               	movwf	convert_to_int_point_long@j& (0+255),b
  5514                           
  5515                           ;fence.c: 463: for(i=0; i<10;i++)
  5516  004EA6  0E00               	movlw	0
  5517  004EA8  6F75               	movwf	convert_to_int_point_long@i& (0+255),b
  5518  004EAA                     l11258:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  5522  004EAA  0E00               	movlw	low _dado
  5523  004EAC  2575               	addwf	convert_to_int_point_long@i& (0+255),w,b
  5524  004EAE  6ED9               	movwf	fsr2l,c
  5525  004EB0  6ADA               	clrf	fsr2h,c
  5526  004EB2  0E01               	movlw	high _dado
  5527  004EB4  22DA               	addwfc	fsr2h,f,c
  5528  004EB6  50DF               	movf	indf2,w,c
  5529  004EB8  B4D8               	btfsc	status,2,c
  5530  004EBA  D00D               	goto	l11264
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  5534  004EBC  0E00               	movlw	low _dado
  5535  004EBE  2575               	addwf	convert_to_int_point_long@i& (0+255),w,b
  5536  004EC0  6ED9               	movwf	fsr2l,c
  5537  004EC2  6ADA               	clrf	fsr2h,c
  5538  004EC4  0E01               	movlw	high _dado
  5539  004EC6  22DA               	addwfc	fsr2h,f,c
  5540  004EC8  5174               	movf	convert_to_int_point_long@j& (0+255),w,b
  5541  004ECA  0F6A               	addlw	low convert_to_int_point_long@convert_str_long
  5542  004ECC  6EE1               	movwf	fsr1l,c
  5543  004ECE  6AE2               	clrf	fsr1h,c
  5544  004ED0  CFDF FFE7          	movff	indf2,indf1
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;fence.c: 469: j++;
  5548  004ED4  2B74               	incf	convert_to_int_point_long@j& (0+255),f,b
  5549  004ED6                     l11264:
  5550                           
  5551                           ; BSR set to: 0
  5552  004ED6  2B75               	incf	convert_to_int_point_long@i& (0+255),f,b
  5553                           
  5554                           ; BSR set to: 0
  5555  004ED8  0E09               	movlw	9
  5556  004EDA  6575               	cpfsgt	convert_to_int_point_long@i& (0+255),b
  5557  004EDC  D7E6               	goto	l11258
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  5561  004EDE  0E6A               	movlw	low convert_to_int_point_long@convert_str_long
  5562  004EE0  6E26               	movwf	atol@s^0,c
  5563  004EE2  6A27               	clrf	(atol@s+1)^0,c
  5564  004EE4  ECF8  F01B         	call	_atol	;wreg free
  5565  004EE8  C026  F066         	movff	?_atol,?_convert_to_int_point_long
  5566  004EEC  C027  F067         	movff	?_atol+1,?_convert_to_int_point_long+1
  5567  004EF0  C028  F068         	movff	?_atol+2,?_convert_to_int_point_long+2
  5568  004EF4  C029  F069         	movff	?_atol+3,?_convert_to_int_point_long+3
  5569                           
  5570                           ; BSR set to: 0
  5571  004EF8  0012               	return		;funcret
  5572  004EFA                     __end_of_convert_to_int_point_long:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _convert_to_int_point_lat *****************
  5576 ;; Defined at:
  5577 ;;		line 428 in file "bibliotecas/fence.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  convert_str_    9   10[BANK0 ] unsigned char [9]
  5582 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  5583 ;;		 -> NULL(0), 
  5584 ;;  i               1   22[BANK0 ] unsigned char 
  5585 ;;  j               1   21[BANK0 ] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  4    6[BANK0 ] long 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 3F/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5595 ;;      Params:         0       4       0       0       0       0       0       0       0
  5596 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5598 ;;      Totals:         0      17       0       0       0       0       0       0       0
  5599 ;;Total ram usage:       17 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    5
  5602 ;; This function calls:
  5603 ;;		_atol
  5604 ;; This function is called by:
  5605 ;;		_diferenca
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text25
  5610  004EFA                     __ptext25:
  5611                           	callstack 0
  5612  004EFA                     _convert_to_int_point_lat:
  5613                           	callstack 19
  5614                           
  5615                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;incstack = 0
  5619  004EFA  0E00               	movlw	0
  5620  004EFC  0100               	movlb	0	; () banked
  5621  004EFE  6F75               	movwf	convert_to_int_point_lat@j& (0+255),b
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;fence.c: 436: for(i=0; i<10;i++)
  5625  004F00  0E00               	movlw	0
  5626  004F02  6F76               	movwf	convert_to_int_point_lat@i& (0+255),b
  5627  004F04                     l11232:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  5631  004F04  0E00               	movlw	low _dado
  5632  004F06  2576               	addwf	convert_to_int_point_lat@i& (0+255),w,b
  5633  004F08  6ED9               	movwf	fsr2l,c
  5634  004F0A  6ADA               	clrf	fsr2h,c
  5635  004F0C  0E01               	movlw	high _dado
  5636  004F0E  22DA               	addwfc	fsr2h,f,c
  5637  004F10  50DF               	movf	indf2,w,c
  5638  004F12  B4D8               	btfsc	status,2,c
  5639  004F14  D00D               	goto	l11238
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  5643  004F16  0E00               	movlw	low _dado
  5644  004F18  2576               	addwf	convert_to_int_point_lat@i& (0+255),w,b
  5645  004F1A  6ED9               	movwf	fsr2l,c
  5646  004F1C  6ADA               	clrf	fsr2h,c
  5647  004F1E  0E01               	movlw	high _dado
  5648  004F20  22DA               	addwfc	fsr2h,f,c
  5649  004F22  5175               	movf	convert_to_int_point_lat@j& (0+255),w,b
  5650  004F24  0F6A               	addlw	low convert_to_int_point_lat@convert_str_lat
  5651  004F26  6EE1               	movwf	fsr1l,c
  5652  004F28  6AE2               	clrf	fsr1h,c
  5653  004F2A  CFDF FFE7          	movff	indf2,indf1
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;fence.c: 442: j++;
  5657  004F2E  2B75               	incf	convert_to_int_point_lat@j& (0+255),f,b
  5658  004F30                     l11238:
  5659                           
  5660                           ; BSR set to: 0
  5661  004F30  2B76               	incf	convert_to_int_point_lat@i& (0+255),f,b
  5662                           
  5663                           ; BSR set to: 0
  5664  004F32  0E09               	movlw	9
  5665  004F34  6576               	cpfsgt	convert_to_int_point_lat@i& (0+255),b
  5666  004F36  D7E6               	goto	l11232
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  5670  004F38  0E6A               	movlw	low convert_to_int_point_lat@convert_str_lat
  5671  004F3A  6E26               	movwf	atol@s^0,c
  5672  004F3C  6A27               	clrf	(atol@s+1)^0,c
  5673  004F3E  ECF8  F01B         	call	_atol	;wreg free
  5674  004F42  C026  F066         	movff	?_atol,?_convert_to_int_point_lat
  5675  004F46  C027  F067         	movff	?_atol+1,?_convert_to_int_point_lat+1
  5676  004F4A  C028  F068         	movff	?_atol+2,?_convert_to_int_point_lat+2
  5677  004F4E  C029  F069         	movff	?_atol+3,?_convert_to_int_point_lat+3
  5678                           
  5679                           ; BSR set to: 0
  5680  004F52  0012               	return		;funcret
  5681  004F54                     __end_of_convert_to_int_point_lat:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _convert_to_int *****************
  5685 ;; Defined at:
  5686 ;;		line 420 in file "bibliotecas/fence.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  p_buff          2    6[BANK0 ] PTR const unsigned char 
  5689 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  4    6[BANK0 ] long 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 3F/0
  5698 ;;		On exit  : 3F/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5701 ;;      Params:         0       4       0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5704 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5705 ;;Total ram usage:        4 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    5
  5708 ;; This function calls:
  5709 ;;		_atol
  5710 ;; This function is called by:
  5711 ;;		_diferenca
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text26
  5716  005796                     __ptext26:
  5717                           	callstack 0
  5718  005796                     _convert_to_int:
  5719                           	callstack 19
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;fence.c: 423: p_buff++;
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;incstack = 0
  5726  005796  4B66               	infsnz	convert_to_int@p_buff& (0+255),f,b
  5727  005798  2B67               	incf	(convert_to_int@p_buff+1)& (0+255),f,b
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;fence.c: 424: return atol(p_buff);
  5731  00579A  C066  F026         	movff	convert_to_int@p_buff,atol@s
  5732  00579E  C067  F027         	movff	convert_to_int@p_buff+1,atol@s+1
  5733  0057A2  ECF8  F01B         	call	_atol	;wreg free
  5734  0057A6  C026  F066         	movff	?_atol,?_convert_to_int
  5735  0057AA  C027  F067         	movff	?_atol+1,?_convert_to_int+1
  5736  0057AE  C028  F068         	movff	?_atol+2,?_convert_to_int+2
  5737  0057B2  C029  F069         	movff	?_atol+3,?_convert_to_int+3
  5738                           
  5739                           ; BSR set to: 0
  5740  0057B6  0012               	return		;funcret
  5741  0057B8                     __end_of_convert_to_int:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _atol *****************
  5745 ;; Defined at:
  5746 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  s               2   37[COMRAM] PTR const unsigned char 
  5749 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  a               4    1[BANK0 ] long 
  5752 ;;  c               1    5[BANK0 ] unsigned char 
  5753 ;;  sign            1    0[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4   37[COMRAM] long 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 3F/0
  5760 ;;		On exit  : 3F/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5763 ;;      Params:         4       0       0       0       0       0       0       0       0
  5764 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5765 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5766 ;;      Totals:         8       6       0       0       0       0       0       0       0
  5767 ;;Total ram usage:       14 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    4
  5770 ;; This function calls:
  5771 ;;		___lmul
  5772 ;;		_isdigit
  5773 ;; This function is called by:
  5774 ;;		_convert_to_int
  5775 ;;		_convert_to_int_point_lat
  5776 ;;		_convert_to_int_point_long
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text27
  5781  0037F0                     __ptext27:
  5782                           	callstack 0
  5783  0037F0                     _atol:
  5784                           	callstack 19
  5785                           
  5786                           ; BSR set to: 0
  5787                           
  5788                           ; BSR set to: 0
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;incstack = 0
  5792  0037F0  C026  FFF6         	movff	atol@s,tblptrl
  5793  0037F4  C027  FFF7         	movff	atol@s+1,tblptrh
  5794  0037F8  6AF8               	clrf	tblptru,c
  5795  0037FA  0E07               	movlw	(high __ramtop+-1)
  5796  0037FC  64F7               	cpfsgt	tblptrh,c
  5797  0037FE  D003               	bra	u12737
  5798  003800  0008               	tblrd		*
  5799  003802  50F5               	movf	tablat,w,c
  5800  003804  D005               	bra	u12730
  5801  003806                     u12737:
  5802  003806  CFF6 FFE1          	movff	tblptrl,fsr1l
  5803  00380A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5804  00380E  50E7               	movf	indf1,w,c
  5805  003810                     u12730:
  5806  003810  0100               	movlb	0	; () banked
  5807  003812  6F65               	movwf	atol@c& (0+255),b
  5808                           
  5809                           ; BSR set to: 0
  5810  003814  4A26               	infsnz	atol@s^0,f,c
  5811  003816  2A27               	incf	(atol@s+1)^0,f,c
  5812                           
  5813                           ; BSR set to: 0
  5814  003818  0E20               	movlw	32
  5815  00381A  1965               	xorwf	atol@c& (0+255),w,b
  5816  00381C  B4D8               	btfsc	status,2,c
  5817  00381E  D7E8               	goto	_atol
  5818                           
  5819                           ; BSR set to: 0
  5820  003820  0E09               	movlw	9
  5821  003822  1965               	xorwf	atol@c& (0+255),w,b
  5822  003824  B4D8               	btfsc	status,2,c
  5823  003826  D7E4               	goto	_atol
  5824                           
  5825                           ; BSR set to: 0
  5826  003828  0E00               	movlw	0
  5827  00382A  6F61               	movwf	atol@a& (0+255),b
  5828  00382C  0E00               	movlw	0
  5829  00382E  6F62               	movwf	(atol@a+1)& (0+255),b
  5830  003830  0E00               	movlw	0
  5831  003832  6F63               	movwf	(atol@a+2)& (0+255),b
  5832  003834  0E00               	movlw	0
  5833  003836  6F64               	movwf	(atol@a+3)& (0+255),b
  5834  003838  0E00               	movlw	0
  5835  00383A  6F60               	movwf	atol@sign& (0+255),b
  5836                           
  5837                           ; BSR set to: 0
  5838  00383C  0E2D               	movlw	45
  5839  00383E  1965               	xorwf	atol@c& (0+255),w,b
  5840  003840  A4D8               	btfss	status,2,c
  5841  003842  D016               	goto	l10962
  5842                           
  5843                           ; BSR set to: 0
  5844  003844  2B60               	incf	atol@sign& (0+255),f,b
  5845  003846                     l10958:
  5846                           
  5847                           ; BSR set to: 0
  5848  003846  C026  FFF6         	movff	atol@s,tblptrl
  5849  00384A  C027  FFF7         	movff	atol@s+1,tblptrh
  5850  00384E  6AF8               	clrf	tblptru,c
  5851  003850  0E07               	movlw	(high __ramtop+-1)
  5852  003852  64F7               	cpfsgt	tblptrh,c
  5853  003854  D003               	bra	u12777
  5854  003856  0008               	tblrd		*
  5855  003858  50F5               	movf	tablat,w,c
  5856  00385A  D005               	bra	u12770
  5857  00385C                     u12777:
  5858  00385C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5859  003860  CFF7 FFE2          	movff	tblptrh,fsr1h
  5860  003864  50E7               	movf	indf1,w,c
  5861  003866                     u12770:
  5862  003866  0100               	movlb	0	; () banked
  5863  003868  6F65               	movwf	atol@c& (0+255),b
  5864                           
  5865                           ; BSR set to: 0
  5866  00386A  4A26               	infsnz	atol@s^0,f,c
  5867  00386C  2A27               	incf	(atol@s+1)^0,f,c
  5868  00386E  D029               	goto	l10974
  5869  003870                     l10962:
  5870                           
  5871                           ; BSR set to: 0
  5872  003870  0E2B               	movlw	43
  5873  003872  1965               	xorwf	atol@c& (0+255),w,b
  5874  003874  B4D8               	btfsc	status,2,c
  5875  003876  D7E7               	goto	l10958
  5876  003878  D024               	goto	l10974
  5877  00387A                     l10968:
  5878  00387A  C061  F01A         	movff	atol@a,___lmul@multiplier
  5879  00387E  C062  F01B         	movff	atol@a+1,___lmul@multiplier+1
  5880  003882  C063  F01C         	movff	atol@a+2,___lmul@multiplier+2
  5881  003886  C064  F01D         	movff	atol@a+3,___lmul@multiplier+3
  5882  00388A  0E0A               	movlw	10
  5883  00388C  6E1E               	movwf	___lmul@multiplicand^0,c
  5884  00388E  0E00               	movlw	0
  5885  003890  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
  5886  003892  0E00               	movlw	0
  5887  003894  6E20               	movwf	(___lmul@multiplicand+2)^0,c
  5888  003896  0E00               	movlw	0
  5889  003898  6E21               	movwf	(___lmul@multiplicand+3)^0,c
  5890  00389A  EC30  F028         	call	___lmul	;wreg free
  5891  00389E  C065  F02A         	movff	atol@c,??_atol
  5892  0038A2  0ED0               	movlw	208
  5893  0038A4  262A               	addwf	??_atol^0,f,c
  5894  0038A6  502A               	movf	??_atol^0,w,c
  5895  0038A8  241A               	addwf	?___lmul^0,w,c
  5896  0038AA  0100               	movlb	0	; () banked
  5897  0038AC  6F61               	movwf	atol@a& (0+255),b
  5898  0038AE  0E00               	movlw	0
  5899  0038B0  201B               	addwfc	(?___lmul+1)^0,w,c
  5900  0038B2  6F62               	movwf	(atol@a+1)& (0+255),b
  5901  0038B4  0E00               	movlw	0
  5902  0038B6  201C               	addwfc	(?___lmul+2)^0,w,c
  5903  0038B8  6F63               	movwf	(atol@a+2)& (0+255),b
  5904  0038BA  0E00               	movlw	0
  5905  0038BC  201D               	addwfc	(?___lmul+3)^0,w,c
  5906  0038BE  6F64               	movwf	(atol@a+3)& (0+255),b
  5907  0038C0  D7C2               	goto	l10958
  5908  0038C2                     l10974:
  5909                           
  5910                           ; BSR set to: 0
  5911  0038C2  5165               	movf	atol@c& (0+255),w,b
  5912  0038C4  EC72  F02C         	call	_isdigit
  5913  0038C8  B0D8               	btfsc	status,0,c
  5914  0038CA  D7D7               	goto	l10968
  5915  0038CC  0100               	movlb	0	; () banked
  5916  0038CE  5160               	movf	atol@sign& (0+255),w,b
  5917  0038D0  B4D8               	btfsc	status,2,c
  5918  0038D2  D01A               	goto	l2362
  5919                           
  5920                           ; BSR set to: 0
  5921  0038D4  C061  F02A         	movff	atol@a,??_atol
  5922  0038D8  C062  F02B         	movff	atol@a+1,??_atol+1
  5923  0038DC  C063  F02C         	movff	atol@a+2,??_atol+2
  5924  0038E0  C064  F02D         	movff	atol@a+3,??_atol+3
  5925  0038E4  1E2A               	comf	??_atol^0,f,c
  5926  0038E6  1E2B               	comf	(??_atol+1)^0,f,c
  5927  0038E8  1E2C               	comf	(??_atol+2)^0,f,c
  5928  0038EA  1E2D               	comf	(??_atol+3)^0,f,c
  5929  0038EC  2A2A               	incf	??_atol^0,f,c
  5930  0038EE  0E00               	movlw	0
  5931  0038F0  222B               	addwfc	(??_atol+1)^0,f,c
  5932  0038F2  222C               	addwfc	(??_atol+2)^0,f,c
  5933  0038F4  222D               	addwfc	(??_atol+3)^0,f,c
  5934  0038F6  C02A  F026         	movff	??_atol,?_atol
  5935  0038FA  C02B  F027         	movff	??_atol+1,?_atol+1
  5936  0038FE  C02C  F028         	movff	??_atol+2,?_atol+2
  5937  003902  C02D  F029         	movff	??_atol+3,?_atol+3
  5938  003906  0012               	return	
  5939  003908                     l2362:
  5940                           
  5941                           ; BSR set to: 0
  5942  003908  C061  F026         	movff	atol@a,?_atol
  5943  00390C  C062  F027         	movff	atol@a+1,?_atol+1
  5944  003910  C063  F028         	movff	atol@a+2,?_atol+2
  5945  003914  C064  F029         	movff	atol@a+3,?_atol+3
  5946                           
  5947                           ; BSR set to: 0
  5948  003918  0012               	return		;funcret
  5949  00391A                     __end_of_atol:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function _rawhora *****************
  5953 ;; Defined at:
  5954 ;;		line 315 in file "bibliotecas/GPS.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  2   25[COMRAM] PTR unsigned char 
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0
  5963 ;; Tracked objects:
  5964 ;;		On entry : 3F/0
  5965 ;;		On exit  : 3F/0
  5966 ;;		Unchanged: 3F/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5968 ;;      Params:         2       0       0       0       0       0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5971 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5972 ;;Total ram usage:        2 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    3
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_verifica_dados_operacionais
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text28
  5983  005A36                     __ptext28:
  5984                           	callstack 0
  5985  005A36                     _rawhora:
  5986                           	callstack 25
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;GPS.c: 317: return rawTime;
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;incstack = 0
  5993  005A36  0EB2               	movlw	low _rawTime
  5994  005A38  6E1A               	movwf	?_rawhora^0,c
  5995  005A3A  0E01               	movlw	high _rawTime
  5996  005A3C  6E1B               	movwf	(?_rawhora+1)^0,c
  5997                           
  5998                           ; BSR set to: 0
  5999  005A3E  0012               	return		;funcret
  6000  005A40                     __end_of_rawhora:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _rawdata *****************
  6004 ;; Defined at:
  6005 ;;		line 320 in file "bibliotecas/GPS.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  2   25[COMRAM] PTR unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 3F/0
  6016 ;;		On exit  : 3F/0
  6017 ;;		Unchanged: 3F/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6019 ;;      Params:         2       0       0       0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6023 ;;Total ram usage:        2 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    3
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_verifica_dados_operacionais
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text29
  6034  005A40                     __ptext29:
  6035                           	callstack 0
  6036  005A40                     _rawdata:
  6037                           	callstack 25
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;GPS.c: 322: return rawDate;
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;incstack = 0
  6044  005A40  0EC4               	movlw	low _rawDate
  6045  005A42  6E1A               	movwf	?_rawdata^0,c
  6046  005A44  0E01               	movlw	high _rawDate
  6047  005A46  6E1B               	movwf	(?_rawdata+1)^0,c
  6048                           
  6049                           ; BSR set to: 0
  6050  005A48  0012               	return		;funcret
  6051  005A4A                     __end_of_rawdata:
  6052                           	callstack 0
  6053                           
  6054 ;; *************** function _longitude *****************
  6055 ;; Defined at:
  6056 ;;		line 310 in file "bibliotecas/GPS.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;		None
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  2   25[COMRAM] PTR unsigned char 
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 3F/0
  6067 ;;		On exit  : 3F/0
  6068 ;;		Unchanged: 3F/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6070 ;;      Params:         2       0       0       0       0       0       0       0       0
  6071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6073 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6074 ;;Total ram usage:        2 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    3
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_verifica_dados_operacionais
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text30
  6085  005A4A                     __ptext30:
  6086                           	callstack 0
  6087  005A4A                     _longitude:
  6088                           	callstack 25
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;GPS.c: 312: return rawLongitude;
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;incstack = 0
  6095  005A4A  0E81               	movlw	low _rawLongitude
  6096  005A4C  6E1A               	movwf	?_longitude^0,c
  6097  005A4E  0E01               	movlw	high _rawLongitude
  6098  005A50  6E1B               	movwf	(?_longitude+1)^0,c
  6099                           
  6100                           ; BSR set to: 0
  6101  005A52  0012               	return		;funcret
  6102  005A54                     __end_of_longitude:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _latitude *****************
  6106 ;; Defined at:
  6107 ;;		line 305 in file "bibliotecas/GPS.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  2   25[COMRAM] PTR unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 3F/0
  6118 ;;		On exit  : 3F/0
  6119 ;;		Unchanged: 3F/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6121 ;;      Params:         2       0       0       0       0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6124 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6125 ;;Total ram usage:        2 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    3
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_verifica_dados_operacionais
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text31
  6136  005A54                     __ptext31:
  6137                           	callstack 0
  6138  005A54                     _latitude:
  6139                           	callstack 25
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;GPS.c: 307: return rawLatitude;
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;incstack = 0
  6146  005A54  0E9A               	movlw	low _rawLatitude
  6147  005A56  6E1A               	movwf	?_latitude^0,c
  6148  005A58  0E01               	movlw	high _rawLatitude
  6149  005A5A  6E1B               	movwf	(?_latitude+1)^0,c
  6150                           
  6151                           ; BSR set to: 0
  6152  005A5C  0012               	return		;funcret
  6153  005A5E                     __end_of_latitude:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _atoi *****************
  6157 ;; Defined at:
  6158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  s               2   31[COMRAM] PTR const unsigned char 
  6161 ;;		 -> verifica_dados_operacionais@dados_vel(18), NULL(0), rawSpeed(6), 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  a               2   36[COMRAM] int 
  6164 ;;  sign            1   35[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  2   31[COMRAM] int 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 3F/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6174 ;;      Params:         2       0       0       0       0       0       0       0       0
  6175 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6176 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6177 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6178 ;;Total ram usage:        7 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    4
  6181 ;; This function calls:
  6182 ;;		___wmul
  6183 ;;		_isdigit
  6184 ;; This function is called by:
  6185 ;;		_verifica_dados_operacionais
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text32
  6190  00403E                     __ptext32:
  6191                           	callstack 0
  6192  00403E                     _atoi:
  6193                           	callstack 24
  6194                           
  6195                           ; BSR set to: 0
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;incstack = 0
  6199  00403E  D002               	goto	l12770
  6200  004040                     l12768:
  6201                           
  6202                           ; BSR set to: 0
  6203  004040  4A20               	infsnz	atoi@s^0,f,c
  6204  004042  2A21               	incf	(atoi@s+1)^0,f,c
  6205  004044                     l12770:
  6206                           
  6207                           ; BSR set to: 0
  6208  004044  C020  FFD9         	movff	atoi@s,fsr2l
  6209  004048  C021  FFDA         	movff	atoi@s+1,fsr2h
  6210  00404C  0E20               	movlw	32
  6211  00404E  18DE               	xorwf	postinc2,w,c
  6212  004050  B4D8               	btfsc	status,2,c
  6213  004052  D7F6               	goto	l12768
  6214                           
  6215                           ; BSR set to: 0
  6216  004054  C020  FFD9         	movff	atoi@s,fsr2l
  6217  004058  C021  FFDA         	movff	atoi@s+1,fsr2h
  6218  00405C  0E09               	movlw	9
  6219  00405E  18DE               	xorwf	postinc2,w,c
  6220  004060  B4D8               	btfsc	status,2,c
  6221  004062  D7EE               	goto	l12768
  6222                           
  6223                           ; BSR set to: 0
  6224  004064  0E00               	movlw	0
  6225  004066  6E26               	movwf	(atoi@a+1)^0,c
  6226  004068  0E00               	movlw	0
  6227  00406A  6E25               	movwf	atoi@a^0,c
  6228  00406C  0E00               	movlw	0
  6229  00406E  6E24               	movwf	atoi@sign^0,c
  6230                           
  6231                           ; BSR set to: 0
  6232  004070  C020  FFD9         	movff	atoi@s,fsr2l
  6233  004074  C021  FFDA         	movff	atoi@s+1,fsr2h
  6234  004078  0E2D               	movlw	45
  6235  00407A  18DE               	xorwf	postinc2,w,c
  6236  00407C  A4D8               	btfss	status,2,c
  6237  00407E  D002               	goto	l12780
  6238                           
  6239                           ; BSR set to: 0
  6240  004080  2A24               	incf	atoi@sign^0,f,c
  6241  004082  D008               	goto	u15860
  6242  004084                     l12780:
  6243                           
  6244                           ; BSR set to: 0
  6245  004084  C020  FFD9         	movff	atoi@s,fsr2l
  6246  004088  C021  FFDA         	movff	atoi@s+1,fsr2h
  6247  00408C  0E2B               	movlw	43
  6248  00408E  18DE               	xorwf	postinc2,w,c
  6249  004090  A4D8               	btfss	status,2,c
  6250  004092  D01E               	goto	l12788
  6251  004094                     u15860:
  6252  004094  4A20               	infsnz	atoi@s^0,f,c
  6253  004096  2A21               	incf	(atoi@s+1)^0,f,c
  6254  004098  D01B               	goto	l12788
  6255  00409A                     l12784:
  6256  00409A  C025  F01A         	movff	atoi@a,___wmul@multiplier
  6257  00409E  C026  F01B         	movff	atoi@a+1,___wmul@multiplier+1
  6258  0040A2  0E00               	movlw	0
  6259  0040A4  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  6260  0040A6  0E0A               	movlw	10
  6261  0040A8  6E1C               	movwf	___wmul@multiplicand^0,c
  6262  0040AA  ECA6  F02B         	call	___wmul	;wreg free
  6263  0040AE  C020  FFD9         	movff	atoi@s,fsr2l
  6264  0040B2  C021  FFDA         	movff	atoi@s+1,fsr2h
  6265  0040B6  50DF               	movf	indf2,w,c
  6266  0040B8  6E22               	movwf	??_atoi^0,c
  6267  0040BA  5022               	movf	??_atoi^0,w,c
  6268  0040BC  261A               	addwf	?___wmul^0,f,c
  6269  0040BE  0E00               	movlw	0
  6270  0040C0  221B               	addwfc	(?___wmul+1)^0,f,c
  6271  0040C2  0ED0               	movlw	208
  6272  0040C4  241A               	addwf	?___wmul^0,w,c
  6273  0040C6  6E25               	movwf	atoi@a^0,c
  6274  0040C8  0EFF               	movlw	255
  6275  0040CA  201B               	addwfc	(?___wmul+1)^0,w,c
  6276  0040CC  6E26               	movwf	(atoi@a+1)^0,c
  6277  0040CE  D7E2               	goto	u15860
  6278  0040D0                     l12788:
  6279  0040D0  C020  FFD9         	movff	atoi@s,fsr2l
  6280  0040D4  C021  FFDA         	movff	atoi@s+1,fsr2h
  6281  0040D8  50DF               	movf	indf2,w,c
  6282  0040DA  EC72  F02C         	call	_isdigit
  6283  0040DE  B0D8               	btfsc	status,0,c
  6284  0040E0  D7DC               	goto	l12784
  6285  0040E2  5024               	movf	atoi@sign^0,w,c
  6286  0040E4  B4D8               	btfsc	status,2,c
  6287  0040E6  D00D               	goto	l2348
  6288  0040E8  C025  F022         	movff	atoi@a,??_atoi
  6289  0040EC  C026  F023         	movff	atoi@a+1,??_atoi+1
  6290  0040F0  1E22               	comf	??_atoi^0,f,c
  6291  0040F2  1E23               	comf	(??_atoi+1)^0,f,c
  6292  0040F4  4A22               	infsnz	??_atoi^0,f,c
  6293  0040F6  2A23               	incf	(??_atoi+1)^0,f,c
  6294  0040F8  C022  F020         	movff	??_atoi,?_atoi
  6295  0040FC  C023  F021         	movff	??_atoi+1,?_atoi+1
  6296  004100  0012               	return	
  6297  004102                     l2348:
  6298  004102  C025  F020         	movff	atoi@a,?_atoi
  6299  004106  C026  F021         	movff	atoi@a+1,?_atoi+1
  6300  00410A  0012               	return		;funcret
  6301  00410C                     __end_of_atoi:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _isdigit *****************
  6305 ;; Defined at:
  6306 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  c               1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  c               1   27[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6323 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        3 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    3
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_atoi
  6331 ;;		_atol
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text33
  6336  0058E4                     __ptext33:
  6337                           	callstack 0
  6338  0058E4                     _isdigit:
  6339                           	callstack 19
  6340                           
  6341                           ;incstack = 0
  6342                           ;isdigit@c stored from wreg
  6343  0058E4  6E1C               	movwf	isdigit@c^0,c
  6344  0058E6  0E00               	movlw	0
  6345  0058E8  6E1B               	movwf	_isdigit$3209^0,c
  6346  0058EA  0E3A               	movlw	58
  6347  0058EC  601C               	cpfslt	isdigit@c^0,c
  6348  0058EE  D005               	goto	l10606
  6349  0058F0  0E2F               	movlw	47
  6350  0058F2  641C               	cpfsgt	isdigit@c^0,c
  6351  0058F4  D002               	goto	l10606
  6352  0058F6  0E01               	movlw	1
  6353  0058F8  6E1B               	movwf	_isdigit$3209^0,c
  6354  0058FA                     l10606:
  6355  0058FA  C01B  F01A         	movff	_isdigit$3209,??_isdigit
  6356  0058FE  301A               	rrcf	??_isdigit^0,w,c
  6357  005900  0012               	return		;funcret
  6358  005902                     __end_of_isdigit:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function ___fttol *****************
  6362 ;; Defined at:
  6363 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  f1              3    9[BANK0 ] float 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  lval            4   19[BANK0 ] unsigned long 
  6368 ;;  exp1            1   23[BANK0 ] unsigned char 
  6369 ;;  sign1           1   18[BANK0 ] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  4    9[BANK0 ] long 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 3F/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6379 ;;      Params:         0       4       0       0       0       0       0       0       0
  6380 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6381 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6382 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6383 ;;Total ram usage:       15 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    3
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_verifica_dados_operacionais
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text34
  6394  003F68                     __ptext34:
  6395                           	callstack 0
  6396  003F68                     ___fttol:
  6397                           	callstack 25
  6398                           
  6399                           ;incstack = 0
  6400  003F68  C06B  F06D         	movff	___fttol@f1+2,??___fttol
  6401  003F6C  0100               	movlb	0	; () banked
  6402  003F6E  6B6E               	clrf	(??___fttol+1)& (0+255),b
  6403  003F70  6B6F               	clrf	(??___fttol+2)& (0+255),b
  6404  003F72  356A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6405  003F74  376D               	rlcf	??___fttol& (0+255),f,b
  6406  003F76  E301               	bnc	u15961
  6407  003F78  816E               	bsf	(??___fttol+1)& (0+255),0,b
  6408  003F7A                     u15961:
  6409  003F7A  516D               	movf	??___fttol& (0+255),w,b
  6410  003F7C  6F77               	movwf	___fttol@exp1& (0+255),b
  6411  003F7E  5177               	movf	___fttol@exp1& (0+255),w,b
  6412  003F80  A4D8               	btfss	status,2,c
  6413  003F82  D009               	goto	l12874
  6414  003F84                     u15970:
  6415                           
  6416                           ; BSR set to: 0
  6417  003F84  0E00               	movlw	0
  6418  003F86  6F69               	movwf	?___fttol& (0+255),b
  6419  003F88  0E00               	movlw	0
  6420  003F8A  6F6A               	movwf	(?___fttol+1)& (0+255),b
  6421  003F8C  0E00               	movlw	0
  6422  003F8E  6F6B               	movwf	(?___fttol+2)& (0+255),b
  6423  003F90  0E00               	movlw	0
  6424  003F92  6F6C               	movwf	(?___fttol+3)& (0+255),b
  6425  003F94  0012               	return	
  6426  003F96                     l12874:
  6427                           
  6428                           ; BSR set to: 0
  6429  003F96  0E17               	movlw	23
  6430  003F98  6F6D               	movwf	??___fttol& (0+255),b
  6431  003F9A  C069  F06E         	movff	___fttol@f1,??___fttol+1
  6432  003F9E  C06A  F06F         	movff	___fttol@f1+1,??___fttol+2
  6433  003FA2  C06B  F070         	movff	___fttol@f1+2,??___fttol+3
  6434  003FA6  296D               	incf	??___fttol& (0+255),w,b
  6435  003FA8  6F71               	movwf	(??___fttol+4)& (0+255),b
  6436  003FAA  D004               	goto	u15980
  6437  003FAC                     u15985:
  6438  003FAC  90D8               	bcf	status,0,c
  6439  003FAE  3370               	rrcf	(??___fttol+3)& (0+255),f,b
  6440  003FB0  336F               	rrcf	(??___fttol+2)& (0+255),f,b
  6441  003FB2  336E               	rrcf	(??___fttol+1)& (0+255),f,b
  6442  003FB4                     u15980:
  6443  003FB4  2F71               	decfsz	(??___fttol+4)& (0+255),f,b
  6444  003FB6  D7FA               	goto	u15985
  6445  003FB8  0100               	movlb	0	; () banked
  6446  003FBA  516E               	movf	(??___fttol+1)& (0+255),w,b
  6447  003FBC  6F72               	movwf	___fttol@sign1& (0+255),b
  6448                           
  6449                           ; BSR set to: 0
  6450  003FBE  8F6A               	bsf	(___fttol@f1+1)& (0+255),7,b
  6451                           
  6452                           ; BSR set to: 0
  6453  003FC0  0EFF               	movlw	255
  6454  003FC2  1769               	andwf	___fttol@f1& (0+255),f,b
  6455  003FC4  0EFF               	movlw	255
  6456  003FC6  176A               	andwf	(___fttol@f1+1)& (0+255),f,b
  6457  003FC8  0E00               	movlw	0
  6458  003FCA  176B               	andwf	(___fttol@f1+2)& (0+255),f,b
  6459                           
  6460                           ; BSR set to: 0
  6461  003FCC  5169               	movf	___fttol@f1& (0+255),w,b
  6462  003FCE  6F73               	movwf	___fttol@lval& (0+255),b
  6463  003FD0  516A               	movf	(___fttol@f1+1)& (0+255),w,b
  6464  003FD2  6F74               	movwf	(___fttol@lval+1)& (0+255),b
  6465  003FD4  516B               	movf	(___fttol@f1+2)& (0+255),w,b
  6466  003FD6  6F75               	movwf	(___fttol@lval+2)& (0+255),b
  6467  003FD8  6B76               	clrf	(___fttol@lval+3)& (0+255),b
  6468                           
  6469                           ; BSR set to: 0
  6470  003FDA  0E8E               	movlw	142
  6471  003FDC  5F77               	subwf	___fttol@exp1& (0+255),f,b
  6472                           
  6473                           ; BSR set to: 0
  6474  003FDE  AF77               	btfss	___fttol@exp1& (0+255),7,b
  6475  003FE0  D00D               	goto	l12896
  6476                           
  6477                           ; BSR set to: 0
  6478  003FE2  5177               	movf	___fttol@exp1& (0+255),w,b
  6479  003FE4  0A80               	xorlw	128
  6480  003FE6  0F8F               	addlw	143
  6481  003FE8  A0D8               	btfss	status,0,c
  6482  003FEA  D7CC               	goto	u15970
  6483  003FEC                     l12892:
  6484                           
  6485                           ; BSR set to: 0
  6486  003FEC  90D8               	bcf	status,0,c
  6487  003FEE  3376               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6488  003FF0  3375               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6489  003FF2  3374               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6490  003FF4  3373               	rrcf	___fttol@lval& (0+255),f,b
  6491                           
  6492                           ; BSR set to: 0
  6493  003FF6  3F77               	incfsz	___fttol@exp1& (0+255),f,b
  6494  003FF8  D7F9               	goto	l12892
  6495  003FFA  D00D               	goto	u16020
  6496  003FFC                     l12896:
  6497                           
  6498                           ; BSR set to: 0
  6499  003FFC  0E17               	movlw	23
  6500  003FFE  6577               	cpfsgt	___fttol@exp1& (0+255),b
  6501  004000  D007               	goto	l12904
  6502  004002  D7C0               	goto	u15970
  6503  004004                     l12902:
  6504                           
  6505                           ; BSR set to: 0
  6506  004004  90D8               	bcf	status,0,c
  6507  004006  3773               	rlcf	___fttol@lval& (0+255),f,b
  6508  004008  3774               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6509  00400A  3775               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6510  00400C  3776               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6511  00400E  0777               	decf	___fttol@exp1& (0+255),f,b
  6512  004010                     l12904:
  6513                           
  6514                           ; BSR set to: 0
  6515  004010  5177               	movf	___fttol@exp1& (0+255),w,b
  6516  004012  A4D8               	btfss	status,2,c
  6517  004014  D7F7               	goto	l12902
  6518  004016                     u16020:
  6519                           
  6520                           ; BSR set to: 0
  6521  004016  5172               	movf	___fttol@sign1& (0+255),w,b
  6522  004018  B4D8               	btfsc	status,2,c
  6523  00401A  D008               	goto	l12910
  6524                           
  6525                           ; BSR set to: 0
  6526  00401C  1F76               	comf	(___fttol@lval+3)& (0+255),f,b
  6527  00401E  1F75               	comf	(___fttol@lval+2)& (0+255),f,b
  6528  004020  1F74               	comf	(___fttol@lval+1)& (0+255),f,b
  6529  004022  6D73               	negf	___fttol@lval& (0+255),b
  6530  004024  0E00               	movlw	0
  6531  004026  2374               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6532  004028  2375               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6533  00402A  2376               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6534  00402C                     l12910:
  6535                           
  6536                           ; BSR set to: 0
  6537  00402C  C073  F069         	movff	___fttol@lval,?___fttol
  6538  004030  C074  F06A         	movff	___fttol@lval+1,?___fttol+1
  6539  004034  C075  F06B         	movff	___fttol@lval+2,?___fttol+2
  6540  004038  C076  F06C         	movff	___fttol@lval+3,?___fttol+3
  6541                           
  6542                           ; BSR set to: 0
  6543  00403C  0012               	return		;funcret
  6544  00403E                     __end_of___fttol:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function ___ftmul *****************
  6548 ;; Defined at:
  6549 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  f1              3   42[COMRAM] float 
  6552 ;;  f2              3   45[COMRAM] float 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  6555 ;;  sign            1    8[BANK0 ] unsigned char 
  6556 ;;  cntr            1    7[BANK0 ] unsigned char 
  6557 ;;  exp             1    3[BANK0 ] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  3   42[COMRAM] float 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6567 ;;      Params:         6       0       0       0       0       0       0       0       0
  6568 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6569 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6570 ;;      Totals:         6       9       0       0       0       0       0       0       0
  6571 ;;Total ram usage:       15 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    4
  6574 ;; This function calls:
  6575 ;;		___ftpack
  6576 ;; This function is called by:
  6577 ;;		_verifica_dados_operacionais
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text35
  6582  003D84                     __ptext35:
  6583                           	callstack 0
  6584  003D84                     ___ftmul:
  6585                           	callstack 24
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;incstack = 0
  6589  003D84  C02D  F060         	movff	___ftmul@f1+2,??___ftmul
  6590  003D88  0100               	movlb	0	; () banked
  6591  003D8A  6B61               	clrf	(??___ftmul+1)& (0+255),b
  6592  003D8C  6B62               	clrf	(??___ftmul+2)& (0+255),b
  6593  003D8E  342C               	rlcf	(___ftmul@f1+1)^0,w,c
  6594  003D90  3760               	rlcf	??___ftmul& (0+255),f,b
  6595  003D92  E301               	bnc	u15891
  6596  003D94  8161               	bsf	(??___ftmul+1)& (0+255),0,b
  6597  003D96                     u15891:
  6598  003D96  5160               	movf	??___ftmul& (0+255),w,b
  6599  003D98  6F63               	movwf	___ftmul@exp& (0+255),b
  6600  003D9A  5163               	movf	___ftmul@exp& (0+255),w,b
  6601  003D9C  A4D8               	btfss	status,2,c
  6602  003D9E  D007               	goto	l12814
  6603                           
  6604                           ; BSR set to: 0
  6605  003DA0  0E00               	movlw	0
  6606  003DA2  6E2B               	movwf	?___ftmul^0,c
  6607  003DA4  0E00               	movlw	0
  6608  003DA6  6E2C               	movwf	(?___ftmul+1)^0,c
  6609  003DA8  0E00               	movlw	0
  6610  003DAA  6E2D               	movwf	(?___ftmul+2)^0,c
  6611  003DAC  0012               	return	
  6612  003DAE                     l12814:
  6613                           
  6614                           ; BSR set to: 0
  6615  003DAE  C030  F060         	movff	___ftmul@f2+2,??___ftmul
  6616  003DB2  6B61               	clrf	(??___ftmul+1)& (0+255),b
  6617  003DB4  6B62               	clrf	(??___ftmul+2)& (0+255),b
  6618  003DB6  342F               	rlcf	(___ftmul@f2+1)^0,w,c
  6619  003DB8  3760               	rlcf	??___ftmul& (0+255),f,b
  6620  003DBA  E301               	bnc	u15911
  6621  003DBC  8161               	bsf	(??___ftmul+1)& (0+255),0,b
  6622  003DBE                     u15911:
  6623  003DBE  5160               	movf	??___ftmul& (0+255),w,b
  6624  003DC0  6F68               	movwf	___ftmul@sign& (0+255),b
  6625  003DC2  5168               	movf	___ftmul@sign& (0+255),w,b
  6626  003DC4  A4D8               	btfss	status,2,c
  6627  003DC6  D007               	goto	l12820
  6628                           
  6629                           ; BSR set to: 0
  6630  003DC8  0E00               	movlw	0
  6631  003DCA  6E2B               	movwf	?___ftmul^0,c
  6632  003DCC  0E00               	movlw	0
  6633  003DCE  6E2C               	movwf	(?___ftmul+1)^0,c
  6634  003DD0  0E00               	movlw	0
  6635  003DD2  6E2D               	movwf	(?___ftmul+2)^0,c
  6636  003DD4  0012               	return	
  6637  003DD6                     l12820:
  6638                           
  6639                           ; BSR set to: 0
  6640  003DD6  5168               	movf	___ftmul@sign& (0+255),w,b
  6641  003DD8  0F7B               	addlw	123
  6642  003DDA  2763               	addwf	___ftmul@exp& (0+255),f,b
  6643                           
  6644                           ; BSR set to: 0
  6645  003DDC  C02D  F068         	movff	___ftmul@f1+2,___ftmul@sign
  6646  003DE0  5030               	movf	(___ftmul@f2+2)^0,w,c
  6647  003DE2  1B68               	xorwf	___ftmul@sign& (0+255),f,b
  6648  003DE4  0E80               	movlw	128
  6649  003DE6  1768               	andwf	___ftmul@sign& (0+255),f,b
  6650                           
  6651                           ; BSR set to: 0
  6652  003DE8  8E2C               	bsf	(___ftmul@f1+1)^0,7,c
  6653                           
  6654                           ; BSR set to: 0
  6655  003DEA  8E2F               	bsf	(___ftmul@f2+1)^0,7,c
  6656                           
  6657                           ; BSR set to: 0
  6658  003DEC  0EFF               	movlw	255
  6659  003DEE  162E               	andwf	___ftmul@f2^0,f,c
  6660  003DF0  0EFF               	movlw	255
  6661  003DF2  162F               	andwf	(___ftmul@f2+1)^0,f,c
  6662  003DF4  0E00               	movlw	0
  6663  003DF6  1630               	andwf	(___ftmul@f2+2)^0,f,c
  6664                           
  6665                           ; BSR set to: 0
  6666  003DF8  0E00               	movlw	0
  6667  003DFA  6F64               	movwf	___ftmul@f3_as_product& (0+255),b
  6668  003DFC  0E00               	movlw	0
  6669  003DFE  6F65               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6670  003E00  0E00               	movlw	0
  6671  003E02  6F66               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6672                           
  6673                           ; BSR set to: 0
  6674  003E04  0E07               	movlw	7
  6675  003E06  6F67               	movwf	___ftmul@cntr& (0+255),b
  6676  003E08                     l12834:
  6677                           
  6678                           ; BSR set to: 0
  6679  003E08  A02B               	btfss	___ftmul@f1^0,0,c
  6680  003E0A  D006               	goto	l12838
  6681                           
  6682                           ; BSR set to: 0
  6683  003E0C  502E               	movf	___ftmul@f2^0,w,c
  6684  003E0E  2764               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6685  003E10  502F               	movf	(___ftmul@f2+1)^0,w,c
  6686  003E12  2365               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6687  003E14  5030               	movf	(___ftmul@f2+2)^0,w,c
  6688  003E16  2366               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6689  003E18                     l12838:
  6690                           
  6691                           ; BSR set to: 0
  6692  003E18  90D8               	bcf	status,0,c
  6693  003E1A  322D               	rrcf	(___ftmul@f1+2)^0,f,c
  6694  003E1C  322C               	rrcf	(___ftmul@f1+1)^0,f,c
  6695  003E1E  322B               	rrcf	___ftmul@f1^0,f,c
  6696  003E20  90D8               	bcf	status,0,c
  6697  003E22  362E               	rlcf	___ftmul@f2^0,f,c
  6698  003E24  362F               	rlcf	(___ftmul@f2+1)^0,f,c
  6699  003E26  3630               	rlcf	(___ftmul@f2+2)^0,f,c
  6700                           
  6701                           ; BSR set to: 0
  6702  003E28  2F67               	decfsz	___ftmul@cntr& (0+255),f,b
  6703  003E2A  D7EE               	goto	l12834
  6704                           
  6705                           ; BSR set to: 0
  6706  003E2C  0E09               	movlw	9
  6707  003E2E  6F67               	movwf	___ftmul@cntr& (0+255),b
  6708  003E30                     l12844:
  6709                           
  6710                           ; BSR set to: 0
  6711  003E30  A02B               	btfss	___ftmul@f1^0,0,c
  6712  003E32  D006               	goto	l12848
  6713                           
  6714                           ; BSR set to: 0
  6715  003E34  502E               	movf	___ftmul@f2^0,w,c
  6716  003E36  2764               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6717  003E38  502F               	movf	(___ftmul@f2+1)^0,w,c
  6718  003E3A  2365               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6719  003E3C  5030               	movf	(___ftmul@f2+2)^0,w,c
  6720  003E3E  2366               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6721  003E40                     l12848:
  6722                           
  6723                           ; BSR set to: 0
  6724  003E40  90D8               	bcf	status,0,c
  6725  003E42  322D               	rrcf	(___ftmul@f1+2)^0,f,c
  6726  003E44  322C               	rrcf	(___ftmul@f1+1)^0,f,c
  6727  003E46  322B               	rrcf	___ftmul@f1^0,f,c
  6728  003E48  90D8               	bcf	status,0,c
  6729  003E4A  3366               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6730  003E4C  3365               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6731  003E4E  3364               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6732                           
  6733                           ; BSR set to: 0
  6734  003E50  2F67               	decfsz	___ftmul@cntr& (0+255),f,b
  6735  003E52  D7EE               	goto	l12844
  6736                           
  6737                           ; BSR set to: 0
  6738  003E54  C064  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
  6739  003E58  C065  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6740  003E5C  C066  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6741  003E60  C063  F01D         	movff	___ftmul@exp,___ftpack@exp
  6742  003E64  C068  F01E         	movff	___ftmul@sign,___ftpack@sign
  6743  003E68  ECAB  F021         	call	___ftpack	;wreg free
  6744  003E6C  C01A  F02B         	movff	?___ftpack,?___ftmul
  6745  003E70  C01B  F02C         	movff	?___ftpack+1,?___ftmul+1
  6746  003E74  C01C  F02D         	movff	?___ftpack+2,?___ftmul+2
  6747  003E78  0012               	return		;funcret
  6748  003E7A                     __end_of___ftmul:
  6749                           	callstack 0
  6750                           
  6751 ;; *************** function ___awtoft *****************
  6752 ;; Defined at:
  6753 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  c               2   38[COMRAM] int 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  sign            1   41[COMRAM] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  3   38[COMRAM] float 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6767 ;;      Params:         3       0       0       0       0       0       0       0       0
  6768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6770 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6771 ;;Total ram usage:        4 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    4
  6774 ;; This function calls:
  6775 ;;		___ftpack
  6776 ;; This function is called by:
  6777 ;;		_verifica_dados_operacionais
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text36
  6782  0055B4                     __ptext36:
  6783                           	callstack 0
  6784  0055B4                     ___awtoft:
  6785                           	callstack 24
  6786                           
  6787                           ;incstack = 0
  6788  0055B4  0E00               	movlw	0
  6789  0055B6  6E2A               	movwf	___awtoft@sign^0,c
  6790  0055B8  AE28               	btfss	(___awtoft@c+1)^0,7,c
  6791  0055BA  D006               	goto	l12864
  6792  0055BC  6C27               	negf	___awtoft@c^0,c
  6793  0055BE  1E28               	comf	(___awtoft@c+1)^0,f,c
  6794  0055C0  B0D8               	btfsc	status,0,c
  6795  0055C2  2A28               	incf	(___awtoft@c+1)^0,f,c
  6796  0055C4  0E01               	movlw	1
  6797  0055C6  6E2A               	movwf	___awtoft@sign^0,c
  6798  0055C8                     l12864:
  6799  0055C8  C027  F01A         	movff	___awtoft@c,___ftpack@arg
  6800  0055CC  C028  F01B         	movff	___awtoft@c+1,___ftpack@arg+1
  6801  0055D0  6A1C               	clrf	(___ftpack@arg+2)^0,c
  6802  0055D2  0E8E               	movlw	142
  6803  0055D4  6E1D               	movwf	___ftpack@exp^0,c
  6804  0055D6  C02A  F01E         	movff	___awtoft@sign,___ftpack@sign
  6805  0055DA  ECAB  F021         	call	___ftpack	;wreg free
  6806  0055DE  C01A  F027         	movff	?___ftpack,?___awtoft
  6807  0055E2  C01B  F028         	movff	?___ftpack+1,?___awtoft+1
  6808  0055E6  C01C  F029         	movff	?___ftpack+2,?___awtoft+2
  6809  0055EA  0012               	return		;funcret
  6810  0055EC                     __end_of___awtoft:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function ___ftpack *****************
  6814 ;; Defined at:
  6815 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  arg             3   25[COMRAM] unsigned um
  6818 ;;  exp             1   28[COMRAM] unsigned char 
  6819 ;;  sign            1   29[COMRAM] unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  3   25[COMRAM] float 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6831 ;;      Params:         5       0       0       0       0       0       0       0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6833 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6834 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6835 ;;Total ram usage:        8 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    3
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		___awtoft
  6842 ;;		___ftmul
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text37
  6847  004356                     __ptext37:
  6848                           	callstack 0
  6849  004356                     ___ftpack:
  6850                           	callstack 24
  6851                           
  6852                           ;incstack = 0
  6853  004356  501D               	movf	___ftpack@exp^0,w,c
  6854  004358  B4D8               	btfsc	status,2,c
  6855  00435A  D005               	goto	u15620
  6856  00435C  501A               	movf	___ftpack@arg^0,w,c
  6857  00435E  101B               	iorwf	(___ftpack@arg+1)^0,w,c
  6858  004360  101C               	iorwf	(___ftpack@arg+2)^0,w,c
  6859  004362  A4D8               	btfss	status,2,c
  6860  004364  D00C               	goto	l12642
  6861  004366                     u15620:
  6862  004366  0E00               	movlw	0
  6863  004368  6E1A               	movwf	?___ftpack^0,c
  6864  00436A  0E00               	movlw	0
  6865  00436C  6E1B               	movwf	(?___ftpack+1)^0,c
  6866  00436E  0E00               	movlw	0
  6867  004370  6E1C               	movwf	(?___ftpack+2)^0,c
  6868  004372  0012               	return	
  6869  004374                     l12640:
  6870  004374  2A1D               	incf	___ftpack@exp^0,f,c
  6871  004376  90D8               	bcf	status,0,c
  6872  004378  321C               	rrcf	(___ftpack@arg+2)^0,f,c
  6873  00437A  321B               	rrcf	(___ftpack@arg+1)^0,f,c
  6874  00437C  321A               	rrcf	___ftpack@arg^0,f,c
  6875  00437E                     l12642:
  6876  00437E  0E00               	movlw	0
  6877  004380  141A               	andwf	___ftpack@arg^0,w,c
  6878  004382  6E1F               	movwf	??___ftpack^0,c
  6879  004384  0E00               	movlw	0
  6880  004386  141B               	andwf	(___ftpack@arg+1)^0,w,c
  6881  004388  6E20               	movwf	(??___ftpack+1)^0,c
  6882  00438A  0EFE               	movlw	254
  6883  00438C  141C               	andwf	(___ftpack@arg+2)^0,w,c
  6884  00438E  6E21               	movwf	(??___ftpack+2)^0,c
  6885  004390  501F               	movf	??___ftpack^0,w,c
  6886  004392  1020               	iorwf	(??___ftpack+1)^0,w,c
  6887  004394  1021               	iorwf	(??___ftpack+2)^0,w,c
  6888  004396  B4D8               	btfsc	status,2,c
  6889  004398  D00C               	goto	l12648
  6890  00439A  D7EC               	goto	l12640
  6891  00439C                     l12644:
  6892  00439C  2A1D               	incf	___ftpack@exp^0,f,c
  6893  00439E  0E01               	movlw	1
  6894  0043A0  261A               	addwf	___ftpack@arg^0,f,c
  6895  0043A2  0E00               	movlw	0
  6896  0043A4  221B               	addwfc	(___ftpack@arg+1)^0,f,c
  6897  0043A6  0E00               	movlw	0
  6898  0043A8  221C               	addwfc	(___ftpack@arg+2)^0,f,c
  6899  0043AA  90D8               	bcf	status,0,c
  6900  0043AC  321C               	rrcf	(___ftpack@arg+2)^0,f,c
  6901  0043AE  321B               	rrcf	(___ftpack@arg+1)^0,f,c
  6902  0043B0  321A               	rrcf	___ftpack@arg^0,f,c
  6903  0043B2                     l12648:
  6904  0043B2  0E00               	movlw	0
  6905  0043B4  141A               	andwf	___ftpack@arg^0,w,c
  6906  0043B6  6E1F               	movwf	??___ftpack^0,c
  6907  0043B8  0E00               	movlw	0
  6908  0043BA  141B               	andwf	(___ftpack@arg+1)^0,w,c
  6909  0043BC  6E20               	movwf	(??___ftpack+1)^0,c
  6910  0043BE  0EFF               	movlw	255
  6911  0043C0  141C               	andwf	(___ftpack@arg+2)^0,w,c
  6912  0043C2  6E21               	movwf	(??___ftpack+2)^0,c
  6913  0043C4  501F               	movf	??___ftpack^0,w,c
  6914  0043C6  1020               	iorwf	(??___ftpack+1)^0,w,c
  6915  0043C8  1021               	iorwf	(??___ftpack+2)^0,w,c
  6916  0043CA  B4D8               	btfsc	status,2,c
  6917  0043CC  D006               	goto	l12652
  6918  0043CE  D7E6               	goto	l12644
  6919  0043D0                     l12650:
  6920  0043D0  061D               	decf	___ftpack@exp^0,f,c
  6921  0043D2  90D8               	bcf	status,0,c
  6922  0043D4  361A               	rlcf	___ftpack@arg^0,f,c
  6923  0043D6  361B               	rlcf	(___ftpack@arg+1)^0,f,c
  6924  0043D8  361C               	rlcf	(___ftpack@arg+2)^0,f,c
  6925  0043DA                     l12652:
  6926  0043DA  BE1B               	btfsc	(___ftpack@arg+1)^0,7,c
  6927  0043DC  D003               	goto	u15660
  6928  0043DE  0E02               	movlw	2
  6929  0043E0  601D               	cpfslt	___ftpack@exp^0,c
  6930  0043E2  D7F6               	goto	l12650
  6931  0043E4                     u15660:
  6932  0043E4  A01D               	btfss	___ftpack@exp^0,0,c
  6933  0043E6  9E1B               	bcf	(___ftpack@arg+1)^0,7,c
  6934  0043E8  90D8               	bcf	status,0,c
  6935  0043EA  321D               	rrcf	___ftpack@exp^0,f,c
  6936  0043EC  501D               	movf	___ftpack@exp^0,w,c
  6937  0043EE  121C               	iorwf	(___ftpack@arg+2)^0,f,c
  6938  0043F0  501E               	movf	___ftpack@sign^0,w,c
  6939  0043F2  A4D8               	btfss	status,2,c
  6940  0043F4  8E1C               	bsf	(___ftpack@arg+2)^0,7,c
  6941  0043F6  C01A  F01A         	movff	___ftpack@arg,?___ftpack
  6942  0043FA  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
  6943  0043FE  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
  6944  004402  0012               	return		;funcret
  6945  004404                     __end_of___ftpack:
  6946                           	callstack 0
  6947                           
  6948 ;; *************** function _Speed *****************
  6949 ;; Defined at:
  6950 ;;		line 332 in file "bibliotecas/GPS.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;		None
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  2   25[COMRAM] PTR unsigned char 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 3F/0
  6961 ;;		On exit  : 3F/0
  6962 ;;		Unchanged: 3F/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6964 ;;      Params:         2       0       0       0       0       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6967 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6968 ;;Total ram usage:        2 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    3
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_verifica_dados_operacionais
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text38
  6979  005A5E                     __ptext38:
  6980                           	callstack 0
  6981  005A5E                     _Speed:
  6982                           	callstack 25
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;GPS.c: 334: return rawSpeed;
  6986                           
  6987                           ;incstack = 0
  6988  005A5E  0ED7               	movlw	low _rawSpeed
  6989  005A60  6E1A               	movwf	?_Speed^0,c
  6990  005A62  0E01               	movlw	high _rawSpeed
  6991  005A64  6E1B               	movwf	(?_Speed+1)^0,c
  6992                           
  6993                           ; BSR set to: 0
  6994  005A66  0012               	return		;funcret
  6995  005A68                     __end_of_Speed:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _mostra_dados_display *****************
  6999 ;; Defined at:
  7000 ;;		line 338 in file "bibliotecas/GPS.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/1
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:        0 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    6
  7021 ;; This function calls:
  7022 ;;		_escreve_frase_ram_lcd
  7023 ;;		_posicao_cursor_lcd
  7024 ;; This function is called by:
  7025 ;;		_troca_de_tela
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text39
  7030  005652                     __ptext39:
  7031                           	callstack 0
  7032  005652                     _mostra_dados_display:
  7033                           	callstack 22
  7034                           
  7035                           ;GPS.c: 340: posicao_cursor_lcd(1,4);
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;incstack = 0
  7039  005652  0E04               	movlw	4
  7040  005654  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  7041  005656  0E01               	movlw	1
  7042  005658  EC21  F027         	call	_posicao_cursor_lcd
  7043                           
  7044                           ;GPS.c: 341: escreve_frase_ram_lcd(rawLatitude);
  7045  00565C  0E9A               	movlw	low _rawLatitude
  7046  00565E  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  7047  005660  0E01               	movlw	high _rawLatitude
  7048  005662  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  7049  005664  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  7050                           
  7051                           ;GPS.c: 342: posicao_cursor_lcd(2,4);
  7052  005668  0E04               	movlw	4
  7053  00566A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  7054  00566C  0E02               	movlw	2
  7055  00566E  EC21  F027         	call	_posicao_cursor_lcd
  7056                           
  7057                           ;GPS.c: 343: escreve_frase_ram_lcd(rawLongitude);
  7058  005672  0E81               	movlw	low _rawLongitude
  7059  005674  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  7060  005676  0E01               	movlw	high _rawLongitude
  7061  005678  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  7062  00567A  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  7063  00567E  0012               	return		;funcret
  7064  005680                     __end_of_mostra_dados_display:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _escreve_inteiro_lcd *****************
  7068 ;; Defined at:
  7069 ;;		line 376 in file "bibliotecas/display_lcd.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  valor           4   12[BANK0 ] long 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  texto           7   16[BANK0 ] unsigned char [7]
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 3F/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7083 ;;      Params:         0       4       0       0       0       0       0       0       0
  7084 ;;      Locals:         0       7       0       0       0       0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7086 ;;      Totals:         0      11       0       0       0       0       0       0       0
  7087 ;;Total ram usage:       11 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    6
  7090 ;; This function calls:
  7091 ;;		_escreve_frase_ram_lcd
  7092 ;;		_ltoa
  7093 ;; This function is called by:
  7094 ;;		_troca_de_tela
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text40
  7099  0054FE                     __ptext40:
  7100                           	callstack 0
  7101  0054FE                     _escreve_inteiro_lcd:
  7102                           	callstack 22
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;display_lcd.c: 378: char texto[7] = "000000";
  7106                           
  7107                           ;incstack = 0
  7108  0054FE  EE21  F0EC         	lfsr	2,escreve_inteiro_lcd@F3223
  7109  005502  EE10  F070         	lfsr	1,escreve_inteiro_lcd@texto
  7110  005506  0E06               	movlw	6
  7111  005508                     u15801:
  7112  005508  CFDB FFE3          	movff	plusw2,plusw1
  7113  00550C  06E8               	decf	wreg,f,c
  7114  00550E  E2FC               	bc	u15801
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  7118  005510  0E70               	movlw	low escreve_inteiro_lcd@texto
  7119  005512  6F65               	movwf	ltoa@buf& (0+255),b
  7120  005514  C06C  F066         	movff	escreve_inteiro_lcd@valor,ltoa@val
  7121  005518  C06D  F067         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  7122  00551C  C06E  F068         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  7123  005520  C06F  F069         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  7124  005524  0E00               	movlw	0
  7125  005526  6F6B               	movwf	(ltoa@base+1)& (0+255),b
  7126  005528  0E0A               	movlw	10
  7127  00552A  6F6A               	movwf	ltoa@base& (0+255),b
  7128  00552C  EC1D  F02A         	call	_ltoa	;wreg free
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  7132  005530  0E70               	movlw	low escreve_inteiro_lcd@texto
  7133  005532  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  7134  005534  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  7135  005536  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  7136  00553A  0012               	return		;funcret
  7137  00553C                     __end_of_escreve_inteiro_lcd:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function _ltoa *****************
  7141 ;; Defined at:
  7142 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  buf             1    5[BANK0 ] PTR unsigned char 
  7145 ;;		 -> escreve_inteiro_lcd@texto(7), 
  7146 ;;  val             4    6[BANK0 ] long 
  7147 ;;  base            2   10[BANK0 ] int 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  cp              1    0        PTR unsigned char 
  7150 ;;		 -> escreve_inteiro_lcd@texto(7), 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      PTR unsigned char 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 3F/0
  7157 ;;		On exit  : 3F/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7160 ;;      Params:         0       7       0       0       0       0       0       0       0
  7161 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7163 ;;      Totals:         1       7       0       0       0       0       0       0       0
  7164 ;;Total ram usage:        8 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    5
  7167 ;; This function calls:
  7168 ;;		_ultoa
  7169 ;; This function is called by:
  7170 ;;		_escreve_inteiro_lcd
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text41
  7175  00543A                     __ptext41:
  7176                           	callstack 0
  7177  00543A                     _ltoa:
  7178                           	callstack 22
  7179                           
  7180                           ; BSR set to: 0
  7181                           
  7182                           ;incstack = 0
  7183  00543A  AF69               	btfss	(ltoa@val+3)& (0+255),7,b
  7184  00543C  D00E               	goto	l12240
  7185                           
  7186                           ; BSR set to: 0
  7187  00543E  5165               	movf	ltoa@buf& (0+255),w,b
  7188  005440  6ED9               	movwf	fsr2l,c
  7189  005442  6ADA               	clrf	fsr2h,c
  7190  005444  0E2D               	movlw	45
  7191  005446  6EDF               	movwf	indf2,c
  7192                           
  7193                           ; BSR set to: 0
  7194  005448  2B65               	incf	ltoa@buf& (0+255),f,b
  7195                           
  7196                           ; BSR set to: 0
  7197  00544A  1F69               	comf	(ltoa@val+3)& (0+255),f,b
  7198  00544C  1F68               	comf	(ltoa@val+2)& (0+255),f,b
  7199  00544E  1F67               	comf	(ltoa@val+1)& (0+255),f,b
  7200  005450  6D66               	negf	ltoa@val& (0+255),b
  7201  005452  0E00               	movlw	0
  7202  005454  2367               	addwfc	(ltoa@val+1)& (0+255),f,b
  7203  005456  2368               	addwfc	(ltoa@val+2)& (0+255),f,b
  7204  005458  2369               	addwfc	(ltoa@val+3)& (0+255),f,b
  7205  00545A                     l12240:
  7206                           
  7207                           ; BSR set to: 0
  7208  00545A  C065  F027         	movff	ltoa@buf,ultoa@buf
  7209  00545E  C066  F028         	movff	ltoa@val,ultoa@val
  7210  005462  C067  F029         	movff	ltoa@val+1,ultoa@val+1
  7211  005466  C068  F02A         	movff	ltoa@val+2,ultoa@val+2
  7212  00546A  C069  F02B         	movff	ltoa@val+3,ultoa@val+3
  7213  00546E  C06A  F02C         	movff	ltoa@base,ultoa@base
  7214  005472  C06B  F02D         	movff	ltoa@base+1,ultoa@base+1
  7215  005476  EC3D  F01F         	call	_ultoa	;wreg free
  7216                           
  7217                           ; BSR set to: 0
  7218  00547A  0012               	return		;funcret
  7219  00547C                     __end_of_ltoa:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _ultoa *****************
  7223 ;; Defined at:
  7224 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  buf             1   38[COMRAM] PTR unsigned char 
  7227 ;;		 -> escreve_inteiro_lcd@texto(7), 
  7228 ;;  val             4   39[COMRAM] unsigned long 
  7229 ;;  base            2   43[COMRAM] int 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  v               4    0[BANK0 ] unsigned long 
  7232 ;;  c               1    4[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      PTR unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 3F/0
  7239 ;;		On exit  : 3F/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7242 ;;      Params:         7       0       0       0       0       0       0       0       0
  7243 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7245 ;;      Totals:         7       5       0       0       0       0       0       0       0
  7246 ;;Total ram usage:       12 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    4
  7249 ;; This function calls:
  7250 ;;		___lldiv
  7251 ;;		___llmod
  7252 ;; This function is called by:
  7253 ;;		_ltoa
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text42
  7258  003E7A                     __ptext42:
  7259                           	callstack 0
  7260  003E7A                     _ultoa:
  7261                           	callstack 22
  7262                           
  7263                           ; BSR set to: 0
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;incstack = 0
  7267  003E7A  C028  F060         	movff	ultoa@val,ultoa@v
  7268  003E7E  C029  F061         	movff	ultoa@val+1,ultoa@v+1
  7269  003E82  C02A  F062         	movff	ultoa@val+2,ultoa@v+2
  7270  003E86  C02B  F063         	movff	ultoa@val+3,ultoa@v+3
  7271  003E8A                     l12208:
  7272                           
  7273                           ; BSR set to: 0
  7274  003E8A  C060  F01A         	movff	ultoa@v,___lldiv@dividend
  7275  003E8E  C061  F01B         	movff	ultoa@v+1,___lldiv@dividend+1
  7276  003E92  C062  F01C         	movff	ultoa@v+2,___lldiv@dividend+2
  7277  003E96  C063  F01D         	movff	ultoa@v+3,___lldiv@dividend+3
  7278  003E9A  C02C  F01E         	movff	ultoa@base,___lldiv@divisor
  7279  003E9E  C02D  F01F         	movff	ultoa@base+1,___lldiv@divisor+1
  7280  003EA2  0E00               	movlw	0
  7281  003EA4  BE1F               	btfsc	(___lldiv@divisor+1)^0,7,c
  7282  003EA6  0EFF               	movlw	-1
  7283  003EA8  6E20               	movwf	(___lldiv@divisor+2)^0,c
  7284  003EAA  6E21               	movwf	(___lldiv@divisor+3)^0,c
  7285  003EAC  ECE2  F024         	call	___lldiv	;wreg free
  7286  003EB0  C01A  F060         	movff	?___lldiv,ultoa@v
  7287  003EB4  C01B  F061         	movff	?___lldiv+1,ultoa@v+1
  7288  003EB8  C01C  F062         	movff	?___lldiv+2,ultoa@v+2
  7289  003EBC  C01D  F063         	movff	?___lldiv+3,ultoa@v+3
  7290  003EC0  2A27               	incf	ultoa@buf^0,f,c
  7291  003EC2  0100               	movlb	0	; () banked
  7292  003EC4  5160               	movf	ultoa@v& (0+255),w,b
  7293  003EC6  1161               	iorwf	(ultoa@v+1)& (0+255),w,b
  7294  003EC8  1162               	iorwf	(ultoa@v+2)& (0+255),w,b
  7295  003ECA  1163               	iorwf	(ultoa@v+3)& (0+255),w,b
  7296  003ECC  A4D8               	btfss	status,2,c
  7297  003ECE  D7DD               	goto	l12208
  7298                           
  7299                           ; BSR set to: 0
  7300  003ED0  5027               	movf	ultoa@buf^0,w,c
  7301  003ED2  6ED9               	movwf	fsr2l,c
  7302  003ED4  6ADA               	clrf	fsr2h,c
  7303  003ED6  0E00               	movlw	0
  7304  003ED8  6EDF               	movwf	indf2,c
  7305                           
  7306                           ; BSR set to: 0
  7307  003EDA  0627               	decf	ultoa@buf^0,f,c
  7308  003EDC                     l12218:
  7309                           
  7310                           ; BSR set to: 0
  7311  003EDC  C028  F01A         	movff	ultoa@val,___llmod@dividend
  7312  003EE0  C029  F01B         	movff	ultoa@val+1,___llmod@dividend+1
  7313  003EE4  C02A  F01C         	movff	ultoa@val+2,___llmod@dividend+2
  7314  003EE8  C02B  F01D         	movff	ultoa@val+3,___llmod@dividend+3
  7315  003EEC  C02C  F01E         	movff	ultoa@base,___llmod@divisor
  7316  003EF0  C02D  F01F         	movff	ultoa@base+1,___llmod@divisor+1
  7317  003EF4  0E00               	movlw	0
  7318  003EF6  BE1F               	btfsc	(___llmod@divisor+1)^0,7,c
  7319  003EF8  0EFF               	movlw	-1
  7320  003EFA  6E20               	movwf	(___llmod@divisor+2)^0,c
  7321  003EFC  6E21               	movwf	(___llmod@divisor+3)^0,c
  7322  003EFE  ECBC  F026         	call	___llmod	;wreg free
  7323  003F02  501A               	movf	?___llmod^0,w,c
  7324  003F04  0100               	movlb	0	; () banked
  7325  003F06  6F64               	movwf	ultoa@c& (0+255),b
  7326                           
  7327                           ; BSR set to: 0
  7328  003F08  C028  F01A         	movff	ultoa@val,___lldiv@dividend
  7329  003F0C  C029  F01B         	movff	ultoa@val+1,___lldiv@dividend+1
  7330  003F10  C02A  F01C         	movff	ultoa@val+2,___lldiv@dividend+2
  7331  003F14  C02B  F01D         	movff	ultoa@val+3,___lldiv@dividend+3
  7332  003F18  C02C  F01E         	movff	ultoa@base,___lldiv@divisor
  7333  003F1C  C02D  F01F         	movff	ultoa@base+1,___lldiv@divisor+1
  7334  003F20  0E00               	movlw	0
  7335  003F22  BE1F               	btfsc	(___lldiv@divisor+1)^0,7,c
  7336  003F24  0EFF               	movlw	-1
  7337  003F26  6E20               	movwf	(___lldiv@divisor+2)^0,c
  7338  003F28  6E21               	movwf	(___lldiv@divisor+3)^0,c
  7339  003F2A  ECE2  F024         	call	___lldiv	;wreg free
  7340  003F2E  C01A  F028         	movff	?___lldiv,ultoa@val
  7341  003F32  C01B  F029         	movff	?___lldiv+1,ultoa@val+1
  7342  003F36  C01C  F02A         	movff	?___lldiv+2,ultoa@val+2
  7343  003F3A  C01D  F02B         	movff	?___lldiv+3,ultoa@val+3
  7344  003F3E  0E09               	movlw	9
  7345  003F40  0100               	movlb	0	; () banked
  7346  003F42  6564               	cpfsgt	ultoa@c& (0+255),b
  7347  003F44  D002               	goto	l2394
  7348                           
  7349                           ; BSR set to: 0
  7350  003F46  0E07               	movlw	7
  7351  003F48  2764               	addwf	ultoa@c& (0+255),f,b
  7352  003F4A                     l2394:
  7353                           
  7354                           ; BSR set to: 0
  7355  003F4A  0E30               	movlw	48
  7356  003F4C  2764               	addwf	ultoa@c& (0+255),f,b
  7357                           
  7358                           ; BSR set to: 0
  7359  003F4E  5027               	movf	ultoa@buf^0,w,c
  7360  003F50  6ED9               	movwf	fsr2l,c
  7361  003F52  6ADA               	clrf	fsr2h,c
  7362  003F54  C064  FFDF         	movff	ultoa@c,indf2
  7363                           
  7364                           ; BSR set to: 0
  7365  003F58  0627               	decf	ultoa@buf^0,f,c
  7366                           
  7367                           ; BSR set to: 0
  7368  003F5A  5028               	movf	ultoa@val^0,w,c
  7369  003F5C  1029               	iorwf	(ultoa@val+1)^0,w,c
  7370  003F5E  102A               	iorwf	(ultoa@val+2)^0,w,c
  7371  003F60  102B               	iorwf	(ultoa@val+3)^0,w,c
  7372  003F62  B4D8               	btfsc	status,2,c
  7373  003F64  0012               	return	
  7374  003F66  D7BA               	goto	l12218
  7375  003F68                     __end_of_ultoa:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _escreve_cmd_lcd *****************
  7379 ;; Defined at:
  7380 ;;		line 162 in file "bibliotecas/display_lcd.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  comando         1    wreg     unsigned char 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  comando         1   27[COMRAM] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7394 ;;      Params:         0       0       0       0       0       0       0       0       0
  7395 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7398 ;;Total ram usage:        1 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    4
  7401 ;; This function calls:
  7402 ;;		_delay
  7403 ;; This function is called by:
  7404 ;;		_init_lcd
  7405 ;;		_mensagem_inicial
  7406 ;;		_troca_de_tela
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text43
  7411  004832                     __ptext43:
  7412                           	callstack 0
  7413  004832                     _escreve_cmd_lcd:
  7414                           	callstack 25
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;incstack = 0
  7418                           ;escreve_cmd_lcd@comando stored from wreg
  7419  004832  6E1C               	movwf	escreve_cmd_lcd@comando^0,c
  7420                           
  7421                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  7422  004834  9483               	bcf	131,2,c	;volatile
  7423                           
  7424                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  7425  004836  9283               	bcf	131,1,c	;volatile
  7426                           
  7427                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  7428  004838  9083               	bcf	131,0,c	;volatile
  7429                           
  7430                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  7431  00483A  A81C               	btfss	escreve_cmd_lcd@comando^0,4,c
  7432  00483C  D002               	goto	l191
  7433  00483E  8883               	bsf	131,4,c	;volatile
  7434  004840  D001               	goto	l12674
  7435  004842                     l191:
  7436                           
  7437                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  7438  004842  9883               	bcf	131,4,c	;volatile
  7439  004844                     l12674:
  7440                           
  7441                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  7442  004844  AA1C               	btfss	escreve_cmd_lcd@comando^0,5,c
  7443  004846  D002               	goto	l193
  7444  004848  8A83               	bsf	131,5,c	;volatile
  7445  00484A  D001               	goto	l12678
  7446  00484C                     l193:
  7447                           
  7448                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  7449  00484C  9A83               	bcf	131,5,c	;volatile
  7450  00484E                     l12678:
  7451                           
  7452                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  7453  00484E  AC1C               	btfss	escreve_cmd_lcd@comando^0,6,c
  7454  004850  D002               	goto	l195
  7455  004852  8C83               	bsf	131,6,c	;volatile
  7456  004854  D001               	goto	l12682
  7457  004856                     l195:
  7458                           
  7459                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  7460  004856  9C83               	bcf	131,6,c	;volatile
  7461  004858                     l12682:
  7462                           
  7463                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  7464  004858  AE1C               	btfss	escreve_cmd_lcd@comando^0,7,c
  7465  00485A  D002               	goto	l197
  7466  00485C  8E83               	bsf	131,7,c	;volatile
  7467  00485E  D001               	goto	l198
  7468  004860                     l197:
  7469                           
  7470                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  7471  004860  9E83               	bcf	131,7,c	;volatile
  7472  004862                     l198:
  7473                           
  7474                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  7475  004862  8083               	bsf	131,0,c	;volatile
  7476                           
  7477                           ;display_lcd.c: 181: delay();
  7478  004864  EC81  F02C         	call	_delay	;wreg free
  7479                           
  7480                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  7481  004868  9083               	bcf	131,0,c	;volatile
  7482                           
  7483                           ;display_lcd.c: 183: delay();
  7484  00486A  EC81  F02C         	call	_delay	;wreg free
  7485                           
  7486                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  7487  00486E  A01C               	btfss	escreve_cmd_lcd@comando^0,0,c
  7488  004870  D002               	goto	l199
  7489  004872  8883               	bsf	131,4,c	;volatile
  7490  004874  D001               	goto	l200
  7491  004876                     l199:
  7492                           
  7493                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  7494  004876  9883               	bcf	131,4,c	;volatile
  7495  004878                     l200:
  7496                           
  7497                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  7498  004878  A21C               	btfss	escreve_cmd_lcd@comando^0,1,c
  7499  00487A  D002               	goto	l201
  7500  00487C  8A83               	bsf	131,5,c	;volatile
  7501  00487E  D001               	goto	l202
  7502  004880                     l201:
  7503                           
  7504                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  7505  004880  9A83               	bcf	131,5,c	;volatile
  7506  004882                     l202:
  7507                           
  7508                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  7509  004882  A41C               	btfss	escreve_cmd_lcd@comando^0,2,c
  7510  004884  D002               	goto	l203
  7511  004886  8C83               	bsf	131,6,c	;volatile
  7512  004888  D001               	goto	l204
  7513  00488A                     l203:
  7514                           
  7515                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  7516  00488A  9C83               	bcf	131,6,c	;volatile
  7517  00488C                     l204:
  7518                           
  7519                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  7520  00488C  A61C               	btfss	escreve_cmd_lcd@comando^0,3,c
  7521  00488E  D002               	goto	l205
  7522  004890  8E83               	bsf	131,7,c	;volatile
  7523  004892  D001               	goto	l206
  7524  004894                     l205:
  7525                           
  7526                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  7527  004894  9E83               	bcf	131,7,c	;volatile
  7528  004896                     l206:
  7529                           
  7530                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  7531  004896  8083               	bsf	131,0,c	;volatile
  7532                           
  7533                           ;display_lcd.c: 197: delay();
  7534  004898  EC81  F02C         	call	_delay	;wreg free
  7535                           
  7536                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  7537  00489C  9083               	bcf	131,0,c	;volatile
  7538                           
  7539                           ;display_lcd.c: 199: delay();
  7540  00489E  EC81  F02C         	call	_delay	;wreg free
  7541                           
  7542                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  7543  0048A2  041C               	decf	escreve_cmd_lcd@comando^0,w,c
  7544  0048A4  B4D8               	btfsc	status,2,c
  7545  0048A6  D008               	goto	u15790
  7546  0048A8  0E02               	movlw	2
  7547  0048AA  181C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  7548  0048AC  B4D8               	btfsc	status,2,c
  7549  0048AE  D004               	goto	u15790
  7550  0048B0  0E03               	movlw	3
  7551  0048B2  181C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  7552  0048B4  A4D8               	btfss	status,2,c
  7553  0048B6  0012               	return	
  7554  0048B8                     u15790:
  7555                           
  7556                           ;display_lcd.c: 205: { delay(); }
  7557  0048B8  EC81  F02C         	call	_delay	;wreg free
  7558  0048BC  0012               	return		;funcret
  7559  0048BE                     __end_of_escreve_cmd_lcd:
  7560                           	callstack 0
  7561                           
  7562 ;; *************** function _recebe_dado_gps *****************
  7563 ;; Defined at:
  7564 ;;		line 563 in file "main.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  timeout         1   26[COMRAM] unsigned char 
  7569 ;;  flag_recebe     1   25[COMRAM] unsigned char 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0
  7580 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7582 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7583 ;;Total ram usage:        2 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    4
  7586 ;; This function calls:
  7587 ;;		_verifica_recep_gps
  7588 ;; This function is called by:
  7589 ;;		_verifica_fence
  7590 ;;		_disparo_gravacao
  7591 ;;		_troca_de_tela
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text44
  7596  005884                     __ptext44:
  7597                           	callstack 0
  7598  005884                     _recebe_dado_gps:
  7599                           	callstack 23
  7600                           
  7601                           ;main.c: 565: unsigned char flag_recebe = 0;
  7602                           
  7603                           ;incstack = 0
  7604  005884  0E00               	movlw	0
  7605  005886  6E1A               	movwf	recebe_dado_gps@flag_recebe^0,c
  7606                           
  7607                           ;main.c: 566: unsigned char timeout = 10;
  7608  005888  0E0A               	movlw	10
  7609  00588A  6E1B               	movwf	recebe_dado_gps@timeout^0,c
  7610                           
  7611                           ;main.c: 567: while(!flag_recebe && timeout>0)
  7612  00588C  D004               	goto	l12510
  7613  00588E                     l12506:
  7614                           
  7615                           ;main.c: 568: {;main.c: 569: flag_recebe = verifica_recep_gps();
  7616  00588E  EC7F  F02B         	call	_verifica_recep_gps	;wreg free
  7617  005892  6E1A               	movwf	recebe_dado_gps@flag_recebe^0,c
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;main.c: 570: timeout--;
  7621  005894  061B               	decf	recebe_dado_gps@timeout^0,f,c
  7622  005896                     l12510:
  7623  005896  501A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  7624  005898  A4D8               	btfss	status,2,c
  7625  00589A  0012               	return	
  7626  00589C  501B               	movf	recebe_dado_gps@timeout^0,w,c
  7627  00589E  B4D8               	btfsc	status,2,c
  7628  0058A0  0012               	return	
  7629  0058A2  D7F5               	goto	l12506
  7630  0058A4                     __end_of_recebe_dado_gps:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _verifica_recep_gps *****************
  7634 ;; Defined at:
  7635 ;;		line 366 in file "bibliotecas/GPS.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      unsigned char 
  7642 ;; Registers used:
  7643 ;;		wreg
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 3F/1
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    3
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_recebe_dado_gps
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text45
  7664  0056FE                     __ptext45:
  7665                           	callstack 0
  7666  0056FE                     _verifica_recep_gps:
  7667                           	callstack 23
  7668                           
  7669                           ;GPS.c: 368: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  7670                           
  7671                           ;incstack = 0
  7672  0056FE  0101               	movlb	1	; () banked
  7673  005700  B12F               	btfsc	_gps_flag& (0+255),0,b
  7674                           
  7675                           ; BSR set to: 1
  7676  005702  A130               	btfss	(_gps_flag+1)& (0+255),0,b
  7677  005704  D00E               	goto	l11788
  7678                           
  7679                           ; BSR set to: 1
  7680  005706  B131               	btfsc	(_gps_flag+2)& (0+255),0,b
  7681                           
  7682                           ; BSR set to: 1
  7683  005708  A132               	btfss	(_gps_flag+3)& (0+255),0,b
  7684  00570A  D00B               	goto	l11788
  7685                           
  7686                           ; BSR set to: 1
  7687  00570C  B133               	btfsc	(_gps_flag+4)& (0+255),0,b
  7688                           
  7689                           ; BSR set to: 1
  7690  00570E  A134               	btfss	(_gps_flag+5)& (0+255),0,b
  7691  005710  D008               	goto	l11788
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;GPS.c: 369: {;GPS.c: 370: gps_flag[0].flag = 0;
  7695  005712  912F               	bcf	_gps_flag& (0+255),0,b
  7696                           
  7697                           ;GPS.c: 371: gps_flag[1].flag = 0;
  7698  005714  9130               	bcf	(_gps_flag+1)& (0+255),0,b
  7699                           
  7700                           ;GPS.c: 372: gps_flag[2].flag = 0;
  7701  005716  9131               	bcf	(_gps_flag+2)& (0+255),0,b
  7702                           
  7703                           ;GPS.c: 373: gps_flag[3].flag = 0;
  7704  005718  9132               	bcf	(_gps_flag+3)& (0+255),0,b
  7705                           
  7706                           ;GPS.c: 374: gps_flag[4].flag = 0;
  7707  00571A  9133               	bcf	(_gps_flag+4)& (0+255),0,b
  7708                           
  7709                           ;GPS.c: 375: gps_flag[5].flag = 0;
  7710  00571C  9134               	bcf	(_gps_flag+5)& (0+255),0,b
  7711                           
  7712                           ; BSR set to: 1
  7713                           ;GPS.c: 376: return 1;
  7714  00571E  0E01               	movlw	1
  7715  005720  0012               	return	
  7716  005722                     l11788:
  7717                           
  7718                           ; BSR set to: 1
  7719                           ;GPS.c: 378: else;GPS.c: 379: {;GPS.c: 381: return 0;
  7720  005722  0E00               	movlw	0
  7721                           
  7722                           ; BSR set to: 1
  7723  005724  0012               	return		;funcret
  7724  005726                     __end_of_verifica_recep_gps:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _grava_sd *****************
  7728 ;; Defined at:
  7729 ;;		line 544 in file "main.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/1
  7740 ;;		On exit  : 3F/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   16
  7750 ;; This function calls:
  7751 ;;		_desliga_SPI
  7752 ;;		_desliga_uart
  7753 ;;		_escrita_sdcard
  7754 ;;		_inicializa_SPI
  7755 ;;		_inicializa_uart
  7756 ;; This function is called by:
  7757 ;;		_disparo_gravacao
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text46
  7762  005956                     __ptext46:
  7763                           	callstack 0
  7764  005956                     _grava_sd:
  7765                           	callstack 12
  7766                           
  7767                           ;main.c: 546: PORTBbits.RB3 = 0;
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;incstack = 0
  7771  005956  9681               	bcf	129,3,c	;volatile
  7772                           
  7773                           ;main.c: 547: desliga_uart();
  7774  005958  ECCC  F02C         	call	_desliga_uart	;wreg free
  7775                           
  7776                           ;main.c: 548: inicializa_SPI();
  7777  00595C  EC52  F02C         	call	_inicializa_SPI	;wreg free
  7778                           
  7779                           ;main.c: 549: escrita_sdcard();
  7780  005960  ECEE  F019         	call	_escrita_sdcard	;wreg free
  7781                           
  7782                           ;main.c: 550: desliga_SPI();
  7783  005964  ECEE  F02C         	call	_desliga_SPI	;wreg free
  7784                           
  7785                           ;main.c: 551: inicializa_uart();
  7786  005968  ECDC  F02B         	call	_inicializa_uart	;wreg free
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;main.c: 552: PORTBbits.RB3 = 1;
  7790  00596C  8681               	bsf	129,3,c	;volatile
  7791                           
  7792                           ; BSR set to: 0
  7793  00596E  0012               	return		;funcret
  7794  005970                     __end_of_grava_sd:
  7795                           	callstack 0
  7796                           
  7797 ;; *************** function _inicializa_uart *****************
  7798 ;; Defined at:
  7799 ;;		line 206 in file "bibliotecas/uart.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;		None
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/1
  7810 ;;		On exit  : 3F/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:         0       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:        0 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    5
  7820 ;; This function calls:
  7821 ;;		_configura_baudrate_uart
  7822 ;; This function is called by:
  7823 ;;		_main
  7824 ;;		_grava_sd
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text47
  7829  0057B8                     __ptext47:
  7830                           	callstack 0
  7831  0057B8                     _inicializa_uart:
  7832                           	callstack 25
  7833                           
  7834                           ;uart.c: 208: TRISCbits.RC6 = 0;
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;incstack = 0
  7838  0057B8  9C94               	bcf	148,6,c	;volatile
  7839                           
  7840                           ;uart.c: 209: TRISCbits.RC7 = 0;
  7841  0057BA  9E94               	bcf	148,7,c	;volatile
  7842                           
  7843                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  7844  0057BC  0E80               	movlw	128
  7845  0057BE  6E28               	movwf	configura_baudrate_uart@baudrate^0,c
  7846  0057C0  0E25               	movlw	37
  7847  0057C2  6E29               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  7848  0057C4  0E00               	movlw	0
  7849  0057C6  6E2A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  7850  0057C8  0E00               	movlw	0
  7851  0057CA  6E2B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  7852  0057CC  EC3D  F01E         	call	_configura_baudrate_uart	;wreg free
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;uart.c: 213: TXSTA = 0x20;
  7856  0057D0  0E20               	movlw	32
  7857  0057D2  6EAC               	movwf	172,c	;volatile
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;uart.c: 214: RCSTA = 0x90;
  7861  0057D4  0E90               	movlw	144
  7862  0057D6  6EAB               	movwf	171,c	;volatile
  7863                           
  7864                           ; BSR set to: 0
  7865  0057D8  0012               	return		;funcret
  7866  0057DA                     __end_of_inicializa_uart:
  7867                           	callstack 0
  7868                           
  7869 ;; *************** function _configura_baudrate_uart *****************
  7870 ;; Defined at:
  7871 ;;		line 50 in file "bibliotecas/uart.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  baudrate        4   39[COMRAM] const long 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  x               2   43[COMRAM] unsigned int 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      unsigned char 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/1
  7882 ;;		On exit  : 3F/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7885 ;;      Params:         4       0       0       0       0       0       0       0       0
  7886 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7887 ;;      Temps:          0       8       0       0       0       0       0       0       0
  7888 ;;      Totals:         6       8       0       0       0       0       0       0       0
  7889 ;;Total ram usage:       14 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    4
  7892 ;; This function calls:
  7893 ;;		___aldiv
  7894 ;; This function is called by:
  7895 ;;		_inicializa_uart
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text48
  7900  003C7A                     __ptext48:
  7901                           	callstack 0
  7902  003C7A                     _configura_baudrate_uart:
  7903                           	callstack 25
  7904                           
  7905                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;incstack = 0
  7909  003C7A  C028  F060         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7910  003C7E  C029  F061         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7911  003C82  C02A  F062         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7912  003C86  C02B  F063         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7913  003C8A  0E06               	movlw	6
  7914  003C8C                     u14825:
  7915  003C8C  90D8               	bcf	status,0,c
  7916  003C8E  0100               	movlb	0	; () banked
  7917  003C90  3760               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  7918  003C92  3761               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  7919  003C94  3762               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  7920  003C96  3763               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  7921  003C98  2EE8               	decfsz	wreg,f,c
  7922  003C9A  D7F8               	goto	u14825
  7923  003C9C  5160               	movf	??_configura_baudrate_uart& (0+255),w,b
  7924  003C9E  0800               	sublw	0
  7925  003CA0  6E1A               	movwf	___aldiv@dividend^0,c
  7926  003CA2  0E6C               	movlw	108
  7927  003CA4  5561               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  7928  003CA6  6E1B               	movwf	(___aldiv@dividend+1)^0,c
  7929  003CA8  0EDC               	movlw	220
  7930  003CAA  5562               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  7931  003CAC  6E1C               	movwf	(___aldiv@dividend+2)^0,c
  7932  003CAE  0E02               	movlw	2
  7933  003CB0  5563               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  7934  003CB2  6E1D               	movwf	(___aldiv@dividend+3)^0,c
  7935  003CB4  C028  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7936  003CB8  C029  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7937  003CBC  C02A  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7938  003CC0  C02B  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7939  003CC4  0E06               	movlw	6
  7940  003CC6                     u14835:
  7941  003CC6  90D8               	bcf	status,0,c
  7942  003CC8  3764               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  7943  003CCA  3765               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  7944  003CCC  3766               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  7945  003CCE  3767               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  7946  003CD0  2EE8               	decfsz	wreg,f,c
  7947  003CD2  D7F9               	goto	u14835
  7948  003CD4  C064  F01E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  7949  003CD8  C065  F01F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  7950  003CDC  C066  F020         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  7951  003CE0  C067  F021         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  7952  003CE4  ECEC  F020         	call	___aldiv	;wreg free
  7953  003CE8  C01A  F02C         	movff	?___aldiv,configura_baudrate_uart@x
  7954  003CEC  C01B  F02D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;uart.c: 55: if(x > 255)
  7958  003CF0  042D               	decf	(configura_baudrate_uart@x+1)^0,w,c
  7959  003CF2  A0D8               	btfss	status,0,c
  7960  003CF4  D03B               	goto	l12202
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  7964  003CF6  C028  F060         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7965  003CFA  C029  F061         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7966  003CFE  C02A  F062         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7967  003D02  C02B  F063         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7968  003D06  0E04               	movlw	4
  7969  003D08                     u14855:
  7970  003D08  90D8               	bcf	status,0,c
  7971  003D0A  3760               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  7972  003D0C  3761               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  7973  003D0E  3762               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  7974  003D10  3763               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  7975  003D12  2EE8               	decfsz	wreg,f,c
  7976  003D14  D7F9               	goto	u14855
  7977  003D16  5160               	movf	??_configura_baudrate_uart& (0+255),w,b
  7978  003D18  0800               	sublw	0
  7979  003D1A  6E1A               	movwf	___aldiv@dividend^0,c
  7980  003D1C  0E6C               	movlw	108
  7981  003D1E  5561               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  7982  003D20  6E1B               	movwf	(___aldiv@dividend+1)^0,c
  7983  003D22  0EDC               	movlw	220
  7984  003D24  5562               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  7985  003D26  6E1C               	movwf	(___aldiv@dividend+2)^0,c
  7986  003D28  0E02               	movlw	2
  7987  003D2A  5563               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  7988  003D2C  6E1D               	movwf	(___aldiv@dividend+3)^0,c
  7989  003D2E  C028  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7990  003D32  C029  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7991  003D36  C02A  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7992  003D3A  C02B  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7993  003D3E  0E04               	movlw	4
  7994  003D40                     u14865:
  7995  003D40  90D8               	bcf	status,0,c
  7996  003D42  3764               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  7997  003D44  3765               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  7998  003D46  3766               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  7999  003D48  3767               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  8000  003D4A  2EE8               	decfsz	wreg,f,c
  8001  003D4C  D7F9               	goto	u14865
  8002  003D4E  C064  F01E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8003  003D52  C065  F01F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8004  003D56  C066  F020         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8005  003D5A  C067  F021         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8006  003D5E  ECEC  F020         	call	___aldiv	;wreg free
  8007  003D62  C01A  F02C         	movff	?___aldiv,configura_baudrate_uart@x
  8008  003D66  C01B  F02D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;uart.c: 58: BRGH = 1;
  8012  003D6A  84AC               	bsf	4012,2,c	;volatile
  8013  003D6C                     l12202:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8017  003D6C  042D               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8018  003D6E  B0D8               	btfsc	status,0,c
  8019  003D70  0012               	return	
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8023  003D72  C02C  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8024                           
  8025                           ;uart.c: 63: SYNC = 0;
  8026  003D76  98AC               	bcf	4012,4,c	;volatile
  8027                           
  8028                           ;uart.c: 64: SPEN = 1;
  8029  003D78  8EAB               	bsf	4011,7,c	;volatile
  8030                           
  8031                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8032  003D7A  8E94               	bsf	148,7,c	;volatile
  8033                           
  8034                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8035  003D7C  9C94               	bcf	148,6,c	;volatile
  8036                           
  8037                           ;uart.c: 67: CREN = 1;
  8038  003D7E  88AB               	bsf	4011,4,c	;volatile
  8039                           
  8040                           ;uart.c: 68: TXEN = 1;
  8041  003D80  8AAC               	bsf	4012,5,c	;volatile
  8042                           
  8043                           ; BSR set to: 0
  8044                           
  8045                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8046  003D82  0012               	return		;funcret
  8047  003D84                     __end_of_configura_baudrate_uart:
  8048                           	callstack 0
  8049                           
  8050 ;; *************** function ___aldiv *****************
  8051 ;; Defined at:
  8052 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  dividend        4   25[COMRAM] long 
  8055 ;;  divisor         4   29[COMRAM] long 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  quotient        4   35[COMRAM] long 
  8058 ;;  sign            1   34[COMRAM] unsigned char 
  8059 ;;  counter         1   33[COMRAM] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  4   25[COMRAM] long 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 3F/0
  8066 ;;		On exit  : 3F/0
  8067 ;;		Unchanged: 3F/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8069 ;;      Params:         8       0       0       0       0       0       0       0       0
  8070 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8072 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8073 ;;Total ram usage:       14 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    3
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_configura_baudrate_uart
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text49
  8084  0041D8                     __ptext49:
  8085                           	callstack 0
  8086  0041D8                     ___aldiv:
  8087                           	callstack 25
  8088                           
  8089                           ; BSR set to: 0
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;incstack = 0
  8093  0041D8  0E00               	movlw	0
  8094  0041DA  6E23               	movwf	___aldiv@sign^0,c
  8095                           
  8096                           ; BSR set to: 0
  8097  0041DC  AE21               	btfss	(___aldiv@divisor+3)^0,7,c
  8098  0041DE  D00A               	goto	l11664
  8099                           
  8100                           ; BSR set to: 0
  8101  0041E0  1E21               	comf	(___aldiv@divisor+3)^0,f,c
  8102  0041E2  1E20               	comf	(___aldiv@divisor+2)^0,f,c
  8103  0041E4  1E1F               	comf	(___aldiv@divisor+1)^0,f,c
  8104  0041E6  6C1E               	negf	___aldiv@divisor^0,c
  8105  0041E8  0E00               	movlw	0
  8106  0041EA  221F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8107  0041EC  2220               	addwfc	(___aldiv@divisor+2)^0,f,c
  8108  0041EE  2221               	addwfc	(___aldiv@divisor+3)^0,f,c
  8109                           
  8110                           ; BSR set to: 0
  8111  0041F0  0E01               	movlw	1
  8112  0041F2  6E23               	movwf	___aldiv@sign^0,c
  8113  0041F4                     l11664:
  8114                           
  8115                           ; BSR set to: 0
  8116  0041F4  AE1D               	btfss	(___aldiv@dividend+3)^0,7,c
  8117  0041F6  D00A               	goto	l11670
  8118                           
  8119                           ; BSR set to: 0
  8120  0041F8  1E1D               	comf	(___aldiv@dividend+3)^0,f,c
  8121  0041FA  1E1C               	comf	(___aldiv@dividend+2)^0,f,c
  8122  0041FC  1E1B               	comf	(___aldiv@dividend+1)^0,f,c
  8123  0041FE  6C1A               	negf	___aldiv@dividend^0,c
  8124  004200  0E00               	movlw	0
  8125  004202  221B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8126  004204  221C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8127  004206  221D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8128                           
  8129                           ; BSR set to: 0
  8130  004208  0E01               	movlw	1
  8131  00420A  1A23               	xorwf	___aldiv@sign^0,f,c
  8132  00420C                     l11670:
  8133                           
  8134                           ; BSR set to: 0
  8135  00420C  0E00               	movlw	0
  8136  00420E  6E24               	movwf	___aldiv@quotient^0,c
  8137  004210  0E00               	movlw	0
  8138  004212  6E25               	movwf	(___aldiv@quotient+1)^0,c
  8139  004214  0E00               	movlw	0
  8140  004216  6E26               	movwf	(___aldiv@quotient+2)^0,c
  8141  004218  0E00               	movlw	0
  8142  00421A  6E27               	movwf	(___aldiv@quotient+3)^0,c
  8143                           
  8144                           ; BSR set to: 0
  8145  00421C  501E               	movf	___aldiv@divisor^0,w,c
  8146  00421E  101F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8147  004220  1020               	iorwf	(___aldiv@divisor+2)^0,w,c
  8148  004222  1021               	iorwf	(___aldiv@divisor+3)^0,w,c
  8149  004224  B4D8               	btfsc	status,2,c
  8150  004226  D02A               	goto	l11692
  8151                           
  8152                           ; BSR set to: 0
  8153  004228  0E01               	movlw	1
  8154  00422A  6E22               	movwf	___aldiv@counter^0,c
  8155  00422C  D006               	goto	l11678
  8156  00422E                     l11676:
  8157                           
  8158                           ; BSR set to: 0
  8159  00422E  90D8               	bcf	status,0,c
  8160  004230  361E               	rlcf	___aldiv@divisor^0,f,c
  8161  004232  361F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8162  004234  3620               	rlcf	(___aldiv@divisor+2)^0,f,c
  8163  004236  3621               	rlcf	(___aldiv@divisor+3)^0,f,c
  8164  004238  2A22               	incf	___aldiv@counter^0,f,c
  8165  00423A                     l11678:
  8166                           
  8167                           ; BSR set to: 0
  8168  00423A  AE21               	btfss	(___aldiv@divisor+3)^0,7,c
  8169  00423C  D7F8               	goto	l11676
  8170  00423E                     u13930:
  8171                           
  8172                           ; BSR set to: 0
  8173  00423E  90D8               	bcf	status,0,c
  8174  004240  3624               	rlcf	___aldiv@quotient^0,f,c
  8175  004242  3625               	rlcf	(___aldiv@quotient+1)^0,f,c
  8176  004244  3626               	rlcf	(___aldiv@quotient+2)^0,f,c
  8177  004246  3627               	rlcf	(___aldiv@quotient+3)^0,f,c
  8178                           
  8179                           ; BSR set to: 0
  8180  004248  501E               	movf	___aldiv@divisor^0,w,c
  8181  00424A  5C1A               	subwf	___aldiv@dividend^0,w,c
  8182  00424C  501F               	movf	(___aldiv@divisor+1)^0,w,c
  8183  00424E  581B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8184  004250  5020               	movf	(___aldiv@divisor+2)^0,w,c
  8185  004252  581C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8186  004254  5021               	movf	(___aldiv@divisor+3)^0,w,c
  8187  004256  581D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8188  004258  A0D8               	btfss	status,0,c
  8189  00425A  D009               	goto	l11688
  8190                           
  8191                           ; BSR set to: 0
  8192  00425C  501E               	movf	___aldiv@divisor^0,w,c
  8193  00425E  5E1A               	subwf	___aldiv@dividend^0,f,c
  8194  004260  501F               	movf	(___aldiv@divisor+1)^0,w,c
  8195  004262  5A1B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8196  004264  5020               	movf	(___aldiv@divisor+2)^0,w,c
  8197  004266  5A1C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8198  004268  5021               	movf	(___aldiv@divisor+3)^0,w,c
  8199  00426A  5A1D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8200                           
  8201                           ; BSR set to: 0
  8202  00426C  8024               	bsf	___aldiv@quotient^0,0,c
  8203  00426E                     l11688:
  8204                           
  8205                           ; BSR set to: 0
  8206  00426E  90D8               	bcf	status,0,c
  8207  004270  3221               	rrcf	(___aldiv@divisor+3)^0,f,c
  8208  004272  3220               	rrcf	(___aldiv@divisor+2)^0,f,c
  8209  004274  321F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8210  004276  321E               	rrcf	___aldiv@divisor^0,f,c
  8211                           
  8212                           ; BSR set to: 0
  8213  004278  2E22               	decfsz	___aldiv@counter^0,f,c
  8214  00427A  D7E1               	goto	u13930
  8215  00427C                     l11692:
  8216                           
  8217                           ; BSR set to: 0
  8218  00427C  5023               	movf	___aldiv@sign^0,w,c
  8219  00427E  B4D8               	btfsc	status,2,c
  8220  004280  D008               	goto	l11696
  8221                           
  8222                           ; BSR set to: 0
  8223  004282  1E27               	comf	(___aldiv@quotient+3)^0,f,c
  8224  004284  1E26               	comf	(___aldiv@quotient+2)^0,f,c
  8225  004286  1E25               	comf	(___aldiv@quotient+1)^0,f,c
  8226  004288  6C24               	negf	___aldiv@quotient^0,c
  8227  00428A  0E00               	movlw	0
  8228  00428C  2225               	addwfc	(___aldiv@quotient+1)^0,f,c
  8229  00428E  2226               	addwfc	(___aldiv@quotient+2)^0,f,c
  8230  004290  2227               	addwfc	(___aldiv@quotient+3)^0,f,c
  8231  004292                     l11696:
  8232                           
  8233                           ; BSR set to: 0
  8234  004292  C024  F01A         	movff	___aldiv@quotient,?___aldiv
  8235  004296  C025  F01B         	movff	___aldiv@quotient+1,?___aldiv+1
  8236  00429A  C026  F01C         	movff	___aldiv@quotient+2,?___aldiv+2
  8237  00429E  C027  F01D         	movff	___aldiv@quotient+3,?___aldiv+3
  8238                           
  8239                           ; BSR set to: 0
  8240  0042A2  0012               	return		;funcret
  8241  0042A4                     __end_of___aldiv:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _inicializa_SPI *****************
  8245 ;; Defined at:
  8246 ;;		line 48 in file "bibliotecas/SPI.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/1
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8260 ;;      Params:         0       0       0       0       0       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8264 ;;Total ram usage:        0 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    3
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_grava_sd
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text50
  8275  0058A4                     __ptext50:
  8276                           	callstack 0
  8277  0058A4                     _inicializa_SPI:
  8278                           	callstack 24
  8279                           
  8280                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;incstack = 0
  8284  0058A4  9293               	bcf	147,1,c	;volatile
  8285                           
  8286                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8287  0058A6  9A93               	bcf	147,5,c	;volatile
  8288                           
  8289                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8290  0058A8  8093               	bsf	147,0,c	;volatile
  8291                           
  8292                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8293  0058AA  9E94               	bcf	148,7,c	;volatile
  8294                           
  8295                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8296  0058AC  8A8A               	bsf	138,5,c	;volatile
  8297                           
  8298                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8299  0058AE  0E3F               	movlw	63
  8300  0058B0  16C7               	andwf	199,f,c	;volatile
  8301                           
  8302                           ;SPI.c: 57: SSPCON1 = 0x00;
  8303  0058B2  0E00               	movlw	0
  8304  0058B4  6EC6               	movwf	198,c	;volatile
  8305                           
  8306                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8307  0058B6  9EC7               	bcf	199,7,c	;volatile
  8308                           
  8309                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8310  0058B8  8CC7               	bsf	199,6,c	;volatile
  8311                           
  8312                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8313  0058BA  98C6               	bcf	198,4,c	;volatile
  8314                           
  8315                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8316  0058BC  0E03               	movlw	3
  8317  0058BE  6EC6               	movwf	198,c	;volatile
  8318                           
  8319                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8320  0058C0  8AC6               	bsf	198,5,c	;volatile
  8321  0058C2  0012               	return		;funcret
  8322  0058C4                     __end_of_inicializa_SPI:
  8323                           	callstack 0
  8324                           
  8325 ;; *************** function _escrita_sdcard *****************
  8326 ;; Defined at:
  8327 ;;		line 208 in file "bibliotecas/SDCard.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  fix_gps         3    0        PTR unsigned char 
  8332 ;;  bw              2    0        unsigned short 
  8333 ;;  j               1    0        unsigned char 
  8334 ;;  i               1    0        unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/1
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8344 ;;      Params:         0       0       0       0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:   15
  8351 ;; This function calls:
  8352 ;;		_escreve_frase_ram_lcd
  8353 ;;		_f_close
  8354 ;;		_f_lseek
  8355 ;;		_f_mount
  8356 ;;		_f_open
  8357 ;;		_fprintf
  8358 ;;		_posicao_cursor_lcd
  8359 ;;		_strcat
  8360 ;;		_strcpy
  8361 ;; This function is called by:
  8362 ;;		_grava_sd
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text51
  8367  0033DC                     __ptext51:
  8368                           	callstack 0
  8369  0033DC                     _escrita_sdcard:
  8370                           	callstack 12
  8371                           
  8372                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 216: f_mount(0,&fs);
  8373                           
  8374                           ;incstack = 0
  8375  0033DC  0EDB               	movlw	low _fs
  8376  0033DE  6E1A               	movwf	f_mount@fs^0,c
  8377  0033E0  0E02               	movlw	high _fs
  8378  0033E2  6E1B               	movwf	(f_mount@fs+1)^0,c
  8379  0033E4  0E00               	movlw	0
  8380  0033E6  EC4C  F029         	call	_f_mount
  8381                           
  8382                           ;SDCard.c: 217: if(!f_fix)
  8383  0033EA  503F               	movf	escrita_sdcard@f_fix^0,w,c
  8384  0033EC  A4D8               	btfss	status,2,c
  8385  0033EE  D01F               	goto	l12466
  8386                           
  8387                           ;SDCard.c: 218: {;SDCard.c: 219: if(data[0] != ' ' && hora[0] != ' ')
  8388  0033F0  0E20               	movlw	32
  8389  0033F2  0101               	movlb	1	; () banked
  8390  0033F4  1923               	xorwf	_data& (0+255),w,b
  8391  0033F6  B4D8               	btfsc	status,2,c
  8392  0033F8  D01A               	goto	l12466
  8393                           
  8394                           ; BSR set to: 1
  8395  0033FA  0E20               	movlw	32
  8396  0033FC  19CB               	xorwf	_hora& (0+255),w,b
  8397  0033FE  B4D8               	btfsc	status,2,c
  8398  003400  D016               	goto	l12466
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;SDCard.c: 220: {;SDCard.c: 223: strcpy(filename, "teste3");;
  8402  003402  0EA5               	movlw	low _filename
  8403  003404  6E1C               	movwf	strcpy@to^0,c
  8404  003406  0E02               	movlw	high _filename
  8405  003408  6E1D               	movwf	(strcpy@to+1)^0,c
  8406  00340A  0E46               	movlw	low STR_13
  8407  00340C  6E1E               	movwf	strcpy@from^0,c
  8408  00340E  0E62               	movlw	high STR_13
  8409  003410  6E1F               	movwf	(strcpy@from+1)^0,c
  8410  003412  ECB7  F029         	call	_strcpy	;wreg free
  8411                           
  8412                           ;SDCard.c: 224: strcat(filename, ".tlm");
  8413  003416  0EA5               	movlw	low _filename
  8414  003418  6E1A               	movwf	strcat@to^0,c
  8415  00341A  0E02               	movlw	high _filename
  8416  00341C  6E1B               	movwf	(strcat@to+1)^0,c
  8417  00341E  0E69               	movlw	low STR_14
  8418  003420  6E1C               	movwf	strcat@from^0,c
  8419  003422  0E62               	movlw	high STR_14
  8420  003424  6E1D               	movwf	(strcat@from+1)^0,c
  8421  003426  ECD9  F029         	call	_strcat	;wreg free
  8422                           
  8423                           ;SDCard.c: 225: f_fix = 1;
  8424  00342A  0E01               	movlw	1
  8425  00342C  6E3F               	movwf	escrita_sdcard@f_fix^0,c
  8426  00342E                     l12466:
  8427                           
  8428                           ;SDCard.c: 226: };SDCard.c: 227: };SDCard.c: 229: if(f_fix)
  8429  00342E  503F               	movf	escrita_sdcard@f_fix^0,w,c
  8430  003430  B4D8               	btfsc	status,2,c
  8431  003432  0012               	return	
  8432                           
  8433                           ;SDCard.c: 230: {;SDCard.c: 231: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8434  003434  0E58               	movlw	low _fil
  8435  003436  0100               	movlb	0	; () banked
  8436  003438  6FC1               	movwf	f_open@fp& (0+255),b
  8437  00343A  0E01               	movlw	high _fil
  8438  00343C  6FC2               	movwf	(f_open@fp+1)& (0+255),b
  8439  00343E  0EA5               	movlw	low _filename
  8440  003440  6FC3               	movwf	f_open@path& (0+255),b
  8441  003442  0E02               	movlw	high _filename
  8442  003444  6FC4               	movwf	(f_open@path+1)& (0+255),b
  8443  003446  0E02               	movlw	2
  8444  003448  6FC5               	movwf	f_open@mode& (0+255),b
  8445  00344A  EC52  F00B         	call	_f_open	;wreg free
  8446  00344E  0900               	iorlw	0
  8447  003450  A4D8               	btfss	status,2,c
  8448  003452  D069               	goto	l12486
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;SDCard.c: 232: {;SDCard.c: 234: f_lseek(&fil, ((&fil)->fsize));
  8452  003454  0E58               	movlw	low _fil
  8453  003456  6FAF               	movwf	f_lseek@fp& (0+255),b
  8454  003458  0E01               	movlw	high _fil
  8455  00345A  6FB0               	movwf	(f_lseek@fp+1)& (0+255),b
  8456  00345C  C162  F0B1         	movff	_fil+10,f_lseek@ofs
  8457  003460  C163  F0B2         	movff	_fil+11,f_lseek@ofs+1
  8458  003464  C164  F0B3         	movff	_fil+12,f_lseek@ofs+2
  8459  003468  C165  F0B4         	movff	_fil+13,f_lseek@ofs+3
  8460  00346C  EC75  F005         	call	_f_lseek	;wreg free
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;SDCard.c: 238: posicao_cursor_lcd(2,0);
  8464  003470  0E00               	movlw	0
  8465  003472  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  8466  003474  0E02               	movlw	2
  8467  003476  EC21  F027         	call	_posicao_cursor_lcd
  8468                           
  8469                           ;SDCard.c: 239: escreve_frase_ram_lcd(lt);
  8470  00347A  0E8E               	movlw	low _lt
  8471  00347C  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  8472  00347E  0E01               	movlw	high _lt
  8473  003480  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  8474  003482  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
  8475                           
  8476                           ;SDCard.c: 240: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8477  003486  0E58               	movlw	low _fil
  8478  003488  0100               	movlb	0	; () banked
  8479  00348A  6FDB               	movwf	fprintf@fil& (0+255),b
  8480  00348C  0E01               	movlw	high _fil
  8481  00348E  6FDC               	movwf	(fprintf@fil+1)& (0+255),b
  8482  003490  0E9C               	movlw	low STR_15
  8483  003492  6FDD               	movwf	fprintf@str& (0+255),b
  8484  003494  0E61               	movlw	high STR_15
  8485  003496  6FDE               	movwf	(fprintf@str+1)& (0+255),b
  8486  003498  0ED1               	movlw	low _vel
  8487  00349A  6FDF               	movwf	(?_fprintf+4)& (0+255),b
  8488  00349C  0E01               	movlw	high _vel
  8489  00349E  6FE0               	movwf	(?_fprintf+5)& (0+255),b
  8490  0034A0  0E8E               	movlw	low _lt
  8491  0034A2  6FE1               	movwf	(?_fprintf+6)& (0+255),b
  8492  0034A4  0E01               	movlw	high _lt
  8493  0034A6  6FE2               	movwf	(?_fprintf+7)& (0+255),b
  8494  0034A8  0E74               	movlw	low _lo
  8495  0034AA  6FE3               	movwf	(?_fprintf+8)& (0+255),b
  8496  0034AC  0E01               	movlw	high _lo
  8497  0034AE  6FE4               	movwf	(?_fprintf+9)& (0+255),b
  8498  0034B0  EC92  F009         	call	_fprintf	;wreg free
  8499                           
  8500                           ; BSR set to: 2
  8501                           ;SDCard.c: 241: fprintf(&fil, "lt%s;lo%s;", lt, lo);
  8502  0034B4  0E58               	movlw	low _fil
  8503  0034B6  0100               	movlb	0	; () banked
  8504  0034B8  6FDB               	movwf	fprintf@fil& (0+255),b
  8505  0034BA  0E01               	movlw	high _fil
  8506  0034BC  6FDC               	movwf	(fprintf@fil+1)& (0+255),b
  8507  0034BE  0EA0               	movlw	low (STR_15+4)
  8508  0034C0  6FDD               	movwf	fprintf@str& (0+255),b
  8509  0034C2  0E61               	movlw	high (STR_15+4)
  8510  0034C4  6FDE               	movwf	(fprintf@str+1)& (0+255),b
  8511  0034C6  0E8E               	movlw	low _lt
  8512  0034C8  6FDF               	movwf	(?_fprintf+4)& (0+255),b
  8513  0034CA  0E01               	movlw	high _lt
  8514  0034CC  6FE0               	movwf	(?_fprintf+5)& (0+255),b
  8515  0034CE  0E74               	movlw	low _lo
  8516  0034D0  6FE1               	movwf	(?_fprintf+6)& (0+255),b
  8517  0034D2  0E01               	movlw	high _lo
  8518  0034D4  6FE2               	movwf	(?_fprintf+7)& (0+255),b
  8519  0034D6  EC92  F009         	call	_fprintf	;wreg free
  8520                           
  8521                           ; BSR set to: 2
  8522                           ;SDCard.c: 243: fprintf(&fil, "h%s;dN/A;", hora);
  8523  0034DA  0E58               	movlw	low _fil
  8524  0034DC  0100               	movlb	0	; () banked
  8525  0034DE  6FDB               	movwf	fprintf@fil& (0+255),b
  8526  0034E0  0E01               	movlw	high _fil
  8527  0034E2  6FDC               	movwf	(fprintf@fil+1)& (0+255),b
  8528  0034E4  0EF6               	movlw	low STR_17
  8529  0034E6  6FDD               	movwf	fprintf@str& (0+255),b
  8530  0034E8  0E61               	movlw	high STR_17
  8531  0034EA  6FDE               	movwf	(fprintf@str+1)& (0+255),b
  8532  0034EC  0ECB               	movlw	low _hora
  8533  0034EE  6FDF               	movwf	(?_fprintf+4)& (0+255),b
  8534  0034F0  0E01               	movlw	high _hora
  8535  0034F2  6FE0               	movwf	(?_fprintf+5)& (0+255),b
  8536  0034F4  EC92  F009         	call	_fprintf	;wreg free
  8537                           
  8538                           ; BSR set to: 2
  8539                           ;SDCard.c: 244: fprintf(&fil, "f%s;\n", fence);
  8540  0034F8  0E58               	movlw	low _fil
  8541  0034FA  0100               	movlb	0	; () banked
  8542  0034FC  6FDB               	movwf	fprintf@fil& (0+255),b
  8543  0034FE  0E01               	movlw	high _fil
  8544  003500  6FDC               	movwf	(fprintf@fil+1)& (0+255),b
  8545  003502  0E4D               	movlw	low STR_18
  8546  003504  6FDD               	movwf	fprintf@str& (0+255),b
  8547  003506  0E62               	movlw	high STR_18
  8548  003508  6FDE               	movwf	(fprintf@str+1)& (0+255),b
  8549  00350A  0EBD               	movlw	low _fence
  8550  00350C  6FDF               	movwf	(?_fprintf+4)& (0+255),b
  8551  00350E  0E01               	movlw	high _fence
  8552  003510  6FE0               	movwf	(?_fprintf+5)& (0+255),b
  8553  003512  EC92  F009         	call	_fprintf	;wreg free
  8554  003516                     l12484:
  8555                           
  8556                           ;SDCard.c: 247: f_close(&fil);
  8557  003516  0E58               	movlw	low _fil
  8558  003518  0100               	movlb	0	; () banked
  8559  00351A  6F94               	movwf	f_close@fp& (0+255),b
  8560  00351C  0E01               	movlw	high _fil
  8561  00351E  6F95               	movwf	(f_close@fp+1)& (0+255),b
  8562  003520  EC56  F02B         	call	_f_close	;wreg free
  8563                           
  8564                           ;SDCard.c: 248: }
  8565  003524  0012               	return	
  8566  003526                     l12486:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;SDCard.c: 249: else;SDCard.c: 250: {;SDCard.c: 251: f_open(&fil, filename, 0x08 );
  8570  003526  0E58               	movlw	low _fil
  8571  003528  6FC1               	movwf	f_open@fp& (0+255),b
  8572  00352A  0E01               	movlw	high _fil
  8573  00352C  6FC2               	movwf	(f_open@fp+1)& (0+255),b
  8574  00352E  0EA5               	movlw	low _filename
  8575  003530  6FC3               	movwf	f_open@path& (0+255),b
  8576  003532  0E02               	movlw	high _filename
  8577  003534  6FC4               	movwf	(f_open@path+1)& (0+255),b
  8578  003536  0E08               	movlw	8
  8579  003538  6FC5               	movwf	f_open@mode& (0+255),b
  8580  00353A  EC52  F00B         	call	_f_open	;wreg free
  8581  00353E  D7EB               	goto	l12484
  8582  003540                     __end_of_escrita_sdcard:
  8583                           	callstack 0
  8584                           
  8585 ;; *************** function _strcpy *****************
  8586 ;; Defined at:
  8587 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  to              2   27[COMRAM] PTR unsigned char 
  8590 ;;		 -> verifica_dados_operacionais@dados_vel(18), verifica_dados_operacionais@dados_long(36), verifica_dados_operaciona
      +is@dados_lat(33), verifica_dados_operacionais@dados_data(18), 
  8591 ;;		 -> verifica_dados_operacionais@dados_hora(18), filename(20), 
  8592 ;;  from            2   29[COMRAM] PTR const unsigned char 
  8593 ;;		 -> NULL(0), STR_13(7), rawDate(7), rawSpeed(6), 
  8594 ;;		 -> rawLongitude(13), rawLatitude(12), rawTime(11), 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  cp              2   31[COMRAM] PTR unsigned char 
  8597 ;;		 -> verifica_dados_operacionais@dados_vel(18), verifica_dados_operacionais@dados_long(36), verifica_dados_operaciona
      +is@dados_lat(33), verifica_dados_operacionais@dados_data(18), 
  8598 ;;		 -> verifica_dados_operacionais@dados_hora(18), filename(20), 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  2   27[COMRAM] PTR unsigned char 
  8601 ;; Registers used:
  8602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8603 ;; Tracked objects:
  8604 ;;		On entry : 3E/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8608 ;;      Params:         4       0       0       0       0       0       0       0       0
  8609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8611 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8612 ;;Total ram usage:        6 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    3
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		_escrita_sdcard
  8619 ;;		_verifica_dados_operacionais
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text52
  8624  00536E                     __ptext52:
  8625                           	callstack 0
  8626  00536E                     _strcpy:
  8627                           	callstack 25
  8628                           
  8629                           ;incstack = 0
  8630  00536E  C01C  F020         	movff	strcpy@to,strcpy@cp
  8631  005372  C01D  F021         	movff	strcpy@to+1,strcpy@cp+1
  8632  005376  D004               	goto	l11936
  8633  005378                     l11934:
  8634  005378  4A20               	infsnz	strcpy@cp^0,f,c
  8635  00537A  2A21               	incf	(strcpy@cp+1)^0,f,c
  8636  00537C  4A1E               	infsnz	strcpy@from^0,f,c
  8637  00537E  2A1F               	incf	(strcpy@from+1)^0,f,c
  8638  005380                     l11936:
  8639  005380  C01E  FFF6         	movff	strcpy@from,tblptrl
  8640  005384  C01F  FFF7         	movff	strcpy@from+1,tblptrh
  8641  005388  6AF8               	clrf	tblptru,c
  8642  00538A  C020  FFD9         	movff	strcpy@cp,fsr2l
  8643  00538E  C021  FFDA         	movff	strcpy@cp+1,fsr2h
  8644  005392  0E07               	movlw	(high __ramtop+-1)
  8645  005394  64F7               	cpfsgt	tblptrh,c
  8646  005396  D003               	bra	u14307
  8647  005398  0008               	tblrd		*
  8648  00539A  50F5               	movf	tablat,w,c
  8649  00539C  D005               	bra	u14300
  8650  00539E                     u14307:
  8651  00539E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8652  0053A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8653  0053A6  50E7               	movf	indf1,w,c
  8654  0053A8                     u14300:
  8655  0053A8  6EDF               	movwf	indf2,c
  8656  0053AA  50DF               	movf	indf2,w,c
  8657  0053AC  B4D8               	btfsc	status,2,c
  8658  0053AE  0012               	return	
  8659  0053B0  D7E3               	goto	l11934
  8660  0053B2                     __end_of_strcpy:
  8661                           	callstack 0
  8662                           
  8663 ;; *************** function _strcat *****************
  8664 ;; Defined at:
  8665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  to              2   25[COMRAM] PTR unsigned char 
  8668 ;;		 -> filename(20), 
  8669 ;;  from            2   27[COMRAM] PTR const unsigned char 
  8670 ;;		 -> STR_14(5), 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  cp              2   29[COMRAM] PTR unsigned char 
  8673 ;;		 -> filename(20), 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2   25[COMRAM] PTR unsigned char 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/1
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8683 ;;      Params:         4       0       0       0       0       0       0       0       0
  8684 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8686 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8687 ;;Total ram usage:        6 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    3
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_escrita_sdcard
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text53
  8698  0053B2                     __ptext53:
  8699                           	callstack 0
  8700  0053B2                     _strcat:
  8701                           	callstack 23
  8702                           
  8703                           ;incstack = 0
  8704  0053B2  C01A  F01E         	movff	strcat@to,strcat@cp
  8705  0053B6  C01B  F01F         	movff	strcat@to+1,strcat@cp+1
  8706  0053BA  D002               	goto	l11942
  8707  0053BC                     l11940:
  8708  0053BC  4A1E               	infsnz	strcat@cp^0,f,c
  8709  0053BE  2A1F               	incf	(strcat@cp+1)^0,f,c
  8710  0053C0                     l11942:
  8711  0053C0  C01E  FFD9         	movff	strcat@cp,fsr2l
  8712  0053C4  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  8713  0053C8  50DF               	movf	indf2,w,c
  8714  0053CA  B4D8               	btfsc	status,2,c
  8715  0053CC  D005               	goto	l11946
  8716  0053CE  D7F6               	goto	l11940
  8717  0053D0                     l11944:
  8718  0053D0  4A1E               	infsnz	strcat@cp^0,f,c
  8719  0053D2  2A1F               	incf	(strcat@cp+1)^0,f,c
  8720  0053D4  4A1C               	infsnz	strcat@from^0,f,c
  8721  0053D6  2A1D               	incf	(strcat@from+1)^0,f,c
  8722  0053D8                     l11946:
  8723  0053D8  C01C  FFF6         	movff	strcat@from,tblptrl
  8724  0053DC  C01D  FFF7         	movff	strcat@from+1,tblptrh
  8725  0053E0                     	if	0	;tblptru may be non-zero
  8726  0053E0                     	endif
  8727  0053E0                     	if	0	;tblptru may be non-zero
  8728  0053E0                     	endif
  8729  0053E0  C01E  FFD9         	movff	strcat@cp,fsr2l
  8730  0053E4  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  8731  0053E8  0008               	tblrd		*
  8732  0053EA  CFF5 FFDF          	movff	tablat,indf2
  8733  0053EE  50DF               	movf	indf2,w,c
  8734  0053F0  B4D8               	btfsc	status,2,c
  8735  0053F2  0012               	return	
  8736  0053F4  D7ED               	goto	l11944
  8737  0053F6                     __end_of_strcat:
  8738                           	callstack 0
  8739                           
  8740 ;; *************** function _fprintf *****************
  8741 ;; Defined at:
  8742 ;;		line 1816 in file "bibliotecas/tff.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  fil             2  123[BANK0 ] PTR struct _FIL
  8745 ;;		 -> fil(28), 
  8746 ;;  str             2  125[BANK0 ] PTR const unsigned char 
  8747 ;;		 -> STR_18(6), STR_17(10), STR_16(11), STR_15(15), 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  s              16    0[BANK2 ] unsigned char [16]
  8750 ;;  val             4   24[BANK2 ] unsigned long 
  8751 ;;  i               2   31[BANK2 ] int 
  8752 ;;  cc              2   29[BANK2 ] int 
  8753 ;;  w               2   20[BANK2 ] int 
  8754 ;;  res             2   16[BANK2 ] int 
  8755 ;;  c               1   33[BANK2 ] unsigned char 
  8756 ;;  arp             1   28[BANK2 ] PTR void [1]
  8757 ;;		 -> ?_fprintf(2), 
  8758 ;;  r               1   23[BANK2 ] unsigned char 
  8759 ;;  f               1   22[BANK2 ] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  2  123[BANK0 ] int 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 3F/0
  8766 ;;		On exit  : 3F/2
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8769 ;;      Params:         0      10       0       0       0       0       0       0       0
  8770 ;;      Locals:         0       0       0      34       0       0       0       0       0
  8771 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8772 ;;      Totals:         0      12       0      34       0       0       0       0       0
  8773 ;;Total ram usage:       46 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:   14
  8776 ;; This function calls:
  8777 ;;		___lldiv
  8778 ;;		___llmod
  8779 ;;		___wmul
  8780 ;;		_fputc
  8781 ;;		_fputs
  8782 ;; This function is called by:
  8783 ;;		_escrita_sdcard
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text54
  8788  001324                     __ptext54:
  8789                           	callstack 0
  8790  001324                     _fprintf:
  8791                           	callstack 12
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  8795                           
  8796                           ;incstack = 0
  8797  001324  0EDF               	movlw	low (?_fprintf+4)
  8798  001326  0102               	movlb	2	; () banked
  8799  001328  6FD5               	movwf	fprintf@arp& (0+255),b
  8800                           
  8801                           ; BSR set to: 2
  8802                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  8803  00132A  0E00               	movlw	0
  8804  00132C  6FCA               	movwf	(fprintf@res+1)& (0+255),b
  8805  00132E  0E00               	movlw	0
  8806  001330  6FC9               	movwf	fprintf@res& (0+255),b
  8807  001332  C2C9  F2D6         	movff	fprintf@res,fprintf@cc
  8808  001336  C2CA  F2D7         	movff	fprintf@res+1,fprintf@cc+1
  8809  00133A                     l12032:
  8810                           
  8811                           ; BSR set to: 2
  8812  00133A  29D6               	incf	fprintf@cc& (0+255),w,b
  8813  00133C  E103               	bnz	l12036
  8814  00133E  29D7               	incf	(fprintf@cc+1)& (0+255),w,b
  8815  001340  B4D8               	btfsc	status,2,c
  8816  001342  0012               	return	
  8817  001344                     l12036:
  8818                           
  8819                           ; BSR set to: 2
  8820                           ;tff.c: 1832: c = *str++;
  8821  001344  C0DD  FFF6         	movff	fprintf@str,tblptrl
  8822  001348  C0DE  FFF7         	movff	fprintf@str+1,tblptrh
  8823  00134C                     	if	0	;tblptru may be non-zero
  8824  00134C                     	endif
  8825  00134C                     	if	0	;tblptru may be non-zero
  8826  00134C                     	endif
  8827  00134C  0008               	tblrd		*
  8828  00134E  CFF5 F2DA          	movff	tablat,fprintf@c
  8829                           
  8830                           ; BSR set to: 2
  8831  001352  0100               	movlb	0	; () banked
  8832  001354  4BDD               	infsnz	fprintf@str& (0+255),f,b
  8833  001356  2BDE               	incf	(fprintf@str+1)& (0+255),f,b
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;tff.c: 1833: if (c == 0) break;
  8837  001358  0102               	movlb	2	; () banked
  8838  00135A  51DA               	movf	fprintf@c& (0+255),w,b
  8839  00135C  B4D8               	btfsc	status,2,c
  8840  00135E  0012               	return	
  8841                           
  8842                           ; BSR set to: 2
  8843                           ;tff.c: 1834: if (c != '%') {
  8844  001360  0E25               	movlw	37
  8845  001362  19DA               	xorwf	fprintf@c& (0+255),w,b
  8846  001364  B4D8               	btfsc	status,2,c
  8847  001366  D019               	goto	l12052
  8848                           
  8849                           ; BSR set to: 2
  8850                           ;tff.c: 1835: cc = fputc(c, fil);
  8851  001368  C2DA  F0CD         	movff	fprintf@c,fputc@chr
  8852  00136C  0100               	movlb	0	; () banked
  8853  00136E  6BCE               	clrf	(fputc@chr+1)& (0+255),b
  8854  001370  C0DB  F0CF         	movff	fprintf@fil,fputc@fil
  8855  001374  C0DC  F0D0         	movff	fprintf@fil+1,fputc@fil+1
  8856  001378  EC5F  F02A         	call	_fputc	;wreg free
  8857  00137C  C0CD  F2D6         	movff	?_fputc,fprintf@cc
  8858  001380  C0CE  F2D7         	movff	?_fputc+1,fprintf@cc+1
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;tff.c: 1836: if (cc != -1) cc = 1;
  8862  001384  0102               	movlb	2	; () banked
  8863  001386  29D6               	incf	fprintf@cc& (0+255),w,b
  8864  001388  E103               	bnz	u14560
  8865  00138A  29D7               	incf	(fprintf@cc+1)& (0+255),w,b
  8866  00138C  B4D8               	btfsc	status,2,c
  8867  00138E  D184               	goto	l12176
  8868  001390                     u14560:
  8869                           
  8870                           ; BSR set to: 2
  8871  001390  0E00               	movlw	0
  8872  001392  6FD7               	movwf	(fprintf@cc+1)& (0+255),b
  8873  001394  0E01               	movlw	1
  8874  001396  6FD6               	movwf	fprintf@cc& (0+255),b
  8875  001398  D17F               	goto	l12176
  8876  00139A                     l12052:
  8877                           
  8878                           ; BSR set to: 2
  8879                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  8880  00139A  0E00               	movlw	0
  8881  00139C  6FCF               	movwf	fprintf@f& (0+255),b
  8882  00139E  C2CF  F2CD         	movff	fprintf@f,fprintf@w
  8883  0013A2  6BCE               	clrf	(fprintf@w+1)& (0+255),b
  8884                           
  8885                           ; BSR set to: 2
  8886                           ;tff.c: 1840: c = *str++;
  8887  0013A4  C0DD  FFF6         	movff	fprintf@str,tblptrl
  8888  0013A8  C0DE  FFF7         	movff	fprintf@str+1,tblptrh
  8889  0013AC                     	if	0	;tblptru may be non-zero
  8890  0013AC                     	endif
  8891  0013AC                     	if	0	;tblptru may be non-zero
  8892  0013AC                     	endif
  8893  0013AC  0008               	tblrd		*
  8894  0013AE  CFF5 F2DA          	movff	tablat,fprintf@c
  8895                           
  8896                           ; BSR set to: 2
  8897  0013B2  0100               	movlb	0	; () banked
  8898  0013B4  4BDD               	infsnz	fprintf@str& (0+255),f,b
  8899  0013B6  2BDE               	incf	(fprintf@str+1)& (0+255),f,b
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;tff.c: 1841: if (c == '0') {
  8903  0013B8  0E30               	movlw	48
  8904  0013BA  0102               	movlb	2	; () banked
  8905  0013BC  19DA               	xorwf	fprintf@c& (0+255),w,b
  8906  0013BE  A4D8               	btfss	status,2,c
  8907  0013C0  D023               	goto	l12072
  8908                           
  8909                           ; BSR set to: 2
  8910                           ;tff.c: 1842: f = 1; c = *str++;
  8911  0013C2  0E01               	movlw	1
  8912  0013C4  6FCF               	movwf	fprintf@f& (0+255),b
  8913  0013C6                     l12062:
  8914                           
  8915                           ; BSR set to: 2
  8916  0013C6  C0DD  FFF6         	movff	fprintf@str,tblptrl
  8917  0013CA  C0DE  FFF7         	movff	fprintf@str+1,tblptrh
  8918  0013CE                     	if	0	;tblptru may be non-zero
  8919  0013CE                     	endif
  8920  0013CE                     	if	0	;tblptru may be non-zero
  8921  0013CE                     	endif
  8922  0013CE  0008               	tblrd		*
  8923  0013D0  CFF5 F2DA          	movff	tablat,fprintf@c
  8924                           
  8925                           ; BSR set to: 2
  8926  0013D4  0100               	movlb	0	; () banked
  8927  0013D6  4BDD               	infsnz	fprintf@str& (0+255),f,b
  8928  0013D8  2BDE               	incf	(fprintf@str+1)& (0+255),f,b
  8929  0013DA  D016               	goto	l12072
  8930  0013DC                     l12066:
  8931                           
  8932                           ; BSR set to: 2
  8933                           ;tff.c: 1845: w = w * 10 + (c - '0');
  8934  0013DC  C2CD  F01A         	movff	fprintf@w,___wmul@multiplier
  8935  0013E0  C2CE  F01B         	movff	fprintf@w+1,___wmul@multiplier+1
  8936  0013E4  0E00               	movlw	0
  8937  0013E6  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  8938  0013E8  0E0A               	movlw	10
  8939  0013EA  6E1C               	movwf	___wmul@multiplicand^0,c
  8940  0013EC  ECA6  F02B         	call	___wmul	;wreg free
  8941  0013F0  0102               	movlb	2	; () banked
  8942  0013F2  51DA               	movf	fprintf@c& (0+255),w,b
  8943  0013F4  261A               	addwf	?___wmul^0,f,c
  8944  0013F6  0E00               	movlw	0
  8945  0013F8  221B               	addwfc	(?___wmul+1)^0,f,c
  8946  0013FA  0ED0               	movlw	208
  8947  0013FC  241A               	addwf	?___wmul^0,w,c
  8948  0013FE  6FCD               	movwf	fprintf@w& (0+255),b
  8949  001400  0EFF               	movlw	255
  8950  001402  201B               	addwfc	(?___wmul+1)^0,w,c
  8951  001404  6FCE               	movwf	(fprintf@w+1)& (0+255),b
  8952  001406  D7DF               	goto	l12062
  8953  001408                     l12072:
  8954  001408  0E2F               	movlw	47
  8955  00140A  0102               	movlb	2	; () banked
  8956  00140C  65DA               	cpfsgt	fprintf@c& (0+255),b
  8957  00140E  D003               	goto	u14590
  8958                           
  8959                           ; BSR set to: 2
  8960  001410  0E39               	movlw	57
  8961  001412  65DA               	cpfsgt	fprintf@c& (0+255),b
  8962  001414  D7E3               	goto	l12066
  8963  001416                     u14590:
  8964                           
  8965                           ; BSR set to: 2
  8966                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  8967  001416  0E6C               	movlw	108
  8968  001418  19DA               	xorwf	fprintf@c& (0+255),w,b
  8969  00141A  A4D8               	btfss	status,2,c
  8970  00141C  D00B               	goto	l12084
  8971                           
  8972                           ; BSR set to: 2
  8973                           ;tff.c: 1849: f |= 2; c = *str++;
  8974  00141E  83CF               	bsf	fprintf@f& (0+255),1,b
  8975                           
  8976                           ; BSR set to: 2
  8977  001420  C0DD  FFF6         	movff	fprintf@str,tblptrl
  8978  001424  C0DE  FFF7         	movff	fprintf@str+1,tblptrh
  8979  001428                     	if	0	;tblptru may be non-zero
  8980  001428                     	endif
  8981  001428                     	if	0	;tblptru may be non-zero
  8982  001428                     	endif
  8983  001428  0008               	tblrd		*
  8984  00142A  CFF5 F2DA          	movff	tablat,fprintf@c
  8985                           
  8986                           ; BSR set to: 2
  8987  00142E  0100               	movlb	0	; () banked
  8988  001430  4BDD               	infsnz	fprintf@str& (0+255),f,b
  8989  001432  2BDE               	incf	(fprintf@str+1)& (0+255),f,b
  8990  001434                     l12084:
  8991                           
  8992                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  8993  001434  0E73               	movlw	115
  8994  001436  0102               	movlb	2	; () banked
  8995  001438  19DA               	xorwf	fprintf@c& (0+255),w,b
  8996  00143A  A4D8               	btfss	status,2,c
  8997  00143C  D015               	goto	l12090
  8998                           
  8999                           ; BSR set to: 2
  9000                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9001  00143E  51D5               	movf	fprintf@arp& (0+255),w,b
  9002  001440  6ED9               	movwf	fsr2l,c
  9003  001442  6ADA               	clrf	fsr2h,c
  9004  001444  CFDE F0D4          	movff	postinc2,fputs@str
  9005  001448  CFDD F0D5          	movff	postdec2,fputs@str+1
  9006  00144C  C0DB  F0D6         	movff	fprintf@fil,fputs@fil
  9007  001450  C0DC  F0D7         	movff	fprintf@fil+1,fputs@fil+1
  9008  001454  ECAA  F027         	call	_fputs	;wreg free
  9009  001458  C0D4  F2D6         	movff	?_fputs,fprintf@cc
  9010  00145C  C0D5  F2D7         	movff	?_fputs+1,fprintf@cc+1
  9011                           
  9012                           ; BSR set to: 0
  9013  001460  0E02               	movlw	2
  9014  001462  0102               	movlb	2	; () banked
  9015  001464  27D5               	addwf	fprintf@arp& (0+255),f,b
  9016                           
  9017                           ;tff.c: 1853: continue;
  9018  001466  D118               	goto	l12176
  9019  001468                     l12090:
  9020                           
  9021                           ; BSR set to: 2
  9022                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9023  001468  0E63               	movlw	99
  9024  00146A  19DA               	xorwf	fprintf@c& (0+255),w,b
  9025  00146C  A4D8               	btfss	status,2,c
  9026  00146E  D01D               	goto	l12100
  9027                           
  9028                           ; BSR set to: 2
  9029                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9030  001470  51D5               	movf	fprintf@arp& (0+255),w,b
  9031  001472  6ED9               	movwf	fsr2l,c
  9032  001474  6ADA               	clrf	fsr2h,c
  9033  001476  50DF               	movf	indf2,w,c
  9034  001478  0100               	movlb	0	; () banked
  9035  00147A  6FE5               	movwf	??_fprintf& (0+255),b
  9036  00147C  51E5               	movf	??_fprintf& (0+255),w,b
  9037  00147E  6FCD               	movwf	fputc@chr& (0+255),b
  9038  001480  6BCE               	clrf	(fputc@chr+1)& (0+255),b
  9039  001482  C0DB  F0CF         	movff	fprintf@fil,fputc@fil
  9040  001486  C0DC  F0D0         	movff	fprintf@fil+1,fputc@fil+1
  9041  00148A  EC5F  F02A         	call	_fputc	;wreg free
  9042  00148E  C0CD  F2D6         	movff	?_fputc,fprintf@cc
  9043  001492  C0CE  F2D7         	movff	?_fputc+1,fprintf@cc+1
  9044                           
  9045                           ; BSR set to: 0
  9046  001496  0E02               	movlw	2
  9047  001498  0102               	movlb	2	; () banked
  9048  00149A  27D5               	addwf	fprintf@arp& (0+255),f,b
  9049                           
  9050                           ; BSR set to: 2
  9051                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9052  00149C  29D6               	incf	fprintf@cc& (0+255),w,b
  9053  00149E  E104               	bnz	u14630
  9054  0014A0  29D7               	incf	(fprintf@cc+1)& (0+255),w,b
  9055  0014A2  A4D8               	btfss	status,2,c
  9056  0014A4  D775               	goto	u14560
  9057  0014A6  D0F8               	goto	l12176
  9058  0014A8                     u14630:
  9059  0014A8  D773               	goto	u14560
  9060  0014AA                     l12100:
  9061                           
  9062                           ; BSR set to: 2
  9063                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9064  0014AA  0E00               	movlw	0
  9065  0014AC  6FD0               	movwf	fprintf@r& (0+255),b
  9066                           
  9067                           ; BSR set to: 2
  9068                           ;tff.c: 1861: if (c == 'd') r = 10;
  9069  0014AE  0E64               	movlw	100
  9070  0014B0  19DA               	xorwf	fprintf@c& (0+255),w,b
  9071  0014B2  A4D8               	btfss	status,2,c
  9072  0014B4  D002               	goto	l12106
  9073                           
  9074                           ; BSR set to: 2
  9075  0014B6  0E0A               	movlw	10
  9076  0014B8  6FD0               	movwf	fprintf@r& (0+255),b
  9077  0014BA                     l12106:
  9078                           
  9079                           ; BSR set to: 2
  9080                           ;tff.c: 1862: if (c == 'u') r = 10;
  9081  0014BA  0E75               	movlw	117
  9082  0014BC  19DA               	xorwf	fprintf@c& (0+255),w,b
  9083  0014BE  A4D8               	btfss	status,2,c
  9084  0014C0  D002               	goto	l12110
  9085                           
  9086                           ; BSR set to: 2
  9087  0014C2  0E0A               	movlw	10
  9088  0014C4  6FD0               	movwf	fprintf@r& (0+255),b
  9089  0014C6                     l12110:
  9090                           
  9091                           ; BSR set to: 2
  9092                           ;tff.c: 1863: if (c == 'X') r = 16;
  9093  0014C6  0E58               	movlw	88
  9094  0014C8  19DA               	xorwf	fprintf@c& (0+255),w,b
  9095  0014CA  A4D8               	btfss	status,2,c
  9096  0014CC  D002               	goto	l1210
  9097                           
  9098                           ; BSR set to: 2
  9099  0014CE  0E10               	movlw	16
  9100  0014D0  6FD0               	movwf	fprintf@r& (0+255),b
  9101  0014D2                     l1210:
  9102                           
  9103                           ; BSR set to: 2
  9104                           ;tff.c: 1864: if (r == 0) break;
  9105  0014D2  51D0               	movf	fprintf@r& (0+255),w,b
  9106  0014D4  B4D8               	btfsc	status,2,c
  9107  0014D6  0012               	return	
  9108                           
  9109                           ; BSR set to: 2
  9110                           ;tff.c: 1865: if (f & 2) {
  9111  0014D8  A3CF               	btfss	fprintf@f& (0+255),1,b
  9112  0014DA  D00D               	goto	l12120
  9113                           
  9114                           ; BSR set to: 2
  9115                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9116  0014DC  51D5               	movf	fprintf@arp& (0+255),w,b
  9117  0014DE  6ED9               	movwf	fsr2l,c
  9118  0014E0  6ADA               	clrf	fsr2h,c
  9119  0014E2  CFDE F2D1          	movff	postinc2,fprintf@val
  9120  0014E6  CFDE F2D2          	movff	postinc2,fprintf@val+1
  9121  0014EA  CFDE F2D3          	movff	postinc2,fprintf@val+2
  9122  0014EE  CFDE F2D4          	movff	postinc2,fprintf@val+3
  9123                           
  9124                           ; BSR set to: 2
  9125  0014F2  0E04               	movlw	4
  9126  0014F4  D01F               	goto	L1
  9127  0014F6                     l12120:
  9128                           
  9129                           ; BSR set to: 2
  9130                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9131  0014F6  0E64               	movlw	100
  9132  0014F8  19DA               	xorwf	fprintf@c& (0+255),w,b
  9133  0014FA  B4D8               	btfsc	status,2,c
  9134  0014FC  D00E               	goto	l12126
  9135                           
  9136                           ; BSR set to: 2
  9137  0014FE  51D5               	movf	fprintf@arp& (0+255),w,b
  9138  001500  6ED9               	movwf	fsr2l,c
  9139  001502  6ADA               	clrf	fsr2h,c
  9140  001504  CFDE F0E5          	movff	postinc2,??_fprintf
  9141  001508  CFDD F0E6          	movff	postdec2,??_fprintf+1
  9142  00150C  C0E5  F2D1         	movff	??_fprintf,fprintf@val
  9143  001510  C0E6  F2D2         	movff	??_fprintf+1,fprintf@val+1
  9144  001514  6BD3               	clrf	(fprintf@val+2)& (0+255),b
  9145  001516  6BD4               	clrf	(fprintf@val+3)& (0+255),b
  9146  001518  D00C               	goto	l12128
  9147  00151A                     l12126:
  9148                           
  9149                           ; BSR set to: 2
  9150  00151A  51D5               	movf	fprintf@arp& (0+255),w,b
  9151  00151C  6ED9               	movwf	fsr2l,c
  9152  00151E  6ADA               	clrf	fsr2h,c
  9153  001520  CFDE F2D1          	movff	postinc2,fprintf@val
  9154  001524  CFDD F2D2          	movff	postdec2,fprintf@val+1
  9155  001528  0E00               	movlw	0
  9156  00152A  BFD2               	btfsc	(fprintf@val+1)& (0+255),7,b
  9157  00152C  0EFF               	movlw	-1
  9158  00152E  6FD3               	movwf	(fprintf@val+2)& (0+255),b
  9159  001530  6FD4               	movwf	(fprintf@val+3)& (0+255),b
  9160  001532                     l12128:
  9161                           
  9162                           ; BSR set to: 2
  9163  001532  0E02               	movlw	2
  9164  001534                     L1:
  9165  001534  27D5               	addwf	fprintf@arp& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 2
  9168                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9169  001536  0E64               	movlw	100
  9170  001538  19DA               	xorwf	fprintf@c& (0+255),w,b
  9171  00153A  A4D8               	btfss	status,2,c
  9172  00153C  D00E               	goto	l12138
  9173                           
  9174                           ; BSR set to: 2
  9175                           ;tff.c: 1872: if (val >= 0x80000000) {
  9176  00153E  0E80               	movlw	128
  9177  001540  5DD4               	subwf	(fprintf@val+3)& (0+255),w,b
  9178  001542  A0D8               	btfss	status,0,c
  9179  001544  D00A               	goto	l12138
  9180                           
  9181                           ; BSR set to: 2
  9182                           ;tff.c: 1873: val = 0 - val;
  9183  001546  6DD1               	negf	fprintf@val& (0+255),b
  9184  001548  1FD2               	comf	(fprintf@val+1)& (0+255),f,b
  9185  00154A  B0D8               	btfsc	status,0,c
  9186  00154C  2BD2               	incf	(fprintf@val+1)& (0+255),f,b
  9187  00154E  1FD3               	comf	(fprintf@val+2)& (0+255),f,b
  9188  001550  B0D8               	btfsc	status,0,c
  9189  001552  2BD3               	incf	(fprintf@val+2)& (0+255),f,b
  9190  001554  0E00               	movlw	0
  9191  001556  57D4               	subfwb	(fprintf@val+3)& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 2
  9194                           ;tff.c: 1874: f |= 4;
  9195  001558  85CF               	bsf	fprintf@f& (0+255),2,b
  9196  00155A                     l12138:
  9197                           
  9198                           ; BSR set to: 2
  9199                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9200  00155A  0E00               	movlw	0
  9201  00155C  6FD9               	movwf	(fprintf@i+1)& (0+255),b
  9202  00155E  0E0F               	movlw	15
  9203  001560  6FD8               	movwf	fprintf@i& (0+255),b
  9204                           
  9205                           ; BSR set to: 2
  9206  001562  0E00               	movlw	0
  9207  001564  6FC8               	movwf	(fprintf@s+15)& (0+255),b
  9208  001566                     l12142:
  9209                           
  9210                           ; BSR set to: 2
  9211                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9212  001566  C2D1  F01A         	movff	fprintf@val,___llmod@dividend
  9213  00156A  C2D2  F01B         	movff	fprintf@val+1,___llmod@dividend+1
  9214  00156E  C2D3  F01C         	movff	fprintf@val+2,___llmod@dividend+2
  9215  001572  C2D4  F01D         	movff	fprintf@val+3,___llmod@dividend+3
  9216  001576  51D0               	movf	fprintf@r& (0+255),w,b
  9217  001578  6E1E               	movwf	___llmod@divisor^0,c
  9218  00157A  6A1F               	clrf	(___llmod@divisor+1)^0,c
  9219  00157C  6A20               	clrf	(___llmod@divisor+2)^0,c
  9220  00157E  6A21               	clrf	(___llmod@divisor+3)^0,c
  9221  001580  ECBC  F026         	call	___llmod	;wreg free
  9222  001584  501A               	movf	?___llmod^0,w,c
  9223  001586  0F30               	addlw	48
  9224  001588  0102               	movlb	2	; () banked
  9225  00158A  6FDA               	movwf	fprintf@c& (0+255),b
  9226                           
  9227                           ; BSR set to: 2
  9228                           ;tff.c: 1880: if (c > '9') c += 7;
  9229  00158C  0E39               	movlw	57
  9230  00158E  65DA               	cpfsgt	fprintf@c& (0+255),b
  9231  001590  D002               	goto	l12148
  9232                           
  9233                           ; BSR set to: 2
  9234  001592  0E07               	movlw	7
  9235  001594  27DA               	addwf	fprintf@c& (0+255),f,b
  9236  001596                     l12148:
  9237                           
  9238                           ; BSR set to: 2
  9239                           ;tff.c: 1881: s[--i] = c;
  9240  001596  07D8               	decf	fprintf@i& (0+255),f,b
  9241  001598  A0D8               	btfss	status,0,c
  9242  00159A  07D9               	decf	(fprintf@i+1)& (0+255),f,b
  9243  00159C  0EB9               	movlw	low fprintf@s
  9244  00159E  25D8               	addwf	fprintf@i& (0+255),w,b
  9245  0015A0  6ED9               	movwf	fsr2l,c
  9246  0015A2  0E02               	movlw	high fprintf@s
  9247  0015A4  21D9               	addwfc	(fprintf@i+1)& (0+255),w,b
  9248  0015A6  6EDA               	movwf	fsr2h,c
  9249  0015A8  C2DA  FFDF         	movff	fprintf@c,indf2
  9250                           
  9251                           ; BSR set to: 2
  9252                           ;tff.c: 1882: val /= r;
  9253  0015AC  C2D1  F01A         	movff	fprintf@val,___lldiv@dividend
  9254  0015B0  C2D2  F01B         	movff	fprintf@val+1,___lldiv@dividend+1
  9255  0015B4  C2D3  F01C         	movff	fprintf@val+2,___lldiv@dividend+2
  9256  0015B8  C2D4  F01D         	movff	fprintf@val+3,___lldiv@dividend+3
  9257  0015BC  51D0               	movf	fprintf@r& (0+255),w,b
  9258  0015BE  6E1E               	movwf	___lldiv@divisor^0,c
  9259  0015C0  6A1F               	clrf	(___lldiv@divisor+1)^0,c
  9260  0015C2  6A20               	clrf	(___lldiv@divisor+2)^0,c
  9261  0015C4  6A21               	clrf	(___lldiv@divisor+3)^0,c
  9262  0015C6  ECE2  F024         	call	___lldiv	;wreg free
  9263  0015CA  C01A  F2D1         	movff	?___lldiv,fprintf@val
  9264  0015CE  C01B  F2D2         	movff	?___lldiv+1,fprintf@val+1
  9265  0015D2  C01C  F2D3         	movff	?___lldiv+2,fprintf@val+2
  9266  0015D6  C01D  F2D4         	movff	?___lldiv+3,fprintf@val+3
  9267                           
  9268                           ;tff.c: 1883: } while (i && val);
  9269  0015DA  0102               	movlb	2	; () banked
  9270  0015DC  51D8               	movf	fprintf@i& (0+255),w,b
  9271  0015DE  11D9               	iorwf	(fprintf@i+1)& (0+255),w,b
  9272  0015E0  B4D8               	btfsc	status,2,c
  9273  0015E2  D006               	goto	u14740
  9274                           
  9275                           ; BSR set to: 2
  9276  0015E4  51D1               	movf	fprintf@val& (0+255),w,b
  9277  0015E6  11D2               	iorwf	(fprintf@val+1)& (0+255),w,b
  9278  0015E8  11D3               	iorwf	(fprintf@val+2)& (0+255),w,b
  9279  0015EA  11D4               	iorwf	(fprintf@val+3)& (0+255),w,b
  9280  0015EC  A4D8               	btfss	status,2,c
  9281  0015EE  D7BB               	goto	l12142
  9282  0015F0                     u14740:
  9283                           
  9284                           ; BSR set to: 2
  9285                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
  9286  0015F0  51D8               	movf	fprintf@i& (0+255),w,b
  9287  0015F2  11D9               	iorwf	(fprintf@i+1)& (0+255),w,b
  9288  0015F4  A4D8               	btfss	status,2,c
  9289                           
  9290                           ; BSR set to: 2
  9291  0015F6  A5CF               	btfss	fprintf@f& (0+255),2,b
  9292  0015F8  D00B               	goto	l12162
  9293                           
  9294                           ; BSR set to: 2
  9295  0015FA  07D8               	decf	fprintf@i& (0+255),f,b
  9296  0015FC  A0D8               	btfss	status,0,c
  9297  0015FE  07D9               	decf	(fprintf@i+1)& (0+255),f,b
  9298  001600  0EB9               	movlw	low fprintf@s
  9299  001602  25D8               	addwf	fprintf@i& (0+255),w,b
  9300  001604  6ED9               	movwf	fsr2l,c
  9301  001606  0E02               	movlw	high fprintf@s
  9302  001608  21D9               	addwfc	(fprintf@i+1)& (0+255),w,b
  9303  00160A  6EDA               	movwf	fsr2h,c
  9304  00160C  0E2D               	movlw	45
  9305  00160E  6EDF               	movwf	indf2,c
  9306  001610                     l12162:
  9307                           
  9308                           ; BSR set to: 2
  9309                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
  9310  001610  51CD               	movf	fprintf@w& (0+255),w,b
  9311  001612  080F               	sublw	15
  9312  001614  6FCD               	movwf	fprintf@w& (0+255),b
  9313  001616  51CE               	movf	(fprintf@w+1)& (0+255),w,b
  9314  001618  A0D8               	btfss	status,0,c
  9315  00161A  2AE8               	incf	wreg,f,c
  9316  00161C  0800               	sublw	0
  9317  00161E  6FCE               	movwf	(fprintf@w+1)& (0+255),b
  9318                           
  9319                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  9320  001620  D016               	goto	l12170
  9321  001622                     l1227:
  9322                           
  9323                           ; BSR set to: 0
  9324  001622  0102               	movlb	2	; () banked
  9325  001624  B1CF               	btfsc	fprintf@f& (0+255),0,b
  9326  001626  D004               	goto	l12166
  9327                           
  9328                           ; BSR set to: 2
  9329  001628  0E00               	movlw	0
  9330  00162A  6FCC               	movwf	(_fprintf$2170+1)& (0+255),b
  9331  00162C  0E20               	movlw	32
  9332  00162E  D003               	goto	L2
  9333  001630                     l12166:
  9334                           
  9335                           ; BSR set to: 2
  9336  001630  0E00               	movlw	0
  9337  001632  6FCC               	movwf	(_fprintf$2170+1)& (0+255),b
  9338  001634  0E30               	movlw	48
  9339  001636                     L2:
  9340  001636  6FCB               	movwf	_fprintf$2170& (0+255),b
  9341                           
  9342                           ; BSR set to: 2
  9343  001638  07D8               	decf	fprintf@i& (0+255),f,b
  9344  00163A  A0D8               	btfss	status,0,c
  9345  00163C  07D9               	decf	(fprintf@i+1)& (0+255),f,b
  9346  00163E  0EB9               	movlw	low fprintf@s
  9347  001640  25D8               	addwf	fprintf@i& (0+255),w,b
  9348  001642  6ED9               	movwf	fsr2l,c
  9349  001644  0E02               	movlw	high fprintf@s
  9350  001646  21D9               	addwfc	(fprintf@i+1)& (0+255),w,b
  9351  001648  6EDA               	movwf	fsr2h,c
  9352  00164A  C2CB  FFDF         	movff	_fprintf$2170,indf2
  9353  00164E                     l12170:
  9354                           
  9355                           ; BSR set to: 2
  9356  00164E  51D8               	movf	fprintf@i& (0+255),w,b
  9357  001650  11D9               	iorwf	(fprintf@i+1)& (0+255),w,b
  9358  001652  B4D8               	btfsc	status,2,c
  9359  001654  D00D               	goto	u14790
  9360                           
  9361                           ; BSR set to: 2
  9362  001656  51D8               	movf	fprintf@i& (0+255),w,b
  9363  001658  5DCD               	subwf	fprintf@w& (0+255),w,b
  9364  00165A  51CE               	movf	(fprintf@w+1)& (0+255),w,b
  9365  00165C  0A80               	xorlw	128
  9366  00165E  0100               	movlb	0	; () banked
  9367  001660  6FE5               	movwf	??_fprintf& (0+255),b
  9368  001662  0102               	movlb	2	; () banked
  9369  001664  51D9               	movf	(fprintf@i+1)& (0+255),w,b
  9370  001666  0A80               	xorlw	128
  9371  001668  0100               	movlb	0	; () banked
  9372  00166A  59E5               	subwfb	??_fprintf& (0+255),w,b
  9373  00166C  A0D8               	btfss	status,0,c
  9374  00166E  D7D9               	goto	l1227
  9375  001670                     u14790:
  9376                           
  9377                           ;tff.c: 1887: cc = fputs(&s[i], fil);
  9378  001670  0EB9               	movlw	low fprintf@s
  9379  001672  0102               	movlb	2	; () banked
  9380  001674  25D8               	addwf	fprintf@i& (0+255),w,b
  9381  001676  0100               	movlb	0	; () banked
  9382  001678  6FD4               	movwf	fputs@str& (0+255),b
  9383  00167A  0E02               	movlw	high fprintf@s
  9384  00167C  0102               	movlb	2	; () banked
  9385  00167E  21D9               	addwfc	(fprintf@i+1)& (0+255),w,b
  9386  001680  0100               	movlb	0	; () banked
  9387  001682  6FD5               	movwf	(fputs@str+1)& (0+255),b
  9388  001684  C0DB  F0D6         	movff	fprintf@fil,fputs@fil
  9389  001688  C0DC  F0D7         	movff	fprintf@fil+1,fputs@fil+1
  9390  00168C  ECAA  F027         	call	_fputs	;wreg free
  9391  001690  C0D4  F2D6         	movff	?_fputs,fprintf@cc
  9392  001694  C0D5  F2D7         	movff	?_fputs+1,fprintf@cc+1
  9393  001698                     l12176:
  9394  001698  0102               	movlb	2	; () banked
  9395  00169A  51D6               	movf	fprintf@cc& (0+255),w,b
  9396  00169C  27C9               	addwf	fprintf@res& (0+255),f,b
  9397  00169E  51D7               	movf	(fprintf@cc+1)& (0+255),w,b
  9398  0016A0  23CA               	addwfc	(fprintf@res+1)& (0+255),f,b
  9399  0016A2  D64B               	goto	l12032
  9400  0016A4                     __end_of_fprintf:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _fputs *****************
  9404 ;; Defined at:
  9405 ;;		line 1796 in file "bibliotecas/tff.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  str             2  116[BANK0 ] PTR const unsigned char 
  9408 ;;		 -> fprintf@s(16), ?_fprintf(2), fence(7), lo(13), 
  9409 ;;		 -> vel(6), lt(12), hora(6), 
  9410 ;;  fil             2  118[BANK0 ] PTR struct _FIL
  9411 ;;		 -> fil(28), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  n               2  121[BANK0 ] int 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  2  116[BANK0 ] int 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 3D/2
  9420 ;;		On exit  : 3F/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9423 ;;      Params:         0       4       0       0       0       0       0       0       0
  9424 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9425 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9426 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9427 ;;Total ram usage:        7 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:   13
  9430 ;; This function calls:
  9431 ;;		_fputc
  9432 ;; This function is called by:
  9433 ;;		_fprintf
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text55
  9438  004F54                     __ptext55:
  9439                           	callstack 0
  9440  004F54                     _fputs:
  9441                           	callstack 12
  9442                           
  9443                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
  9444                           
  9445                           ; BSR set to: 2
  9446                           ;incstack = 0
  9447  004F54  0E00               	movlw	0
  9448  004F56  0100               	movlb	0	; () banked
  9449  004F58  6FDA               	movwf	(fputs@n+1)& (0+255),b
  9450  004F5A  0E00               	movlw	0
  9451  004F5C  6FD9               	movwf	fputs@n& (0+255),b
  9452  004F5E  D01B               	goto	l11636
  9453  004F60                     l11630:
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
  9457  004F60  C0D4  FFD9         	movff	fputs@str,fsr2l
  9458  004F64  C0D5  FFDA         	movff	fputs@str+1,fsr2h
  9459  004F68  50DF               	movf	indf2,w,c
  9460  004F6A  6FD8               	movwf	??_fputs& (0+255),b
  9461  004F6C  51D8               	movf	??_fputs& (0+255),w,b
  9462  004F6E  6FCD               	movwf	fputc@chr& (0+255),b
  9463  004F70  6BCE               	clrf	(fputc@chr+1)& (0+255),b
  9464  004F72  C0D6  F0CF         	movff	fputs@fil,fputc@fil
  9465  004F76  C0D7  F0D0         	movff	fputs@fil+1,fputc@fil+1
  9466  004F7A  EC5F  F02A         	call	_fputc	;wreg free
  9467  004F7E  29CD               	incf	?_fputc& (0+255),w,b
  9468  004F80  E106               	bnz	l11634
  9469  004F82  29CE               	incf	(?_fputc+1)& (0+255),w,b
  9470  004F84  A4D8               	btfss	status,2,c
  9471  004F86  D003               	goto	l11634
  9472                           
  9473                           ; BSR set to: 0
  9474  004F88  69D4               	setf	?_fputs& (0+255),b
  9475  004F8A  69D5               	setf	(?_fputs+1)& (0+255),b
  9476  004F8C  0012               	return	
  9477  004F8E                     l11634:
  9478                           
  9479                           ; BSR set to: 0
  9480  004F8E  4BD4               	infsnz	fputs@str& (0+255),f,b
  9481  004F90  2BD5               	incf	(fputs@str+1)& (0+255),f,b
  9482  004F92  4BD9               	infsnz	fputs@n& (0+255),f,b
  9483  004F94  2BDA               	incf	(fputs@n+1)& (0+255),f,b
  9484  004F96                     l11636:
  9485                           
  9486                           ; BSR set to: 0
  9487  004F96  C0D4  FFD9         	movff	fputs@str,fsr2l
  9488  004F9A  C0D5  FFDA         	movff	fputs@str+1,fsr2h
  9489  004F9E  50DF               	movf	indf2,w,c
  9490  004FA0  A4D8               	btfss	status,2,c
  9491  004FA2  D7DE               	goto	l11630
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;tff.c: 1806: };tff.c: 1807: return n;
  9495  004FA4  C0D9  F0D4         	movff	fputs@n,?_fputs
  9496  004FA8  C0DA  F0D5         	movff	fputs@n+1,?_fputs+1
  9497                           
  9498                           ; BSR set to: 0
  9499  004FAC  0012               	return		;funcret
  9500  004FAE                     __end_of_fputs:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _fputc *****************
  9504 ;; Defined at:
  9505 ;;		line 1769 in file "bibliotecas/tff.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  chr             2  109[BANK0 ] int 
  9508 ;;  fil             2  111[BANK0 ] PTR struct _FIL
  9509 ;;		 -> fil(28), 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  bw              2  114[BANK0 ] unsigned int 
  9512 ;;  c               1  113[BANK0 ] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  2  109[BANK0 ] int 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 3F/0
  9519 ;;		On exit  : 3F/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9522 ;;      Params:         0       4       0       0       0       0       0       0       0
  9523 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9525 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9526 ;;Total ram usage:        7 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:   12
  9529 ;; This function calls:
  9530 ;;		_f_write
  9531 ;; This function is called by:
  9532 ;;		_fputs
  9533 ;;		_fprintf
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text56
  9538  0054BE                     __ptext56:
  9539                           	callstack 0
  9540  0054BE                     _fputc:
  9541                           	callstack 12
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;incstack = 0
  9548  0054BE  51CF               	movf	fputc@fil& (0+255),w,b
  9549  0054C0  11D0               	iorwf	(fputc@fil+1)& (0+255),w,b
  9550  0054C2  A4D8               	btfss	status,2,c
  9551  0054C4  D005               	goto	l1177
  9552  0054C6                     u13230:
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;tff.c: 1783: return chr;
  9556  0054C6  C0CD  F0CD         	movff	fputc@chr,?_fputc
  9557  0054CA  C0CE  F0CE         	movff	fputc@chr+1,?_fputc+1
  9558  0054CE  0012               	return	
  9559  0054D0                     l1177:
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
  9563  0054D0  C0CD  F0D1         	movff	fputc@chr,fputc@c
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
  9567  0054D4  C0CF  F0AF         	movff	fputc@fil,f_write@fp
  9568  0054D8  C0D0  F0B0         	movff	fputc@fil+1,f_write@fp+1
  9569  0054DC  0ED1               	movlw	low fputc@c
  9570  0054DE  6FB1               	movwf	f_write@buff& (0+255),b
  9571  0054E0  0E00               	movlw	0
  9572  0054E2  6FB3               	movwf	(f_write@btw+1)& (0+255),b
  9573  0054E4  0E01               	movlw	1
  9574  0054E6  6FB2               	movwf	f_write@btw& (0+255),b
  9575  0054E8  0ED2               	movlw	low fputc@bw
  9576  0054EA  6FB4               	movwf	f_write@bw& (0+255),b
  9577  0054EC  EC09  F000         	call	_f_write	;wreg free
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;tff.c: 1787: return bw ? chr : -1;
  9581  0054F0  51D2               	movf	fputc@bw& (0+255),w,b
  9582  0054F2  11D3               	iorwf	(fputc@bw+1)& (0+255),w,b
  9583  0054F4  A4D8               	btfss	status,2,c
  9584  0054F6  D7E7               	goto	u13230
  9585                           
  9586                           ; BSR set to: 0
  9587  0054F8  69CD               	setf	?_fputc& (0+255),b
  9588  0054FA  69CE               	setf	(?_fputc+1)& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591  0054FC  0012               	return		;funcret
  9592  0054FE                     __end_of_fputc:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _f_write *****************
  9596 ;; Defined at:
  9597 ;;		line 999 in file "bibliotecas/tff.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  fp              2   79[BANK0 ] PTR struct _FIL
  9600 ;;		 -> fil(28), 
  9601 ;;  buff            1   81[BANK0 ] PTR const void 
  9602 ;;		 -> fputc@c(1), 
  9603 ;;  btw             2   82[BANK0 ] unsigned int 
  9604 ;;  bw              1   84[BANK0 ] PTR unsigned int 
  9605 ;;		 -> fputc@bw(2), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  sect            4   99[BANK0 ] unsigned long 
  9608 ;;  wcnt            2  107[BANK0 ] unsigned int 
  9609 ;;  clust           2  105[BANK0 ] unsigned short 
  9610 ;;  cc              2  103[BANK0 ] unsigned int 
  9611 ;;  wbuff           1   98[BANK0 ] PTR const unsigned char 
  9612 ;;		 -> fputc@c(1), 
  9613 ;;  res             1   97[BANK0 ] enum E155
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      enum E155
  9616 ;; Registers used:
  9617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 3F/0
  9620 ;;		On exit  : 3F/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9623 ;;      Params:         0       6       0       0       0       0       0       0       0
  9624 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9625 ;;      Temps:          0      12       0       0       0       0       0       0       0
  9626 ;;      Totals:         0      30       0       0       0       0       0       0       0
  9627 ;;Total ram usage:       30 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:   11
  9630 ;; This function calls:
  9631 ;;		_clust2sect
  9632 ;;		_create_chain
  9633 ;;		_disk_write
  9634 ;;		_memcpy
  9635 ;;		_move_window
  9636 ;;		_validate
  9637 ;; This function is called by:
  9638 ;;		_fputc
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text57
  9643  000012                     __ptext57:
  9644                           	callstack 0
  9645  000012                     _f_write:
  9646                           	callstack 12
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;incstack = 0
  9653  000012  C0B1  F0C2         	movff	f_write@buff,f_write@wbuff
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;tff.c: 1013: *bw = 0;
  9657  000016  51B4               	movf	f_write@bw& (0+255),w,b
  9658  000018  6ED9               	movwf	fsr2l,c
  9659  00001A  6ADA               	clrf	fsr2h,c
  9660  00001C  0E00               	movlw	0
  9661  00001E  6EDE               	movwf	postinc2,c
  9662  000020  0E00               	movlw	0
  9663  000022  6EDD               	movwf	postdec2,c
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
  9667  000024  EE20 F004          	lfsr	2,4
  9668  000028  51AF               	movf	f_write@fp& (0+255),w,b
  9669  00002A  26D9               	addwf	fsr2l,f,c
  9670  00002C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9671  00002E  22DA               	addwfc	fsr2h,f,c
  9672  000030  CFDE F020          	movff	postinc2,validate@fs
  9673  000034  CFDD F021          	movff	postdec2,validate@fs+1
  9674  000038  C0AF  FFD9         	movff	f_write@fp,fsr2l
  9675  00003C  C0B0  FFDA         	movff	f_write@fp+1,fsr2h
  9676  000040  CFDE F022          	movff	postinc2,validate@id
  9677  000044  CFDD F023          	movff	postdec2,validate@id+1
  9678  000048  EC70  F029         	call	_validate	;wreg free
  9679  00004C  0100               	movlb	0	; () banked
  9680  00004E  6FC1               	movwf	f_write@res& (0+255),b
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;tff.c: 1015: if (res != FR_OK) return res;
  9684  000050  51C1               	movf	f_write@res& (0+255),w,b
  9685  000052  A4D8               	btfss	status,2,c
  9686  000054  0012               	return	
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
  9690  000056  EE20 F002          	lfsr	2,2
  9691  00005A  51AF               	movf	f_write@fp& (0+255),w,b
  9692  00005C  26D9               	addwf	fsr2l,f,c
  9693  00005E  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9694  000060  22DA               	addwfc	fsr2h,f,c
  9695  000062  BEDF               	btfsc	indf2,7,c
  9696  000064  0012               	return	
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
  9700  000066  EE20 F002          	lfsr	2,2
  9701  00006A  51AF               	movf	f_write@fp& (0+255),w,b
  9702  00006C  26D9               	addwf	fsr2l,f,c
  9703  00006E  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9704  000070  22DA               	addwfc	fsr2h,f,c
  9705  000072  A2DF               	btfss	indf2,1,c
  9706  000074  0012               	return	
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
  9710  000076  EE20 F00A          	lfsr	2,10
  9711  00007A  51AF               	movf	f_write@fp& (0+255),w,b
  9712  00007C  26D9               	addwf	fsr2l,f,c
  9713  00007E  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9714  000080  22DA               	addwfc	fsr2h,f,c
  9715  000082  EE10 F00A          	lfsr	1,10
  9716  000086  51AF               	movf	f_write@fp& (0+255),w,b
  9717  000088  26E1               	addwf	fsr1l,f,c
  9718  00008A  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9719  00008C  22E2               	addwfc	fsr1h,f,c
  9720  00008E  CFE6 F0B9          	movff	postinc1,??_f_write+4
  9721  000092  CFE6 F0BA          	movff	postinc1,??_f_write+5
  9722  000096  CFE6 F0BB          	movff	postinc1,??_f_write+6
  9723  00009A  CFE6 F0BC          	movff	postinc1,??_f_write+7
  9724  00009E  51B2               	movf	f_write@btw& (0+255),w,b
  9725  0000A0  25B9               	addwf	(??_f_write+4)& (0+255),w,b
  9726  0000A2  6FBD               	movwf	(??_f_write+8)& (0+255),b
  9727  0000A4  51B3               	movf	(f_write@btw+1)& (0+255),w,b
  9728  0000A6  21BA               	addwfc	(??_f_write+5)& (0+255),w,b
  9729  0000A8  6FBE               	movwf	(??_f_write+9)& (0+255),b
  9730  0000AA  0E00               	movlw	0
  9731  0000AC  21BB               	addwfc	(??_f_write+6)& (0+255),w,b
  9732  0000AE  6FBF               	movwf	(??_f_write+10)& (0+255),b
  9733  0000B0  0E00               	movlw	0
  9734  0000B2  21BC               	addwfc	(??_f_write+7)& (0+255),w,b
  9735  0000B4  6FC0               	movwf	(??_f_write+11)& (0+255),b
  9736  0000B6  50DE               	movf	postinc2,w,c
  9737  0000B8  5DBD               	subwf	(??_f_write+8)& (0+255),w,b
  9738  0000BA  50DE               	movf	postinc2,w,c
  9739  0000BC  59BE               	subwfb	(??_f_write+9)& (0+255),w,b
  9740  0000BE  50DE               	movf	postinc2,w,c
  9741  0000C0  59BF               	subwfb	(??_f_write+10)& (0+255),w,b
  9742  0000C2  50DE               	movf	postinc2,w,c
  9743  0000C4  59C0               	subwfb	(??_f_write+11)& (0+255),w,b
  9744  0000C6  A0D8               	btfss	status,0,c
  9745  0000C8  0012               	return	
  9746  0000CA  D22A               	goto	l10930
  9747  0000CC                     l10854:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
  9751  0000CC  EE20 F006          	lfsr	2,6
  9752  0000D0  51AF               	movf	f_write@fp& (0+255),w,b
  9753  0000D2  26D9               	addwf	fsr2l,f,c
  9754  0000D4  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9755  0000D6  22DA               	addwfc	fsr2h,f,c
  9756  0000D8  0EFF               	movlw	255
  9757  0000DA  14DE               	andwf	postinc2,w,c
  9758  0000DC  6FB5               	movwf	??_f_write& (0+255),b
  9759  0000DE  0E01               	movlw	1
  9760  0000E0  14DE               	andwf	postinc2,w,c
  9761  0000E2  6FB6               	movwf	(??_f_write+1)& (0+255),b
  9762  0000E4  0E00               	movlw	0
  9763  0000E6  14DE               	andwf	postinc2,w,c
  9764  0000E8  6FB7               	movwf	(??_f_write+2)& (0+255),b
  9765  0000EA  0E00               	movlw	0
  9766  0000EC  14DE               	andwf	postinc2,w,c
  9767  0000EE  6FB8               	movwf	(??_f_write+3)& (0+255),b
  9768  0000F0  51B5               	movf	??_f_write& (0+255),w,b
  9769  0000F2  11B6               	iorwf	(??_f_write+1)& (0+255),w,b
  9770  0000F4  11B7               	iorwf	(??_f_write+2)& (0+255),w,b
  9771  0000F6  11B8               	iorwf	(??_f_write+3)& (0+255),w,b
  9772  0000F8  A4D8               	btfss	status,2,c
  9773  0000FA  D15C               	goto	l10906
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
  9777  0000FC  EE20 F004          	lfsr	2,4
  9778  000100  51AF               	movf	f_write@fp& (0+255),w,b
  9779  000102  26D9               	addwf	fsr2l,f,c
  9780  000104  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9781  000106  22DA               	addwfc	fsr2h,f,c
  9782  000108  EE10 F01D          	lfsr	1,29
  9783  00010C  50DE               	movf	postinc2,w,c
  9784  00010E  26E1               	addwf	fsr1l,f,c
  9785  000110  50DD               	movf	postdec2,w,c
  9786  000112  22E2               	addwfc	fsr1h,f,c
  9787  000114  EE20 F003          	lfsr	2,3
  9788  000118  51AF               	movf	f_write@fp& (0+255),w,b
  9789  00011A  26D9               	addwf	fsr2l,f,c
  9790  00011C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9791  00011E  22DA               	addwfc	fsr2h,f,c
  9792  000120  50E6               	movf	postinc1,w,c
  9793  000122  5CDE               	subwf	postinc2,w,c
  9794  000124  A0D8               	btfss	status,0,c
  9795  000126  D06B               	goto	l10878
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;tff.c: 1024: if (fp->fptr == 0) {
  9799  000128  EE20 F006          	lfsr	2,6
  9800  00012C  51AF               	movf	f_write@fp& (0+255),w,b
  9801  00012E  26D9               	addwf	fsr2l,f,c
  9802  000130  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9803  000132  22DA               	addwfc	fsr2h,f,c
  9804  000134  50DE               	movf	postinc2,w,c
  9805  000136  10DE               	iorwf	postinc2,w,c
  9806  000138  10DE               	iorwf	postinc2,w,c
  9807  00013A  10DE               	iorwf	postinc2,w,c
  9808  00013C  A4D8               	btfss	status,2,c
  9809  00013E  D023               	goto	l10866
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;tff.c: 1025: clust = fp->org_clust;
  9813  000140  EE20 F00E          	lfsr	2,14
  9814  000144  51AF               	movf	f_write@fp& (0+255),w,b
  9815  000146  26D9               	addwf	fsr2l,f,c
  9816  000148  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9817  00014A  22DA               	addwfc	fsr2h,f,c
  9818  00014C  CFDE F0C9          	movff	postinc2,f_write@clust
  9819  000150  CFDD F0CA          	movff	postdec2,f_write@clust+1
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;tff.c: 1026: if (clust == 0)
  9823  000154  51C9               	movf	f_write@clust& (0+255),w,b
  9824  000156  11CA               	iorwf	(f_write@clust+1)& (0+255),w,b
  9825  000158  A4D8               	btfss	status,2,c
  9826  00015A  D025               	goto	l10868
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
  9830  00015C  0E00               	movlw	0
  9831  00015E  6FA2               	movwf	(create_chain@clust+1)& (0+255),b
  9832  000160  0E00               	movlw	0
  9833  000162  6FA1               	movwf	create_chain@clust& (0+255),b
  9834  000164  EC75  F018         	call	_create_chain	;wreg free
  9835  000168  C0A1  F0C9         	movff	?_create_chain,f_write@clust
  9836  00016C  C0A2  F0CA         	movff	?_create_chain+1,f_write@clust+1
  9837  000170  EE20 F00E          	lfsr	2,14
  9838  000174  51AF               	movf	f_write@fp& (0+255),w,b
  9839  000176  26D9               	addwf	fsr2l,f,c
  9840  000178  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9841  00017A  22DA               	addwfc	fsr2h,f,c
  9842  00017C  C0C9  FFDE         	movff	f_write@clust,postinc2
  9843  000180  C0CA  FFDD         	movff	f_write@clust+1,postdec2
  9844  000184  D010               	goto	l10868
  9845  000186                     l10866:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
  9849  000186  EE20 F010          	lfsr	2,16
  9850  00018A  51AF               	movf	f_write@fp& (0+255),w,b
  9851  00018C  26D9               	addwf	fsr2l,f,c
  9852  00018E  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9853  000190  22DA               	addwfc	fsr2h,f,c
  9854  000192  CFDE F0A1          	movff	postinc2,create_chain@clust
  9855  000196  CFDD F0A2          	movff	postdec2,create_chain@clust+1
  9856  00019A  EC75  F018         	call	_create_chain	;wreg free
  9857  00019E  C0A1  F0C9         	movff	?_create_chain,f_write@clust
  9858  0001A2  C0A2  F0CA         	movff	?_create_chain+1,f_write@clust+1
  9859  0001A6                     l10868:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
  9863  0001A6  51C9               	movf	f_write@clust& (0+255),w,b
  9864  0001A8  11CA               	iorwf	(f_write@clust+1)& (0+255),w,b
  9865  0001AA  B4D8               	btfsc	status,2,c
  9866  0001AC  D1BD               	goto	u12710
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
  9870  0001AE  05C9               	decf	f_write@clust& (0+255),w,b
  9871  0001B0  11CA               	iorwf	(f_write@clust+1)& (0+255),w,b
  9872  0001B2  B4D8               	btfsc	status,2,c
  9873  0001B4  D1EC               	goto	l10940
  9874                           
  9875                           ; BSR set to: 0
  9876  0001B6  EE20 F004          	lfsr	2,4
  9877  0001BA  51AF               	movf	f_write@fp& (0+255),w,b
  9878  0001BC  26D9               	addwf	fsr2l,f,c
  9879  0001BE  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9880  0001C0  22DA               	addwfc	fsr2h,f,c
  9881  0001C2  EE10 F016          	lfsr	1,22
  9882  0001C6  50DE               	movf	postinc2,w,c
  9883  0001C8  26E1               	addwf	fsr1l,f,c
  9884  0001CA  50DD               	movf	postdec2,w,c
  9885  0001CC  22E2               	addwfc	fsr1h,f,c
  9886  0001CE  50E6               	movf	postinc1,w,c
  9887  0001D0  5DC9               	subwf	f_write@clust& (0+255),w,b
  9888  0001D2  50E6               	movf	postinc1,w,c
  9889  0001D4  59CA               	subwfb	(f_write@clust+1)& (0+255),w,b
  9890  0001D6  B0D8               	btfsc	status,0,c
  9891  0001D8  D1DA               	goto	l10940
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;tff.c: 1033: fp->curr_clust = clust;
  9895  0001DA  EE20 F010          	lfsr	2,16
  9896  0001DE  51AF               	movf	f_write@fp& (0+255),w,b
  9897  0001E0  26D9               	addwf	fsr2l,f,c
  9898  0001E2  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9899  0001E4  22DA               	addwfc	fsr2h,f,c
  9900  0001E6  C0C9  FFDE         	movff	f_write@clust,postinc2
  9901  0001EA  C0CA  FFDD         	movff	f_write@clust+1,postdec2
  9902                           
  9903                           ;tff.c: 1034: fp->csect = 0;
  9904  0001EE  EE20 F003          	lfsr	2,3
  9905  0001F2  51AF               	movf	f_write@fp& (0+255),w,b
  9906  0001F4  26D9               	addwf	fsr2l,f,c
  9907  0001F6  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9908  0001F8  22DA               	addwfc	fsr2h,f,c
  9909  0001FA  0E00               	movlw	0
  9910  0001FC  6EDF               	movwf	indf2,c
  9911  0001FE                     l10878:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
  9915  0001FE  EE20 F010          	lfsr	2,16
  9916  000202  51AF               	movf	f_write@fp& (0+255),w,b
  9917  000204  26D9               	addwf	fsr2l,f,c
  9918  000206  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9919  000208  22DA               	addwfc	fsr2h,f,c
  9920  00020A  CFDE F026          	movff	postinc2,clust2sect@clust
  9921  00020E  CFDD F027          	movff	postdec2,clust2sect@clust+1
  9922  000212  EC52  F021         	call	_clust2sect	;wreg free
  9923  000216  0100               	movlb	0	; () banked
  9924  000218  EE20 F003          	lfsr	2,3
  9925  00021C  51AF               	movf	f_write@fp& (0+255),w,b
  9926  00021E  26D9               	addwf	fsr2l,f,c
  9927  000220  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9928  000222  22DA               	addwfc	fsr2h,f,c
  9929  000224  50DF               	movf	indf2,w,c
  9930  000226  6FB5               	movwf	??_f_write& (0+255),b
  9931  000228  51B5               	movf	??_f_write& (0+255),w,b
  9932  00022A  2426               	addwf	?_clust2sect^0,w,c
  9933  00022C  6FC3               	movwf	f_write@sect& (0+255),b
  9934  00022E  0E00               	movlw	0
  9935  000230  2027               	addwfc	(?_clust2sect+1)^0,w,c
  9936  000232  6FC4               	movwf	(f_write@sect+1)& (0+255),b
  9937  000234  0E00               	movlw	0
  9938  000236  2028               	addwfc	(?_clust2sect+2)^0,w,c
  9939  000238  6FC5               	movwf	(f_write@sect+2)& (0+255),b
  9940  00023A  0E00               	movlw	0
  9941  00023C  2029               	addwfc	(?_clust2sect+3)^0,w,c
  9942  00023E  6FC6               	movwf	(f_write@sect+3)& (0+255),b
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;tff.c: 1037: cc = btw / 512U;
  9946  000240  C0B2  F0B5         	movff	f_write@btw,??_f_write
  9947  000244  C0B3  F0B6         	movff	f_write@btw+1,??_f_write+1
  9948  000248  0E09               	movlw	9
  9949  00024A  6FB7               	movwf	(??_f_write+2)& (0+255),b
  9950  00024C                     u12625:
  9951  00024C  90D8               	bcf	status,0,c
  9952  00024E  33B6               	rrcf	(??_f_write+1)& (0+255),f,b
  9953  000250  33B5               	rrcf	??_f_write& (0+255),f,b
  9954  000252  2FB7               	decfsz	(??_f_write+2)& (0+255),f,b
  9955  000254  D7FB               	goto	u12625
  9956  000256  C0B5  F0C7         	movff	??_f_write,f_write@cc
  9957  00025A  C0B6  F0C8         	movff	??_f_write+1,f_write@cc+1
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;tff.c: 1038: if (cc) {
  9961  00025E  51C7               	movf	f_write@cc& (0+255),w,b
  9962  000260  11C8               	iorwf	(f_write@cc+1)& (0+255),w,b
  9963  000262  B4D8               	btfsc	status,2,c
  9964  000264  D069               	goto	l10896
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
  9968  000266  EE20 F003          	lfsr	2,3
  9969  00026A  51AF               	movf	f_write@fp& (0+255),w,b
  9970  00026C  26D9               	addwf	fsr2l,f,c
  9971  00026E  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9972  000270  22DA               	addwfc	fsr2h,f,c
  9973  000272  50DF               	movf	indf2,w,c
  9974  000274  6FB5               	movwf	??_f_write& (0+255),b
  9975  000276  51B5               	movf	??_f_write& (0+255),w,b
  9976  000278  25C7               	addwf	f_write@cc& (0+255),w,b
  9977  00027A  6FB6               	movwf	(??_f_write+1)& (0+255),b
  9978  00027C  0E00               	movlw	0
  9979  00027E  21C8               	addwfc	(f_write@cc+1)& (0+255),w,b
  9980  000280  6FB7               	movwf	(??_f_write+2)& (0+255),b
  9981  000282  EE20 F004          	lfsr	2,4
  9982  000286  51AF               	movf	f_write@fp& (0+255),w,b
  9983  000288  26D9               	addwf	fsr2l,f,c
  9984  00028A  51B0               	movf	(f_write@fp+1)& (0+255),w,b
  9985  00028C  22DA               	addwfc	fsr2h,f,c
  9986  00028E  EE10 F01D          	lfsr	1,29
  9987  000292  50DE               	movf	postinc2,w,c
  9988  000294  26E1               	addwf	fsr1l,f,c
  9989  000296  50DD               	movf	postdec2,w,c
  9990  000298  22E2               	addwfc	fsr1h,f,c
  9991  00029A  50E7               	movf	indf1,w,c
  9992  00029C  6FB8               	movwf	(??_f_write+3)& (0+255),b
  9993  00029E  6BB9               	clrf	(??_f_write+4)& (0+255),b
  9994  0002A0  51B6               	movf	(??_f_write+1)& (0+255),w,b
  9995  0002A2  5DB8               	subwf	(??_f_write+3)& (0+255),w,b
  9996  0002A4  51B7               	movf	(??_f_write+2)& (0+255),w,b
  9997  0002A6  59B9               	subwfb	(??_f_write+4)& (0+255),w,b
  9998  0002A8  B0D8               	btfsc	status,0,c
  9999  0002AA  D01C               	goto	l10888
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10003  0002AC  EE20 F004          	lfsr	2,4
 10004  0002B0  51AF               	movf	f_write@fp& (0+255),w,b
 10005  0002B2  26D9               	addwf	fsr2l,f,c
 10006  0002B4  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10007  0002B6  22DA               	addwfc	fsr2h,f,c
 10008  0002B8  EE10 F01D          	lfsr	1,29
 10009  0002BC  50DE               	movf	postinc2,w,c
 10010  0002BE  26E1               	addwf	fsr1l,f,c
 10011  0002C0  50DD               	movf	postdec2,w,c
 10012  0002C2  22E2               	addwfc	fsr1h,f,c
 10013  0002C4  50E7               	movf	indf1,w,c
 10014  0002C6  6FB5               	movwf	??_f_write& (0+255),b
 10015  0002C8  EE20 F003          	lfsr	2,3
 10016  0002CC  51AF               	movf	f_write@fp& (0+255),w,b
 10017  0002CE  26D9               	addwf	fsr2l,f,c
 10018  0002D0  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10019  0002D2  22DA               	addwfc	fsr2h,f,c
 10020  0002D4  50DF               	movf	indf2,w,c
 10021  0002D6  6FB6               	movwf	(??_f_write+1)& (0+255),b
 10022  0002D8  51B6               	movf	(??_f_write+1)& (0+255),w,b
 10023  0002DA  5DB5               	subwf	??_f_write& (0+255),w,b
 10024  0002DC  6FC7               	movwf	f_write@cc& (0+255),b
 10025  0002DE  6BC8               	clrf	(f_write@cc+1)& (0+255),b
 10026  0002E0  A0D8               	btfss	status,0,c
 10027  0002E2  07C8               	decf	(f_write@cc+1)& (0+255),f,b
 10028  0002E4                     l10888:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10032  0002E4  C0C2  F068         	movff	f_write@wbuff,disk_write@buff
 10033  0002E8  6B69               	clrf	(disk_write@buff+1)& (0+255),b
 10034  0002EA  C0C3  F06A         	movff	f_write@sect,disk_write@sector
 10035  0002EE  C0C4  F06B         	movff	f_write@sect+1,disk_write@sector+1
 10036  0002F2  C0C5  F06C         	movff	f_write@sect+2,disk_write@sector+2
 10037  0002F6  C0C6  F06D         	movff	f_write@sect+3,disk_write@sector+3
 10038  0002FA  C0C7  F06E         	movff	f_write@cc,disk_write@count
 10039  0002FE  0E00               	movlw	0
 10040  000300  EC00  F029         	call	_disk_write
 10041  000304  0900               	iorlw	0
 10042  000306  A4D8               	btfss	status,2,c
 10043  000308  D142               	goto	l10940
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10047  00030A  EE20 F003          	lfsr	2,3
 10048  00030E  51AF               	movf	f_write@fp& (0+255),w,b
 10049  000310  26D9               	addwf	fsr2l,f,c
 10050  000312  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10051  000314  22DA               	addwfc	fsr2h,f,c
 10052  000316  51C7               	movf	f_write@cc& (0+255),w,b
 10053  000318  26DF               	addwf	indf2,f,c
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;tff.c: 1044: wcnt = 512U * cc;
 10057  00031A  C0C7  F0B5         	movff	f_write@cc,??_f_write
 10058  00031E  C0C8  F0B6         	movff	f_write@cc+1,??_f_write+1
 10059  000322  0E09               	movlw	9
 10060  000324                     u12665:
 10061  000324  90D8               	bcf	status,0,c
 10062  000326  37B5               	rlcf	??_f_write& (0+255),f,b
 10063  000328  37B6               	rlcf	(??_f_write+1)& (0+255),f,b
 10064  00032A  2EE8               	decfsz	wreg,f,c
 10065  00032C  D7FB               	goto	u12665
 10066  00032E  C0B5  F0CB         	movff	??_f_write,f_write@wcnt
 10067  000332  C0B6  F0CC         	movff	??_f_write+1,f_write@wcnt+1
 10068                           
 10069                           ;tff.c: 1045: continue;
 10070  000336  D0DA               	goto	l10922
 10071  000338                     l10896:
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10075  000338  EE20 F00A          	lfsr	2,10
 10076  00033C  51AF               	movf	f_write@fp& (0+255),w,b
 10077  00033E  26D9               	addwf	fsr2l,f,c
 10078  000340  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10079  000342  22DA               	addwfc	fsr2h,f,c
 10080  000344  EE10 F006          	lfsr	1,6
 10081  000348  51AF               	movf	f_write@fp& (0+255),w,b
 10082  00034A  26E1               	addwf	fsr1l,f,c
 10083  00034C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10084  00034E  22E2               	addwfc	fsr1h,f,c
 10085  000350  50DE               	movf	postinc2,w,c
 10086  000352  5CE6               	subwf	postinc1,w,c
 10087  000354  50DE               	movf	postinc2,w,c
 10088  000356  58E6               	subwfb	postinc1,w,c
 10089  000358  50DE               	movf	postinc2,w,c
 10090  00035A  58E6               	subwfb	postinc1,w,c
 10091  00035C  50DE               	movf	postinc2,w,c
 10092  00035E  58E6               	subwfb	postinc1,w,c
 10093  000360  A0D8               	btfss	status,0,c
 10094  000362  D021               	goto	l10904
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10098  000364  0E00               	movlw	0
 10099  000366  6F74               	movwf	move_window@sector& (0+255),b
 10100  000368  0E00               	movlw	0
 10101  00036A  6F75               	movwf	(move_window@sector+1)& (0+255),b
 10102  00036C  0E00               	movlw	0
 10103  00036E  6F76               	movwf	(move_window@sector+2)& (0+255),b
 10104  000370  0E00               	movlw	0
 10105  000372  6F77               	movwf	(move_window@sector+3)& (0+255),b
 10106  000374  ECA0  F017         	call	_move_window	;wreg free
 10107  000378  0900               	iorlw	0
 10108  00037A  B4D8               	btfsc	status,2,c
 10109  00037C  D108               	goto	l10940
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;tff.c: 1049: fp->fs->winsect = sect;
 10113  00037E  EE20 F004          	lfsr	2,4
 10114  000382  51AF               	movf	f_write@fp& (0+255),w,b
 10115  000384  26D9               	addwf	fsr2l,f,c
 10116  000386  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10117  000388  22DA               	addwfc	fsr2h,f,c
 10118  00038A  EE10 F004          	lfsr	1,4
 10119  00038E  50DE               	movf	postinc2,w,c
 10120  000390  26E1               	addwf	fsr1l,f,c
 10121  000392  50DD               	movf	postdec2,w,c
 10122  000394  22E2               	addwfc	fsr1h,f,c
 10123  000396  C0C3  FFE6         	movff	f_write@sect,postinc1
 10124  00039A  C0C4  FFE6         	movff	f_write@sect+1,postinc1
 10125  00039E  C0C5  FFE6         	movff	f_write@sect+2,postinc1
 10126  0003A2  C0C6  FFE6         	movff	f_write@sect+3,postinc1
 10127  0003A6                     l10904:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10131  0003A6  EE20 F003          	lfsr	2,3
 10132  0003AA  51AF               	movf	f_write@fp& (0+255),w,b
 10133  0003AC  26D9               	addwf	fsr2l,f,c
 10134  0003AE  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10135  0003B0  22DA               	addwfc	fsr2h,f,c
 10136  0003B2  2ADF               	incf	indf2,f,c
 10137  0003B4                     l10906:
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10141  0003B4  EE20 F010          	lfsr	2,16
 10142  0003B8  51AF               	movf	f_write@fp& (0+255),w,b
 10143  0003BA  26D9               	addwf	fsr2l,f,c
 10144  0003BC  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10145  0003BE  22DA               	addwfc	fsr2h,f,c
 10146  0003C0  CFDE F026          	movff	postinc2,clust2sect@clust
 10147  0003C4  CFDD F027          	movff	postdec2,clust2sect@clust+1
 10148  0003C8  EC52  F021         	call	_clust2sect	;wreg free
 10149  0003CC  0100               	movlb	0	; () banked
 10150  0003CE  EE20 F003          	lfsr	2,3
 10151  0003D2  51AF               	movf	f_write@fp& (0+255),w,b
 10152  0003D4  26D9               	addwf	fsr2l,f,c
 10153  0003D6  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10154  0003D8  22DA               	addwfc	fsr2h,f,c
 10155  0003DA  50DF               	movf	indf2,w,c
 10156  0003DC  6FB5               	movwf	??_f_write& (0+255),b
 10157  0003DE  51B5               	movf	??_f_write& (0+255),w,b
 10158  0003E0  2426               	addwf	?_clust2sect^0,w,c
 10159  0003E2  6FB6               	movwf	(??_f_write+1)& (0+255),b
 10160  0003E4  0E00               	movlw	0
 10161  0003E6  2027               	addwfc	(?_clust2sect+1)^0,w,c
 10162  0003E8  6FB7               	movwf	(??_f_write+2)& (0+255),b
 10163  0003EA  0E00               	movlw	0
 10164  0003EC  2028               	addwfc	(?_clust2sect+2)^0,w,c
 10165  0003EE  6FB8               	movwf	(??_f_write+3)& (0+255),b
 10166  0003F0  0E00               	movlw	0
 10167  0003F2  2029               	addwfc	(?_clust2sect+3)^0,w,c
 10168  0003F4  6FB9               	movwf	(??_f_write+4)& (0+255),b
 10169  0003F6  0EFF               	movlw	255
 10170  0003F8  25B6               	addwf	(??_f_write+1)& (0+255),w,b
 10171  0003FA  6FC3               	movwf	f_write@sect& (0+255),b
 10172  0003FC  0EFF               	movlw	255
 10173  0003FE  21B7               	addwfc	(??_f_write+2)& (0+255),w,b
 10174  000400  6FC4               	movwf	(f_write@sect+1)& (0+255),b
 10175  000402  0EFF               	movlw	255
 10176  000404  21B8               	addwfc	(??_f_write+3)& (0+255),w,b
 10177  000406  6FC5               	movwf	(f_write@sect+2)& (0+255),b
 10178  000408  0EFF               	movlw	255
 10179  00040A  21B9               	addwfc	(??_f_write+4)& (0+255),w,b
 10180  00040C  6FC6               	movwf	(f_write@sect+3)& (0+255),b
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10184  00040E  C0C3  F074         	movff	f_write@sect,move_window@sector
 10185  000412  C0C4  F075         	movff	f_write@sect+1,move_window@sector+1
 10186  000416  C0C5  F076         	movff	f_write@sect+2,move_window@sector+2
 10187  00041A  C0C6  F077         	movff	f_write@sect+3,move_window@sector+3
 10188  00041E  ECA0  F017         	call	_move_window	;wreg free
 10189  000422  0900               	iorlw	0
 10190  000424  B4D8               	btfsc	status,2,c
 10191  000426  D0B3               	goto	l10940
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10195  000428  0EFF               	movlw	255
 10196  00042A  6FB5               	movwf	??_f_write& (0+255),b
 10197  00042C  0E01               	movlw	1
 10198  00042E  6FB6               	movwf	(??_f_write+1)& (0+255),b
 10199  000430  EE20 F006          	lfsr	2,6
 10200  000434  51AF               	movf	f_write@fp& (0+255),w,b
 10201  000436  26D9               	addwf	fsr2l,f,c
 10202  000438  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10203  00043A  22DA               	addwfc	fsr2h,f,c
 10204  00043C  CFDE F0B7          	movff	postinc2,??_f_write+2
 10205  000440  CFDD F0B8          	movff	postdec2,??_f_write+3
 10206  000444  51B5               	movf	??_f_write& (0+255),w,b
 10207  000446  17B7               	andwf	(??_f_write+2)& (0+255),f,b
 10208  000448  51B6               	movf	(??_f_write+1)& (0+255),w,b
 10209  00044A  17B8               	andwf	(??_f_write+3)& (0+255),f,b
 10210  00044C  51B7               	movf	(??_f_write+2)& (0+255),w,b
 10211  00044E  0800               	sublw	0
 10212  000450  6FCB               	movwf	f_write@wcnt& (0+255),b
 10213  000452  51B8               	movf	(??_f_write+3)& (0+255),w,b
 10214  000454  A0D8               	btfss	status,0,c
 10215  000456  2AE8               	incf	wreg,f,c
 10216  000458  0802               	sublw	2
 10217  00045A  6FCC               	movwf	(f_write@wcnt+1)& (0+255),b
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10221  00045C  51CB               	movf	f_write@wcnt& (0+255),w,b
 10222  00045E  5DB2               	subwf	f_write@btw& (0+255),w,b
 10223  000460  51CC               	movf	(f_write@wcnt+1)& (0+255),w,b
 10224  000462  59B3               	subwfb	(f_write@btw+1)& (0+255),w,b
 10225  000464  B0D8               	btfsc	status,0,c
 10226  000466  D004               	goto	l10918
 10227                           
 10228                           ; BSR set to: 0
 10229  000468  C0B2  F0CB         	movff	f_write@btw,f_write@wcnt
 10230  00046C  C0B3  F0CC         	movff	f_write@btw+1,f_write@wcnt+1
 10231  000470                     l10918:
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 10235  000470  0EFF               	movlw	255
 10236  000472  6FB5               	movwf	??_f_write& (0+255),b
 10237  000474  0E01               	movlw	1
 10238  000476  6FB6               	movwf	(??_f_write+1)& (0+255),b
 10239  000478  EE20 F006          	lfsr	2,6
 10240  00047C  51AF               	movf	f_write@fp& (0+255),w,b
 10241  00047E  26D9               	addwf	fsr2l,f,c
 10242  000480  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10243  000482  22DA               	addwfc	fsr2h,f,c
 10244  000484  CFDE F0B7          	movff	postinc2,??_f_write+2
 10245  000488  CFDD F0B8          	movff	postdec2,??_f_write+3
 10246  00048C  51B5               	movf	??_f_write& (0+255),w,b
 10247  00048E  17B7               	andwf	(??_f_write+2)& (0+255),f,b
 10248  000490  51B6               	movf	(??_f_write+1)& (0+255),w,b
 10249  000492  17B8               	andwf	(??_f_write+3)& (0+255),f,b
 10250  000494  EE20 F004          	lfsr	2,4
 10251  000498  51AF               	movf	f_write@fp& (0+255),w,b
 10252  00049A  26D9               	addwf	fsr2l,f,c
 10253  00049C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10254  00049E  22DA               	addwfc	fsr2h,f,c
 10255  0004A0  CFDE F0B9          	movff	postinc2,??_f_write+4
 10256  0004A4  CFDD F0BA          	movff	postdec2,??_f_write+5
 10257  0004A8  51B7               	movf	(??_f_write+2)& (0+255),w,b
 10258  0004AA  27B9               	addwf	(??_f_write+4)& (0+255),f,b
 10259  0004AC  51B8               	movf	(??_f_write+3)& (0+255),w,b
 10260  0004AE  23BA               	addwfc	(??_f_write+5)& (0+255),f,b
 10261  0004B0  0E20               	movlw	32
 10262  0004B2  25B9               	addwf	(??_f_write+4)& (0+255),w,b
 10263  0004B4  6E1A               	movwf	memcpy@d1^0,c
 10264  0004B6  0E00               	movlw	0
 10265  0004B8  21BA               	addwfc	(??_f_write+5)& (0+255),w,b
 10266  0004BA  6E1B               	movwf	(memcpy@d1+1)^0,c
 10267  0004BC  C0C2  F01C         	movff	f_write@wbuff,memcpy@s1
 10268  0004C0  6A1D               	clrf	(memcpy@s1+1)^0,c
 10269  0004C2  C0CB  F01E         	movff	f_write@wcnt,memcpy@n
 10270  0004C6  C0CC  F01F         	movff	f_write@wcnt+1,memcpy@n+1
 10271  0004CA  ECFB  F029         	call	_memcpy	;wreg free
 10272                           
 10273                           ;tff.c: 1058: fp->fs->winflag = 1;
 10274  0004CE  0100               	movlb	0	; () banked
 10275  0004D0  EE20 F004          	lfsr	2,4
 10276  0004D4  51AF               	movf	f_write@fp& (0+255),w,b
 10277  0004D6  26D9               	addwf	fsr2l,f,c
 10278  0004D8  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10279  0004DA  22DA               	addwfc	fsr2h,f,c
 10280  0004DC  EE10 F01F          	lfsr	1,31
 10281  0004E0  50DE               	movf	postinc2,w,c
 10282  0004E2  26E1               	addwf	fsr1l,f,c
 10283  0004E4  50DD               	movf	postdec2,w,c
 10284  0004E6  22E2               	addwfc	fsr1h,f,c
 10285  0004E8  0E01               	movlw	1
 10286  0004EA  6EE7               	movwf	indf1,c
 10287  0004EC                     l10922:
 10288                           
 10289                           ; BSR set to: 0
 10290  0004EC  51CB               	movf	f_write@wcnt& (0+255),w,b
 10291  0004EE  27C2               	addwf	f_write@wbuff& (0+255),f,b
 10292                           
 10293                           ; BSR set to: 0
 10294  0004F0  EE20 F006          	lfsr	2,6
 10295  0004F4  51AF               	movf	f_write@fp& (0+255),w,b
 10296  0004F6  26D9               	addwf	fsr2l,f,c
 10297  0004F8  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10298  0004FA  22DA               	addwfc	fsr2h,f,c
 10299  0004FC  51CB               	movf	f_write@wcnt& (0+255),w,b
 10300  0004FE  26DE               	addwf	postinc2,f,c
 10301  000500  51CC               	movf	(f_write@wcnt+1)& (0+255),w,b
 10302  000502  22DE               	addwfc	postinc2,f,c
 10303  000504  0E00               	movlw	0
 10304  000506  22DE               	addwfc	postinc2,f,c
 10305  000508  22DE               	addwfc	postinc2,f,c
 10306                           
 10307                           ; BSR set to: 0
 10308  00050A  51B4               	movf	f_write@bw& (0+255),w,b
 10309  00050C  6ED9               	movwf	fsr2l,c
 10310  00050E  6ADA               	clrf	fsr2h,c
 10311  000510  51CB               	movf	f_write@wcnt& (0+255),w,b
 10312  000512  26DE               	addwf	postinc2,f,c
 10313  000514  51CC               	movf	(f_write@wcnt+1)& (0+255),w,b
 10314  000516  22DD               	addwfc	postdec2,f,c
 10315                           
 10316                           ; BSR set to: 0
 10317  000518  51CB               	movf	f_write@wcnt& (0+255),w,b
 10318  00051A  5FB2               	subwf	f_write@btw& (0+255),f,b
 10319  00051C  51CC               	movf	(f_write@wcnt+1)& (0+255),w,b
 10320  00051E  5BB3               	subwfb	(f_write@btw+1)& (0+255),f,b
 10321  000520                     l10930:
 10322                           
 10323                           ; BSR set to: 0
 10324  000520  51B2               	movf	f_write@btw& (0+255),w,b
 10325  000522  11B3               	iorwf	(f_write@btw+1)& (0+255),w,b
 10326  000524  A4D8               	btfss	status,2,c
 10327  000526  D5D2               	goto	l10854
 10328  000528                     u12710:
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 10332  000528  EE20 F006          	lfsr	2,6
 10333  00052C  51AF               	movf	f_write@fp& (0+255),w,b
 10334  00052E  26D9               	addwf	fsr2l,f,c
 10335  000530  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10336  000532  22DA               	addwfc	fsr2h,f,c
 10337  000534  EE10 F00A          	lfsr	1,10
 10338  000538  51AF               	movf	f_write@fp& (0+255),w,b
 10339  00053A  26E1               	addwf	fsr1l,f,c
 10340  00053C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10341  00053E  22E2               	addwfc	fsr1h,f,c
 10342  000540  50DE               	movf	postinc2,w,c
 10343  000542  5CE6               	subwf	postinc1,w,c
 10344  000544  50DE               	movf	postinc2,w,c
 10345  000546  58E6               	subwfb	postinc1,w,c
 10346  000548  50DE               	movf	postinc2,w,c
 10347  00054A  58E6               	subwfb	postinc1,w,c
 10348  00054C  50DE               	movf	postinc2,w,c
 10349  00054E  58E6               	subwfb	postinc1,w,c
 10350  000550  B0D8               	btfsc	status,0,c
 10351  000552  D014               	goto	l10936
 10352                           
 10353                           ; BSR set to: 0
 10354  000554  EE20 F006          	lfsr	2,6
 10355  000558  51AF               	movf	f_write@fp& (0+255),w,b
 10356  00055A  26D9               	addwf	fsr2l,f,c
 10357  00055C  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10358  00055E  22DA               	addwfc	fsr2h,f,c
 10359  000560  EE10 F00A          	lfsr	1,10
 10360  000564  51AF               	movf	f_write@fp& (0+255),w,b
 10361  000566  26E1               	addwf	fsr1l,f,c
 10362  000568  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10363  00056A  22E2               	addwfc	fsr1h,f,c
 10364  00056C  CFDE FFE6          	movff	postinc2,postinc1
 10365  000570  CFDE FFE6          	movff	postinc2,postinc1
 10366  000574  CFDE FFE6          	movff	postinc2,postinc1
 10367  000578  CFDE FFE6          	movff	postinc2,postinc1
 10368  00057C                     l10936:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;tff.c: 1062: fp->flag |= 0x20;
 10372  00057C  EE20 F002          	lfsr	2,2
 10373  000580  51AF               	movf	f_write@fp& (0+255),w,b
 10374  000582  26D9               	addwf	fsr2l,f,c
 10375  000584  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10376  000586  22DA               	addwfc	fsr2h,f,c
 10377  000588  0E00               	movlw	0
 10378  00058A  8ADB               	bsf	plusw2,5,c
 10379  00058C  0012               	return	
 10380  00058E                     l10940:
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;tff.c: 1066: fp->flag |= 0x80;
 10384  00058E  EE20 F002          	lfsr	2,2
 10385  000592  51AF               	movf	f_write@fp& (0+255),w,b
 10386  000594  26D9               	addwf	fsr2l,f,c
 10387  000596  51B0               	movf	(f_write@fp+1)& (0+255),w,b
 10388  000598  22DA               	addwfc	fsr2h,f,c
 10389  00059A  0E00               	movlw	0
 10390  00059C  8EDB               	bsf	plusw2,7,c
 10391                           
 10392                           ; BSR set to: 0
 10393  00059E  0012               	return		;funcret
 10394  0005A0                     __end_of_f_write:
 10395                           	callstack 0
 10396                           
 10397 ;; *************** function ___llmod *****************
 10398 ;; Defined at:
 10399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  dividend        4   25[COMRAM] unsigned long 
 10402 ;;  divisor         4   29[COMRAM] unsigned long 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  counter         1   33[COMRAM] unsigned char 
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  4   25[COMRAM] unsigned long 
 10407 ;; Registers used:
 10408 ;;		wreg, status,2, status,0
 10409 ;; Tracked objects:
 10410 ;;		On entry : 3D/0
 10411 ;;		On exit  : 3D/0
 10412 ;;		Unchanged: 3D/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10414 ;;      Params:         8       0       0       0       0       0       0       0       0
 10415 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10417 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10418 ;;Total ram usage:        9 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:    3
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_fprintf
 10425 ;;		_ultoa
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text58
 10430  004D78                     __ptext58:
 10431                           	callstack 0
 10432  004D78                     ___llmod:
 10433                           	callstack 22
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;incstack = 0
 10437  004D78  501E               	movf	___llmod@divisor^0,w,c
 10438  004D7A  101F               	iorwf	(___llmod@divisor+1)^0,w,c
 10439  004D7C  1020               	iorwf	(___llmod@divisor+2)^0,w,c
 10440  004D7E  1021               	iorwf	(___llmod@divisor+3)^0,w,c
 10441  004D80  B4D8               	btfsc	status,2,c
 10442  004D82  D024               	goto	l2079
 10443  004D84  0E01               	movlw	1
 10444  004D86  6E22               	movwf	___llmod@counter^0,c
 10445  004D88  D006               	goto	l11706
 10446  004D8A                     l11704:
 10447  004D8A  90D8               	bcf	status,0,c
 10448  004D8C  361E               	rlcf	___llmod@divisor^0,f,c
 10449  004D8E  361F               	rlcf	(___llmod@divisor+1)^0,f,c
 10450  004D90  3620               	rlcf	(___llmod@divisor+2)^0,f,c
 10451  004D92  3621               	rlcf	(___llmod@divisor+3)^0,f,c
 10452  004D94  2A22               	incf	___llmod@counter^0,f,c
 10453  004D96                     l11706:
 10454  004D96  AE21               	btfss	(___llmod@divisor+3)^0,7,c
 10455  004D98  D7F8               	goto	l11704
 10456  004D9A                     u13970:
 10457  004D9A  501E               	movf	___llmod@divisor^0,w,c
 10458  004D9C  5C1A               	subwf	___llmod@dividend^0,w,c
 10459  004D9E  501F               	movf	(___llmod@divisor+1)^0,w,c
 10460  004DA0  581B               	subwfb	(___llmod@dividend+1)^0,w,c
 10461  004DA2  5020               	movf	(___llmod@divisor+2)^0,w,c
 10462  004DA4  581C               	subwfb	(___llmod@dividend+2)^0,w,c
 10463  004DA6  5021               	movf	(___llmod@divisor+3)^0,w,c
 10464  004DA8  581D               	subwfb	(___llmod@dividend+3)^0,w,c
 10465  004DAA  A0D8               	btfss	status,0,c
 10466  004DAC  D008               	goto	l11712
 10467  004DAE  501E               	movf	___llmod@divisor^0,w,c
 10468  004DB0  5E1A               	subwf	___llmod@dividend^0,f,c
 10469  004DB2  501F               	movf	(___llmod@divisor+1)^0,w,c
 10470  004DB4  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
 10471  004DB6  5020               	movf	(___llmod@divisor+2)^0,w,c
 10472  004DB8  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
 10473  004DBA  5021               	movf	(___llmod@divisor+3)^0,w,c
 10474  004DBC  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
 10475  004DBE                     l11712:
 10476  004DBE  90D8               	bcf	status,0,c
 10477  004DC0  3221               	rrcf	(___llmod@divisor+3)^0,f,c
 10478  004DC2  3220               	rrcf	(___llmod@divisor+2)^0,f,c
 10479  004DC4  321F               	rrcf	(___llmod@divisor+1)^0,f,c
 10480  004DC6  321E               	rrcf	___llmod@divisor^0,f,c
 10481  004DC8  2E22               	decfsz	___llmod@counter^0,f,c
 10482  004DCA  D7E7               	goto	u13970
 10483  004DCC                     l2079:
 10484  004DCC  C01A  F01A         	movff	___llmod@dividend,?___llmod
 10485  004DD0  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
 10486  004DD4  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
 10487  004DD8  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
 10488  004DDC  0012               	return		;funcret
 10489  004DDE                     __end_of___llmod:
 10490                           	callstack 0
 10491                           
 10492 ;; *************** function _f_open *****************
 10493 ;; Defined at:
 10494 ;;		line 833 in file "bibliotecas/tff.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  fp              2   97[BANK0 ] PTR struct _FIL
 10497 ;;		 -> fil(28), 
 10498 ;;  path            2   99[BANK0 ] PTR const unsigned char 
 10499 ;;		 -> STR_19(13), filename(20), 
 10500 ;;  mode            1  101[BANK0 ] unsigned char 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  dw              4  120[BANK0 ] unsigned long 
 10503 ;;  rs              2  118[BANK0 ] unsigned short 
 10504 ;;  dj             14  127[BANK0 ] struct _DIR_E
 10505 ;;  fn             12  106[BANK0 ] unsigned char [12]
 10506 ;;  dir             2  125[BANK0 ] PTR unsigned char 
 10507 ;;		 -> NULL(0), fs(544), 
 10508 ;;  res             1  124[BANK0 ] enum E155
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      enum E3231
 10511 ;; Registers used:
 10512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10513 ;; Tracked objects:
 10514 ;;		On entry : 3F/0
 10515 ;;		On exit  : 3F/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10518 ;;      Params:         0       5       0       0       0       0       0       0       0
 10519 ;;      Locals:         0      35       0       0       0       0       0       0       0
 10520 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10521 ;;      Totals:         0      44       0       0       0       0       0       0       0
 10522 ;;Total ram usage:       44 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:   12
 10525 ;; This function calls:
 10526 ;;		_auto_mount
 10527 ;;		_get_fattime
 10528 ;;		_memcpy
 10529 ;;		_memset
 10530 ;;		_move_window
 10531 ;;		_remove_chain
 10532 ;;		_reserve_direntry
 10533 ;;		_trace_path
 10534 ;; This function is called by:
 10535 ;;		_escrita_sdcard
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text59
 10540  0016A4                     __ptext59:
 10541                           	callstack 0
 10542  0016A4                     _f_open:
 10543                           	callstack 14
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 10547                           
 10548                           ;incstack = 0
 10549  0016A4  EE20 F004          	lfsr	2,4
 10550  0016A8  51C1               	movf	f_open@fp& (0+255),w,b
 10551  0016AA  26D9               	addwf	fsr2l,f,c
 10552  0016AC  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10553  0016AE  22DA               	addwfc	fsr2h,f,c
 10554  0016B0  0E00               	movlw	0
 10555  0016B2  6EDE               	movwf	postinc2,c
 10556  0016B4  0E00               	movlw	0
 10557  0016B6  6EDD               	movwf	postdec2,c
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 10561  0016B8  0E1F               	movlw	31
 10562  0016BA  17C5               	andwf	f_open@mode& (0+255),f,b
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 10566  0016BC  0EC3               	movlw	low f_open@path
 10567  0016BE  6F7C               	movwf	auto_mount@path& (0+255),b
 10568  0016C0  51C5               	movf	f_open@mode& (0+255),w,b
 10569  0016C2  0B1E               	andlw	30
 10570  0016C4  6F7D               	movwf	auto_mount@chk_wp& (0+255),b
 10571  0016C6  ECD0  F002         	call	_auto_mount	;wreg free
 10572  0016CA  0100               	movlb	0	; () banked
 10573  0016CC  6FDC               	movwf	f_open@res& (0+255),b
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;tff.c: 853: if (res != FR_OK) return res;
 10577  0016CE  51DC               	movf	f_open@res& (0+255),w,b
 10578  0016D0  B4D8               	btfsc	status,2,c
 10579  0016D2  D002               	goto	l11824
 10580  0016D4                     u14120:
 10581                           
 10582                           ; BSR set to: 0
 10583  0016D4  51DC               	movf	f_open@res& (0+255),w,b
 10584  0016D6  0012               	return	
 10585  0016D8                     l11824:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 10589  0016D8  0EDF               	movlw	low f_open@dj
 10590  0016DA  6FAA               	movwf	trace_path@dj& (0+255),b
 10591  0016DC  0ECA               	movlw	low f_open@fn
 10592  0016DE  6FAB               	movwf	trace_path@fn& (0+255),b
 10593  0016E0  C0C3  F0AC         	movff	f_open@path,trace_path@path
 10594  0016E4  C0C4  F0AD         	movff	f_open@path+1,trace_path@path+1
 10595  0016E8  0EDD               	movlw	low f_open@dir
 10596  0016EA  6FAE               	movwf	trace_path@dir& (0+255),b
 10597  0016EC  ECAD  F00F         	call	_trace_path	;wreg free
 10598  0016F0  6FDC               	movwf	f_open@res& (0+255),b
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 10602  0016F2  C0C5  F0C6         	movff	f_open@mode,??_f_open
 10603  0016F6  0E1C               	movlw	28
 10604  0016F8  17C6               	andwf	??_f_open& (0+255),f,b
 10605  0016FA  B4D8               	btfsc	status,2,c
 10606  0016FC  D0DD               	goto	l11886
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 10610  0016FE  51DC               	movf	f_open@res& (0+255),w,b
 10611  001700  B4D8               	btfsc	status,2,c
 10612  001702  D034               	goto	l1035
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 10616  001704  0E02               	movlw	2
 10617  001706  19DC               	xorwf	f_open@res& (0+255),w,b
 10618  001708  A4D8               	btfss	status,2,c
 10619  00170A  D7E4               	goto	u14120
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 10623  00170C  0EDF               	movlw	low f_open@dj
 10624  00170E  6FAF               	movwf	reserve_direntry@dj& (0+255),b
 10625  001710  0EDD               	movlw	low f_open@dir
 10626  001712  6FB0               	movwf	reserve_direntry@dir& (0+255),b
 10627  001714  ECEA  F010         	call	_reserve_direntry	;wreg free
 10628  001718  6FDC               	movwf	f_open@res& (0+255),b
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;tff.c: 864: if (res != FR_OK) return res;
 10632  00171A  51DC               	movf	f_open@res& (0+255),w,b
 10633  00171C  A4D8               	btfss	status,2,c
 10634  00171E  D7DA               	goto	u14120
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;tff.c: 865: memset(dir, 0, 32);
 10638  001720  C0DD  F01A         	movff	f_open@dir,memset@p1
 10639  001724  C0DE  F01B         	movff	f_open@dir+1,memset@p1+1
 10640  001728  0E00               	movlw	0
 10641  00172A  6E1D               	movwf	(memset@c+1)^0,c
 10642  00172C  0E00               	movlw	0
 10643  00172E  6E1C               	movwf	memset@c^0,c
 10644  001730  0E00               	movlw	0
 10645  001732  6E1F               	movwf	(memset@n+1)^0,c
 10646  001734  0E20               	movlw	32
 10647  001736  6E1E               	movwf	memset@n^0,c
 10648  001738  EC40  F02B         	call	_memset	;wreg free
 10649                           
 10650                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 10651  00173C  C0DD  F01A         	movff	f_open@dir,memcpy@d1
 10652  001740  C0DE  F01B         	movff	f_open@dir+1,memcpy@d1+1
 10653  001744  0ECA               	movlw	low f_open@fn
 10654  001746  6E1C               	movwf	memcpy@s1^0,c
 10655  001748  6A1D               	clrf	(memcpy@s1+1)^0,c
 10656  00174A  0E00               	movlw	0
 10657  00174C  6E1F               	movwf	(memcpy@n+1)^0,c
 10658  00174E  0E0B               	movlw	11
 10659  001750  6E1E               	movwf	memcpy@n^0,c
 10660  001752  ECFB  F029         	call	_memcpy	;wreg free
 10661                           
 10662                           ;tff.c: 867: dir[12] = fn[11];
 10663  001756  0100               	movlb	0	; () banked
 10664  001758  EE20 F00C          	lfsr	2,12
 10665  00175C  51DD               	movf	f_open@dir& (0+255),w,b
 10666  00175E  26D9               	addwf	fsr2l,f,c
 10667  001760  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10668  001762  22DA               	addwfc	fsr2h,f,c
 10669  001764  C0D5  FFDF         	movff	f_open@fn+11,indf2
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;tff.c: 868: mode |= 0x08;
 10673  001768  87C5               	bsf	f_open@mode& (0+255),3,b
 10674                           
 10675                           ;tff.c: 869: }
 10676  00176A  D07A               	goto	l11874
 10677  00176C                     l1035:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 10681  00176C  A5C5               	btfss	f_open@mode& (0+255),2,b
 10682  00176E  D002               	goto	l11854
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;tff.c: 872: return FR_EXIST;
 10686  001770  0E07               	movlw	7
 10687  001772  0012               	return	
 10688  001774                     l11854:
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 10692  001774  51DD               	movf	f_open@dir& (0+255),w,b
 10693  001776  11DE               	iorwf	(f_open@dir+1)& (0+255),w,b
 10694  001778  B4D8               	btfsc	status,2,c
 10695  00177A  D00C               	goto	u14190
 10696                           
 10697                           ; BSR set to: 0
 10698  00177C  EE20 F00B          	lfsr	2,11
 10699  001780  51DD               	movf	f_open@dir& (0+255),w,b
 10700  001782  26D9               	addwf	fsr2l,f,c
 10701  001784  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10702  001786  22DA               	addwfc	fsr2h,f,c
 10703  001788  50DF               	movf	indf2,w,c
 10704  00178A  6FC6               	movwf	??_f_open& (0+255),b
 10705  00178C  0E11               	movlw	17
 10706  00178E  17C6               	andwf	??_f_open& (0+255),f,b
 10707  001790  B4D8               	btfsc	status,2,c
 10708  001792  D002               	goto	l1040
 10709  001794                     u14190:
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;tff.c: 874: return FR_DENIED;
 10713  001794  0E06               	movlw	6
 10714  001796  0012               	return	
 10715  001798                     l1040:
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;tff.c: 875: if (mode & 0x08) {
 10719  001798  A7C5               	btfss	f_open@mode& (0+255),3,b
 10720  00179A  D062               	goto	l11874
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 10724  00179C  EE20 F01A          	lfsr	2,26
 10725  0017A0  51DD               	movf	f_open@dir& (0+255),w,b
 10726  0017A2  26D9               	addwf	fsr2l,f,c
 10727  0017A4  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10728  0017A6  22DA               	addwfc	fsr2h,f,c
 10729  0017A8  CFDE F0D6          	movff	postinc2,f_open@rs
 10730  0017AC  CFDD F0D7          	movff	postdec2,f_open@rs+1
 10731                           
 10732                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 10733  0017B0  EE20 F01A          	lfsr	2,26
 10734  0017B4  51DD               	movf	f_open@dir& (0+255),w,b
 10735  0017B6  26D9               	addwf	fsr2l,f,c
 10736  0017B8  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10737  0017BA  22DA               	addwfc	fsr2h,f,c
 10738  0017BC  0E00               	movlw	0
 10739  0017BE  6EDE               	movwf	postinc2,c
 10740  0017C0  0E00               	movlw	0
 10741  0017C2  6EDD               	movwf	postdec2,c
 10742                           
 10743                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 10744  0017C4  EE20 F01C          	lfsr	2,28
 10745  0017C8  51DD               	movf	f_open@dir& (0+255),w,b
 10746  0017CA  26D9               	addwf	fsr2l,f,c
 10747  0017CC  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10748  0017CE  22DA               	addwfc	fsr2h,f,c
 10749  0017D0  6ADE               	clrf	postinc2,c
 10750  0017D2  6ADE               	clrf	postinc2,c
 10751  0017D4  6ADE               	clrf	postinc2,c
 10752  0017D6  6ADD               	clrf	postdec2,c
 10753                           
 10754                           ;tff.c: 884: dj.fs->winflag = 1;
 10755  0017D8  EE20 F01F          	lfsr	2,31
 10756  0017DC  51E3               	movf	(f_open@dj+4)& (0+255),w,b
 10757  0017DE  26D9               	addwf	fsr2l,f,c
 10758  0017E0  51E4               	movf	(f_open@dj+5)& (0+255),w,b
 10759  0017E2  22DA               	addwfc	fsr2h,f,c
 10760  0017E4  0E01               	movlw	1
 10761  0017E6  6EDF               	movwf	indf2,c
 10762                           
 10763                           ;tff.c: 885: dw = dj.fs->winsect;
 10764  0017E8  EE20 F004          	lfsr	2,4
 10765  0017EC  51E3               	movf	(f_open@dj+4)& (0+255),w,b
 10766  0017EE  26D9               	addwf	fsr2l,f,c
 10767  0017F0  51E4               	movf	(f_open@dj+5)& (0+255),w,b
 10768  0017F2  22DA               	addwfc	fsr2h,f,c
 10769  0017F4  CFDE F0D8          	movff	postinc2,f_open@dw
 10770  0017F8  CFDE F0D9          	movff	postinc2,f_open@dw+1
 10771  0017FC  CFDE F0DA          	movff	postinc2,f_open@dw+2
 10772  001800  CFDE F0DB          	movff	postinc2,f_open@dw+3
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 10776  001804  C0D6  F0A1         	movff	f_open@rs,remove_chain@clust
 10777  001808  C0D7  F0A2         	movff	f_open@rs+1,remove_chain@clust+1
 10778  00180C  ECF4  F022         	call	_remove_chain	;wreg free
 10779  001810  0900               	iorlw	0
 10780  001812  B4D8               	btfsc	status,2,c
 10781  001814  D00D               	goto	u14220
 10782                           
 10783                           ; BSR set to: 0
 10784  001816  C0D8  F074         	movff	f_open@dw,move_window@sector
 10785  00181A  C0D9  F075         	movff	f_open@dw+1,move_window@sector+1
 10786  00181E  C0DA  F076         	movff	f_open@dw+2,move_window@sector+2
 10787  001822  C0DB  F077         	movff	f_open@dw+3,move_window@sector+3
 10788  001826  ECA0  F017         	call	_move_window	;wreg free
 10789  00182A  0900               	iorlw	0
 10790  00182C  A4D8               	btfss	status,2,c
 10791  00182E  D002               	goto	l11872
 10792  001830                     u14220:
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;tff.c: 887: return FR_RW_ERROR;
 10796  001830  0E08               	movlw	8
 10797  001832  0012               	return	
 10798  001834                     l11872:
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 10802  001834  0EFF               	movlw	255
 10803  001836  6FC6               	movwf	??_f_open& (0+255),b
 10804  001838  0EFF               	movlw	255
 10805  00183A  6FC7               	movwf	(??_f_open+1)& (0+255),b
 10806  00183C  C0D6  F0C8         	movff	f_open@rs,??_f_open+2
 10807  001840  C0D7  F0C9         	movff	f_open@rs+1,??_f_open+3
 10808  001844  51C6               	movf	??_f_open& (0+255),w,b
 10809  001846  27C8               	addwf	(??_f_open+2)& (0+255),f,b
 10810  001848  51C7               	movf	(??_f_open+1)& (0+255),w,b
 10811  00184A  23C9               	addwfc	(??_f_open+3)& (0+255),f,b
 10812  00184C  EE20 F018          	lfsr	2,24
 10813  001850  51E3               	movf	(f_open@dj+4)& (0+255),w,b
 10814  001852  26D9               	addwf	fsr2l,f,c
 10815  001854  51E4               	movf	(f_open@dj+5)& (0+255),w,b
 10816  001856  22DA               	addwfc	fsr2h,f,c
 10817  001858  C0C8  FFDE         	movff	??_f_open+2,postinc2
 10818  00185C  C0C9  FFDD         	movff	??_f_open+3,postdec2
 10819  001860                     l11874:
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 10823  001860  A7C5               	btfss	f_open@mode& (0+255),3,b
 10824  001862  D045               	goto	l11906
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;tff.c: 892: dir[11] = 0;
 10828  001864  EE20 F00B          	lfsr	2,11
 10829  001868  51DD               	movf	f_open@dir& (0+255),w,b
 10830  00186A  26D9               	addwf	fsr2l,f,c
 10831  00186C  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10832  00186E  22DA               	addwfc	fsr2h,f,c
 10833  001870  0E00               	movlw	0
 10834  001872  6EDF               	movwf	indf2,c
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;tff.c: 893: dw = get_fattime();
 10838  001874  EC4D  F01B         	call	_get_fattime	;wreg free
 10839  001878  C01E  F0D8         	movff	?_get_fattime,f_open@dw
 10840  00187C  C01F  F0D9         	movff	?_get_fattime+1,f_open@dw+1
 10841  001880  C020  F0DA         	movff	?_get_fattime+2,f_open@dw+2
 10842  001884  C021  F0DB         	movff	?_get_fattime+3,f_open@dw+3
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 10846  001888  EE20 F00E          	lfsr	2,14
 10847  00188C  51DD               	movf	f_open@dir& (0+255),w,b
 10848  00188E  26D9               	addwf	fsr2l,f,c
 10849  001890  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10850  001892  22DA               	addwfc	fsr2h,f,c
 10851  001894  C0D8  FFDE         	movff	f_open@dw,postinc2
 10852  001898  C0D9  FFDE         	movff	f_open@dw+1,postinc2
 10853  00189C  C0DA  FFDE         	movff	f_open@dw+2,postinc2
 10854  0018A0  C0DB  FFDE         	movff	f_open@dw+3,postinc2
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;tff.c: 895: dj.fs->winflag = 1;
 10858  0018A4  EE20 F01F          	lfsr	2,31
 10859  0018A8  51E3               	movf	(f_open@dj+4)& (0+255),w,b
 10860  0018AA  26D9               	addwf	fsr2l,f,c
 10861  0018AC  51E4               	movf	(f_open@dj+5)& (0+255),w,b
 10862  0018AE  22DA               	addwfc	fsr2h,f,c
 10863  0018B0  0E01               	movlw	1
 10864  0018B2  6EDF               	movwf	indf2,c
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;tff.c: 896: mode |= 0x20;
 10868  0018B4  8BC5               	bsf	f_open@mode& (0+255),5,b
 10869  0018B6  D01B               	goto	l11906
 10870  0018B8                     l11886:
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 10874  0018B8  51DC               	movf	f_open@res& (0+255),w,b
 10875  0018BA  A4D8               	btfss	status,2,c
 10876  0018BC  D70B               	goto	u14120
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 10880  0018BE  51DD               	movf	f_open@dir& (0+255),w,b
 10881  0018C0  11DE               	iorwf	(f_open@dir+1)& (0+255),w,b
 10882  0018C2  B4D8               	btfsc	status,2,c
 10883  0018C4  D008               	goto	u14260
 10884                           
 10885                           ; BSR set to: 0
 10886  0018C6  EE20 F00B          	lfsr	2,11
 10887  0018CA  51DD               	movf	f_open@dir& (0+255),w,b
 10888  0018CC  26D9               	addwf	fsr2l,f,c
 10889  0018CE  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10890  0018D0  22DA               	addwfc	fsr2h,f,c
 10891  0018D2  A8DF               	btfss	indf2,4,c
 10892  0018D4  D002               	goto	l1050
 10893  0018D6                     u14260:
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;tff.c: 904: return FR_NO_FILE;
 10897  0018D6  0E02               	movlw	2
 10898  0018D8  0012               	return	
 10899  0018DA                     l1050:
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 10903  0018DA  A3C5               	btfss	f_open@mode& (0+255),1,b
 10904  0018DC  D008               	goto	l11906
 10905                           
 10906                           ; BSR set to: 0
 10907  0018DE  EE20 F00B          	lfsr	2,11
 10908  0018E2  51DD               	movf	f_open@dir& (0+255),w,b
 10909  0018E4  26D9               	addwf	fsr2l,f,c
 10910  0018E6  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10911  0018E8  22DA               	addwfc	fsr2h,f,c
 10912  0018EA  B0DF               	btfsc	indf2,0,c
 10913  0018EC  D753               	goto	u14190
 10914  0018EE                     l11906:
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 10918  0018EE  EE20 F004          	lfsr	2,4
 10919  0018F2  51E3               	movf	(f_open@dj+4)& (0+255),w,b
 10920  0018F4  26D9               	addwf	fsr2l,f,c
 10921  0018F6  51E4               	movf	(f_open@dj+5)& (0+255),w,b
 10922  0018F8  22DA               	addwfc	fsr2h,f,c
 10923  0018FA  EE10 F016          	lfsr	1,22
 10924  0018FE  51C1               	movf	f_open@fp& (0+255),w,b
 10925  001900  26E1               	addwf	fsr1l,f,c
 10926  001902  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10927  001904  22E2               	addwfc	fsr1h,f,c
 10928  001906  CFDE FFE6          	movff	postinc2,postinc1
 10929  00190A  CFDE FFE6          	movff	postinc2,postinc1
 10930  00190E  CFDE FFE6          	movff	postinc2,postinc1
 10931  001912  CFDE FFE6          	movff	postinc2,postinc1
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;tff.c: 910: fp->dir_ptr = dir;
 10935  001916  EE20 F01A          	lfsr	2,26
 10936  00191A  51C1               	movf	f_open@fp& (0+255),w,b
 10937  00191C  26D9               	addwf	fsr2l,f,c
 10938  00191E  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10939  001920  22DA               	addwfc	fsr2h,f,c
 10940  001922  C0DD  FFDE         	movff	f_open@dir,postinc2
 10941  001926  C0DE  FFDD         	movff	f_open@dir+1,postdec2
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;tff.c: 912: fp->flag = mode;
 10945  00192A  EE20 F002          	lfsr	2,2
 10946  00192E  51C1               	movf	f_open@fp& (0+255),w,b
 10947  001930  26D9               	addwf	fsr2l,f,c
 10948  001932  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10949  001934  22DA               	addwfc	fsr2h,f,c
 10950  001936  C0C5  FFDF         	movff	f_open@mode,indf2
 10951                           
 10952                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 10953  00193A  EE20 F01A          	lfsr	2,26
 10954  00193E  51DD               	movf	f_open@dir& (0+255),w,b
 10955  001940  26D9               	addwf	fsr2l,f,c
 10956  001942  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10957  001944  22DA               	addwfc	fsr2h,f,c
 10958  001946  EE10 F00E          	lfsr	1,14
 10959  00194A  51C1               	movf	f_open@fp& (0+255),w,b
 10960  00194C  26E1               	addwf	fsr1l,f,c
 10961  00194E  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10962  001950  22E2               	addwfc	fsr1h,f,c
 10963  001952  CFDE FFE6          	movff	postinc2,postinc1
 10964  001956  CFDD FFE5          	movff	postdec2,postdec1
 10965                           
 10966                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 10967  00195A  EE20 F01C          	lfsr	2,28
 10968  00195E  51DD               	movf	f_open@dir& (0+255),w,b
 10969  001960  26D9               	addwf	fsr2l,f,c
 10970  001962  51DE               	movf	(f_open@dir+1)& (0+255),w,b
 10971  001964  22DA               	addwfc	fsr2h,f,c
 10972  001966  EE10 F00A          	lfsr	1,10
 10973  00196A  51C1               	movf	f_open@fp& (0+255),w,b
 10974  00196C  26E1               	addwf	fsr1l,f,c
 10975  00196E  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10976  001970  22E2               	addwfc	fsr1h,f,c
 10977  001972  CFDE FFE6          	movff	postinc2,postinc1
 10978  001976  CFDE FFE6          	movff	postinc2,postinc1
 10979  00197A  CFDE FFE6          	movff	postinc2,postinc1
 10980  00197E  CFDE FFE6          	movff	postinc2,postinc1
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 10984  001982  EE20 F006          	lfsr	2,6
 10985  001986  51C1               	movf	f_open@fp& (0+255),w,b
 10986  001988  26D9               	addwf	fsr2l,f,c
 10987  00198A  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10988  00198C  22DA               	addwfc	fsr2h,f,c
 10989  00198E  6ADE               	clrf	postinc2,c
 10990  001990  6ADE               	clrf	postinc2,c
 10991  001992  6ADE               	clrf	postinc2,c
 10992  001994  6ADD               	clrf	postdec2,c
 10993                           
 10994                           ; BSR set to: 0
 10995  001996  EE20 F003          	lfsr	2,3
 10996  00199A  51C1               	movf	f_open@fp& (0+255),w,b
 10997  00199C  26D9               	addwf	fsr2l,f,c
 10998  00199E  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 10999  0019A0  22DA               	addwfc	fsr2h,f,c
 11000  0019A2  0EFF               	movlw	255
 11001  0019A4  6EDF               	movwf	indf2,c
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11005  0019A6  EE20 F004          	lfsr	2,4
 11006  0019AA  51C1               	movf	f_open@fp& (0+255),w,b
 11007  0019AC  26D9               	addwf	fsr2l,f,c
 11008  0019AE  51C2               	movf	(f_open@fp+1)& (0+255),w,b
 11009  0019B0  22DA               	addwfc	fsr2h,f,c
 11010  0019B2  C0E3  FFDE         	movff	f_open@dj+4,postinc2
 11011  0019B6  C0E4  FFDD         	movff	f_open@dj+5,postdec2
 11012                           
 11013                           ; BSR set to: 0
 11014  0019BA  C0E3  FFD9         	movff	f_open@dj+4,fsr2l
 11015  0019BE  C0E4  FFDA         	movff	f_open@dj+5,fsr2h
 11016  0019C2  C0C1  FFE1         	movff	f_open@fp,fsr1l
 11017  0019C6  C0C2  FFE2         	movff	f_open@fp+1,fsr1h
 11018  0019CA  CFDE FFE6          	movff	postinc2,postinc1
 11019  0019CE  CFDD FFE5          	movff	postdec2,postdec1
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;tff.c: 922: return FR_OK;
 11023  0019D2  0E00               	movlw	0
 11024                           
 11025                           ; BSR set to: 0
 11026  0019D4  0012               	return		;funcret
 11027  0019D6                     __end_of_f_open:
 11028                           	callstack 0
 11029                           
 11030 ;; *************** function _trace_path *****************
 11031 ;; Defined at:
 11032 ;;		line 502 in file "bibliotecas/tff.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  dj              1   74[BANK0 ] PTR struct _DIR_E
 11035 ;;		 -> f_open@dj(14), 
 11036 ;;  fn              1   75[BANK0 ] PTR unsigned char 
 11037 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11038 ;;  path            2   76[BANK0 ] PTR const unsigned char 
 11039 ;;		 -> STR_19(13), filename(20), 
 11040 ;;  dir             1   78[BANK0 ] PTR PTR unsigned char 
 11041 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  dptr            2   92[BANK0 ] PTR unsigned char 
 11044 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11045 ;;  clust           2   89[BANK0 ] unsigned short 
 11046 ;;  fs              2   87[BANK0 ] PTR struct _FATFS
 11047 ;;		 -> NULL(0), fs(544), 
 11048 ;;  ds              1   91[BANK0 ] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      enum E155
 11051 ;; Registers used:
 11052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 3F/0
 11055 ;;		On exit  : 3F/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11058 ;;      Params:         0       5       0       0       0       0       0       0       0
 11059 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11060 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11061 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11062 ;;Total ram usage:       20 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:   11
 11065 ;; This function calls:
 11066 ;;		_clust2sect
 11067 ;;		_make_dirfile
 11068 ;;		_memcmp
 11069 ;;		_move_window
 11070 ;;		_next_dir_entry
 11071 ;; This function is called by:
 11072 ;;		_f_open
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           	psect	text60
 11077  001F5A                     __ptext60:
 11078                           	callstack 0
 11079  001F5A                     _trace_path:
 11080                           	callstack 14
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;tff.c: 512: FATFS *fs = FatFs;
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;incstack = 0
 11087  001F5A  C036  F0B7         	movff	_FatFs,trace_path@fs
 11088  001F5E  C037  F0B8         	movff	_FatFs+1,trace_path@fs+1
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;tff.c: 515: dj->fs = fs;
 11092  001F62  51AA               	movf	trace_path@dj& (0+255),w,b
 11093  001F64  6ED9               	movwf	fsr2l,c
 11094  001F66  6ADA               	clrf	fsr2h,c
 11095  001F68  0E04               	movlw	4
 11096  001F6A  26D9               	addwf	fsr2l,f,c
 11097  001F6C  C0B7  FFDE         	movff	trace_path@fs,postinc2
 11098  001F70  C0B8  FFDD         	movff	trace_path@fs+1,postdec2
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;tff.c: 516: clust = fs->dirbase;
 11102  001F74  EE20 F00C          	lfsr	2,12
 11103  001F78  51B7               	movf	trace_path@fs& (0+255),w,b
 11104  001F7A  26D9               	addwf	fsr2l,f,c
 11105  001F7C  51B8               	movf	(trace_path@fs+1)& (0+255),w,b
 11106  001F7E  22DA               	addwfc	fsr2h,f,c
 11107  001F80  CFDE F0B9          	movff	postinc2,trace_path@clust
 11108  001F84  CFDD F0BA          	movff	postdec2,trace_path@clust+1
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11112  001F88  51AA               	movf	trace_path@dj& (0+255),w,b
 11113  001F8A  6ED9               	movwf	fsr2l,c
 11114  001F8C  6ADA               	clrf	fsr2h,c
 11115  001F8E  0E06               	movlw	6
 11116  001F90  26D9               	addwf	fsr2l,f,c
 11117  001F92  0E00               	movlw	0
 11118  001F94  6EDE               	movwf	postinc2,c
 11119  001F96  0E00               	movlw	0
 11120  001F98  6EDD               	movwf	postdec2,c
 11121  001F9A  51AA               	movf	trace_path@dj& (0+255),w,b
 11122  001F9C  6EE1               	movwf	fsr1l,c
 11123  001F9E  6AE2               	clrf	fsr1h,c
 11124  001FA0  0E08               	movlw	8
 11125  001FA2  26E1               	addwf	fsr1l,f,c
 11126  001FA4  CFDE FFE6          	movff	postinc2,postinc1
 11127  001FA8  CFDD FFE5          	movff	postdec2,postdec1
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;tff.c: 525: dj->sect = clust;
 11131  001FAC  51B9               	movf	trace_path@clust& (0+255),w,b
 11132  001FAE  6FAF               	movwf	??_trace_path& (0+255),b
 11133  001FB0  51BA               	movf	(trace_path@clust+1)& (0+255),w,b
 11134  001FB2  6FB0               	movwf	(??_trace_path+1)& (0+255),b
 11135  001FB4  6BB1               	clrf	(??_trace_path+2)& (0+255),b
 11136  001FB6  6BB2               	clrf	(??_trace_path+3)& (0+255),b
 11137  001FB8  51AA               	movf	trace_path@dj& (0+255),w,b
 11138  001FBA  6ED9               	movwf	fsr2l,c
 11139  001FBC  6ADA               	clrf	fsr2h,c
 11140  001FBE  0E0A               	movlw	10
 11141  001FC0  26D9               	addwf	fsr2l,f,c
 11142  001FC2  C0AF  FFDE         	movff	??_trace_path,postinc2
 11143  001FC6  C0B0  FFDE         	movff	??_trace_path+1,postinc2
 11144  001FCA  C0B1  FFDE         	movff	??_trace_path+2,postinc2
 11145  001FCE  C0B2  FFDE         	movff	??_trace_path+3,postinc2
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11149  001FD2  51AA               	movf	trace_path@dj& (0+255),w,b
 11150  001FD4  6ED9               	movwf	fsr2l,c
 11151  001FD6  6ADA               	clrf	fsr2h,c
 11152  001FD8  0E02               	movlw	2
 11153  001FDA  26D9               	addwf	fsr2l,f,c
 11154  001FDC  0E00               	movlw	0
 11155  001FDE  6EDE               	movwf	postinc2,c
 11156  001FE0  0E00               	movlw	0
 11157  001FE2  6EDD               	movwf	postdec2,c
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;tff.c: 529: if (*path == '\0') {
 11161  001FE4  C0AC  FFF6         	movff	trace_path@path,tblptrl
 11162  001FE8  C0AD  FFF7         	movff	trace_path@path+1,tblptrh
 11163  001FEC  6AF8               	clrf	tblptru,c
 11164  001FEE  0E07               	movlw	(high __ramtop+-1)
 11165  001FF0  64F7               	cpfsgt	tblptrh,c
 11166  001FF2  D003               	bra	u13377
 11167  001FF4  0008               	tblrd		*
 11168  001FF6  50F5               	movf	tablat,w,c
 11169  001FF8  D005               	bra	u13370
 11170  001FFA                     u13377:
 11171  001FFA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11172  001FFE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11173  002002  50E7               	movf	indf1,w,c
 11174  002004                     u13370:
 11175  002004  0900               	iorlw	0
 11176  002006  A4D8               	btfss	status,2,c
 11177  002008  D00A               	goto	l11344
 11178                           
 11179                           ;tff.c: 530: *dir = (0); return FR_OK;
 11180  00200A  0100               	movlb	0	; () banked
 11181  00200C  51AE               	movf	trace_path@dir& (0+255),w,b
 11182  00200E  6ED9               	movwf	fsr2l,c
 11183  002010  6ADA               	clrf	fsr2h,c
 11184  002012  0E00               	movlw	0
 11185  002014  6EDE               	movwf	postinc2,c
 11186  002016  0E00               	movlw	0
 11187  002018  6EDD               	movwf	postdec2,c
 11188  00201A                     l11340:
 11189                           
 11190                           ; BSR set to: 0
 11191  00201A  0E00               	movlw	0
 11192  00201C  0012               	return	
 11193  00201E                     l11344:
 11194                           
 11195                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11196  00201E  0EAC               	movlw	low trace_path@path
 11197  002020  6E22               	movwf	make_dirfile@path^0,c
 11198  002022  C0AB  F023         	movff	trace_path@fn,make_dirfile@dirname
 11199  002026  ECA0  F01A         	call	_make_dirfile	;wreg free
 11200  00202A  0100               	movlb	0	; () banked
 11201  00202C  6FBB               	movwf	trace_path@ds& (0+255),b
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11205  00202E  05BB               	decf	trace_path@ds& (0+255),w,b
 11206  002030  A4D8               	btfss	status,2,c
 11207  002032  D002               	goto	l11352
 11208                           
 11209                           ; BSR set to: 0
 11210  002034  0E04               	movlw	4
 11211  002036  0012               	return	
 11212  002038                     l11352:
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11216  002038  51AA               	movf	trace_path@dj& (0+255),w,b
 11217  00203A  6ED9               	movwf	fsr2l,c
 11218  00203C  6ADA               	clrf	fsr2h,c
 11219  00203E  0E0A               	movlw	10
 11220  002040  26D9               	addwf	fsr2l,f,c
 11221  002042  CFDE F074          	movff	postinc2,move_window@sector
 11222  002046  CFDE F075          	movff	postinc2,move_window@sector+1
 11223  00204A  CFDE F076          	movff	postinc2,move_window@sector+2
 11224  00204E  CFDE F077          	movff	postinc2,move_window@sector+3
 11225  002052  ECA0  F017         	call	_move_window	;wreg free
 11226  002056  0900               	iorlw	0
 11227  002058  A4D8               	btfss	status,2,c
 11228  00205A  D002               	goto	l11358
 11229                           
 11230                           ; BSR set to: 0
 11231  00205C  0E08               	movlw	8
 11232  00205E  0012               	return	
 11233  002060                     l11358:
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 11237  002060  51AA               	movf	trace_path@dj& (0+255),w,b
 11238  002062  6ED9               	movwf	fsr2l,c
 11239  002064  6ADA               	clrf	fsr2h,c
 11240  002066  0E02               	movlw	2
 11241  002068  26D9               	addwf	fsr2l,f,c
 11242  00206A  CFDE F0AF          	movff	postinc2,??_trace_path
 11243  00206E  CFDD F0B0          	movff	postdec2,??_trace_path+1
 11244  002072  0E0F               	movlw	15
 11245  002074  17AF               	andwf	??_trace_path& (0+255),f,b
 11246  002076  0E00               	movlw	0
 11247  002078  17B0               	andwf	(??_trace_path+1)& (0+255),f,b
 11248  00207A  0E05               	movlw	5
 11249  00207C                     u13415:
 11250  00207C  90D8               	bcf	status,0,c
 11251  00207E  37AF               	rlcf	??_trace_path& (0+255),f,b
 11252  002080  37B0               	rlcf	(??_trace_path+1)& (0+255),f,b
 11253  002082  2EE8               	decfsz	wreg,f,c
 11254  002084  D7FB               	goto	u13415
 11255  002086  C0B7  F0B1         	movff	trace_path@fs,??_trace_path+2
 11256  00208A  C0B8  F0B2         	movff	trace_path@fs+1,??_trace_path+3
 11257  00208E  51AF               	movf	??_trace_path& (0+255),w,b
 11258  002090  27B1               	addwf	(??_trace_path+2)& (0+255),f,b
 11259  002092  51B0               	movf	(??_trace_path+1)& (0+255),w,b
 11260  002094  23B2               	addwfc	(??_trace_path+3)& (0+255),f,b
 11261  002096  0E20               	movlw	32
 11262  002098  25B1               	addwf	(??_trace_path+2)& (0+255),w,b
 11263  00209A  6FBC               	movwf	trace_path@dptr& (0+255),b
 11264  00209C  0E00               	movlw	0
 11265  00209E  21B2               	addwfc	(??_trace_path+3)& (0+255),w,b
 11266  0020A0  6FBD               	movwf	(trace_path@dptr+1)& (0+255),b
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;tff.c: 539: if (dptr[0] == 0)
 11270  0020A2  C0BC  FFD9         	movff	trace_path@dptr,fsr2l
 11271  0020A6  C0BD  FFDA         	movff	trace_path@dptr+1,fsr2h
 11272  0020AA  50DF               	movf	indf2,w,c
 11273  0020AC  A4D8               	btfss	status,2,c
 11274  0020AE  D00D               	goto	l11370
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 11278  0020B0  51BB               	movf	trace_path@ds& (0+255),w,b
 11279  0020B2  B4D8               	btfsc	status,2,c
 11280  0020B4  D004               	goto	l11366
 11281                           
 11282                           ; BSR set to: 0
 11283  0020B6  0E00               	movlw	0
 11284  0020B8  6FB4               	movwf	(_trace_path$1724+1)& (0+255),b
 11285  0020BA  0E03               	movlw	3
 11286  0020BC  D003               	goto	L3
 11287  0020BE                     l11366:
 11288                           
 11289                           ; BSR set to: 0
 11290  0020BE  0E00               	movlw	0
 11291  0020C0  6FB4               	movwf	(_trace_path$1724+1)& (0+255),b
 11292  0020C2  0E02               	movlw	2
 11293  0020C4                     L3:
 11294  0020C4  6FB3               	movwf	_trace_path$1724& (0+255),b
 11295                           
 11296                           ; BSR set to: 0
 11297  0020C6  51B3               	movf	_trace_path$1724& (0+255),w,b
 11298  0020C8  0012               	return	
 11299  0020CA                     l11370:
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 11303  0020CA  C0BC  FFD9         	movff	trace_path@dptr,fsr2l
 11304  0020CE  C0BD  FFDA         	movff	trace_path@dptr+1,fsr2h
 11305  0020D2  0EE5               	movlw	229
 11306  0020D4  18DE               	xorwf	postinc2,w,c
 11307  0020D6  B4D8               	btfsc	status,2,c
 11308  0020D8  D019               	goto	l11378
 11309                           
 11310                           ; BSR set to: 0
 11311  0020DA  EE20 F00B          	lfsr	2,11
 11312  0020DE  51BC               	movf	trace_path@dptr& (0+255),w,b
 11313  0020E0  26D9               	addwf	fsr2l,f,c
 11314  0020E2  51BD               	movf	(trace_path@dptr+1)& (0+255),w,b
 11315  0020E4  22DA               	addwfc	fsr2h,f,c
 11316  0020E6  B6DF               	btfsc	indf2,3,c
 11317  0020E8  D011               	goto	l11378
 11318                           
 11319                           ; BSR set to: 0
 11320  0020EA  C0BC  F01A         	movff	trace_path@dptr,memcmp@s1
 11321  0020EE  C0BD  F01B         	movff	trace_path@dptr+1,memcmp@s1+1
 11322  0020F2  C0AB  F01C         	movff	trace_path@fn,memcmp@s2
 11323  0020F6  6A1D               	clrf	(memcmp@s2+1)^0,c
 11324  0020F8  0E00               	movlw	0
 11325  0020FA  6E1F               	movwf	(memcmp@n+1)^0,c
 11326  0020FC  0E0B               	movlw	11
 11327  0020FE  6E1E               	movwf	memcmp@n^0,c
 11328  002100  EC42  F023         	call	_memcmp	;wreg free
 11329  002104  501A               	movf	?_memcmp^0,w,c
 11330  002106  101B               	iorwf	(?_memcmp+1)^0,w,c
 11331  002108  B4D8               	btfsc	status,2,c
 11332  00210A  D014               	goto	l11388
 11333  00210C                     l11378:
 11334                           
 11335                           ;tff.c: 544: if (!next_dir_entry(dj))
 11336  00210C  C0AA  F09E         	movff	trace_path@dj,next_dir_entry@dj
 11337  002110  EC3B  F019         	call	_next_dir_entry	;wreg free
 11338  002114  0900               	iorlw	0
 11339  002116  A4D8               	btfss	status,2,c
 11340  002118  D78F               	goto	l11352
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 11344  00211A  51BB               	movf	trace_path@ds& (0+255),w,b
 11345  00211C  B4D8               	btfsc	status,2,c
 11346  00211E  D004               	goto	l11384
 11347                           
 11348                           ; BSR set to: 0
 11349  002120  0E00               	movlw	0
 11350  002122  6FB6               	movwf	(_trace_path$1726+1)& (0+255),b
 11351  002124  0E03               	movlw	3
 11352  002126  D003               	goto	L4
 11353  002128                     l11384:
 11354                           
 11355                           ; BSR set to: 0
 11356  002128  0E00               	movlw	0
 11357  00212A  6FB6               	movwf	(_trace_path$1726+1)& (0+255),b
 11358  00212C  0E02               	movlw	2
 11359  00212E                     L4:
 11360  00212E  6FB5               	movwf	_trace_path$1726& (0+255),b
 11361                           
 11362                           ; BSR set to: 0
 11363  002130  51B5               	movf	_trace_path$1726& (0+255),w,b
 11364  002132  0012               	return	
 11365  002134                     l11388:
 11366                           
 11367                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 11368  002134  0100               	movlb	0	; () banked
 11369  002136  51BB               	movf	trace_path@ds& (0+255),w,b
 11370  002138  A4D8               	btfss	status,2,c
 11371  00213A  D008               	goto	l11396
 11372                           
 11373                           ; BSR set to: 0
 11374  00213C  51AE               	movf	trace_path@dir& (0+255),w,b
 11375  00213E  6ED9               	movwf	fsr2l,c
 11376  002140  6ADA               	clrf	fsr2h,c
 11377  002142  C0BC  FFDE         	movff	trace_path@dptr,postinc2
 11378  002146  C0BD  FFDD         	movff	trace_path@dptr+1,postdec2
 11379  00214A  D767               	goto	l11340
 11380  00214C                     l11396:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 11384  00214C  EE20 F00B          	lfsr	2,11
 11385  002150  51BC               	movf	trace_path@dptr& (0+255),w,b
 11386  002152  26D9               	addwf	fsr2l,f,c
 11387  002154  51BD               	movf	(trace_path@dptr+1)& (0+255),w,b
 11388  002156  22DA               	addwfc	fsr2h,f,c
 11389  002158  B8DF               	btfsc	indf2,4,c
 11390  00215A  D002               	goto	l11402
 11391                           
 11392                           ; BSR set to: 0
 11393  00215C  0E03               	movlw	3
 11394  00215E  0012               	return	
 11395  002160                     l11402:
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 11399  002160  EE20 F01A          	lfsr	2,26
 11400  002164  51BC               	movf	trace_path@dptr& (0+255),w,b
 11401  002166  26D9               	addwf	fsr2l,f,c
 11402  002168  51BD               	movf	(trace_path@dptr+1)& (0+255),w,b
 11403  00216A  22DA               	addwfc	fsr2h,f,c
 11404  00216C  CFDE F0B9          	movff	postinc2,trace_path@clust
 11405  002170  CFDD F0BA          	movff	postdec2,trace_path@clust+1
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 11409  002174  51AA               	movf	trace_path@dj& (0+255),w,b
 11410  002176  6ED9               	movwf	fsr2l,c
 11411  002178  6ADA               	clrf	fsr2h,c
 11412  00217A  0E06               	movlw	6
 11413  00217C  26D9               	addwf	fsr2l,f,c
 11414  00217E  C0B9  FFDE         	movff	trace_path@clust,postinc2
 11415  002182  C0BA  FFDD         	movff	trace_path@clust+1,postdec2
 11416  002186  51AA               	movf	trace_path@dj& (0+255),w,b
 11417  002188  6EE1               	movwf	fsr1l,c
 11418  00218A  6AE2               	clrf	fsr1h,c
 11419  00218C  0E08               	movlw	8
 11420  00218E  26E1               	addwf	fsr1l,f,c
 11421  002190  CFDE FFE6          	movff	postinc2,postinc1
 11422  002194  CFDD FFE5          	movff	postdec2,postdec1
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;tff.c: 555: dj->sect = clust2sect(clust);
 11426  002198  C0B9  F026         	movff	trace_path@clust,clust2sect@clust
 11427  00219C  C0BA  F027         	movff	trace_path@clust+1,clust2sect@clust+1
 11428  0021A0  EC52  F021         	call	_clust2sect	;wreg free
 11429  0021A4  0100               	movlb	0	; () banked
 11430  0021A6  51AA               	movf	trace_path@dj& (0+255),w,b
 11431  0021A8  6ED9               	movwf	fsr2l,c
 11432  0021AA  6ADA               	clrf	fsr2h,c
 11433  0021AC  0E0A               	movlw	10
 11434  0021AE  26D9               	addwf	fsr2l,f,c
 11435  0021B0  C026  FFDE         	movff	?_clust2sect,postinc2
 11436  0021B4  C027  FFDE         	movff	?_clust2sect+1,postinc2
 11437  0021B8  C028  FFDE         	movff	?_clust2sect+2,postinc2
 11438  0021BC  C029  FFDE         	movff	?_clust2sect+3,postinc2
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;tff.c: 556: dj->index = 2;
 11442  0021C0  51AA               	movf	trace_path@dj& (0+255),w,b
 11443  0021C2  6ED9               	movwf	fsr2l,c
 11444  0021C4  6ADA               	clrf	fsr2h,c
 11445  0021C6  0E02               	movlw	2
 11446  0021C8  26D9               	addwf	fsr2l,f,c
 11447  0021CA  0E02               	movlw	2
 11448  0021CC  6EDE               	movwf	postinc2,c
 11449  0021CE  0E00               	movlw	0
 11450  0021D0  6EDD               	movwf	postdec2,c
 11451                           
 11452                           ;tff.c: 557: }
 11453  0021D2  D725               	goto	l11344
 11454  0021D4                     __end_of_trace_path:
 11455                           	callstack 0
 11456                           
 11457 ;; *************** function _make_dirfile *****************
 11458 ;; Defined at:
 11459 ;;		line 439 in file "bibliotecas/tff.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  path            1   33[COMRAM] PTR PTR const unsigned c
 11462 ;;		 -> trace_path@path(2), 
 11463 ;;  dirname         1   34[COMRAM] PTR unsigned char 
 11464 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  c               1   43[COMRAM] unsigned char 
 11467 ;;  n               1   42[COMRAM] unsigned char 
 11468 ;;  a               1   41[COMRAM] unsigned char 
 11469 ;;  t               1   40[COMRAM] unsigned char 
 11470 ;;  b               1   39[COMRAM] unsigned char 
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      unsigned char 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11480 ;;      Params:         2       0       0       0       0       0       0       0       0
 11481 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11482 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11483 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11484 ;;Total ram usage:       11 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    4
 11487 ;; This function calls:
 11488 ;;		_memset
 11489 ;; This function is called by:
 11490 ;;		_trace_path
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text61
 11495  003540                     __ptext61:
 11496                           	callstack 0
 11497  003540                     _make_dirfile:
 11498                           	callstack 20
 11499                           
 11500                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;incstack = 0
 11504  003540  C023  F01A         	movff	make_dirfile@dirname,memset@p1
 11505  003544  6A1B               	clrf	(memset@p1+1)^0,c
 11506  003546  0E00               	movlw	0
 11507  003548  6E1D               	movwf	(memset@c+1)^0,c
 11508  00354A  0E20               	movlw	32
 11509  00354C  6E1C               	movwf	memset@c^0,c
 11510  00354E  0E00               	movlw	0
 11511  003550  6E1F               	movwf	(memset@n+1)^0,c
 11512  003552  0E0B               	movlw	11
 11513  003554  6E1E               	movwf	memset@n^0,c
 11514  003556  EC40  F02B         	call	_memset	;wreg free
 11515                           
 11516                           ;tff.c: 448: a = 0; b = 0x18;
 11517  00355A  0E00               	movlw	0
 11518  00355C  6E2A               	movwf	make_dirfile@a^0,c
 11519  00355E  0E18               	movlw	24
 11520  003560  6E28               	movwf	make_dirfile@b^0,c
 11521                           
 11522                           ;tff.c: 449: n = 0; t = 8;
 11523  003562  0E00               	movlw	0
 11524  003564  6E2B               	movwf	make_dirfile@n^0,c
 11525  003566  0E08               	movlw	8
 11526  003568  6E29               	movwf	make_dirfile@t^0,c
 11527  00356A                     l11072:
 11528                           
 11529                           ;tff.c: 451: c = *(*path)++;
 11530  00356A  5022               	movf	make_dirfile@path^0,w,c
 11531  00356C  6ED9               	movwf	fsr2l,c
 11532  00356E  6ADA               	clrf	fsr2h,c
 11533  003570  CFDF F024          	movff	indf2,??_make_dirfile
 11534  003574  0E01               	movlw	1
 11535  003576  26DE               	addwf	postinc2,f,c
 11536  003578  CFDF F025          	movff	indf2,??_make_dirfile+1
 11537  00357C  0E00               	movlw	0
 11538  00357E  22DD               	addwfc	postdec2,f,c
 11539  003580  C024  FFF6         	movff	??_make_dirfile,tblptrl
 11540  003584  C025  FFF7         	movff	??_make_dirfile+1,tblptrh
 11541  003588  6AF8               	clrf	tblptru,c
 11542  00358A  0E07               	movlw	(high __ramtop+-1)
 11543  00358C  64F7               	cpfsgt	tblptrh,c
 11544  00358E  D003               	bra	u12907
 11545  003590  0008               	tblrd		*
 11546  003592  50F5               	movf	tablat,w,c
 11547  003594  D005               	bra	u12900
 11548  003596                     u12907:
 11549  003596  CFF6 FFE1          	movff	tblptrl,fsr1l
 11550  00359A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11551  00359E  50E7               	movf	indf1,w,c
 11552  0035A0                     u12900:
 11553  0035A0  6E2C               	movwf	make_dirfile@c^0,c
 11554                           
 11555                           ;tff.c: 452: if (c == '\0' || c == '/') {
 11556  0035A2  502C               	movf	make_dirfile@c^0,w,c
 11557  0035A4  B4D8               	btfsc	status,2,c
 11558  0035A6  D004               	goto	u12920
 11559  0035A8  0E2F               	movlw	47
 11560  0035AA  182C               	xorwf	make_dirfile@c^0,w,c
 11561  0035AC  A4D8               	btfss	status,2,c
 11562  0035AE  D012               	goto	l11092
 11563  0035B0                     u12920:
 11564                           
 11565                           ;tff.c: 453: if (n == 0) break;
 11566  0035B0  502B               	movf	make_dirfile@n^0,w,c
 11567  0035B2  B4D8               	btfsc	status,2,c
 11568  0035B4  D070               	goto	l11180
 11569  0035B6  502A               	movf	make_dirfile@a^0,w,c
 11570  0035B8  1428               	andwf	make_dirfile@b^0,w,c
 11571  0035BA  6E24               	movwf	??_make_dirfile^0,c
 11572  0035BC  5024               	movf	??_make_dirfile^0,w,c
 11573  0035BE  6E26               	movwf	_make_dirfile$1677^0,c
 11574  0035C0  6A27               	clrf	(_make_dirfile$1677+1)^0,c
 11575  0035C2  5023               	movf	make_dirfile@dirname^0,w,c
 11576  0035C4  6ED9               	movwf	fsr2l,c
 11577  0035C6  6ADA               	clrf	fsr2h,c
 11578  0035C8  0E0B               	movlw	11
 11579  0035CA  26D9               	addwf	fsr2l,f,c
 11580  0035CC  C026  FFDF         	movff	_make_dirfile$1677,indf2
 11581                           
 11582                           ;tff.c: 455: return c;
 11583  0035D0  502C               	movf	make_dirfile@c^0,w,c
 11584  0035D2  0012               	return	
 11585  0035D4                     l11092:
 11586                           
 11587                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 11588  0035D4  0E20               	movlw	32
 11589  0035D6  642C               	cpfsgt	make_dirfile@c^0,c
 11590  0035D8  D05E               	goto	l11180
 11591  0035DA  0E7F               	movlw	127
 11592  0035DC  182C               	xorwf	make_dirfile@c^0,w,c
 11593  0035DE  B4D8               	btfsc	status,2,c
 11594  0035E0  D05A               	goto	l11180
 11595                           
 11596                           ;tff.c: 458: if (c == '.') {
 11597  0035E2  0E2E               	movlw	46
 11598  0035E4  182C               	xorwf	make_dirfile@c^0,w,c
 11599  0035E6  A4D8               	btfss	status,2,c
 11600  0035E8  D00C               	goto	l11122
 11601                           
 11602                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 11603  0035EA  B02A               	btfsc	make_dirfile@a^0,0,c
 11604  0035EC  D054               	goto	l11180
 11605  0035EE  502B               	movf	make_dirfile@n^0,w,c
 11606  0035F0  B4D8               	btfsc	status,2,c
 11607  0035F2  D051               	goto	l11180
 11608  0035F4  0E09               	movlw	9
 11609  0035F6  602B               	cpfslt	make_dirfile@n^0,c
 11610  0035F8  D04E               	goto	l11180
 11611                           
 11612                           ;tff.c: 460: n = 8; t = 11; continue;
 11613  0035FA  0E08               	movlw	8
 11614  0035FC  6E2B               	movwf	make_dirfile@n^0,c
 11615  0035FE  0E0B               	movlw	11
 11616  003600  D7B3               	goto	L5
 11617  003602                     l11122:
 11618                           
 11619                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 11620  003602  0E22               	movlw	34
 11621  003604  182C               	xorwf	make_dirfile@c^0,w,c
 11622  003606  B4D8               	btfsc	status,2,c
 11623  003608  D046               	goto	l11180
 11624                           
 11625                           ;tff.c: 472: if (c <= ')') goto md_l1;
 11626  00360A  0E2A               	movlw	42
 11627  00360C  602C               	cpfslt	make_dirfile@c^0,c
 11628  00360E  D001               	goto	l11130
 11629  003610  D035               	goto	l923
 11630  003612                     l11130:
 11631                           
 11632                           ;tff.c: 473: if (c <= ',') break;
 11633  003612  0E2D               	movlw	45
 11634  003614  602C               	cpfslt	make_dirfile@c^0,c
 11635  003616  D001               	goto	l11134
 11636  003618  D03E               	goto	l11180
 11637  00361A                     l11134:
 11638                           
 11639                           ;tff.c: 474: if (c <= '9') goto md_l1;
 11640  00361A  0E3A               	movlw	58
 11641  00361C  602C               	cpfslt	make_dirfile@c^0,c
 11642  00361E  D001               	goto	l11138
 11643  003620  D02D               	goto	l923
 11644  003622                     l11138:
 11645                           
 11646                           ;tff.c: 475: if (c <= '?') break;
 11647  003622  0E40               	movlw	64
 11648  003624  602C               	cpfslt	make_dirfile@c^0,c
 11649  003626  D001               	goto	l926
 11650  003628  D036               	goto	l11180
 11651  00362A                     l926:
 11652                           
 11653                           ;tff.c: 476: if (!(a & 1)) {
 11654  00362A  B02A               	btfsc	make_dirfile@a^0,0,c
 11655  00362C  D027               	goto	l923
 11656                           
 11657                           ;tff.c: 477: if (c == '|') break;
 11658  00362E  0E7C               	movlw	124
 11659  003630  182C               	xorwf	make_dirfile@c^0,w,c
 11660  003632  B4D8               	btfsc	status,2,c
 11661  003634  D030               	goto	l11180
 11662                           
 11663                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 11664  003636  0E5A               	movlw	90
 11665  003638  642C               	cpfsgt	make_dirfile@c^0,c
 11666  00363A  D004               	goto	l11152
 11667  00363C  0E5E               	movlw	94
 11668  00363E  602C               	cpfslt	make_dirfile@c^0,c
 11669  003640  D001               	goto	l11152
 11670  003642  D029               	goto	l11180
 11671  003644                     l11152:
 11672  003644  0E40               	movlw	64
 11673  003646  642C               	cpfsgt	make_dirfile@c^0,c
 11674  003648  D00A               	goto	l11162
 11675  00364A  0E5B               	movlw	91
 11676  00364C  602C               	cpfslt	make_dirfile@c^0,c
 11677  00364E  D007               	goto	l11162
 11678                           
 11679                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 11680  003650  0E08               	movlw	8
 11681  003652  1829               	xorwf	make_dirfile@t^0,w,c
 11682  003654  A4D8               	btfss	status,2,c
 11683  003656  D002               	goto	l11160
 11684  003658  9628               	bcf	make_dirfile@b^0,3,c
 11685  00365A  D001               	goto	l11162
 11686  00365C                     l11160:
 11687  00365C  9828               	bcf	make_dirfile@b^0,4,c
 11688  00365E                     l11162:
 11689                           
 11690                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 11691  00365E  0E60               	movlw	96
 11692  003660  642C               	cpfsgt	make_dirfile@c^0,c
 11693  003662  D00C               	goto	l923
 11694  003664  0E7B               	movlw	123
 11695  003666  602C               	cpfslt	make_dirfile@c^0,c
 11696  003668  D009               	goto	l923
 11697                           
 11698                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 11699  00366A  0E20               	movlw	32
 11700  00366C  5E2C               	subwf	make_dirfile@c^0,f,c
 11701  00366E  0E08               	movlw	8
 11702  003670  1829               	xorwf	make_dirfile@t^0,w,c
 11703  003672  A4D8               	btfss	status,2,c
 11704  003674  D002               	goto	l11170
 11705  003676  862A               	bsf	make_dirfile@a^0,3,c
 11706  003678  D001               	goto	l923
 11707  00367A                     l11170:
 11708  00367A  882A               	bsf	make_dirfile@a^0,4,c
 11709  00367C                     l923:
 11710                           
 11711                           ;tff.c: 487: a &= 0xFE;
 11712  00367C  902A               	bcf	make_dirfile@a^0,0,c
 11713                           
 11714                           ;tff.c: 489: if (n >= t) break;
 11715  00367E  5029               	movf	make_dirfile@t^0,w,c
 11716  003680  5C2B               	subwf	make_dirfile@n^0,w,c
 11717  003682  B0D8               	btfsc	status,0,c
 11718  003684  D008               	goto	l11180
 11719                           
 11720                           ;tff.c: 490: dirname[n++] = c;
 11721  003686  5023               	movf	make_dirfile@dirname^0,w,c
 11722  003688  242B               	addwf	make_dirfile@n^0,w,c
 11723  00368A  6ED9               	movwf	fsr2l,c
 11724  00368C  6ADA               	clrf	fsr2h,c
 11725  00368E  C02C  FFDF         	movff	make_dirfile@c,indf2
 11726  003692  2A2B               	incf	make_dirfile@n^0,f,c
 11727  003694  D76A               	goto	l11072
 11728  003696                     l11180:
 11729                           
 11730                           ;tff.c: 492: return 1;
 11731  003696  0E01               	movlw	1
 11732  003698  0012               	return		;funcret
 11733  00369A                     __end_of_make_dirfile:
 11734                           	callstack 0
 11735                           
 11736 ;; *************** function _reserve_direntry *****************
 11737 ;; Defined at:
 11738 ;;		line 568 in file "bibliotecas/tff.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;  dj              1   79[BANK0 ] PTR struct _DIR_E
 11741 ;;		 -> f_open@dj(14), 
 11742 ;;  dir             1   80[BANK0 ] PTR PTR unsigned char 
 11743 ;;		 -> f_open@dir(2), 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  sector          4   85[BANK0 ] unsigned long 
 11746 ;;  fs              2   95[BANK0 ] PTR struct _FATFS
 11747 ;;		 -> NULL(0), fs(544), 
 11748 ;;  clust           2   93[BANK0 ] unsigned short 
 11749 ;;  dptr            2   90[BANK0 ] PTR unsigned char 
 11750 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11751 ;;  c               1   92[BANK0 ] unsigned char 
 11752 ;;  n               1   89[BANK0 ] unsigned char 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      enum E155
 11755 ;; Registers used:
 11756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 3F/0
 11759 ;;		On exit  : 3F/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11762 ;;      Params:         0       2       0       0       0       0       0       0       0
 11763 ;;      Locals:         0      12       0       0       0       0       0       0       0
 11764 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11765 ;;      Totals:         0      18       0       0       0       0       0       0       0
 11766 ;;Total ram usage:       18 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; Hardware stack levels required when called:   11
 11769 ;; This function calls:
 11770 ;;		_clust2sect
 11771 ;;		_create_chain
 11772 ;;		_disk_write
 11773 ;;		_memset
 11774 ;;		_move_window
 11775 ;;		_next_dir_entry
 11776 ;; This function is called by:
 11777 ;;		_f_open
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text62
 11782  0021D4                     __ptext62:
 11783                           	callstack 0
 11784  0021D4                     _reserve_direntry:
 11785                           	callstack 14
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 11789                           
 11790                           ;incstack = 0
 11791  0021D4  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11792  0021D6  6ED9               	movwf	fsr2l,c
 11793  0021D8  6ADA               	clrf	fsr2h,c
 11794  0021DA  0E04               	movlw	4
 11795  0021DC  26D9               	addwf	fsr2l,f,c
 11796  0021DE  CFDE F0BF          	movff	postinc2,reserve_direntry@fs
 11797  0021E2  CFDD F0C0          	movff	postdec2,reserve_direntry@fs+1
 11798                           
 11799                           ;tff.c: 580: clust = dj->sclust;
 11800  0021E6  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11801  0021E8  6ED9               	movwf	fsr2l,c
 11802  0021EA  6ADA               	clrf	fsr2h,c
 11803  0021EC  0E06               	movlw	6
 11804  0021EE  26D9               	addwf	fsr2l,f,c
 11805  0021F0  CFDE F0BD          	movff	postinc2,reserve_direntry@clust
 11806  0021F4  CFDD F0BE          	movff	postdec2,reserve_direntry@clust+1
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;tff.c: 581: if (clust != 0) {
 11810  0021F8  51BD               	movf	reserve_direntry@clust& (0+255),w,b
 11811  0021FA  11BE               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11812  0021FC  B4D8               	btfsc	status,2,c
 11813  0021FE  D01E               	goto	l11418
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;tff.c: 582: dj->clust = clust;
 11817  002200  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11818  002202  6ED9               	movwf	fsr2l,c
 11819  002204  6ADA               	clrf	fsr2h,c
 11820  002206  0E08               	movlw	8
 11821  002208  26D9               	addwf	fsr2l,f,c
 11822  00220A  C0BD  FFDE         	movff	reserve_direntry@clust,postinc2
 11823  00220E  C0BE  FFDD         	movff	reserve_direntry@clust+1,postdec2
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;tff.c: 583: dj->sect = clust2sect(clust);
 11827  002212  C0BD  F026         	movff	reserve_direntry@clust,clust2sect@clust
 11828  002216  C0BE  F027         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 11829  00221A  EC52  F021         	call	_clust2sect	;wreg free
 11830  00221E  0100               	movlb	0	; () banked
 11831  002220  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11832  002222  6ED9               	movwf	fsr2l,c
 11833  002224  6ADA               	clrf	fsr2h,c
 11834  002226  0E0A               	movlw	10
 11835  002228  26D9               	addwf	fsr2l,f,c
 11836  00222A  C026  FFDE         	movff	?_clust2sect,postinc2
 11837  00222E  C027  FFDE         	movff	?_clust2sect+1,postinc2
 11838  002232  C028  FFDE         	movff	?_clust2sect+2,postinc2
 11839  002236  C029  FFDE         	movff	?_clust2sect+3,postinc2
 11840                           
 11841                           ;tff.c: 584: } else {
 11842  00223A  D013               	goto	l11420
 11843  00223C                     l11418:
 11844                           
 11845                           ; BSR set to: 0
 11846                           ;tff.c: 585: dj->sect = fs->dirbase;
 11847  00223C  EE20 F00C          	lfsr	2,12
 11848  002240  51BF               	movf	reserve_direntry@fs& (0+255),w,b
 11849  002242  26D9               	addwf	fsr2l,f,c
 11850  002244  51C0               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 11851  002246  22DA               	addwfc	fsr2h,f,c
 11852  002248  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11853  00224A  6EE1               	movwf	fsr1l,c
 11854  00224C  6AE2               	clrf	fsr1h,c
 11855  00224E  0E0A               	movlw	10
 11856  002250  26E1               	addwf	fsr1l,f,c
 11857  002252  CFDE FFE6          	movff	postinc2,postinc1
 11858  002256  CFDE FFE6          	movff	postinc2,postinc1
 11859  00225A  CFDE FFE6          	movff	postinc2,postinc1
 11860  00225E  CFDE FFE6          	movff	postinc2,postinc1
 11861  002262                     l11420:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 11865  002262  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11866  002264  6ED9               	movwf	fsr2l,c
 11867  002266  6ADA               	clrf	fsr2h,c
 11868  002268  0E02               	movlw	2
 11869  00226A  26D9               	addwf	fsr2l,f,c
 11870  00226C  0E00               	movlw	0
 11871  00226E  6EDE               	movwf	postinc2,c
 11872  002270  0E00               	movlw	0
 11873  002272  6EDD               	movwf	postdec2,c
 11874  002274                     l11422:
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11878  002274  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11879  002276  6ED9               	movwf	fsr2l,c
 11880  002278  6ADA               	clrf	fsr2h,c
 11881  00227A  0E0A               	movlw	10
 11882  00227C  26D9               	addwf	fsr2l,f,c
 11883  00227E  CFDE F074          	movff	postinc2,move_window@sector
 11884  002282  CFDE F075          	movff	postinc2,move_window@sector+1
 11885  002286  CFDE F076          	movff	postinc2,move_window@sector+2
 11886  00228A  CFDE F077          	movff	postinc2,move_window@sector+3
 11887  00228E  ECA0  F017         	call	_move_window	;wreg free
 11888  002292  0900               	iorlw	0
 11889  002294  A4D8               	btfss	status,2,c
 11890  002296  D002               	goto	l11428
 11891  002298                     u13520:
 11892                           
 11893                           ; BSR set to: 0
 11894  002298  0E08               	movlw	8
 11895  00229A  0012               	return	
 11896  00229C                     l11428:
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 11900  00229C  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11901  00229E  6ED9               	movwf	fsr2l,c
 11902  0022A0  6ADA               	clrf	fsr2h,c
 11903  0022A2  0E02               	movlw	2
 11904  0022A4  26D9               	addwf	fsr2l,f,c
 11905  0022A6  CFDE F0B1          	movff	postinc2,??_reserve_direntry
 11906  0022AA  CFDD F0B2          	movff	postdec2,??_reserve_direntry+1
 11907  0022AE  0E0F               	movlw	15
 11908  0022B0  17B1               	andwf	??_reserve_direntry& (0+255),f,b
 11909  0022B2  0E00               	movlw	0
 11910  0022B4  17B2               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 11911  0022B6  0E05               	movlw	5
 11912  0022B8                     u13535:
 11913  0022B8  90D8               	bcf	status,0,c
 11914  0022BA  37B1               	rlcf	??_reserve_direntry& (0+255),f,b
 11915  0022BC  37B2               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 11916  0022BE  2EE8               	decfsz	wreg,f,c
 11917  0022C0  D7FB               	goto	u13535
 11918  0022C2  C0BF  F0B3         	movff	reserve_direntry@fs,??_reserve_direntry+2
 11919  0022C6  C0C0  F0B4         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 11920  0022CA  51B1               	movf	??_reserve_direntry& (0+255),w,b
 11921  0022CC  27B3               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 11922  0022CE  51B2               	movf	(??_reserve_direntry+1)& (0+255),w,b
 11923  0022D0  23B4               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 11924  0022D2  0E20               	movlw	32
 11925  0022D4  25B3               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 11926  0022D6  6FBA               	movwf	reserve_direntry@dptr& (0+255),b
 11927  0022D8  0E00               	movlw	0
 11928  0022DA  21B4               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 11929  0022DC  6FBB               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;tff.c: 592: c = dptr[0];
 11933  0022DE  C0BA  FFD9         	movff	reserve_direntry@dptr,fsr2l
 11934  0022E2  C0BB  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 11935  0022E6  50DF               	movf	indf2,w,c
 11936  0022E8  6FBC               	movwf	reserve_direntry@c& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 11940  0022EA  51BC               	movf	reserve_direntry@c& (0+255),w,b
 11941  0022EC  B4D8               	btfsc	status,2,c
 11942  0022EE  D004               	goto	u13550
 11943                           
 11944                           ; BSR set to: 0
 11945  0022F0  0EE5               	movlw	229
 11946  0022F2  19BC               	xorwf	reserve_direntry@c& (0+255),w,b
 11947  0022F4  A4D8               	btfss	status,2,c
 11948  0022F6  D009               	goto	l11442
 11949  0022F8                     u13550:
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;tff.c: 594: *dir = dptr; return FR_OK;
 11953  0022F8  51B0               	movf	reserve_direntry@dir& (0+255),w,b
 11954  0022FA  6ED9               	movwf	fsr2l,c
 11955  0022FC  6ADA               	clrf	fsr2h,c
 11956  0022FE  C0BA  FFDE         	movff	reserve_direntry@dptr,postinc2
 11957  002302  C0BB  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 11958  002306                     l11438:
 11959                           
 11960                           ; BSR set to: 0
 11961  002306  0E00               	movlw	0
 11962  002308  0012               	return	
 11963  00230A                     l11442:
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 11967  00230A  C0AF  F09E         	movff	reserve_direntry@dj,next_dir_entry@dj
 11968  00230E  EC3B  F019         	call	_next_dir_entry	;wreg free
 11969  002312  0900               	iorlw	0
 11970  002314  A4D8               	btfss	status,2,c
 11971  002316  D7AE               	goto	l11422
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 11975  002318  51BD               	movf	reserve_direntry@clust& (0+255),w,b
 11976  00231A  11BE               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11977  00231C  B4D8               	btfsc	status,2,c
 11978  00231E  D013               	goto	u13580
 11979                           
 11980                           ; BSR set to: 0
 11981  002320  51AF               	movf	reserve_direntry@dj& (0+255),w,b
 11982  002322  6ED9               	movwf	fsr2l,c
 11983  002324  6ADA               	clrf	fsr2h,c
 11984  002326  0E08               	movlw	8
 11985  002328  26D9               	addwf	fsr2l,f,c
 11986  00232A  CFDE F0A1          	movff	postinc2,create_chain@clust
 11987  00232E  CFDD F0A2          	movff	postdec2,create_chain@clust+1
 11988  002332  EC75  F018         	call	_create_chain	;wreg free
 11989  002336  C0A1  F0BD         	movff	?_create_chain,reserve_direntry@clust
 11990  00233A  C0A2  F0BE         	movff	?_create_chain+1,reserve_direntry@clust+1
 11991  00233E  51BD               	movf	reserve_direntry@clust& (0+255),w,b
 11992  002340  11BE               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11993  002342  A4D8               	btfss	status,2,c
 11994  002344  D002               	goto	l11452
 11995  002346                     u13580:
 11996                           
 11997                           ; BSR set to: 0
 11998  002346  0E06               	movlw	6
 11999  002348  0012               	return	
 12000  00234A                     l11452:
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12004  00234A  05BD               	decf	reserve_direntry@clust& (0+255),w,b
 12005  00234C  11BE               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12006  00234E  B4D8               	btfsc	status,2,c
 12007  002350  D7A3               	goto	u13520
 12008                           
 12009                           ; BSR set to: 0
 12010  002352  0E00               	movlw	0
 12011  002354  6F74               	movwf	move_window@sector& (0+255),b
 12012  002356  0E00               	movlw	0
 12013  002358  6F75               	movwf	(move_window@sector+1)& (0+255),b
 12014  00235A  0E00               	movlw	0
 12015  00235C  6F76               	movwf	(move_window@sector+2)& (0+255),b
 12016  00235E  0E00               	movlw	0
 12017  002360  6F77               	movwf	(move_window@sector+3)& (0+255),b
 12018  002362  ECA0  F017         	call	_move_window	;wreg free
 12019  002366  0900               	iorlw	0
 12020  002368  B4D8               	btfsc	status,2,c
 12021  00236A  D796               	goto	u13520
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12025  00236C  C0BD  F026         	movff	reserve_direntry@clust,clust2sect@clust
 12026  002370  C0BE  F027         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12027  002374  EC52  F021         	call	_clust2sect	;wreg free
 12028  002378  C026  F0B5         	movff	?_clust2sect,reserve_direntry@sector
 12029  00237C  C027  F0B6         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12030  002380  C028  F0B7         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12031  002384  C029  F0B8         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12032  002388  0100               	movlb	0	; () banked
 12033  00238A  EE20 F004          	lfsr	2,4
 12034  00238E  51BF               	movf	reserve_direntry@fs& (0+255),w,b
 12035  002390  26D9               	addwf	fsr2l,f,c
 12036  002392  51C0               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12037  002394  22DA               	addwfc	fsr2h,f,c
 12038  002396  C0B5  FFDE         	movff	reserve_direntry@sector,postinc2
 12039  00239A  C0B6  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12040  00239E  C0B7  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12041  0023A2  C0B8  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12042                           
 12043                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12044  0023A6  0E20               	movlw	32
 12045  0023A8  25BF               	addwf	reserve_direntry@fs& (0+255),w,b
 12046  0023AA  6E1A               	movwf	memset@p1^0,c
 12047  0023AC  0E00               	movlw	0
 12048  0023AE  21C0               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12049  0023B0  6E1B               	movwf	(memset@p1+1)^0,c
 12050  0023B2  0E00               	movlw	0
 12051  0023B4  6E1D               	movwf	(memset@c+1)^0,c
 12052  0023B6  0E00               	movlw	0
 12053  0023B8  6E1C               	movwf	memset@c^0,c
 12054  0023BA  0E02               	movlw	2
 12055  0023BC  6E1F               	movwf	(memset@n+1)^0,c
 12056  0023BE  0E00               	movlw	0
 12057  0023C0  6E1E               	movwf	memset@n^0,c
 12058  0023C2  EC40  F02B         	call	_memset	;wreg free
 12059                           
 12060                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12061  0023C6  0100               	movlb	0	; () banked
 12062  0023C8  EE20 F01D          	lfsr	2,29
 12063  0023CC  51BF               	movf	reserve_direntry@fs& (0+255),w,b
 12064  0023CE  26D9               	addwf	fsr2l,f,c
 12065  0023D0  51C0               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12066  0023D2  22DA               	addwfc	fsr2h,f,c
 12067  0023D4  50DF               	movf	indf2,w,c
 12068  0023D6  6FB9               	movwf	reserve_direntry@n& (0+255),b
 12069  0023D8  D01D               	goto	l11474
 12070  0023DA                     l11464:
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12074  0023DA  0E20               	movlw	32
 12075  0023DC  25BF               	addwf	reserve_direntry@fs& (0+255),w,b
 12076  0023DE  6F68               	movwf	disk_write@buff& (0+255),b
 12077  0023E0  0E00               	movlw	0
 12078  0023E2  21C0               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12079  0023E4  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 12080  0023E6  C0B5  F06A         	movff	reserve_direntry@sector,disk_write@sector
 12081  0023EA  C0B6  F06B         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12082  0023EE  C0B7  F06C         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12083  0023F2  C0B8  F06D         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12084  0023F6  0E01               	movlw	1
 12085  0023F8  6F6E               	movwf	disk_write@count& (0+255),b
 12086  0023FA  0E00               	movlw	0
 12087  0023FC  EC00  F029         	call	_disk_write
 12088  002400  0900               	iorlw	0
 12089  002402  A4D8               	btfss	status,2,c
 12090  002404  D749               	goto	u13520
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;tff.c: 608: sector++;
 12094  002406  0E01               	movlw	1
 12095  002408  27B5               	addwf	reserve_direntry@sector& (0+255),f,b
 12096  00240A  0E00               	movlw	0
 12097  00240C  23B6               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12098  00240E  23B7               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12099  002410  23B8               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12100                           
 12101                           ; BSR set to: 0
 12102  002412  07B9               	decf	reserve_direntry@n& (0+255),f,b
 12103  002414                     l11474:
 12104                           
 12105                           ; BSR set to: 0
 12106  002414  51B9               	movf	reserve_direntry@n& (0+255),w,b
 12107  002416  A4D8               	btfss	status,2,c
 12108  002418  D7E0               	goto	l11464
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12112  00241A  EE20 F01F          	lfsr	2,31
 12113  00241E  51BF               	movf	reserve_direntry@fs& (0+255),w,b
 12114  002420  26D9               	addwf	fsr2l,f,c
 12115  002422  51C0               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12116  002424  22DA               	addwfc	fsr2h,f,c
 12117  002426  0E01               	movlw	1
 12118  002428  6EDF               	movwf	indf2,c
 12119                           
 12120                           ;tff.c: 611: *dir = fs->win;
 12121  00242A  0E20               	movlw	32
 12122  00242C  25BF               	addwf	reserve_direntry@fs& (0+255),w,b
 12123  00242E  6FB1               	movwf	??_reserve_direntry& (0+255),b
 12124  002430  0E00               	movlw	0
 12125  002432  21C0               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12126  002434  6FB2               	movwf	(??_reserve_direntry+1)& (0+255),b
 12127  002436  51B0               	movf	reserve_direntry@dir& (0+255),w,b
 12128  002438  6ED9               	movwf	fsr2l,c
 12129  00243A  6ADA               	clrf	fsr2h,c
 12130  00243C  C0B1  FFDE         	movff	??_reserve_direntry,postinc2
 12131  002440  C0B2  FFDD         	movff	??_reserve_direntry+1,postdec2
 12132  002444  D760               	goto	l11438
 12133  002446                     __end_of_reserve_direntry:
 12134                           	callstack 0
 12135                           
 12136 ;; *************** function _next_dir_entry *****************
 12137 ;; Defined at:
 12138 ;;		line 359 in file "bibliotecas/tff.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;  dj              1   62[BANK0 ] PTR struct _DIR_E
 12141 ;;		 -> f_open@dj(14), 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;  idx             2   72[BANK0 ] unsigned short 
 12144 ;;  clust           2   70[BANK0 ] unsigned short 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  1    wreg      enum E105
 12147 ;; Registers used:
 12148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 3F/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12154 ;;      Params:         0       1       0       0       0       0       0       0       0
 12155 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12156 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12157 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12158 ;;Total ram usage:       12 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:   10
 12161 ;; This function calls:
 12162 ;;		_clust2sect
 12163 ;;		_get_cluster
 12164 ;; This function is called by:
 12165 ;;		_trace_path
 12166 ;;		_reserve_direntry
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text63
 12171  003276                     __ptext63:
 12172                           	callstack 0
 12173  003276                     _next_dir_entry:
 12174                           	callstack 14
 12175                           
 12176                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;incstack = 0
 12180  003276  0100               	movlb	0	; () banked
 12181  003278  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12182  00327A  6ED9               	movwf	fsr2l,c
 12183  00327C  6ADA               	clrf	fsr2h,c
 12184  00327E  0E02               	movlw	2
 12185  003280  26D9               	addwf	fsr2l,f,c
 12186  003282  CFDE F09F          	movff	postinc2,??_next_dir_entry
 12187  003286  CFDD F0A0          	movff	postdec2,??_next_dir_entry+1
 12188  00328A  0E01               	movlw	1
 12189  00328C  259F               	addwf	??_next_dir_entry& (0+255),w,b
 12190  00328E  6FA8               	movwf	next_dir_entry@idx& (0+255),b
 12191  003290  0E00               	movlw	0
 12192  003292  21A0               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12193  003294  6FA9               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;tff.c: 368: if ((idx & 15) == 0) {
 12197  003296  C0A8  F09F         	movff	next_dir_entry@idx,??_next_dir_entry
 12198  00329A  0E0F               	movlw	15
 12199  00329C  179F               	andwf	??_next_dir_entry& (0+255),f,b
 12200  00329E  A4D8               	btfss	status,2,c
 12201  0032A0  D092               	goto	l11056
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;tff.c: 369: dj->sect++;
 12205  0032A2  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12206  0032A4  6ED9               	movwf	fsr2l,c
 12207  0032A6  6ADA               	clrf	fsr2h,c
 12208  0032A8  0E0A               	movlw	10
 12209  0032AA  26D9               	addwf	fsr2l,f,c
 12210  0032AC  2ADE               	incf	postinc2,f,c
 12211  0032AE  0E00               	movlw	0
 12212  0032B0  22DE               	addwfc	postinc2,f,c
 12213  0032B2  22DE               	addwfc	postinc2,f,c
 12214  0032B4  22DE               	addwfc	postinc2,f,c
 12215                           
 12216                           ;tff.c: 370: if (dj->clust == 0) {
 12217  0032B6  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12218  0032B8  6ED9               	movwf	fsr2l,c
 12219  0032BA  6ADA               	clrf	fsr2h,c
 12220  0032BC  0E08               	movlw	8
 12221  0032BE  26D9               	addwf	fsr2l,f,c
 12222  0032C0  50DE               	movf	postinc2,w,c
 12223  0032C2  10DE               	iorwf	postinc2,w,c
 12224  0032C4  A4D8               	btfss	status,2,c
 12225  0032C6  D013               	goto	l11040
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12229  0032C8  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12230  0032CA  6ED9               	movwf	fsr2l,c
 12231  0032CC  6ADA               	clrf	fsr2h,c
 12232  0032CE  0E04               	movlw	4
 12233  0032D0  26D9               	addwf	fsr2l,f,c
 12234  0032D2  EE10 F002          	lfsr	1,2
 12235  0032D6  50DE               	movf	postinc2,w,c
 12236  0032D8  26E1               	addwf	fsr1l,f,c
 12237  0032DA  50DD               	movf	postdec2,w,c
 12238  0032DC  22E2               	addwfc	fsr1h,f,c
 12239  0032DE  50E6               	movf	postinc1,w,c
 12240  0032E0  5DA8               	subwf	next_dir_entry@idx& (0+255),w,b
 12241  0032E2  50E6               	movf	postinc1,w,c
 12242  0032E4  59A9               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 12243  0032E6  A0D8               	btfss	status,0,c
 12244  0032E8  D06E               	goto	l11056
 12245  0032EA                     u12850:
 12246                           
 12247                           ; BSR set to: 0
 12248  0032EA  0E00               	movlw	0
 12249  0032EC  0012               	return	
 12250  0032EE                     l11040:
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 12254  0032EE  C0A8  F09F         	movff	next_dir_entry@idx,??_next_dir_entry
 12255  0032F2  C0A9  F0A0         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 12256  0032F6  0E04               	movlw	4
 12257  0032F8  6FA1               	movwf	(??_next_dir_entry+2)& (0+255),b
 12258  0032FA                     u12865:
 12259  0032FA  90D8               	bcf	status,0,c
 12260  0032FC  33A0               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 12261  0032FE  339F               	rrcf	??_next_dir_entry& (0+255),f,b
 12262  003300  2FA1               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 12263  003302  D7FB               	goto	u12865
 12264  003304  0EFF               	movlw	255
 12265  003306  6FA2               	movwf	(??_next_dir_entry+3)& (0+255),b
 12266  003308  0EFF               	movlw	255
 12267  00330A  6FA3               	movwf	(??_next_dir_entry+4)& (0+255),b
 12268  00330C  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12269  00330E  6ED9               	movwf	fsr2l,c
 12270  003310  6ADA               	clrf	fsr2h,c
 12271  003312  0E04               	movlw	4
 12272  003314  26D9               	addwf	fsr2l,f,c
 12273  003316  EE10 F01D          	lfsr	1,29
 12274  00331A  50DE               	movf	postinc2,w,c
 12275  00331C  26E1               	addwf	fsr1l,f,c
 12276  00331E  50DD               	movf	postdec2,w,c
 12277  003320  22E2               	addwfc	fsr1h,f,c
 12278  003322  50E7               	movf	indf1,w,c
 12279  003324  6FA4               	movwf	(??_next_dir_entry+5)& (0+255),b
 12280  003326  6BA5               	clrf	(??_next_dir_entry+6)& (0+255),b
 12281  003328  51A2               	movf	(??_next_dir_entry+3)& (0+255),w,b
 12282  00332A  27A4               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 12283  00332C  51A3               	movf	(??_next_dir_entry+4)& (0+255),w,b
 12284  00332E  23A5               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 12285  003330  519F               	movf	??_next_dir_entry& (0+255),w,b
 12286  003332  17A4               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 12287  003334  51A0               	movf	(??_next_dir_entry+1)& (0+255),w,b
 12288  003336  17A5               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 12289  003338  51A4               	movf	(??_next_dir_entry+5)& (0+255),w,b
 12290  00333A  11A5               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 12291  00333C  A4D8               	btfss	status,2,c
 12292  00333E  D043               	goto	l11056
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;tff.c: 374: clust = get_cluster(dj->clust);
 12296  003340  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12297  003342  6ED9               	movwf	fsr2l,c
 12298  003344  6ADA               	clrf	fsr2h,c
 12299  003346  0E08               	movlw	8
 12300  003348  26D9               	addwf	fsr2l,f,c
 12301  00334A  CFDE F089          	movff	postinc2,get_cluster@clust
 12302  00334E  CFDD F08A          	movff	postdec2,get_cluster@clust+1
 12303  003352  ECB4  F015         	call	_get_cluster	;wreg free
 12304  003356  C089  F0A6         	movff	?_get_cluster,next_dir_entry@clust
 12305  00335A  C08A  F0A7         	movff	?_get_cluster+1,next_dir_entry@clust+1
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 12309  00335E  51A7               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 12310  003360  E104               	bnz	u12880
 12311  003362  0E02               	movlw	2
 12312  003364  5DA6               	subwf	next_dir_entry@clust& (0+255),w,b
 12313  003366  A0D8               	btfss	status,0,c
 12314  003368  D7C0               	goto	u12850
 12315  00336A                     u12880:
 12316                           
 12317                           ; BSR set to: 0
 12318  00336A  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12319  00336C  6ED9               	movwf	fsr2l,c
 12320  00336E  6ADA               	clrf	fsr2h,c
 12321  003370  0E04               	movlw	4
 12322  003372  26D9               	addwf	fsr2l,f,c
 12323  003374  EE10 F016          	lfsr	1,22
 12324  003378  50DE               	movf	postinc2,w,c
 12325  00337A  26E1               	addwf	fsr1l,f,c
 12326  00337C  50DD               	movf	postdec2,w,c
 12327  00337E  22E2               	addwfc	fsr1h,f,c
 12328  003380  50E6               	movf	postinc1,w,c
 12329  003382  5DA6               	subwf	next_dir_entry@clust& (0+255),w,b
 12330  003384  50E6               	movf	postinc1,w,c
 12331  003386  59A7               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 12332  003388  B0D8               	btfsc	status,0,c
 12333  00338A  D7AF               	goto	u12850
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;tff.c: 377: dj->clust = clust;
 12337  00338C  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12338  00338E  6ED9               	movwf	fsr2l,c
 12339  003390  6ADA               	clrf	fsr2h,c
 12340  003392  0E08               	movlw	8
 12341  003394  26D9               	addwf	fsr2l,f,c
 12342  003396  C0A6  FFDE         	movff	next_dir_entry@clust,postinc2
 12343  00339A  C0A7  FFDD         	movff	next_dir_entry@clust+1,postdec2
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;tff.c: 378: dj->sect = clust2sect(clust);
 12347  00339E  C0A6  F026         	movff	next_dir_entry@clust,clust2sect@clust
 12348  0033A2  C0A7  F027         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 12349  0033A6  EC52  F021         	call	_clust2sect	;wreg free
 12350  0033AA  0100               	movlb	0	; () banked
 12351  0033AC  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12352  0033AE  6ED9               	movwf	fsr2l,c
 12353  0033B0  6ADA               	clrf	fsr2h,c
 12354  0033B2  0E0A               	movlw	10
 12355  0033B4  26D9               	addwf	fsr2l,f,c
 12356  0033B6  C026  FFDE         	movff	?_clust2sect,postinc2
 12357  0033BA  C027  FFDE         	movff	?_clust2sect+1,postinc2
 12358  0033BE  C028  FFDE         	movff	?_clust2sect+2,postinc2
 12359  0033C2  C029  FFDE         	movff	?_clust2sect+3,postinc2
 12360  0033C6                     l11056:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 12364  0033C6  519E               	movf	next_dir_entry@dj& (0+255),w,b
 12365  0033C8  6ED9               	movwf	fsr2l,c
 12366  0033CA  6ADA               	clrf	fsr2h,c
 12367  0033CC  0E02               	movlw	2
 12368  0033CE  26D9               	addwf	fsr2l,f,c
 12369  0033D0  C0A8  FFDE         	movff	next_dir_entry@idx,postinc2
 12370  0033D4  C0A9  FFDD         	movff	next_dir_entry@idx+1,postdec2
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;tff.c: 383: return TRUE;
 12374  0033D8  0E01               	movlw	1
 12375                           
 12376                           ; BSR set to: 0
 12377  0033DA  0012               	return		;funcret
 12378  0033DC                     __end_of_next_dir_entry:
 12379                           	callstack 0
 12380                           
 12381 ;; *************** function _clust2sect *****************
 12382 ;; Defined at:
 12383 ;;		line 339 in file "bibliotecas/tff.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  clust           2   37[COMRAM] unsigned short 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;  fs              2   46[COMRAM] PTR struct _FATFS
 12388 ;;		 -> NULL(0), fs(544), 
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  4   37[COMRAM] unsigned long 
 12391 ;; Registers used:
 12392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12393 ;; Tracked objects:
 12394 ;;		On entry : 3F/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12398 ;;      Params:         4       0       0       0       0       0       0       0       0
 12399 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12400 ;;      Temps:          5       0       0       0       0       0       0       0       0
 12401 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12402 ;;Total ram usage:       11 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:    4
 12405 ;; This function calls:
 12406 ;;		___lmul
 12407 ;; This function is called by:
 12408 ;;		_next_dir_entry
 12409 ;;		_trace_path
 12410 ;;		_reserve_direntry
 12411 ;;		_f_write
 12412 ;;		_f_read
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           	psect	text64
 12417  0042A4                     __ptext64:
 12418                           	callstack 0
 12419  0042A4                     _clust2sect:
 12420                           	callstack 18
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;tff.c: 343: FATFS *fs = FatFs;
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;incstack = 0
 12427  0042A4  C036  F02F         	movff	_FatFs,clust2sect@fs
 12428  0042A8  C037  F030         	movff	_FatFs+1,clust2sect@fs+1
 12429                           
 12430                           ;tff.c: 346: clust -= 2;
 12431  0042AC  0E02               	movlw	2
 12432  0042AE  5E26               	subwf	clust2sect@clust^0,f,c
 12433  0042B0  0E00               	movlw	0
 12434  0042B2  5A27               	subwfb	(clust2sect@clust+1)^0,f,c
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 12438  0042B4  0EFE               	movlw	254
 12439  0042B6  6E2A               	movwf	??_clust2sect^0,c
 12440  0042B8  0EFF               	movlw	255
 12441  0042BA  6E2B               	movwf	(??_clust2sect+1)^0,c
 12442  0042BC  EE20 F016          	lfsr	2,22
 12443  0042C0  502F               	movf	clust2sect@fs^0,w,c
 12444  0042C2  26D9               	addwf	fsr2l,f,c
 12445  0042C4  5030               	movf	(clust2sect@fs+1)^0,w,c
 12446  0042C6  22DA               	addwfc	fsr2h,f,c
 12447  0042C8  CFDE F02C          	movff	postinc2,??_clust2sect+2
 12448  0042CC  CFDD F02D          	movff	postdec2,??_clust2sect+3
 12449  0042D0  502A               	movf	??_clust2sect^0,w,c
 12450  0042D2  262C               	addwf	(??_clust2sect+2)^0,f,c
 12451  0042D4  502B               	movf	(??_clust2sect+1)^0,w,c
 12452  0042D6  222D               	addwfc	(??_clust2sect+3)^0,f,c
 12453  0042D8  502C               	movf	(??_clust2sect+2)^0,w,c
 12454  0042DA  5C26               	subwf	clust2sect@clust^0,w,c
 12455  0042DC  502D               	movf	(??_clust2sect+3)^0,w,c
 12456  0042DE  5827               	subwfb	(clust2sect@clust+1)^0,w,c
 12457  0042E0  A0D8               	btfss	status,0,c
 12458  0042E2  D009               	goto	l10562
 12459                           
 12460                           ; BSR set to: 0
 12461  0042E4  0E00               	movlw	0
 12462  0042E6  6E26               	movwf	?_clust2sect^0,c
 12463  0042E8  0E00               	movlw	0
 12464  0042EA  6E27               	movwf	(?_clust2sect+1)^0,c
 12465  0042EC  0E00               	movlw	0
 12466  0042EE  6E28               	movwf	(?_clust2sect+2)^0,c
 12467  0042F0  0E00               	movlw	0
 12468  0042F2  6E29               	movwf	(?_clust2sect+3)^0,c
 12469  0042F4  0012               	return	
 12470  0042F6                     l10562:
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 12474  0042F6  EE20 F010          	lfsr	2,16
 12475  0042FA  502F               	movf	clust2sect@fs^0,w,c
 12476  0042FC  26D9               	addwf	fsr2l,f,c
 12477  0042FE  5030               	movf	(clust2sect@fs+1)^0,w,c
 12478  004300  22DA               	addwfc	fsr2h,f,c
 12479  004302  CFDE F02A          	movff	postinc2,??_clust2sect
 12480  004306  CFDE F02B          	movff	postinc2,??_clust2sect+1
 12481  00430A  CFDE F02C          	movff	postinc2,??_clust2sect+2
 12482  00430E  CFDE F02D          	movff	postinc2,??_clust2sect+3
 12483  004312  C026  F01A         	movff	clust2sect@clust,___lmul@multiplier
 12484  004316  C027  F01B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 12485  00431A  6A1C               	clrf	(___lmul@multiplier+2)^0,c
 12486  00431C  6A1D               	clrf	(___lmul@multiplier+3)^0,c
 12487  00431E  EE20 F01D          	lfsr	2,29
 12488  004322  502F               	movf	clust2sect@fs^0,w,c
 12489  004324  26D9               	addwf	fsr2l,f,c
 12490  004326  5030               	movf	(clust2sect@fs+1)^0,w,c
 12491  004328  22DA               	addwfc	fsr2h,f,c
 12492  00432A  50DF               	movf	indf2,w,c
 12493  00432C  6E2E               	movwf	(??_clust2sect+4)^0,c
 12494  00432E  502E               	movf	(??_clust2sect+4)^0,w,c
 12495  004330  6E1E               	movwf	___lmul@multiplicand^0,c
 12496  004332  6A1F               	clrf	(___lmul@multiplicand+1)^0,c
 12497  004334  6A20               	clrf	(___lmul@multiplicand+2)^0,c
 12498  004336  6A21               	clrf	(___lmul@multiplicand+3)^0,c
 12499  004338  EC30  F028         	call	___lmul	;wreg free
 12500  00433C  502A               	movf	??_clust2sect^0,w,c
 12501  00433E  241A               	addwf	?___lmul^0,w,c
 12502  004340  6E26               	movwf	?_clust2sect^0,c
 12503  004342  502B               	movf	(??_clust2sect+1)^0,w,c
 12504  004344  201B               	addwfc	(?___lmul+1)^0,w,c
 12505  004346  6E27               	movwf	(?_clust2sect+1)^0,c
 12506  004348  502C               	movf	(??_clust2sect+2)^0,w,c
 12507  00434A  201C               	addwfc	(?___lmul+2)^0,w,c
 12508  00434C  6E28               	movwf	(?_clust2sect+2)^0,c
 12509  00434E  502D               	movf	(??_clust2sect+3)^0,w,c
 12510  004350  201D               	addwfc	(?___lmul+3)^0,w,c
 12511  004352  6E29               	movwf	(?_clust2sect+3)^0,c
 12512  004354  0012               	return		;funcret
 12513  004356                     __end_of_clust2sect:
 12514                           	callstack 0
 12515                           
 12516 ;; *************** function _remove_chain *****************
 12517 ;; Defined at:
 12518 ;;		line 250 in file "bibliotecas/tff.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  clust           2   65[BANK0 ] unsigned short 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;  fs              2   71[BANK0 ] PTR struct _FATFS
 12523 ;;		 -> NULL(0), fs(544), 
 12524 ;;  nxt             2   69[BANK0 ] unsigned short 
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      enum E105
 12527 ;; Registers used:
 12528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 3F/0
 12531 ;;		On exit  : 3F/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12534 ;;      Params:         0       2       0       0       0       0       0       0       0
 12535 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12536 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12537 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12538 ;;Total ram usage:        8 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:   10
 12541 ;; This function calls:
 12542 ;;		_get_cluster
 12543 ;;		_put_cluster
 12544 ;; This function is called by:
 12545 ;;		_f_open
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text65
 12550  0045E8                     __ptext65:
 12551                           	callstack 0
 12552  0045E8                     _remove_chain:
 12553                           	callstack 15
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 12557                           
 12558                           ;incstack = 0
 12559  0045E8  C036  F0A7         	movff	_FatFs,remove_chain@fs
 12560  0045EC  C037  F0A8         	movff	_FatFs+1,remove_chain@fs+1
 12561                           
 12562                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 12563  0045F0  D035               	goto	l11316
 12564  0045F2                     l11296:
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;tff.c: 259: nxt = get_cluster(clust);
 12568  0045F2  C0A1  F089         	movff	remove_chain@clust,get_cluster@clust
 12569  0045F6  C0A2  F08A         	movff	remove_chain@clust+1,get_cluster@clust+1
 12570  0045FA  ECB4  F015         	call	_get_cluster	;wreg free
 12571  0045FE  C089  F0A5         	movff	?_get_cluster,remove_chain@nxt
 12572  004602  C08A  F0A6         	movff	?_get_cluster+1,remove_chain@nxt+1
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;tff.c: 260: if (nxt == 1) return FALSE;
 12576  004606  05A5               	decf	remove_chain@nxt& (0+255),w,b
 12577  004608  11A6               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 12578  00460A  A4D8               	btfss	status,2,c
 12579  00460C  D002               	goto	l11304
 12580  00460E                     u13320:
 12581                           
 12582                           ; BSR set to: 0
 12583  00460E  0E00               	movlw	0
 12584  004610  0012               	return	
 12585  004612                     l11304:
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 12589  004612  C0A1  F089         	movff	remove_chain@clust,put_cluster@clust
 12590  004616  C0A2  F08A         	movff	remove_chain@clust+1,put_cluster@clust+1
 12591  00461A  0E00               	movlw	0
 12592  00461C  6F8C               	movwf	(put_cluster@val+1)& (0+255),b
 12593  00461E  0E00               	movlw	0
 12594  004620  6F8B               	movwf	put_cluster@val& (0+255),b
 12595  004622  EC58  F013         	call	_put_cluster	;wreg free
 12596  004626  0900               	iorlw	0
 12597  004628  B4D8               	btfsc	status,2,c
 12598  00462A  D7F1               	goto	u13320
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 12602  00462C  EE20 F01A          	lfsr	2,26
 12603  004630  51A7               	movf	remove_chain@fs& (0+255),w,b
 12604  004632  26D9               	addwf	fsr2l,f,c
 12605  004634  51A8               	movf	(remove_chain@fs+1)& (0+255),w,b
 12606  004636  22DA               	addwfc	fsr2h,f,c
 12607  004638  28DE               	incf	postinc2,w,c
 12608  00463A  E103               	bnz	u13340
 12609  00463C  28DE               	incf	postinc2,w,c
 12610  00463E  B4D8               	btfsc	status,2,c
 12611  004640  D009               	goto	l11314
 12612  004642                     u13340:
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;tff.c: 263: fs->free_clust++;
 12616  004642  EE20 F01A          	lfsr	2,26
 12617  004646  51A7               	movf	remove_chain@fs& (0+255),w,b
 12618  004648  26D9               	addwf	fsr2l,f,c
 12619  00464A  51A8               	movf	(remove_chain@fs+1)& (0+255),w,b
 12620  00464C  22DA               	addwfc	fsr2h,f,c
 12621  00464E  2ADE               	incf	postinc2,f,c
 12622  004650  0E00               	movlw	0
 12623  004652  22DD               	addwfc	postdec2,f,c
 12624  004654                     l11314:
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 12628  004654  C0A5  F0A1         	movff	remove_chain@nxt,remove_chain@clust
 12629  004658  C0A6  F0A2         	movff	remove_chain@nxt+1,remove_chain@clust+1
 12630  00465C                     l11316:
 12631                           
 12632                           ; BSR set to: 0
 12633  00465C  51A2               	movf	(remove_chain@clust+1)& (0+255),w,b
 12634  00465E  E104               	bnz	u13350
 12635  004660  0E02               	movlw	2
 12636  004662  5DA1               	subwf	remove_chain@clust& (0+255),w,b
 12637  004664  A0D8               	btfss	status,0,c
 12638  004666  D00C               	goto	u13360
 12639  004668                     u13350:
 12640                           
 12641                           ; BSR set to: 0
 12642  004668  EE20 F016          	lfsr	2,22
 12643  00466C  51A7               	movf	remove_chain@fs& (0+255),w,b
 12644  00466E  26D9               	addwf	fsr2l,f,c
 12645  004670  51A8               	movf	(remove_chain@fs+1)& (0+255),w,b
 12646  004672  22DA               	addwfc	fsr2h,f,c
 12647  004674  50DE               	movf	postinc2,w,c
 12648  004676  5DA1               	subwf	remove_chain@clust& (0+255),w,b
 12649  004678  50DE               	movf	postinc2,w,c
 12650  00467A  59A2               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 12651  00467C  A0D8               	btfss	status,0,c
 12652  00467E  D7B9               	goto	l11296
 12653  004680                     u13360:
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;tff.c: 269: };tff.c: 270: return TRUE;
 12657  004680  0E01               	movlw	1
 12658                           
 12659                           ; BSR set to: 0
 12660  004682  0012               	return		;funcret
 12661  004684                     __end_of_remove_chain:
 12662                           	callstack 0
 12663                           
 12664 ;; *************** function _memcpy *****************
 12665 ;; Defined at:
 12666 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  d1              2   25[COMRAM] PTR void 
 12669 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 12670 ;;  s1              2   27[COMRAM] PTR const void 
 12671 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 12672 ;;		 -> fs(544), 
 12673 ;;  n               2   29[COMRAM] unsigned int 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;  s               2   34[COMRAM] PTR const unsigned char 
 12676 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 12677 ;;		 -> fs(544), 
 12678 ;;  d               2   32[COMRAM] PTR unsigned char 
 12679 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 12680 ;;  tmp             1   31[COMRAM] unsigned char 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  2   25[COMRAM] PTR void 
 12683 ;; Registers used:
 12684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12690 ;;      Params:         6       0       0       0       0       0       0       0       0
 12691 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12692 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12693 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12694 ;;Total ram usage:       11 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    3
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_f_open
 12701 ;;		_f_write
 12702 ;;		_f_read
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           	psect	text66
 12707  0053F6                     __ptext66:
 12708                           	callstack 0
 12709  0053F6                     _memcpy:
 12710                           	callstack 19
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;incstack = 0
 12714  0053F6  C01C  F023         	movff	memcpy@s1,memcpy@s
 12715  0053FA  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
 12716  0053FE  C01A  F021         	movff	memcpy@d1,memcpy@d
 12717  005402  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
 12718  005406  D010               	goto	l10596
 12719  005408                     l10588:
 12720  005408  C023  FFD9         	movff	memcpy@s,fsr2l
 12721  00540C  C024  FFDA         	movff	memcpy@s+1,fsr2h
 12722  005410  50DF               	movf	indf2,w,c
 12723  005412  6E20               	movwf	memcpy@tmp^0,c
 12724  005414  4A23               	infsnz	memcpy@s^0,f,c
 12725  005416  2A24               	incf	(memcpy@s+1)^0,f,c
 12726  005418  C021  FFD9         	movff	memcpy@d,fsr2l
 12727  00541C  C022  FFDA         	movff	memcpy@d+1,fsr2h
 12728  005420  C020  FFDF         	movff	memcpy@tmp,indf2
 12729  005424  4A21               	infsnz	memcpy@d^0,f,c
 12730  005426  2A22               	incf	(memcpy@d+1)^0,f,c
 12731  005428                     l10596:
 12732  005428  061E               	decf	memcpy@n^0,f,c
 12733  00542A  A0D8               	btfss	status,0,c
 12734  00542C  061F               	decf	(memcpy@n+1)^0,f,c
 12735  00542E  281E               	incf	memcpy@n^0,w,c
 12736  005430  E1EB               	bnz	l10588
 12737  005432  281F               	incf	(memcpy@n+1)^0,w,c
 12738  005434  B4D8               	btfsc	status,2,c
 12739  005436  0012               	return	
 12740  005438  D7E7               	goto	l10588
 12741  00543A                     __end_of_memcpy:
 12742                           	callstack 0
 12743                           
 12744 ;; *************** function _auto_mount *****************
 12745 ;; Defined at:
 12746 ;;		line 652 in file "bibliotecas/tff.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  path            1   28[BANK0 ] PTR PTR const unsigned c
 12749 ;;		 -> f_opendir@path(2), f_open@path(2), 
 12750 ;;  chk_wp          1   29[BANK0 ] unsigned char 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  fatsize         4   68[BANK0 ] unsigned long 
 12753 ;;  totalsect       4   60[BANK0 ] unsigned long 
 12754 ;;  bootsect        4   56[BANK0 ] unsigned long 
 12755 ;;  maxclust        4   52[BANK0 ] unsigned long 
 12756 ;;  fs              2   72[BANK0 ] PTR struct _FATFS
 12757 ;;		 -> NULL(0), fs(544), 
 12758 ;;  p               2   64[BANK0 ] PTR const unsigned char 
 12759 ;;		 -> STR_19(13), filename(20), 
 12760 ;;  stat            1   67[BANK0 ] unsigned char 
 12761 ;;  fmt             1   66[BANK0 ] unsigned char 
 12762 ;; Return value:  Size  Location     Type
 12763 ;;                  1    wreg      enum E155
 12764 ;; Registers used:
 12765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12766 ;; Tracked objects:
 12767 ;;		On entry : 3F/0
 12768 ;;		On exit  : 3E/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12771 ;;      Params:         0       2       0       0       0       0       0       0       0
 12772 ;;      Locals:         0      22       0       0       0       0       0       0       0
 12773 ;;      Temps:          0      22       0       0       0       0       0       0       0
 12774 ;;      Totals:         0      46       0       0       0       0       0       0       0
 12775 ;;Total ram usage:       46 bytes
 12776 ;; Hardware stack levels used:    1
 12777 ;; Hardware stack levels required when called:    9
 12778 ;; This function calls:
 12779 ;;		___lldiv
 12780 ;;		___lmul
 12781 ;;		_check_fs
 12782 ;;		_disk_initialize
 12783 ;;		_disk_status
 12784 ;;		_memset
 12785 ;; This function is called by:
 12786 ;;		_f_open
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text67
 12791  0005A0                     __ptext67:
 12792                           	callstack 0
 12793  0005A0                     _auto_mount:
 12794                           	callstack 16
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 12798                           
 12799                           ;incstack = 0
 12800  0005A0  517C               	movf	auto_mount@path& (0+255),w,b
 12801  0005A2  6ED9               	movwf	fsr2l,c
 12802  0005A4  6ADA               	clrf	fsr2h,c
 12803  0005A6  CFDE F0A0          	movff	postinc2,auto_mount@p
 12804  0005AA  CFDD F0A1          	movff	postdec2,auto_mount@p+1
 12805                           
 12806                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 12807  0005AE  D003               	goto	l11486
 12808  0005B0                     l11484:
 12809  0005B0  0100               	movlb	0	; () banked
 12810  0005B2  4BA0               	infsnz	auto_mount@p& (0+255),f,b
 12811  0005B4  2BA1               	incf	(auto_mount@p+1)& (0+255),f,b
 12812  0005B6                     l11486:
 12813                           
 12814                           ; BSR set to: 0
 12815  0005B6  C0A0  FFF6         	movff	auto_mount@p,tblptrl
 12816  0005BA  C0A1  FFF7         	movff	auto_mount@p+1,tblptrh
 12817  0005BE  6AF8               	clrf	tblptru,c
 12818  0005C0  0E07               	movlw	(high __ramtop+-1)
 12819  0005C2  64F7               	cpfsgt	tblptrh,c
 12820  0005C4  D003               	bra	u13637
 12821  0005C6  0008               	tblrd		*
 12822  0005C8  50F5               	movf	tablat,w,c
 12823  0005CA  D005               	bra	u13630
 12824  0005CC                     u13637:
 12825  0005CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 12826  0005D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 12827  0005D4  50E7               	movf	indf1,w,c
 12828  0005D6                     u13630:
 12829  0005D6  0A20               	xorlw	32
 12830  0005D8  B4D8               	btfsc	status,2,c
 12831  0005DA  D7EA               	goto	l11484
 12832                           
 12833                           ;tff.c: 665: if (*p == '/') p++;
 12834  0005DC  C0A0  FFF6         	movff	auto_mount@p,tblptrl
 12835  0005E0  C0A1  FFF7         	movff	auto_mount@p+1,tblptrh
 12836  0005E4  6AF8               	clrf	tblptru,c
 12837  0005E6  0E07               	movlw	(high __ramtop+-1)
 12838  0005E8  64F7               	cpfsgt	tblptrh,c
 12839  0005EA  D003               	bra	u13657
 12840  0005EC  0008               	tblrd		*
 12841  0005EE  50F5               	movf	tablat,w,c
 12842  0005F0  D005               	bra	u13650
 12843  0005F2                     u13657:
 12844  0005F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 12845  0005F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 12846  0005FA  50E7               	movf	indf1,w,c
 12847  0005FC                     u13650:
 12848  0005FC  0A2F               	xorlw	47
 12849  0005FE  A4D8               	btfss	status,2,c
 12850  000600  D003               	goto	l11492
 12851  000602  0100               	movlb	0	; () banked
 12852  000604  4BA0               	infsnz	auto_mount@p& (0+255),f,b
 12853  000606  2BA1               	incf	(auto_mount@p+1)& (0+255),f,b
 12854  000608                     l11492:
 12855                           
 12856                           ;tff.c: 666: *path = p;
 12857  000608  0100               	movlb	0	; () banked
 12858  00060A  517C               	movf	auto_mount@path& (0+255),w,b
 12859  00060C  6ED9               	movwf	fsr2l,c
 12860  00060E  6ADA               	clrf	fsr2h,c
 12861  000610  C0A0  FFDE         	movff	auto_mount@p,postinc2
 12862  000614  C0A1  FFDD         	movff	auto_mount@p+1,postdec2
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;tff.c: 669: fs = FatFs;
 12866  000618  C036  F0A8         	movff	_FatFs,auto_mount@fs
 12867  00061C  C037  F0A9         	movff	_FatFs+1,auto_mount@fs+1
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 12871  000620  51A8               	movf	auto_mount@fs& (0+255),w,b
 12872  000622  11A9               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 12873  000624  A4D8               	btfss	status,2,c
 12874  000626  D002               	goto	l11502
 12875                           
 12876                           ; BSR set to: 0
 12877  000628  0E0A               	movlw	10
 12878  00062A  0012               	return	
 12879  00062C                     l11502:
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;tff.c: 672: if (fs->fs_type) {
 12883  00062C  EE20 F01C          	lfsr	2,28
 12884  000630  51A8               	movf	auto_mount@fs& (0+255),w,b
 12885  000632  26D9               	addwf	fsr2l,f,c
 12886  000634  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 12887  000636  22DA               	addwfc	fsr2h,f,c
 12888  000638  50DF               	movf	indf2,w,c
 12889  00063A  B4D8               	btfsc	status,2,c
 12890  00063C  D00F               	goto	l11520
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;tff.c: 673: stat = disk_status(0);
 12894  00063E  0E00               	movlw	0
 12895  000640  EC11  F02B         	call	_disk_status
 12896  000644  0100               	movlb	0	; () banked
 12897  000646  6FA3               	movwf	auto_mount@stat& (0+255),b
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;tff.c: 674: if (!(stat & 0x01)) {
 12901  000648  B1A3               	btfsc	auto_mount@stat& (0+255),0,b
 12902  00064A  D008               	goto	l11520
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 12906  00064C  517D               	movf	auto_mount@chk_wp& (0+255),w,b
 12907  00064E  A4D8               	btfss	status,2,c
 12908                           
 12909                           ; BSR set to: 0
 12910  000650  A5A3               	btfss	auto_mount@stat& (0+255),2,b
 12911  000652  D002               	goto	l11516
 12912  000654                     u13710:
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 12916  000654  0E09               	movlw	9
 12917  000656  0012               	return	
 12918  000658                     l11516:
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;tff.c: 679: return FR_OK;
 12922  000658  0E00               	movlw	0
 12923  00065A  0012               	return	
 12924  00065C                     l11520:
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 12928  00065C  C0A8  F01A         	movff	auto_mount@fs,memset@p1
 12929  000660  C0A9  F01B         	movff	auto_mount@fs+1,memset@p1+1
 12930  000664  0E00               	movlw	0
 12931  000666  6E1D               	movwf	(memset@c+1)^0,c
 12932  000668  0E00               	movlw	0
 12933  00066A  6E1C               	movwf	memset@c^0,c
 12934  00066C  0E02               	movlw	2
 12935  00066E  6E1F               	movwf	(memset@n+1)^0,c
 12936  000670  0E20               	movlw	32
 12937  000672  6E1E               	movwf	memset@n^0,c
 12938  000674  EC40  F02B         	call	_memset	;wreg free
 12939                           
 12940                           ;tff.c: 686: stat = disk_initialize(0);
 12941  000678  0E00               	movlw	0
 12942  00067A  EC93  F02B         	call	_disk_initialize
 12943  00067E  0100               	movlb	0	; () banked
 12944  000680  6FA3               	movwf	auto_mount@stat& (0+255),b
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;tff.c: 687: if (stat & 0x01)
 12948  000682  A1A3               	btfss	auto_mount@stat& (0+255),0,b
 12949  000684  D002               	goto	l11530
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;tff.c: 688: return FR_NOT_READY;
 12953  000686  0E01               	movlw	1
 12954  000688  0012               	return	
 12955  00068A                     l11530:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 12959  00068A  517D               	movf	auto_mount@chk_wp& (0+255),w,b
 12960  00068C  B4D8               	btfsc	status,2,c
 12961  00068E  D002               	goto	l11538
 12962                           
 12963                           ; BSR set to: 0
 12964  000690  B5A3               	btfsc	auto_mount@stat& (0+255),2,b
 12965  000692  D7E0               	goto	u13710
 12966  000694                     l11538:
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 12970  000694  0E00               	movlw	0
 12971  000696  6F98               	movwf	auto_mount@bootsect& (0+255),b
 12972  000698  0E00               	movlw	0
 12973  00069A  6F99               	movwf	(auto_mount@bootsect+1)& (0+255),b
 12974  00069C  0E00               	movlw	0
 12975  00069E  6F9A               	movwf	(auto_mount@bootsect+2)& (0+255),b
 12976  0006A0  0E00               	movlw	0
 12977  0006A2  6F9B               	movwf	(auto_mount@bootsect+3)& (0+255),b
 12978  0006A4  C098  F074         	movff	auto_mount@bootsect,check_fs@sect
 12979  0006A8  C099  F075         	movff	auto_mount@bootsect+1,check_fs@sect+1
 12980  0006AC  C09A  F076         	movff	auto_mount@bootsect+2,check_fs@sect+2
 12981  0006B0  C09B  F077         	movff	auto_mount@bootsect+3,check_fs@sect+3
 12982  0006B4  ECA1  F024         	call	_check_fs	;wreg free
 12983  0006B8  0100               	movlb	0	; () banked
 12984  0006BA  6FA2               	movwf	auto_mount@fmt& (0+255),b
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;tff.c: 697: if (fmt == 1) {
 12988  0006BC  05A2               	decf	auto_mount@fmt& (0+255),w,b
 12989  0006BE  A4D8               	btfss	status,2,c
 12990  0006C0  D023               	goto	l11548
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;tff.c: 699: if (fs->win[446+4]) {
 12994  0006C2  EE21 F0E2          	lfsr	2,482
 12995  0006C6  51A8               	movf	auto_mount@fs& (0+255),w,b
 12996  0006C8  26D9               	addwf	fsr2l,f,c
 12997  0006CA  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 12998  0006CC  22DA               	addwfc	fsr2h,f,c
 12999  0006CE  50DF               	movf	indf2,w,c
 13000  0006D0  B4D8               	btfsc	status,2,c
 13001  0006D2  D01A               	goto	l11548
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13005  0006D4  EE21 F0E6          	lfsr	2,486
 13006  0006D8  51A8               	movf	auto_mount@fs& (0+255),w,b
 13007  0006DA  26D9               	addwf	fsr2l,f,c
 13008  0006DC  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13009  0006DE  22DA               	addwfc	fsr2h,f,c
 13010  0006E0  CFDE F098          	movff	postinc2,auto_mount@bootsect
 13011  0006E4  CFDE F099          	movff	postinc2,auto_mount@bootsect+1
 13012  0006E8  CFDE F09A          	movff	postinc2,auto_mount@bootsect+2
 13013  0006EC  CFDE F09B          	movff	postinc2,auto_mount@bootsect+3
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;tff.c: 701: fmt = check_fs(bootsect);
 13017  0006F0  C098  F074         	movff	auto_mount@bootsect,check_fs@sect
 13018  0006F4  C099  F075         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13019  0006F8  C09A  F076         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13020  0006FC  C09B  F077         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13021  000700  ECA1  F024         	call	_check_fs	;wreg free
 13022  000704  0100               	movlb	0	; () banked
 13023  000706  6FA2               	movwf	auto_mount@fmt& (0+255),b
 13024  000708                     l11548:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13028  000708  51A2               	movf	auto_mount@fmt& (0+255),w,b
 13029  00070A  A4D8               	btfss	status,2,c
 13030  00070C  D00C               	goto	u13780
 13031                           
 13032                           ; BSR set to: 0
 13033  00070E  EE20 F02B          	lfsr	2,43
 13034  000712  51A8               	movf	auto_mount@fs& (0+255),w,b
 13035  000714  26D9               	addwf	fsr2l,f,c
 13036  000716  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13037  000718  22DA               	addwfc	fsr2h,f,c
 13038  00071A  50DE               	movf	postinc2,w,c
 13039  00071C  E104               	bnz	u13780
 13040  00071E  0E02               	movlw	2
 13041  000720  18DE               	xorwf	postinc2,w,c
 13042  000722  B4D8               	btfsc	status,2,c
 13043  000724  D002               	goto	l11556
 13044  000726                     u13780:
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13048  000726  0E0B               	movlw	11
 13049  000728  0012               	return	
 13050  00072A                     l11556:
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13054  00072A  EE20 F036          	lfsr	2,54
 13055  00072E  51A8               	movf	auto_mount@fs& (0+255),w,b
 13056  000730  26D9               	addwf	fsr2l,f,c
 13057  000732  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13058  000734  22DA               	addwfc	fsr2h,f,c
 13059  000736  CFDE F07E          	movff	postinc2,??_auto_mount
 13060  00073A  CFDD F07F          	movff	postdec2,??_auto_mount+1
 13061  00073E  C07E  F0A4         	movff	??_auto_mount,auto_mount@fatsize
 13062  000742  C07F  F0A5         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13063  000746  6BA6               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13064  000748  6BA7               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13068  00074A  51A4               	movf	auto_mount@fatsize& (0+255),w,b
 13069  00074C  11A5               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13070  00074E  11A6               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13071  000750  11A7               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13072  000752  A4D8               	btfss	status,2,c
 13073  000754  D00E               	goto	l1010
 13074                           
 13075                           ; BSR set to: 0
 13076  000756  EE20 F044          	lfsr	2,68
 13077  00075A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13078  00075C  26D9               	addwf	fsr2l,f,c
 13079  00075E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13080  000760  22DA               	addwfc	fsr2h,f,c
 13081  000762  CFDE F0A4          	movff	postinc2,auto_mount@fatsize
 13082  000766  CFDE F0A5          	movff	postinc2,auto_mount@fatsize+1
 13083  00076A  CFDE F0A6          	movff	postinc2,auto_mount@fatsize+2
 13084  00076E  CFDE F0A7          	movff	postinc2,auto_mount@fatsize+3
 13085  000772                     l1010:
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13089  000772  EE20 F014          	lfsr	2,20
 13090  000776  51A8               	movf	auto_mount@fs& (0+255),w,b
 13091  000778  26D9               	addwf	fsr2l,f,c
 13092  00077A  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13093  00077C  22DA               	addwfc	fsr2h,f,c
 13094  00077E  C0A4  FFDE         	movff	auto_mount@fatsize,postinc2
 13095  000782  C0A5  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13099  000786  EE20 F030          	lfsr	2,48
 13100  00078A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13101  00078C  26D9               	addwf	fsr2l,f,c
 13102  00078E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13103  000790  22DA               	addwfc	fsr2h,f,c
 13104  000792  EE10 F01E          	lfsr	1,30
 13105  000796  51A8               	movf	auto_mount@fs& (0+255),w,b
 13106  000798  26E1               	addwf	fsr1l,f,c
 13107  00079A  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13108  00079C  22E2               	addwfc	fsr1h,f,c
 13109  00079E  CFDF FFE7          	movff	indf2,indf1
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;tff.c: 712: fatsize *= fs->n_fats;
 13113  0007A2  C0A4  F01A         	movff	auto_mount@fatsize,___lmul@multiplier
 13114  0007A6  C0A5  F01B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13115  0007AA  C0A6  F01C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13116  0007AE  C0A7  F01D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13117  0007B2  EE20 F01E          	lfsr	2,30
 13118  0007B6  51A8               	movf	auto_mount@fs& (0+255),w,b
 13119  0007B8  26D9               	addwf	fsr2l,f,c
 13120  0007BA  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13121  0007BC  22DA               	addwfc	fsr2h,f,c
 13122  0007BE  50DF               	movf	indf2,w,c
 13123  0007C0  6F7E               	movwf	??_auto_mount& (0+255),b
 13124  0007C2  517E               	movf	??_auto_mount& (0+255),w,b
 13125  0007C4  6E1E               	movwf	___lmul@multiplicand^0,c
 13126  0007C6  6A1F               	clrf	(___lmul@multiplicand+1)^0,c
 13127  0007C8  6A20               	clrf	(___lmul@multiplicand+2)^0,c
 13128  0007CA  6A21               	clrf	(___lmul@multiplicand+3)^0,c
 13129  0007CC  EC30  F028         	call	___lmul	;wreg free
 13130  0007D0  C01A  F0A4         	movff	?___lmul,auto_mount@fatsize
 13131  0007D4  C01B  F0A5         	movff	?___lmul+1,auto_mount@fatsize+1
 13132  0007D8  C01C  F0A6         	movff	?___lmul+2,auto_mount@fatsize+2
 13133  0007DC  C01D  F0A7         	movff	?___lmul+3,auto_mount@fatsize+3
 13134                           
 13135                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13136  0007E0  0100               	movlb	0	; () banked
 13137  0007E2  EE20 F02E          	lfsr	2,46
 13138  0007E6  51A8               	movf	auto_mount@fs& (0+255),w,b
 13139  0007E8  26D9               	addwf	fsr2l,f,c
 13140  0007EA  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13141  0007EC  22DA               	addwfc	fsr2h,f,c
 13142  0007EE  CFDE F07E          	movff	postinc2,??_auto_mount
 13143  0007F2  CFDD F07F          	movff	postdec2,??_auto_mount+1
 13144  0007F6  517E               	movf	??_auto_mount& (0+255),w,b
 13145  0007F8  2598               	addwf	auto_mount@bootsect& (0+255),w,b
 13146  0007FA  6F80               	movwf	(??_auto_mount+2)& (0+255),b
 13147  0007FC  517F               	movf	(??_auto_mount+1)& (0+255),w,b
 13148  0007FE  2199               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13149  000800  6F81               	movwf	(??_auto_mount+3)& (0+255),b
 13150  000802  0E00               	movlw	0
 13151  000804  219A               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13152  000806  6F82               	movwf	(??_auto_mount+4)& (0+255),b
 13153  000808  0E00               	movlw	0
 13154  00080A  219B               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13155  00080C  6F83               	movwf	(??_auto_mount+5)& (0+255),b
 13156  00080E  EE20 F008          	lfsr	2,8
 13157  000812  51A8               	movf	auto_mount@fs& (0+255),w,b
 13158  000814  26D9               	addwf	fsr2l,f,c
 13159  000816  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13160  000818  22DA               	addwfc	fsr2h,f,c
 13161  00081A  C080  FFDE         	movff	??_auto_mount+2,postinc2
 13162  00081E  C081  FFDE         	movff	??_auto_mount+3,postinc2
 13163  000822  C082  FFDE         	movff	??_auto_mount+4,postinc2
 13164  000826  C083  FFDE         	movff	??_auto_mount+5,postinc2
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;tff.c: 714: fs->csize = fs->win[13];
 13168  00082A  EE20 F02D          	lfsr	2,45
 13169  00082E  51A8               	movf	auto_mount@fs& (0+255),w,b
 13170  000830  26D9               	addwf	fsr2l,f,c
 13171  000832  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13172  000834  22DA               	addwfc	fsr2h,f,c
 13173  000836  EE10 F01D          	lfsr	1,29
 13174  00083A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13175  00083C  26E1               	addwf	fsr1l,f,c
 13176  00083E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13177  000840  22E2               	addwfc	fsr1h,f,c
 13178  000842  CFDF FFE7          	movff	indf2,indf1
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13182  000846  EE20 F031          	lfsr	2,49
 13183  00084A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13184  00084C  26D9               	addwf	fsr2l,f,c
 13185  00084E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13186  000850  22DA               	addwfc	fsr2h,f,c
 13187  000852  EE10 F002          	lfsr	1,2
 13188  000856  51A8               	movf	auto_mount@fs& (0+255),w,b
 13189  000858  26E1               	addwf	fsr1l,f,c
 13190  00085A  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13191  00085C  22E2               	addwfc	fsr1h,f,c
 13192  00085E  CFDE FFE6          	movff	postinc2,postinc1
 13193  000862  CFDD FFE5          	movff	postdec2,postdec1
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13197  000866  EE20 F033          	lfsr	2,51
 13198  00086A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13199  00086C  26D9               	addwf	fsr2l,f,c
 13200  00086E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13201  000870  22DA               	addwfc	fsr2h,f,c
 13202  000872  CFDE F07E          	movff	postinc2,??_auto_mount
 13203  000876  CFDD F07F          	movff	postdec2,??_auto_mount+1
 13204  00087A  C07E  F09C         	movff	??_auto_mount,auto_mount@totalsect
 13205  00087E  C07F  F09D         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13206  000882  6B9E               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13207  000884  6B9F               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13211  000886  519C               	movf	auto_mount@totalsect& (0+255),w,b
 13212  000888  119D               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13213  00088A  119E               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13214  00088C  119F               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13215  00088E  A4D8               	btfss	status,2,c
 13216  000890  D00E               	goto	l11578
 13217                           
 13218                           ; BSR set to: 0
 13219  000892  EE20 F040          	lfsr	2,64
 13220  000896  51A8               	movf	auto_mount@fs& (0+255),w,b
 13221  000898  26D9               	addwf	fsr2l,f,c
 13222  00089A  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13223  00089C  22DA               	addwfc	fsr2h,f,c
 13224  00089E  CFDE F09C          	movff	postinc2,auto_mount@totalsect
 13225  0008A2  CFDE F09D          	movff	postinc2,auto_mount@totalsect+1
 13226  0008A6  CFDE F09E          	movff	postinc2,auto_mount@totalsect+2
 13227  0008AA  CFDE F09F          	movff	postinc2,auto_mount@totalsect+3
 13228  0008AE                     l11578:
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13232  0008AE  EE20 F002          	lfsr	2,2
 13233  0008B2  51A8               	movf	auto_mount@fs& (0+255),w,b
 13234  0008B4  26D9               	addwf	fsr2l,f,c
 13235  0008B6  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13236  0008B8  22DA               	addwfc	fsr2h,f,c
 13237  0008BA  CFDE F07E          	movff	postinc2,??_auto_mount
 13238  0008BE  CFDD F07F          	movff	postdec2,??_auto_mount+1
 13239  0008C2  0E04               	movlw	4
 13240  0008C4  6F80               	movwf	(??_auto_mount+2)& (0+255),b
 13241  0008C6                     u13815:
 13242  0008C6  90D8               	bcf	status,0,c
 13243  0008C8  337F               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13244  0008CA  337E               	rrcf	??_auto_mount& (0+255),f,b
 13245  0008CC  2F80               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13246  0008CE  D7FB               	goto	u13815
 13247  0008D0  517E               	movf	??_auto_mount& (0+255),w,b
 13248  0008D2  6F81               	movwf	(??_auto_mount+3)& (0+255),b
 13249  0008D4  517F               	movf	(??_auto_mount+1)& (0+255),w,b
 13250  0008D6  6F82               	movwf	(??_auto_mount+4)& (0+255),b
 13251  0008D8  6B83               	clrf	(??_auto_mount+5)& (0+255),b
 13252  0008DA  6B84               	clrf	(??_auto_mount+6)& (0+255),b
 13253  0008DC  EE20 F02E          	lfsr	2,46
 13254  0008E0  51A8               	movf	auto_mount@fs& (0+255),w,b
 13255  0008E2  26D9               	addwf	fsr2l,f,c
 13256  0008E4  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13257  0008E6  22DA               	addwfc	fsr2h,f,c
 13258  0008E8  CFDE F085          	movff	postinc2,??_auto_mount+7
 13259  0008EC  CFDD F086          	movff	postdec2,??_auto_mount+8
 13260  0008F0  5185               	movf	(??_auto_mount+7)& (0+255),w,b
 13261  0008F2  6F87               	movwf	(??_auto_mount+9)& (0+255),b
 13262  0008F4  5186               	movf	(??_auto_mount+8)& (0+255),w,b
 13263  0008F6  6F88               	movwf	(??_auto_mount+10)& (0+255),b
 13264  0008F8  6B89               	clrf	(??_auto_mount+11)& (0+255),b
 13265  0008FA  6B8A               	clrf	(??_auto_mount+12)& (0+255),b
 13266  0008FC  1F87               	comf	(??_auto_mount+9)& (0+255),f,b
 13267  0008FE  1F88               	comf	(??_auto_mount+10)& (0+255),f,b
 13268  000900  1F89               	comf	(??_auto_mount+11)& (0+255),f,b
 13269  000902  1F8A               	comf	(??_auto_mount+12)& (0+255),f,b
 13270  000904  2B87               	incf	(??_auto_mount+9)& (0+255),f,b
 13271  000906  0E00               	movlw	0
 13272  000908  2388               	addwfc	(??_auto_mount+10)& (0+255),f,b
 13273  00090A  2389               	addwfc	(??_auto_mount+11)& (0+255),f,b
 13274  00090C  238A               	addwfc	(??_auto_mount+12)& (0+255),f,b
 13275  00090E  51A4               	movf	auto_mount@fatsize& (0+255),w,b
 13276  000910  5D87               	subwf	(??_auto_mount+9)& (0+255),w,b
 13277  000912  6F8B               	movwf	(??_auto_mount+13)& (0+255),b
 13278  000914  51A5               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13279  000916  5988               	subwfb	(??_auto_mount+10)& (0+255),w,b
 13280  000918  6F8C               	movwf	(??_auto_mount+14)& (0+255),b
 13281  00091A  51A6               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13282  00091C  5989               	subwfb	(??_auto_mount+11)& (0+255),w,b
 13283  00091E  6F8D               	movwf	(??_auto_mount+15)& (0+255),b
 13284  000920  51A7               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13285  000922  598A               	subwfb	(??_auto_mount+12)& (0+255),w,b
 13286  000924  6F8E               	movwf	(??_auto_mount+16)& (0+255),b
 13287  000926  5181               	movf	(??_auto_mount+3)& (0+255),w,b
 13288  000928  5D8B               	subwf	(??_auto_mount+13)& (0+255),w,b
 13289  00092A  6F8F               	movwf	(??_auto_mount+17)& (0+255),b
 13290  00092C  5182               	movf	(??_auto_mount+4)& (0+255),w,b
 13291  00092E  598C               	subwfb	(??_auto_mount+14)& (0+255),w,b
 13292  000930  6F90               	movwf	(??_auto_mount+18)& (0+255),b
 13293  000932  5183               	movf	(??_auto_mount+5)& (0+255),w,b
 13294  000934  598D               	subwfb	(??_auto_mount+15)& (0+255),w,b
 13295  000936  6F91               	movwf	(??_auto_mount+19)& (0+255),b
 13296  000938  5184               	movf	(??_auto_mount+6)& (0+255),w,b
 13297  00093A  598E               	subwfb	(??_auto_mount+16)& (0+255),w,b
 13298  00093C  6F92               	movwf	(??_auto_mount+20)& (0+255),b
 13299  00093E  519C               	movf	auto_mount@totalsect& (0+255),w,b
 13300  000940  258F               	addwf	(??_auto_mount+17)& (0+255),w,b
 13301  000942  6E1A               	movwf	___lldiv@dividend^0,c
 13302  000944  519D               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 13303  000946  2190               	addwfc	(??_auto_mount+18)& (0+255),w,b
 13304  000948  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 13305  00094A  519E               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 13306  00094C  2191               	addwfc	(??_auto_mount+19)& (0+255),w,b
 13307  00094E  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 13308  000950  519F               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 13309  000952  2192               	addwfc	(??_auto_mount+20)& (0+255),w,b
 13310  000954  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 13311  000956  EE20 F01D          	lfsr	2,29
 13312  00095A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13313  00095C  26D9               	addwf	fsr2l,f,c
 13314  00095E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13315  000960  22DA               	addwfc	fsr2h,f,c
 13316  000962  50DF               	movf	indf2,w,c
 13317  000964  6F93               	movwf	(??_auto_mount+21)& (0+255),b
 13318  000966  5193               	movf	(??_auto_mount+21)& (0+255),w,b
 13319  000968  6E1E               	movwf	___lldiv@divisor^0,c
 13320  00096A  6A1F               	clrf	(___lldiv@divisor+1)^0,c
 13321  00096C  6A20               	clrf	(___lldiv@divisor+2)^0,c
 13322  00096E  6A21               	clrf	(___lldiv@divisor+3)^0,c
 13323  000970  ECE2  F024         	call	___lldiv	;wreg free
 13324  000974  0E02               	movlw	2
 13325  000976  241A               	addwf	?___lldiv^0,w,c
 13326  000978  0100               	movlb	0	; () banked
 13327  00097A  6F94               	movwf	auto_mount@maxclust& (0+255),b
 13328  00097C  0E00               	movlw	0
 13329  00097E  201B               	addwfc	(?___lldiv+1)^0,w,c
 13330  000980  6F95               	movwf	(auto_mount@maxclust+1)& (0+255),b
 13331  000982  0E00               	movlw	0
 13332  000984  201C               	addwfc	(?___lldiv+2)^0,w,c
 13333  000986  6F96               	movwf	(auto_mount@maxclust+2)& (0+255),b
 13334  000988  0E00               	movlw	0
 13335  00098A  201D               	addwfc	(?___lldiv+3)^0,w,c
 13336  00098C  6F97               	movwf	(auto_mount@maxclust+3)& (0+255),b
 13337  00098E  EE20 F016          	lfsr	2,22
 13338  000992  51A8               	movf	auto_mount@fs& (0+255),w,b
 13339  000994  26D9               	addwf	fsr2l,f,c
 13340  000996  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13341  000998  22DA               	addwfc	fsr2h,f,c
 13342  00099A  C094  FFDE         	movff	auto_mount@maxclust,postinc2
 13343  00099E  C095  FFDD         	movff	auto_mount@maxclust+1,postdec2
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;tff.c: 722: fmt = 1;
 13347  0009A2  0E01               	movlw	1
 13348  0009A4  6FA2               	movwf	auto_mount@fmt& (0+255),b
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 13352  0009A6  5197               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 13353  0009A8  1196               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 13354  0009AA  E106               	bnz	u13820
 13355  0009AC  0EF7               	movlw	247
 13356  0009AE  5D94               	subwf	auto_mount@maxclust& (0+255),w,b
 13357  0009B0  0E0F               	movlw	15
 13358  0009B2  5995               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 13359  0009B4  A0D8               	btfss	status,0,c
 13360  0009B6  D002               	goto	l11586
 13361  0009B8                     u13820:
 13362                           
 13363                           ; BSR set to: 0
 13364  0009B8  0E02               	movlw	2
 13365  0009BA  6FA2               	movwf	auto_mount@fmt& (0+255),b
 13366  0009BC                     l11586:
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 13370  0009BC  5197               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 13371  0009BE  1196               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 13372  0009C0  E107               	bnz	u13830
 13373  0009C2  0EF7               	movlw	247
 13374  0009C4  5D94               	subwf	auto_mount@maxclust& (0+255),w,b
 13375  0009C6  0EFF               	movlw	255
 13376  0009C8  5995               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 13377  0009CA  B0D8               	btfsc	status,0,c
 13378  0009CC  D6AC               	goto	u13780
 13379  0009CE  D001               	goto	l11592
 13380  0009D0                     u13830:
 13381  0009D0  D6AA               	goto	u13780
 13382  0009D2                     l11592:
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 13386  0009D2  EE20 F008          	lfsr	2,8
 13387  0009D6  51A8               	movf	auto_mount@fs& (0+255),w,b
 13388  0009D8  26D9               	addwf	fsr2l,f,c
 13389  0009DA  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13390  0009DC  22DA               	addwfc	fsr2h,f,c
 13391  0009DE  CFDE F07E          	movff	postinc2,??_auto_mount
 13392  0009E2  CFDE F07F          	movff	postinc2,??_auto_mount+1
 13393  0009E6  CFDE F080          	movff	postinc2,??_auto_mount+2
 13394  0009EA  CFDE F081          	movff	postinc2,??_auto_mount+3
 13395  0009EE  51A4               	movf	auto_mount@fatsize& (0+255),w,b
 13396  0009F0  257E               	addwf	??_auto_mount& (0+255),w,b
 13397  0009F2  6F82               	movwf	(??_auto_mount+4)& (0+255),b
 13398  0009F4  51A5               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13399  0009F6  217F               	addwfc	(??_auto_mount+1)& (0+255),w,b
 13400  0009F8  6F83               	movwf	(??_auto_mount+5)& (0+255),b
 13401  0009FA  51A6               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13402  0009FC  2180               	addwfc	(??_auto_mount+2)& (0+255),w,b
 13403  0009FE  6F84               	movwf	(??_auto_mount+6)& (0+255),b
 13404  000A00  51A7               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13405  000A02  2181               	addwfc	(??_auto_mount+3)& (0+255),w,b
 13406  000A04  6F85               	movwf	(??_auto_mount+7)& (0+255),b
 13407  000A06  EE20 F00C          	lfsr	2,12
 13408  000A0A  51A8               	movf	auto_mount@fs& (0+255),w,b
 13409  000A0C  26D9               	addwf	fsr2l,f,c
 13410  000A0E  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13411  000A10  22DA               	addwfc	fsr2h,f,c
 13412  000A12  C082  FFDE         	movff	??_auto_mount+4,postinc2
 13413  000A16  C083  FFDE         	movff	??_auto_mount+5,postinc2
 13414  000A1A  C084  FFDE         	movff	??_auto_mount+6,postinc2
 13415  000A1E  C085  FFDE         	movff	??_auto_mount+7,postinc2
 13416                           
 13417                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 13418  000A22  EE20 F008          	lfsr	2,8
 13419  000A26  51A8               	movf	auto_mount@fs& (0+255),w,b
 13420  000A28  26D9               	addwf	fsr2l,f,c
 13421  000A2A  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13422  000A2C  22DA               	addwfc	fsr2h,f,c
 13423  000A2E  CFDE F07E          	movff	postinc2,??_auto_mount
 13424  000A32  CFDE F07F          	movff	postinc2,??_auto_mount+1
 13425  000A36  CFDE F080          	movff	postinc2,??_auto_mount+2
 13426  000A3A  CFDE F081          	movff	postinc2,??_auto_mount+3
 13427  000A3E  EE20 F002          	lfsr	2,2
 13428  000A42  51A8               	movf	auto_mount@fs& (0+255),w,b
 13429  000A44  26D9               	addwf	fsr2l,f,c
 13430  000A46  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13431  000A48  22DA               	addwfc	fsr2h,f,c
 13432  000A4A  CFDE F082          	movff	postinc2,??_auto_mount+4
 13433  000A4E  CFDD F083          	movff	postdec2,??_auto_mount+5
 13434  000A52  0E04               	movlw	4
 13435  000A54  6F84               	movwf	(??_auto_mount+6)& (0+255),b
 13436  000A56                     u13845:
 13437  000A56  90D8               	bcf	status,0,c
 13438  000A58  3383               	rrcf	(??_auto_mount+5)& (0+255),f,b
 13439  000A5A  3382               	rrcf	(??_auto_mount+4)& (0+255),f,b
 13440  000A5C  2F84               	decfsz	(??_auto_mount+6)& (0+255),f,b
 13441  000A5E  D7FB               	goto	u13845
 13442  000A60  5182               	movf	(??_auto_mount+4)& (0+255),w,b
 13443  000A62  257E               	addwf	??_auto_mount& (0+255),w,b
 13444  000A64  6F85               	movwf	(??_auto_mount+7)& (0+255),b
 13445  000A66  5183               	movf	(??_auto_mount+5)& (0+255),w,b
 13446  000A68  217F               	addwfc	(??_auto_mount+1)& (0+255),w,b
 13447  000A6A  6F86               	movwf	(??_auto_mount+8)& (0+255),b
 13448  000A6C  0E00               	movlw	0
 13449  000A6E  2180               	addwfc	(??_auto_mount+2)& (0+255),w,b
 13450  000A70  6F87               	movwf	(??_auto_mount+9)& (0+255),b
 13451  000A72  0E00               	movlw	0
 13452  000A74  2181               	addwfc	(??_auto_mount+3)& (0+255),w,b
 13453  000A76  6F88               	movwf	(??_auto_mount+10)& (0+255),b
 13454  000A78  51A4               	movf	auto_mount@fatsize& (0+255),w,b
 13455  000A7A  2585               	addwf	(??_auto_mount+7)& (0+255),w,b
 13456  000A7C  6F89               	movwf	(??_auto_mount+11)& (0+255),b
 13457  000A7E  51A5               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13458  000A80  2186               	addwfc	(??_auto_mount+8)& (0+255),w,b
 13459  000A82  6F8A               	movwf	(??_auto_mount+12)& (0+255),b
 13460  000A84  51A6               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13461  000A86  2187               	addwfc	(??_auto_mount+9)& (0+255),w,b
 13462  000A88  6F8B               	movwf	(??_auto_mount+13)& (0+255),b
 13463  000A8A  51A7               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13464  000A8C  2188               	addwfc	(??_auto_mount+10)& (0+255),w,b
 13465  000A8E  6F8C               	movwf	(??_auto_mount+14)& (0+255),b
 13466  000A90  EE20 F010          	lfsr	2,16
 13467  000A94  51A8               	movf	auto_mount@fs& (0+255),w,b
 13468  000A96  26D9               	addwf	fsr2l,f,c
 13469  000A98  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13470  000A9A  22DA               	addwfc	fsr2h,f,c
 13471  000A9C  C089  FFDE         	movff	??_auto_mount+11,postinc2
 13472  000AA0  C08A  FFDE         	movff	??_auto_mount+12,postinc2
 13473  000AA4  C08B  FFDE         	movff	??_auto_mount+13,postinc2
 13474  000AA8  C08C  FFDE         	movff	??_auto_mount+14,postinc2
 13475                           
 13476                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 13477  000AAC  EE20 F01A          	lfsr	2,26
 13478  000AB0  51A8               	movf	auto_mount@fs& (0+255),w,b
 13479  000AB2  26D9               	addwf	fsr2l,f,c
 13480  000AB4  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13481  000AB6  22DA               	addwfc	fsr2h,f,c
 13482  000AB8  0EFF               	movlw	255
 13483  000ABA  6EDE               	movwf	postinc2,c
 13484  000ABC  0EFF               	movlw	255
 13485  000ABE  6EDD               	movwf	postdec2,c
 13486                           
 13487                           ;tff.c: 754: fs->fs_type = fmt;
 13488  000AC0  EE20 F01C          	lfsr	2,28
 13489  000AC4  51A8               	movf	auto_mount@fs& (0+255),w,b
 13490  000AC6  26D9               	addwf	fsr2l,f,c
 13491  000AC8  51A9               	movf	(auto_mount@fs+1)& (0+255),w,b
 13492  000ACA  22DA               	addwfc	fsr2h,f,c
 13493  000ACC  C0A2  FFDF         	movff	auto_mount@fmt,indf2
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;tff.c: 755: fs->id = ++fsid;
 13497  000AD0  0101               	movlb	1	; () banked
 13498  000AD2  4B50               	infsnz	_fsid& (0+255),f,b
 13499  000AD4  2B51               	incf	(_fsid+1)& (0+255),f,b
 13500  000AD6  C0A8  FFD9         	movff	auto_mount@fs,fsr2l
 13501  000ADA  C0A9  FFDA         	movff	auto_mount@fs+1,fsr2h
 13502  000ADE  C150  FFDE         	movff	_fsid,postinc2
 13503  000AE2  C151  FFDD         	movff	_fsid+1,postdec2
 13504                           
 13505                           ;tff.c: 756: return FR_OK;
 13506  000AE6  0E00               	movlw	0
 13507  000AE8  0012               	return		;funcret
 13508  000AEA                     __end_of_auto_mount:
 13509                           	callstack 0
 13510                           
 13511 ;; *************** function _memset *****************
 13512 ;; Defined at:
 13513 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  p1              2   25[COMRAM] PTR void 
 13516 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 13517 ;;  c               2   27[COMRAM] int 
 13518 ;;  n               2   29[COMRAM] unsigned int 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  p               2   31[COMRAM] PTR unsigned char 
 13521 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  2   25[COMRAM] PTR void 
 13524 ;; Registers used:
 13525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13531 ;;      Params:         6       0       0       0       0       0       0       0       0
 13532 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13534 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13535 ;;Total ram usage:        8 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    3
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_make_dirfile
 13542 ;;		_reserve_direntry
 13543 ;;		_auto_mount
 13544 ;;		_f_open
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           	psect	text68
 13549  005680                     __ptext68:
 13550                           	callstack 0
 13551  005680                     _memset:
 13552                           	callstack 20
 13553                           
 13554                           ;incstack = 0
 13555  005680  C01A  F020         	movff	memset@p1,memset@p
 13556  005684  C01B  F021         	movff	memset@p1+1,memset@p+1
 13557  005688  D008               	goto	l10814
 13558  00568A                     l10810:
 13559  00568A  C020  FFD9         	movff	memset@p,fsr2l
 13560  00568E  C021  FFDA         	movff	memset@p+1,fsr2h
 13561  005692  C01C  FFDF         	movff	memset@c,indf2
 13562  005696  4A20               	infsnz	memset@p^0,f,c
 13563  005698  2A21               	incf	(memset@p+1)^0,f,c
 13564  00569A                     l10814:
 13565  00569A  061E               	decf	memset@n^0,f,c
 13566  00569C  A0D8               	btfss	status,0,c
 13567  00569E  061F               	decf	(memset@n+1)^0,f,c
 13568  0056A0  281E               	incf	memset@n^0,w,c
 13569  0056A2  E1F3               	bnz	l10810
 13570  0056A4  281F               	incf	(memset@n+1)^0,w,c
 13571  0056A6  B4D8               	btfsc	status,2,c
 13572  0056A8  0012               	return	
 13573  0056AA  D7EF               	goto	l10810
 13574  0056AC                     __end_of_memset:
 13575                           	callstack 0
 13576                           
 13577 ;; *************** function _disk_initialize *****************
 13578 ;; Defined at:
 13579 ;;		line 59 in file "bibliotecas/diskio.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;  pdrv            1    wreg     unsigned char 
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;  pdrv            1   45[COMRAM] unsigned char 
 13584 ;;  result          2    0        int 
 13585 ;;  stat            1   46[COMRAM] unsigned char 
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      unsigned char 
 13588 ;; Registers used:
 13589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13590 ;; Tracked objects:
 13591 ;;		On entry : 0/0
 13592 ;;		On exit  : 0/0
 13593 ;;		Unchanged: 0/0
 13594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13595 ;;      Params:         0       0       0       0       0       0       0       0       0
 13596 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13598 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13599 ;;Total ram usage:        2 bytes
 13600 ;; Hardware stack levels used:    1
 13601 ;; Hardware stack levels required when called:    8
 13602 ;; This function calls:
 13603 ;;		_sdc_disk_initialize
 13604 ;; This function is called by:
 13605 ;;		_auto_mount
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           	psect	text69
 13610  005726                     __ptext69:
 13611                           	callstack 0
 13612  005726                     _disk_initialize:
 13613                           	callstack 16
 13614                           
 13615                           ;incstack = 0
 13616                           ;disk_initialize@pdrv stored from wreg
 13617  005726  6E2E               	movwf	disk_initialize@pdrv^0,c
 13618                           
 13619                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 13620  005728  D005               	goto	l11002
 13621  00572A                     l10984:
 13622                           
 13623                           ;diskio.c: 68: stat = sdc_disk_initialize();
 13624  00572A  ECEB  F00C         	call	_sdc_disk_initialize	;wreg free
 13625  00572E  6E2F               	movwf	disk_initialize@stat^0,c
 13626  005730                     l10986:
 13627                           
 13628                           ;diskio.c: 72: return stat;
 13629  005730  502F               	movf	disk_initialize@stat^0,w,c
 13630  005732  0012               	return	
 13631  005734                     l11002:
 13632  005734  502E               	movf	disk_initialize@pdrv^0,w,c
 13633                           
 13634                           ; Switch size 1, requested type "simple"
 13635                           ; Number of cases is 3, Range of values is 0 to 2
 13636                           ; switch strategies available:
 13637                           ; Name         Instructions Cycles
 13638                           ; simple_byte           10     6 (average)
 13639                           ;	Chosen strategy is simple_byte
 13640  005736  0A00               	xorlw	0	; case 0
 13641  005738  B4D8               	btfsc	status,2,c
 13642  00573A  D7F7               	goto	l10984
 13643  00573C  0A01               	xorlw	1	; case 1
 13644  00573E  B4D8               	btfsc	status,2,c
 13645  005740  D7F4               	goto	l10984
 13646  005742  0A03               	xorlw	3	; case 2
 13647  005744  B4D8               	btfsc	status,2,c
 13648  005746  D7F4               	goto	l10986
 13649                           
 13650                           ;diskio.c: 88: return 0x01;
 13651  005748  0E01               	movlw	1
 13652  00574A  0012               	return		;funcret
 13653  00574C                     __end_of_disk_initialize:
 13654                           	callstack 0
 13655                           
 13656 ;; *************** function _sdc_disk_initialize *****************
 13657 ;; Defined at:
 13658 ;;		line 275 in file "bibliotecas/diskio.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;  count2          2    9[BANK0 ] int 
 13663 ;;  crc_number      2    5[BANK0 ] int 
 13664 ;;  count1          2    3[BANK0 ] int 
 13665 ;;  i               2    0        int 
 13666 ;;  buff            1   11[BANK0 ] unsigned char 
 13667 ;;  ocr             1    8[BANK0 ] unsigned char 
 13668 ;;  buff_i          1    7[BANK0 ] unsigned char 
 13669 ;;  stat            1    2[BANK0 ] unsigned char 
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  1    wreg      unsigned char 
 13672 ;; Registers used:
 13673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13674 ;; Tracked objects:
 13675 ;;		On entry : 0/0
 13676 ;;		On exit  : 3F/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13679 ;;      Params:         0       0       0       0       0       0       0       0       0
 13680 ;;      Locals:         0      12       0       0       0       0       0       0       0
 13681 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13682 ;;      Totals:         1      12       0       0       0       0       0       0       0
 13683 ;;Total ram usage:       13 bytes
 13684 ;; Hardware stack levels used:    1
 13685 ;; Hardware stack levels required when called:    7
 13686 ;; This function calls:
 13687 ;;		_command
 13688 ;;		_dummy_clocks
 13689 ;;		_escreve_frase_ram_lcd
 13690 ;;		_posicao_cursor_lcd
 13691 ;;		_proceed
 13692 ;;		_response
 13693 ;;		_sdc_reset
 13694 ;; This function is called by:
 13695 ;;		_disk_initialize
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text70
 13700  0019D6                     __ptext70:
 13701                           	callstack 0
 13702  0019D6                     _sdc_disk_initialize:
 13703                           	callstack 16
 13704                           
 13705                           ;incstack = 0
 13706  0019D6  0E00               	movlw	0
 13707  0019D8  0100               	movlb	0	; () banked
 13708  0019DA  6F64               	movwf	(sdc_disk_initialize@count1+1)& (0+255),b
 13709  0019DC  0E00               	movlw	0
 13710  0019DE  6F63               	movwf	sdc_disk_initialize@count1& (0+255),b
 13711  0019E0  0E00               	movlw	0
 13712  0019E2  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13713  0019E4  0E00               	movlw	0
 13714  0019E6  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13715                           
 13716                           ;diskio.c: 280: BYTE buff = 0;
 13717  0019E8  0E00               	movlw	0
 13718  0019EA  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 13722  0019EC  0E10               	movlw	16
 13723  0019EE  6E2D               	movwf	??_sdc_disk_initialize^0,c
 13724  0019F0  0E94               	movlw	148
 13725  0019F2                     u16997:
 13726  0019F2  2EE8               	decfsz	wreg,f,c
 13727  0019F4  D7FE               	bra	u16997
 13728  0019F6  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 13729  0019F8  D7FC               	bra	u16997
 13730  0019FA  D000               	nop2	
 13731                           
 13732                           ;diskio.c: 284: dummy_clocks(100);
 13733  0019FC  0E64               	movlw	100
 13734  0019FE  ECBC  F02A         	call	_dummy_clocks
 13735                           
 13736                           ;diskio.c: 287: sdc_reset();
 13737  001A02  EC8B  F023         	call	_sdc_reset	;wreg free
 13738                           
 13739                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 13740  001A06  0EAA               	movlw	170
 13741  001A08  6E1F               	movwf	command@arg^0,c
 13742  001A0A  0E01               	movlw	1
 13743  001A0C  6E20               	movwf	(command@arg+1)^0,c
 13744  001A0E  0E00               	movlw	0
 13745  001A10  6E21               	movwf	(command@arg+2)^0,c
 13746  001A12  0E00               	movlw	0
 13747  001A14  6E22               	movwf	(command@arg+3)^0,c
 13748  001A16  0E87               	movlw	135
 13749  001A18  6E23               	movwf	command@CRC^0,c
 13750  001A1A  0E48               	movlw	72
 13751  001A1C  ECD7  F027         	call	_command
 13752                           
 13753                           ;diskio.c: 289: proceed();
 13754  001A20  EC0A  F02D         	call	_proceed	;wreg free
 13755  001A24                     l10622:
 13756                           
 13757                           ;diskio.c: 291: buff_i = response();
 13758  001A24  EC04  F02D         	call	_response	;wreg free
 13759  001A28  0100               	movlb	0	; () banked
 13760  001A2A  6F67               	movwf	sdc_disk_initialize@buff_i& (0+255),b
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;diskio.c: 292: if(buff_i == 1)
 13764  001A2C  0567               	decf	sdc_disk_initialize@buff_i& (0+255),w,b
 13765  001A2E  A4D8               	btfss	status,2,c
 13766  001A30  D004               	goto	l10628
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 13770  001A32  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 13771  001A34  6F66               	movwf	(sdc_disk_initialize@crc_number+1)& (0+255),b
 13772  001A36  6B65               	clrf	sdc_disk_initialize@crc_number& (0+255),b
 13773                           
 13774                           ;diskio.c: 295: }
 13775  001A38  D006               	goto	l10632
 13776  001A3A                     l10628:
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;diskio.c: 296: else if(buff_i==0xAA)
 13780  001A3A  0EAA               	movlw	170
 13781  001A3C  1967               	xorwf	sdc_disk_initialize@buff_i& (0+255),w,b
 13782  001A3E  A4D8               	btfss	status,2,c
 13783  001A40  D002               	goto	l10632
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 13787  001A42  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 13788  001A44  1365               	iorwf	sdc_disk_initialize@crc_number& (0+255),f,b
 13789  001A46                     l10632:
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;diskio.c: 299: };diskio.c: 300: count1++;
 13793  001A46  4B63               	infsnz	sdc_disk_initialize@count1& (0+255),f,b
 13794  001A48  2B64               	incf	(sdc_disk_initialize@count1+1)& (0+255),f,b
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 13798  001A4A  0EAA               	movlw	170
 13799  001A4C  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 13800  001A4E  E103               	bnz	u12250
 13801  001A50  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 13802  001A52  B4D8               	btfsc	status,2,c
 13803  001A54  D008               	goto	u12260
 13804  001A56                     u12250:
 13805                           
 13806                           ; BSR set to: 0
 13807  001A56  BF64               	btfsc	(sdc_disk_initialize@count1+1)& (0+255),7,b
 13808  001A58  D7E5               	goto	l10622
 13809  001A5A  0EE8               	movlw	232
 13810  001A5C  5D63               	subwf	sdc_disk_initialize@count1& (0+255),w,b
 13811  001A5E  0E03               	movlw	3
 13812  001A60  5964               	subwfb	(sdc_disk_initialize@count1+1)& (0+255),w,b
 13813  001A62  A0D8               	btfss	status,0,c
 13814  001A64  D7DF               	goto	l10622
 13815  001A66                     u12260:
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;diskio.c: 306: if (crc_number == 0x1AA)
 13819  001A66  0EAA               	movlw	170
 13820  001A68  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 13821  001A6A  E102               	bnz	u12271
 13822  001A6C  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 13823  001A6E  A4D8               	btfss	status,2,c
 13824  001A70                     u12271:
 13825  001A70  D09E               	goto	l10710
 13826  001A72                     u12270:
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;diskio.c: 310: count2 = 0;
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;diskio.c: 309: do{
 13833  001A72  0E00               	movlw	0
 13834  001A74  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13835  001A76  0E00               	movlw	0
 13836  001A78  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13837  001A7A                     
 13838                           ; BSR set to: 0
 13839                           ;diskio.c: 319: dummy_clocks(10);
 13840                           
 13841                           ; BSR set to: 0
 13842  001A7A  0E0A               	movlw	10
 13843  001A7C  ECBC  F02A         	call	_dummy_clocks
 13844                           
 13845                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 13846  001A80  0E00               	movlw	0
 13847  001A82  6E1F               	movwf	command@arg^0,c
 13848  001A84  0E00               	movlw	0
 13849  001A86  6E20               	movwf	(command@arg+1)^0,c
 13850  001A88  0E00               	movlw	0
 13851  001A8A  6E21               	movwf	(command@arg+2)^0,c
 13852  001A8C  0E00               	movlw	0
 13853  001A8E  6E22               	movwf	(command@arg+3)^0,c
 13854  001A90  0E00               	movlw	0
 13855  001A92  6E23               	movwf	command@CRC^0,c
 13856  001A94  0E77               	movlw	119
 13857  001A96  ECD7  F027         	call	_command
 13858                           
 13859                           ;diskio.c: 323: proceed();
 13860  001A9A  EC0A  F02D         	call	_proceed	;wreg free
 13861  001A9E                     l10652:
 13862                           
 13863                           ;diskio.c: 325: buff = response();
 13864  001A9E  EC04  F02D         	call	_response	;wreg free
 13865  001AA2  0100               	movlb	0	; () banked
 13866  001AA4  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;diskio.c: 326: count2++;
 13870  001AA6  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13871  001AA8  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13872                           
 13873                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 13874  001AAA  056B               	decf	sdc_disk_initialize@buff& (0+255),w,b
 13875  001AAC  B4D8               	btfsc	status,2,c
 13876  001AAE  D008               	goto	u12290
 13877                           
 13878                           ; BSR set to: 0
 13879  001AB0  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13880  001AB2  D7F5               	goto	l10652
 13881  001AB4  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13882  001AB6  E104               	bnz	u12290
 13883  001AB8  0E0A               	movlw	10
 13884  001ABA  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13885  001ABC  A0D8               	btfss	status,0,c
 13886  001ABE  D7EF               	goto	l10652
 13887  001AC0                     u12290:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;diskio.c: 328: count2 = 0;
 13891  001AC0  0E00               	movlw	0
 13892  001AC2  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13893  001AC4  0E00               	movlw	0
 13894  001AC6  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;diskio.c: 332: dummy_clocks(10);
 13898  001AC8  0E0A               	movlw	10
 13899  001ACA  ECBC  F02A         	call	_dummy_clocks
 13900                           
 13901                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 13902  001ACE  0E00               	movlw	0
 13903  001AD0  6E1F               	movwf	command@arg^0,c
 13904  001AD2  0E00               	movlw	0
 13905  001AD4  6E20               	movwf	(command@arg+1)^0,c
 13906  001AD6  0E00               	movlw	0
 13907  001AD8  6E21               	movwf	(command@arg+2)^0,c
 13908  001ADA  0E40               	movlw	64
 13909  001ADC  6E22               	movwf	(command@arg+3)^0,c
 13910  001ADE  0E00               	movlw	0
 13911  001AE0  6E23               	movwf	command@CRC^0,c
 13912  001AE2  0E69               	movlw	105
 13913  001AE4  ECD7  F027         	call	_command
 13914                           
 13915                           ;diskio.c: 334: proceed();
 13916  001AE8  EC0A  F02D         	call	_proceed	;wreg free
 13917                           
 13918                           ;diskio.c: 335: buff = response();
 13919  001AEC  EC04  F02D         	call	_response	;wreg free
 13920  001AF0  0100               	movlb	0	; () banked
 13921  001AF2  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;diskio.c: 336: count2++;
 13925  001AF4  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13926  001AF6  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;diskio.c: 337: }while(buff!=0X00);
 13930  001AF8  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13931  001AFA  A4D8               	btfss	status,2,c
 13932  001AFC  D7BE               	goto	l10642
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;diskio.c: 342: dummy_clocks(10);
 13936                           
 13937                           ; BSR set to: 0
 13938  001AFE  0E0A               	movlw	10
 13939  001B00  ECBC  F02A         	call	_dummy_clocks
 13940                           
 13941                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 13942  001B04  0E00               	movlw	0
 13943  001B06  6E1F               	movwf	command@arg^0,c
 13944  001B08  0E00               	movlw	0
 13945  001B0A  6E20               	movwf	(command@arg+1)^0,c
 13946  001B0C  0E00               	movlw	0
 13947  001B0E  6E21               	movwf	(command@arg+2)^0,c
 13948  001B10  0E00               	movlw	0
 13949  001B12  6E22               	movwf	(command@arg+3)^0,c
 13950  001B14  0EFF               	movlw	255
 13951  001B16  6E23               	movwf	command@CRC^0,c
 13952  001B18  0E7A               	movlw	122
 13953  001B1A  ECD7  F027         	call	_command
 13954                           
 13955                           ;diskio.c: 344: proceed();
 13956  001B1E  EC0A  F02D         	call	_proceed	;wreg free
 13957  001B22                     l10676:
 13958                           
 13959                           ;diskio.c: 346: buff = response();
 13960  001B22  EC04  F02D         	call	_response	;wreg free
 13961  001B26  0100               	movlb	0	; () banked
 13962  001B28  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 13966  001B2A  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13967  001B2C  256B               	addwf	sdc_disk_initialize@buff& (0+255),w,b
 13968  001B2E  0B80               	andlw	128
 13969  001B30  6F68               	movwf	sdc_disk_initialize@ocr& (0+255),b
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;diskio.c: 348: count2++;
 13973  001B32  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13974  001B34  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 13978  001B36  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 13979  001B38  B4D8               	btfsc	status,2,c
 13980  001B3A  D00B               	goto	u12330
 13981                           
 13982                           ; BSR set to: 0
 13983  001B3C  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 13984  001B3E  B4D8               	btfsc	status,2,c
 13985  001B40  D008               	goto	u12330
 13986                           
 13987                           ; BSR set to: 0
 13988  001B42  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13989  001B44  D7EE               	goto	l10676
 13990  001B46  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13991  001B48  E104               	bnz	u12330
 13992  001B4A  0E0A               	movlw	10
 13993  001B4C  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13994  001B4E  A0D8               	btfss	status,0,c
 13995  001B50  D7E8               	goto	l10676
 13996  001B52                     u12330:
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14000  001B52  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 14001  001B54  B4D8               	btfsc	status,2,c
 14002  001B56  D003               	goto	u12350
 14003                           
 14004                           ; BSR set to: 0
 14005  001B58  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 14006  001B5A  A4D8               	btfss	status,2,c
 14007  001B5C  D78A               	goto	u12270
 14008  001B5E                     u12350:
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14012                           
 14013                           ; BSR set to: 0
 14014  001B5E  0E10               	movlw	16
 14015  001B60  6E2D               	movwf	??_sdc_disk_initialize^0,c
 14016  001B62  0E94               	movlw	148
 14017  001B64                     u17007:
 14018  001B64  2EE8               	decfsz	wreg,f,c
 14019  001B66  D7FE               	bra	u17007
 14020  001B68  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 14021  001B6A  D7FC               	bra	u17007
 14022  001B6C  D000               	nop2	
 14023                           
 14024                           ;diskio.c: 356: stat = 0X00;
 14025  001B6E  0E00               	movlw	0
 14026  001B70  0100               	movlb	0	; () banked
 14027  001B72  6F62               	movwf	sdc_disk_initialize@stat& (0+255),b
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;diskio.c: 358: if(!ocr)
 14031  001B74  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 14032  001B76  A4D8               	btfss	status,2,c
 14033  001B78  D0AC               	goto	u12450
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14037  001B7A  0E0A               	movlw	10
 14038  001B7C  ECBC  F02A         	call	_dummy_clocks
 14039                           
 14040                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14041  001B80  0E00               	movlw	0
 14042  001B82  6E1F               	movwf	command@arg^0,c
 14043  001B84  0E02               	movlw	2
 14044  001B86  6E20               	movwf	(command@arg+1)^0,c
 14045  001B88  0E00               	movlw	0
 14046  001B8A  6E21               	movwf	(command@arg+2)^0,c
 14047  001B8C  0E00               	movlw	0
 14048  001B8E  6E22               	movwf	(command@arg+3)^0,c
 14049  001B90  0EFF               	movlw	255
 14050  001B92  6E23               	movwf	command@CRC^0,c
 14051  001B94  0E50               	movlw	80
 14052  001B96  ECD7  F027         	call	_command
 14053                           
 14054                           ;diskio.c: 363: proceed();
 14055  001B9A  EC0A  F02D         	call	_proceed	;wreg free
 14056  001B9E                     
 14057                           ;diskio.c: 367: buff = response();
 14058  001B9E  EC04  F02D         	call	_response	;wreg free
 14059  001BA2  0100               	movlb	0	; () banked
 14060  001BA4  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;diskio.c: 368: }while(buff!=0X00);
 14064  001BA6  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14065  001BA8  B4D8               	btfsc	status,2,c
 14066  001BAA  D093               	goto	u12450
 14067  001BAC  D7F8               	goto	l10704
 14068  001BAE                     l10710:
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14072  001BAE  0E00               	movlw	0
 14073  001BB0  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 14074  001BB2  0E00               	movlw	0
 14075  001BB4  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;diskio.c: 378: dummy_clocks(1);
 14079                           
 14080                           ; BSR set to: 0
 14081  001BB6  0E01               	movlw	1
 14082  001BB8  ECBC  F02A         	call	_dummy_clocks
 14083                           
 14084                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14085  001BBC  0E00               	movlw	0
 14086  001BBE  6E1F               	movwf	command@arg^0,c
 14087  001BC0  0E00               	movlw	0
 14088  001BC2  6E20               	movwf	(command@arg+1)^0,c
 14089  001BC4  0E00               	movlw	0
 14090  001BC6  6E21               	movwf	(command@arg+2)^0,c
 14091  001BC8  0E00               	movlw	0
 14092  001BCA  6E22               	movwf	(command@arg+3)^0,c
 14093  001BCC  0EFF               	movlw	255
 14094  001BCE  6E23               	movwf	command@CRC^0,c
 14095  001BD0  0E69               	movlw	105
 14096  001BD2  ECD7  F027         	call	_command
 14097                           
 14098                           ;diskio.c: 380: proceed();
 14099  001BD6  EC0A  F02D         	call	_proceed	;wreg free
 14100  001BDA                     l10720:
 14101                           
 14102                           ;diskio.c: 382: buff = response();
 14103  001BDA  EC04  F02D         	call	_response	;wreg free
 14104  001BDE  0100               	movlb	0	; () banked
 14105  001BE0  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;diskio.c: 383: count2++;
 14109  001BE2  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 14110  001BE4  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;diskio.c: 384: if(buff==0x00)
 14114  001BE6  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14115  001BE8  A4D8               	btfss	status,2,c
 14116  001BEA  D00B               	goto	l10730
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14120  001BEC  0E00               	movlw	0
 14121  001BEE  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 14122  001BF0  0E01               	movlw	1
 14123  001BF2  EC21  F027         	call	_posicao_cursor_lcd
 14124                           
 14125                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14126  001BF6  0E14               	movlw	low STR_3
 14127  001BF8  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14128  001BFA  0E62               	movlw	high STR_3
 14129  001BFC  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14130  001BFE  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14131  001C02                     l10730:
 14132                           
 14133                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14134  001C02  0E10               	movlw	16
 14135  001C04  6E2D               	movwf	??_sdc_disk_initialize^0,c
 14136  001C06  0E94               	movlw	148
 14137  001C08                     u17017:
 14138  001C08  2EE8               	decfsz	wreg,f,c
 14139  001C0A  D7FE               	bra	u17017
 14140  001C0C  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 14141  001C0E  D7FC               	bra	u17017
 14142  001C10  D000               	nop2	
 14143                           
 14144                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14145  001C12  0100               	movlb	0	; () banked
 14146  001C14  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14147  001C16  B4D8               	btfsc	status,2,c
 14148  001C18  D008               	goto	u12400
 14149                           
 14150                           ; BSR set to: 0
 14151  001C1A  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 14152  001C1C  D7DE               	goto	l10720
 14153  001C1E  0E10               	movlw	16
 14154  001C20  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 14155  001C22  0E27               	movlw	39
 14156  001C24  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 14157  001C26  A0D8               	btfss	status,0,c
 14158  001C28  D7D8               	goto	l10720
 14159  001C2A                     u12400:
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;diskio.c: 393: if(count2==10)
 14163                           
 14164                           ; BSR set to: 0
 14165  001C2A  0E0A               	movlw	10
 14166  001C2C  1969               	xorwf	sdc_disk_initialize@count2& (0+255),w,b
 14167  001C2E  116A               	iorwf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 14168  001C30  A4D8               	btfss	status,2,c
 14169  001C32  D036               	goto	u12440
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14173  001C34  0E00               	movlw	0
 14174  001C36  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 14175  001C38  0E00               	movlw	0
 14176  001C3A  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;diskio.c: 396: dummy_clocks(10);
 14180  001C3C  0E0A               	movlw	10
 14181  001C3E  ECBC  F02A         	call	_dummy_clocks
 14182                           
 14183                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14184  001C42  0E00               	movlw	0
 14185  001C44  6E1F               	movwf	command@arg^0,c
 14186  001C46  0E00               	movlw	0
 14187  001C48  6E20               	movwf	(command@arg+1)^0,c
 14188  001C4A  0E00               	movlw	0
 14189  001C4C  6E21               	movwf	(command@arg+2)^0,c
 14190  001C4E  0E00               	movlw	0
 14191  001C50  6E22               	movwf	(command@arg+3)^0,c
 14192  001C52  0EFF               	movlw	255
 14193  001C54  6E23               	movwf	command@CRC^0,c
 14194  001C56  0E41               	movlw	65
 14195  001C58  ECD7  F027         	call	_command
 14196                           
 14197                           ;diskio.c: 398: proceed();
 14198  001C5C  EC0A  F02D         	call	_proceed	;wreg free
 14199  001C60                     l10746:
 14200                           
 14201                           ;diskio.c: 400: buff = response();
 14202  001C60  EC04  F02D         	call	_response	;wreg free
 14203  001C64  0100               	movlb	0	; () banked
 14204  001C66  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;diskio.c: 401: count2++;
 14208  001C68  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 14209  001C6A  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;diskio.c: 402: if(buff==0x00)
 14213  001C6C  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14214  001C6E  A4D8               	btfss	status,2,c
 14215  001C70  D00B               	goto	l10756
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14219  001C72  0E00               	movlw	0
 14220  001C74  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 14221  001C76  0E01               	movlw	1
 14222  001C78  EC21  F027         	call	_posicao_cursor_lcd
 14223                           
 14224                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14225  001C7C  0EE0               	movlw	low STR_4
 14226  001C7E  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14227  001C80  0E61               	movlw	high STR_4
 14228  001C82  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14229  001C84  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14230  001C88                     l10756:
 14231                           
 14232                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14233  001C88  0100               	movlb	0	; () banked
 14234  001C8A  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14235  001C8C  B4D8               	btfsc	status,2,c
 14236  001C8E  D008               	goto	u12440
 14237                           
 14238                           ; BSR set to: 0
 14239  001C90  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 14240  001C92  D7E6               	goto	l10746
 14241  001C94  0E10               	movlw	16
 14242  001C96  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 14243  001C98  0E27               	movlw	39
 14244  001C9A  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 14245  001C9C  A0D8               	btfss	status,0,c
 14246  001C9E  D7E0               	goto	l10746
 14247  001CA0                     u12440:
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14251  001CA0  0E0A               	movlw	10
 14252  001CA2  ECBC  F02A         	call	_dummy_clocks
 14253                           
 14254                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14255  001CA6  0E00               	movlw	0
 14256  001CA8  6E1F               	movwf	command@arg^0,c
 14257  001CAA  0E02               	movlw	2
 14258  001CAC  6E20               	movwf	(command@arg+1)^0,c
 14259  001CAE  0E00               	movlw	0
 14260  001CB0  6E21               	movwf	(command@arg+2)^0,c
 14261  001CB2  0E00               	movlw	0
 14262  001CB4  6E22               	movwf	(command@arg+3)^0,c
 14263  001CB6  0EFF               	movlw	255
 14264  001CB8  6E23               	movwf	command@CRC^0,c
 14265  001CBA  0E50               	movlw	80
 14266  001CBC  ECD7  F027         	call	_command
 14267                           
 14268                           ;diskio.c: 414: proceed();
 14269  001CC0  EC0A  F02D         	call	_proceed	;wreg free
 14270  001CC4                     
 14271                           ;diskio.c: 418: buff = response();
 14272  001CC4  EC04  F02D         	call	_response	;wreg free
 14273  001CC8  0100               	movlb	0	; () banked
 14274  001CCA  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;diskio.c: 419: }while(buff!=0X00);
 14278  001CCC  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 14279  001CCE  A4D8               	btfss	status,2,c
 14280  001CD0  D7F9               	goto	l10764
 14281  001CD2                     u12450:
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14285  001CD2  5162               	movf	sdc_disk_initialize@stat& (0+255),w,b
 14286                           
 14287                           ; BSR set to: 0
 14288  001CD4  0012               	return		;funcret
 14289  001CD6                     __end_of_sdc_disk_initialize:
 14290                           	callstack 0
 14291                           
 14292 ;; *************** function _sdc_reset *****************
 14293 ;; Defined at:
 14294 ;;		line 238 in file "bibliotecas/diskio.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;		None
 14297 ;; Auto vars:     Size  Location     Type
 14298 ;;  teste          10    0        unsigned char [10]
 14299 ;;  count           2   41[COMRAM] int 
 14300 ;;  count_nosd      2   39[COMRAM] int 
 14301 ;;  i               2    0        int 
 14302 ;;  receive         2    0        unsigned int 
 14303 ;;  buff            1   43[COMRAM] unsigned char 
 14304 ;;  stat            1    0        unsigned char 
 14305 ;; Return value:  Size  Location     Type
 14306 ;;                  1    wreg      void 
 14307 ;; Registers used:
 14308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14309 ;; Tracked objects:
 14310 ;;		On entry : 0/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14314 ;;      Params:         0       0       0       0       0       0       0       0       0
 14315 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14317 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14318 ;;Total ram usage:        7 bytes
 14319 ;; Hardware stack levels used:    1
 14320 ;; Hardware stack levels required when called:    6
 14321 ;; This function calls:
 14322 ;;		_command
 14323 ;;		_escreve_frase_ram_lcd
 14324 ;;		_posicao_cursor_lcd
 14325 ;;		_proceed
 14326 ;;		_response
 14327 ;; This function is called by:
 14328 ;;		_sdc_disk_initialize
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text71
 14333  004716                     __ptext71:
 14334                           	callstack 0
 14335  004716                     _sdc_reset:
 14336                           	callstack 16
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;incstack = 0
 14340  004716  0E00               	movlw	0
 14341  004718  6E2B               	movwf	(sdc_reset@count+1)^0,c
 14342  00471A  0E00               	movlw	0
 14343  00471C  6E2A               	movwf	sdc_reset@count^0,c
 14344  00471E  0E00               	movlw	0
 14345  004720  6E29               	movwf	(sdc_reset@count_nosd+1)^0,c
 14346  004722  0E00               	movlw	0
 14347  004724  6E28               	movwf	sdc_reset@count_nosd^0,c
 14348  004726                     l10452:
 14349                           
 14350                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 14351  004726  0E00               	movlw	0
 14352  004728  6E1F               	movwf	command@arg^0,c
 14353  00472A  0E00               	movlw	0
 14354  00472C  6E20               	movwf	(command@arg+1)^0,c
 14355  00472E  0E00               	movlw	0
 14356  004730  6E21               	movwf	(command@arg+2)^0,c
 14357  004732  0E00               	movlw	0
 14358  004734  6E22               	movwf	(command@arg+3)^0,c
 14359  004736  0E95               	movlw	149
 14360  004738  6E23               	movwf	command@CRC^0,c
 14361  00473A  0E40               	movlw	64
 14362  00473C  ECD7  F027         	call	_command
 14363                           
 14364                           ;diskio.c: 249: proceed();
 14365  004740  EC0A  F02D         	call	_proceed	;wreg free
 14366  004744                     l10456:
 14367                           
 14368                           ;diskio.c: 251: buff = response();
 14369  004744  EC04  F02D         	call	_response	;wreg free
 14370  004748  6E2C               	movwf	sdc_reset@buff^0,c
 14371                           
 14372                           ;diskio.c: 252: count++;
 14373  00474A  4A2A               	infsnz	sdc_reset@count^0,f,c
 14374  00474C  2A2B               	incf	(sdc_reset@count+1)^0,f,c
 14375                           
 14376                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 14377  00474E  042C               	decf	sdc_reset@buff^0,w,c
 14378  004750  B4D8               	btfsc	status,2,c
 14379  004752  D008               	goto	u11980
 14380  004754  BE2B               	btfsc	(sdc_reset@count+1)^0,7,c
 14381  004756  D7F6               	goto	l10456
 14382  004758  502B               	movf	(sdc_reset@count+1)^0,w,c
 14383  00475A  E104               	bnz	u11980
 14384  00475C  0E0A               	movlw	10
 14385  00475E  5C2A               	subwf	sdc_reset@count^0,w,c
 14386  004760  A0D8               	btfss	status,0,c
 14387  004762  D7F0               	goto	l10456
 14388  004764                     u11980:
 14389                           
 14390                           ;diskio.c: 254: count = 0;
 14391  004764  0E00               	movlw	0
 14392  004766  6E2B               	movwf	(sdc_reset@count+1)^0,c
 14393  004768  0E00               	movlw	0
 14394  00476A  6E2A               	movwf	sdc_reset@count^0,c
 14395                           
 14396                           ;diskio.c: 255: if(buff != 0x01)
 14397  00476C  042C               	decf	sdc_reset@buff^0,w,c
 14398  00476E  B4D8               	btfsc	status,2,c
 14399  004770  D016               	goto	l10474
 14400                           
 14401                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 14402  004772  0E00               	movlw	0
 14403  004774  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 14404  004776  0E01               	movlw	1
 14405  004778  EC21  F027         	call	_posicao_cursor_lcd
 14406                           
 14407                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 14408  00477C  0EEB               	movlw	low STR_1
 14409  00477E  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14410  004780  0E61               	movlw	high STR_1
 14411  004782  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14412  004784  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14413                           
 14414                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 14415  004788  0E00               	movlw	0
 14416  00478A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 14417  00478C  0E02               	movlw	2
 14418  00478E  EC21  F027         	call	_posicao_cursor_lcd
 14419                           
 14420                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 14421  004792  0E8C               	movlw	low STR_2
 14422  004794  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14423  004796  0E61               	movlw	high STR_2
 14424  004798  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14425  00479A  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14426  00479E                     l10474:
 14427                           
 14428                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 14429  00479E  042C               	decf	sdc_reset@buff^0,w,c
 14430  0047A0  B4D8               	btfsc	status,2,c
 14431  0047A2  0012               	return	
 14432  0047A4  D7C0               	goto	l10452
 14433  0047A6                     __end_of_sdc_reset:
 14434                           	callstack 0
 14435                           
 14436 ;; *************** function _check_fs *****************
 14437 ;; Defined at:
 14438 ;;		line 624 in file "bibliotecas/tff.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  sect            4   20[BANK0 ] unsigned long 
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;  fs              2   26[BANK0 ] PTR struct _FATFS
 14443 ;;		 -> NULL(0), fs(544), 
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      unsigned char 
 14446 ;; Registers used:
 14447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14448 ;; Tracked objects:
 14449 ;;		On entry : 3F/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14453 ;;      Params:         0       4       0       0       0       0       0       0       0
 14454 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14455 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14456 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14457 ;;Total ram usage:        8 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    8
 14460 ;; This function calls:
 14461 ;;		_disk_read
 14462 ;;		_memcmp
 14463 ;; This function is called by:
 14464 ;;		_auto_mount
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text72
 14469  004942                     __ptext72:
 14470                           	callstack 0
 14471  004942                     _check_fs:
 14472                           	callstack 16
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;tff.c: 628: FATFS *fs = FatFs;
 14476                           
 14477                           ;incstack = 0
 14478  004942  C036  F07A         	movff	_FatFs,check_fs@fs
 14479  004946  C037  F07B         	movff	_FatFs+1,check_fs@fs+1
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 14483  00494A  0E20               	movlw	32
 14484  00494C  257A               	addwf	check_fs@fs& (0+255),w,b
 14485  00494E  6F68               	movwf	disk_read@buff& (0+255),b
 14486  004950  0E00               	movlw	0
 14487  004952  217B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 14488  004954  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 14489  004956  C074  F06A         	movff	check_fs@sect,disk_read@sector
 14490  00495A  C075  F06B         	movff	check_fs@sect+1,disk_read@sector+1
 14491  00495E  C076  F06C         	movff	check_fs@sect+2,disk_read@sector+2
 14492  004962  C077  F06D         	movff	check_fs@sect+3,disk_read@sector+3
 14493  004966  0E01               	movlw	1
 14494  004968  6F6E               	movwf	disk_read@count& (0+255),b
 14495  00496A  0E00               	movlw	0
 14496  00496C  EC4F  F026         	call	_disk_read
 14497  004970  0900               	iorlw	0
 14498  004972  B4D8               	btfsc	status,2,c
 14499  004974  D002               	goto	l11192
 14500  004976                     u13160:
 14501  004976                     l11188:
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;tff.c: 631: return 2;
 14505  004976  0E02               	movlw	2
 14506  004978  0012               	return	
 14507  00497A                     l11192:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 14511  00497A  EE22 F01E          	lfsr	2,542
 14512  00497E  517A               	movf	check_fs@fs& (0+255),w,b
 14513  004980  26D9               	addwf	fsr2l,f,c
 14514  004982  517B               	movf	(check_fs@fs+1)& (0+255),w,b
 14515  004984  22DA               	addwfc	fsr2h,f,c
 14516  004986  0E55               	movlw	85
 14517  004988  18DE               	xorwf	postinc2,w,c
 14518  00498A  E1F5               	bnz	l11188
 14519  00498C  0EAA               	movlw	170
 14520  00498E  18DE               	xorwf	postinc2,w,c
 14521  004990  A4D8               	btfss	status,2,c
 14522  004992  D7F1               	goto	u13160
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 14526  004994  0E56               	movlw	86
 14527  004996  257A               	addwf	check_fs@fs& (0+255),w,b
 14528  004998  6E1A               	movwf	memcmp@s1^0,c
 14529  00499A  0E00               	movlw	0
 14530  00499C  217B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 14531  00499E  6E1B               	movwf	(memcmp@s1+1)^0,c
 14532  0049A0  0E76               	movlw	low STR_20
 14533  0049A2  6E1C               	movwf	memcmp@s2^0,c
 14534  0049A4  0E62               	movlw	high STR_20
 14535  0049A6  6E1D               	movwf	(memcmp@s2+1)^0,c
 14536  0049A8  0E00               	movlw	0
 14537  0049AA  6E1F               	movwf	(memcmp@n+1)^0,c
 14538  0049AC  0E03               	movlw	3
 14539  0049AE  6E1E               	movwf	memcmp@n^0,c
 14540  0049B0  EC42  F023         	call	_memcmp	;wreg free
 14541  0049B4  501A               	movf	?_memcmp^0,w,c
 14542  0049B6  101B               	iorwf	(?_memcmp+1)^0,w,c
 14543  0049B8  A4D8               	btfss	status,2,c
 14544  0049BA  D002               	goto	l11204
 14545                           
 14546                           ;tff.c: 636: return 0;
 14547  0049BC  0E00               	movlw	0
 14548  0049BE  0012               	return	
 14549  0049C0                     l11204:
 14550                           
 14551                           ;tff.c: 641: return 1;
 14552  0049C0  0E01               	movlw	1
 14553  0049C2  0012               	return		;funcret
 14554  0049C4                     __end_of_check_fs:
 14555                           	callstack 0
 14556                           
 14557 ;; *************** function _memcmp *****************
 14558 ;; Defined at:
 14559 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;  s1              2   25[COMRAM] PTR const void 
 14562 ;;		 -> fs.win(512), NULL(0), fs(544), 
 14563 ;;  s2              2   27[COMRAM] PTR const void 
 14564 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_20(4), 
 14565 ;;  n               2   29[COMRAM] unsigned int 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;		None
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  2   25[COMRAM] int 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14572 ;; Tracked objects:
 14573 ;;		On entry : 3F/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14577 ;;      Params:         6       0       0       0       0       0       0       0       0
 14578 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14579 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14580 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14581 ;;Total ram usage:        8 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    3
 14584 ;; This function calls:
 14585 ;;		Nothing
 14586 ;; This function is called by:
 14587 ;;		_trace_path
 14588 ;;		_check_fs
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           	psect	text73
 14593  004684                     __ptext73:
 14594                           	callstack 0
 14595  004684                     _memcmp:
 14596                           	callstack 21
 14597                           
 14598                           ; BSR set to: 0
 14599                           
 14600                           ;incstack = 0
 14601  004684  D03B               	goto	l10826
 14602  004686                     l10818:
 14603  004686  C01A  FFD9         	movff	memcmp@s1,fsr2l
 14604  00468A  C01B  FFDA         	movff	memcmp@s1+1,fsr2h
 14605  00468E  50DF               	movf	indf2,w,c
 14606  004690  6E20               	movwf	??_memcmp^0,c
 14607  004692  C01C  FFF6         	movff	memcmp@s2,tblptrl
 14608  004696  C01D  FFF7         	movff	memcmp@s2+1,tblptrh
 14609  00469A  6AF8               	clrf	tblptru,c
 14610  00469C  0E07               	movlw	(high __ramtop+-1)
 14611  00469E  64F7               	cpfsgt	tblptrh,c
 14612  0046A0  D003               	bra	u12477
 14613  0046A2  0008               	tblrd		*
 14614  0046A4  50F5               	movf	tablat,w,c
 14615  0046A6  D005               	bra	u12470
 14616  0046A8                     u12477:
 14617  0046A8  CFF6 FFE1          	movff	tblptrl,fsr1l
 14618  0046AC  CFF7 FFE2          	movff	tblptrh,fsr1h
 14619  0046B0  50E7               	movf	indf1,w,c
 14620  0046B2                     u12470:
 14621  0046B2  1820               	xorwf	??_memcmp^0,w,c
 14622  0046B4  B4D8               	btfsc	status,2,c
 14623  0046B6  D01E               	goto	l10824
 14624  0046B8  C01A  FFD9         	movff	memcmp@s1,fsr2l
 14625  0046BC  C01B  FFDA         	movff	memcmp@s1+1,fsr2h
 14626  0046C0  50DF               	movf	indf2,w,c
 14627  0046C2  6E20               	movwf	??_memcmp^0,c
 14628  0046C4  C01C  FFF6         	movff	memcmp@s2,tblptrl
 14629  0046C8  C01D  FFF7         	movff	memcmp@s2+1,tblptrh
 14630  0046CC  6AF8               	clrf	tblptru,c
 14631  0046CE  0E07               	movlw	(high __ramtop+-1)
 14632  0046D0  64F7               	cpfsgt	tblptrh,c
 14633  0046D2  D003               	bra	u12497
 14634  0046D4  0008               	tblrd		*
 14635  0046D6  50F5               	movf	tablat,w,c
 14636  0046D8  D005               	bra	u12490
 14637  0046DA                     u12497:
 14638  0046DA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14639  0046DE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14640  0046E2  50E7               	movf	indf1,w,c
 14641  0046E4                     u12490:
 14642  0046E4  6E21               	movwf	(??_memcmp+1)^0,c
 14643  0046E6  5021               	movf	(??_memcmp+1)^0,w,c
 14644  0046E8  5C20               	subwf	??_memcmp^0,w,c
 14645  0046EA  6E1A               	movwf	?_memcmp^0,c
 14646  0046EC  6A1B               	clrf	(?_memcmp+1)^0,c
 14647  0046EE  A0D8               	btfss	status,0,c
 14648  0046F0  061B               	decf	(?_memcmp+1)^0,f,c
 14649  0046F2  0012               	return	
 14650  0046F4                     l10824:
 14651  0046F4  4A1A               	infsnz	memcmp@s1^0,f,c
 14652  0046F6  2A1B               	incf	(memcmp@s1+1)^0,f,c
 14653  0046F8  4A1C               	infsnz	memcmp@s2^0,f,c
 14654  0046FA  2A1D               	incf	(memcmp@s2+1)^0,f,c
 14655  0046FC                     l10826:
 14656  0046FC  061E               	decf	memcmp@n^0,f,c
 14657  0046FE  A0D8               	btfss	status,0,c
 14658  004700  061F               	decf	(memcmp@n+1)^0,f,c
 14659  004702  281E               	incf	memcmp@n^0,w,c
 14660  004704  E1C0               	bnz	l10818
 14661  004706  281F               	incf	(memcmp@n+1)^0,w,c
 14662  004708  A4D8               	btfss	status,2,c
 14663  00470A  D7BD               	goto	l10818
 14664  00470C  0E00               	movlw	0
 14665  00470E  6E1B               	movwf	(?_memcmp+1)^0,c
 14666  004710  0E00               	movlw	0
 14667  004712  6E1A               	movwf	?_memcmp^0,c
 14668  004714  0012               	return		;funcret
 14669  004716                     __end_of_memcmp:
 14670                           	callstack 0
 14671                           
 14672 ;; *************** function ___lmul *****************
 14673 ;; Defined at:
 14674 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;  multiplier      4   25[COMRAM] unsigned long 
 14677 ;;  multiplicand    4   29[COMRAM] unsigned long 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;  product         4   33[COMRAM] unsigned long 
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  4   25[COMRAM] unsigned long 
 14682 ;; Registers used:
 14683 ;;		wreg, status,2, status,0
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14689 ;;      Params:         8       0       0       0       0       0       0       0       0
 14690 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14692 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14693 ;;Total ram usage:       12 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    3
 14696 ;; This function calls:
 14697 ;;		Nothing
 14698 ;; This function is called by:
 14699 ;;		_clust2sect
 14700 ;;		_auto_mount
 14701 ;;		_atol
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text74
 14706  005060                     __ptext74:
 14707                           	callstack 0
 14708  005060                     ___lmul:
 14709                           	callstack 19
 14710                           
 14711                           ;incstack = 0
 14712  005060  0E00               	movlw	0
 14713  005062  6E22               	movwf	___lmul@product^0,c
 14714  005064  0E00               	movlw	0
 14715  005066  6E23               	movwf	(___lmul@product+1)^0,c
 14716  005068  0E00               	movlw	0
 14717  00506A  6E24               	movwf	(___lmul@product+2)^0,c
 14718  00506C  0E00               	movlw	0
 14719  00506E  6E25               	movwf	(___lmul@product+3)^0,c
 14720  005070                     l10442:
 14721  005070  A01A               	btfss	___lmul@multiplier^0,0,c
 14722  005072  D008               	goto	l10446
 14723  005074  501E               	movf	___lmul@multiplicand^0,w,c
 14724  005076  2622               	addwf	___lmul@product^0,f,c
 14725  005078  501F               	movf	(___lmul@multiplicand+1)^0,w,c
 14726  00507A  2223               	addwfc	(___lmul@product+1)^0,f,c
 14727  00507C  5020               	movf	(___lmul@multiplicand+2)^0,w,c
 14728  00507E  2224               	addwfc	(___lmul@product+2)^0,f,c
 14729  005080  5021               	movf	(___lmul@multiplicand+3)^0,w,c
 14730  005082  2225               	addwfc	(___lmul@product+3)^0,f,c
 14731  005084                     l10446:
 14732  005084  90D8               	bcf	status,0,c
 14733  005086  361E               	rlcf	___lmul@multiplicand^0,f,c
 14734  005088  361F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14735  00508A  3620               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14736  00508C  3621               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14737  00508E  90D8               	bcf	status,0,c
 14738  005090  321D               	rrcf	(___lmul@multiplier+3)^0,f,c
 14739  005092  321C               	rrcf	(___lmul@multiplier+2)^0,f,c
 14740  005094  321B               	rrcf	(___lmul@multiplier+1)^0,f,c
 14741  005096  321A               	rrcf	___lmul@multiplier^0,f,c
 14742  005098  501A               	movf	___lmul@multiplier^0,w,c
 14743  00509A  101B               	iorwf	(___lmul@multiplier+1)^0,w,c
 14744  00509C  101C               	iorwf	(___lmul@multiplier+2)^0,w,c
 14745  00509E  101D               	iorwf	(___lmul@multiplier+3)^0,w,c
 14746  0050A0  A4D8               	btfss	status,2,c
 14747  0050A2  D7E6               	goto	l10442
 14748  0050A4  C022  F01A         	movff	___lmul@product,?___lmul
 14749  0050A8  C023  F01B         	movff	___lmul@product+1,?___lmul+1
 14750  0050AC  C024  F01C         	movff	___lmul@product+2,?___lmul+2
 14751  0050B0  C025  F01D         	movff	___lmul@product+3,?___lmul+3
 14752  0050B4  0012               	return		;funcret
 14753  0050B6                     __end_of___lmul:
 14754                           	callstack 0
 14755                           
 14756 ;; *************** function _f_mount *****************
 14757 ;; Defined at:
 14758 ;;		line 794 in file "bibliotecas/tff.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;  drv             1    wreg     unsigned char 
 14761 ;;  fs              2   25[COMRAM] PTR struct _FATFS
 14762 ;;		 -> fs(544), 
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;  drv             1   27[COMRAM] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      enum E3231
 14767 ;; Registers used:
 14768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/1
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14774 ;;      Params:         2       0       0       0       0       0       0       0       0
 14775 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14777 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14778 ;;Total ram usage:        3 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    3
 14781 ;; This function calls:
 14782 ;;		Nothing
 14783 ;; This function is called by:
 14784 ;;		_escrita_sdcard
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text75
 14789  005298                     __ptext75:
 14790                           	callstack 0
 14791  005298                     _f_mount:
 14792                           	callstack 23
 14793                           
 14794                           ;incstack = 0
 14795                           ;f_mount@drv stored from wreg
 14796  005298  6E1C               	movwf	f_mount@drv^0,c
 14797                           
 14798                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 14799  00529A  501C               	movf	f_mount@drv^0,w,c
 14800  00529C  B4D8               	btfsc	status,2,c
 14801  00529E  D002               	goto	l11798
 14802  0052A0  0E05               	movlw	5
 14803  0052A2  0012               	return	
 14804  0052A4                     l11798:
 14805                           
 14806                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 14807  0052A4  5036               	movf	_FatFs^0,w,c
 14808  0052A6  1037               	iorwf	(_FatFs+1)^0,w,c
 14809  0052A8  B4D8               	btfsc	status,2,c
 14810  0052AA  D008               	goto	l11802
 14811  0052AC  EE20 F01C          	lfsr	2,28
 14812  0052B0  5036               	movf	_FatFs^0,w,c
 14813  0052B2  26D9               	addwf	fsr2l,f,c
 14814  0052B4  5037               	movf	(_FatFs+1)^0,w,c
 14815  0052B6  22DA               	addwfc	fsr2h,f,c
 14816  0052B8  0E00               	movlw	0
 14817  0052BA  6EDF               	movwf	indf2,c
 14818  0052BC                     l11802:
 14819                           
 14820                           ;tff.c: 803: FatFs = fs;
 14821  0052BC  C01A  F036         	movff	f_mount@fs,_FatFs
 14822  0052C0  C01B  F037         	movff	f_mount@fs+1,_FatFs+1
 14823                           
 14824                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 14825  0052C4  501A               	movf	f_mount@fs^0,w,c
 14826  0052C6  101B               	iorwf	(f_mount@fs+1)^0,w,c
 14827  0052C8  B4D8               	btfsc	status,2,c
 14828  0052CA  D008               	goto	l11808
 14829  0052CC  EE20 F01C          	lfsr	2,28
 14830  0052D0  501A               	movf	f_mount@fs^0,w,c
 14831  0052D2  26D9               	addwf	fsr2l,f,c
 14832  0052D4  501B               	movf	(f_mount@fs+1)^0,w,c
 14833  0052D6  22DA               	addwfc	fsr2h,f,c
 14834  0052D8  0E00               	movlw	0
 14835  0052DA  6EDF               	movwf	indf2,c
 14836  0052DC                     l11808:
 14837                           
 14838                           ;tff.c: 806: return FR_OK;
 14839  0052DC  0E00               	movlw	0
 14840  0052DE  0012               	return		;funcret
 14841  0052E0                     __end_of_f_mount:
 14842                           	callstack 0
 14843                           
 14844 ;; *************** function _f_lseek *****************
 14845 ;; Defined at:
 14846 ;;		line 1140 in file "bibliotecas/tff.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  fp              2   79[BANK0 ] PTR struct _FIL
 14849 ;;		 -> fil(28), 
 14850 ;;  ofs             4   81[BANK0 ] unsigned long 
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;  csize           4  106[BANK0 ] unsigned long 
 14853 ;;  ifptr           4  102[BANK0 ] unsigned long 
 14854 ;;  clust           2  110[BANK0 ] unsigned short 
 14855 ;;  res             1  101[BANK0 ] enum E155
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      enum E3231
 14858 ;; Registers used:
 14859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 3F/0
 14862 ;;		On exit  : 3F/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14865 ;;      Params:         0       6       0       0       0       0       0       0       0
 14866 ;;      Locals:         0      11       0       0       0       0       0       0       0
 14867 ;;      Temps:          0      16       0       0       0       0       0       0       0
 14868 ;;      Totals:         0      33       0       0       0       0       0       0       0
 14869 ;;Total ram usage:       33 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:   11
 14872 ;; This function calls:
 14873 ;;		___lldiv
 14874 ;;		_create_chain
 14875 ;;		_get_cluster
 14876 ;;		_validate
 14877 ;; This function is called by:
 14878 ;;		_escrita_sdcard
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882                           	psect	text76
 14883  000AEA                     __ptext76:
 14884                           	callstack 0
 14885  000AEA                     _f_lseek:
 14886                           	callstack 15
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 14890                           
 14891                           ;incstack = 0
 14892  000AEA  EE20 F004          	lfsr	2,4
 14893  000AEE  51AF               	movf	f_lseek@fp& (0+255),w,b
 14894  000AF0  26D9               	addwf	fsr2l,f,c
 14895  000AF2  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14896  000AF4  22DA               	addwfc	fsr2h,f,c
 14897  000AF6  CFDE F020          	movff	postinc2,validate@fs
 14898  000AFA  CFDD F021          	movff	postdec2,validate@fs+1
 14899  000AFE  C0AF  FFD9         	movff	f_lseek@fp,fsr2l
 14900  000B02  C0B0  FFDA         	movff	f_lseek@fp+1,fsr2h
 14901  000B06  CFDE F022          	movff	postinc2,validate@id
 14902  000B0A  CFDD F023          	movff	postdec2,validate@id+1
 14903  000B0E  EC70  F029         	call	_validate	;wreg free
 14904  000B12  0100               	movlb	0	; () banked
 14905  000B14  6FC5               	movwf	f_lseek@res& (0+255),b
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;tff.c: 1151: if (res != FR_OK) return res;
 14909  000B16  51C5               	movf	f_lseek@res& (0+255),w,b
 14910  000B18  A4D8               	btfss	status,2,c
 14911  000B1A  0012               	return	
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 14915  000B1C  EE20 F002          	lfsr	2,2
 14916  000B20  51AF               	movf	f_lseek@fp& (0+255),w,b
 14917  000B22  26D9               	addwf	fsr2l,f,c
 14918  000B24  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14919  000B26  22DA               	addwfc	fsr2h,f,c
 14920  000B28  BEDF               	btfsc	indf2,7,c
 14921  000B2A  0012               	return	
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 14925  000B2C  EE20 F00A          	lfsr	2,10
 14926  000B30  51AF               	movf	f_lseek@fp& (0+255),w,b
 14927  000B32  26D9               	addwf	fsr2l,f,c
 14928  000B34  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14929  000B36  22DA               	addwfc	fsr2h,f,c
 14930  000B38  51B1               	movf	f_lseek@ofs& (0+255),w,b
 14931  000B3A  5CDE               	subwf	postinc2,w,c
 14932  000B3C  51B2               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14933  000B3E  58DE               	subwfb	postinc2,w,c
 14934  000B40  51B3               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14935  000B42  58DE               	subwfb	postinc2,w,c
 14936  000B44  51B4               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14937  000B46  58DE               	subwfb	postinc2,w,c
 14938  000B48  B0D8               	btfsc	status,0,c
 14939  000B4A  D016               	goto	l1124
 14940                           
 14941                           ; BSR set to: 0
 14942  000B4C  EE20 F002          	lfsr	2,2
 14943  000B50  51AF               	movf	f_lseek@fp& (0+255),w,b
 14944  000B52  26D9               	addwf	fsr2l,f,c
 14945  000B54  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14946  000B56  22DA               	addwfc	fsr2h,f,c
 14947  000B58  B2DF               	btfsc	indf2,1,c
 14948  000B5A  D00E               	goto	l1124
 14949                           
 14950                           ; BSR set to: 0
 14951  000B5C  EE20 F00A          	lfsr	2,10
 14952  000B60  51AF               	movf	f_lseek@fp& (0+255),w,b
 14953  000B62  26D9               	addwf	fsr2l,f,c
 14954  000B64  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14955  000B66  22DA               	addwfc	fsr2h,f,c
 14956  000B68  CFDE F0B1          	movff	postinc2,f_lseek@ofs
 14957  000B6C  CFDE F0B2          	movff	postinc2,f_lseek@ofs+1
 14958  000B70  CFDE F0B3          	movff	postinc2,f_lseek@ofs+2
 14959  000B74  CFDE F0B4          	movff	postinc2,f_lseek@ofs+3
 14960  000B78                     l1124:
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;tff.c: 1159: ifptr = fp->fptr;
 14964  000B78  EE20 F006          	lfsr	2,6
 14965  000B7C  51AF               	movf	f_lseek@fp& (0+255),w,b
 14966  000B7E  26D9               	addwf	fsr2l,f,c
 14967  000B80  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14968  000B82  22DA               	addwfc	fsr2h,f,c
 14969  000B84  CFDE F0C6          	movff	postinc2,f_lseek@ifptr
 14970  000B88  CFDE F0C7          	movff	postinc2,f_lseek@ifptr+1
 14971  000B8C  CFDE F0C8          	movff	postinc2,f_lseek@ifptr+2
 14972  000B90  CFDE F0C9          	movff	postinc2,f_lseek@ifptr+3
 14973                           
 14974                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 14975  000B94  EE20 F006          	lfsr	2,6
 14976  000B98  51AF               	movf	f_lseek@fp& (0+255),w,b
 14977  000B9A  26D9               	addwf	fsr2l,f,c
 14978  000B9C  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14979  000B9E  22DA               	addwfc	fsr2h,f,c
 14980  000BA0  6ADE               	clrf	postinc2,c
 14981  000BA2  6ADE               	clrf	postinc2,c
 14982  000BA4  6ADE               	clrf	postinc2,c
 14983  000BA6  6ADD               	clrf	postdec2,c
 14984  000BA8  EE20 F003          	lfsr	2,3
 14985  000BAC  51AF               	movf	f_lseek@fp& (0+255),w,b
 14986  000BAE  26D9               	addwf	fsr2l,f,c
 14987  000BB0  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 14988  000BB2  22DA               	addwfc	fsr2h,f,c
 14989  000BB4  0EFF               	movlw	255
 14990  000BB6  6EDF               	movwf	indf2,c
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;tff.c: 1161: if (ofs > 0) {
 14994  000BB8  51B1               	movf	f_lseek@ofs& (0+255),w,b
 14995  000BBA  11B2               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 14996  000BBC  11B3               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 14997  000BBE  11B4               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 14998  000BC0  B4D8               	btfsc	status,2,c
 14999  000BC2  D19C               	goto	l12016
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 15003  000BC4  EE20 F004          	lfsr	2,4
 15004  000BC8  51AF               	movf	f_lseek@fp& (0+255),w,b
 15005  000BCA  26D9               	addwf	fsr2l,f,c
 15006  000BCC  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15007  000BCE  22DA               	addwfc	fsr2h,f,c
 15008  000BD0  EE10 F01D          	lfsr	1,29
 15009  000BD4  50DE               	movf	postinc2,w,c
 15010  000BD6  26E1               	addwf	fsr1l,f,c
 15011  000BD8  50DD               	movf	postdec2,w,c
 15012  000BDA  22E2               	addwfc	fsr1h,f,c
 15013  000BDC  50E7               	movf	indf1,w,c
 15014  000BDE  6FB5               	movwf	??_f_lseek& (0+255),b
 15015  000BE0  C0B5  F0B6         	movff	??_f_lseek,??_f_lseek+1
 15016  000BE4  6BB7               	clrf	(??_f_lseek+2)& (0+255),b
 15017  000BE6  6BB8               	clrf	(??_f_lseek+3)& (0+255),b
 15018  000BE8  6BB9               	clrf	(??_f_lseek+4)& (0+255),b
 15019  000BEA  0E09               	movlw	9
 15020  000BEC                     u14395:
 15021  000BEC  90D8               	bcf	status,0,c
 15022  000BEE  37B6               	rlcf	(??_f_lseek+1)& (0+255),f,b
 15023  000BF0  37B7               	rlcf	(??_f_lseek+2)& (0+255),f,b
 15024  000BF2  37B8               	rlcf	(??_f_lseek+3)& (0+255),f,b
 15025  000BF4  37B9               	rlcf	(??_f_lseek+4)& (0+255),f,b
 15026  000BF6  2EE8               	decfsz	wreg,f,c
 15027  000BF8  D7F9               	goto	u14395
 15028  000BFA  C0B6  F0CA         	movff	??_f_lseek+1,f_lseek@csize
 15029  000BFE  C0B7  F0CB         	movff	??_f_lseek+2,f_lseek@csize+1
 15030  000C02  C0B8  F0CC         	movff	??_f_lseek+3,f_lseek@csize+2
 15031  000C06  C0B9  F0CD         	movff	??_f_lseek+4,f_lseek@csize+3
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 15035  000C0A  51C6               	movf	f_lseek@ifptr& (0+255),w,b
 15036  000C0C  11C7               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 15037  000C0E  11C8               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 15038  000C10  11C9               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 15039  000C12  B4D8               	btfsc	status,2,c
 15040  000C14  D093               	goto	l11974
 15041                           
 15042                           ; BSR set to: 0
 15043  000C16  0EFF               	movlw	255
 15044  000C18  25B1               	addwf	f_lseek@ofs& (0+255),w,b
 15045  000C1A  6E1A               	movwf	___lldiv@dividend^0,c
 15046  000C1C  0EFF               	movlw	255
 15047  000C1E  21B2               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 15048  000C20  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 15049  000C22  0EFF               	movlw	255
 15050  000C24  21B3               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 15051  000C26  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 15052  000C28  0EFF               	movlw	255
 15053  000C2A  21B4               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 15054  000C2C  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 15055  000C2E  C0CA  F01E         	movff	f_lseek@csize,___lldiv@divisor
 15056  000C32  C0CB  F01F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 15057  000C36  C0CC  F020         	movff	f_lseek@csize+2,___lldiv@divisor+2
 15058  000C3A  C0CD  F021         	movff	f_lseek@csize+3,___lldiv@divisor+3
 15059  000C3E  ECE2  F024         	call	___lldiv	;wreg free
 15060  000C42  C01A  F0B5         	movff	?___lldiv,??_f_lseek
 15061  000C46  C01B  F0B6         	movff	?___lldiv+1,??_f_lseek+1
 15062  000C4A  C01C  F0B7         	movff	?___lldiv+2,??_f_lseek+2
 15063  000C4E  C01D  F0B8         	movff	?___lldiv+3,??_f_lseek+3
 15064  000C52  0EFF               	movlw	255
 15065  000C54  0100               	movlb	0	; () banked
 15066  000C56  25C6               	addwf	f_lseek@ifptr& (0+255),w,b
 15067  000C58  6E1A               	movwf	___lldiv@dividend^0,c
 15068  000C5A  0EFF               	movlw	255
 15069  000C5C  21C7               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 15070  000C5E  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 15071  000C60  0EFF               	movlw	255
 15072  000C62  21C8               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 15073  000C64  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 15074  000C66  0EFF               	movlw	255
 15075  000C68  21C9               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 15076  000C6A  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 15077  000C6C  C0CA  F01E         	movff	f_lseek@csize,___lldiv@divisor
 15078  000C70  C0CB  F01F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 15079  000C74  C0CC  F020         	movff	f_lseek@csize+2,___lldiv@divisor+2
 15080  000C78  C0CD  F021         	movff	f_lseek@csize+3,___lldiv@divisor+3
 15081  000C7C  ECE2  F024         	call	___lldiv	;wreg free
 15082  000C80  501A               	movf	?___lldiv^0,w,c
 15083  000C82  0100               	movlb	0	; () banked
 15084  000C84  5DB5               	subwf	??_f_lseek& (0+255),w,b
 15085  000C86  501B               	movf	(?___lldiv+1)^0,w,c
 15086  000C88  59B6               	subwfb	(??_f_lseek+1)& (0+255),w,b
 15087  000C8A  501C               	movf	(?___lldiv+2)^0,w,c
 15088  000C8C  59B7               	subwfb	(??_f_lseek+2)& (0+255),w,b
 15089  000C8E  501D               	movf	(?___lldiv+3)^0,w,c
 15090  000C90  59B8               	subwfb	(??_f_lseek+3)& (0+255),w,b
 15091  000C92  A0D8               	btfss	status,0,c
 15092  000C94  D053               	goto	l11974
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 15096  000C96  0EFF               	movlw	255
 15097  000C98  25CA               	addwf	f_lseek@csize& (0+255),w,b
 15098  000C9A  6FB5               	movwf	??_f_lseek& (0+255),b
 15099  000C9C  0EFF               	movlw	255
 15100  000C9E  21CB               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 15101  000CA0  6FB6               	movwf	(??_f_lseek+1)& (0+255),b
 15102  000CA2  0EFF               	movlw	255
 15103  000CA4  21CC               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 15104  000CA6  6FB7               	movwf	(??_f_lseek+2)& (0+255),b
 15105  000CA8  0EFF               	movlw	255
 15106  000CAA  21CD               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 15107  000CAC  6FB8               	movwf	(??_f_lseek+3)& (0+255),b
 15108  000CAE  1DB5               	comf	??_f_lseek& (0+255),w,b
 15109  000CB0  6FB9               	movwf	(??_f_lseek+4)& (0+255),b
 15110  000CB2  1DB6               	comf	(??_f_lseek+1)& (0+255),w,b
 15111  000CB4  6FBA               	movwf	(??_f_lseek+5)& (0+255),b
 15112  000CB6  1DB7               	comf	(??_f_lseek+2)& (0+255),w,b
 15113  000CB8  6FBB               	movwf	(??_f_lseek+6)& (0+255),b
 15114  000CBA  1DB8               	comf	(??_f_lseek+3)& (0+255),w,b
 15115  000CBC  6FBC               	movwf	(??_f_lseek+7)& (0+255),b
 15116  000CBE  0EFF               	movlw	255
 15117  000CC0  25C6               	addwf	f_lseek@ifptr& (0+255),w,b
 15118  000CC2  6FBD               	movwf	(??_f_lseek+8)& (0+255),b
 15119  000CC4  0EFF               	movlw	255
 15120  000CC6  21C7               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 15121  000CC8  6FBE               	movwf	(??_f_lseek+9)& (0+255),b
 15122  000CCA  0EFF               	movlw	255
 15123  000CCC  21C8               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 15124  000CCE  6FBF               	movwf	(??_f_lseek+10)& (0+255),b
 15125  000CD0  0EFF               	movlw	255
 15126  000CD2  21C9               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 15127  000CD4  6FC0               	movwf	(??_f_lseek+11)& (0+255),b
 15128  000CD6  51B9               	movf	(??_f_lseek+4)& (0+255),w,b
 15129  000CD8  15BD               	andwf	(??_f_lseek+8)& (0+255),w,b
 15130  000CDA  6FC1               	movwf	(??_f_lseek+12)& (0+255),b
 15131  000CDC  51BA               	movf	(??_f_lseek+5)& (0+255),w,b
 15132  000CDE  15BE               	andwf	(??_f_lseek+9)& (0+255),w,b
 15133  000CE0  6FC2               	movwf	(??_f_lseek+13)& (0+255),b
 15134  000CE2  51BB               	movf	(??_f_lseek+6)& (0+255),w,b
 15135  000CE4  15BF               	andwf	(??_f_lseek+10)& (0+255),w,b
 15136  000CE6  6FC3               	movwf	(??_f_lseek+14)& (0+255),b
 15137  000CE8  51BC               	movf	(??_f_lseek+7)& (0+255),w,b
 15138  000CEA  15C0               	andwf	(??_f_lseek+11)& (0+255),w,b
 15139  000CEC  6FC4               	movwf	(??_f_lseek+15)& (0+255),b
 15140  000CEE  EE20 F006          	lfsr	2,6
 15141  000CF2  51AF               	movf	f_lseek@fp& (0+255),w,b
 15142  000CF4  26D9               	addwf	fsr2l,f,c
 15143  000CF6  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15144  000CF8  22DA               	addwfc	fsr2h,f,c
 15145  000CFA  C0C1  FFDE         	movff	??_f_lseek+12,postinc2
 15146  000CFE  C0C2  FFDE         	movff	??_f_lseek+13,postinc2
 15147  000D02  C0C3  FFDE         	movff	??_f_lseek+14,postinc2
 15148  000D06  C0C4  FFDE         	movff	??_f_lseek+15,postinc2
 15149                           
 15150                           ;tff.c: 1166: ofs -= fp->fptr;
 15151  000D0A  EE20 F006          	lfsr	2,6
 15152  000D0E  51AF               	movf	f_lseek@fp& (0+255),w,b
 15153  000D10  26D9               	addwf	fsr2l,f,c
 15154  000D12  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15155  000D14  22DA               	addwfc	fsr2h,f,c
 15156  000D16  50DE               	movf	postinc2,w,c
 15157  000D18  5FB1               	subwf	f_lseek@ofs& (0+255),f,b
 15158  000D1A  50DE               	movf	postinc2,w,c
 15159  000D1C  5BB2               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 15160  000D1E  50DE               	movf	postinc2,w,c
 15161  000D20  5BB3               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 15162  000D22  50DD               	movf	postdec2,w,c
 15163  000D24  5BB4               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 15164                           
 15165                           ;tff.c: 1167: clust = fp->curr_clust;
 15166  000D26  EE20 F010          	lfsr	2,16
 15167  000D2A  51AF               	movf	f_lseek@fp& (0+255),w,b
 15168  000D2C  26D9               	addwf	fsr2l,f,c
 15169  000D2E  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15170  000D30  22DA               	addwfc	fsr2h,f,c
 15171  000D32  CFDE F0CE          	movff	postinc2,f_lseek@clust
 15172  000D36  CFDD F0CF          	movff	postdec2,f_lseek@clust+1
 15173                           
 15174                           ;tff.c: 1168: } else {
 15175  000D3A  D030               	goto	l11986
 15176  000D3C                     l11974:
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;tff.c: 1169: clust = fp->org_clust;
 15180  000D3C  EE20 F00E          	lfsr	2,14
 15181  000D40  51AF               	movf	f_lseek@fp& (0+255),w,b
 15182  000D42  26D9               	addwf	fsr2l,f,c
 15183  000D44  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15184  000D46  22DA               	addwfc	fsr2h,f,c
 15185  000D48  CFDE F0CE          	movff	postinc2,f_lseek@clust
 15186  000D4C  CFDD F0CF          	movff	postdec2,f_lseek@clust+1
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;tff.c: 1171: if (clust == 0) {
 15190  000D50  51CE               	movf	f_lseek@clust& (0+255),w,b
 15191  000D52  11CF               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15192  000D54  A4D8               	btfss	status,2,c
 15193  000D56  D018               	goto	l1128
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;tff.c: 1172: clust = create_chain(0);
 15197  000D58  0E00               	movlw	0
 15198  000D5A  6FA2               	movwf	(create_chain@clust+1)& (0+255),b
 15199  000D5C  0E00               	movlw	0
 15200  000D5E  6FA1               	movwf	create_chain@clust& (0+255),b
 15201  000D60  EC75  F018         	call	_create_chain	;wreg free
 15202  000D64  C0A1  F0CE         	movff	?_create_chain,f_lseek@clust
 15203  000D68  C0A2  F0CF         	movff	?_create_chain+1,f_lseek@clust+1
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 15207  000D6C  05CE               	decf	f_lseek@clust& (0+255),w,b
 15208  000D6E  11CF               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15209  000D70  B4D8               	btfsc	status,2,c
 15210  000D72  D0F7               	goto	l12024
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;tff.c: 1174: fp->org_clust = clust;
 15214  000D74  EE20 F00E          	lfsr	2,14
 15215  000D78  51AF               	movf	f_lseek@fp& (0+255),w,b
 15216  000D7A  26D9               	addwf	fsr2l,f,c
 15217  000D7C  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15218  000D7E  22DA               	addwfc	fsr2h,f,c
 15219  000D80  C0CE  FFDE         	movff	f_lseek@clust,postinc2
 15220  000D84  C0CF  FFDD         	movff	f_lseek@clust+1,postdec2
 15221  000D88                     l1128:
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 15225  000D88  EE20 F010          	lfsr	2,16
 15226  000D8C  51AF               	movf	f_lseek@fp& (0+255),w,b
 15227  000D8E  26D9               	addwf	fsr2l,f,c
 15228  000D90  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15229  000D92  22DA               	addwfc	fsr2h,f,c
 15230  000D94  C0CE  FFDE         	movff	f_lseek@clust,postinc2
 15231  000D98  C0CF  FFDD         	movff	f_lseek@clust+1,postdec2
 15232  000D9C                     l11986:
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 15236  000D9C  51CE               	movf	f_lseek@clust& (0+255),w,b
 15237  000D9E  11CF               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15238  000DA0  A4D8               	btfss	status,2,c
 15239  000DA2  D062               	goto	l12008
 15240  000DA4  D0AB               	goto	l12016
 15241  000DA6                     l11990:
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;tff.c: 1182: if (fp->flag & 0x02) {
 15245  000DA6  EE20 F002          	lfsr	2,2
 15246  000DAA  51AF               	movf	f_lseek@fp& (0+255),w,b
 15247  000DAC  26D9               	addwf	fsr2l,f,c
 15248  000DAE  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15249  000DB0  22DA               	addwfc	fsr2h,f,c
 15250  000DB2  A2DF               	btfss	indf2,1,c
 15251  000DB4  D017               	goto	l11998
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;tff.c: 1183: clust = create_chain(clust);
 15255  000DB6  C0CE  F0A1         	movff	f_lseek@clust,create_chain@clust
 15256  000DBA  C0CF  F0A2         	movff	f_lseek@clust+1,create_chain@clust+1
 15257  000DBE  EC75  F018         	call	_create_chain	;wreg free
 15258  000DC2  C0A1  F0CE         	movff	?_create_chain,f_lseek@clust
 15259  000DC6  C0A2  F0CF         	movff	?_create_chain+1,f_lseek@clust+1
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;tff.c: 1184: if (clust == 0) {
 15263  000DCA  51CE               	movf	f_lseek@clust& (0+255),w,b
 15264  000DCC  11CF               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15265  000DCE  A4D8               	btfss	status,2,c
 15266  000DD0  D013               	goto	l12000
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;tff.c: 1185: ofs = csize; break;
 15270  000DD2  C0CA  F0B1         	movff	f_lseek@csize,f_lseek@ofs
 15271  000DD6  C0CB  F0B2         	movff	f_lseek@csize+1,f_lseek@ofs+1
 15272  000DDA  C0CC  F0B3         	movff	f_lseek@csize+2,f_lseek@ofs+2
 15273  000DDE  C0CD  F0B4         	movff	f_lseek@csize+3,f_lseek@ofs+3
 15274  000DE2  D04C               	goto	u14490
 15275  000DE4                     l11998:
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;tff.c: 1189: clust = get_cluster(clust);
 15279  000DE4  C0CE  F089         	movff	f_lseek@clust,get_cluster@clust
 15280  000DE8  C0CF  F08A         	movff	f_lseek@clust+1,get_cluster@clust+1
 15281  000DEC  ECB4  F015         	call	_get_cluster	;wreg free
 15282  000DF0  C089  F0CE         	movff	?_get_cluster,f_lseek@clust
 15283  000DF4  C08A  F0CF         	movff	?_get_cluster+1,f_lseek@clust+1
 15284  000DF8                     l12000:
 15285                           
 15286                           ; BSR set to: 0
 15287                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 15288  000DF8  51CF               	movf	(f_lseek@clust+1)& (0+255),w,b
 15289  000DFA  E104               	bnz	u14470
 15290  000DFC  0E02               	movlw	2
 15291  000DFE  5DCE               	subwf	f_lseek@clust& (0+255),w,b
 15292  000E00  A0D8               	btfss	status,0,c
 15293  000E02  D0AF               	goto	l12024
 15294  000E04                     u14470:
 15295                           
 15296                           ; BSR set to: 0
 15297  000E04  EE20 F004          	lfsr	2,4
 15298  000E08  51AF               	movf	f_lseek@fp& (0+255),w,b
 15299  000E0A  26D9               	addwf	fsr2l,f,c
 15300  000E0C  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15301  000E0E  22DA               	addwfc	fsr2h,f,c
 15302  000E10  EE10 F016          	lfsr	1,22
 15303  000E14  50DE               	movf	postinc2,w,c
 15304  000E16  26E1               	addwf	fsr1l,f,c
 15305  000E18  50DD               	movf	postdec2,w,c
 15306  000E1A  22E2               	addwfc	fsr1h,f,c
 15307  000E1C  50E6               	movf	postinc1,w,c
 15308  000E1E  5DCE               	subwf	f_lseek@clust& (0+255),w,b
 15309  000E20  50E6               	movf	postinc1,w,c
 15310  000E22  59CF               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 15311  000E24  B0D8               	btfsc	status,0,c
 15312  000E26  D09D               	goto	l12024
 15313                           
 15314                           ; BSR set to: 0
 15315                           ;tff.c: 1191: fp->curr_clust = clust;
 15316  000E28  EE20 F010          	lfsr	2,16
 15317  000E2C  51AF               	movf	f_lseek@fp& (0+255),w,b
 15318  000E2E  26D9               	addwf	fsr2l,f,c
 15319  000E30  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15320  000E32  22DA               	addwfc	fsr2h,f,c
 15321  000E34  C0CE  FFDE         	movff	f_lseek@clust,postinc2
 15322  000E38  C0CF  FFDD         	movff	f_lseek@clust+1,postdec2
 15323                           
 15324                           ;tff.c: 1192: fp->fptr += csize;
 15325  000E3C  EE20 F006          	lfsr	2,6
 15326  000E40  51AF               	movf	f_lseek@fp& (0+255),w,b
 15327  000E42  26D9               	addwf	fsr2l,f,c
 15328  000E44  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15329  000E46  22DA               	addwfc	fsr2h,f,c
 15330  000E48  51CA               	movf	f_lseek@csize& (0+255),w,b
 15331  000E4A  26DE               	addwf	postinc2,f,c
 15332  000E4C  51CB               	movf	(f_lseek@csize+1)& (0+255),w,b
 15333  000E4E  22DE               	addwfc	postinc2,f,c
 15334  000E50  51CC               	movf	(f_lseek@csize+2)& (0+255),w,b
 15335  000E52  22DE               	addwfc	postinc2,f,c
 15336  000E54  51CD               	movf	(f_lseek@csize+3)& (0+255),w,b
 15337  000E56  22DE               	addwfc	postinc2,f,c
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;tff.c: 1193: ofs -= csize;
 15341  000E58  51CA               	movf	f_lseek@csize& (0+255),w,b
 15342  000E5A  5FB1               	subwf	f_lseek@ofs& (0+255),f,b
 15343  000E5C  51CB               	movf	(f_lseek@csize+1)& (0+255),w,b
 15344  000E5E  5BB2               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 15345  000E60  51CC               	movf	(f_lseek@csize+2)& (0+255),w,b
 15346  000E62  5BB3               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 15347  000E64  51CD               	movf	(f_lseek@csize+3)& (0+255),w,b
 15348  000E66  5BB4               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 15349  000E68                     l12008:
 15350                           
 15351                           ; BSR set to: 0
 15352  000E68  51B1               	movf	f_lseek@ofs& (0+255),w,b
 15353  000E6A  5DCA               	subwf	f_lseek@csize& (0+255),w,b
 15354  000E6C  51B2               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15355  000E6E  59CB               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 15356  000E70  51B3               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15357  000E72  59CC               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 15358  000E74  51B4               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15359  000E76  59CD               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 15360  000E78  A0D8               	btfss	status,0,c
 15361  000E7A  D795               	goto	l11990
 15362  000E7C                     u14490:
 15363                           
 15364                           ; BSR set to: 0
 15365                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 15366  000E7C  EE20 F006          	lfsr	2,6
 15367  000E80  51AF               	movf	f_lseek@fp& (0+255),w,b
 15368  000E82  26D9               	addwf	fsr2l,f,c
 15369  000E84  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15370  000E86  22DA               	addwfc	fsr2h,f,c
 15371  000E88  51B1               	movf	f_lseek@ofs& (0+255),w,b
 15372  000E8A  26DE               	addwf	postinc2,f,c
 15373  000E8C  51B2               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15374  000E8E  22DE               	addwfc	postinc2,f,c
 15375  000E90  51B3               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15376  000E92  22DE               	addwfc	postinc2,f,c
 15377  000E94  51B4               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15378  000E96  22DE               	addwfc	postinc2,f,c
 15379                           
 15380                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 15381  000E98  EE20 F003          	lfsr	2,3
 15382  000E9C  51AF               	movf	f_lseek@fp& (0+255),w,b
 15383  000E9E  26D9               	addwf	fsr2l,f,c
 15384  000EA0  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15385  000EA2  22DA               	addwfc	fsr2h,f,c
 15386  000EA4  C0B1  F0B5         	movff	f_lseek@ofs,??_f_lseek
 15387  000EA8  C0B2  F0B6         	movff	f_lseek@ofs+1,??_f_lseek+1
 15388  000EAC  C0B3  F0B7         	movff	f_lseek@ofs+2,??_f_lseek+2
 15389  000EB0  C0B4  F0B8         	movff	f_lseek@ofs+3,??_f_lseek+3
 15390  000EB4  0E0A               	movlw	10
 15391  000EB6  D005               	goto	u14500
 15392  000EB8                     u14505:
 15393  000EB8  90D8               	bcf	status,0,c
 15394  000EBA  33B8               	rrcf	(??_f_lseek+3)& (0+255),f,b
 15395  000EBC  33B7               	rrcf	(??_f_lseek+2)& (0+255),f,b
 15396  000EBE  33B6               	rrcf	(??_f_lseek+1)& (0+255),f,b
 15397  000EC0  33B5               	rrcf	??_f_lseek& (0+255),f,b
 15398  000EC2                     u14500:
 15399  000EC2  2EE8               	decfsz	wreg,f,c
 15400  000EC4  D7F9               	goto	u14505
 15401  000EC6  51B5               	movf	??_f_lseek& (0+255),w,b
 15402  000EC8  6EDF               	movwf	indf2,c
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 15406  000ECA  0EFF               	movlw	255
 15407  000ECC  15B1               	andwf	f_lseek@ofs& (0+255),w,b
 15408  000ECE  6FB5               	movwf	??_f_lseek& (0+255),b
 15409  000ED0  0E01               	movlw	1
 15410  000ED2  15B2               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 15411  000ED4  6FB6               	movwf	(??_f_lseek+1)& (0+255),b
 15412  000ED6  0E00               	movlw	0
 15413  000ED8  15B3               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 15414  000EDA  6FB7               	movwf	(??_f_lseek+2)& (0+255),b
 15415  000EDC  0E00               	movlw	0
 15416  000EDE  15B4               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 15417  000EE0  6FB8               	movwf	(??_f_lseek+3)& (0+255),b
 15418  000EE2  51B5               	movf	??_f_lseek& (0+255),w,b
 15419  000EE4  11B6               	iorwf	(??_f_lseek+1)& (0+255),w,b
 15420  000EE6  11B7               	iorwf	(??_f_lseek+2)& (0+255),w,b
 15421  000EE8  11B8               	iorwf	(??_f_lseek+3)& (0+255),w,b
 15422  000EEA  B4D8               	btfsc	status,2,c
 15423  000EEC  D007               	goto	l12016
 15424                           
 15425                           ; BSR set to: 0
 15426  000EEE  EE20 F003          	lfsr	2,3
 15427  000EF2  51AF               	movf	f_lseek@fp& (0+255),w,b
 15428  000EF4  26D9               	addwf	fsr2l,f,c
 15429  000EF6  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15430  000EF8  22DA               	addwfc	fsr2h,f,c
 15431  000EFA  2ADF               	incf	indf2,f,c
 15432  000EFC                     l12016:
 15433                           
 15434                           ; BSR set to: 0
 15435                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 15436  000EFC  EE20 F006          	lfsr	2,6
 15437  000F00  51AF               	movf	f_lseek@fp& (0+255),w,b
 15438  000F02  26D9               	addwf	fsr2l,f,c
 15439  000F04  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15440  000F06  22DA               	addwfc	fsr2h,f,c
 15441  000F08  EE10 F00A          	lfsr	1,10
 15442  000F0C  51AF               	movf	f_lseek@fp& (0+255),w,b
 15443  000F0E  26E1               	addwf	fsr1l,f,c
 15444  000F10  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15445  000F12  22E2               	addwfc	fsr1h,f,c
 15446  000F14  50DE               	movf	postinc2,w,c
 15447  000F16  5CE6               	subwf	postinc1,w,c
 15448  000F18  50DE               	movf	postinc2,w,c
 15449  000F1A  58E6               	subwfb	postinc1,w,c
 15450  000F1C  50DE               	movf	postinc2,w,c
 15451  000F1E  58E6               	subwfb	postinc1,w,c
 15452  000F20  50DE               	movf	postinc2,w,c
 15453  000F22  58E6               	subwfb	postinc1,w,c
 15454  000F24  B0D8               	btfsc	status,0,c
 15455  000F26  0012               	return	
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;tff.c: 1203: fp->fsize = fp->fptr;
 15459  000F28  EE20 F006          	lfsr	2,6
 15460  000F2C  51AF               	movf	f_lseek@fp& (0+255),w,b
 15461  000F2E  26D9               	addwf	fsr2l,f,c
 15462  000F30  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15463  000F32  22DA               	addwfc	fsr2h,f,c
 15464  000F34  EE10 F00A          	lfsr	1,10
 15465  000F38  51AF               	movf	f_lseek@fp& (0+255),w,b
 15466  000F3A  26E1               	addwf	fsr1l,f,c
 15467  000F3C  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15468  000F3E  22E2               	addwfc	fsr1h,f,c
 15469  000F40  CFDE FFE6          	movff	postinc2,postinc1
 15470  000F44  CFDE FFE6          	movff	postinc2,postinc1
 15471  000F48  CFDE FFE6          	movff	postinc2,postinc1
 15472  000F4C  CFDE FFE6          	movff	postinc2,postinc1
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;tff.c: 1204: fp->flag |= 0x20;
 15476  000F50  EE20 F002          	lfsr	2,2
 15477  000F54  51AF               	movf	f_lseek@fp& (0+255),w,b
 15478  000F56  26D9               	addwf	fsr2l,f,c
 15479  000F58  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15480  000F5A  22DA               	addwfc	fsr2h,f,c
 15481  000F5C  0E00               	movlw	0
 15482  000F5E  8ADB               	bsf	plusw2,5,c
 15483  000F60  0012               	return	
 15484  000F62                     l12024:
 15485                           
 15486                           ; BSR set to: 0
 15487                           ;tff.c: 1211: fp->flag |= 0x80;
 15488  000F62  EE20 F002          	lfsr	2,2
 15489  000F66  51AF               	movf	f_lseek@fp& (0+255),w,b
 15490  000F68  26D9               	addwf	fsr2l,f,c
 15491  000F6A  51B0               	movf	(f_lseek@fp+1)& (0+255),w,b
 15492  000F6C  22DA               	addwfc	fsr2h,f,c
 15493  000F6E  0E00               	movlw	0
 15494  000F70  8EDB               	bsf	plusw2,7,c
 15495                           
 15496                           ; BSR set to: 0
 15497  000F72  0012               	return		;funcret
 15498  000F74                     __end_of_f_lseek:
 15499                           	callstack 0
 15500                           
 15501 ;; *************** function _create_chain *****************
 15502 ;; Defined at:
 15503 ;;		line 283 in file "bibliotecas/tff.c"
 15504 ;; Parameters:    Size  Location     Type
 15505 ;;  clust           2   65[BANK0 ] unsigned short 
 15506 ;; Auto vars:     Size  Location     Type
 15507 ;;  ncl             2   77[BANK0 ] unsigned short 
 15508 ;;  scl             2   75[BANK0 ] unsigned short 
 15509 ;;  cstat           2   73[BANK0 ] unsigned short 
 15510 ;;  fs              2   71[BANK0 ] PTR struct _FATFS
 15511 ;;		 -> NULL(0), fs(544), 
 15512 ;;  mcl             2   69[BANK0 ] unsigned short 
 15513 ;; Return value:  Size  Location     Type
 15514 ;;                  2   65[BANK0 ] unsigned short 
 15515 ;; Registers used:
 15516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15517 ;; Tracked objects:
 15518 ;;		On entry : 3F/0
 15519 ;;		On exit  : 3F/0
 15520 ;;		Unchanged: 0/0
 15521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15522 ;;      Params:         0       2       0       0       0       0       0       0       0
 15523 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15524 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15525 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15526 ;;Total ram usage:       14 bytes
 15527 ;; Hardware stack levels used:    1
 15528 ;; Hardware stack levels required when called:   10
 15529 ;; This function calls:
 15530 ;;		_get_cluster
 15531 ;;		_put_cluster
 15532 ;; This function is called by:
 15533 ;;		_reserve_direntry
 15534 ;;		_f_write
 15535 ;;		_f_lseek
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           	psect	text77
 15540  0030EA                     __ptext77:
 15541                           	callstack 0
 15542  0030EA                     _create_chain:
 15543                           	callstack 12
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 15547                           
 15548                           ; BSR set to: 0
 15549                           ;incstack = 0
 15550  0030EA  C036  F0A7         	movff	_FatFs,create_chain@fs
 15551  0030EE  C037  F0A8         	movff	_FatFs+1,create_chain@fs+1
 15552                           
 15553                           ; BSR set to: 0
 15554                           ;tff.c: 291: mcl = fs->max_clust;
 15555  0030F2  EE20 F016          	lfsr	2,22
 15556  0030F6  51A7               	movf	create_chain@fs& (0+255),w,b
 15557  0030F8  26D9               	addwf	fsr2l,f,c
 15558  0030FA  51A8               	movf	(create_chain@fs+1)& (0+255),w,b
 15559  0030FC  22DA               	addwfc	fsr2h,f,c
 15560  0030FE  CFDE F0A5          	movff	postinc2,create_chain@mcl
 15561  003102  CFDD F0A6          	movff	postdec2,create_chain@mcl+1
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;tff.c: 292: if (clust == 0) {
 15565  003106  51A1               	movf	create_chain@clust& (0+255),w,b
 15566  003108  11A2               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15567  00310A  A4D8               	btfss	status,2,c
 15568  00310C  D01B               	goto	l10490
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;tff.c: 293: scl = fs->last_clust;
 15572  00310E  EE20 F018          	lfsr	2,24
 15573  003112  51A7               	movf	create_chain@fs& (0+255),w,b
 15574  003114  26D9               	addwf	fsr2l,f,c
 15575  003116  51A8               	movf	(create_chain@fs+1)& (0+255),w,b
 15576  003118  22DA               	addwfc	fsr2h,f,c
 15577  00311A  CFDE F0AB          	movff	postinc2,create_chain@scl
 15578  00311E  CFDD F0AC          	movff	postdec2,create_chain@scl+1
 15579                           
 15580                           ; BSR set to: 0
 15581                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 15582  003122  51AC               	movf	(create_chain@scl+1)& (0+255),w,b
 15583  003124  E104               	bnz	u12020
 15584  003126  0E02               	movlw	2
 15585  003128  5DAB               	subwf	create_chain@scl& (0+255),w,b
 15586  00312A  A0D8               	btfss	status,0,c
 15587  00312C  D006               	goto	u12030
 15588  00312E                     u12020:
 15589                           
 15590                           ; BSR set to: 0
 15591  00312E  51A5               	movf	create_chain@mcl& (0+255),w,b
 15592  003130  5DAB               	subwf	create_chain@scl& (0+255),w,b
 15593  003132  51A6               	movf	(create_chain@mcl+1)& (0+255),w,b
 15594  003134  59AC               	subwfb	(create_chain@scl+1)& (0+255),w,b
 15595  003136  A0D8               	btfss	status,0,c
 15596  003138  D029               	goto	l849
 15597  00313A                     u12030:
 15598                           
 15599                           ; BSR set to: 0
 15600  00313A  0E00               	movlw	0
 15601  00313C  6FAC               	movwf	(create_chain@scl+1)& (0+255),b
 15602  00313E  0E01               	movlw	1
 15603  003140  6FAB               	movwf	create_chain@scl& (0+255),b
 15604  003142  D024               	goto	l849
 15605  003144                     l10490:
 15606                           
 15607                           ; BSR set to: 0
 15608                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 15609  003144  C0A1  F089         	movff	create_chain@clust,get_cluster@clust
 15610  003148  C0A2  F08A         	movff	create_chain@clust+1,get_cluster@clust+1
 15611  00314C  ECB4  F015         	call	_get_cluster	;wreg free
 15612  003150  C089  F0A9         	movff	?_get_cluster,create_chain@cstat
 15613  003154  C08A  F0AA         	movff	?_get_cluster+1,create_chain@cstat+1
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;tff.c: 298: if (cstat < 2) return 1;
 15617  003158  51AA               	movf	(create_chain@cstat+1)& (0+255),w,b
 15618  00315A  E109               	bnz	l10498
 15619  00315C  0E02               	movlw	2
 15620  00315E  5DA9               	subwf	create_chain@cstat& (0+255),w,b
 15621  003160  B0D8               	btfsc	status,0,c
 15622  003162  D005               	goto	l10498
 15623  003164                     u12040:
 15624                           
 15625                           ; BSR set to: 0
 15626  003164  0E00               	movlw	0
 15627  003166  6FA2               	movwf	(?_create_chain+1)& (0+255),b
 15628  003168  0E01               	movlw	1
 15629  00316A  6FA1               	movwf	?_create_chain& (0+255),b
 15630  00316C  0012               	return	
 15631  00316E                     l10498:
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;tff.c: 299: if (cstat < mcl) return cstat;
 15635  00316E  51A5               	movf	create_chain@mcl& (0+255),w,b
 15636  003170  5DA9               	subwf	create_chain@cstat& (0+255),w,b
 15637  003172  51A6               	movf	(create_chain@mcl+1)& (0+255),w,b
 15638  003174  59AA               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 15639  003176  B0D8               	btfsc	status,0,c
 15640  003178  D005               	goto	l852
 15641                           
 15642                           ; BSR set to: 0
 15643  00317A  C0A9  F0A1         	movff	create_chain@cstat,?_create_chain
 15644  00317E  C0AA  F0A2         	movff	create_chain@cstat+1,?_create_chain+1
 15645  003182  0012               	return	
 15646  003184                     l852:
 15647                           
 15648                           ; BSR set to: 0
 15649                           ;tff.c: 300: scl = clust;
 15650  003184  C0A1  F0AB         	movff	create_chain@clust,create_chain@scl
 15651  003188  C0A2  F0AC         	movff	create_chain@clust+1,create_chain@scl+1
 15652  00318C                     l849:
 15653                           
 15654                           ; BSR set to: 0
 15655                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 15656  00318C  C0AB  F0AD         	movff	create_chain@scl,create_chain@ncl
 15657  003190  C0AC  F0AE         	movff	create_chain@scl+1,create_chain@ncl+1
 15658  003194                     l10502:
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;tff.c: 305: ncl++;
 15662  003194  4BAD               	infsnz	create_chain@ncl& (0+255),f,b
 15663  003196  2BAE               	incf	(create_chain@ncl+1)& (0+255),f,b
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;tff.c: 306: if (ncl >= mcl) {
 15667  003198  51A5               	movf	create_chain@mcl& (0+255),w,b
 15668  00319A  5DAD               	subwf	create_chain@ncl& (0+255),w,b
 15669  00319C  51A6               	movf	(create_chain@mcl+1)& (0+255),w,b
 15670  00319E  59AE               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 15671  0031A0  A0D8               	btfss	status,0,c
 15672  0031A2  D00F               	goto	l10514
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;tff.c: 307: ncl = 2;
 15676  0031A4  0E00               	movlw	0
 15677  0031A6  6FAE               	movwf	(create_chain@ncl+1)& (0+255),b
 15678  0031A8  0E02               	movlw	2
 15679  0031AA  6FAD               	movwf	create_chain@ncl& (0+255),b
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;tff.c: 308: if (ncl > scl) return 0;
 15683  0031AC  51AC               	movf	(create_chain@scl+1)& (0+255),w,b
 15684  0031AE  E109               	bnz	l10514
 15685  0031B0  0E02               	movlw	2
 15686  0031B2  5DAB               	subwf	create_chain@scl& (0+255),w,b
 15687  0031B4  B0D8               	btfsc	status,0,c
 15688  0031B6  D005               	goto	l10514
 15689  0031B8                     u12070:
 15690                           
 15691                           ; BSR set to: 0
 15692  0031B8  0E00               	movlw	0
 15693  0031BA  6FA2               	movwf	(?_create_chain+1)& (0+255),b
 15694  0031BC  0E00               	movlw	0
 15695  0031BE  6FA1               	movwf	?_create_chain& (0+255),b
 15696  0031C0  0012               	return	
 15697  0031C2                     l10514:
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 15701  0031C2  C0AD  F089         	movff	create_chain@ncl,get_cluster@clust
 15702  0031C6  C0AE  F08A         	movff	create_chain@ncl+1,get_cluster@clust+1
 15703  0031CA  ECB4  F015         	call	_get_cluster	;wreg free
 15704  0031CE  C089  F0A9         	movff	?_get_cluster,create_chain@cstat
 15705  0031D2  C08A  F0AA         	movff	?_get_cluster+1,create_chain@cstat+1
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;tff.c: 311: if (cstat == 0) break;
 15709  0031D6  51A9               	movf	create_chain@cstat& (0+255),w,b
 15710  0031D8  11AA               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15711  0031DA  B4D8               	btfsc	status,2,c
 15712  0031DC  D00C               	goto	l10532
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;tff.c: 312: if (cstat == 1) return 1;
 15716  0031DE  05A9               	decf	create_chain@cstat& (0+255),w,b
 15717  0031E0  11AA               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15718  0031E2  B4D8               	btfsc	status,2,c
 15719  0031E4  D7BF               	goto	u12040
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;tff.c: 313: if (ncl == scl) return 0;
 15723  0031E6  51AB               	movf	create_chain@scl& (0+255),w,b
 15724  0031E8  19AD               	xorwf	create_chain@ncl& (0+255),w,b
 15725  0031EA  E1D4               	bnz	l10502
 15726  0031EC  51AC               	movf	(create_chain@scl+1)& (0+255),w,b
 15727  0031EE  19AE               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 15728  0031F0  B4D8               	btfsc	status,2,c
 15729  0031F2  D7E2               	goto	u12070
 15730  0031F4  D7CF               	goto	l10502
 15731  0031F6                     l10532:
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 15735  0031F6  C0AD  F089         	movff	create_chain@ncl,put_cluster@clust
 15736  0031FA  C0AE  F08A         	movff	create_chain@ncl+1,put_cluster@clust+1
 15737  0031FE  0EFF               	movlw	255
 15738  003200  6F8C               	movwf	(put_cluster@val+1)& (0+255),b
 15739  003202  698B               	setf	put_cluster@val& (0+255),b
 15740  003204  EC58  F013         	call	_put_cluster	;wreg free
 15741  003208  0900               	iorlw	0
 15742  00320A  B4D8               	btfsc	status,2,c
 15743  00320C  D7AB               	goto	u12040
 15744                           
 15745                           ; BSR set to: 0
 15746                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 15747  00320E  51A1               	movf	create_chain@clust& (0+255),w,b
 15748  003210  11A2               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15749  003212  B4D8               	btfsc	status,2,c
 15750  003214  D00D               	goto	l10546
 15751                           
 15752                           ; BSR set to: 0
 15753  003216  C0A1  F089         	movff	create_chain@clust,put_cluster@clust
 15754  00321A  C0A2  F08A         	movff	create_chain@clust+1,put_cluster@clust+1
 15755  00321E  C0AD  F08B         	movff	create_chain@ncl,put_cluster@val
 15756  003222  C0AE  F08C         	movff	create_chain@ncl+1,put_cluster@val+1
 15757  003226  EC58  F013         	call	_put_cluster	;wreg free
 15758  00322A  0900               	iorlw	0
 15759  00322C  B4D8               	btfsc	status,2,c
 15760  00322E  D79A               	goto	u12040
 15761  003230                     l10546:
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;tff.c: 319: fs->last_clust = ncl;
 15765  003230  EE20 F018          	lfsr	2,24
 15766  003234  51A7               	movf	create_chain@fs& (0+255),w,b
 15767  003236  26D9               	addwf	fsr2l,f,c
 15768  003238  51A8               	movf	(create_chain@fs+1)& (0+255),w,b
 15769  00323A  22DA               	addwfc	fsr2h,f,c
 15770  00323C  C0AD  FFDE         	movff	create_chain@ncl,postinc2
 15771  003240  C0AE  FFDD         	movff	create_chain@ncl+1,postdec2
 15772                           
 15773                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 15774  003244  EE20 F01A          	lfsr	2,26
 15775  003248  51A7               	movf	create_chain@fs& (0+255),w,b
 15776  00324A  26D9               	addwf	fsr2l,f,c
 15777  00324C  51A8               	movf	(create_chain@fs+1)& (0+255),w,b
 15778  00324E  22DA               	addwfc	fsr2h,f,c
 15779  003250  28DE               	incf	postinc2,w,c
 15780  003252  E103               	bnz	u12140
 15781  003254  28DE               	incf	postinc2,w,c
 15782  003256  B4D8               	btfsc	status,2,c
 15783  003258  D009               	goto	l10550
 15784  00325A                     u12140:
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;tff.c: 321: fs->free_clust--;
 15788  00325A  EE20 F01A          	lfsr	2,26
 15789  00325E  51A7               	movf	create_chain@fs& (0+255),w,b
 15790  003260  26D9               	addwf	fsr2l,f,c
 15791  003262  51A8               	movf	(create_chain@fs+1)& (0+255),w,b
 15792  003264  22DA               	addwfc	fsr2h,f,c
 15793  003266  06DE               	decf	postinc2,f,c
 15794  003268  0E00               	movlw	0
 15795  00326A  5ADD               	subwfb	postdec2,f,c
 15796  00326C                     l10550:
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;tff.c: 325: };tff.c: 327: return ncl;
 15800  00326C  C0AD  F0A1         	movff	create_chain@ncl,?_create_chain
 15801  003270  C0AE  F0A2         	movff	create_chain@ncl+1,?_create_chain+1
 15802                           
 15803                           ; BSR set to: 0
 15804  003274  0012               	return		;funcret
 15805  003276                     __end_of_create_chain:
 15806                           	callstack 0
 15807                           
 15808 ;; *************** function _put_cluster *****************
 15809 ;; Defined at:
 15810 ;;		line 198 in file "bibliotecas/tff.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;  clust           2   41[BANK0 ] unsigned short 
 15813 ;;  val             2   43[BANK0 ] unsigned short 
 15814 ;; Auto vars:     Size  Location     Type
 15815 ;;  fatsect         4   55[BANK0 ] unsigned long 
 15816 ;;  fs              2   63[BANK0 ] PTR struct _FATFS
 15817 ;;		 -> NULL(0), fs(544), 
 15818 ;;  p               2   61[BANK0 ] PTR unsigned char 
 15819 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15820 ;;  bc              2   59[BANK0 ] unsigned short 
 15821 ;; Return value:  Size  Location     Type
 15822 ;;                  1    wreg      enum E105
 15823 ;; Registers used:
 15824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15825 ;; Tracked objects:
 15826 ;;		On entry : 3F/0
 15827 ;;		On exit  : 3F/0
 15828 ;;		Unchanged: 0/0
 15829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15830 ;;      Params:         0       4       0       0       0       0       0       0       0
 15831 ;;      Locals:         0      14       0       0       0       0       0       0       0
 15832 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15833 ;;      Totals:         0      24       0       0       0       0       0       0       0
 15834 ;;Total ram usage:       24 bytes
 15835 ;; Hardware stack levels used:    1
 15836 ;; Hardware stack levels required when called:    9
 15837 ;; This function calls:
 15838 ;;		___wmul
 15839 ;;		_move_window
 15840 ;; This function is called by:
 15841 ;;		_remove_chain
 15842 ;;		_create_chain
 15843 ;; This function uses a non-reentrant model
 15844 ;;
 15845                           
 15846                           	psect	text78
 15847  0026B0                     __ptext78:
 15848                           	callstack 0
 15849  0026B0                     _put_cluster:
 15850                           	callstack 12
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;incstack = 0
 15857  0026B0  C036  F09F         	movff	_FatFs,put_cluster@fs
 15858  0026B4  C037  F0A0         	movff	_FatFs+1,put_cluster@fs+1
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;tff.c: 209: fatsect = fs->fatbase;
 15862  0026B8  EE20 F008          	lfsr	2,8
 15863  0026BC  519F               	movf	put_cluster@fs& (0+255),w,b
 15864  0026BE  26D9               	addwf	fsr2l,f,c
 15865  0026C0  51A0               	movf	(put_cluster@fs+1)& (0+255),w,b
 15866  0026C2  22DA               	addwfc	fsr2h,f,c
 15867  0026C4  CFDE F097          	movff	postinc2,put_cluster@fatsect
 15868  0026C8  CFDE F098          	movff	postinc2,put_cluster@fatsect+1
 15869  0026CC  CFDE F099          	movff	postinc2,put_cluster@fatsect+2
 15870  0026D0  CFDE F09A          	movff	postinc2,put_cluster@fatsect+3
 15871                           
 15872                           ;tff.c: 210: switch (fs->fs_type) {
 15873  0026D4  D108               	goto	l10432
 15874  0026D6                     l10380:
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 15878  0026D6  C089  F01A         	movff	put_cluster@clust,___wmul@multiplier
 15879  0026DA  C08A  F01B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 15880  0026DE  0E00               	movlw	0
 15881  0026E0  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15882  0026E2  0E03               	movlw	3
 15883  0026E4  6E1C               	movwf	___wmul@multiplicand^0,c
 15884  0026E6  ECA6  F02B         	call	___wmul	;wreg free
 15885  0026EA  90D8               	bcf	status,0,c
 15886  0026EC  301B               	rrcf	(?___wmul+1)^0,w,c
 15887  0026EE  0100               	movlb	0	; () banked
 15888  0026F0  6F8D               	movwf	??_put_cluster& (0+255),b
 15889  0026F2  301A               	rrcf	?___wmul^0,w,c
 15890  0026F4  6F9B               	movwf	put_cluster@bc& (0+255),b
 15891  0026F6  C08D  F09C         	movff	??_put_cluster,put_cluster@bc+1
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15895  0026FA  C09B  F08D         	movff	put_cluster@bc,??_put_cluster
 15896  0026FE  C09C  F08E         	movff	put_cluster@bc+1,??_put_cluster+1
 15897  002702  0E09               	movlw	9
 15898  002704  6F8F               	movwf	(??_put_cluster+2)& (0+255),b
 15899  002706                     u11875:
 15900  002706  90D8               	bcf	status,0,c
 15901  002708  338E               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15902  00270A  338D               	rrcf	??_put_cluster& (0+255),f,b
 15903  00270C  2F8F               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15904  00270E  D7FB               	goto	u11875
 15905  002710  518D               	movf	??_put_cluster& (0+255),w,b
 15906  002712  2597               	addwf	put_cluster@fatsect& (0+255),w,b
 15907  002714  6F74               	movwf	move_window@sector& (0+255),b
 15908  002716  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 15909  002718  2198               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15910  00271A  6F75               	movwf	(move_window@sector+1)& (0+255),b
 15911  00271C  0E00               	movlw	0
 15912  00271E  2199               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15913  002720  6F76               	movwf	(move_window@sector+2)& (0+255),b
 15914  002722  0E00               	movlw	0
 15915  002724  219A               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15916  002726  6F77               	movwf	(move_window@sector+3)& (0+255),b
 15917  002728  ECA0  F017         	call	_move_window	;wreg free
 15918  00272C  0900               	iorlw	0
 15919  00272E  A4D8               	btfss	status,2,c
 15920  002730  D002               	goto	l10388
 15921  002732                     u11880:
 15922                           
 15923                           ; BSR set to: 0
 15924  002732  0E00               	movlw	0
 15925  002734  0012               	return	
 15926  002736                     l10388:
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;tff.c: 214: p = &fs->win[bc % 512U];
 15930  002736  0EFF               	movlw	255
 15931  002738  6F8D               	movwf	??_put_cluster& (0+255),b
 15932  00273A  0E01               	movlw	1
 15933  00273C  6F8E               	movwf	(??_put_cluster+1)& (0+255),b
 15934  00273E  C09B  F08F         	movff	put_cluster@bc,??_put_cluster+2
 15935  002742  C09C  F090         	movff	put_cluster@bc+1,??_put_cluster+3
 15936  002746  518D               	movf	??_put_cluster& (0+255),w,b
 15937  002748  178F               	andwf	(??_put_cluster+2)& (0+255),f,b
 15938  00274A  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 15939  00274C  1790               	andwf	(??_put_cluster+3)& (0+255),f,b
 15940  00274E  C09F  F091         	movff	put_cluster@fs,??_put_cluster+4
 15941  002752  C0A0  F092         	movff	put_cluster@fs+1,??_put_cluster+5
 15942  002756  518F               	movf	(??_put_cluster+2)& (0+255),w,b
 15943  002758  2791               	addwf	(??_put_cluster+4)& (0+255),f,b
 15944  00275A  5190               	movf	(??_put_cluster+3)& (0+255),w,b
 15945  00275C  2392               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15946  00275E  0E20               	movlw	32
 15947  002760  2591               	addwf	(??_put_cluster+4)& (0+255),w,b
 15948  002762  6F9D               	movwf	put_cluster@p& (0+255),b
 15949  002764  0E00               	movlw	0
 15950  002766  2192               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15951  002768  6F9E               	movwf	(put_cluster@p+1)& (0+255),b
 15952                           
 15953                           ; BSR set to: 0
 15954                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 15955  00276A  B189               	btfsc	put_cluster@clust& (0+255),0,b
 15956  00276C  D004               	goto	l10394
 15957                           
 15958                           ; BSR set to: 0
 15959  00276E  C08B  F093         	movff	put_cluster@val,_put_cluster$1567
 15960  002772  6B94               	clrf	(_put_cluster$1567+1)& (0+255),b
 15961  002774  D01A               	goto	l10396
 15962  002776                     l10394:
 15963                           
 15964                           ; BSR set to: 0
 15965  002776  518B               	movf	put_cluster@val& (0+255),w,b
 15966  002778  6F8D               	movwf	??_put_cluster& (0+255),b
 15967  00277A  6B8E               	clrf	(??_put_cluster+1)& (0+255),b
 15968  00277C  3B8D               	swapf	??_put_cluster& (0+255),f,b
 15969  00277E  3B8E               	swapf	(??_put_cluster+1)& (0+255),f,b
 15970  002780  0EF0               	movlw	240
 15971  002782  178E               	andwf	(??_put_cluster+1)& (0+255),f,b
 15972  002784  518D               	movf	??_put_cluster& (0+255),w,b
 15973  002786  0B0F               	andlw	15
 15974  002788  138E               	iorwf	(??_put_cluster+1)& (0+255),f,b
 15975  00278A  0EF0               	movlw	240
 15976  00278C  178D               	andwf	??_put_cluster& (0+255),f,b
 15977  00278E  C09D  FFD9         	movff	put_cluster@p,fsr2l
 15978  002792  C09E  FFDA         	movff	put_cluster@p+1,fsr2h
 15979  002796  50DF               	movf	indf2,w,c
 15980  002798  0B0F               	andlw	15
 15981  00279A  6F8F               	movwf	(??_put_cluster+2)& (0+255),b
 15982  00279C  6B90               	clrf	(??_put_cluster+3)& (0+255),b
 15983  00279E  518D               	movf	??_put_cluster& (0+255),w,b
 15984  0027A0  118F               	iorwf	(??_put_cluster+2)& (0+255),w,b
 15985  0027A2  6F93               	movwf	_put_cluster$1567& (0+255),b
 15986  0027A4  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 15987  0027A6  1190               	iorwf	(??_put_cluster+3)& (0+255),w,b
 15988  0027A8  6F94               	movwf	(_put_cluster$1567+1)& (0+255),b
 15989  0027AA                     l10396:
 15990                           
 15991                           ; BSR set to: 0
 15992  0027AA  C09D  FFD9         	movff	put_cluster@p,fsr2l
 15993  0027AE  C09E  FFDA         	movff	put_cluster@p+1,fsr2h
 15994  0027B2  C093  FFDF         	movff	_put_cluster$1567,indf2
 15995                           
 15996                           ; BSR set to: 0
 15997                           ;tff.c: 216: bc++;
 15998  0027B6  4B9B               	infsnz	put_cluster@bc& (0+255),f,b
 15999  0027B8  2B9C               	incf	(put_cluster@bc+1)& (0+255),f,b
 16000                           
 16001                           ; BSR set to: 0
 16002                           ;tff.c: 217: fs->winflag = 1;
 16003  0027BA  EE20 F01F          	lfsr	2,31
 16004  0027BE  519F               	movf	put_cluster@fs& (0+255),w,b
 16005  0027C0  26D9               	addwf	fsr2l,f,c
 16006  0027C2  51A0               	movf	(put_cluster@fs+1)& (0+255),w,b
 16007  0027C4  22DA               	addwfc	fsr2h,f,c
 16008  0027C6  0E01               	movlw	1
 16009  0027C8  6EDF               	movwf	indf2,c
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 16013  0027CA  C09B  F08D         	movff	put_cluster@bc,??_put_cluster
 16014  0027CE  C09C  F08E         	movff	put_cluster@bc+1,??_put_cluster+1
 16015  0027D2  0E09               	movlw	9
 16016  0027D4  6F8F               	movwf	(??_put_cluster+2)& (0+255),b
 16017  0027D6                     u11905:
 16018  0027D6  90D8               	bcf	status,0,c
 16019  0027D8  338E               	rrcf	(??_put_cluster+1)& (0+255),f,b
 16020  0027DA  338D               	rrcf	??_put_cluster& (0+255),f,b
 16021  0027DC  2F8F               	decfsz	(??_put_cluster+2)& (0+255),f,b
 16022  0027DE  D7FB               	goto	u11905
 16023  0027E0  518D               	movf	??_put_cluster& (0+255),w,b
 16024  0027E2  2597               	addwf	put_cluster@fatsect& (0+255),w,b
 16025  0027E4  6F74               	movwf	move_window@sector& (0+255),b
 16026  0027E6  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 16027  0027E8  2198               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 16028  0027EA  6F75               	movwf	(move_window@sector+1)& (0+255),b
 16029  0027EC  0E00               	movlw	0
 16030  0027EE  2199               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 16031  0027F0  6F76               	movwf	(move_window@sector+2)& (0+255),b
 16032  0027F2  0E00               	movlw	0
 16033  0027F4  219A               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 16034  0027F6  6F77               	movwf	(move_window@sector+3)& (0+255),b
 16035  0027F8  ECA0  F017         	call	_move_window	;wreg free
 16036  0027FC  0900               	iorlw	0
 16037  0027FE  B4D8               	btfsc	status,2,c
 16038  002800  D798               	goto	u11880
 16039                           
 16040                           ; BSR set to: 0
 16041                           ;tff.c: 219: p = &fs->win[bc % 512U];
 16042  002802  0EFF               	movlw	255
 16043  002804  6F8D               	movwf	??_put_cluster& (0+255),b
 16044  002806  0E01               	movlw	1
 16045  002808  6F8E               	movwf	(??_put_cluster+1)& (0+255),b
 16046  00280A  C09B  F08F         	movff	put_cluster@bc,??_put_cluster+2
 16047  00280E  C09C  F090         	movff	put_cluster@bc+1,??_put_cluster+3
 16048  002812  518D               	movf	??_put_cluster& (0+255),w,b
 16049  002814  178F               	andwf	(??_put_cluster+2)& (0+255),f,b
 16050  002816  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 16051  002818  1790               	andwf	(??_put_cluster+3)& (0+255),f,b
 16052  00281A  C09F  F091         	movff	put_cluster@fs,??_put_cluster+4
 16053  00281E  C0A0  F092         	movff	put_cluster@fs+1,??_put_cluster+5
 16054  002822  518F               	movf	(??_put_cluster+2)& (0+255),w,b
 16055  002824  2791               	addwf	(??_put_cluster+4)& (0+255),f,b
 16056  002826  5190               	movf	(??_put_cluster+3)& (0+255),w,b
 16057  002828  2392               	addwfc	(??_put_cluster+5)& (0+255),f,b
 16058  00282A  0E20               	movlw	32
 16059  00282C  2591               	addwf	(??_put_cluster+4)& (0+255),w,b
 16060  00282E  6F9D               	movwf	put_cluster@p& (0+255),b
 16061  002830  0E00               	movlw	0
 16062  002832  2192               	addwfc	(??_put_cluster+5)& (0+255),w,b
 16063  002834  6F9E               	movwf	(put_cluster@p+1)& (0+255),b
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 16067  002836  B189               	btfsc	put_cluster@clust& (0+255),0,b
 16068  002838  D00E               	goto	l10414
 16069                           
 16070                           ; BSR set to: 0
 16071  00283A  C08C  F08D         	movff	put_cluster@val+1,??_put_cluster
 16072  00283E  0E0F               	movlw	15
 16073  002840  178D               	andwf	??_put_cluster& (0+255),f,b
 16074  002842  C09D  FFD9         	movff	put_cluster@p,fsr2l
 16075  002846  C09E  FFDA         	movff	put_cluster@p+1,fsr2h
 16076  00284A  50DF               	movf	indf2,w,c
 16077  00284C  0BF0               	andlw	240
 16078  00284E  118D               	iorwf	??_put_cluster& (0+255),w,b
 16079  002850  6F8E               	movwf	(??_put_cluster+1)& (0+255),b
 16080  002852  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 16081  002854  D00C               	goto	L6
 16082  002856                     l10414:
 16083                           
 16084                           ; BSR set to: 0
 16085  002856  C08B  F08D         	movff	put_cluster@val,??_put_cluster
 16086  00285A  C08C  F08E         	movff	put_cluster@val+1,??_put_cluster+1
 16087  00285E  0E04               	movlw	4
 16088  002860  6F8F               	movwf	(??_put_cluster+2)& (0+255),b
 16089  002862                     u11935:
 16090  002862  90D8               	bcf	status,0,c
 16091  002864  338E               	rrcf	(??_put_cluster+1)& (0+255),f,b
 16092  002866  338D               	rrcf	??_put_cluster& (0+255),f,b
 16093  002868  2F8F               	decfsz	(??_put_cluster+2)& (0+255),f,b
 16094  00286A  D7FB               	goto	u11935
 16095  00286C  518D               	movf	??_put_cluster& (0+255),w,b
 16096  00286E                     L6:
 16097  00286E  6F95               	movwf	_put_cluster$1568& (0+255),b
 16098  002870  6B96               	clrf	(_put_cluster$1568+1)& (0+255),b
 16099                           
 16100                           ; BSR set to: 0
 16101  002872  C09D  FFD9         	movff	put_cluster@p,fsr2l
 16102  002876  C09E  FFDA         	movff	put_cluster@p+1,fsr2h
 16103  00287A  C095  FFDF         	movff	_put_cluster$1568,indf2
 16104                           
 16105                           ;tff.c: 221: break;
 16106  00287E  D041               	goto	l10434
 16107  002880                     l10418:
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 16111  002880  518A               	movf	(put_cluster@clust+1)& (0+255),w,b
 16112  002882  2597               	addwf	put_cluster@fatsect& (0+255),w,b
 16113  002884  6F74               	movwf	move_window@sector& (0+255),b
 16114  002886  0E00               	movlw	0
 16115  002888  2198               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 16116  00288A  6F75               	movwf	(move_window@sector+1)& (0+255),b
 16117  00288C  0E00               	movlw	0
 16118  00288E  2199               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 16119  002890  6F76               	movwf	(move_window@sector+2)& (0+255),b
 16120  002892  0E00               	movlw	0
 16121  002894  219A               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 16122  002896  6F77               	movwf	(move_window@sector+3)& (0+255),b
 16123  002898  ECA0  F017         	call	_move_window	;wreg free
 16124  00289C  0900               	iorlw	0
 16125  00289E  B4D8               	btfsc	status,2,c
 16126  0028A0  D748               	goto	u11880
 16127                           
 16128                           ; BSR set to: 0
 16129                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 16130  0028A2  0EFF               	movlw	255
 16131  0028A4  6F8D               	movwf	??_put_cluster& (0+255),b
 16132  0028A6  0E01               	movlw	1
 16133  0028A8  6F8E               	movwf	(??_put_cluster+1)& (0+255),b
 16134  0028AA  C089  F08F         	movff	put_cluster@clust,??_put_cluster+2
 16135  0028AE  C08A  F090         	movff	put_cluster@clust+1,??_put_cluster+3
 16136  0028B2  90D8               	bcf	status,0,c
 16137  0028B4  378F               	rlcf	(??_put_cluster+2)& (0+255),f,b
 16138  0028B6  3790               	rlcf	(??_put_cluster+3)& (0+255),f,b
 16139  0028B8  518D               	movf	??_put_cluster& (0+255),w,b
 16140  0028BA  178F               	andwf	(??_put_cluster+2)& (0+255),f,b
 16141  0028BC  518E               	movf	(??_put_cluster+1)& (0+255),w,b
 16142  0028BE  1790               	andwf	(??_put_cluster+3)& (0+255),f,b
 16143  0028C0  C09F  F091         	movff	put_cluster@fs,??_put_cluster+4
 16144  0028C4  C0A0  F092         	movff	put_cluster@fs+1,??_put_cluster+5
 16145  0028C8  518F               	movf	(??_put_cluster+2)& (0+255),w,b
 16146  0028CA  2791               	addwf	(??_put_cluster+4)& (0+255),f,b
 16147  0028CC  5190               	movf	(??_put_cluster+3)& (0+255),w,b
 16148  0028CE  2392               	addwfc	(??_put_cluster+5)& (0+255),f,b
 16149  0028D0  0E20               	movlw	32
 16150  0028D2  2591               	addwf	(??_put_cluster+4)& (0+255),w,b
 16151  0028D4  6ED9               	movwf	fsr2l,c
 16152  0028D6  0E00               	movlw	0
 16153  0028D8  2192               	addwfc	(??_put_cluster+5)& (0+255),w,b
 16154  0028DA  6EDA               	movwf	fsr2h,c
 16155  0028DC  C08B  FFDE         	movff	put_cluster@val,postinc2
 16156  0028E0  C08C  FFDD         	movff	put_cluster@val+1,postdec2
 16157                           
 16158                           ;tff.c: 226: break;
 16159  0028E4  D00E               	goto	l10434
 16160  0028E6                     l10432:
 16161                           
 16162                           ; BSR set to: 0
 16163  0028E6  EE20 F01C          	lfsr	2,28
 16164  0028EA  519F               	movf	put_cluster@fs& (0+255),w,b
 16165  0028EC  26D9               	addwf	fsr2l,f,c
 16166  0028EE  51A0               	movf	(put_cluster@fs+1)& (0+255),w,b
 16167  0028F0  22DA               	addwfc	fsr2h,f,c
 16168  0028F2  50DF               	movf	indf2,w,c
 16169                           
 16170                           ; Switch size 1, requested type "simple"
 16171                           ; Number of cases is 2, Range of values is 1 to 2
 16172                           ; switch strategies available:
 16173                           ; Name         Instructions Cycles
 16174                           ; simple_byte            7     4 (average)
 16175                           ;	Chosen strategy is simple_byte
 16176  0028F4  0A01               	xorlw	1	; case 1
 16177  0028F6  B4D8               	btfsc	status,2,c
 16178  0028F8  D6EE               	goto	l10380
 16179  0028FA  0A03               	xorlw	3	; case 2
 16180  0028FC  B4D8               	btfsc	status,2,c
 16181  0028FE  D7C0               	goto	l10418
 16182  002900  D718               	goto	u11880
 16183  002902                     l10434:
 16184                           
 16185                           ; BSR set to: 0
 16186                           ;tff.c: 236: fs->winflag = 1;
 16187  002902  EE20 F01F          	lfsr	2,31
 16188  002906  519F               	movf	put_cluster@fs& (0+255),w,b
 16189  002908  26D9               	addwf	fsr2l,f,c
 16190  00290A  51A0               	movf	(put_cluster@fs+1)& (0+255),w,b
 16191  00290C  22DA               	addwfc	fsr2h,f,c
 16192  00290E  0E01               	movlw	1
 16193  002910  6EDF               	movwf	indf2,c
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;tff.c: 237: return TRUE;
 16197  002912  0E01               	movlw	1
 16198                           
 16199                           ; BSR set to: 0
 16200  002914  0012               	return		;funcret
 16201  002916                     __end_of_put_cluster:
 16202                           	callstack 0
 16203                           
 16204 ;; *************** function _get_cluster *****************
 16205 ;; Defined at:
 16206 ;;		line 155 in file "bibliotecas/tff.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;  clust           2   41[BANK0 ] unsigned short 
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;  fatsect         4   54[BANK0 ] unsigned long 
 16211 ;;  fs              2   60[BANK0 ] PTR struct _FATFS
 16212 ;;		 -> NULL(0), fs(544), 
 16213 ;;  bc              2   58[BANK0 ] unsigned short 
 16214 ;;  wc              2   52[BANK0 ] unsigned short 
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  2   41[BANK0 ] unsigned short 
 16217 ;; Registers used:
 16218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16219 ;; Tracked objects:
 16220 ;;		On entry : 3F/0
 16221 ;;		On exit  : 3F/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16224 ;;      Params:         0       2       0       0       0       0       0       0       0
 16225 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16226 ;;      Temps:          0       9       0       0       0       0       0       0       0
 16227 ;;      Totals:         0      21       0       0       0       0       0       0       0
 16228 ;;Total ram usage:       21 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    9
 16231 ;; This function calls:
 16232 ;;		___wmul
 16233 ;;		_move_window
 16234 ;; This function is called by:
 16235 ;;		_remove_chain
 16236 ;;		_create_chain
 16237 ;;		_next_dir_entry
 16238 ;;		_f_lseek
 16239 ;;		_f_read
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           	psect	text79
 16244  002B68                     __ptext79:
 16245                           	callstack 0
 16246  002B68                     _get_cluster:
 16247                           	callstack 12
 16248                           
 16249                           ; BSR set to: 0
 16250                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;incstack = 0
 16254  002B68  C036  F09C         	movff	_FatFs,get_cluster@fs
 16255  002B6C  C037  F09D         	movff	_FatFs+1,get_cluster@fs+1
 16256                           
 16257                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 16258  002B70  518A               	movf	(get_cluster@clust+1)& (0+255),w,b
 16259  002B72  E104               	bnz	u11780
 16260  002B74  0E02               	movlw	2
 16261  002B76  5D89               	subwf	get_cluster@clust& (0+255),w,b
 16262  002B78  A0D8               	btfss	status,0,c
 16263  002B7A  D102               	goto	l10372
 16264  002B7C                     u11780:
 16265                           
 16266                           ; BSR set to: 0
 16267  002B7C  EE20 F016          	lfsr	2,22
 16268  002B80  519C               	movf	get_cluster@fs& (0+255),w,b
 16269  002B82  26D9               	addwf	fsr2l,f,c
 16270  002B84  519D               	movf	(get_cluster@fs+1)& (0+255),w,b
 16271  002B86  22DA               	addwfc	fsr2h,f,c
 16272  002B88  50DE               	movf	postinc2,w,c
 16273  002B8A  5D89               	subwf	get_cluster@clust& (0+255),w,b
 16274  002B8C  50DE               	movf	postinc2,w,c
 16275  002B8E  598A               	subwfb	(get_cluster@clust+1)& (0+255),w,b
 16276  002B90  B0D8               	btfsc	status,0,c
 16277  002B92  D0F6               	goto	l10372
 16278                           
 16279                           ; BSR set to: 0
 16280                           ;tff.c: 165: fatsect = fs->fatbase;
 16281  002B94  EE20 F008          	lfsr	2,8
 16282  002B98  519C               	movf	get_cluster@fs& (0+255),w,b
 16283  002B9A  26D9               	addwf	fsr2l,f,c
 16284  002B9C  519D               	movf	(get_cluster@fs+1)& (0+255),w,b
 16285  002B9E  22DA               	addwfc	fsr2h,f,c
 16286  002BA0  CFDE F096          	movff	postinc2,get_cluster@fatsect
 16287  002BA4  CFDE F097          	movff	postinc2,get_cluster@fatsect+1
 16288  002BA8  CFDE F098          	movff	postinc2,get_cluster@fatsect+2
 16289  002BAC  CFDE F099          	movff	postinc2,get_cluster@fatsect+3
 16290                           
 16291                           ;tff.c: 166: switch (fs->fs_type) {
 16292  002BB0  D0DA               	goto	l10370
 16293  002BB2                     l10336:
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 16297  002BB2  C089  F01A         	movff	get_cluster@clust,___wmul@multiplier
 16298  002BB6  C08A  F01B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 16299  002BBA  0E00               	movlw	0
 16300  002BBC  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 16301  002BBE  0E03               	movlw	3
 16302  002BC0  6E1C               	movwf	___wmul@multiplicand^0,c
 16303  002BC2  ECA6  F02B         	call	___wmul	;wreg free
 16304  002BC6  90D8               	bcf	status,0,c
 16305  002BC8  301B               	rrcf	(?___wmul+1)^0,w,c
 16306  002BCA  0100               	movlb	0	; () banked
 16307  002BCC  6F8B               	movwf	??_get_cluster& (0+255),b
 16308  002BCE  301A               	rrcf	?___wmul^0,w,c
 16309  002BD0  6F9A               	movwf	get_cluster@bc& (0+255),b
 16310  002BD2  C08B  F09B         	movff	??_get_cluster,get_cluster@bc+1
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 16314  002BD6  C09A  F08B         	movff	get_cluster@bc,??_get_cluster
 16315  002BDA  C09B  F08C         	movff	get_cluster@bc+1,??_get_cluster+1
 16316  002BDE  0E09               	movlw	9
 16317  002BE0  6F8D               	movwf	(??_get_cluster+2)& (0+255),b
 16318  002BE2                     u11805:
 16319  002BE2  90D8               	bcf	status,0,c
 16320  002BE4  338C               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16321  002BE6  338B               	rrcf	??_get_cluster& (0+255),f,b
 16322  002BE8  2F8D               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16323  002BEA  D7FB               	goto	u11805
 16324  002BEC  518B               	movf	??_get_cluster& (0+255),w,b
 16325  002BEE  2596               	addwf	get_cluster@fatsect& (0+255),w,b
 16326  002BF0  6F74               	movwf	move_window@sector& (0+255),b
 16327  002BF2  518C               	movf	(??_get_cluster+1)& (0+255),w,b
 16328  002BF4  2197               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16329  002BF6  6F75               	movwf	(move_window@sector+1)& (0+255),b
 16330  002BF8  0E00               	movlw	0
 16331  002BFA  2198               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16332  002BFC  6F76               	movwf	(move_window@sector+2)& (0+255),b
 16333  002BFE  0E00               	movlw	0
 16334  002C00  2199               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16335  002C02  6F77               	movwf	(move_window@sector+3)& (0+255),b
 16336  002C04  ECA0  F017         	call	_move_window	;wreg free
 16337  002C08  0900               	iorlw	0
 16338  002C0A  B4D8               	btfsc	status,2,c
 16339  002C0C  D0B9               	goto	l10372
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 16343  002C0E  0EFF               	movlw	255
 16344  002C10  6F8B               	movwf	??_get_cluster& (0+255),b
 16345  002C12  0E01               	movlw	1
 16346  002C14  6F8C               	movwf	(??_get_cluster+1)& (0+255),b
 16347  002C16  C09A  F08D         	movff	get_cluster@bc,??_get_cluster+2
 16348  002C1A  C09B  F08E         	movff	get_cluster@bc+1,??_get_cluster+3
 16349  002C1E  518B               	movf	??_get_cluster& (0+255),w,b
 16350  002C20  178D               	andwf	(??_get_cluster+2)& (0+255),f,b
 16351  002C22  518C               	movf	(??_get_cluster+1)& (0+255),w,b
 16352  002C24  178E               	andwf	(??_get_cluster+3)& (0+255),f,b
 16353  002C26  C09C  F08F         	movff	get_cluster@fs,??_get_cluster+4
 16354  002C2A  C09D  F090         	movff	get_cluster@fs+1,??_get_cluster+5
 16355  002C2E  518D               	movf	(??_get_cluster+2)& (0+255),w,b
 16356  002C30  278F               	addwf	(??_get_cluster+4)& (0+255),f,b
 16357  002C32  518E               	movf	(??_get_cluster+3)& (0+255),w,b
 16358  002C34  2390               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16359  002C36  0E20               	movlw	32
 16360  002C38  258F               	addwf	(??_get_cluster+4)& (0+255),w,b
 16361  002C3A  6ED9               	movwf	fsr2l,c
 16362  002C3C  0E00               	movlw	0
 16363  002C3E  2190               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16364  002C40  6EDA               	movwf	fsr2h,c
 16365  002C42  50DF               	movf	indf2,w,c
 16366  002C44  6F91               	movwf	(??_get_cluster+6)& (0+255),b
 16367  002C46  5191               	movf	(??_get_cluster+6)& (0+255),w,b
 16368  002C48  6F94               	movwf	get_cluster@wc& (0+255),b
 16369  002C4A  6B95               	clrf	(get_cluster@wc+1)& (0+255),b
 16370                           
 16371                           ; BSR set to: 0
 16372  002C4C  4B9A               	infsnz	get_cluster@bc& (0+255),f,b
 16373  002C4E  2B9B               	incf	(get_cluster@bc+1)& (0+255),f,b
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 16377  002C50  C09A  F08B         	movff	get_cluster@bc,??_get_cluster
 16378  002C54  C09B  F08C         	movff	get_cluster@bc+1,??_get_cluster+1
 16379  002C58  0E09               	movlw	9
 16380  002C5A  6F8D               	movwf	(??_get_cluster+2)& (0+255),b
 16381  002C5C                     u11825:
 16382  002C5C  90D8               	bcf	status,0,c
 16383  002C5E  338C               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16384  002C60  338B               	rrcf	??_get_cluster& (0+255),f,b
 16385  002C62  2F8D               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16386  002C64  D7FB               	goto	u11825
 16387  002C66  518B               	movf	??_get_cluster& (0+255),w,b
 16388  002C68  2596               	addwf	get_cluster@fatsect& (0+255),w,b
 16389  002C6A  6F74               	movwf	move_window@sector& (0+255),b
 16390  002C6C  518C               	movf	(??_get_cluster+1)& (0+255),w,b
 16391  002C6E  2197               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16392  002C70  6F75               	movwf	(move_window@sector+1)& (0+255),b
 16393  002C72  0E00               	movlw	0
 16394  002C74  2198               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16395  002C76  6F76               	movwf	(move_window@sector+2)& (0+255),b
 16396  002C78  0E00               	movlw	0
 16397  002C7A  2199               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16398  002C7C  6F77               	movwf	(move_window@sector+3)& (0+255),b
 16399  002C7E  ECA0  F017         	call	_move_window	;wreg free
 16400  002C82  0900               	iorlw	0
 16401  002C84  B4D8               	btfsc	status,2,c
 16402  002C86  D07C               	goto	l10372
 16403                           
 16404                           ; BSR set to: 0
 16405                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 16406  002C88  0EFF               	movlw	255
 16407  002C8A  6F8B               	movwf	??_get_cluster& (0+255),b
 16408  002C8C  0E01               	movlw	1
 16409  002C8E  6F8C               	movwf	(??_get_cluster+1)& (0+255),b
 16410  002C90  C09A  F08D         	movff	get_cluster@bc,??_get_cluster+2
 16411  002C94  C09B  F08E         	movff	get_cluster@bc+1,??_get_cluster+3
 16412  002C98  518B               	movf	??_get_cluster& (0+255),w,b
 16413  002C9A  178D               	andwf	(??_get_cluster+2)& (0+255),f,b
 16414  002C9C  518C               	movf	(??_get_cluster+1)& (0+255),w,b
 16415  002C9E  178E               	andwf	(??_get_cluster+3)& (0+255),f,b
 16416  002CA0  C09C  F08F         	movff	get_cluster@fs,??_get_cluster+4
 16417  002CA4  C09D  F090         	movff	get_cluster@fs+1,??_get_cluster+5
 16418  002CA8  518D               	movf	(??_get_cluster+2)& (0+255),w,b
 16419  002CAA  278F               	addwf	(??_get_cluster+4)& (0+255),f,b
 16420  002CAC  518E               	movf	(??_get_cluster+3)& (0+255),w,b
 16421  002CAE  2390               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16422  002CB0  0E20               	movlw	32
 16423  002CB2  258F               	addwf	(??_get_cluster+4)& (0+255),w,b
 16424  002CB4  6ED9               	movwf	fsr2l,c
 16425  002CB6  0E00               	movlw	0
 16426  002CB8  2190               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16427  002CBA  6EDA               	movwf	fsr2h,c
 16428  002CBC  50DF               	movf	indf2,w,c
 16429  002CBE  6F91               	movwf	(??_get_cluster+6)& (0+255),b
 16430  002CC0  5191               	movf	(??_get_cluster+6)& (0+255),w,b
 16431  002CC2  6F93               	movwf	(??_get_cluster+8)& (0+255),b
 16432  002CC4  6B92               	clrf	(??_get_cluster+7)& (0+255),b
 16433  002CC6  5192               	movf	(??_get_cluster+7)& (0+255),w,b
 16434  002CC8  1394               	iorwf	get_cluster@wc& (0+255),f,b
 16435  002CCA  5193               	movf	(??_get_cluster+8)& (0+255),w,b
 16436  002CCC  1395               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 16440  002CCE  B189               	btfsc	get_cluster@clust& (0+255),0,b
 16441  002CD0  D007               	goto	l10356
 16442                           
 16443                           ; BSR set to: 0
 16444  002CD2  0EFF               	movlw	255
 16445  002CD4  1594               	andwf	get_cluster@wc& (0+255),w,b
 16446  002CD6  6F89               	movwf	?_get_cluster& (0+255),b
 16447  002CD8  0E0F               	movlw	15
 16448  002CDA  1595               	andwf	(get_cluster@wc+1)& (0+255),w,b
 16449  002CDC  6F8A               	movwf	(?_get_cluster+1)& (0+255),b
 16450  002CDE  0012               	return	
 16451  002CE0                     l10356:
 16452                           
 16453                           ; BSR set to: 0
 16454  002CE0  C094  F08B         	movff	get_cluster@wc,??_get_cluster
 16455  002CE4  C095  F08C         	movff	get_cluster@wc+1,??_get_cluster+1
 16456  002CE8  0E04               	movlw	4
 16457  002CEA  6F8D               	movwf	(??_get_cluster+2)& (0+255),b
 16458  002CEC                     u11855:
 16459  002CEC  90D8               	bcf	status,0,c
 16460  002CEE  338C               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16461  002CF0  338B               	rrcf	??_get_cluster& (0+255),f,b
 16462  002CF2  2F8D               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16463  002CF4  D7FB               	goto	u11855
 16464  002CF6  C08B  F089         	movff	??_get_cluster,?_get_cluster
 16465  002CFA  C08C  F08A         	movff	??_get_cluster+1,?_get_cluster+1
 16466  002CFE  0012               	return	
 16467  002D00                     l10360:
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 16471  002D00  518A               	movf	(get_cluster@clust+1)& (0+255),w,b
 16472  002D02  2596               	addwf	get_cluster@fatsect& (0+255),w,b
 16473  002D04  6F74               	movwf	move_window@sector& (0+255),b
 16474  002D06  0E00               	movlw	0
 16475  002D08  2197               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16476  002D0A  6F75               	movwf	(move_window@sector+1)& (0+255),b
 16477  002D0C  0E00               	movlw	0
 16478  002D0E  2198               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16479  002D10  6F76               	movwf	(move_window@sector+2)& (0+255),b
 16480  002D12  0E00               	movlw	0
 16481  002D14  2199               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16482  002D16  6F77               	movwf	(move_window@sector+3)& (0+255),b
 16483  002D18  ECA0  F017         	call	_move_window	;wreg free
 16484  002D1C  0900               	iorlw	0
 16485  002D1E  B4D8               	btfsc	status,2,c
 16486  002D20  D02F               	goto	l10372
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 16490  002D22  0EFF               	movlw	255
 16491  002D24  6F8B               	movwf	??_get_cluster& (0+255),b
 16492  002D26  0E01               	movlw	1
 16493  002D28  6F8C               	movwf	(??_get_cluster+1)& (0+255),b
 16494  002D2A  C089  F08D         	movff	get_cluster@clust,??_get_cluster+2
 16495  002D2E  C08A  F08E         	movff	get_cluster@clust+1,??_get_cluster+3
 16496  002D32  90D8               	bcf	status,0,c
 16497  002D34  378D               	rlcf	(??_get_cluster+2)& (0+255),f,b
 16498  002D36  378E               	rlcf	(??_get_cluster+3)& (0+255),f,b
 16499  002D38  518B               	movf	??_get_cluster& (0+255),w,b
 16500  002D3A  178D               	andwf	(??_get_cluster+2)& (0+255),f,b
 16501  002D3C  518C               	movf	(??_get_cluster+1)& (0+255),w,b
 16502  002D3E  178E               	andwf	(??_get_cluster+3)& (0+255),f,b
 16503  002D40  C09C  F08F         	movff	get_cluster@fs,??_get_cluster+4
 16504  002D44  C09D  F090         	movff	get_cluster@fs+1,??_get_cluster+5
 16505  002D48  518D               	movf	(??_get_cluster+2)& (0+255),w,b
 16506  002D4A  278F               	addwf	(??_get_cluster+4)& (0+255),f,b
 16507  002D4C  518E               	movf	(??_get_cluster+3)& (0+255),w,b
 16508  002D4E  2390               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16509  002D50  0E20               	movlw	32
 16510  002D52  258F               	addwf	(??_get_cluster+4)& (0+255),w,b
 16511  002D54  6ED9               	movwf	fsr2l,c
 16512  002D56  0E00               	movlw	0
 16513  002D58  2190               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16514  002D5A  6EDA               	movwf	fsr2h,c
 16515  002D5C  CFDE F089          	movff	postinc2,?_get_cluster
 16516  002D60  CFDD F08A          	movff	postdec2,?_get_cluster+1
 16517  002D64  0012               	return	
 16518  002D66                     l10370:
 16519                           
 16520                           ; BSR set to: 0
 16521  002D66  EE20 F01C          	lfsr	2,28
 16522  002D6A  519C               	movf	get_cluster@fs& (0+255),w,b
 16523  002D6C  26D9               	addwf	fsr2l,f,c
 16524  002D6E  519D               	movf	(get_cluster@fs+1)& (0+255),w,b
 16525  002D70  22DA               	addwfc	fsr2h,f,c
 16526  002D72  50DF               	movf	indf2,w,c
 16527                           
 16528                           ; Switch size 1, requested type "simple"
 16529                           ; Number of cases is 2, Range of values is 1 to 2
 16530                           ; switch strategies available:
 16531                           ; Name         Instructions Cycles
 16532                           ; simple_byte            7     4 (average)
 16533                           ;	Chosen strategy is simple_byte
 16534  002D74  0A01               	xorlw	1	; case 1
 16535  002D76  B4D8               	btfsc	status,2,c
 16536  002D78  D71C               	goto	l10336
 16537  002D7A  0A03               	xorlw	3	; case 2
 16538  002D7C  B4D8               	btfsc	status,2,c
 16539  002D7E  D7C0               	goto	l10360
 16540  002D80                     l10372:
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;tff.c: 184: };tff.c: 186: return 1;
 16544  002D80  0E00               	movlw	0
 16545  002D82  6F8A               	movwf	(?_get_cluster+1)& (0+255),b
 16546  002D84  0E01               	movlw	1
 16547  002D86  6F89               	movwf	?_get_cluster& (0+255),b
 16548                           
 16549                           ; BSR set to: 0
 16550  002D88  0012               	return		;funcret
 16551  002D8A                     __end_of_get_cluster:
 16552                           	callstack 0
 16553                           
 16554 ;; *************** function ___wmul *****************
 16555 ;; Defined at:
 16556 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;  multiplier      2   25[COMRAM] unsigned int 
 16559 ;;  multiplicand    2   27[COMRAM] unsigned int 
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;  product         2   29[COMRAM] unsigned int 
 16562 ;; Return value:  Size  Location     Type
 16563 ;;                  2   25[COMRAM] unsigned int 
 16564 ;; Registers used:
 16565 ;;		wreg, status,2, status,0, prodl, prodh
 16566 ;; Tracked objects:
 16567 ;;		On entry : 0/0
 16568 ;;		On exit  : 0/0
 16569 ;;		Unchanged: 0/0
 16570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16571 ;;      Params:         4       0       0       0       0       0       0       0       0
 16572 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16574 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16575 ;;Total ram usage:        6 bytes
 16576 ;; Hardware stack levels used:    1
 16577 ;; Hardware stack levels required when called:    3
 16578 ;; This function calls:
 16579 ;;		Nothing
 16580 ;; This function is called by:
 16581 ;;		_get_cluster
 16582 ;;		_put_cluster
 16583 ;;		_fprintf
 16584 ;;		_atoi
 16585 ;; This function uses a non-reentrant model
 16586 ;;
 16587                           
 16588                           	psect	text80
 16589  00574C                     __ptext80:
 16590                           	callstack 0
 16591  00574C                     ___wmul:
 16592                           	callstack 24
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;incstack = 0
 16596  00574C  501A               	movf	___wmul@multiplier^0,w,c
 16597  00574E  021C               	mulwf	___wmul@multiplicand^0,c
 16598  005750  CFF3 F01E          	movff	prodl,___wmul@product
 16599  005754  CFF4 F01F          	movff	prodh,___wmul@product+1
 16600  005758  501A               	movf	___wmul@multiplier^0,w,c
 16601  00575A  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 16602  00575C  50F3               	movf	243,w,c
 16603  00575E  261F               	addwf	(___wmul@product+1)^0,f,c
 16604  005760  501B               	movf	(___wmul@multiplier+1)^0,w,c
 16605  005762  021C               	mulwf	___wmul@multiplicand^0,c
 16606  005764  50F3               	movf	243,w,c
 16607  005766  261F               	addwf	(___wmul@product+1)^0,f,c
 16608  005768  C01E  F01A         	movff	___wmul@product,?___wmul
 16609  00576C  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 16610  005770  0012               	return		;funcret
 16611  005772                     __end_of___wmul:
 16612                           	callstack 0
 16613                           
 16614 ;; *************** function ___lldiv *****************
 16615 ;; Defined at:
 16616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  dividend        4   25[COMRAM] unsigned long 
 16619 ;;  divisor         4   29[COMRAM] unsigned long 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;  quotient        4   33[COMRAM] unsigned long 
 16622 ;;  counter         1   37[COMRAM] unsigned char 
 16623 ;; Return value:  Size  Location     Type
 16624 ;;                  4   25[COMRAM] unsigned long 
 16625 ;; Registers used:
 16626 ;;		wreg, status,2, status,0
 16627 ;; Tracked objects:
 16628 ;;		On entry : 3D/0
 16629 ;;		On exit  : 3D/0
 16630 ;;		Unchanged: 3D/0
 16631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16632 ;;      Params:         8       0       0       0       0       0       0       0       0
 16633 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16634 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16635 ;;      Totals:        13       0       0       0       0       0       0       0       0
 16636 ;;Total ram usage:       13 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:    3
 16639 ;; This function calls:
 16640 ;;		Nothing
 16641 ;; This function is called by:
 16642 ;;		_auto_mount
 16643 ;;		_f_lseek
 16644 ;;		_fprintf
 16645 ;;		_ultoa
 16646 ;; This function uses a non-reentrant model
 16647 ;;
 16648                           
 16649                           	psect	text81
 16650  0049C4                     __ptext81:
 16651                           	callstack 0
 16652  0049C4                     ___lldiv:
 16653                           	callstack 22
 16654                           
 16655                           ;incstack = 0
 16656  0049C4  0E00               	movlw	0
 16657  0049C6  6E22               	movwf	___lldiv@quotient^0,c
 16658  0049C8  0E00               	movlw	0
 16659  0049CA  6E23               	movwf	(___lldiv@quotient+1)^0,c
 16660  0049CC  0E00               	movlw	0
 16661  0049CE  6E24               	movwf	(___lldiv@quotient+2)^0,c
 16662  0049D0  0E00               	movlw	0
 16663  0049D2  6E25               	movwf	(___lldiv@quotient+3)^0,c
 16664  0049D4  501E               	movf	___lldiv@divisor^0,w,c
 16665  0049D6  101F               	iorwf	(___lldiv@divisor+1)^0,w,c
 16666  0049D8  1020               	iorwf	(___lldiv@divisor+2)^0,w,c
 16667  0049DA  1021               	iorwf	(___lldiv@divisor+3)^0,w,c
 16668  0049DC  B4D8               	btfsc	status,2,c
 16669  0049DE  D02A               	goto	l1698
 16670  0049E0  0E01               	movlw	1
 16671  0049E2  6E26               	movwf	___lldiv@counter^0,c
 16672  0049E4  D006               	goto	l11280
 16673  0049E6                     l11278:
 16674  0049E6  90D8               	bcf	status,0,c
 16675  0049E8  361E               	rlcf	___lldiv@divisor^0,f,c
 16676  0049EA  361F               	rlcf	(___lldiv@divisor+1)^0,f,c
 16677  0049EC  3620               	rlcf	(___lldiv@divisor+2)^0,f,c
 16678  0049EE  3621               	rlcf	(___lldiv@divisor+3)^0,f,c
 16679  0049F0  2A26               	incf	___lldiv@counter^0,f,c
 16680  0049F2                     l11280:
 16681  0049F2  AE21               	btfss	(___lldiv@divisor+3)^0,7,c
 16682  0049F4  D7F8               	goto	l11278
 16683  0049F6                     u13300:
 16684  0049F6  90D8               	bcf	status,0,c
 16685  0049F8  3622               	rlcf	___lldiv@quotient^0,f,c
 16686  0049FA  3623               	rlcf	(___lldiv@quotient+1)^0,f,c
 16687  0049FC  3624               	rlcf	(___lldiv@quotient+2)^0,f,c
 16688  0049FE  3625               	rlcf	(___lldiv@quotient+3)^0,f,c
 16689  004A00  501E               	movf	___lldiv@divisor^0,w,c
 16690  004A02  5C1A               	subwf	___lldiv@dividend^0,w,c
 16691  004A04  501F               	movf	(___lldiv@divisor+1)^0,w,c
 16692  004A06  581B               	subwfb	(___lldiv@dividend+1)^0,w,c
 16693  004A08  5020               	movf	(___lldiv@divisor+2)^0,w,c
 16694  004A0A  581C               	subwfb	(___lldiv@dividend+2)^0,w,c
 16695  004A0C  5021               	movf	(___lldiv@divisor+3)^0,w,c
 16696  004A0E  581D               	subwfb	(___lldiv@dividend+3)^0,w,c
 16697  004A10  A0D8               	btfss	status,0,c
 16698  004A12  D009               	goto	l11290
 16699  004A14  501E               	movf	___lldiv@divisor^0,w,c
 16700  004A16  5E1A               	subwf	___lldiv@dividend^0,f,c
 16701  004A18  501F               	movf	(___lldiv@divisor+1)^0,w,c
 16702  004A1A  5A1B               	subwfb	(___lldiv@dividend+1)^0,f,c
 16703  004A1C  5020               	movf	(___lldiv@divisor+2)^0,w,c
 16704  004A1E  5A1C               	subwfb	(___lldiv@dividend+2)^0,f,c
 16705  004A20  5021               	movf	(___lldiv@divisor+3)^0,w,c
 16706  004A22  5A1D               	subwfb	(___lldiv@dividend+3)^0,f,c
 16707  004A24  8022               	bsf	___lldiv@quotient^0,0,c
 16708  004A26                     l11290:
 16709  004A26  90D8               	bcf	status,0,c
 16710  004A28  3221               	rrcf	(___lldiv@divisor+3)^0,f,c
 16711  004A2A  3220               	rrcf	(___lldiv@divisor+2)^0,f,c
 16712  004A2C  321F               	rrcf	(___lldiv@divisor+1)^0,f,c
 16713  004A2E  321E               	rrcf	___lldiv@divisor^0,f,c
 16714  004A30  2E26               	decfsz	___lldiv@counter^0,f,c
 16715  004A32  D7E1               	goto	u13300
 16716  004A34                     l1698:
 16717  004A34  C022  F01A         	movff	___lldiv@quotient,?___lldiv
 16718  004A38  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
 16719  004A3C  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
 16720  004A40  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
 16721  004A44  0012               	return		;funcret
 16722  004A46                     __end_of___lldiv:
 16723                           	callstack 0
 16724                           
 16725 ;; *************** function _f_close *****************
 16726 ;; Defined at:
 16727 ;;		line 1116 in file "bibliotecas/tff.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;  fp              2   52[BANK0 ] PTR struct _FIL
 16730 ;;		 -> fil(28), 
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;  res             1   54[BANK0 ] enum E155
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      enum E3231
 16735 ;; Registers used:
 16736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16737 ;; Tracked objects:
 16738 ;;		On entry : 3F/0
 16739 ;;		On exit  : 3F/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16742 ;;      Params:         0       2       0       0       0       0       0       0       0
 16743 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16745 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16746 ;;Total ram usage:        3 bytes
 16747 ;; Hardware stack levels used:    1
 16748 ;; Hardware stack levels required when called:   11
 16749 ;; This function calls:
 16750 ;;		_f_sync
 16751 ;; This function is called by:
 16752 ;;		_escrita_sdcard
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           	psect	text82
 16757  0056AC                     __ptext82:
 16758                           	callstack 0
 16759  0056AC                     _f_close:
 16760                           	callstack 15
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 16764                           
 16765                           ;incstack = 0
 16766  0056AC  C094  F08B         	movff	f_close@fp,f_sync@fp
 16767  0056B0  C095  F08C         	movff	f_close@fp+1,f_sync@fp+1
 16768  0056B4  EC8D  F01C         	call	_f_sync	;wreg free
 16769  0056B8  6F96               	movwf	f_close@res& (0+255),b
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 16773  0056BA  5196               	movf	f_close@res& (0+255),w,b
 16774  0056BC  A4D8               	btfss	status,2,c
 16775  0056BE  0012               	return	
 16776                           
 16777                           ; BSR set to: 0
 16778  0056C0  EE20 F004          	lfsr	2,4
 16779  0056C4  5194               	movf	f_close@fp& (0+255),w,b
 16780  0056C6  26D9               	addwf	fsr2l,f,c
 16781  0056C8  5195               	movf	(f_close@fp+1)& (0+255),w,b
 16782  0056CA  22DA               	addwfc	fsr2h,f,c
 16783  0056CC  0E00               	movlw	0
 16784  0056CE  6EDE               	movwf	postinc2,c
 16785  0056D0  0E00               	movlw	0
 16786  0056D2  6EDD               	movwf	postdec2,c
 16787                           
 16788                           ; BSR set to: 0
 16789  0056D4  0012               	return		;funcret
 16790  0056D6                     __end_of_f_close:
 16791                           	callstack 0
 16792                           
 16793 ;; *************** function _f_sync *****************
 16794 ;; Defined at:
 16795 ;;		line 1077 in file "bibliotecas/tff.c"
 16796 ;; Parameters:    Size  Location     Type
 16797 ;;  fp              2   43[BANK0 ] PTR struct _FIL
 16798 ;;		 -> fil(28), 
 16799 ;; Auto vars:     Size  Location     Type
 16800 ;;  tim             4   45[BANK0 ] unsigned long 
 16801 ;;  dir             2   50[BANK0 ] PTR unsigned char 
 16802 ;;		 -> NULL(0), fs(544), 
 16803 ;;  res             1   49[BANK0 ] enum E155
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      enum E155
 16806 ;; Registers used:
 16807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16808 ;; Tracked objects:
 16809 ;;		On entry : 3F/0
 16810 ;;		On exit  : 3F/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16813 ;;      Params:         0       2       0       0       0       0       0       0       0
 16814 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16816 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16817 ;;Total ram usage:        9 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:   10
 16820 ;; This function calls:
 16821 ;;		_get_fattime
 16822 ;;		_move_window
 16823 ;;		_sync
 16824 ;;		_validate
 16825 ;; This function is called by:
 16826 ;;		_f_close
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           	psect	text83
 16831  00391A                     __ptext83:
 16832                           	callstack 0
 16833  00391A                     _f_sync:
 16834                           	callstack 15
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;incstack = 0
 16841  00391A  EE20 F004          	lfsr	2,4
 16842  00391E  518B               	movf	f_sync@fp& (0+255),w,b
 16843  003920  26D9               	addwf	fsr2l,f,c
 16844  003922  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16845  003924  22DA               	addwfc	fsr2h,f,c
 16846  003926  CFDE F020          	movff	postinc2,validate@fs
 16847  00392A  CFDD F021          	movff	postdec2,validate@fs+1
 16848  00392E  C08B  FFD9         	movff	f_sync@fp,fsr2l
 16849  003932  C08C  FFDA         	movff	f_sync@fp+1,fsr2h
 16850  003936  CFDE F022          	movff	postinc2,validate@id
 16851  00393A  CFDD F023          	movff	postdec2,validate@id+1
 16852  00393E  EC70  F029         	call	_validate	;wreg free
 16853  003942  0100               	movlb	0	; () banked
 16854  003944  6F91               	movwf	f_sync@res& (0+255),b
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;tff.c: 1087: if (res == FR_OK) {
 16858  003946  5191               	movf	f_sync@res& (0+255),w,b
 16859  003948  A4D8               	btfss	status,2,c
 16860  00394A  D077               	goto	l11624
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;tff.c: 1088: if (fp->flag & 0x20) {
 16864  00394C  EE20 F002          	lfsr	2,2
 16865  003950  518B               	movf	f_sync@fp& (0+255),w,b
 16866  003952  26D9               	addwf	fsr2l,f,c
 16867  003954  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16868  003956  22DA               	addwfc	fsr2h,f,c
 16869  003958  AADF               	btfss	indf2,5,c
 16870  00395A  D06F               	goto	l11624
 16871                           
 16872                           ; BSR set to: 0
 16873                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 16874  00395C  EE20 F016          	lfsr	2,22
 16875  003960  518B               	movf	f_sync@fp& (0+255),w,b
 16876  003962  26D9               	addwf	fsr2l,f,c
 16877  003964  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16878  003966  22DA               	addwfc	fsr2h,f,c
 16879  003968  CFDE F074          	movff	postinc2,move_window@sector
 16880  00396C  CFDE F075          	movff	postinc2,move_window@sector+1
 16881  003970  CFDE F076          	movff	postinc2,move_window@sector+2
 16882  003974  CFDE F077          	movff	postinc2,move_window@sector+3
 16883  003978  ECA0  F017         	call	_move_window	;wreg free
 16884  00397C  0900               	iorlw	0
 16885  00397E  A4D8               	btfss	status,2,c
 16886  003980  D002               	goto	l11610
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;tff.c: 1091: return FR_RW_ERROR;
 16890  003982  0E08               	movlw	8
 16891  003984  0012               	return	
 16892  003986                     l11610:
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;tff.c: 1092: dir = fp->dir_ptr;
 16896  003986  EE20 F01A          	lfsr	2,26
 16897  00398A  518B               	movf	f_sync@fp& (0+255),w,b
 16898  00398C  26D9               	addwf	fsr2l,f,c
 16899  00398E  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16900  003990  22DA               	addwfc	fsr2h,f,c
 16901  003992  CFDE F092          	movff	postinc2,f_sync@dir
 16902  003996  CFDD F093          	movff	postdec2,f_sync@dir+1
 16903                           
 16904                           ;tff.c: 1093: dir[11] |= 0x20;
 16905  00399A  EE20 F00B          	lfsr	2,11
 16906  00399E  5192               	movf	f_sync@dir& (0+255),w,b
 16907  0039A0  26D9               	addwf	fsr2l,f,c
 16908  0039A2  5193               	movf	(f_sync@dir+1)& (0+255),w,b
 16909  0039A4  22DA               	addwfc	fsr2h,f,c
 16910  0039A6  0E00               	movlw	0
 16911  0039A8  8ADB               	bsf	plusw2,5,c
 16912                           
 16913                           ; BSR set to: 0
 16914                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 16915  0039AA  EE20 F00A          	lfsr	2,10
 16916  0039AE  518B               	movf	f_sync@fp& (0+255),w,b
 16917  0039B0  26D9               	addwf	fsr2l,f,c
 16918  0039B2  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16919  0039B4  22DA               	addwfc	fsr2h,f,c
 16920  0039B6  EE10 F01C          	lfsr	1,28
 16921  0039BA  5192               	movf	f_sync@dir& (0+255),w,b
 16922  0039BC  26E1               	addwf	fsr1l,f,c
 16923  0039BE  5193               	movf	(f_sync@dir+1)& (0+255),w,b
 16924  0039C0  22E2               	addwfc	fsr1h,f,c
 16925  0039C2  CFDE FFE6          	movff	postinc2,postinc1
 16926  0039C6  CFDE FFE6          	movff	postinc2,postinc1
 16927  0039CA  CFDE FFE6          	movff	postinc2,postinc1
 16928  0039CE  CFDE FFE6          	movff	postinc2,postinc1
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 16932  0039D2  EE20 F00E          	lfsr	2,14
 16933  0039D6  518B               	movf	f_sync@fp& (0+255),w,b
 16934  0039D8  26D9               	addwf	fsr2l,f,c
 16935  0039DA  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16936  0039DC  22DA               	addwfc	fsr2h,f,c
 16937  0039DE  EE10 F01A          	lfsr	1,26
 16938  0039E2  5192               	movf	f_sync@dir& (0+255),w,b
 16939  0039E4  26E1               	addwf	fsr1l,f,c
 16940  0039E6  5193               	movf	(f_sync@dir+1)& (0+255),w,b
 16941  0039E8  22E2               	addwfc	fsr1h,f,c
 16942  0039EA  CFDE FFE6          	movff	postinc2,postinc1
 16943  0039EE  CFDD FFE5          	movff	postdec2,postdec1
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;tff.c: 1099: tim = get_fattime();
 16947  0039F2  EC4D  F01B         	call	_get_fattime	;wreg free
 16948  0039F6  C01E  F08D         	movff	?_get_fattime,f_sync@tim
 16949  0039FA  C01F  F08E         	movff	?_get_fattime+1,f_sync@tim+1
 16950  0039FE  C020  F08F         	movff	?_get_fattime+2,f_sync@tim+2
 16951  003A02  C021  F090         	movff	?_get_fattime+3,f_sync@tim+3
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 16955  003A06  EE20 F016          	lfsr	2,22
 16956  003A0A  5192               	movf	f_sync@dir& (0+255),w,b
 16957  003A0C  26D9               	addwf	fsr2l,f,c
 16958  003A0E  5193               	movf	(f_sync@dir+1)& (0+255),w,b
 16959  003A10  22DA               	addwfc	fsr2h,f,c
 16960  003A12  C08D  FFDE         	movff	f_sync@tim,postinc2
 16961  003A16  C08E  FFDE         	movff	f_sync@tim+1,postinc2
 16962  003A1A  C08F  FFDE         	movff	f_sync@tim+2,postinc2
 16963  003A1E  C090  FFDE         	movff	f_sync@tim+3,postinc2
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 16967  003A22  EE20 F002          	lfsr	2,2
 16968  003A26  518B               	movf	f_sync@fp& (0+255),w,b
 16969  003A28  26D9               	addwf	fsr2l,f,c
 16970  003A2A  518C               	movf	(f_sync@fp+1)& (0+255),w,b
 16971  003A2C  22DA               	addwfc	fsr2h,f,c
 16972  003A2E  0EDF               	movlw	223
 16973  003A30  16DF               	andwf	indf2,f,c
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;tff.c: 1102: res = sync();
 16977  003A32  EC86  F028         	call	_sync	;wreg free
 16978  003A36  0100               	movlb	0	; () banked
 16979  003A38  6F91               	movwf	f_sync@res& (0+255),b
 16980  003A3A                     l11624:
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 16984  003A3A  5191               	movf	f_sync@res& (0+255),w,b
 16985                           
 16986                           ; BSR set to: 0
 16987  003A3C  0012               	return		;funcret
 16988  003A3E                     __end_of_f_sync:
 16989                           	callstack 0
 16990                           
 16991 ;; *************** function _validate *****************
 16992 ;; Defined at:
 16993 ;;		line 767 in file "bibliotecas/tff.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;  fs              2   31[COMRAM] PTR const struct _FATFS
 16996 ;;		 -> NULL(0), fs(544), 
 16997 ;;  id              2   33[COMRAM] unsigned short 
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;		None
 17000 ;; Return value:  Size  Location     Type
 17001 ;;                  1    wreg      enum E155
 17002 ;; Registers used:
 17003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17004 ;; Tracked objects:
 17005 ;;		On entry : 3F/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17009 ;;      Params:         4       0       0       0       0       0       0       0       0
 17010 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17011 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17012 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17013 ;;Total ram usage:        6 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; Hardware stack levels required when called:    5
 17016 ;; This function calls:
 17017 ;;		_disk_status
 17018 ;; This function is called by:
 17019 ;;		_f_write
 17020 ;;		_f_sync
 17021 ;;		_f_lseek
 17022 ;;		_f_read
 17023 ;; This function uses a non-reentrant model
 17024 ;;
 17025                           
 17026                           	psect	text84
 17027  0052E0                     __ptext84:
 17028                           	callstack 0
 17029  0052E0                     _validate:
 17030                           	callstack 17
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;incstack = 0
 17037  0052E0  5020               	movf	validate@fs^0,w,c
 17038  0052E2  1021               	iorwf	(validate@fs+1)^0,w,c
 17039  0052E4  B4D8               	btfsc	status,2,c
 17040  0052E6  D014               	goto	u12180
 17041                           
 17042                           ; BSR set to: 0
 17043  0052E8  EE20 F01C          	lfsr	2,28
 17044  0052EC  5020               	movf	validate@fs^0,w,c
 17045  0052EE  26D9               	addwf	fsr2l,f,c
 17046  0052F0  5021               	movf	(validate@fs+1)^0,w,c
 17047  0052F2  22DA               	addwfc	fsr2h,f,c
 17048  0052F4  50DF               	movf	indf2,w,c
 17049  0052F6  B4D8               	btfsc	status,2,c
 17050  0052F8  D00B               	goto	u12180
 17051                           
 17052                           ; BSR set to: 0
 17053  0052FA  C020  FFD9         	movff	validate@fs,fsr2l
 17054  0052FE  C021  FFDA         	movff	validate@fs+1,fsr2h
 17055  005302  5022               	movf	validate@id^0,w,c
 17056  005304  18DE               	xorwf	postinc2,w,c
 17057  005306  E104               	bnz	u12180
 17058  005308  5023               	movf	(validate@id+1)^0,w,c
 17059  00530A  18DE               	xorwf	postinc2,w,c
 17060  00530C  B4D8               	btfsc	status,2,c
 17061  00530E  D002               	goto	l10576
 17062  005310                     u12180:
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;tff.c: 773: return FR_INVALID_OBJECT;
 17066  005310  0E0C               	movlw	12
 17067  005312  0012               	return	
 17068  005314                     l10576:
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;tff.c: 774: if (disk_status(0) & 0x01)
 17072  005314  0E00               	movlw	0
 17073  005316  EC11  F02B         	call	_disk_status
 17074  00531A  6E24               	movwf	??_validate^0,c
 17075  00531C  A024               	btfss	??_validate^0,0,c
 17076  00531E  D002               	goto	l10582
 17077                           
 17078                           ;tff.c: 775: return FR_NOT_READY;
 17079  005320  0E01               	movlw	1
 17080  005322  0012               	return	
 17081  005324                     l10582:
 17082                           
 17083                           ;tff.c: 777: return FR_OK;
 17084  005324  0E00               	movlw	0
 17085  005326  0012               	return		;funcret
 17086  005328                     __end_of_validate:
 17087                           	callstack 0
 17088                           
 17089 ;; *************** function _disk_status *****************
 17090 ;; Defined at:
 17091 ;;		line 27 in file "bibliotecas/diskio.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  pdrv            1    wreg     unsigned char 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;  pdrv            1   29[COMRAM] unsigned char 
 17096 ;;  result          2    0        int 
 17097 ;;  stat            1   30[COMRAM] unsigned char 
 17098 ;; Return value:  Size  Location     Type
 17099 ;;                  1    wreg      unsigned char 
 17100 ;; Registers used:
 17101 ;;		wreg, status,2, status,0, cstack
 17102 ;; Tracked objects:
 17103 ;;		On entry : 3F/0
 17104 ;;		On exit  : 0/0
 17105 ;;		Unchanged: 0/0
 17106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17107 ;;      Params:         0       0       0       0       0       0       0       0       0
 17108 ;;      Locals:         4       0       0       0       0       0       0       0       0
 17109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17110 ;;      Totals:         4       0       0       0       0       0       0       0       0
 17111 ;;Total ram usage:        4 bytes
 17112 ;; Hardware stack levels used:    1
 17113 ;; Hardware stack levels required when called:    4
 17114 ;; This function calls:
 17115 ;;		_sdc_disk_status
 17116 ;; This function is called by:
 17117 ;;		_auto_mount
 17118 ;;		_validate
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text85
 17123  005622                     __ptext85:
 17124                           	callstack 0
 17125  005622                     _disk_status:
 17126                           	callstack 17
 17127                           
 17128                           ;incstack = 0
 17129                           ;disk_status@pdrv stored from wreg
 17130  005622  6E1E               	movwf	disk_status@pdrv^0,c
 17131                           
 17132                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 17133  005624  D00A               	goto	l10286
 17134  005626                     l10268:
 17135                           
 17136                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 17137  005626  501E               	movf	disk_status@pdrv^0,w,c
 17138  005628  ECDE  F02C         	call	_sdc_disk_status
 17139  00562C  6E1F               	movwf	disk_status@stat^0,c
 17140  00562E                     l10270:
 17141                           
 17142                           ;diskio.c: 39: return stat;
 17143  00562E  501F               	movf	disk_status@stat^0,w,c
 17144  005630  0012               	return	
 17145  005632                     l10274:
 17146  005632  501E               	movf	disk_status@pdrv^0,w,c
 17147  005634  ECDE  F02C         	call	_sdc_disk_status
 17148  005638  D7FA               	goto	l10270
 17149  00563A                     l10286:
 17150  00563A  501E               	movf	disk_status@pdrv^0,w,c
 17151                           
 17152                           ; Switch size 1, requested type "simple"
 17153                           ; Number of cases is 3, Range of values is 0 to 2
 17154                           ; switch strategies available:
 17155                           ; Name         Instructions Cycles
 17156                           ; simple_byte           10     6 (average)
 17157                           ;	Chosen strategy is simple_byte
 17158  00563C  0A00               	xorlw	0	; case 0
 17159  00563E  B4D8               	btfsc	status,2,c
 17160  005640  D7F2               	goto	l10268
 17161  005642  0A01               	xorlw	1	; case 1
 17162  005644  B4D8               	btfsc	status,2,c
 17163  005646  D7F5               	goto	l10274
 17164  005648  0A03               	xorlw	3	; case 2
 17165  00564A  B4D8               	btfsc	status,2,c
 17166  00564C  D7F0               	goto	l10270
 17167                           
 17168                           ;diskio.c: 50: return 0x01;
 17169  00564E  0E01               	movlw	1
 17170  005650  0012               	return		;funcret
 17171  005652                     __end_of_disk_status:
 17172                           	callstack 0
 17173                           
 17174 ;; *************** function _sdc_disk_status *****************
 17175 ;; Defined at:
 17176 ;;		line 588 in file "bibliotecas/diskio.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;  pdrv            1    wreg     unsigned char 
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;  pdrv            1   26[COMRAM] unsigned char 
 17181 ;;  stat            1    0        unsigned char 
 17182 ;;  cont            1    0        unsigned char 
 17183 ;;  buff            1    0        unsigned char 
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  1    wreg      unsigned char 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17193 ;;      Params:         0       0       0       0       0       0       0       0       0
 17194 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17196 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17197 ;;Total ram usage:        2 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:    3
 17200 ;; This function calls:
 17201 ;;		Nothing
 17202 ;; This function is called by:
 17203 ;;		_disk_status
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text86
 17208  0059BC                     __ptext86:
 17209                           	callstack 0
 17210  0059BC                     _sdc_disk_status:
 17211                           	callstack 17
 17212                           
 17213                           ;incstack = 0
 17214                           ;sdc_disk_status@pdrv stored from wreg
 17215  0059BC  6E1B               	movwf	sdc_disk_status@pdrv^0,c
 17216                           
 17217                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 17218  0059BE  501B               	movf	sdc_disk_status@pdrv^0,w,c
 17219  0059C0  B4D8               	btfsc	status,2,c
 17220  0059C2  D002               	goto	l10144
 17221  0059C4  0E01               	movlw	1
 17222  0059C6  0012               	return	
 17223  0059C8                     l10144:
 17224                           
 17225                           ;diskio.c: 595: return FR_OK;
 17226  0059C8  0E00               	movlw	0
 17227  0059CA  0012               	return		;funcret
 17228  0059CC                     __end_of_sdc_disk_status:
 17229                           	callstack 0
 17230                           
 17231 ;; *************** function _sync *****************
 17232 ;; Defined at:
 17233 ;;		line 119 in file "bibliotecas/tff.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;		None
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;  fs              2   41[BANK0 ] PTR struct _FATFS
 17238 ;;		 -> NULL(0), fs(544), 
 17239 ;; Return value:  Size  Location     Type
 17240 ;;                  1    wreg      enum E155
 17241 ;; Registers used:
 17242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17243 ;; Tracked objects:
 17244 ;;		On entry : 3F/0
 17245 ;;		On exit  : 0/0
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17248 ;;      Params:         0       0       0       0       0       0       0       0       0
 17249 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17251 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17252 ;;Total ram usage:        2 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; Hardware stack levels required when called:    9
 17255 ;; This function calls:
 17256 ;;		_disk_ioctl
 17257 ;;		_move_window
 17258 ;; This function is called by:
 17259 ;;		_f_sync
 17260 ;; This function uses a non-reentrant model
 17261 ;;
 17262                           
 17263                           	psect	text87
 17264  00510C                     __ptext87:
 17265                           	callstack 0
 17266  00510C                     _sync:
 17267                           	callstack 15
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;tff.c: 121: FATFS *fs = FatFs;
 17271                           
 17272                           ;incstack = 0
 17273  00510C  C036  F089         	movff	_FatFs,sync@fs
 17274  005110  C037  F08A         	movff	_FatFs+1,sync@fs+1
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;tff.c: 124: fs->winflag = 1;
 17278  005114  EE20 F01F          	lfsr	2,31
 17279  005118  5189               	movf	sync@fs& (0+255),w,b
 17280  00511A  26D9               	addwf	fsr2l,f,c
 17281  00511C  518A               	movf	(sync@fs+1)& (0+255),w,b
 17282  00511E  22DA               	addwfc	fsr2h,f,c
 17283  005120  0E01               	movlw	1
 17284  005122  6EDF               	movwf	indf2,c
 17285                           
 17286                           ; BSR set to: 0
 17287                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 17288  005124  0E00               	movlw	0
 17289  005126  6F74               	movwf	move_window@sector& (0+255),b
 17290  005128  0E00               	movlw	0
 17291  00512A  6F75               	movwf	(move_window@sector+1)& (0+255),b
 17292  00512C  0E00               	movlw	0
 17293  00512E  6F76               	movwf	(move_window@sector+2)& (0+255),b
 17294  005130  0E00               	movlw	0
 17295  005132  6F77               	movwf	(move_window@sector+3)& (0+255),b
 17296  005134  ECA0  F017         	call	_move_window	;wreg free
 17297  005138  0900               	iorlw	0
 17298  00513A  A4D8               	btfss	status,2,c
 17299  00513C  D002               	goto	l11018
 17300  00513E                     u12810:
 17301  00513E  0E08               	movlw	8
 17302  005140  0012               	return	
 17303  005142                     l11018:
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 17307  005142  0E00               	movlw	0
 17308  005144  6E1A               	movwf	disk_ioctl@cmd^0,c
 17309  005146  0E00               	movlw	0
 17310  005148  6E1B               	movwf	disk_ioctl@buff^0,c
 17311  00514A  0E00               	movlw	0
 17312  00514C  6E1C               	movwf	(disk_ioctl@buff+1)^0,c
 17313  00514E  0E00               	movlw	0
 17314  005150  EC62  F02C         	call	_disk_ioctl
 17315  005154  0900               	iorlw	0
 17316  005156  A4D8               	btfss	status,2,c
 17317  005158  D7F2               	goto	u12810
 17318                           
 17319                           ;tff.c: 143: return FR_OK;
 17320  00515A  0E00               	movlw	0
 17321  00515C  0012               	return		;funcret
 17322  00515E                     __end_of_sync:
 17323                           	callstack 0
 17324                           
 17325 ;; *************** function _move_window *****************
 17326 ;; Defined at:
 17327 ;;		line 77 in file "bibliotecas/tff.c"
 17328 ;; Parameters:    Size  Location     Type
 17329 ;;  sector          4   20[BANK0 ] unsigned long 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;  n               1   34[BANK0 ] unsigned char 
 17332 ;;  wsect           4   35[BANK0 ] unsigned long 
 17333 ;;  fs              2   39[BANK0 ] PTR struct _FATFS
 17334 ;;		 -> NULL(0), fs(544), 
 17335 ;; Return value:  Size  Location     Type
 17336 ;;                  1    wreg      enum E105
 17337 ;; Registers used:
 17338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17339 ;; Tracked objects:
 17340 ;;		On entry : 3F/0
 17341 ;;		On exit  : 3F/0
 17342 ;;		Unchanged: 0/0
 17343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17344 ;;      Params:         0       4       0       0       0       0       0       0       0
 17345 ;;      Locals:         0       7       0       0       0       0       0       0       0
 17346 ;;      Temps:          0      10       0       0       0       0       0       0       0
 17347 ;;      Totals:         0      21       0       0       0       0       0       0       0
 17348 ;;Total ram usage:       21 bytes
 17349 ;; Hardware stack levels used:    1
 17350 ;; Hardware stack levels required when called:    8
 17351 ;; This function calls:
 17352 ;;		_disk_read
 17353 ;;		_disk_write
 17354 ;; This function is called by:
 17355 ;;		_sync
 17356 ;;		_get_cluster
 17357 ;;		_put_cluster
 17358 ;;		_trace_path
 17359 ;;		_reserve_direntry
 17360 ;;		_f_open
 17361 ;;		_f_write
 17362 ;;		_f_sync
 17363 ;;		_f_read
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           	psect	text88
 17368  002F40                     __ptext88:
 17369                           	callstack 0
 17370  002F40                     _move_window:
 17371                           	callstack 14
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 17375                           
 17376                           ;incstack = 0
 17377  002F40  C036  F087         	movff	_FatFs,move_window@fs
 17378  002F44  C037  F088         	movff	_FatFs+1,move_window@fs+1
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;tff.c: 85: wsect = fs->winsect;
 17382  002F48  EE20 F004          	lfsr	2,4
 17383  002F4C  5187               	movf	move_window@fs& (0+255),w,b
 17384  002F4E  26D9               	addwf	fsr2l,f,c
 17385  002F50  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17386  002F52  22DA               	addwfc	fsr2h,f,c
 17387  002F54  CFDE F083          	movff	postinc2,move_window@wsect
 17388  002F58  CFDE F084          	movff	postinc2,move_window@wsect+1
 17389  002F5C  CFDE F085          	movff	postinc2,move_window@wsect+2
 17390  002F60  CFDE F086          	movff	postinc2,move_window@wsect+3
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;tff.c: 86: if (wsect != sector) {
 17394  002F64  5174               	movf	move_window@sector& (0+255),w,b
 17395  002F66  1983               	xorwf	move_window@wsect& (0+255),w,b
 17396  002F68  E10A               	bnz	u11670
 17397  002F6A  5175               	movf	(move_window@sector+1)& (0+255),w,b
 17398  002F6C  1984               	xorwf	(move_window@wsect+1)& (0+255),w,b
 17399  002F6E  E107               	bnz	u11670
 17400  002F70  5176               	movf	(move_window@sector+2)& (0+255),w,b
 17401  002F72  1985               	xorwf	(move_window@wsect+2)& (0+255),w,b
 17402  002F74  E104               	bnz	u11670
 17403  002F76  5177               	movf	(move_window@sector+3)& (0+255),w,b
 17404  002F78  1986               	xorwf	(move_window@wsect+3)& (0+255),w,b
 17405  002F7A  B4D8               	btfsc	status,2,c
 17406  002F7C  D0B4               	goto	l10256
 17407  002F7E                     u11670:
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 17411  002F7E  EE20 F01F          	lfsr	2,31
 17412  002F82  5187               	movf	move_window@fs& (0+255),w,b
 17413  002F84  26D9               	addwf	fsr2l,f,c
 17414  002F86  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17415  002F88  22DA               	addwfc	fsr2h,f,c
 17416  002F8A  50DF               	movf	indf2,w,c
 17417  002F8C  B4D8               	btfsc	status,2,c
 17418  002F8E  D081               	goto	l10246
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 17422  002F90  0E20               	movlw	32
 17423  002F92  2587               	addwf	move_window@fs& (0+255),w,b
 17424  002F94  6F68               	movwf	disk_write@buff& (0+255),b
 17425  002F96  0E00               	movlw	0
 17426  002F98  2188               	addwfc	(move_window@fs+1)& (0+255),w,b
 17427  002F9A  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 17428  002F9C  C083  F06A         	movff	move_window@wsect,disk_write@sector
 17429  002FA0  C084  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 17430  002FA4  C085  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 17431  002FA8  C086  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 17432  002FAC  0E01               	movlw	1
 17433  002FAE  6F6E               	movwf	disk_write@count& (0+255),b
 17434  002FB0  0E00               	movlw	0
 17435  002FB2  EC00  F029         	call	_disk_write
 17436  002FB6  0900               	iorlw	0
 17437  002FB8  B4D8               	btfsc	status,2,c
 17438  002FBA  D002               	goto	l10230
 17439  002FBC                     u11690:
 17440                           
 17441                           ; BSR set to: 0
 17442                           ;tff.c: 91: return FALSE;
 17443  002FBC  0E00               	movlw	0
 17444  002FBE  0012               	return	
 17445  002FC0                     l10230:
 17446                           
 17447                           ; BSR set to: 0
 17448                           ;tff.c: 92: fs->winflag = 0;
 17449  002FC0  EE20 F01F          	lfsr	2,31
 17450  002FC4  5187               	movf	move_window@fs& (0+255),w,b
 17451  002FC6  26D9               	addwf	fsr2l,f,c
 17452  002FC8  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17453  002FCA  22DA               	addwfc	fsr2h,f,c
 17454  002FCC  0E00               	movlw	0
 17455  002FCE  6EDF               	movwf	indf2,c
 17456                           
 17457                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 17458  002FD0  EE20 F008          	lfsr	2,8
 17459  002FD4  5187               	movf	move_window@fs& (0+255),w,b
 17460  002FD6  26D9               	addwf	fsr2l,f,c
 17461  002FD8  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17462  002FDA  22DA               	addwfc	fsr2h,f,c
 17463  002FDC  CFDE F078          	movff	postinc2,??_move_window
 17464  002FE0  CFDE F079          	movff	postinc2,??_move_window+1
 17465  002FE4  CFDE F07A          	movff	postinc2,??_move_window+2
 17466  002FE8  CFDE F07B          	movff	postinc2,??_move_window+3
 17467  002FEC  EE20 F014          	lfsr	2,20
 17468  002FF0  5187               	movf	move_window@fs& (0+255),w,b
 17469  002FF2  26D9               	addwf	fsr2l,f,c
 17470  002FF4  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17471  002FF6  22DA               	addwfc	fsr2h,f,c
 17472  002FF8  CFDE F07C          	movff	postinc2,??_move_window+4
 17473  002FFC  CFDD F07D          	movff	postdec2,??_move_window+5
 17474  003000  517C               	movf	(??_move_window+4)& (0+255),w,b
 17475  003002  2578               	addwf	??_move_window& (0+255),w,b
 17476  003004  6F7E               	movwf	(??_move_window+6)& (0+255),b
 17477  003006  517D               	movf	(??_move_window+5)& (0+255),w,b
 17478  003008  2179               	addwfc	(??_move_window+1)& (0+255),w,b
 17479  00300A  6F7F               	movwf	(??_move_window+7)& (0+255),b
 17480  00300C  0E00               	movlw	0
 17481  00300E  217A               	addwfc	(??_move_window+2)& (0+255),w,b
 17482  003010  6F80               	movwf	(??_move_window+8)& (0+255),b
 17483  003012  0E00               	movlw	0
 17484  003014  217B               	addwfc	(??_move_window+3)& (0+255),w,b
 17485  003016  6F81               	movwf	(??_move_window+9)& (0+255),b
 17486  003018  517E               	movf	(??_move_window+6)& (0+255),w,b
 17487  00301A  5D83               	subwf	move_window@wsect& (0+255),w,b
 17488  00301C  517F               	movf	(??_move_window+7)& (0+255),w,b
 17489  00301E  5984               	subwfb	(move_window@wsect+1)& (0+255),w,b
 17490  003020  5180               	movf	(??_move_window+8)& (0+255),w,b
 17491  003022  5985               	subwfb	(move_window@wsect+2)& (0+255),w,b
 17492  003024  5181               	movf	(??_move_window+9)& (0+255),w,b
 17493  003026  5986               	subwfb	(move_window@wsect+3)& (0+255),w,b
 17494  003028  B0D8               	btfsc	status,0,c
 17495  00302A  D033               	goto	l10246
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 17499  00302C  EE20 F01E          	lfsr	2,30
 17500  003030  5187               	movf	move_window@fs& (0+255),w,b
 17501  003032  26D9               	addwf	fsr2l,f,c
 17502  003034  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17503  003036  22DA               	addwfc	fsr2h,f,c
 17504  003038  50DF               	movf	indf2,w,c
 17505  00303A  6F82               	movwf	move_window@n& (0+255),b
 17506  00303C                     l10234:
 17507                           
 17508                           ; BSR set to: 0
 17509  00303C  0E02               	movlw	2
 17510  00303E  6182               	cpfslt	move_window@n& (0+255),b
 17511  003040  D001               	goto	l10238
 17512  003042  D027               	goto	l10246
 17513  003044                     l10238:
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;tff.c: 95: wsect += fs->sects_fat;
 17517  003044  EE20 F014          	lfsr	2,20
 17518  003048  5187               	movf	move_window@fs& (0+255),w,b
 17519  00304A  26D9               	addwf	fsr2l,f,c
 17520  00304C  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17521  00304E  22DA               	addwfc	fsr2h,f,c
 17522  003050  CFDE F078          	movff	postinc2,??_move_window
 17523  003054  CFDD F079          	movff	postdec2,??_move_window+1
 17524  003058  5178               	movf	??_move_window& (0+255),w,b
 17525  00305A  2783               	addwf	move_window@wsect& (0+255),f,b
 17526  00305C  5179               	movf	(??_move_window+1)& (0+255),w,b
 17527  00305E  2384               	addwfc	(move_window@wsect+1)& (0+255),f,b
 17528  003060  0E00               	movlw	0
 17529  003062  2385               	addwfc	(move_window@wsect+2)& (0+255),f,b
 17530  003064  0E00               	movlw	0
 17531  003066  2386               	addwfc	(move_window@wsect+3)& (0+255),f,b
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 17535  003068  0E20               	movlw	32
 17536  00306A  2587               	addwf	move_window@fs& (0+255),w,b
 17537  00306C  6F68               	movwf	disk_write@buff& (0+255),b
 17538  00306E  0E00               	movlw	0
 17539  003070  2188               	addwfc	(move_window@fs+1)& (0+255),w,b
 17540  003072  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 17541  003074  C083  F06A         	movff	move_window@wsect,disk_write@sector
 17542  003078  C084  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 17543  00307C  C085  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 17544  003080  C086  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 17545  003084  0E01               	movlw	1
 17546  003086  6F6E               	movwf	disk_write@count& (0+255),b
 17547  003088  0E00               	movlw	0
 17548  00308A  EC00  F029         	call	_disk_write
 17549                           
 17550                           ; BSR set to: 0
 17551  00308E  0782               	decf	move_window@n& (0+255),f,b
 17552  003090  D7D5               	goto	l10234
 17553  003092                     l10246:
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 17557  003092  5174               	movf	move_window@sector& (0+255),w,b
 17558  003094  1175               	iorwf	(move_window@sector+1)& (0+255),w,b
 17559  003096  1176               	iorwf	(move_window@sector+2)& (0+255),w,b
 17560  003098  1177               	iorwf	(move_window@sector+3)& (0+255),w,b
 17561  00309A  B4D8               	btfsc	status,2,c
 17562  00309C  D024               	goto	l10256
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 17566  00309E  0E20               	movlw	32
 17567  0030A0  2587               	addwf	move_window@fs& (0+255),w,b
 17568  0030A2  6F68               	movwf	disk_read@buff& (0+255),b
 17569  0030A4  0E00               	movlw	0
 17570  0030A6  2188               	addwfc	(move_window@fs+1)& (0+255),w,b
 17571  0030A8  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 17572  0030AA  C074  F06A         	movff	move_window@sector,disk_read@sector
 17573  0030AE  C075  F06B         	movff	move_window@sector+1,disk_read@sector+1
 17574  0030B2  C076  F06C         	movff	move_window@sector+2,disk_read@sector+2
 17575  0030B6  C077  F06D         	movff	move_window@sector+3,disk_read@sector+3
 17576  0030BA  0E01               	movlw	1
 17577  0030BC  6F6E               	movwf	disk_read@count& (0+255),b
 17578  0030BE  0E00               	movlw	0
 17579  0030C0  EC4F  F026         	call	_disk_read
 17580  0030C4  0900               	iorlw	0
 17581  0030C6  A4D8               	btfss	status,2,c
 17582  0030C8  D779               	goto	u11690
 17583                           
 17584                           ; BSR set to: 0
 17585                           ;tff.c: 104: fs->winsect = sector;
 17586  0030CA  EE20 F004          	lfsr	2,4
 17587  0030CE  5187               	movf	move_window@fs& (0+255),w,b
 17588  0030D0  26D9               	addwf	fsr2l,f,c
 17589  0030D2  5188               	movf	(move_window@fs+1)& (0+255),w,b
 17590  0030D4  22DA               	addwfc	fsr2h,f,c
 17591  0030D6  C074  FFDE         	movff	move_window@sector,postinc2
 17592  0030DA  C075  FFDE         	movff	move_window@sector+1,postinc2
 17593  0030DE  C076  FFDE         	movff	move_window@sector+2,postinc2
 17594  0030E2  C077  FFDE         	movff	move_window@sector+3,postinc2
 17595  0030E6                     l10256:
 17596                           
 17597                           ; BSR set to: 0
 17598                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 17599  0030E6  0E01               	movlw	1
 17600                           
 17601                           ; BSR set to: 0
 17602  0030E8  0012               	return		;funcret
 17603  0030EA                     __end_of_move_window:
 17604                           	callstack 0
 17605                           
 17606 ;; *************** function _disk_write *****************
 17607 ;; Defined at:
 17608 ;;		line 150 in file "bibliotecas/diskio.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;  pdrv            1    wreg     unsigned char 
 17611 ;;  buff            2    8[BANK0 ] PTR const unsigned char 
 17612 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17613 ;;  sector          4   10[BANK0 ] unsigned long 
 17614 ;;  count           1   14[BANK0 ] unsigned char 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  pdrv            1   16[BANK0 ] unsigned char 
 17617 ;;  result          2   17[BANK0 ] int 
 17618 ;;  res             1   19[BANK0 ] enum E25
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      enum E25
 17621 ;; Registers used:
 17622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17623 ;; Tracked objects:
 17624 ;;		On entry : 3F/0
 17625 ;;		On exit  : 3F/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17628 ;;      Params:         0       7       0       0       0       0       0       0       0
 17629 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17630 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17631 ;;      Totals:         0      12       0       0       0       0       0       0       0
 17632 ;;Total ram usage:       12 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    7
 17635 ;; This function calls:
 17636 ;;		_sdc_disk_write
 17637 ;; This function is called by:
 17638 ;;		_move_window
 17639 ;;		_reserve_direntry
 17640 ;;		_f_write
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text89
 17645  005200                     __ptext89:
 17646                           	callstack 0
 17647  005200                     _disk_write:
 17648                           	callstack 14
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;incstack = 0
 17652                           ;disk_write@pdrv stored from wreg
 17653  005200  6F70               	movwf	disk_write@pdrv& (0+255),b
 17654                           
 17655                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 17656  005202  D018               	goto	l10110
 17657  005204                     l10088:
 17658                           
 17659                           ; BSR set to: 0
 17660                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 17661  005204  C068  F026         	movff	disk_write@buff,sdc_disk_write@p_buff
 17662  005208  C069  F027         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 17663  00520C  C06A  F028         	movff	disk_write@sector,sdc_disk_write@sector
 17664  005210  C06B  F029         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 17665  005214  C06C  F02A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 17666  005218  C06D  F02B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 17667  00521C  C06E  F02C         	movff	disk_write@count,sdc_disk_write@count
 17668  005220  ECC5  F016         	call	_sdc_disk_write	;wreg free
 17669  005224  6F6F               	movwf	??_disk_write& (0+255),b
 17670  005226  516F               	movf	??_disk_write& (0+255),w,b
 17671  005228  6F71               	movwf	disk_write@result& (0+255),b
 17672  00522A  6B72               	clrf	(disk_write@result+1)& (0+255),b
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;diskio.c: 165: res = result;
 17676  00522C  C071  F073         	movff	disk_write@result,disk_write@res
 17677  005230                     l10092:
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;diskio.c: 168: return res;
 17681  005230  5173               	movf	disk_write@res& (0+255),w,b
 17682  005232  0012               	return	
 17683  005234                     l10110:
 17684  005234  0100               	movlb	0	; () banked
 17685  005236  5170               	movf	disk_write@pdrv& (0+255),w,b
 17686                           
 17687                           ; Switch size 1, requested type "simple"
 17688                           ; Number of cases is 3, Range of values is 0 to 2
 17689                           ; switch strategies available:
 17690                           ; Name         Instructions Cycles
 17691                           ; simple_byte           10     6 (average)
 17692                           ;	Chosen strategy is simple_byte
 17693  005238  0A00               	xorlw	0	; case 0
 17694  00523A  B4D8               	btfsc	status,2,c
 17695  00523C  D7E3               	goto	l10088
 17696  00523E  0A01               	xorlw	1	; case 1
 17697  005240  B4D8               	btfsc	status,2,c
 17698  005242  D7E0               	goto	l10088
 17699  005244  0A03               	xorlw	3	; case 2
 17700  005246  B4D8               	btfsc	status,2,c
 17701  005248  D7F3               	goto	l10092
 17702                           
 17703                           ; BSR set to: 0
 17704                           ;diskio.c: 189: return RES_PARERR;
 17705  00524A  0E04               	movlw	4
 17706                           
 17707                           ; BSR set to: 0
 17708  00524C  0012               	return		;funcret
 17709  00524E                     __end_of_disk_write:
 17710                           	callstack 0
 17711                           
 17712 ;; *************** function _sdc_disk_write *****************
 17713 ;; Defined at:
 17714 ;;		line 509 in file "bibliotecas/diskio.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  p_buff          2   37[COMRAM] PTR const unsigned char 
 17717 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17718 ;;  sector          4   39[COMRAM] unsigned long 
 17719 ;;  count           1   43[COMRAM] unsigned char 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;  j               2    5[BANK0 ] int 
 17722 ;;  count1          2    2[BANK0 ] int 
 17723 ;;  i               2    0        int 
 17724 ;;  buff            1    7[BANK0 ] unsigned char 
 17725 ;;  res             1    4[BANK0 ] enum E25
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  1    wreg      enum E25
 17728 ;; Registers used:
 17729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 3F/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17735 ;;      Params:         7       0       0       0       0       0       0       0       0
 17736 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17737 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17738 ;;      Totals:        11       8       0       0       0       0       0       0       0
 17739 ;;Total ram usage:       19 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:    6
 17742 ;; This function calls:
 17743 ;;		_command
 17744 ;;		_dummy_clocks
 17745 ;;		_escreve_SPI
 17746 ;;		_leitura_SPI
 17747 ;;		_proceed
 17748 ;;		_response
 17749 ;; This function is called by:
 17750 ;;		_disk_write
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text90
 17755  002D8A                     __ptext90:
 17756                           	callstack 0
 17757  002D8A                     _sdc_disk_write:
 17758                           	callstack 14
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;incstack = 0
 17762  002D8A  0E00               	movlw	0
 17763  002D8C  0100               	movlb	0	; () banked
 17764  002D8E  6F63               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 17765  002D90  0E00               	movlw	0
 17766  002D92  6F62               	movwf	sdc_disk_write@count1& (0+255),b
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;diskio.c: 515: if(count>1)
 17770  002D94  0E01               	movlw	1
 17771  002D96  642C               	cpfsgt	sdc_disk_write@count^0,c
 17772  002D98  D069               	goto	l144
 17773                           
 17774                           ; BSR set to: 0
 17775                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 17776  002D9A  9E8B               	bcf	139,7,c	;volatile
 17777                           
 17778                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 17779  002D9C  9A8A               	bcf	138,5,c	;volatile
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;diskio.c: 519: dummy_clocks(10);
 17783  002D9E  0E0A               	movlw	10
 17784  002DA0  ECBC  F02A         	call	_dummy_clocks
 17785                           
 17786                           ;diskio.c: 520: command(0X57, count, 0XFF);
 17787  002DA4  502C               	movf	sdc_disk_write@count^0,w,c
 17788  002DA6  6E1F               	movwf	command@arg^0,c
 17789  002DA8  6A20               	clrf	(command@arg+1)^0,c
 17790  002DAA  6A21               	clrf	(command@arg+2)^0,c
 17791  002DAC  6A22               	clrf	(command@arg+3)^0,c
 17792  002DAE  0EFF               	movlw	255
 17793  002DB0  6E23               	movwf	command@CRC^0,c
 17794  002DB2  0E57               	movlw	87
 17795  002DB4  ECD7  F027         	call	_command
 17796                           
 17797                           ;diskio.c: 521: proceed();
 17798  002DB8  EC0A  F02D         	call	_proceed	;wreg free
 17799  002DBC                     l9976:
 17800                           
 17801                           ;diskio.c: 523: buff = response();
 17802  002DBC  EC04  F02D         	call	_response	;wreg free
 17803  002DC0  0100               	movlb	0	; () banked
 17804  002DC2  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;diskio.c: 524: }while(buff!=0X00);
 17808  002DC4  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17809  002DC6  A4D8               	btfss	status,2,c
 17810  002DC8  D7F9               	goto	l9976
 17811                           
 17812                           ; BSR set to: 0
 17813                           ;diskio.c: 526: dummy_clocks(10);
 17814  002DCA  0E0A               	movlw	10
 17815  002DCC  ECBC  F02A         	call	_dummy_clocks
 17816                           
 17817                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 17818  002DD0  C028  F02D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17819  002DD4  C029  F02E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17820  002DD8  C02A  F02F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17821  002DDC  C02B  F030         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17822  002DE0  0E09               	movlw	9
 17823  002DE2                     u11425:
 17824  002DE2  90D8               	bcf	status,0,c
 17825  002DE4  362D               	rlcf	??_sdc_disk_write^0,f,c
 17826  002DE6  362E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 17827  002DE8  362F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 17828  002DEA  3630               	rlcf	(??_sdc_disk_write+3)^0,f,c
 17829  002DEC  2EE8               	decfsz	wreg,f,c
 17830  002DEE  D7F9               	goto	u11425
 17831  002DF0  C02D  F01F         	movff	??_sdc_disk_write,command@arg
 17832  002DF4  C02E  F020         	movff	??_sdc_disk_write+1,command@arg+1
 17833  002DF8  C02F  F021         	movff	??_sdc_disk_write+2,command@arg+2
 17834  002DFC  C030  F022         	movff	??_sdc_disk_write+3,command@arg+3
 17835  002E00  0EFF               	movlw	255
 17836  002E02  6E23               	movwf	command@CRC^0,c
 17837  002E04  0E59               	movlw	89
 17838  002E06  ECD7  F027         	call	_command
 17839                           
 17840                           ;diskio.c: 528: proceed();
 17841  002E0A  EC0A  F02D         	call	_proceed	;wreg free
 17842  002E0E                     l9984:
 17843                           
 17844                           ;diskio.c: 530: buff = response();
 17845  002E0E  EC04  F02D         	call	_response	;wreg free
 17846  002E12  0100               	movlb	0	; () banked
 17847  002E14  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;diskio.c: 531: }while(buff!=0X00);
 17851  002E16  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17852  002E18  A4D8               	btfss	status,2,c
 17853  002E1A  D7F9               	goto	l9984
 17854                           
 17855                           ; BSR set to: 0
 17856                           ;diskio.c: 533: dummy_clocks(1);
 17857  002E1C  0E01               	movlw	1
 17858  002E1E  ECBC  F02A         	call	_dummy_clocks
 17859                           
 17860                           ;diskio.c: 534: escreve_SPI(0XFC);
 17861  002E22  0EFC               	movlw	252
 17862  002E24  ECE6  F02C         	call	_escreve_SPI
 17863                           
 17864                           ;diskio.c: 535: for(j=0;j<512;j++)
 17865  002E28  0E00               	movlw	0
 17866  002E2A  0100               	movlb	0	; () banked
 17867  002E2C  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17868  002E2E  0E00               	movlw	0
 17869  002E30  6F65               	movwf	sdc_disk_write@j& (0+255),b
 17870  002E32                     l9998:
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 17874  002E32  C026  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17875  002E36  C027  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17876  002E3A  50DF               	movf	indf2,w,c
 17877  002E3C  ECE6  F02C         	call	_escreve_SPI
 17878                           
 17879                           ;diskio.c: 538: p_buff++;
 17880  002E40  4A26               	infsnz	sdc_disk_write@p_buff^0,f,c
 17881  002E42  2A27               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17882  002E44  0100               	movlb	0	; () banked
 17883  002E46  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 17884  002E48  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17885                           
 17886                           ; BSR set to: 0
 17887  002E4A  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17888  002E4C  D7F2               	goto	l9998
 17889  002E4E  0E02               	movlw	2
 17890  002E50  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17891  002E52  A0D8               	btfss	status,0,c
 17892  002E54  D7EE               	goto	l9998
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 17896  002E56  EC10  F02D         	call	_leitura_SPI	;wreg free
 17897                           
 17898                           ;diskio.c: 541: leitura_SPI();
 17899  002E5A  EC10  F02D         	call	_leitura_SPI	;wreg free
 17900                           
 17901                           ;diskio.c: 543: dummy_clocks(1);
 17902  002E5E  0E01               	movlw	1
 17903  002E60  ECBC  F02A         	call	_dummy_clocks
 17904                           
 17905                           ;diskio.c: 544: escreve_SPI(0XFD);
 17906  002E64  0EFD               	movlw	253
 17907  002E66  ECE6  F02C         	call	_escreve_SPI
 17908                           
 17909                           ;diskio.c: 546: }
 17910  002E6A  D067               	goto	u11480
 17911  002E6C                     l144:
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 17915  002E6C  9E8B               	bcf	139,7,c	;volatile
 17916                           
 17917                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 17918  002E6E  9A8A               	bcf	138,5,c	;volatile
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;diskio.c: 551: dummy_clocks(10);
 17922  002E70  0E0A               	movlw	10
 17923  002E72  ECBC  F02A         	call	_dummy_clocks
 17924                           
 17925                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 17926  002E76  C028  F02D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17927  002E7A  C029  F02E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17928  002E7E  C02A  F02F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17929  002E82  C02B  F030         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17930  002E86  0E09               	movlw	9
 17931  002E88                     u11455:
 17932  002E88  90D8               	bcf	status,0,c
 17933  002E8A  362D               	rlcf	??_sdc_disk_write^0,f,c
 17934  002E8C  362E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 17935  002E8E  362F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 17936  002E90  3630               	rlcf	(??_sdc_disk_write+3)^0,f,c
 17937  002E92  2EE8               	decfsz	wreg,f,c
 17938  002E94  D7F9               	goto	u11455
 17939  002E96  C02D  F01F         	movff	??_sdc_disk_write,command@arg
 17940  002E9A  C02E  F020         	movff	??_sdc_disk_write+1,command@arg+1
 17941  002E9E  C02F  F021         	movff	??_sdc_disk_write+2,command@arg+2
 17942  002EA2  C030  F022         	movff	??_sdc_disk_write+3,command@arg+3
 17943  002EA6  0E00               	movlw	0
 17944  002EA8  6E23               	movwf	command@CRC^0,c
 17945  002EAA  0E58               	movlw	88
 17946  002EAC  ECD7  F027         	call	_command
 17947                           
 17948                           ;diskio.c: 553: proceed();
 17949  002EB0  EC0A  F02D         	call	_proceed	;wreg free
 17950  002EB4                     l10016:
 17951                           
 17952                           ;diskio.c: 555: buff = response();
 17953  002EB4  EC04  F02D         	call	_response	;wreg free
 17954  002EB8  0100               	movlb	0	; () banked
 17955  002EBA  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;diskio.c: 556: }while(buff!=0X00);
 17959  002EBC  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17960  002EBE  A4D8               	btfss	status,2,c
 17961  002EC0  D7F9               	goto	l10016
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 17965  002EC2  9A8A               	bcf	138,5,c	;volatile
 17966                           
 17967                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 17968  002EC4  9E8B               	bcf	139,7,c	;volatile
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;diskio.c: 560: dummy_clocks(1);
 17972  002EC6  0E01               	movlw	1
 17973  002EC8  ECBC  F02A         	call	_dummy_clocks
 17974                           
 17975                           ;diskio.c: 561: escreve_SPI(0XFE);
 17976  002ECC  0EFE               	movlw	254
 17977  002ECE  ECE6  F02C         	call	_escreve_SPI
 17978                           
 17979                           ;diskio.c: 562: for(j=0;j<512;j++)
 17980  002ED2  0E00               	movlw	0
 17981  002ED4  0100               	movlb	0	; () banked
 17982  002ED6  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17983  002ED8  0E00               	movlw	0
 17984  002EDA  6F65               	movwf	sdc_disk_write@j& (0+255),b
 17985  002EDC                     l10030:
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 17989  002EDC  C026  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17990  002EE0  C027  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17991  002EE4  50DF               	movf	indf2,w,c
 17992  002EE6  ECE6  F02C         	call	_escreve_SPI
 17993                           
 17994                           ;diskio.c: 565: p_buff++;
 17995  002EEA  4A26               	infsnz	sdc_disk_write@p_buff^0,f,c
 17996  002EEC  2A27               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17997  002EEE  0100               	movlb	0	; () banked
 17998  002EF0  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 17999  002EF2  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 18000                           
 18001                           ; BSR set to: 0
 18002  002EF4  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 18003  002EF6  D7F2               	goto	l10030
 18004  002EF8  0E02               	movlw	2
 18005  002EFA  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 18006  002EFC  A0D8               	btfss	status,0,c
 18007  002EFE  D7EE               	goto	l10030
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 18011  002F00  EC10  F02D         	call	_leitura_SPI	;wreg free
 18012                           
 18013                           ;diskio.c: 568: leitura_SPI();
 18014  002F04  EC10  F02D         	call	_leitura_SPI	;wreg free
 18015                           
 18016                           ;diskio.c: 570: dummy_clocks(10);
 18017  002F08  0E0A               	movlw	10
 18018  002F0A  ECBC  F02A         	call	_dummy_clocks
 18019                           
 18020                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 18021  002F0E  0E00               	movlw	0
 18022  002F10  6E1F               	movwf	command@arg^0,c
 18023  002F12  0E00               	movlw	0
 18024  002F14  6E20               	movwf	(command@arg+1)^0,c
 18025  002F16  0E00               	movlw	0
 18026  002F18  6E21               	movwf	(command@arg+2)^0,c
 18027  002F1A  0E00               	movlw	0
 18028  002F1C  6E22               	movwf	(command@arg+3)^0,c
 18029  002F1E  0E00               	movlw	0
 18030  002F20  6E23               	movwf	command@CRC^0,c
 18031  002F22  0E4D               	movlw	77
 18032  002F24  ECD7  F027         	call	_command
 18033                           
 18034                           ;diskio.c: 572: proceed();
 18035  002F28  EC0A  F02D         	call	_proceed	;wreg free
 18036  002F2C                     l10046:
 18037                           
 18038                           ;diskio.c: 574: buff = response();
 18039  002F2C  EC04  F02D         	call	_response	;wreg free
 18040  002F30  0100               	movlb	0	; () banked
 18041  002F32  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;diskio.c: 575: }while(buff!=0X00 );
 18045  002F34  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 18046  002F36  A4D8               	btfss	status,2,c
 18047  002F38  D7F9               	goto	l10046
 18048  002F3A                     u11480:
 18049                           
 18050                           ;diskio.c: 576: };diskio.c: 577: return res;
 18051  002F3A  0100               	movlb	0	; () banked
 18052  002F3C  5164               	movf	sdc_disk_write@res& (0+255),w,b
 18053                           
 18054                           ; BSR set to: 0
 18055  002F3E  0012               	return		;funcret
 18056  002F40                     __end_of_sdc_disk_write:
 18057                           	callstack 0
 18058                           
 18059 ;; *************** function _disk_read *****************
 18060 ;; Defined at:
 18061 ;;		line 97 in file "bibliotecas/diskio.c"
 18062 ;; Parameters:    Size  Location     Type
 18063 ;;  pdrv            1    wreg     unsigned char 
 18064 ;;  buff            2    8[BANK0 ] PTR unsigned char 
 18065 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 18066 ;;  sector          4   10[BANK0 ] unsigned long 
 18067 ;;  count           1   14[BANK0 ] unsigned char 
 18068 ;; Auto vars:     Size  Location     Type
 18069 ;;  pdrv            1   16[BANK0 ] unsigned char 
 18070 ;;  result          2   17[BANK0 ] int 
 18071 ;;  res             1   19[BANK0 ] enum E25
 18072 ;; Return value:  Size  Location     Type
 18073 ;;                  1    wreg      enum E25
 18074 ;; Registers used:
 18075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18076 ;; Tracked objects:
 18077 ;;		On entry : 3F/0
 18078 ;;		On exit  : 3F/0
 18079 ;;		Unchanged: 0/0
 18080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18081 ;;      Params:         0       7       0       0       0       0       0       0       0
 18082 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18083 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18084 ;;      Totals:         0      12       0       0       0       0       0       0       0
 18085 ;;Total ram usage:       12 bytes
 18086 ;; Hardware stack levels used:    1
 18087 ;; Hardware stack levels required when called:    7
 18088 ;; This function calls:
 18089 ;;		_sdc_disk_read
 18090 ;; This function is called by:
 18091 ;;		_move_window
 18092 ;;		_check_fs
 18093 ;;		_f_read
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           	psect	text91
 18098  004C9E                     __ptext91:
 18099                           	callstack 0
 18100  004C9E                     _disk_read:
 18101                           	callstack 14
 18102                           
 18103                           ; BSR set to: 0
 18104                           ;incstack = 0
 18105                           ;disk_read@pdrv stored from wreg
 18106  004C9E  6F70               	movwf	disk_read@pdrv& (0+255),b
 18107                           
 18108                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 18109  004CA0  D029               	goto	l10080
 18110  004CA2                     l10056:
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 18114  004CA2  C068  F026         	movff	disk_read@buff,sdc_disk_read@p_buff
 18115  004CA6  C069  F027         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 18116  004CAA  C06A  F028         	movff	disk_read@sector,sdc_disk_read@sector
 18117  004CAE  C06B  F029         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 18118  004CB2  C06C  F02A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 18119  004CB6  C06D  F02B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 18120  004CBA  C06E  F02C         	movff	disk_read@count,sdc_disk_read@count
 18121  004CBE  EC1F  F01D         	call	_sdc_disk_read	;wreg free
 18122  004CC2  6F6F               	movwf	??_disk_read& (0+255),b
 18123  004CC4  516F               	movf	??_disk_read& (0+255),w,b
 18124  004CC6  6F71               	movwf	disk_read@result& (0+255),b
 18125  004CC8  6B72               	clrf	(disk_read@result+1)& (0+255),b
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;diskio.c: 115: res = result;
 18129  004CCA  C071  F073         	movff	disk_read@result,disk_read@res
 18130  004CCE                     l10060:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;diskio.c: 117: return res;
 18134  004CCE  5173               	movf	disk_read@res& (0+255),w,b
 18135  004CD0  0012               	return	
 18136  004CD2                     l10064:
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 18140  004CD2  C068  F026         	movff	disk_read@buff,sdc_disk_read@p_buff
 18141  004CD6  C069  F027         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 18142  004CDA  C06A  F028         	movff	disk_read@sector,sdc_disk_read@sector
 18143  004CDE  C06B  F029         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 18144  004CE2  C06C  F02A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 18145  004CE6  C06D  F02B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 18146  004CEA  C06E  F02C         	movff	disk_read@count,sdc_disk_read@count
 18147  004CEE  EC1F  F01D         	call	_sdc_disk_read	;wreg free
 18148  004CF2  D7E7               	goto	L10
 18149  004CF4                     l10080:
 18150  004CF4  0100               	movlb	0	; () banked
 18151  004CF6  5170               	movf	disk_read@pdrv& (0+255),w,b
 18152                           
 18153                           ; Switch size 1, requested type "simple"
 18154                           ; Number of cases is 3, Range of values is 0 to 2
 18155                           ; switch strategies available:
 18156                           ; Name         Instructions Cycles
 18157                           ; simple_byte           10     6 (average)
 18158                           ;	Chosen strategy is simple_byte
 18159  004CF8  0A00               	xorlw	0	; case 0
 18160  004CFA  B4D8               	btfsc	status,2,c
 18161  004CFC  D7D2               	goto	l10056
 18162  004CFE  0A01               	xorlw	1	; case 1
 18163  004D00  B4D8               	btfsc	status,2,c
 18164  004D02  D7E7               	goto	l10064
 18165  004D04  0A03               	xorlw	3	; case 2
 18166  004D06  B4D8               	btfsc	status,2,c
 18167  004D08  D7E2               	goto	l10060
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;diskio.c: 141: return RES_PARERR;
 18171  004D0A  0E04               	movlw	4
 18172                           
 18173                           ; BSR set to: 0
 18174  004D0C  0012               	return		;funcret
 18175  004D0E                     __end_of_disk_read:
 18176                           	callstack 0
 18177                           
 18178 ;; *************** function _sdc_disk_read *****************
 18179 ;; Defined at:
 18180 ;;		line 439 in file "bibliotecas/diskio.c"
 18181 ;; Parameters:    Size  Location     Type
 18182 ;;  p_buff          2   37[COMRAM] PTR unsigned char 
 18183 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 18184 ;;  sector          4   39[COMRAM] unsigned long 
 18185 ;;  count           1   43[COMRAM] unsigned char 
 18186 ;; Auto vars:     Size  Location     Type
 18187 ;;  start_add       4    1[BANK0 ] unsigned long 
 18188 ;;  length          2    5[BANK0 ] int 
 18189 ;;  count1          2    0        int 
 18190 ;;  i               2    0        int 
 18191 ;;  buff            1    7[BANK0 ] unsigned char 
 18192 ;;  ptr             1    0        unsigned char 
 18193 ;;  res             1    0        enum E25
 18194 ;; Return value:  Size  Location     Type
 18195 ;;                  1    wreg      enum E25
 18196 ;; Registers used:
 18197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18198 ;; Tracked objects:
 18199 ;;		On entry : 0/0
 18200 ;;		On exit  : 3F/0
 18201 ;;		Unchanged: 0/0
 18202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18203 ;;      Params:         7       0       0       0       0       0       0       0       0
 18204 ;;      Locals:         0       8       0       0       0       0       0       0       0
 18205 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18206 ;;      Totals:        11       8       0       0       0       0       0       0       0
 18207 ;;Total ram usage:       19 bytes
 18208 ;; Hardware stack levels used:    1
 18209 ;; Hardware stack levels required when called:    6
 18210 ;; This function calls:
 18211 ;;		_command
 18212 ;;		_dummy_clocks
 18213 ;;		_proceed
 18214 ;;		_response
 18215 ;; This function is called by:
 18216 ;;		_disk_read
 18217 ;; This function uses a non-reentrant model
 18218 ;;
 18219                           
 18220                           	psect	text92
 18221  003A3E                     __ptext92:
 18222                           	callstack 0
 18223  003A3E                     _sdc_disk_read:
 18224                           	callstack 14
 18225                           
 18226                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;incstack = 0
 18230  003A3E  0E0A               	movlw	10
 18231  003A40  ECBC  F02A         	call	_dummy_clocks
 18232                           
 18233                           ;diskio.c: 452: start_add = sector*512;
 18234  003A44  C028  F02D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 18235  003A48  C029  F02E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 18236  003A4C  C02A  F02F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 18237  003A50  C02B  F030         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 18238  003A54  0E09               	movlw	9
 18239  003A56                     u11335:
 18240  003A56  90D8               	bcf	status,0,c
 18241  003A58  362D               	rlcf	??_sdc_disk_read^0,f,c
 18242  003A5A  362E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 18243  003A5C  362F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 18244  003A5E  3630               	rlcf	(??_sdc_disk_read+3)^0,f,c
 18245  003A60  2EE8               	decfsz	wreg,f,c
 18246  003A62  D7F9               	goto	u11335
 18247  003A64  C02D  F061         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 18248  003A68  C02E  F062         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 18249  003A6C  C02F  F063         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 18250  003A70  C030  F064         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 18251                           
 18252                           ;diskio.c: 455: if(sector != 1)
 18253  003A74  0428               	decf	sdc_disk_read@sector^0,w,c
 18254  003A76  1029               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 18255  003A78  102A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 18256  003A7A  102B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 18257  003A7C  B4D8               	btfsc	status,2,c
 18258  003A7E  D01C               	goto	l9926
 18259                           
 18260                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 18261  003A80  0E0A               	movlw	10
 18262  003A82  ECBC  F02A         	call	_dummy_clocks
 18263                           
 18264                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 18265  003A86  C061  F01F         	movff	sdc_disk_read@start_add,command@arg
 18266  003A8A  C062  F020         	movff	sdc_disk_read@start_add+1,command@arg+1
 18267  003A8E  C063  F021         	movff	sdc_disk_read@start_add+2,command@arg+2
 18268  003A92  C064  F022         	movff	sdc_disk_read@start_add+3,command@arg+3
 18269  003A96  0E00               	movlw	0
 18270  003A98  6E23               	movwf	command@CRC^0,c
 18271  003A9A  0E52               	movlw	82
 18272  003A9C  ECD7  F027         	call	_command
 18273                           
 18274                           ;diskio.c: 459: proceed();
 18275  003AA0  EC0A  F02D         	call	_proceed	;wreg free
 18276  003AA4                     l9920:
 18277                           
 18278                           ;diskio.c: 461: buff = response();
 18279  003AA4  EC04  F02D         	call	_response	;wreg free
 18280  003AA8  0100               	movlb	0	; () banked
 18281  003AAA  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;diskio.c: 462: }while(buff!=0X00);
 18285  003AAC  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 18286  003AAE  A4D8               	btfss	status,2,c
 18287  003AB0  D7F9               	goto	l9920
 18288  003AB2                     u11350:
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;diskio.c: 463: proceed();
 18292  003AB2  EC0A  F02D         	call	_proceed	;wreg free
 18293                           
 18294                           ;diskio.c: 464: }
 18295  003AB6  D01E               	goto	l9938
 18296  003AB8                     l9926:
 18297                           
 18298                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 18299  003AB8  0E0A               	movlw	10
 18300  003ABA  ECBC  F02A         	call	_dummy_clocks
 18301                           
 18302                           ;diskio.c: 468: command(0X51,sector ,0X00);
 18303  003ABE  C028  F01F         	movff	sdc_disk_read@sector,command@arg
 18304  003AC2  C029  F020         	movff	sdc_disk_read@sector+1,command@arg+1
 18305  003AC6  C02A  F021         	movff	sdc_disk_read@sector+2,command@arg+2
 18306  003ACA  C02B  F022         	movff	sdc_disk_read@sector+3,command@arg+3
 18307  003ACE  0E00               	movlw	0
 18308  003AD0  6E23               	movwf	command@CRC^0,c
 18309  003AD2  0E51               	movlw	81
 18310  003AD4  ECD7  F027         	call	_command
 18311                           
 18312                           ;diskio.c: 469: proceed();
 18313  003AD8  EC0A  F02D         	call	_proceed	;wreg free
 18314  003ADC                     l9930:
 18315                           
 18316                           ;diskio.c: 471: buff = response();
 18317  003ADC  EC04  F02D         	call	_response	;wreg free
 18318  003AE0  0100               	movlb	0	; () banked
 18319  003AE2  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;diskio.c: 472: }while(buff!=0X00);
 18323  003AE4  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 18324  003AE6  B4D8               	btfsc	status,2,c
 18325  003AE8  D7E4               	goto	u11350
 18326  003AEA  D7F8               	goto	l9930
 18327  003AEC                     l9936:
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 18331  003AEC  EC04  F02D         	call	_response	;wreg free
 18332  003AF0  0100               	movlb	0	; () banked
 18333  003AF2  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 18334  003AF4                     l9938:
 18335  003AF4  0EFE               	movlw	254
 18336  003AF6  0100               	movlb	0	; () banked
 18337  003AF8  1967               	xorwf	sdc_disk_read@buff& (0+255),w,b
 18338  003AFA  A4D8               	btfss	status,2,c
 18339  003AFC  D7F7               	goto	l9936
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 18343  003AFE  0E00               	movlw	0
 18344  003B00  6F66               	movwf	(sdc_disk_read@length+1)& (0+255),b
 18345  003B02  0E00               	movlw	0
 18346  003B04  6F65               	movwf	sdc_disk_read@length& (0+255),b
 18347                           
 18348                           ;diskio.c: 484: while ( length < 512 )
 18349  003B06  D00C               	goto	l9946
 18350  003B08                     l9942:
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 18354  003B08  5165               	movf	sdc_disk_read@length& (0+255),w,b
 18355  003B0A  2426               	addwf	sdc_disk_read@p_buff^0,w,c
 18356  003B0C  6ED9               	movwf	fsr2l,c
 18357  003B0E  5166               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 18358  003B10  2027               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 18359  003B12  6EDA               	movwf	fsr2h,c
 18360  003B14  EC04  F02D         	call	_response	;wreg free
 18361  003B18  6EDF               	movwf	indf2,c
 18362                           
 18363                           ;diskio.c: 487: length++;
 18364  003B1A  0100               	movlb	0	; () banked
 18365  003B1C  4B65               	infsnz	sdc_disk_read@length& (0+255),f,b
 18366  003B1E  2B66               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 18367  003B20                     l9946:
 18368                           
 18369                           ; BSR set to: 0
 18370  003B20  BF66               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 18371  003B22  D7F2               	goto	l9942
 18372  003B24  0E02               	movlw	2
 18373  003B26  5D66               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 18374  003B28  A0D8               	btfss	status,0,c
 18375  003B2A  D7EE               	goto	l9942
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;diskio.c: 491: dummy_clocks(10);
 18379                           
 18380                           ; BSR set to: 0
 18381  003B2C  0E0A               	movlw	10
 18382  003B2E  ECBC  F02A         	call	_dummy_clocks
 18383                           
 18384                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 18385  003B32  0E00               	movlw	0
 18386  003B34  6E1F               	movwf	command@arg^0,c
 18387  003B36  0E00               	movlw	0
 18388  003B38  6E20               	movwf	(command@arg+1)^0,c
 18389  003B3A  0E00               	movlw	0
 18390  003B3C  6E21               	movwf	(command@arg+2)^0,c
 18391  003B3E  0E00               	movlw	0
 18392  003B40  6E22               	movwf	(command@arg+3)^0,c
 18393  003B42  0E00               	movlw	0
 18394  003B44  6E23               	movwf	command@CRC^0,c
 18395  003B46  0E4C               	movlw	76
 18396  003B48  ECD7  F027         	call	_command
 18397                           
 18398                           ;diskio.c: 494: proceed();
 18399  003B4C  EC0A  F02D         	call	_proceed	;wreg free
 18400  003B50                     l9956:
 18401                           
 18402                           ;diskio.c: 496: buff = response();
 18403  003B50  EC04  F02D         	call	_response	;wreg free
 18404  003B54  0100               	movlb	0	; () banked
 18405  003B56  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;diskio.c: 497: }while(buff!=0xFF);
 18409  003B58  2967               	incf	sdc_disk_read@buff& (0+255),w,b
 18410  003B5A  A4D8               	btfss	status,2,c
 18411  003B5C  D7F9               	goto	l9956
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;diskio.c: 500: return RES_OK;
 18415                           
 18416                           ; BSR set to: 0
 18417  003B5E  0E00               	movlw	0
 18418                           
 18419                           ; BSR set to: 0
 18420  003B60  0012               	return		;funcret
 18421  003B62                     __end_of_sdc_disk_read:
 18422                           	callstack 0
 18423                           
 18424 ;; *************** function _response *****************
 18425 ;; Defined at:
 18426 ;;		line 61 in file "bibliotecas/SDCard.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;		None
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  buff            1   25[COMRAM] unsigned char 
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  1    wreg      unsigned char 
 18433 ;; Registers used:
 18434 ;;		wreg, status,2, cstack
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18440 ;;      Params:         0       0       0       0       0       0       0       0       0
 18441 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18443 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18444 ;;Total ram usage:        1 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; Hardware stack levels required when called:    4
 18447 ;; This function calls:
 18448 ;;		_leitura_SPI
 18449 ;; This function is called by:
 18450 ;;		_sdc_reset
 18451 ;;		_sdc_disk_initialize
 18452 ;;		_sdc_disk_read
 18453 ;;		_sdc_disk_write
 18454 ;; This function uses a non-reentrant model
 18455 ;;
 18456                           
 18457                           	psect	text93
 18458  005A08                     __ptext93:
 18459                           	callstack 0
 18460  005A08                     _response:
 18461                           	callstack 15
 18462                           
 18463                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;incstack = 0
 18467  005A08  9A8A               	bcf	138,5,c	;volatile
 18468                           
 18469                           ;SDCard.c: 65: buff= leitura_SPI();
 18470  005A0A  EC10  F02D         	call	_leitura_SPI	;wreg free
 18471  005A0E  6E1A               	movwf	response@buff^0,c
 18472                           
 18473                           ;SDCard.c: 66: return buff;
 18474  005A10  501A               	movf	response@buff^0,w,c
 18475  005A12  0012               	return		;funcret
 18476  005A14                     __end_of_response:
 18477                           	callstack 0
 18478                           
 18479 ;; *************** function _proceed *****************
 18480 ;; Defined at:
 18481 ;;		line 94 in file "bibliotecas/SDCard.c"
 18482 ;; Parameters:    Size  Location     Type
 18483 ;;		None
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;		None
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  1    wreg      void 
 18488 ;; Registers used:
 18489 ;;		wreg, cstack
 18490 ;; Tracked objects:
 18491 ;;		On entry : 0/0
 18492 ;;		On exit  : 0/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18495 ;;      Params:         0       0       0       0       0       0       0       0       0
 18496 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18498 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18499 ;;Total ram usage:        0 bytes
 18500 ;; Hardware stack levels used:    1
 18501 ;; Hardware stack levels required when called:    4
 18502 ;; This function calls:
 18503 ;;		_escreve_SPI
 18504 ;; This function is called by:
 18505 ;;		_sdc_reset
 18506 ;;		_sdc_disk_initialize
 18507 ;;		_sdc_disk_read
 18508 ;;		_sdc_disk_write
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512                           	psect	text94
 18513  005A14                     __ptext94:
 18514                           	callstack 0
 18515  005A14                     _proceed:
 18516                           	callstack 15
 18517                           
 18518                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 18519                           
 18520                           ;incstack = 0
 18521  005A14  9A8A               	bcf	138,5,c	;volatile
 18522                           
 18523                           ;SDCard.c: 97: escreve_SPI(0xFF);
 18524  005A16  0EFF               	movlw	255
 18525  005A18  ECE6  F02C         	call	_escreve_SPI
 18526                           
 18527                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 18528  005A1C  8A8A               	bsf	138,5,c	;volatile
 18529  005A1E  0012               	return		;funcret
 18530  005A20                     __end_of_proceed:
 18531                           	callstack 0
 18532                           
 18533 ;; *************** function _command *****************
 18534 ;; Defined at:
 18535 ;;		line 127 in file "bibliotecas/SDCard.c"
 18536 ;; Parameters:    Size  Location     Type
 18537 ;;  CMD             1    wreg     unsigned char 
 18538 ;;  arg             4   30[COMRAM] unsigned long 
 18539 ;;  CRC             1   34[COMRAM] unsigned char 
 18540 ;; Auto vars:     Size  Location     Type
 18541 ;;  CMD             1   35[COMRAM] unsigned char 
 18542 ;;  argument        1   36[COMRAM] unsigned char 
 18543 ;; Return value:  Size  Location     Type
 18544 ;;                  1    wreg      void 
 18545 ;; Registers used:
 18546 ;;		wreg, status,2, status,0, cstack
 18547 ;; Tracked objects:
 18548 ;;		On entry : 0/0
 18549 ;;		On exit  : 0/0
 18550 ;;		Unchanged: 0/0
 18551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18552 ;;      Params:         5       0       0       0       0       0       0       0       0
 18553 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18555 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18556 ;;Total ram usage:        7 bytes
 18557 ;; Hardware stack levels used:    1
 18558 ;; Hardware stack levels required when called:    5
 18559 ;; This function calls:
 18560 ;;		_dummy_clocks
 18561 ;;		_escreve_SPI
 18562 ;;		_wait_ready
 18563 ;; This function is called by:
 18564 ;;		_sdc_reset
 18565 ;;		_sdc_disk_initialize
 18566 ;;		_sdc_disk_read
 18567 ;;		_sdc_disk_write
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           	psect	text95
 18572  004FAE                     __ptext95:
 18573                           	callstack 0
 18574  004FAE                     _command:
 18575                           	callstack 14
 18576                           
 18577                           ;incstack = 0
 18578                           ;command@CMD stored from wreg
 18579  004FAE  6E24               	movwf	command@CMD^0,c
 18580                           
 18581                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 18582  004FB0  ECF6  F02A         	call	_wait_ready	;wreg free
 18583  004FB4  0AFF               	xorlw	255
 18584  004FB6  A4D8               	btfss	status,2,c
 18585  004FB8  D004               	goto	l635
 18586  004FBA  D008               	goto	u11320
 18587  004FBC                     l9870:
 18588                           
 18589                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 18590  004FBC  0E0A               	movlw	10
 18591  004FBE  ECBC  F02A         	call	_dummy_clocks
 18592  004FC2                     l635:
 18593  004FC2  ECF6  F02A         	call	_wait_ready	;wreg free
 18594  004FC6  0AFF               	xorlw	255
 18595  004FC8  A4D8               	btfss	status,2,c
 18596  004FCA  D7F8               	goto	l9870
 18597  004FCC                     u11320:
 18598                           
 18599                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 18600  004FCC  0EFF               	movlw	255
 18601  004FCE  ECE6  F02C         	call	_escreve_SPI
 18602                           
 18603                           ;SDCard.c: 139: escreve_SPI(CMD);
 18604  004FD2  5024               	movf	command@CMD^0,w,c
 18605  004FD4  ECE6  F02C         	call	_escreve_SPI
 18606                           
 18607                           ;SDCard.c: 140: argument = arg>>24;
 18608  004FD8  C022  F025         	movff	command@arg+3,command@argument
 18609                           
 18610                           ;SDCard.c: 141: escreve_SPI(argument);
 18611  004FDC  5025               	movf	command@argument^0,w,c
 18612  004FDE  ECE6  F02C         	call	_escreve_SPI
 18613                           
 18614                           ;SDCard.c: 142: argument = arg>>16;
 18615  004FE2  C021  F025         	movff	command@arg+2,command@argument
 18616                           
 18617                           ;SDCard.c: 143: escreve_SPI(argument);
 18618  004FE6  5025               	movf	command@argument^0,w,c
 18619  004FE8  ECE6  F02C         	call	_escreve_SPI
 18620                           
 18621                           ;SDCard.c: 144: argument = arg>>8;
 18622  004FEC  C020  F025         	movff	command@arg+1,command@argument
 18623                           
 18624                           ;SDCard.c: 145: escreve_SPI(argument);
 18625  004FF0  5025               	movf	command@argument^0,w,c
 18626  004FF2  ECE6  F02C         	call	_escreve_SPI
 18627                           
 18628                           ;SDCard.c: 146: argument = arg;
 18629  004FF6  C01F  F025         	movff	command@arg,command@argument
 18630                           
 18631                           ;SDCard.c: 147: escreve_SPI(argument);
 18632  004FFA  5025               	movf	command@argument^0,w,c
 18633  004FFC  ECE6  F02C         	call	_escreve_SPI
 18634                           
 18635                           ;SDCard.c: 148: escreve_SPI(CRC);
 18636  005000  5023               	movf	command@CRC^0,w,c
 18637  005002  ECE6  F02C         	call	_escreve_SPI
 18638  005006  0012               	return		;funcret
 18639  005008                     __end_of_command:
 18640                           	callstack 0
 18641                           
 18642 ;; *************** function _wait_ready *****************
 18643 ;; Defined at:
 18644 ;;		line 107 in file "bibliotecas/SDCard.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;		None
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  msg            10    0        unsigned char [10]
 18649 ;;  timeout         4   25[COMRAM] unsigned long 
 18650 ;;  res             1   29[COMRAM] unsigned char 
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      unsigned char 
 18653 ;; Registers used:
 18654 ;;		wreg, status,2, status,0, cstack
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0
 18661 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18663 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18664 ;;Total ram usage:        5 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; Hardware stack levels required when called:    4
 18667 ;; This function calls:
 18668 ;;		_leitura_SPI
 18669 ;; This function is called by:
 18670 ;;		_command
 18671 ;; This function uses a non-reentrant model
 18672 ;;
 18673                           
 18674                           	psect	text96
 18675  0055EC                     __ptext96:
 18676                           	callstack 0
 18677  0055EC                     _wait_ready:
 18678                           	callstack 14
 18679                           
 18680                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 18681                           
 18682                           ;incstack = 0
 18683  0055EC  0EFF               	movlw	255
 18684  0055EE  6E1A               	movwf	wait_ready@timeout^0,c
 18685  0055F0  0E7F               	movlw	127
 18686  0055F2  6E1B               	movwf	(wait_ready@timeout+1)^0,c
 18687  0055F4  0E00               	movlw	0
 18688  0055F6  6E1C               	movwf	(wait_ready@timeout+2)^0,c
 18689  0055F8  0E00               	movlw	0
 18690  0055FA  6E1D               	movwf	(wait_ready@timeout+3)^0,c
 18691  0055FC                     l9856:
 18692                           
 18693                           ;SDCard.c: 114: res = leitura_SPI();
 18694  0055FC  EC10  F02D         	call	_leitura_SPI	;wreg free
 18695  005600  6E1E               	movwf	wait_ready@res^0,c
 18696                           
 18697                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 18698  005602  281E               	incf	wait_ready@res^0,w,c
 18699  005604  B4D8               	btfsc	status,2,c
 18700  005606  D00B               	goto	u11300
 18701  005608  061A               	decf	wait_ready@timeout^0,f,c
 18702  00560A  0E00               	movlw	0
 18703  00560C  5A1B               	subwfb	(wait_ready@timeout+1)^0,f,c
 18704  00560E  5A1C               	subwfb	(wait_ready@timeout+2)^0,f,c
 18705  005610  5A1D               	subwfb	(wait_ready@timeout+3)^0,f,c
 18706  005612  501A               	movf	wait_ready@timeout^0,w,c
 18707  005614  101B               	iorwf	(wait_ready@timeout+1)^0,w,c
 18708  005616  101C               	iorwf	(wait_ready@timeout+2)^0,w,c
 18709  005618  101D               	iorwf	(wait_ready@timeout+3)^0,w,c
 18710  00561A  A4D8               	btfss	status,2,c
 18711  00561C  D7EF               	goto	l9856
 18712  00561E                     u11300:
 18713                           
 18714                           ;SDCard.c: 117: return res;
 18715  00561E  501E               	movf	wait_ready@res^0,w,c
 18716  005620  0012               	return		;funcret
 18717  005622                     __end_of_wait_ready:
 18718                           	callstack 0
 18719                           
 18720 ;; *************** function _escreve_SPI *****************
 18721 ;; Defined at:
 18722 ;;		line 105 in file "bibliotecas/SPI.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  dado            1    wreg     unsigned char 
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;  dado            1   26[COMRAM] unsigned char 
 18727 ;;  TempVar         1    0        unsigned char 
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      void 
 18730 ;; Registers used:
 18731 ;;		wreg
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/0
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0
 18738 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18740 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18741 ;;Total ram usage:        2 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; Hardware stack levels required when called:    3
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_sdc_disk_write
 18748 ;;		_proceed
 18749 ;;		_command
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text97
 18754  0059CC                     __ptext97:
 18755                           	callstack 0
 18756  0059CC                     _escreve_SPI:
 18757                           	callstack 15
 18758                           
 18759                           ;incstack = 0
 18760                           ;escreve_SPI@dado stored from wreg
 18761  0059CC  6E1B               	movwf	escreve_SPI@dado^0,c
 18762  0059CE  50C9               	movf	201,w,c	;volatile
 18763                           
 18764                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 18765  0059D0  969E               	bcf	158,3,c	;volatile
 18766                           
 18767                           ;SPI.c: 111: SSPBUF = dado;
 18768  0059D2  C01B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 18769  0059D6                     l742:
 18770  0059D6  B69E               	btfsc	158,3,c	;volatile
 18771  0059D8  0012               	return	
 18772  0059DA  D7FD               	goto	l742
 18773  0059DC                     __end_of_escreve_SPI:
 18774                           	callstack 0
 18775                           
 18776 ;; *************** function _dummy_clocks *****************
 18777 ;; Defined at:
 18778 ;;		line 76 in file "bibliotecas/SDCard.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;  n               1    wreg     unsigned char 
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;  n               1   27[COMRAM] unsigned char 
 18783 ;;  i               2   28[COMRAM] unsigned int 
 18784 ;; Return value:  Size  Location     Type
 18785 ;;                  1    wreg      void 
 18786 ;; Registers used:
 18787 ;;		wreg, status,2, status,0, cstack
 18788 ;; Tracked objects:
 18789 ;;		On entry : 0/0
 18790 ;;		On exit  : 0/0
 18791 ;;		Unchanged: 0/0
 18792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18793 ;;      Params:         0       0       0       0       0       0       0       0       0
 18794 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18795 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18796 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18797 ;;Total ram usage:        5 bytes
 18798 ;; Hardware stack levels used:    1
 18799 ;; Hardware stack levels required when called:    4
 18800 ;; This function calls:
 18801 ;;		_leitura_SPI
 18802 ;; This function is called by:
 18803 ;;		_sdc_disk_initialize
 18804 ;;		_sdc_disk_read
 18805 ;;		_sdc_disk_write
 18806 ;;		_command
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           	psect	text98
 18811  005578                     __ptext98:
 18812                           	callstack 0
 18813  005578                     _dummy_clocks:
 18814                           	callstack 15
 18815                           
 18816                           ;incstack = 0
 18817                           ;dummy_clocks@n stored from wreg
 18818  005578  6E1C               	movwf	dummy_clocks@n^0,c
 18819                           
 18820                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 18821  00557A  0E10               	movlw	16
 18822  00557C  6E1A               	movwf	??_dummy_clocks^0,c
 18823  00557E  0E94               	movlw	148
 18824  005580                     u17027:
 18825  005580  2EE8               	decfsz	wreg,f,c
 18826  005582  D7FE               	bra	u17027
 18827  005584  2E1A               	decfsz	??_dummy_clocks^0,f,c
 18828  005586  D7FC               	bra	u17027
 18829  005588  D000               	nop2	
 18830                           
 18831                           ;SDCard.c: 80: for(i=0;i<n;i++)
 18832  00558A  0E00               	movlw	0
 18833  00558C  6E1E               	movwf	(dummy_clocks@i+1)^0,c
 18834  00558E  0E00               	movlw	0
 18835  005590  6E1D               	movwf	dummy_clocks@i^0,c
 18836  005592  D006               	goto	l9848
 18837  005594                     l619:
 18838                           
 18839                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 18840  005594  8A8A               	bsf	138,5,c	;volatile
 18841                           
 18842                           ;SDCard.c: 83: leitura_SPI();
 18843  005596  EC10  F02D         	call	_leitura_SPI	;wreg free
 18844                           
 18845                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 18846  00559A  9A8A               	bcf	138,5,c	;volatile
 18847  00559C  4A1D               	infsnz	dummy_clocks@i^0,f,c
 18848  00559E  2A1E               	incf	(dummy_clocks@i+1)^0,f,c
 18849  0055A0                     l9848:
 18850  0055A0  501C               	movf	dummy_clocks@n^0,w,c
 18851  0055A2  6E1A               	movwf	??_dummy_clocks^0,c
 18852  0055A4  6A1B               	clrf	(??_dummy_clocks+1)^0,c
 18853  0055A6  501A               	movf	??_dummy_clocks^0,w,c
 18854  0055A8  5C1D               	subwf	dummy_clocks@i^0,w,c
 18855  0055AA  501B               	movf	(??_dummy_clocks+1)^0,w,c
 18856  0055AC  581E               	subwfb	(dummy_clocks@i+1)^0,w,c
 18857  0055AE  B0D8               	btfsc	status,0,c
 18858  0055B0  0012               	return	
 18859  0055B2  D7F0               	goto	l619
 18860  0055B4                     __end_of_dummy_clocks:
 18861                           	callstack 0
 18862                           
 18863 ;; *************** function _leitura_SPI *****************
 18864 ;; Defined at:
 18865 ;;		line 90 in file "bibliotecas/SPI.c"
 18866 ;; Parameters:    Size  Location     Type
 18867 ;;		None
 18868 ;; Auto vars:     Size  Location     Type
 18869 ;;		None
 18870 ;; Return value:  Size  Location     Type
 18871 ;;                  1    wreg      unsigned char 
 18872 ;; Registers used:
 18873 ;;		wreg, status,2
 18874 ;; Tracked objects:
 18875 ;;		On entry : 0/0
 18876 ;;		On exit  : 0/0
 18877 ;;		Unchanged: 0/0
 18878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18879 ;;      Params:         0       0       0       0       0       0       0       0       0
 18880 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18881 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18882 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18883 ;;Total ram usage:        0 bytes
 18884 ;; Hardware stack levels used:    1
 18885 ;; Hardware stack levels required when called:    3
 18886 ;; This function calls:
 18887 ;;		Nothing
 18888 ;; This function is called by:
 18889 ;;		_sdc_disk_write
 18890 ;;		_response
 18891 ;;		_dummy_clocks
 18892 ;;		_wait_ready
 18893 ;; This function uses a non-reentrant model
 18894 ;;
 18895                           
 18896                           	psect	text99
 18897  005A20                     __ptext99:
 18898                           	callstack 0
 18899  005A20                     _leitura_SPI:
 18900                           	callstack 15
 18901                           
 18902                           ;SPI.c: 92: SSPBUF = 0xFF;
 18903                           
 18904                           ;incstack = 0
 18905  005A20  68C9               	setf	201,c	;volatile
 18906                           
 18907                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 18908  005A22  90C7               	bcf	199,0,c	;volatile
 18909  005A24                     l736:
 18910  005A24  A0C7               	btfss	199,0,c	;volatile
 18911  005A26  D7FE               	goto	l736
 18912                           
 18913                           ;SPI.c: 95: return (SSPBUF);
 18914  005A28  50C9               	movf	201,w,c	;volatile
 18915  005A2A  0012               	return		;funcret
 18916  005A2C                     __end_of_leitura_SPI:
 18917                           	callstack 0
 18918                           
 18919 ;; *************** function _disk_ioctl *****************
 18920 ;; Defined at:
 18921 ;;		line 198 in file "bibliotecas/diskio.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;  pdrv            1    wreg     unsigned char 
 18924 ;;  cmd             1   25[COMRAM] unsigned char 
 18925 ;;  buff            2   26[COMRAM] PTR void 
 18926 ;;		 -> NULL(0), 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  pdrv            1   28[COMRAM] unsigned char 
 18929 ;;  result          2    0        int 
 18930 ;;  res             1   29[COMRAM] enum E25
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  1    wreg      enum E25
 18933 ;; Registers used:
 18934 ;;		wreg, status,2, status,0
 18935 ;; Tracked objects:
 18936 ;;		On entry : 3F/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18940 ;;      Params:         3       0       0       0       0       0       0       0       0
 18941 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18943 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18944 ;;Total ram usage:        5 bytes
 18945 ;; Hardware stack levels used:    1
 18946 ;; Hardware stack levels required when called:    3
 18947 ;; This function calls:
 18948 ;;		Nothing
 18949 ;; This function is called by:
 18950 ;;		_sync
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text100
 18955  0058C4                     __ptext100:
 18956                           	callstack 0
 18957  0058C4                     _disk_ioctl:
 18958                           	callstack 20
 18959                           
 18960                           ;incstack = 0
 18961                           ;disk_ioctl@pdrv stored from wreg
 18962  0058C4  6E1D               	movwf	disk_ioctl@pdrv^0,c
 18963                           
 18964                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 18965  0058C6  D002               	goto	l10778
 18966  0058C8                     l68:
 18967                           
 18968                           ;diskio.c: 212: return res;
 18969  0058C8  501E               	movf	disk_ioctl@res^0,w,c
 18970  0058CA  0012               	return	
 18971  0058CC                     l10778:
 18972  0058CC  501D               	movf	disk_ioctl@pdrv^0,w,c
 18973                           
 18974                           ; Switch size 1, requested type "simple"
 18975                           ; Number of cases is 3, Range of values is 0 to 2
 18976                           ; switch strategies available:
 18977                           ; Name         Instructions Cycles
 18978                           ; simple_byte           10     6 (average)
 18979                           ;	Chosen strategy is simple_byte
 18980  0058CE  0A00               	xorlw	0	; case 0
 18981  0058D0  B4D8               	btfsc	status,2,c
 18982  0058D2  D7FA               	goto	l68
 18983  0058D4  0A01               	xorlw	1	; case 1
 18984  0058D6  B4D8               	btfsc	status,2,c
 18985  0058D8  D7F7               	goto	l68
 18986  0058DA  0A03               	xorlw	3	; case 2
 18987  0058DC  B4D8               	btfsc	status,2,c
 18988  0058DE  D7F4               	goto	l68
 18989                           
 18990                           ;diskio.c: 227: return RES_PARERR;
 18991  0058E0  0E04               	movlw	4
 18992  0058E2  0012               	return		;funcret
 18993  0058E4                     __end_of_disk_ioctl:
 18994                           	callstack 0
 18995                           
 18996 ;; *************** function _get_fattime *****************
 18997 ;; Defined at:
 18998 ;;		line 810 in file "bibliotecas/tff.c"
 18999 ;; Parameters:    Size  Location     Type
 19000 ;;		None
 19001 ;; Auto vars:     Size  Location     Type
 19002 ;;  f_time         10   33[COMRAM] struct .
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  4   29[COMRAM] unsigned long 
 19005 ;; Registers used:
 19006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19007 ;; Tracked objects:
 19008 ;;		On entry : 3F/0
 19009 ;;		On exit  : 3F/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19012 ;;      Params:         4       0       0       0       0       0       0       0       0
 19013 ;;      Locals:        10       0       0       0       0       0       0       0       0
 19014 ;;      Temps:          0      38       0       0       0       0       0       0       0
 19015 ;;      Totals:        14      38       0       0       0       0       0       0       0
 19016 ;;Total ram usage:       52 bytes
 19017 ;; Hardware stack levels used:    1
 19018 ;; Hardware stack levels required when called:    4
 19019 ;; This function calls:
 19020 ;;		_gps_ano
 19021 ;;		_gps_dia
 19022 ;;		_gps_hora
 19023 ;;		_gps_mes
 19024 ;;		_gps_minutos
 19025 ;;		_gps_segundos
 19026 ;; This function is called by:
 19027 ;;		_f_open
 19028 ;;		_f_sync
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text101
 19033  00369A                     __ptext101:
 19034                           	callstack 0
 19035  00369A                     _get_fattime:
 19036                           	callstack 21
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 19040                           
 19041                           ;incstack = 0
 19042  00369A  ECB9  F02B         	call	_gps_hora	;wreg free
 19043  00369E  0EFD               	movlw	253
 19044  0036A0  241A               	addwf	?_gps_hora^0,w,c
 19045  0036A2  6E22               	movwf	get_fattime@f_time^0,c
 19046  0036A4  0EFF               	movlw	255
 19047  0036A6  201B               	addwfc	(?_gps_hora+1)^0,w,c
 19048  0036A8  6E23               	movwf	(get_fattime@f_time+1)^0,c
 19049                           
 19050                           ;tff.c: 815: f_time.min = gps_minutos();
 19051  0036AA  ECFE  F02B         	call	_gps_minutos	;wreg free
 19052  0036AE  C01A  F024         	movff	?_gps_minutos,get_fattime@f_time+2
 19053  0036B2  C01B  F025         	movff	?_gps_minutos+1,get_fattime@f_time+3
 19054                           
 19055                           ;tff.c: 816: f_time.seg = gps_segundos();
 19056  0036B6  ECED  F02B         	call	_gps_segundos	;wreg free
 19057  0036BA  C01A  F026         	movff	?_gps_segundos,get_fattime@f_time+4
 19058  0036BE  C01B  F027         	movff	?_gps_segundos+1,get_fattime@f_time+5
 19059                           
 19060                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 19061  0036C2  EC31  F02C         	call	_gps_ano	;wreg free
 19062  0036C6  0ED0               	movlw	208
 19063  0036C8  241A               	addwf	?_gps_ano^0,w,c
 19064  0036CA  6E2A               	movwf	(get_fattime@f_time+8)^0,c
 19065  0036CC  0E07               	movlw	7
 19066  0036CE  201B               	addwfc	(?_gps_ano+1)^0,w,c
 19067  0036D0  6E2B               	movwf	(get_fattime@f_time+9)^0,c
 19068                           
 19069                           ;tff.c: 818: f_time.mes = gps_mes();
 19070  0036D2  EC0F  F02C         	call	_gps_mes	;wreg free
 19071  0036D6  501A               	movf	?_gps_mes^0,w,c
 19072  0036D8  6E29               	movwf	(get_fattime@f_time+7)^0,c
 19073                           
 19074                           ;tff.c: 819: f_time.dia = gps_dia();
 19075  0036DA  EC20  F02C         	call	_gps_dia	;wreg free
 19076  0036DE  501A               	movf	?_gps_dia^0,w,c
 19077  0036E0  6E28               	movwf	(get_fattime@f_time+6)^0,c
 19078                           
 19079                           ; BSR set to: 1
 19080                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 19081  0036E2  90D8               	bcf	status,0,c
 19082  0036E4  3027               	rrcf	(get_fattime@f_time+5)^0,w,c
 19083  0036E6  0100               	movlb	0	; () banked
 19084  0036E8  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 19085  0036EA  3026               	rrcf	(get_fattime@f_time+4)^0,w,c
 19086  0036EC  6F60               	movwf	??_get_fattime& (0+255),b
 19087  0036EE  5024               	movf	(get_fattime@f_time+2)^0,w,c
 19088  0036F0  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 19089  0036F2  5025               	movf	(get_fattime@f_time+3)^0,w,c
 19090  0036F4  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 19091  0036F6  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 19092  0036F8  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 19093  0036FA  0E05               	movlw	5
 19094  0036FC                     u13195:
 19095  0036FC  90D8               	bcf	status,0,c
 19096  0036FE  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 19097  003700  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 19098  003702  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 19099  003704  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 19100  003706  2EE8               	decfsz	wreg,f,c
 19101  003708  D7F9               	goto	u13195
 19102  00370A  5022               	movf	get_fattime@f_time^0,w,c
 19103  00370C  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 19104  00370E  5023               	movf	(get_fattime@f_time+1)^0,w,c
 19105  003710  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 19106  003712  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 19107  003714  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 19108  003716  0E0B               	movlw	11
 19109  003718                     u13205:
 19110  003718  90D8               	bcf	status,0,c
 19111  00371A  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 19112  00371C  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 19113  00371E  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 19114  003720  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 19115  003722  2EE8               	decfsz	wreg,f,c
 19116  003724  D7F9               	goto	u13205
 19117  003726  C028  F06A         	movff	get_fattime@f_time+6,??_get_fattime+10
 19118  00372A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19119  00372C  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 19120  00372E  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 19121  003730  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 19122  003734  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 19123  003738  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19124  00373A  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 19125  00373C  C029  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 19126  003740  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 19127  003742  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 19128  003744  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 19129  003746  0E15               	movlw	21
 19130  003748                     u13215:
 19131  003748  90D8               	bcf	status,0,c
 19132  00374A  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 19133  00374C  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 19134  00374E  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 19135  003750  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 19136  003752  2EE8               	decfsz	wreg,f,c
 19137  003754  D7F9               	goto	u13215
 19138  003756  0EC4               	movlw	196
 19139  003758  242A               	addwf	(get_fattime@f_time+8)^0,w,c
 19140  00375A  6F72               	movwf	(??_get_fattime+18)& (0+255),b
 19141  00375C  0EFF               	movlw	255
 19142  00375E  202B               	addwfc	(get_fattime@f_time+9)^0,w,c
 19143  003760  6F73               	movwf	(??_get_fattime+19)& (0+255),b
 19144  003762  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 19145  003764  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 19146  003766  0E19               	movlw	25
 19147  003768                     u13225:
 19148  003768  90D8               	bcf	status,0,c
 19149  00376A  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 19150  00376C  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 19151  00376E  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 19152  003770  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 19153  003772  2EE8               	decfsz	wreg,f,c
 19154  003774  D7F9               	goto	u13225
 19155  003776  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 19156  003778  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 19157  00377A  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 19158  00377C  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 19159  00377E  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 19160  003780  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 19161  003782  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 19162  003784  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 19163  003786  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 19164  003788  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 19165  00378A  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 19166  00378C  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 19167  00378E  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 19168  003790  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 19169  003792  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 19170  003794  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 19171  003796  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 19172  003798  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 19173  00379A  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 19174  00379C  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 19175  00379E  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 19176  0037A0  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 19177  0037A2  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 19178  0037A4  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 19179  0037A6  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 19180  0037A8  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 19181  0037AA  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 19182  0037AC  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 19183  0037AE  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 19184  0037B0  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 19185  0037B2  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 19186  0037B4  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 19187  0037B6  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 19188  0037B8  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 19189  0037BA  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 19190  0037BC  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 19191  0037BE  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 19192  0037C0  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 19193  0037C2  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 19194  0037C4  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 19195  0037C6  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 19196  0037C8  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 19197  0037CA  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 19198  0037CC  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 19199  0037CE  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 19200  0037D0  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 19201  0037D2  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 19202  0037D4  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 19203  0037D6  5160               	movf	??_get_fattime& (0+255),w,b
 19204  0037D8  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 19205  0037DA  6E1E               	movwf	?_get_fattime^0,c
 19206  0037DC  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 19207  0037DE  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 19208  0037E0  6E1F               	movwf	(?_get_fattime+1)^0,c
 19209  0037E2  0E00               	movlw	0
 19210  0037E4  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 19211  0037E6  6E20               	movwf	(?_get_fattime+2)^0,c
 19212  0037E8  0E00               	movlw	0
 19213  0037EA  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 19214  0037EC  6E21               	movwf	(?_get_fattime+3)^0,c
 19215                           
 19216                           ; BSR set to: 0
 19217  0037EE  0012               	return		;funcret
 19218  0037F0                     __end_of_get_fattime:
 19219                           	callstack 0
 19220                           
 19221 ;; *************** function _gps_segundos *****************
 19222 ;; Defined at:
 19223 ;;		line 177 in file "bibliotecas/GPS.c"
 19224 ;; Parameters:    Size  Location     Type
 19225 ;;		None
 19226 ;; Auto vars:     Size  Location     Type
 19227 ;;		None
 19228 ;; Return value:  Size  Location     Type
 19229 ;;                  2   25[COMRAM] unsigned int 
 19230 ;; Registers used:
 19231 ;;		wreg, status,2, status,0, prodl, prodh
 19232 ;; Tracked objects:
 19233 ;;		On entry : 3F/1
 19234 ;;		On exit  : 3F/1
 19235 ;;		Unchanged: 0/0
 19236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19237 ;;      Params:         2       0       0       0       0       0       0       0       0
 19238 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19239 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19240 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19241 ;;Total ram usage:        4 bytes
 19242 ;; Hardware stack levels used:    1
 19243 ;; Hardware stack levels required when called:    3
 19244 ;; This function calls:
 19245 ;;		Nothing
 19246 ;; This function is called by:
 19247 ;;		_get_fattime
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text102
 19252  0057DA                     __ptext102:
 19253                           	callstack 0
 19254  0057DA                     _gps_segundos:
 19255                           	callstack 21
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;GPS.c: 179: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;incstack = 0
 19262  0057DA  51B6               	movf	(_rawTime+4)& (0+255),w,b
 19263  0057DC  0D0A               	mullw	10
 19264  0057DE  CFF3 F01C          	movff	prodl,??_gps_segundos
 19265  0057E2  CFF4 F01D          	movff	prodh,??_gps_segundos+1
 19266  0057E6  51B7               	movf	(_rawTime+5)& (0+255),w,b
 19267  0057E8  261C               	addwf	??_gps_segundos^0,f,c
 19268  0057EA  0E00               	movlw	0
 19269  0057EC  221D               	addwfc	(??_gps_segundos+1)^0,f,c
 19270  0057EE  0EF0               	movlw	240
 19271  0057F0  241C               	addwf	??_gps_segundos^0,w,c
 19272  0057F2  6E1A               	movwf	?_gps_segundos^0,c
 19273  0057F4  0EFD               	movlw	253
 19274  0057F6  201D               	addwfc	(??_gps_segundos+1)^0,w,c
 19275  0057F8  6E1B               	movwf	(?_gps_segundos+1)^0,c
 19276                           
 19277                           ; BSR set to: 1
 19278  0057FA  0012               	return		;funcret
 19279  0057FC                     __end_of_gps_segundos:
 19280                           	callstack 0
 19281                           
 19282 ;; *************** function _gps_minutos *****************
 19283 ;; Defined at:
 19284 ;;		line 188 in file "bibliotecas/GPS.c"
 19285 ;; Parameters:    Size  Location     Type
 19286 ;;		None
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;		None
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  2   25[COMRAM] unsigned int 
 19291 ;; Registers used:
 19292 ;;		wreg, status,2, status,0, prodl, prodh
 19293 ;; Tracked objects:
 19294 ;;		On entry : 3F/1
 19295 ;;		On exit  : 3F/1
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19298 ;;      Params:         2       0       0       0       0       0       0       0       0
 19299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19300 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19301 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19302 ;;Total ram usage:        4 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:    3
 19305 ;; This function calls:
 19306 ;;		Nothing
 19307 ;; This function is called by:
 19308 ;;		_get_fattime
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           	psect	text103
 19313  0057FC                     __ptext103:
 19314                           	callstack 0
 19315  0057FC                     _gps_minutos:
 19316                           	callstack 21
 19317                           
 19318                           ; BSR set to: 1
 19319                           ;GPS.c: 190: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 19320                           
 19321                           ; BSR set to: 1
 19322                           ;incstack = 0
 19323  0057FC  51B4               	movf	(_rawTime+2)& (0+255),w,b
 19324  0057FE  0D0A               	mullw	10
 19325  005800  CFF3 F01C          	movff	prodl,??_gps_minutos
 19326  005804  CFF4 F01D          	movff	prodh,??_gps_minutos+1
 19327  005808  51B5               	movf	(_rawTime+3)& (0+255),w,b
 19328  00580A  261C               	addwf	??_gps_minutos^0,f,c
 19329  00580C  0E00               	movlw	0
 19330  00580E  221D               	addwfc	(??_gps_minutos+1)^0,f,c
 19331  005810  0EF0               	movlw	240
 19332  005812  241C               	addwf	??_gps_minutos^0,w,c
 19333  005814  6E1A               	movwf	?_gps_minutos^0,c
 19334  005816  0EFD               	movlw	253
 19335  005818  201D               	addwfc	(??_gps_minutos+1)^0,w,c
 19336  00581A  6E1B               	movwf	(?_gps_minutos+1)^0,c
 19337                           
 19338                           ; BSR set to: 1
 19339  00581C  0012               	return		;funcret
 19340  00581E                     __end_of_gps_minutos:
 19341                           	callstack 0
 19342                           
 19343 ;; *************** function _gps_mes *****************
 19344 ;; Defined at:
 19345 ;;		line 225 in file "bibliotecas/GPS.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;		None
 19350 ;; Return value:  Size  Location     Type
 19351 ;;                  2   25[COMRAM] unsigned int 
 19352 ;; Registers used:
 19353 ;;		wreg, status,2, status,0, prodl, prodh
 19354 ;; Tracked objects:
 19355 ;;		On entry : 3F/1
 19356 ;;		On exit  : 3F/1
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19359 ;;      Params:         2       0       0       0       0       0       0       0       0
 19360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19361 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19362 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19363 ;;Total ram usage:        4 bytes
 19364 ;; Hardware stack levels used:    1
 19365 ;; Hardware stack levels required when called:    3
 19366 ;; This function calls:
 19367 ;;		Nothing
 19368 ;; This function is called by:
 19369 ;;		_get_fattime
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text104
 19374  00581E                     __ptext104:
 19375                           	callstack 0
 19376  00581E                     _gps_mes:
 19377                           	callstack 21
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;GPS.c: 227: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;incstack = 0
 19384  00581E  51C6               	movf	(_rawDate+2)& (0+255),w,b
 19385  005820  0D0A               	mullw	10
 19386  005822  CFF3 F01C          	movff	prodl,??_gps_mes
 19387  005826  CFF4 F01D          	movff	prodh,??_gps_mes+1
 19388  00582A  51C7               	movf	(_rawDate+3)& (0+255),w,b
 19389  00582C  261C               	addwf	??_gps_mes^0,f,c
 19390  00582E  0E00               	movlw	0
 19391  005830  221D               	addwfc	(??_gps_mes+1)^0,f,c
 19392  005832  0EF0               	movlw	240
 19393  005834  241C               	addwf	??_gps_mes^0,w,c
 19394  005836  6E1A               	movwf	?_gps_mes^0,c
 19395  005838  0EFD               	movlw	253
 19396  00583A  201D               	addwfc	(??_gps_mes+1)^0,w,c
 19397  00583C  6E1B               	movwf	(?_gps_mes+1)^0,c
 19398                           
 19399                           ; BSR set to: 1
 19400  00583E  0012               	return		;funcret
 19401  005840                     __end_of_gps_mes:
 19402                           	callstack 0
 19403                           
 19404 ;; *************** function _gps_hora *****************
 19405 ;; Defined at:
 19406 ;;		line 200 in file "bibliotecas/GPS.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;		None
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;		None
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  2   25[COMRAM] unsigned int 
 19413 ;; Registers used:
 19414 ;;		wreg, status,2, status,0, prodl, prodh
 19415 ;; Tracked objects:
 19416 ;;		On entry : 3F/0
 19417 ;;		On exit  : 3F/1
 19418 ;;		Unchanged: 0/0
 19419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19420 ;;      Params:         2       0       0       0       0       0       0       0       0
 19421 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19422 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19423 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19424 ;;Total ram usage:        4 bytes
 19425 ;; Hardware stack levels used:    1
 19426 ;; Hardware stack levels required when called:    3
 19427 ;; This function calls:
 19428 ;;		Nothing
 19429 ;; This function is called by:
 19430 ;;		_get_fattime
 19431 ;; This function uses a non-reentrant model
 19432 ;;
 19433                           
 19434                           	psect	text105
 19435  005772                     __ptext105:
 19436                           	callstack 0
 19437  005772                     _gps_hora:
 19438                           	callstack 21
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;GPS.c: 202: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 19442                           
 19443                           ; BSR set to: 1
 19444                           ;incstack = 0
 19445  005772  0101               	movlb	1	; () banked
 19446  005774  51B2               	movf	_rawTime& (0+255),w,b
 19447  005776  0D0A               	mullw	10
 19448  005778  CFF3 F01C          	movff	prodl,??_gps_hora
 19449  00577C  CFF4 F01D          	movff	prodh,??_gps_hora+1
 19450  005780  51B3               	movf	(_rawTime+1)& (0+255),w,b
 19451  005782  261C               	addwf	??_gps_hora^0,f,c
 19452  005784  0E00               	movlw	0
 19453  005786  221D               	addwfc	(??_gps_hora+1)^0,f,c
 19454  005788  0EF0               	movlw	240
 19455  00578A  241C               	addwf	??_gps_hora^0,w,c
 19456  00578C  6E1A               	movwf	?_gps_hora^0,c
 19457  00578E  0EFD               	movlw	253
 19458  005790  201D               	addwfc	(??_gps_hora+1)^0,w,c
 19459  005792  6E1B               	movwf	(?_gps_hora+1)^0,c
 19460                           
 19461                           ; BSR set to: 1
 19462  005794  0012               	return		;funcret
 19463  005796                     __end_of_gps_hora:
 19464                           	callstack 0
 19465                           
 19466 ;; *************** function _gps_dia *****************
 19467 ;; Defined at:
 19468 ;;		line 212 in file "bibliotecas/GPS.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;		None
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;		None
 19473 ;; Return value:  Size  Location     Type
 19474 ;;                  2   25[COMRAM] unsigned int 
 19475 ;; Registers used:
 19476 ;;		wreg, status,2, status,0, prodl, prodh
 19477 ;; Tracked objects:
 19478 ;;		On entry : 3F/1
 19479 ;;		On exit  : 3F/1
 19480 ;;		Unchanged: 0/0
 19481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19482 ;;      Params:         2       0       0       0       0       0       0       0       0
 19483 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19484 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19485 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19486 ;;Total ram usage:        4 bytes
 19487 ;; Hardware stack levels used:    1
 19488 ;; Hardware stack levels required when called:    3
 19489 ;; This function calls:
 19490 ;;		Nothing
 19491 ;; This function is called by:
 19492 ;;		_get_fattime
 19493 ;; This function uses a non-reentrant model
 19494 ;;
 19495                           
 19496                           	psect	text106
 19497  005840                     __ptext106:
 19498                           	callstack 0
 19499  005840                     _gps_dia:
 19500                           	callstack 21
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;GPS.c: 214: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 19504                           
 19505                           ; BSR set to: 1
 19506                           ;incstack = 0
 19507  005840  51C4               	movf	_rawDate& (0+255),w,b
 19508  005842  0D0A               	mullw	10
 19509  005844  CFF3 F01C          	movff	prodl,??_gps_dia
 19510  005848  CFF4 F01D          	movff	prodh,??_gps_dia+1
 19511  00584C  51C5               	movf	(_rawDate+1)& (0+255),w,b
 19512  00584E  261C               	addwf	??_gps_dia^0,f,c
 19513  005850  0E00               	movlw	0
 19514  005852  221D               	addwfc	(??_gps_dia+1)^0,f,c
 19515  005854  0EF0               	movlw	240
 19516  005856  241C               	addwf	??_gps_dia^0,w,c
 19517  005858  6E1A               	movwf	?_gps_dia^0,c
 19518  00585A  0EFD               	movlw	253
 19519  00585C  201D               	addwfc	(??_gps_dia+1)^0,w,c
 19520  00585E  6E1B               	movwf	(?_gps_dia+1)^0,c
 19521                           
 19522                           ; BSR set to: 1
 19523  005860  0012               	return		;funcret
 19524  005862                     __end_of_gps_dia:
 19525                           	callstack 0
 19526                           
 19527 ;; *************** function _gps_ano *****************
 19528 ;; Defined at:
 19529 ;;		line 237 in file "bibliotecas/GPS.c"
 19530 ;; Parameters:    Size  Location     Type
 19531 ;;		None
 19532 ;; Auto vars:     Size  Location     Type
 19533 ;;		None
 19534 ;; Return value:  Size  Location     Type
 19535 ;;                  2   25[COMRAM] unsigned int 
 19536 ;; Registers used:
 19537 ;;		wreg, status,2, status,0, prodl, prodh
 19538 ;; Tracked objects:
 19539 ;;		On entry : 3F/1
 19540 ;;		On exit  : 3F/1
 19541 ;;		Unchanged: 0/0
 19542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19543 ;;      Params:         2       0       0       0       0       0       0       0       0
 19544 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19545 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19546 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19547 ;;Total ram usage:        4 bytes
 19548 ;; Hardware stack levels used:    1
 19549 ;; Hardware stack levels required when called:    3
 19550 ;; This function calls:
 19551 ;;		Nothing
 19552 ;; This function is called by:
 19553 ;;		_get_fattime
 19554 ;; This function uses a non-reentrant model
 19555 ;;
 19556                           
 19557                           	psect	text107
 19558  005862                     __ptext107:
 19559                           	callstack 0
 19560  005862                     _gps_ano:
 19561                           	callstack 21
 19562                           
 19563                           ; BSR set to: 1
 19564                           ;GPS.c: 239: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 19565                           
 19566                           ; BSR set to: 1
 19567                           ;incstack = 0
 19568  005862  51C8               	movf	(_rawDate+4)& (0+255),w,b
 19569  005864  0D0A               	mullw	10
 19570  005866  CFF3 F01C          	movff	prodl,??_gps_ano
 19571  00586A  CFF4 F01D          	movff	prodh,??_gps_ano+1
 19572  00586E  51C9               	movf	(_rawDate+5)& (0+255),w,b
 19573  005870  261C               	addwf	??_gps_ano^0,f,c
 19574  005872  0E00               	movlw	0
 19575  005874  221D               	addwfc	(??_gps_ano+1)^0,f,c
 19576  005876  0EF0               	movlw	240
 19577  005878  241C               	addwf	??_gps_ano^0,w,c
 19578  00587A  6E1A               	movwf	?_gps_ano^0,c
 19579  00587C  0EFD               	movlw	253
 19580  00587E  201D               	addwfc	(??_gps_ano+1)^0,w,c
 19581  005880  6E1B               	movwf	(?_gps_ano+1)^0,c
 19582                           
 19583                           ; BSR set to: 1
 19584  005882  0012               	return		;funcret
 19585  005884                     __end_of_gps_ano:
 19586                           	callstack 0
 19587                           
 19588 ;; *************** function _desliga_uart *****************
 19589 ;; Defined at:
 19590 ;;		line 223 in file "bibliotecas/uart.c"
 19591 ;; Parameters:    Size  Location     Type
 19592 ;;		None
 19593 ;; Auto vars:     Size  Location     Type
 19594 ;;		None
 19595 ;; Return value:  Size  Location     Type
 19596 ;;                  1    wreg      void 
 19597 ;; Registers used:
 19598 ;;		wreg, status,2
 19599 ;; Tracked objects:
 19600 ;;		On entry : 0/1
 19601 ;;		On exit  : 0/0
 19602 ;;		Unchanged: 0/0
 19603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19604 ;;      Params:         0       0       0       0       0       0       0       0       0
 19605 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19607 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19608 ;;Total ram usage:        0 bytes
 19609 ;; Hardware stack levels used:    1
 19610 ;; Hardware stack levels required when called:    3
 19611 ;; This function calls:
 19612 ;;		Nothing
 19613 ;; This function is called by:
 19614 ;;		_grava_sd
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text108
 19619  005998                     __ptext108:
 19620                           	callstack 0
 19621  005998                     _desliga_uart:
 19622                           	callstack 24
 19623                           
 19624                           ;uart.c: 226: TRISCbits.RC6 = 1;
 19625                           
 19626                           ; BSR set to: 1
 19627                           ;incstack = 0
 19628  005998  8C94               	bsf	148,6,c	;volatile
 19629                           
 19630                           ;uart.c: 227: TRISCbits.RC7 = 1;
 19631  00599A  8E94               	bsf	148,7,c	;volatile
 19632                           
 19633                           ;uart.c: 230: TXSTA = 0x00;
 19634  00599C  0E00               	movlw	0
 19635  00599E  6EAC               	movwf	172,c	;volatile
 19636                           
 19637                           ;uart.c: 232: RCSTA = 0x00;
 19638  0059A0  0E00               	movlw	0
 19639  0059A2  6EAB               	movwf	171,c	;volatile
 19640                           
 19641                           ;uart.c: 233: RCREG = 0x00;
 19642  0059A4  0E00               	movlw	0
 19643  0059A6  6EAE               	movwf	174,c	;volatile
 19644  0059A8  0012               	return		;funcret
 19645  0059AA                     __end_of_desliga_uart:
 19646                           	callstack 0
 19647                           
 19648 ;; *************** function _desliga_SPI *****************
 19649 ;; Defined at:
 19650 ;;		line 75 in file "bibliotecas/SPI.c"
 19651 ;; Parameters:    Size  Location     Type
 19652 ;;		None
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;		None
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  1    wreg      void 
 19657 ;; Registers used:
 19658 ;;		wreg, status,2
 19659 ;; Tracked objects:
 19660 ;;		On entry : 0/1
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19664 ;;      Params:         0       0       0       0       0       0       0       0       0
 19665 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19667 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19668 ;;Total ram usage:        0 bytes
 19669 ;; Hardware stack levels used:    1
 19670 ;; Hardware stack levels required when called:    3
 19671 ;; This function calls:
 19672 ;;		Nothing
 19673 ;; This function is called by:
 19674 ;;		_grava_sd
 19675 ;; This function uses a non-reentrant model
 19676 ;;
 19677                           
 19678                           	psect	text109
 19679  0059DC                     __ptext109:
 19680                           	callstack 0
 19681  0059DC                     _desliga_SPI:
 19682                           	callstack 24
 19683                           
 19684                           ;SPI.c: 77: SSPSTAT = 0x00;
 19685                           
 19686                           ;incstack = 0
 19687  0059DC  0E00               	movlw	0
 19688  0059DE  6EC7               	movwf	199,c	;volatile
 19689                           
 19690                           ;SPI.c: 78: SSPCON1 = 0x00;
 19691  0059E0  0E00               	movlw	0
 19692  0059E2  6EC6               	movwf	198,c	;volatile
 19693                           
 19694                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 19695  0059E4  9AC6               	bcf	198,5,c	;volatile
 19696                           
 19697                           ;SPI.c: 80: SSPBUF = 0x00;
 19698  0059E6  0E00               	movlw	0
 19699  0059E8  6EC9               	movwf	201,c	;volatile
 19700  0059EA  0012               	return		;funcret
 19701  0059EC                     __end_of_desliga_SPI:
 19702                           	callstack 0
 19703                           
 19704 ;; *************** function _fix *****************
 19705 ;; Defined at:
 19706 ;;		line 326 in file "bibliotecas/GPS.c"
 19707 ;; Parameters:    Size  Location     Type
 19708 ;;		None
 19709 ;; Auto vars:     Size  Location     Type
 19710 ;;		None
 19711 ;; Return value:  Size  Location     Type
 19712 ;;                  2   25[COMRAM] PTR unsigned char 
 19713 ;; Registers used:
 19714 ;;		wreg, status,2, status,0
 19715 ;; Tracked objects:
 19716 ;;		On entry : 0/1
 19717 ;;		On exit  : 0/0
 19718 ;;		Unchanged: 0/0
 19719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19720 ;;      Params:         2       0       0       0       0       0       0       0       0
 19721 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19722 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19723 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19724 ;;Total ram usage:        2 bytes
 19725 ;; Hardware stack levels used:    1
 19726 ;; Hardware stack levels required when called:    3
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_disparo_gravacao
 19731 ;;		_troca_de_tela
 19732 ;; This function uses a non-reentrant model
 19733 ;;
 19734                           
 19735                           	psect	text110
 19736  005A68                     __ptext110:
 19737                           	callstack 0
 19738  005A68                     _fix:
 19739                           	callstack 25
 19740                           
 19741                           ;GPS.c: 328: return rawFix;
 19742                           
 19743                           ;incstack = 0
 19744  005A68  0EE3               	movlw	low _rawFix
 19745  005A6A  6E1A               	movwf	?_fix^0,c
 19746  005A6C  0E01               	movlw	high _rawFix
 19747  005A6E  6E1B               	movwf	(?_fix+1)^0,c
 19748  005A70  0012               	return		;funcret
 19749  005A72                     __end_of_fix:
 19750                           	callstack 0
 19751                           
 19752 ;; *************** function _dados_gps_to_sd *****************
 19753 ;; Defined at:
 19754 ;;		line 349 in file "bibliotecas/GPS.c"
 19755 ;; Parameters:    Size  Location     Type
 19756 ;;		None
 19757 ;; Auto vars:     Size  Location     Type
 19758 ;;		None
 19759 ;; Return value:  Size  Location     Type
 19760 ;;                  1    wreg      void 
 19761 ;; Registers used:
 19762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/1
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19768 ;;      Params:         0       0       0       0       0       0       0       0       0
 19769 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19771 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19772 ;;Total ram usage:        0 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; Hardware stack levels required when called:    7
 19775 ;; This function calls:
 19776 ;;		_monta_sd
 19777 ;; This function is called by:
 19778 ;;		_disparo_gravacao
 19779 ;; This function uses a non-reentrant model
 19780 ;;
 19781                           
 19782                           	psect	text111
 19783  0050B6                     __ptext111:
 19784                           	callstack 0
 19785  0050B6                     _dados_gps_to_sd:
 19786                           	callstack 21
 19787                           
 19788                           ;GPS.c: 351: monta_sd(0, rawTime);
 19789                           
 19790                           ;incstack = 0
 19791  0050B6  0EB2               	movlw	low _rawTime
 19792  0050B8  6E20               	movwf	monta_sd@dado^0,c
 19793  0050BA  0E01               	movlw	high _rawTime
 19794  0050BC  6E21               	movwf	(monta_sd@dado+1)^0,c
 19795  0050BE  0E00               	movlw	0
 19796  0050C0  ECBA  F007         	call	_monta_sd
 19797                           
 19798                           ;GPS.c: 352: monta_sd(1, rawDate);
 19799  0050C4  0EC4               	movlw	low _rawDate
 19800  0050C6  6E20               	movwf	monta_sd@dado^0,c
 19801  0050C8  0E01               	movlw	high _rawDate
 19802  0050CA  6E21               	movwf	(monta_sd@dado+1)^0,c
 19803  0050CC  0E01               	movlw	1
 19804  0050CE  ECBA  F007         	call	_monta_sd
 19805                           
 19806                           ;GPS.c: 353: monta_sd(2, rawLatitude);
 19807  0050D2  0E9A               	movlw	low _rawLatitude
 19808  0050D4  6E20               	movwf	monta_sd@dado^0,c
 19809  0050D6  0E01               	movlw	high _rawLatitude
 19810  0050D8  6E21               	movwf	(monta_sd@dado+1)^0,c
 19811  0050DA  0E02               	movlw	2
 19812  0050DC  ECBA  F007         	call	_monta_sd
 19813                           
 19814                           ;GPS.c: 354: monta_sd(3, rawLongitude);
 19815  0050E0  0E81               	movlw	low _rawLongitude
 19816  0050E2  6E20               	movwf	monta_sd@dado^0,c
 19817  0050E4  0E01               	movlw	high _rawLongitude
 19818  0050E6  6E21               	movwf	(monta_sd@dado+1)^0,c
 19819  0050E8  0E03               	movlw	3
 19820  0050EA  ECBA  F007         	call	_monta_sd
 19821                           
 19822                           ;GPS.c: 355: monta_sd(5, rawTime);
 19823  0050EE  0EB2               	movlw	low _rawTime
 19824  0050F0  6E20               	movwf	monta_sd@dado^0,c
 19825  0050F2  0E01               	movlw	high _rawTime
 19826  0050F4  6E21               	movwf	(monta_sd@dado+1)^0,c
 19827  0050F6  0E05               	movlw	5
 19828  0050F8  ECBA  F007         	call	_monta_sd
 19829                           
 19830                           ;GPS.c: 356: monta_sd(6, rawDate);
 19831  0050FC  0EC4               	movlw	low _rawDate
 19832  0050FE  6E20               	movwf	monta_sd@dado^0,c
 19833  005100  0E01               	movlw	high _rawDate
 19834  005102  6E21               	movwf	(monta_sd@dado+1)^0,c
 19835  005104  0E06               	movlw	6
 19836  005106  ECBA  F007         	call	_monta_sd
 19837  00510A  0012               	return		;funcret
 19838  00510C                     __end_of_dados_gps_to_sd:
 19839                           	callstack 0
 19840                           
 19841 ;; *************** function _monta_sd *****************
 19842 ;; Defined at:
 19843 ;;		line 309 in file "bibliotecas/SDCard.c"
 19844 ;; Parameters:    Size  Location     Type
 19845 ;;  index           1    wreg     unsigned char 
 19846 ;;  dado            2   31[COMRAM] PTR unsigned char 
 19847 ;;		 -> verifica_dados_operacionais@dados_vel(18), verifica_dados_operacionais@dados_long(36), verifica_dados_operaciona
      +is@dados_lat(33), verifica_dados_operacionais@dados_data(18), 
 19848 ;;		 -> verifica_dados_operacionais@dados_hora(18), STR_24(7), STR_23(5), rawDate(7), 
 19849 ;;		 -> rawLongitude(13), rawLatitude(12), rawTime(11), 
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  index           1   34[COMRAM] unsigned char 
 19852 ;;  i               1   35[COMRAM] unsigned char 
 19853 ;;  size            1    0        unsigned char 
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  1    wreg      void 
 19856 ;; Registers used:
 19857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19858 ;; Tracked objects:
 19859 ;;		On entry : 0/0
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19863 ;;      Params:         2       0       0       0       0       0       0       0       0
 19864 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19865 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19866 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19867 ;;Total ram usage:        5 bytes
 19868 ;; Hardware stack levels used:    1
 19869 ;; Hardware stack levels required when called:    6
 19870 ;; This function calls:
 19871 ;;		_escreve_frase_ram_lcd
 19872 ;;		_posicao_cursor_lcd
 19873 ;;		_strlen
 19874 ;; This function is called by:
 19875 ;;		_dados_gps_to_sd
 19876 ;;		_verifica_fence
 19877 ;;		_verifica_dados_operacionais
 19878 ;; This function uses a non-reentrant model
 19879 ;;
 19880                           
 19881                           	psect	text112
 19882  000F74                     __ptext112:
 19883                           	callstack 0
 19884  000F74                     _monta_sd:
 19885                           	callstack 21
 19886                           
 19887                           ;incstack = 0
 19888                           ;monta_sd@index stored from wreg
 19889  000F74  6E23               	movwf	monta_sd@index^0,c
 19890  000F76  C020  F01A         	movff	monta_sd@dado,strlen@s
 19891  000F7A  C021  F01B         	movff	monta_sd@dado+1,strlen@s+1
 19892  000F7E  EC3E  F02A         	call	_strlen	;wreg free
 19893                           
 19894                           ;SDCard.c: 313: switch(index)
 19895  000F82  D1B6               	goto	l12430
 19896  000F84                     l12294:
 19897                           
 19898                           ;SDCard.c: 316: for(i=0; i<6;i++)
 19899  000F84  0E00               	movlw	0
 19900  000F86  6E24               	movwf	monta_sd@i^0,c
 19901  000F88                     l12300:
 19902                           
 19903                           ;SDCard.c: 317: {;SDCard.c: 318: if(*dado != '\0' && *dado != '.')
 19904  000F88  C020  FFF6         	movff	monta_sd@dado,tblptrl
 19905  000F8C  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 19906  000F90  6AF8               	clrf	tblptru,c
 19907  000F92  0E07               	movlw	(high __ramtop+-1)
 19908  000F94  64F7               	cpfsgt	tblptrh,c
 19909  000F96  D003               	bra	u15027
 19910  000F98  0008               	tblrd		*
 19911  000F9A  50F5               	movf	tablat,w,c
 19912  000F9C  D005               	bra	u15020
 19913  000F9E                     u15027:
 19914  000F9E  CFF6 FFE1          	movff	tblptrl,fsr1l
 19915  000FA2  CFF7 FFE2          	movff	tblptrh,fsr1h
 19916  000FA6  50E7               	movf	indf1,w,c
 19917  000FA8                     u15020:
 19918  000FA8  0900               	iorlw	0
 19919  000FAA  B4D8               	btfsc	status,2,c
 19920  000FAC  D02A               	goto	l12306
 19921  000FAE  C020  FFF6         	movff	monta_sd@dado,tblptrl
 19922  000FB2  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 19923  000FB6  6AF8               	clrf	tblptru,c
 19924  000FB8  0E07               	movlw	(high __ramtop+-1)
 19925  000FBA  64F7               	cpfsgt	tblptrh,c
 19926  000FBC  D003               	bra	u15047
 19927  000FBE  0008               	tblrd		*
 19928  000FC0  50F5               	movf	tablat,w,c
 19929  000FC2  D005               	bra	u15040
 19930  000FC4                     u15047:
 19931  000FC4  CFF6 FFE1          	movff	tblptrl,fsr1l
 19932  000FC8  CFF7 FFE2          	movff	tblptrh,fsr1h
 19933  000FCC  50E7               	movf	indf1,w,c
 19934  000FCE                     u15040:
 19935  000FCE  0A2E               	xorlw	46
 19936  000FD0  B4D8               	btfsc	status,2,c
 19937  000FD2  D017               	goto	l12306
 19938                           
 19939                           ;SDCard.c: 319: {;SDCard.c: 320: hora[i] = *dado;
 19940  000FD4  C020  FFF6         	movff	monta_sd@dado,tblptrl
 19941  000FD8  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 19942  000FDC  6AF8               	clrf	tblptru,c
 19943  000FDE  0ECB               	movlw	low _hora
 19944  000FE0  2424               	addwf	monta_sd@i^0,w,c
 19945  000FE2  6ED9               	movwf	fsr2l,c
 19946  000FE4  6ADA               	clrf	fsr2h,c
 19947  000FE6  0E01               	movlw	high _hora
 19948  000FE8  22DA               	addwfc	fsr2h,f,c
 19949  000FEA  0E07               	movlw	(high __ramtop+-1)
 19950  000FEC  64F7               	cpfsgt	tblptrh,c
 19951  000FEE  D003               	bra	u15067
 19952  000FF0  0008               	tblrd		*
 19953  000FF2  50F5               	movf	tablat,w,c
 19954  000FF4  D005               	bra	u15060
 19955  000FF6                     u15067:
 19956  000FF6  CFF6 FFE1          	movff	tblptrl,fsr1l
 19957  000FFA  CFF7 FFE2          	movff	tblptrh,fsr1h
 19958  000FFE  50E7               	movf	indf1,w,c
 19959  001000                     u15060:
 19960  001000  6EDF               	movwf	indf2,c
 19961  001002                     l12306:
 19962                           
 19963                           ;SDCard.c: 321: };SDCard.c: 322: dado++;
 19964  001002  4A20               	infsnz	monta_sd@dado^0,f,c
 19965  001004  2A21               	incf	(monta_sd@dado+1)^0,f,c
 19966  001006  2A24               	incf	monta_sd@i^0,f,c
 19967  001008  0E05               	movlw	5
 19968  00100A  6424               	cpfsgt	monta_sd@i^0,c
 19969  00100C  D7BD               	goto	l12300
 19970  00100E  0012               	return	
 19971  001010                     l12312:
 19972                           
 19973                           ;SDCard.c: 327: for(i=0; i<6;i++)
 19974  001010  0E00               	movlw	0
 19975  001012  6E24               	movwf	monta_sd@i^0,c
 19976  001014                     l12318:
 19977                           
 19978                           ;SDCard.c: 328: {;SDCard.c: 329: if(*dado != '\0')
 19979  001014  C020  FFF6         	movff	monta_sd@dado,tblptrl
 19980  001018  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 19981  00101C  6AF8               	clrf	tblptru,c
 19982  00101E  0E07               	movlw	(high __ramtop+-1)
 19983  001020  64F7               	cpfsgt	tblptrh,c
 19984  001022  D003               	bra	u15087
 19985  001024  0008               	tblrd		*
 19986  001026  50F5               	movf	tablat,w,c
 19987  001028  D005               	bra	u15080
 19988  00102A                     u15087:
 19989  00102A  CFF6 FFE1          	movff	tblptrl,fsr1l
 19990  00102E  CFF7 FFE2          	movff	tblptrh,fsr1h
 19991  001032  50E7               	movf	indf1,w,c
 19992  001034                     u15080:
 19993  001034  0900               	iorlw	0
 19994  001036  B4D8               	btfsc	status,2,c
 19995  001038  D017               	goto	l12322
 19996                           
 19997                           ;SDCard.c: 330: {;SDCard.c: 331: data[i] = *dado;
 19998  00103A  C020  FFF6         	movff	monta_sd@dado,tblptrl
 19999  00103E  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20000  001042  6AF8               	clrf	tblptru,c
 20001  001044  0E23               	movlw	low _data
 20002  001046  2424               	addwf	monta_sd@i^0,w,c
 20003  001048  6ED9               	movwf	fsr2l,c
 20004  00104A  6ADA               	clrf	fsr2h,c
 20005  00104C  0E01               	movlw	high _data
 20006  00104E  22DA               	addwfc	fsr2h,f,c
 20007  001050  0E07               	movlw	(high __ramtop+-1)
 20008  001052  64F7               	cpfsgt	tblptrh,c
 20009  001054  D003               	bra	u15107
 20010  001056  0008               	tblrd		*
 20011  001058  50F5               	movf	tablat,w,c
 20012  00105A  D005               	bra	u15100
 20013  00105C                     u15107:
 20014  00105C  CFF6 FFE1          	movff	tblptrl,fsr1l
 20015  001060  CFF7 FFE2          	movff	tblptrh,fsr1h
 20016  001064  50E7               	movf	indf1,w,c
 20017  001066                     u15100:
 20018  001066  6EDF               	movwf	indf2,c
 20019  001068                     l12322:
 20020                           
 20021                           ;SDCard.c: 332: };SDCard.c: 333: dado++;
 20022  001068  4A20               	infsnz	monta_sd@dado^0,f,c
 20023  00106A  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20024  00106C  2A24               	incf	monta_sd@i^0,f,c
 20025  00106E  0E05               	movlw	5
 20026  001070  6424               	cpfsgt	monta_sd@i^0,c
 20027  001072  D7D0               	goto	l12318
 20028  001074  0012               	return	
 20029  001076                     l12328:
 20030                           
 20031                           ;SDCard.c: 338: for(i=0; i<11;i++)
 20032  001076  0E00               	movlw	0
 20033  001078  6E24               	movwf	monta_sd@i^0,c
 20034  00107A                     l12334:
 20035                           
 20036                           ;SDCard.c: 339: {;SDCard.c: 340: if(*dado != '\0')
 20037  00107A  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20038  00107E  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20039  001082  6AF8               	clrf	tblptru,c
 20040  001084  0E07               	movlw	(high __ramtop+-1)
 20041  001086  64F7               	cpfsgt	tblptrh,c
 20042  001088  D003               	bra	u15127
 20043  00108A  0008               	tblrd		*
 20044  00108C  50F5               	movf	tablat,w,c
 20045  00108E  D005               	bra	u15120
 20046  001090                     u15127:
 20047  001090  CFF6 FFE1          	movff	tblptrl,fsr1l
 20048  001094  CFF7 FFE2          	movff	tblptrh,fsr1h
 20049  001098  50E7               	movf	indf1,w,c
 20050  00109A                     u15120:
 20051  00109A  0900               	iorlw	0
 20052  00109C  B4D8               	btfsc	status,2,c
 20053  00109E  D017               	goto	l12338
 20054                           
 20055                           ;SDCard.c: 341: {;SDCard.c: 342: lt[i] = *dado;
 20056  0010A0  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20057  0010A4  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20058  0010A8  6AF8               	clrf	tblptru,c
 20059  0010AA  0E8E               	movlw	low _lt
 20060  0010AC  2424               	addwf	monta_sd@i^0,w,c
 20061  0010AE  6ED9               	movwf	fsr2l,c
 20062  0010B0  6ADA               	clrf	fsr2h,c
 20063  0010B2  0E01               	movlw	high _lt
 20064  0010B4  22DA               	addwfc	fsr2h,f,c
 20065  0010B6  0E07               	movlw	(high __ramtop+-1)
 20066  0010B8  64F7               	cpfsgt	tblptrh,c
 20067  0010BA  D003               	bra	u15147
 20068  0010BC  0008               	tblrd		*
 20069  0010BE  50F5               	movf	tablat,w,c
 20070  0010C0  D005               	bra	u15140
 20071  0010C2                     u15147:
 20072  0010C2  CFF6 FFE1          	movff	tblptrl,fsr1l
 20073  0010C6  CFF7 FFE2          	movff	tblptrh,fsr1h
 20074  0010CA  50E7               	movf	indf1,w,c
 20075  0010CC                     u15140:
 20076  0010CC  6EDF               	movwf	indf2,c
 20077  0010CE                     l12338:
 20078                           
 20079                           ;SDCard.c: 343: };SDCard.c: 344: dado++;
 20080  0010CE  4A20               	infsnz	monta_sd@dado^0,f,c
 20081  0010D0  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20082  0010D2  2A24               	incf	monta_sd@i^0,f,c
 20083  0010D4  0E0A               	movlw	10
 20084  0010D6  6424               	cpfsgt	monta_sd@i^0,c
 20085  0010D8  D7D0               	goto	l12334
 20086                           
 20087                           ;SDCard.c: 345: };SDCard.c: 346: posicao_cursor_lcd(1,0);
 20088  0010DA  0E00               	movlw	0
 20089  0010DC  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 20090  0010DE  0E01               	movlw	1
 20091  0010E0  EC21  F027         	call	_posicao_cursor_lcd
 20092                           
 20093                           ;SDCard.c: 347: escreve_frase_ram_lcd(lt);
 20094  0010E4  0E8E               	movlw	low _lt
 20095  0010E6  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 20096  0010E8  0E01               	movlw	high _lt
 20097  0010EA  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 20098  0010EC  ECAF  F028         	call	_escreve_frase_ram_lcd	;wreg free
 20099                           
 20100                           ;SDCard.c: 348: break;
 20101  0010F0  0012               	return	
 20102  0010F2                     l12348:
 20103                           
 20104                           ;SDCard.c: 351: for(i=0; i<12;i++)
 20105  0010F2  0E00               	movlw	0
 20106  0010F4  6E24               	movwf	monta_sd@i^0,c
 20107  0010F6                     l12354:
 20108                           
 20109                           ;SDCard.c: 352: {;SDCard.c: 353: if(*dado != '\0')
 20110  0010F6  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20111  0010FA  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20112  0010FE  6AF8               	clrf	tblptru,c
 20113  001100  0E07               	movlw	(high __ramtop+-1)
 20114  001102  64F7               	cpfsgt	tblptrh,c
 20115  001104  D003               	bra	u15167
 20116  001106  0008               	tblrd		*
 20117  001108  50F5               	movf	tablat,w,c
 20118  00110A  D005               	bra	u15160
 20119  00110C                     u15167:
 20120  00110C  CFF6 FFE1          	movff	tblptrl,fsr1l
 20121  001110  CFF7 FFE2          	movff	tblptrh,fsr1h
 20122  001114  50E7               	movf	indf1,w,c
 20123  001116                     u15160:
 20124  001116  0900               	iorlw	0
 20125  001118  B4D8               	btfsc	status,2,c
 20126  00111A  D017               	goto	l12358
 20127                           
 20128                           ;SDCard.c: 354: {;SDCard.c: 355: lo[i] = *dado;
 20129  00111C  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20130  001120  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20131  001124  6AF8               	clrf	tblptru,c
 20132  001126  0E74               	movlw	low _lo
 20133  001128  2424               	addwf	monta_sd@i^0,w,c
 20134  00112A  6ED9               	movwf	fsr2l,c
 20135  00112C  6ADA               	clrf	fsr2h,c
 20136  00112E  0E01               	movlw	high _lo
 20137  001130  22DA               	addwfc	fsr2h,f,c
 20138  001132  0E07               	movlw	(high __ramtop+-1)
 20139  001134  64F7               	cpfsgt	tblptrh,c
 20140  001136  D003               	bra	u15187
 20141  001138  0008               	tblrd		*
 20142  00113A  50F5               	movf	tablat,w,c
 20143  00113C  D005               	bra	u15180
 20144  00113E                     u15187:
 20145  00113E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20146  001142  CFF7 FFE2          	movff	tblptrh,fsr1h
 20147  001146  50E7               	movf	indf1,w,c
 20148  001148                     u15180:
 20149  001148  6EDF               	movwf	indf2,c
 20150  00114A                     l12358:
 20151                           
 20152                           ;SDCard.c: 356: };SDCard.c: 357: dado++;
 20153  00114A  4A20               	infsnz	monta_sd@dado^0,f,c
 20154  00114C  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20155  00114E  2A24               	incf	monta_sd@i^0,f,c
 20156  001150  0E0B               	movlw	11
 20157  001152  6424               	cpfsgt	monta_sd@i^0,c
 20158  001154  D7D0               	goto	l12354
 20159  001156  0012               	return	
 20160  001158                     l12364:
 20161                           
 20162                           ;SDCard.c: 363: for(i=0; i<6;i++)
 20163  001158  0E00               	movlw	0
 20164  00115A  6E24               	movwf	monta_sd@i^0,c
 20165  00115C                     l12370:
 20166                           
 20167                           ;SDCard.c: 364: {;SDCard.c: 365: if(*dado != ' ' && *dado != '\0')
 20168  00115C  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20169  001160  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20170  001164  6AF8               	clrf	tblptru,c
 20171  001166  0E07               	movlw	(high __ramtop+-1)
 20172  001168  64F7               	cpfsgt	tblptrh,c
 20173  00116A  D003               	bra	u15207
 20174  00116C  0008               	tblrd		*
 20175  00116E  50F5               	movf	tablat,w,c
 20176  001170  D005               	bra	u15200
 20177  001172                     u15207:
 20178  001172  CFF6 FFE1          	movff	tblptrl,fsr1l
 20179  001176  CFF7 FFE2          	movff	tblptrh,fsr1h
 20180  00117A  50E7               	movf	indf1,w,c
 20181  00117C                     u15200:
 20182  00117C  0A20               	xorlw	32
 20183  00117E  B4D8               	btfsc	status,2,c
 20184  001180  D02A               	goto	l12376
 20185  001182  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20186  001186  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20187  00118A  6AF8               	clrf	tblptru,c
 20188  00118C  0E07               	movlw	(high __ramtop+-1)
 20189  00118E  64F7               	cpfsgt	tblptrh,c
 20190  001190  D003               	bra	u15227
 20191  001192  0008               	tblrd		*
 20192  001194  50F5               	movf	tablat,w,c
 20193  001196  D005               	bra	u15220
 20194  001198                     u15227:
 20195  001198  CFF6 FFE1          	movff	tblptrl,fsr1l
 20196  00119C  CFF7 FFE2          	movff	tblptrh,fsr1h
 20197  0011A0  50E7               	movf	indf1,w,c
 20198  0011A2                     u15220:
 20199  0011A2  0900               	iorlw	0
 20200  0011A4  B4D8               	btfsc	status,2,c
 20201  0011A6  D017               	goto	l12376
 20202                           
 20203                           ;SDCard.c: 366: {;SDCard.c: 367: fence[i] = *dado;
 20204  0011A8  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20205  0011AC  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20206  0011B0  6AF8               	clrf	tblptru,c
 20207  0011B2  0EBD               	movlw	low _fence
 20208  0011B4  2424               	addwf	monta_sd@i^0,w,c
 20209  0011B6  6ED9               	movwf	fsr2l,c
 20210  0011B8  6ADA               	clrf	fsr2h,c
 20211  0011BA  0E01               	movlw	high _fence
 20212  0011BC  22DA               	addwfc	fsr2h,f,c
 20213  0011BE  0E07               	movlw	(high __ramtop+-1)
 20214  0011C0  64F7               	cpfsgt	tblptrh,c
 20215  0011C2  D003               	bra	u15247
 20216  0011C4  0008               	tblrd		*
 20217  0011C6  50F5               	movf	tablat,w,c
 20218  0011C8  D005               	bra	u15240
 20219  0011CA                     u15247:
 20220  0011CA  CFF6 FFE1          	movff	tblptrl,fsr1l
 20221  0011CE  CFF7 FFE2          	movff	tblptrh,fsr1h
 20222  0011D2  50E7               	movf	indf1,w,c
 20223  0011D4                     u15240:
 20224  0011D4  6EDF               	movwf	indf2,c
 20225  0011D6                     l12376:
 20226                           
 20227                           ;SDCard.c: 368: };SDCard.c: 369: dado++;
 20228  0011D6  4A20               	infsnz	monta_sd@dado^0,f,c
 20229  0011D8  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20230  0011DA  2A24               	incf	monta_sd@i^0,f,c
 20231  0011DC  0E05               	movlw	5
 20232  0011DE  6424               	cpfsgt	monta_sd@i^0,c
 20233  0011E0  D7BD               	goto	l12370
 20234  0011E2  0012               	return	
 20235  0011E4                     l12382:
 20236                           
 20237                           ;SDCard.c: 374: for(i=0; i<4;i++)
 20238  0011E4  0E00               	movlw	0
 20239  0011E6  6E24               	movwf	monta_sd@i^0,c
 20240  0011E8                     l12388:
 20241                           
 20242                           ;SDCard.c: 375: {;SDCard.c: 376: string_dado.hora_name[i] = *dado;
 20243  0011E8  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20244  0011EC  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20245  0011F0  6AF8               	clrf	tblptru,c
 20246  0011F2  0E8F               	movlw	low (_string_dado+20)
 20247  0011F4  2424               	addwf	monta_sd@i^0,w,c
 20248  0011F6  6ED9               	movwf	fsr2l,c
 20249  0011F8  6ADA               	clrf	fsr2h,c
 20250  0011FA  0E02               	movlw	high (_string_dado+20)
 20251  0011FC  22DA               	addwfc	fsr2h,f,c
 20252  0011FE  0E07               	movlw	(high __ramtop+-1)
 20253  001200  64F7               	cpfsgt	tblptrh,c
 20254  001202  D003               	bra	u15267
 20255  001204  0008               	tblrd		*
 20256  001206  50F5               	movf	tablat,w,c
 20257  001208  D005               	bra	u15260
 20258  00120A                     u15267:
 20259  00120A  CFF6 FFE1          	movff	tblptrl,fsr1l
 20260  00120E  CFF7 FFE2          	movff	tblptrh,fsr1h
 20261  001212  50E7               	movf	indf1,w,c
 20262  001214                     u15260:
 20263  001214  6EDF               	movwf	indf2,c
 20264                           
 20265                           ;SDCard.c: 377: dado++;
 20266  001216  4A20               	infsnz	monta_sd@dado^0,f,c
 20267  001218  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20268  00121A  2A24               	incf	monta_sd@i^0,f,c
 20269  00121C  0E03               	movlw	3
 20270  00121E  6424               	cpfsgt	monta_sd@i^0,c
 20271  001220  D7E3               	goto	l12388
 20272  001222  0012               	return	
 20273  001224                     l12396:
 20274                           
 20275                           ;SDCard.c: 383: for(i=0; i<4;i++)
 20276  001224  0E00               	movlw	0
 20277  001226  6E24               	movwf	monta_sd@i^0,c
 20278  001228                     l12402:
 20279                           
 20280                           ;SDCard.c: 384: {;SDCard.c: 385: string_dado.data_name[i] = *dado;
 20281  001228  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20282  00122C  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20283  001230  6AF8               	clrf	tblptru,c
 20284  001232  0E8D               	movlw	low (_string_dado+18)
 20285  001234  2424               	addwf	monta_sd@i^0,w,c
 20286  001236  6ED9               	movwf	fsr2l,c
 20287  001238  6ADA               	clrf	fsr2h,c
 20288  00123A  0E02               	movlw	high (_string_dado+18)
 20289  00123C  22DA               	addwfc	fsr2h,f,c
 20290  00123E  0E07               	movlw	(high __ramtop+-1)
 20291  001240  64F7               	cpfsgt	tblptrh,c
 20292  001242  D003               	bra	u15287
 20293  001244  0008               	tblrd		*
 20294  001246  50F5               	movf	tablat,w,c
 20295  001248  D005               	bra	u15280
 20296  00124A                     u15287:
 20297  00124A  CFF6 FFE1          	movff	tblptrl,fsr1l
 20298  00124E  CFF7 FFE2          	movff	tblptrh,fsr1h
 20299  001252  50E7               	movf	indf1,w,c
 20300  001254                     u15280:
 20301  001254  6EDF               	movwf	indf2,c
 20302                           
 20303                           ;SDCard.c: 386: dado++;
 20304  001256  4A20               	infsnz	monta_sd@dado^0,f,c
 20305  001258  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20306  00125A  2A24               	incf	monta_sd@i^0,f,c
 20307  00125C  0E03               	movlw	3
 20308  00125E  6424               	cpfsgt	monta_sd@i^0,c
 20309  001260  D7E3               	goto	l12402
 20310  001262  0012               	return	
 20311  001264                     l12410:
 20312                           
 20313                           ;SDCard.c: 391: for(i=0; i<6;i++)
 20314  001264  0E00               	movlw	0
 20315  001266  6E24               	movwf	monta_sd@i^0,c
 20316  001268                     l12416:
 20317                           
 20318                           ;SDCard.c: 392: {;SDCard.c: 393: if(*dado != ' ' && *dado != '\0')
 20319  001268  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20320  00126C  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20321  001270  6AF8               	clrf	tblptru,c
 20322  001272  0E07               	movlw	(high __ramtop+-1)
 20323  001274  64F7               	cpfsgt	tblptrh,c
 20324  001276  D003               	bra	u15307
 20325  001278  0008               	tblrd		*
 20326  00127A  50F5               	movf	tablat,w,c
 20327  00127C  D005               	bra	u15300
 20328  00127E                     u15307:
 20329  00127E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20330  001282  CFF7 FFE2          	movff	tblptrh,fsr1h
 20331  001286  50E7               	movf	indf1,w,c
 20332  001288                     u15300:
 20333  001288  0A20               	xorlw	32
 20334  00128A  B4D8               	btfsc	status,2,c
 20335  00128C  D02A               	goto	l12422
 20336  00128E  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20337  001292  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20338  001296  6AF8               	clrf	tblptru,c
 20339  001298  0E07               	movlw	(high __ramtop+-1)
 20340  00129A  64F7               	cpfsgt	tblptrh,c
 20341  00129C  D003               	bra	u15327
 20342  00129E  0008               	tblrd		*
 20343  0012A0  50F5               	movf	tablat,w,c
 20344  0012A2  D005               	bra	u15320
 20345  0012A4                     u15327:
 20346  0012A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 20347  0012A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 20348  0012AC  50E7               	movf	indf1,w,c
 20349  0012AE                     u15320:
 20350  0012AE  0900               	iorlw	0
 20351  0012B0  B4D8               	btfsc	status,2,c
 20352  0012B2  D017               	goto	l12422
 20353                           
 20354                           ;SDCard.c: 394: {;SDCard.c: 395: vel[i] = *dado;
 20355  0012B4  C020  FFF6         	movff	monta_sd@dado,tblptrl
 20356  0012B8  C021  FFF7         	movff	monta_sd@dado+1,tblptrh
 20357  0012BC  6AF8               	clrf	tblptru,c
 20358  0012BE  0ED1               	movlw	low _vel
 20359  0012C0  2424               	addwf	monta_sd@i^0,w,c
 20360  0012C2  6ED9               	movwf	fsr2l,c
 20361  0012C4  6ADA               	clrf	fsr2h,c
 20362  0012C6  0E01               	movlw	high _vel
 20363  0012C8  22DA               	addwfc	fsr2h,f,c
 20364  0012CA  0E07               	movlw	(high __ramtop+-1)
 20365  0012CC  64F7               	cpfsgt	tblptrh,c
 20366  0012CE  D003               	bra	u15347
 20367  0012D0  0008               	tblrd		*
 20368  0012D2  50F5               	movf	tablat,w,c
 20369  0012D4  D005               	bra	u15340
 20370  0012D6                     u15347:
 20371  0012D6  CFF6 FFE1          	movff	tblptrl,fsr1l
 20372  0012DA  CFF7 FFE2          	movff	tblptrh,fsr1h
 20373  0012DE  50E7               	movf	indf1,w,c
 20374  0012E0                     u15340:
 20375  0012E0  6EDF               	movwf	indf2,c
 20376  0012E2                     l12422:
 20377                           
 20378                           ;SDCard.c: 396: };SDCard.c: 398: dado++;
 20379  0012E2  4A20               	infsnz	monta_sd@dado^0,f,c
 20380  0012E4  2A21               	incf	(monta_sd@dado+1)^0,f,c
 20381  0012E6  2A24               	incf	monta_sd@i^0,f,c
 20382  0012E8  0E05               	movlw	5
 20383  0012EA  6424               	cpfsgt	monta_sd@i^0,c
 20384  0012EC  D7BD               	goto	l12416
 20385  0012EE  0012               	return	
 20386  0012F0                     l12430:
 20387  0012F0  5023               	movf	monta_sd@index^0,w,c
 20388                           
 20389                           ; Switch size 1, requested type "simple"
 20390                           ; Number of cases is 8, Range of values is 0 to 7
 20391                           ; switch strategies available:
 20392                           ; Name         Instructions Cycles
 20393                           ; simple_byte           25    13 (average)
 20394                           ;	Chosen strategy is simple_byte
 20395  0012F2  0A00               	xorlw	0	; case 0
 20396  0012F4  B4D8               	btfsc	status,2,c
 20397  0012F6  D646               	goto	l12294
 20398  0012F8  0A01               	xorlw	1	; case 1
 20399  0012FA  B4D8               	btfsc	status,2,c
 20400  0012FC  D689               	goto	l12312
 20401  0012FE  0A03               	xorlw	3	; case 2
 20402  001300  B4D8               	btfsc	status,2,c
 20403  001302  D6B9               	goto	l12328
 20404  001304  0A01               	xorlw	1	; case 3
 20405  001306  B4D8               	btfsc	status,2,c
 20406  001308  D6F4               	goto	l12348
 20407  00130A  0A07               	xorlw	7	; case 4
 20408  00130C  B4D8               	btfsc	status,2,c
 20409  00130E  D724               	goto	l12364
 20410  001310  0A01               	xorlw	1	; case 5
 20411  001312  B4D8               	btfsc	status,2,c
 20412  001314  D767               	goto	l12382
 20413  001316  0A03               	xorlw	3	; case 6
 20414  001318  B4D8               	btfsc	status,2,c
 20415  00131A  D784               	goto	l12396
 20416  00131C  0A01               	xorlw	1	; case 7
 20417  00131E  A4D8               	btfss	status,2,c
 20418  001320  0012               	return	
 20419  001322  D7A0               	goto	l12410
 20420  001324                     __end_of_monta_sd:
 20421                           	callstack 0
 20422                           
 20423 ;; *************** function _strlen *****************
 20424 ;; Defined at:
 20425 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 20426 ;; Parameters:    Size  Location     Type
 20427 ;;  s               2   25[COMRAM] PTR const unsigned char 
 20428 ;;		 -> verifica_dados_operacionais@dados_vel(18), verifica_dados_operacionais@dados_long(36), verifica_dados_operaciona
      +is@dados_lat(33), verifica_dados_operacionais@dados_data(18), 
 20429 ;;		 -> verifica_dados_operacionais@dados_hora(18), STR_24(7), STR_23(5), rawDate(7), 
 20430 ;;		 -> rawLongitude(13), rawLatitude(12), rawTime(11), 
 20431 ;; Auto vars:     Size  Location     Type
 20432 ;;  cp              2   27[COMRAM] PTR const unsigned char 
 20433 ;;		 -> verifica_dados_operacionais@dados_vel(18), verifica_dados_operacionais@dados_long(36), verifica_dados_operaciona
      +is@dados_lat(33), verifica_dados_operacionais@dados_data(18), 
 20434 ;;		 -> verifica_dados_operacionais@dados_hora(18), STR_24(7), STR_23(5), rawDate(7), 
 20435 ;;		 -> rawLongitude(13), rawLatitude(12), rawTime(11), 
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  2   25[COMRAM] unsigned int 
 20438 ;; Registers used:
 20439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/0
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20445 ;;      Params:         2       0       0       0       0       0       0       0       0
 20446 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20448 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20449 ;;Total ram usage:        4 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:    3
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_monta_sd
 20456 ;; This function uses a non-reentrant model
 20457 ;;
 20458                           
 20459                           	psect	text113
 20460  00547C                     __ptext113:
 20461                           	callstack 0
 20462  00547C                     _strlen:
 20463                           	callstack 23
 20464                           
 20465                           ;incstack = 0
 20466  00547C  C01A  F01C         	movff	strlen@s,strlen@cp
 20467  005480  C01B  F01D         	movff	strlen@s+1,strlen@cp+1
 20468  005484  D002               	goto	l12188
 20469  005486                     l12186:
 20470  005486  4A1C               	infsnz	strlen@cp^0,f,c
 20471  005488  2A1D               	incf	(strlen@cp+1)^0,f,c
 20472  00548A                     l12188:
 20473  00548A  C01C  FFF6         	movff	strlen@cp,tblptrl
 20474  00548E  C01D  FFF7         	movff	strlen@cp+1,tblptrh
 20475  005492  6AF8               	clrf	tblptru,c
 20476  005494  0E07               	movlw	(high __ramtop+-1)
 20477  005496  64F7               	cpfsgt	tblptrh,c
 20478  005498  D003               	bra	u14807
 20479  00549A  0008               	tblrd		*
 20480  00549C  50F5               	movf	tablat,w,c
 20481  00549E  D005               	bra	u14800
 20482  0054A0                     u14807:
 20483  0054A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 20484  0054A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 20485  0054A8  50E7               	movf	indf1,w,c
 20486  0054AA                     u14800:
 20487  0054AA  0900               	iorlw	0
 20488  0054AC  A4D8               	btfss	status,2,c
 20489  0054AE  D7EB               	goto	l12186
 20490  0054B0  501A               	movf	strlen@s^0,w,c
 20491  0054B2  5C1C               	subwf	strlen@cp^0,w,c
 20492  0054B4  6E1A               	movwf	?_strlen^0,c
 20493  0054B6  501B               	movf	(strlen@s+1)^0,w,c
 20494  0054B8  581D               	subwfb	(strlen@cp+1)^0,w,c
 20495  0054BA  6E1B               	movwf	(?_strlen+1)^0,c
 20496  0054BC  0012               	return		;funcret
 20497  0054BE                     __end_of_strlen:
 20498                           	callstack 0
 20499                           
 20500 ;; *************** function _posicao_cursor_lcd *****************
 20501 ;; Defined at:
 20502 ;;		line 271 in file "bibliotecas/display_lcd.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;  linha           1    wreg     unsigned char 
 20505 ;;  coluna          1   28[COMRAM] unsigned char 
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;  linha           1   29[COMRAM] unsigned char 
 20508 ;;  endereco        1   30[COMRAM] unsigned char 
 20509 ;; Return value:  Size  Location     Type
 20510 ;;                  1    wreg      void 
 20511 ;; Registers used:
 20512 ;;		wreg, status,2, status,0, cstack
 20513 ;; Tracked objects:
 20514 ;;		On entry : 0/0
 20515 ;;		On exit  : 0/0
 20516 ;;		Unchanged: 0/0
 20517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20518 ;;      Params:         1       0       0       0       0       0       0       0       0
 20519 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20520 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20521 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20522 ;;Total ram usage:        3 bytes
 20523 ;; Hardware stack levels used:    1
 20524 ;; Hardware stack levels required when called:    5
 20525 ;; This function calls:
 20526 ;;		_endereco_cursor_lcd
 20527 ;; This function is called by:
 20528 ;;		_sdc_reset
 20529 ;;		_sdc_disk_initialize
 20530 ;;		_mostra_dados_display
 20531 ;;		_escrita_sdcard
 20532 ;;		_monta_sd
 20533 ;;		_mensagem_inicial
 20534 ;;		_troca_de_tela
 20535 ;; This function uses a non-reentrant model
 20536 ;;
 20537                           
 20538                           	psect	text114
 20539  004E42                     __ptext114:
 20540                           	callstack 0
 20541  004E42                     _posicao_cursor_lcd:
 20542                           	callstack 24
 20543                           
 20544                           ;incstack = 0
 20545                           ;posicao_cursor_lcd@linha stored from wreg
 20546  004E42  6E1E               	movwf	posicao_cursor_lcd@linha^0,c
 20547                           
 20548                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 20549  004E44  0E11               	movlw	17
 20550  004E46  601D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 20551  004E48  0012               	return	
 20552  004E4A  D01B               	goto	l10316
 20553  004E4C                     l232:
 20554                           
 20555                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 20556  004E4C  C01D  F01F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 20557                           
 20558                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 20559  004E50  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 20560  004E52  EC87  F026         	call	_endereco_cursor_lcd
 20561                           
 20562                           ;display_lcd.c: 284: break;
 20563  004E56  D022               	goto	l10318
 20564  004E58                     l10300:
 20565                           
 20566                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 20567  004E58  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 20568  004E5A  0F40               	addlw	64
 20569  004E5C  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 20570                           
 20571                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 20572  004E5E  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 20573  004E60  EC87  F026         	call	_endereco_cursor_lcd
 20574                           
 20575                           ;display_lcd.c: 289: break;
 20576  004E64  D01B               	goto	l10318
 20577  004E66                     l10304:
 20578                           
 20579                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 20580  004E66  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 20581  004E68  0F14               	addlw	20
 20582  004E6A  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 20583                           
 20584                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 20585  004E6C  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 20586  004E6E  EC87  F026         	call	_endereco_cursor_lcd
 20587                           
 20588                           ;display_lcd.c: 294: break;
 20589  004E72  D014               	goto	l10318
 20590  004E74                     l10308:
 20591                           
 20592                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 20593  004E74  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 20594  004E76  0F54               	addlw	84
 20595  004E78  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 20596                           
 20597                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 20598  004E7A  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 20599  004E7C  EC87  F026         	call	_endereco_cursor_lcd
 20600                           
 20601                           ;display_lcd.c: 303: break;
 20602                           
 20603                           ;display_lcd.c: 299: break;
 20604  004E80  D00D               	goto	l10318
 20605  004E82                     l10316:
 20606  004E82  501E               	movf	posicao_cursor_lcd@linha^0,w,c
 20607                           
 20608                           ; Switch size 1, requested type "simple"
 20609                           ; Number of cases is 4, Range of values is 1 to 4
 20610                           ; switch strategies available:
 20611                           ; Name         Instructions Cycles
 20612                           ; simple_byte           13     7 (average)
 20613                           ;	Chosen strategy is simple_byte
 20614  004E84  0A01               	xorlw	1	; case 1
 20615  004E86  B4D8               	btfsc	status,2,c
 20616  004E88  D7E1               	goto	l232
 20617  004E8A  0A03               	xorlw	3	; case 2
 20618  004E8C  B4D8               	btfsc	status,2,c
 20619  004E8E  D7E4               	goto	l10300
 20620  004E90  0A01               	xorlw	1	; case 3
 20621  004E92  B4D8               	btfsc	status,2,c
 20622  004E94  D7E8               	goto	l10304
 20623  004E96  0A07               	xorlw	7	; case 4
 20624  004E98  B4D8               	btfsc	status,2,c
 20625  004E9A  D7EC               	goto	l10308
 20626  004E9C                     l10318:
 20627                           
 20628                           ;display_lcd.c: 306: coluna++;
 20629  004E9C  2A1D               	incf	posicao_cursor_lcd@coluna^0,f,c
 20630                           
 20631                           ;display_lcd.c: 307: }
 20632  004E9E  0012               	return	
 20633  004EA0                     __end_of_posicao_cursor_lcd:
 20634                           	callstack 0
 20635                           
 20636 ;; *************** function _endereco_cursor_lcd *****************
 20637 ;; Defined at:
 20638 ;;		line 218 in file "bibliotecas/display_lcd.c"
 20639 ;; Parameters:    Size  Location     Type
 20640 ;;  endereco        1    wreg     unsigned char 
 20641 ;; Auto vars:     Size  Location     Type
 20642 ;;  endereco        1   27[COMRAM] unsigned char 
 20643 ;; Return value:  Size  Location     Type
 20644 ;;                  1    wreg      void 
 20645 ;; Registers used:
 20646 ;;		wreg, status,2, status,0, cstack
 20647 ;; Tracked objects:
 20648 ;;		On entry : 0/0
 20649 ;;		On exit  : 0/0
 20650 ;;		Unchanged: 0/0
 20651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20652 ;;      Params:         0       0       0       0       0       0       0       0       0
 20653 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20655 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20656 ;;Total ram usage:        1 bytes
 20657 ;; Hardware stack levels used:    1
 20658 ;; Hardware stack levels required when called:    4
 20659 ;; This function calls:
 20660 ;;		_delay
 20661 ;; This function is called by:
 20662 ;;		_posicao_cursor_lcd
 20663 ;; This function uses a non-reentrant model
 20664 ;;
 20665                           
 20666                           	psect	text115
 20667  004D0E                     __ptext115:
 20668                           	callstack 0
 20669  004D0E                     _endereco_cursor_lcd:
 20670                           	callstack 24
 20671                           
 20672                           ;incstack = 0
 20673                           ;endereco_cursor_lcd@endereco stored from wreg
 20674  004D0E  6E1C               	movwf	endereco_cursor_lcd@endereco^0,c
 20675                           
 20676                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 20677  004D10  9483               	bcf	131,2,c	;volatile
 20678                           
 20679                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 20680  004D12  9283               	bcf	131,1,c	;volatile
 20681                           
 20682                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 20683  004D14  9083               	bcf	131,0,c	;volatile
 20684                           
 20685                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 20686  004D16  8E83               	bsf	131,7,c	;volatile
 20687                           
 20688                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 20689  004D18  A81C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 20690  004D1A  D002               	goto	l213
 20691  004D1C  8883               	bsf	131,4,c	;volatile
 20692  004D1E  D001               	goto	l10154
 20693  004D20                     l213:
 20694                           
 20695                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 20696  004D20  9883               	bcf	131,4,c	;volatile
 20697  004D22                     l10154:
 20698                           
 20699                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 20700  004D22  AA1C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 20701  004D24  D002               	goto	l215
 20702  004D26  8A83               	bsf	131,5,c	;volatile
 20703  004D28  D001               	goto	l10158
 20704  004D2A                     l215:
 20705                           
 20706                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 20707  004D2A  9A83               	bcf	131,5,c	;volatile
 20708  004D2C                     l10158:
 20709                           
 20710                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 20711  004D2C  AC1C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 20712  004D2E  D002               	goto	l217
 20713  004D30  8C83               	bsf	131,6,c	;volatile
 20714  004D32  D001               	goto	l218
 20715  004D34                     l217:
 20716                           
 20717                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 20718  004D34  9C83               	bcf	131,6,c	;volatile
 20719  004D36                     l218:
 20720                           
 20721                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 20722  004D36  8083               	bsf	131,0,c	;volatile
 20723                           
 20724                           ;display_lcd.c: 236: delay();
 20725  004D38  EC81  F02C         	call	_delay	;wreg free
 20726                           
 20727                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 20728  004D3C  9083               	bcf	131,0,c	;volatile
 20729                           
 20730                           ;display_lcd.c: 238: delay();
 20731  004D3E  EC81  F02C         	call	_delay	;wreg free
 20732                           
 20733                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 20734  004D42  A01C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 20735  004D44  D002               	goto	l219
 20736  004D46  8883               	bsf	131,4,c	;volatile
 20737  004D48  D001               	goto	l220
 20738  004D4A                     l219:
 20739                           
 20740                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 20741  004D4A  9883               	bcf	131,4,c	;volatile
 20742  004D4C                     l220:
 20743                           
 20744                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 20745  004D4C  A21C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 20746  004D4E  D002               	goto	l221
 20747  004D50  8A83               	bsf	131,5,c	;volatile
 20748  004D52  D001               	goto	l222
 20749  004D54                     l221:
 20750                           
 20751                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 20752  004D54  9A83               	bcf	131,5,c	;volatile
 20753  004D56                     l222:
 20754                           
 20755                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 20756  004D56  A41C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 20757  004D58  D002               	goto	l223
 20758  004D5A  8C83               	bsf	131,6,c	;volatile
 20759  004D5C  D001               	goto	l224
 20760  004D5E                     l223:
 20761                           
 20762                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 20763  004D5E  9C83               	bcf	131,6,c	;volatile
 20764  004D60                     l224:
 20765                           
 20766                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 20767  004D60  A61C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 20768  004D62  D002               	goto	l225
 20769  004D64  8E83               	bsf	131,7,c	;volatile
 20770  004D66  D001               	goto	l226
 20771  004D68                     l225:
 20772                           
 20773                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 20774  004D68  9E83               	bcf	131,7,c	;volatile
 20775  004D6A                     l226:
 20776                           
 20777                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 20778  004D6A  8083               	bsf	131,0,c	;volatile
 20779                           
 20780                           ;display_lcd.c: 252: delay();
 20781  004D6C  EC81  F02C         	call	_delay	;wreg free
 20782                           
 20783                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 20784  004D70  9083               	bcf	131,0,c	;volatile
 20785                           
 20786                           ;display_lcd.c: 254: delay();
 20787  004D72  EC81  F02C         	call	_delay	;wreg free
 20788  004D76  0012               	return		;funcret
 20789  004D78                     __end_of_endereco_cursor_lcd:
 20790                           	callstack 0
 20791                           
 20792 ;; *************** function _escreve_frase_ram_lcd *****************
 20793 ;; Defined at:
 20794 ;;		line 445 in file "bibliotecas/display_lcd.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;  buffer          2   28[COMRAM] PTR unsigned char 
 20797 ;;		 -> STR_36(8), STR_35(9), STR_34(4), STR_33(4), 
 20798 ;;		 -> STR_32(5), STR_31(2), STR_30(5), STR_29(7), 
 20799 ;;		 -> STR_28(7), STR_27(2), STR_26(5), STR_25(7), 
 20800 ;;		 -> STR_22(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), lt(12), 
 20801 ;;		 -> STR_12(9), STR_11(10), STR_10(10), STR_9(14), 
 20802 ;;		 -> STR_8(21), STR_7(15), rawLongitude(13), rawLatitude(12), 
 20803 ;;		 -> rawFix(2), escreve_inteiro_lcd@texto(7), STR_4(11), STR_3(10), 
 20804 ;;		 -> STR_2(16), STR_1(11), 
 20805 ;; Auto vars:     Size  Location     Type
 20806 ;;		None
 20807 ;; Return value:  Size  Location     Type
 20808 ;;                  1    wreg      void 
 20809 ;; Registers used:
 20810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20811 ;; Tracked objects:
 20812 ;;		On entry : 0/0
 20813 ;;		On exit  : 0/0
 20814 ;;		Unchanged: 0/0
 20815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20816 ;;      Params:         2       0       0       0       0       0       0       0       0
 20817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20819 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20820 ;;Total ram usage:        2 bytes
 20821 ;; Hardware stack levels used:    1
 20822 ;; Hardware stack levels required when called:    5
 20823 ;; This function calls:
 20824 ;;		_escreve_caractere_lcd
 20825 ;; This function is called by:
 20826 ;;		_sdc_reset
 20827 ;;		_sdc_disk_initialize
 20828 ;;		_escreve_inteiro_lcd
 20829 ;;		_mostra_dados_display
 20830 ;;		_escrita_sdcard
 20831 ;;		_monta_sd
 20832 ;;		_mensagem_inicial
 20833 ;;		_troca_de_tela
 20834 ;; This function uses a non-reentrant model
 20835 ;;
 20836                           
 20837                           	psect	text116
 20838  00515E                     __ptext116:
 20839                           	callstack 0
 20840  00515E                     _escreve_frase_ram_lcd:
 20841                           	callstack 24
 20842                           
 20843                           ;display_lcd.c: 447: while(*buffer)
 20844                           
 20845                           ;incstack = 0
 20846  00515E  D014               	goto	l10328
 20847  005160                     l10324:
 20848                           
 20849                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 20850  005160  C01D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 20851  005164  C01E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 20852  005168  6AF8               	clrf	tblptru,c
 20853  00516A  0E07               	movlw	(high __ramtop+-1)
 20854  00516C  64F7               	cpfsgt	tblptrh,c
 20855  00516E  D003               	bra	u11757
 20856  005170  0008               	tblrd		*
 20857  005172  50F5               	movf	tablat,w,c
 20858  005174  D005               	bra	u11750
 20859  005176                     u11757:
 20860  005176  CFF6 FFE1          	movff	tblptrl,fsr1l
 20861  00517A  CFF7 FFE2          	movff	tblptrh,fsr1h
 20862  00517E  50E7               	movf	indf1,w,c
 20863  005180                     u11750:
 20864  005180  EC16  F026         	call	_escreve_caractere_lcd
 20865                           
 20866                           ;display_lcd.c: 450: buffer++;
 20867  005184  4A1D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 20868  005186  2A1E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 20869  005188                     l10328:
 20870  005188  C01D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 20871  00518C  C01E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 20872  005190  6AF8               	clrf	tblptru,c
 20873  005192  0E07               	movlw	(high __ramtop+-1)
 20874  005194  64F7               	cpfsgt	tblptrh,c
 20875  005196  D003               	bra	u11767
 20876  005198  0008               	tblrd		*
 20877  00519A  50F5               	movf	tablat,w,c
 20878  00519C  D005               	bra	u11760
 20879  00519E                     u11767:
 20880  00519E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20881  0051A2  CFF7 FFE2          	movff	tblptrh,fsr1h
 20882  0051A6  50E7               	movf	indf1,w,c
 20883  0051A8                     u11760:
 20884  0051A8  0900               	iorlw	0
 20885  0051AA  B4D8               	btfsc	status,2,c
 20886  0051AC  0012               	return	
 20887  0051AE  D7D8               	goto	l10324
 20888  0051B0                     __end_of_escreve_frase_ram_lcd:
 20889                           	callstack 0
 20890                           
 20891 ;; *************** function _escreve_caractere_lcd *****************
 20892 ;; Defined at:
 20893 ;;		line 323 in file "bibliotecas/display_lcd.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;  data            1    wreg     unsigned char 
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;  data            1   27[COMRAM] unsigned char 
 20898 ;; Return value:  Size  Location     Type
 20899 ;;                  1    wreg      void 
 20900 ;; Registers used:
 20901 ;;		wreg, status,2, status,0, cstack
 20902 ;; Tracked objects:
 20903 ;;		On entry : 0/0
 20904 ;;		On exit  : 0/0
 20905 ;;		Unchanged: 0/0
 20906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20907 ;;      Params:         0       0       0       0       0       0       0       0       0
 20908 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20909 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20910 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20911 ;;Total ram usage:        1 bytes
 20912 ;; Hardware stack levels used:    1
 20913 ;; Hardware stack levels required when called:    4
 20914 ;; This function calls:
 20915 ;;		_delay
 20916 ;; This function is called by:
 20917 ;;		_escreve_frase_ram_lcd
 20918 ;; This function uses a non-reentrant model
 20919 ;;
 20920                           
 20921                           	psect	text117
 20922  004C2C                     __ptext117:
 20923                           	callstack 0
 20924  004C2C                     _escreve_caractere_lcd:
 20925                           	callstack 24
 20926                           
 20927                           ;incstack = 0
 20928                           ;escreve_caractere_lcd@data stored from wreg
 20929  004C2C  6E1C               	movwf	escreve_caractere_lcd@data^0,c
 20930                           
 20931                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 20932  004C2E  9483               	bcf	131,2,c	;volatile
 20933                           
 20934                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 20935  004C30  8283               	bsf	131,1,c	;volatile
 20936                           
 20937                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 20938  004C32  9083               	bcf	131,0,c	;volatile
 20939                           
 20940                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 20941  004C34  A81C               	btfss	escreve_caractere_lcd@data^0,4,c
 20942  004C36  D002               	goto	l242
 20943  004C38  8883               	bsf	131,4,c	;volatile
 20944  004C3A  D001               	goto	l10186
 20945  004C3C                     l242:
 20946                           
 20947                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 20948  004C3C  9883               	bcf	131,4,c	;volatile
 20949  004C3E                     l10186:
 20950                           
 20951                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 20952  004C3E  AA1C               	btfss	escreve_caractere_lcd@data^0,5,c
 20953  004C40  D002               	goto	l244
 20954  004C42  8A83               	bsf	131,5,c	;volatile
 20955  004C44  D001               	goto	l10190
 20956  004C46                     l244:
 20957                           
 20958                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 20959  004C46  9A83               	bcf	131,5,c	;volatile
 20960  004C48                     l10190:
 20961                           
 20962                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 20963  004C48  AC1C               	btfss	escreve_caractere_lcd@data^0,6,c
 20964  004C4A  D002               	goto	l246
 20965  004C4C  8C83               	bsf	131,6,c	;volatile
 20966  004C4E  D001               	goto	l10194
 20967  004C50                     l246:
 20968                           
 20969                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 20970  004C50  9C83               	bcf	131,6,c	;volatile
 20971  004C52                     l10194:
 20972                           
 20973                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 20974  004C52  AE1C               	btfss	escreve_caractere_lcd@data^0,7,c
 20975  004C54  D002               	goto	l248
 20976  004C56  8E83               	bsf	131,7,c	;volatile
 20977  004C58  D001               	goto	l249
 20978  004C5A                     l248:
 20979                           
 20980                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 20981  004C5A  9E83               	bcf	131,7,c	;volatile
 20982  004C5C                     l249:
 20983                           
 20984                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 20985  004C5C  8083               	bsf	131,0,c	;volatile
 20986                           
 20987                           ;display_lcd.c: 342: delay();
 20988  004C5E  EC81  F02C         	call	_delay	;wreg free
 20989                           
 20990                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 20991  004C62  9083               	bcf	131,0,c	;volatile
 20992                           
 20993                           ;display_lcd.c: 344: delay();
 20994  004C64  EC81  F02C         	call	_delay	;wreg free
 20995                           
 20996                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 20997  004C68  A01C               	btfss	escreve_caractere_lcd@data^0,0,c
 20998  004C6A  D002               	goto	l250
 20999  004C6C  8883               	bsf	131,4,c	;volatile
 21000  004C6E  D001               	goto	l251
 21001  004C70                     l250:
 21002                           
 21003                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 21004  004C70  9883               	bcf	131,4,c	;volatile
 21005  004C72                     l251:
 21006                           
 21007                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 21008  004C72  A21C               	btfss	escreve_caractere_lcd@data^0,1,c
 21009  004C74  D002               	goto	l252
 21010  004C76  8A83               	bsf	131,5,c	;volatile
 21011  004C78  D001               	goto	l253
 21012  004C7A                     l252:
 21013                           
 21014                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 21015  004C7A  9A83               	bcf	131,5,c	;volatile
 21016  004C7C                     l253:
 21017                           
 21018                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 21019  004C7C  A41C               	btfss	escreve_caractere_lcd@data^0,2,c
 21020  004C7E  D002               	goto	l254
 21021  004C80  8C83               	bsf	131,6,c	;volatile
 21022  004C82  D001               	goto	l255
 21023  004C84                     l254:
 21024                           
 21025                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 21026  004C84  9C83               	bcf	131,6,c	;volatile
 21027  004C86                     l255:
 21028                           
 21029                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 21030  004C86  A61C               	btfss	escreve_caractere_lcd@data^0,3,c
 21031  004C88  D002               	goto	l256
 21032  004C8A  8E83               	bsf	131,7,c	;volatile
 21033  004C8C  D001               	goto	l257
 21034  004C8E                     l256:
 21035                           
 21036                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 21037  004C8E  9E83               	bcf	131,7,c	;volatile
 21038  004C90                     l257:
 21039                           
 21040                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 21041  004C90  8083               	bsf	131,0,c	;volatile
 21042                           
 21043                           ;display_lcd.c: 359: delay();
 21044  004C92  EC81  F02C         	call	_delay	;wreg free
 21045                           
 21046                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 21047  004C96  9083               	bcf	131,0,c	;volatile
 21048                           
 21049                           ;display_lcd.c: 361: delay();
 21050  004C98  EC81  F02C         	call	_delay	;wreg free
 21051  004C9C  0012               	return		;funcret
 21052  004C9E                     __end_of_escreve_caractere_lcd:
 21053                           	callstack 0
 21054                           
 21055 ;; *************** function _delay *****************
 21056 ;; Defined at:
 21057 ;;		line 45 in file "bibliotecas/display_lcd.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;		None
 21060 ;; Auto vars:     Size  Location     Type
 21061 ;;  contador_int    1   26[COMRAM] unsigned char 
 21062 ;;  contador_ext    1   25[COMRAM] unsigned char 
 21063 ;; Return value:  Size  Location     Type
 21064 ;;                  1    wreg      void 
 21065 ;; Registers used:
 21066 ;;		wreg, status,2, status,0
 21067 ;; Tracked objects:
 21068 ;;		On entry : 0/0
 21069 ;;		On exit  : 0/0
 21070 ;;		Unchanged: 0/0
 21071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21072 ;;      Params:         0       0       0       0       0       0       0       0       0
 21073 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21075 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21076 ;;Total ram usage:        2 bytes
 21077 ;; Hardware stack levels used:    1
 21078 ;; Hardware stack levels required when called:    3
 21079 ;; This function calls:
 21080 ;;		Nothing
 21081 ;; This function is called by:
 21082 ;;		_init_lcd
 21083 ;;		_escreve_cmd_lcd
 21084 ;;		_endereco_cursor_lcd
 21085 ;;		_escreve_caractere_lcd
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           	psect	text118
 21090  005902                     __ptext118:
 21091                           	callstack 0
 21092  005902                     _delay:
 21093                           	callstack 24
 21094                           
 21095                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 21096                           
 21097                           ;incstack = 0
 21098  005902  0E00               	movlw	0
 21099  005904  6E1A               	movwf	delay@contador_ext^0,c
 21100  005906                     l181:
 21101                           
 21102                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 21103  005906  F000               	nop	
 21104                           
 21105                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 21106  005908  0E00               	movlw	0
 21107  00590A  6E1B               	movwf	delay@contador_int^0,c
 21108  00590C                     l183:
 21109                           
 21110                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 21111  00590C  F000               	nop	
 21112  00590E  2A1B               	incf	delay@contador_int^0,f,c
 21113  005910  0E31               	movlw	49
 21114  005912  641B               	cpfsgt	delay@contador_int^0,c
 21115  005914  D7FB               	goto	l183
 21116  005916  2A1A               	incf	delay@contador_ext^0,f,c
 21117  005918  0E63               	movlw	99
 21118  00591A  641A               	cpfsgt	delay@contador_ext^0,c
 21119  00591C  D7F4               	goto	l181
 21120  00591E  0012               	return	
 21121  005920                     __end_of_delay:
 21122                           	callstack 0
 21123                           
 21124 ;; *************** function _isr *****************
 21125 ;; Defined at:
 21126 ;;		line 108 in file "main.c"
 21127 ;; Parameters:    Size  Location     Type
 21128 ;;		None
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  cont            1   24[COMRAM] unsigned char 
 21131 ;; Return value:  Size  Location     Type
 21132 ;;                  1    wreg      void 
 21133 ;; Registers used:
 21134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21135 ;; Tracked objects:
 21136 ;;		On entry : 0/0
 21137 ;;		On exit  : 0/0
 21138 ;;		Unchanged: 0/0
 21139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21140 ;;      Params:         0       0       0       0       0       0       0       0       0
 21141 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21142 ;;      Temps:         12       0       0       0       0       0       0       0       0
 21143 ;;      Totals:        13       0       0       0       0       0       0       0       0
 21144 ;;Total ram usage:       13 bytes
 21145 ;; Hardware stack levels used:    1
 21146 ;; Hardware stack levels required when called:    2
 21147 ;; This function calls:
 21148 ;;		_GPSRead
 21149 ;;		_recebe_dado_uart
 21150 ;;		i2_write_timer_zero
 21151 ;; This function is called by:
 21152 ;;		Interrupt level 2
 21153 ;; This function uses a non-reentrant model
 21154 ;;
 21155                           
 21156                           	psect	intcode
 21157  000008                     __pintcode:
 21158                           	callstack 0
 21159  000008                     _isr:
 21160                           	callstack 12
 21161                           
 21162                           ;incstack = 0
 21163  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21164  00000A  EDB1  F01D         	call	int_func,f	;refresh shadow registers
 21165                           
 21166                           	psect	intcode_body
 21167  003B62                     __pintcode_body:
 21168                           	callstack 12
 21169  003B62                     int_func:
 21170                           	callstack 12
 21171  003B62  0006               	pop		; remove dummy address from shadow register refresh
 21172  003B64  CFE1 F00F          	movff	fsr1l,??_isr+2
 21173  003B68  CFE2 F010          	movff	fsr1h,??_isr+3
 21174  003B6C  CFD9 F011          	movff	fsr2l,??_isr+4
 21175  003B70  CFDA F012          	movff	fsr2h,??_isr+5
 21176  003B74  CFF3 F013          	movff	prodl,??_isr+6
 21177  003B78  CFF4 F014          	movff	prodh,??_isr+7
 21178  003B7C  CFF6 F015          	movff	tblptrl,??_isr+8
 21179  003B80  CFF7 F016          	movff	tblptrh,??_isr+9
 21180  003B84  CFF8 F017          	movff	tblptru,??_isr+10
 21181  003B88  CFF5 F018          	movff	tablat,??_isr+11
 21182                           
 21183                           ;main.c: 110: unsigned char cont;;main.c: 113: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21184  003B8C  BA9D               	btfsc	157,5,c	;volatile
 21185  003B8E  AA9E               	btfss	158,5,c	;volatile
 21186  003B90  D014               	goto	i2l13432
 21187                           
 21188                           ;main.c: 114: {;main.c: 115: PIR1bits.RCIF = 0;
 21189  003B92  9A9E               	bcf	158,5,c	;volatile
 21190                           
 21191                           ;main.c: 116: data_uart_recebe = recebe_dado_uart();
 21192  003B94  ECD5  F02C         	call	_recebe_dado_uart	;wreg free
 21193  003B98  6E3D               	movwf	_data_uart_recebe^0,c
 21194                           
 21195                           ;main.c: 117: GPSRead(data_uart_recebe);
 21196  003B9A  503D               	movf	_data_uart_recebe^0,w,c
 21197  003B9C  EC6B  F00E         	call	_GPSRead
 21198                           
 21199                           ;main.c: 118: PORTBbits.RB2 = !PORTBbits.RB2;
 21200  003BA0  B481               	btfsc	129,2,c	;volatile
 21201  003BA2  D003               	goto	i2u1682_40
 21202  003BA4  6A0D               	clrf	??_isr^0,c
 21203  003BA6  2A0D               	incf	??_isr^0,f,c
 21204  003BA8  D001               	goto	i2u1683_48
 21205  003BAA                     i2u1682_40:
 21206  003BAA  6A0D               	clrf	??_isr^0,c
 21207  003BAC                     i2u1683_48:
 21208  003BAC  460D               	rlncf	??_isr^0,f,c
 21209  003BAE  460D               	rlncf	??_isr^0,f,c
 21210  003BB0  5081               	movf	129,w,c	;volatile
 21211  003BB2  180D               	xorwf	??_isr^0,w,c
 21212  003BB4  0BFB               	andlw	-5
 21213  003BB6  180D               	xorwf	??_isr^0,w,c
 21214  003BB8  6E81               	movwf	129,c	;volatile
 21215  003BBA                     i2l13432:
 21216                           
 21217                           ;main.c: 119: };main.c: 122: unsigned char cont;;main.c: 124: if (TMR0IF && T0IF)
 21218  003BBA  B4F2               	btfsc	4082,2,c	;volatile
 21219  003BBC  A4F2               	btfss	4082,2,c	;volatile
 21220  003BBE  D043               	goto	i2l13470
 21221                           
 21222                           ;main.c: 125: {;main.c: 126: INTCONbits.TMR0IF = 0;
 21223  003BC0  94F2               	bcf	242,2,c	;volatile
 21224                           
 21225                           ;main.c: 127: sinaliza_int_timer = 1;
 21226  003BC2  0E01               	movlw	1
 21227  003BC4  6E3C               	movwf	_sinaliza_int_timer^0,c
 21228                           
 21229                           ;main.c: 129: for(cont= 0; cont<3;cont++)
 21230  003BC6  0E00               	movlw	0
 21231  003BC8  6E19               	movwf	isr@cont^0,c
 21232  003BCA                     i2l13444:
 21233                           
 21234                           ;main.c: 130: {;main.c: 131: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21235  003BCA  5019               	movf	isr@cont^0,w,c
 21236  003BCC  0D02               	mullw	2
 21237  003BCE  0E11               	movlw	low _tempo_tarefa
 21238  003BD0  24F3               	addwf	243,w,c
 21239  003BD2  6ED9               	movwf	fsr2l,c
 21240  003BD4  0E01               	movlw	high _tempo_tarefa
 21241  003BD6  20F4               	addwfc	prodh,w,c
 21242  003BD8  6EDA               	movwf	fsr2h,c
 21243  003BDA  50DE               	movf	postinc2,w,c
 21244  003BDC  10DE               	iorwf	postinc2,w,c
 21245  003BDE  B4D8               	btfsc	status,2,c
 21246  003BE0  D00B               	goto	i2l13448
 21247  003BE2  5019               	movf	isr@cont^0,w,c
 21248  003BE4  0D02               	mullw	2
 21249  003BE6  0E11               	movlw	low _tempo_tarefa
 21250  003BE8  24F3               	addwf	243,w,c
 21251  003BEA  6ED9               	movwf	fsr2l,c
 21252  003BEC  0E01               	movlw	high _tempo_tarefa
 21253  003BEE  20F4               	addwfc	prodh,w,c
 21254  003BF0  6EDA               	movwf	fsr2h,c
 21255  003BF2  06DE               	decf	postinc2,f,c
 21256  003BF4  0E00               	movlw	0
 21257  003BF6  5ADD               	subwfb	postdec2,f,c
 21258  003BF8                     i2l13448:
 21259  003BF8  2A19               	incf	isr@cont^0,f,c
 21260  003BFA  0E02               	movlw	2
 21261  003BFC  6419               	cpfsgt	isr@cont^0,c
 21262  003BFE  D7E5               	goto	i2l13444
 21263                           
 21264                           ;main.c: 133: };main.c: 134: if(time_sd > 0) time_sd--;
 21265  003C00  0101               	movlb	1	; () banked
 21266  003C02  514C               	movf	_time_sd& (0+255),w,b
 21267  003C04  114D               	iorwf	(_time_sd+1)& (0+255),w,b
 21268  003C06  B4D8               	btfsc	status,2,c
 21269  003C08  D003               	goto	i2l13456
 21270                           
 21271                           ; BSR set to: 1
 21272  003C0A  074C               	decf	_time_sd& (0+255),f,b
 21273  003C0C  A0D8               	btfss	status,0,c
 21274  003C0E  074D               	decf	(_time_sd+1)& (0+255),f,b
 21275  003C10                     i2l13456:
 21276                           
 21277                           ; BSR set to: 1
 21278                           ;main.c: 135: if(time_atualizacao > 0) time_atualizacao--;
 21279  003C10  5034               	movf	_time_atualizacao^0,w,c
 21280  003C12  1035               	iorwf	(_time_atualizacao+1)^0,w,c
 21281  003C14  B4D8               	btfsc	status,2,c
 21282  003C16  D003               	goto	i2l13460
 21283                           
 21284                           ; BSR set to: 1
 21285  003C18  0634               	decf	_time_atualizacao^0,f,c
 21286  003C1A  A0D8               	btfss	status,0,c
 21287  003C1C  0635               	decf	(_time_atualizacao+1)^0,f,c
 21288  003C1E                     i2l13460:
 21289                           
 21290                           ; BSR set to: 1
 21291                           ;main.c: 137: if(tarefa_em_execucao == 1)
 21292  003C1E  043B               	decf	_tarefa_em_execucao^0,w,c	;volatile
 21293  003C20  A4D8               	btfss	status,2,c
 21294  003C22  D00B               	goto	i2l13468
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;main.c: 138: {;main.c: 139: timeout_tarefa--;
 21298  003C24  074E               	decf	_timeout_tarefa& (0+255),f,b
 21299  003C26  A0D8               	btfss	status,0,c
 21300  003C28  074F               	decf	(_timeout_tarefa+1)& (0+255),f,b
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;main.c: 140: if(!timeout_tarefa)
 21304  003C2A  514E               	movf	_timeout_tarefa& (0+255),w,b
 21305  003C2C  114F               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 21306  003C2E  A4D8               	btfss	status,2,c
 21307  003C30  D004               	goto	i2l13468
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;main.c: 141: {;main.c: 143: PCLATH = 0;
 21311  003C32  0E00               	movlw	0
 21312  003C34  6EFA               	movwf	250,c	;volatile
 21313                           
 21314                           ;main.c: 144: PCL = 0;
 21315  003C36  0E00               	movlw	0
 21316  003C38  6EF9               	movwf	249,c	;volatile
 21317  003C3A                     i2l13468:
 21318                           
 21319                           ; BSR set to: 1
 21320                           ;main.c: 145: };main.c: 146: };main.c: 150: write_timer_zero(0x45);
 21321  003C3A  0E00               	movlw	0
 21322  003C3C  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 21323  003C3E  0E45               	movlw	69
 21324  003C40  6E01               	movwf	i2write_timer_zero@timer0^0,c
 21325  003C42  EC39  F02D         	call	i2_write_timer_zero	;wreg free
 21326  003C46                     i2l13470:
 21327                           
 21328                           ;main.c: 151: };main.c: 153: if (INT0IF && INT0IE)
 21329  003C46  B2F2               	btfsc	4082,1,c	;volatile
 21330  003C48  A8F2               	btfss	4082,4,c	;volatile
 21331  003C4A  D001               	goto	i2l1465
 21332                           
 21333                           ;main.c: 154: {;main.c: 155: INT0IF = 0;
 21334  003C4C  92F2               	bcf	4082,1,c	;volatile
 21335  003C4E                     i2l1465:
 21336  003C4E  C018  FFF5         	movff	??_isr+11,tablat
 21337  003C52  C017  FFF8         	movff	??_isr+10,tblptru
 21338  003C56  C016  FFF7         	movff	??_isr+9,tblptrh
 21339  003C5A  C015  FFF6         	movff	??_isr+8,tblptrl
 21340  003C5E  C014  FFF4         	movff	??_isr+7,prodh
 21341  003C62  C013  FFF3         	movff	??_isr+6,prodl
 21342  003C66  C012  FFDA         	movff	??_isr+5,fsr2h
 21343  003C6A  C011  FFD9         	movff	??_isr+4,fsr2l
 21344  003C6E  C010  FFE2         	movff	??_isr+3,fsr1h
 21345  003C72  C00F  FFE1         	movff	??_isr+2,fsr1l
 21346  003C76  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 21347  003C78  0011               	retfie		f
 21348  003C7A                     __end_of_isr:
 21349                           	callstack 0
 21350                           
 21351 ;; *************** function i2_write_timer_zero *****************
 21352 ;; Defined at:
 21353 ;;		line 134 in file "bibliotecas/hardware.c"
 21354 ;; Parameters:    Size  Location     Type
 21355 ;;  timer0          2    0[COMRAM] unsigned int 
 21356 ;; Auto vars:     Size  Location     Type
 21357 ;;		None
 21358 ;; Return value:  Size  Location     Type
 21359 ;;                  1    wreg      void 
 21360 ;; Registers used:
 21361 ;;		None
 21362 ;; Tracked objects:
 21363 ;;		On entry : 3F/1
 21364 ;;		On exit  : 3F/1
 21365 ;;		Unchanged: 3F/0
 21366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21367 ;;      Params:         2       0       0       0       0       0       0       0       0
 21368 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21370 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21371 ;;Total ram usage:        2 bytes
 21372 ;; Hardware stack levels used:    1
 21373 ;; This function calls:
 21374 ;;		Nothing
 21375 ;; This function is called by:
 21376 ;;		_isr
 21377 ;; This function uses a non-reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text120
 21381  005A72                     __ptext120:
 21382                           	callstack 0
 21383  005A72                     i2_write_timer_zero:
 21384                           	callstack 13
 21385                           
 21386                           ; BSR set to: 1
 21387                           ;hardware.c: 142: TMR0 = timer0;
 21388                           
 21389                           ;incstack = 0
 21390  005A72  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 21391  005A76  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 21392                           
 21393                           ; BSR set to: 1
 21394  005A7A  0012               	return		;funcret
 21395  005A7C                     __end_ofi2_write_timer_zero:
 21396                           	callstack 0
 21397                           
 21398 ;; *************** function _recebe_dado_uart *****************
 21399 ;; Defined at:
 21400 ;;		line 138 in file "bibliotecas/uart.c"
 21401 ;; Parameters:    Size  Location     Type
 21402 ;;		None
 21403 ;; Auto vars:     Size  Location     Type
 21404 ;;		None
 21405 ;; Return value:  Size  Location     Type
 21406 ;;                  1    wreg      unsigned char 
 21407 ;; Registers used:
 21408 ;;		wreg, status,2
 21409 ;; Tracked objects:
 21410 ;;		On entry : 0/0
 21411 ;;		On exit  : 0/0
 21412 ;;		Unchanged: 0/0
 21413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21414 ;;      Params:         0       0       0       0       0       0       0       0       0
 21415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21418 ;;Total ram usage:        0 bytes
 21419 ;; Hardware stack levels used:    1
 21420 ;; This function calls:
 21421 ;;		Nothing
 21422 ;; This function is called by:
 21423 ;;		_isr
 21424 ;; This function uses a non-reentrant model
 21425 ;;
 21426                           
 21427                           	psect	text121
 21428  0059AA                     __ptext121:
 21429                           	callstack 0
 21430  0059AA                     _recebe_dado_uart:
 21431                           	callstack 13
 21432                           
 21433                           ;uart.c: 140: while(RCIF==0);
 21434                           
 21435                           ; BSR set to: 1
 21436                           ;incstack = 0
 21437  0059AA  AA9E               	btfss	3998,5,c	;volatile
 21438  0059AC  D7FE               	goto	_recebe_dado_uart
 21439                           
 21440                           ;uart.c: 141: if(RCSTAbits.OERR)
 21441  0059AE  A2AB               	btfss	171,1,c	;volatile
 21442  0059B0  D003               	goto	i2l9694
 21443                           
 21444                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 21445  0059B2  98AB               	bcf	4011,4,c	;volatile
 21446                           
 21447                           ;uart.c: 144: __nop();
 21448  0059B4  F000               	nop	
 21449                           
 21450                           ;uart.c: 145: CREN=1;
 21451  0059B6  88AB               	bsf	4011,4,c	;volatile
 21452  0059B8                     i2l9694:
 21453                           
 21454                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 21455  0059B8  50AE               	movf	174,w,c	;volatile
 21456  0059BA  0012               	return		;funcret
 21457  0059BC                     __end_of_recebe_dado_uart:
 21458                           	callstack 0
 21459                           
 21460 ;; *************** function _GPSRead *****************
 21461 ;; Defined at:
 21462 ;;		line 61 in file "bibliotecas/GPS.c"
 21463 ;; Parameters:    Size  Location     Type
 21464 ;;  buff            1    wreg     unsigned char 
 21465 ;; Auto vars:     Size  Location     Type
 21466 ;;  buff            1   10[COMRAM] unsigned char 
 21467 ;;  c               1   11[COMRAM] unsigned char 
 21468 ;; Return value:  Size  Location     Type
 21469 ;;                  2  354[None  ] int 
 21470 ;; Registers used:
 21471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21472 ;; Tracked objects:
 21473 ;;		On entry : 0/0
 21474 ;;		On exit  : 0/0
 21475 ;;		Unchanged: 0/0
 21476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21477 ;;      Params:         0       0       0       0       0       0       0       0       0
 21478 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21479 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21480 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21481 ;;Total ram usage:        2 bytes
 21482 ;; Hardware stack levels used:    1
 21483 ;; Hardware stack levels required when called:    1
 21484 ;; This function calls:
 21485 ;;		_strcmp
 21486 ;;		_stringcpy
 21487 ;; This function is called by:
 21488 ;;		_isr
 21489 ;; This function uses a non-reentrant model
 21490 ;;
 21491                           
 21492                           	psect	text122
 21493  001CD6                     __ptext122:
 21494                           	callstack 0
 21495  001CD6                     _GPSRead:
 21496                           	callstack 12
 21497                           
 21498                           ;incstack = 0
 21499                           ;GPSRead@buff stored from wreg
 21500  001CD6  6E0B               	movwf	GPSRead@buff^0,c
 21501                           
 21502                           ;GPS.c: 63: uint8_t c = buff;
 21503  001CD8  C00B  F00C         	movff	GPSRead@buff,GPSRead@c
 21504                           
 21505                           ;GPS.c: 65: switch(c) {
 21506  001CDC  D133               	goto	i2l13274
 21507  001CDE                     i2l13158:
 21508                           
 21509                           ;GPS.c: 67: if(SentenceType == 1)
 21510  001CDE  0443               	decf	_SentenceType^0,w,c
 21511  001CE0  A4D8               	btfss	status,2,c
 21512  001CE2  D005               	goto	i2l13162
 21513                           
 21514                           ;GPS.c: 68: GPRMC_ok = 1;
 21515  001CE4  0E00               	movlw	0
 21516  001CE6  0101               	movlb	1	; () banked
 21517  001CE8  6F55               	movwf	(_GPRMC_ok+1)& (0+255),b
 21518  001CEA  0E01               	movlw	1
 21519  001CEC  6F54               	movwf	_GPRMC_ok& (0+255),b
 21520  001CEE                     i2l13162:
 21521                           
 21522                           ;GPS.c: 69: if(SentenceType == 2)
 21523  001CEE  0E02               	movlw	2
 21524  001CF0  1843               	xorwf	_SentenceType^0,w,c
 21525  001CF2  A4D8               	btfss	status,2,c
 21526  001CF4  D005               	goto	i2l13166
 21527                           
 21528                           ;GPS.c: 70: GPGGA_ok = 1;
 21529  001CF6  0E00               	movlw	0
 21530  001CF8  0101               	movlb	1	; () banked
 21531  001CFA  6F53               	movwf	(_GPGGA_ok+1)& (0+255),b
 21532  001CFC  0E01               	movlw	1
 21533  001CFE  6F52               	movwf	_GPGGA_ok& (0+255),b
 21534  001D00                     i2l13166:
 21535                           
 21536                           ;GPS.c: 71: if(GPRMC_ok && GPGGA_ok) {
 21537  001D00  0101               	movlb	1	; () banked
 21538  001D02  5154               	movf	_GPRMC_ok& (0+255),w,b
 21539  001D04  1155               	iorwf	(_GPRMC_ok+1)& (0+255),w,b
 21540  001D06  B4D8               	btfsc	status,2,c
 21541  001D08  0012               	return	
 21542                           
 21543                           ; BSR set to: 1
 21544  001D0A  5152               	movf	_GPGGA_ok& (0+255),w,b
 21545  001D0C  1153               	iorwf	(_GPGGA_ok+1)& (0+255),w,b
 21546  001D0E  B4D8               	btfsc	status,2,c
 21547  001D10  0012               	return	
 21548                           
 21549                           ; BSR set to: 1
 21550                           ;GPS.c: 72: GPRMC_ok = GPGGA_ok = 0;
 21551  001D12  0E00               	movlw	0
 21552  001D14  6F53               	movwf	(_GPGGA_ok+1)& (0+255),b
 21553  001D16  0E00               	movlw	0
 21554  001D18  6F52               	movwf	_GPGGA_ok& (0+255),b
 21555  001D1A  C152  F154         	movff	_GPGGA_ok,_GPRMC_ok
 21556  001D1E  C153  F155         	movff	_GPGGA_ok+1,_GPRMC_ok+1
 21557  001D22  0012               	return	
 21558  001D24                     i2l13174:
 21559                           
 21560                           ;GPS.c: 78: Term = char_number = 0;
 21561  001D24  0E00               	movlw	0
 21562  001D26  6E44               	movwf	_char_number^0,c
 21563  001D28  C044  F042         	movff	_char_number,_Term
 21564                           
 21565                           ;GPS.c: 79: break;
 21566  001D2C  0012               	return	
 21567  001D2E                     i2l13176:
 21568                           
 21569                           ;GPS.c: 82: buffer[char_number] = '\0';
 21570  001D2E  0EA6               	movlw	low _buffer
 21571  001D30  2444               	addwf	_char_number^0,w,c
 21572  001D32  6ED9               	movwf	fsr2l,c
 21573  001D34  6ADA               	clrf	fsr2h,c
 21574  001D36  0E01               	movlw	high _buffer
 21575  001D38  22DA               	addwfc	fsr2h,f,c
 21576  001D3A  0E00               	movlw	0
 21577  001D3C  6EDF               	movwf	indf2,c
 21578                           
 21579                           ;GPS.c: 83: if(Term == 0)
 21580  001D3E  5042               	movf	_Term^0,w,c
 21581  001D40  A4D8               	btfss	status,2,c
 21582  001D42  D032               	goto	i2l13192
 21583                           
 21584                           ;GPS.c: 84: {;GPS.c: 85: stringcpy(buffer, sentence, 0, 5);
 21585  001D44  0EA6               	movlw	low _buffer
 21586  001D46  6E01               	movwf	stringcpy@str1^0,c
 21587  001D48  0E01               	movlw	high _buffer
 21588  001D4A  6E02               	movwf	(stringcpy@str1+1)^0,c
 21589  001D4C  0EDD               	movlw	low _sentence
 21590  001D4E  6E03               	movwf	stringcpy@str2^0,c
 21591  001D50  0E01               	movlw	high _sentence
 21592  001D52  6E04               	movwf	(stringcpy@str2+1)^0,c
 21593  001D54  0E00               	movlw	0
 21594  001D56  6E06               	movwf	(stringcpy@dir+1)^0,c
 21595  001D58  0E00               	movlw	0
 21596  001D5A  6E05               	movwf	stringcpy@dir^0,c
 21597  001D5C  0E05               	movlw	5
 21598  001D5E  6E07               	movwf	stringcpy@size^0,c
 21599  001D60  EC94  F029         	call	_stringcpy	;wreg free
 21600                           
 21601                           ;GPS.c: 86: if(strcmp(sentence, "GPRMC") == 0)
 21602  001D64  0EDD               	movlw	low _sentence
 21603  001D66  6E01               	movwf	strcmp@s1^0,c
 21604  001D68  0E01               	movlw	high _sentence
 21605  001D6A  6E02               	movwf	(strcmp@s1+1)^0,c
 21606  001D6C  0E59               	movlw	low STR_5
 21607  001D6E  6E03               	movwf	strcmp@s2^0,c
 21608  001D70  0E62               	movlw	high STR_5
 21609  001D72  6E04               	movwf	(strcmp@s2+1)^0,c
 21610  001D74  EC27  F029         	call	_strcmp	;wreg free
 21611  001D78  5001               	movf	?_strcmp^0,w,c
 21612  001D7A  1002               	iorwf	(?_strcmp+1)^0,w,c
 21613  001D7C  A4D8               	btfss	status,2,c
 21614  001D7E  D002               	goto	i2l13186
 21615                           
 21616                           ;GPS.c: 87: {;GPS.c: 88: SentenceType = 1;
 21617  001D80  0E01               	movlw	1
 21618  001D82  D011               	goto	L7
 21619  001D84                     i2l13186:
 21620                           
 21621                           ;GPS.c: 90: else if(strcmp(sentence, "GPGGA") == 0)
 21622  001D84  0EDD               	movlw	low _sentence
 21623  001D86  6E01               	movwf	strcmp@s1^0,c
 21624  001D88  0E01               	movlw	high _sentence
 21625  001D8A  6E02               	movwf	(strcmp@s1+1)^0,c
 21626  001D8C  0E53               	movlw	low STR_6
 21627  001D8E  6E03               	movwf	strcmp@s2^0,c
 21628  001D90  0E62               	movlw	high STR_6
 21629  001D92  6E04               	movwf	(strcmp@s2+1)^0,c
 21630  001D94  EC27  F029         	call	_strcmp	;wreg free
 21631  001D98  5001               	movf	?_strcmp^0,w,c
 21632  001D9A  1002               	iorwf	(?_strcmp+1)^0,w,c
 21633  001D9C  A4D8               	btfss	status,2,c
 21634  001D9E  D002               	goto	i2l13190
 21635                           
 21636                           ;GPS.c: 91: {;GPS.c: 92: SentenceType = 2;
 21637  001DA0  0E02               	movlw	2
 21638  001DA2  D001               	goto	L7
 21639  001DA4                     i2l13190:
 21640                           
 21641                           ;GPS.c: 94: else;GPS.c: 95: {;GPS.c: 96: SentenceType = 3;
 21642  001DA4  0E03               	movlw	3
 21643  001DA6                     L7:
 21644  001DA6  6E43               	movwf	_SentenceType^0,c
 21645  001DA8                     i2l13192:
 21646                           
 21647                           ;GPS.c: 97: };GPS.c: 98: };GPS.c: 101: if(Term == 1 && SentenceType == 1) {
 21648  001DA8  0442               	decf	_Term^0,w,c
 21649  001DAA  A4D8               	btfss	status,2,c
 21650  001DAC  D015               	goto	i2l13200
 21651  001DAE  0443               	decf	_SentenceType^0,w,c
 21652  001DB0  A4D8               	btfss	status,2,c
 21653  001DB2  D012               	goto	i2l13200
 21654                           
 21655                           ;GPS.c: 102: stringcpy(buffer, rawTime, 0, 6);
 21656  001DB4  0EA6               	movlw	low _buffer
 21657  001DB6  6E01               	movwf	stringcpy@str1^0,c
 21658  001DB8  0E01               	movlw	high _buffer
 21659  001DBA  6E02               	movwf	(stringcpy@str1+1)^0,c
 21660  001DBC  0EB2               	movlw	low _rawTime
 21661  001DBE  6E03               	movwf	stringcpy@str2^0,c
 21662  001DC0  0E01               	movlw	high _rawTime
 21663  001DC2  6E04               	movwf	(stringcpy@str2+1)^0,c
 21664  001DC4  0E00               	movlw	0
 21665  001DC6  6E06               	movwf	(stringcpy@dir+1)^0,c
 21666  001DC8  0E00               	movlw	0
 21667  001DCA  6E05               	movwf	stringcpy@dir^0,c
 21668  001DCC  0E06               	movlw	6
 21669  001DCE  6E07               	movwf	stringcpy@size^0,c
 21670  001DD0  EC94  F029         	call	_stringcpy	;wreg free
 21671                           
 21672                           ;GPS.c: 104: gps_flag[0].flag = 1;
 21673  001DD4  0101               	movlb	1	; () banked
 21674  001DD6  812F               	bsf	_gps_flag& (0+255),0,b
 21675  001DD8                     i2l13200:
 21676                           
 21677                           ;GPS.c: 105: };GPS.c: 108: if((Term == 3) && (SentenceType == 1)) {
 21678  001DD8  0E03               	movlw	3
 21679  001DDA  1842               	xorwf	_Term^0,w,c
 21680  001DDC  A4D8               	btfss	status,2,c
 21681  001DDE  D01A               	goto	i2l13210
 21682  001DE0  0443               	decf	_SentenceType^0,w,c
 21683  001DE2  A4D8               	btfss	status,2,c
 21684  001DE4  D017               	goto	i2l13210
 21685                           
 21686                           ;GPS.c: 109: if(rawFix[0] == '1')
 21687  001DE6  0E31               	movlw	49
 21688  001DE8  0101               	movlb	1	; () banked
 21689  001DEA  19E3               	xorwf	_rawFix& (0+255),w,b
 21690  001DEC  A4D8               	btfss	status,2,c
 21691  001DEE  D010               	goto	i2l13208
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;GPS.c: 110: {;GPS.c: 111: stringcpy(buffer, rawLatitude, 1, 11);
 21695  001DF0  0EA6               	movlw	low _buffer
 21696  001DF2  6E01               	movwf	stringcpy@str1^0,c
 21697  001DF4  0E01               	movlw	high _buffer
 21698  001DF6  6E02               	movwf	(stringcpy@str1+1)^0,c
 21699  001DF8  0E9A               	movlw	low _rawLatitude
 21700  001DFA  6E03               	movwf	stringcpy@str2^0,c
 21701  001DFC  0E01               	movlw	high _rawLatitude
 21702  001DFE  6E04               	movwf	(stringcpy@str2+1)^0,c
 21703  001E00  0E00               	movlw	0
 21704  001E02  6E06               	movwf	(stringcpy@dir+1)^0,c
 21705  001E04  0E01               	movlw	1
 21706  001E06  6E05               	movwf	stringcpy@dir^0,c
 21707  001E08  0E0B               	movlw	11
 21708  001E0A  6E07               	movwf	stringcpy@size^0,c
 21709  001E0C  EC94  F029         	call	_stringcpy	;wreg free
 21710  001E10                     i2l13208:
 21711                           
 21712                           ;GPS.c: 112: };GPS.c: 113: gps_flag[1].flag = 1;
 21713  001E10  0101               	movlb	1	; () banked
 21714  001E12  8130               	bsf	(_gps_flag+1)& (0+255),0,b
 21715  001E14                     i2l13210:
 21716                           
 21717                           ;GPS.c: 114: };GPS.c: 116: if((Term == 4) && (SentenceType == 1))
 21718  001E14  0E04               	movlw	4
 21719  001E16  1842               	xorwf	_Term^0,w,c
 21720  001E18  A4D8               	btfss	status,2,c
 21721  001E1A  D00C               	goto	i2l13220
 21722  001E1C  0443               	decf	_SentenceType^0,w,c
 21723  001E1E  A4D8               	btfss	status,2,c
 21724  001E20  D009               	goto	i2l13220
 21725                           
 21726                           ;GPS.c: 117: {;GPS.c: 118: if(buffer[0] == 'N')
 21727  001E22  0E4E               	movlw	78
 21728  001E24  0101               	movlb	1	; () banked
 21729  001E26  19A6               	xorwf	_buffer& (0+255),w,b
 21730  001E28  A4D8               	btfss	status,2,c
 21731  001E2A  D002               	goto	i2l13218
 21732                           
 21733                           ; BSR set to: 1
 21734                           ;GPS.c: 119: rawLatitude[0] = '0';
 21735  001E2C  0E30               	movlw	48
 21736  001E2E  D001               	goto	L8
 21737  001E30                     i2l13218:
 21738                           
 21739                           ; BSR set to: 1
 21740                           ;GPS.c: 120: else;GPS.c: 121: rawLatitude[0] = '-';
 21741  001E30  0E2D               	movlw	45
 21742  001E32                     L8:
 21743  001E32  6F9A               	movwf	_rawLatitude& (0+255),b
 21744  001E34                     i2l13220:
 21745                           
 21746                           ;GPS.c: 122: };GPS.c: 125: if((Term == 5) && (SentenceType == 1)) {
 21747  001E34  0E05               	movlw	5
 21748  001E36  1842               	xorwf	_Term^0,w,c
 21749  001E38  A4D8               	btfss	status,2,c
 21750  001E3A  D01A               	goto	i2l13230
 21751  001E3C  0443               	decf	_SentenceType^0,w,c
 21752  001E3E  A4D8               	btfss	status,2,c
 21753  001E40  D017               	goto	i2l13230
 21754                           
 21755                           ;GPS.c: 126: if(rawFix[0] == '1')
 21756  001E42  0E31               	movlw	49
 21757  001E44  0101               	movlb	1	; () banked
 21758  001E46  19E3               	xorwf	_rawFix& (0+255),w,b
 21759  001E48  A4D8               	btfss	status,2,c
 21760  001E4A  D010               	goto	i2l13228
 21761                           
 21762                           ; BSR set to: 1
 21763                           ;GPS.c: 127: {;GPS.c: 128: stringcpy(buffer, rawLongitude, 1, 11);
 21764  001E4C  0EA6               	movlw	low _buffer
 21765  001E4E  6E01               	movwf	stringcpy@str1^0,c
 21766  001E50  0E01               	movlw	high _buffer
 21767  001E52  6E02               	movwf	(stringcpy@str1+1)^0,c
 21768  001E54  0E81               	movlw	low _rawLongitude
 21769  001E56  6E03               	movwf	stringcpy@str2^0,c
 21770  001E58  0E01               	movlw	high _rawLongitude
 21771  001E5A  6E04               	movwf	(stringcpy@str2+1)^0,c
 21772  001E5C  0E00               	movlw	0
 21773  001E5E  6E06               	movwf	(stringcpy@dir+1)^0,c
 21774  001E60  0E01               	movlw	1
 21775  001E62  6E05               	movwf	stringcpy@dir^0,c
 21776  001E64  0E0B               	movlw	11
 21777  001E66  6E07               	movwf	stringcpy@size^0,c
 21778  001E68  EC94  F029         	call	_stringcpy	;wreg free
 21779  001E6C                     i2l13228:
 21780                           
 21781                           ;GPS.c: 129: };GPS.c: 130: gps_flag[2].flag = 1;
 21782  001E6C  0101               	movlb	1	; () banked
 21783  001E6E  8131               	bsf	(_gps_flag+2)& (0+255),0,b
 21784  001E70                     i2l13230:
 21785                           
 21786                           ;GPS.c: 131: };GPS.c: 133: if((Term == 6) && (SentenceType == 1)) {
 21787  001E70  0E06               	movlw	6
 21788  001E72  1842               	xorwf	_Term^0,w,c
 21789  001E74  A4D8               	btfss	status,2,c
 21790  001E76  D00C               	goto	i2l13240
 21791  001E78  0443               	decf	_SentenceType^0,w,c
 21792  001E7A  A4D8               	btfss	status,2,c
 21793  001E7C  D009               	goto	i2l13240
 21794                           
 21795                           ;GPS.c: 134: if(buffer[0] == 'E')
 21796  001E7E  0E45               	movlw	69
 21797  001E80  0101               	movlb	1	; () banked
 21798  001E82  19A6               	xorwf	_buffer& (0+255),w,b
 21799  001E84  A4D8               	btfss	status,2,c
 21800  001E86  D002               	goto	i2l13238
 21801                           
 21802                           ; BSR set to: 1
 21803                           ;GPS.c: 135: rawLongitude[0] = '0';
 21804  001E88  0E30               	movlw	48
 21805  001E8A  D001               	goto	L9
 21806  001E8C                     i2l13238:
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;GPS.c: 136: else;GPS.c: 137: rawLongitude[0] = '-';
 21810  001E8C  0E2D               	movlw	45
 21811  001E8E                     L9:
 21812  001E8E  6F81               	movwf	_rawLongitude& (0+255),b
 21813  001E90                     i2l13240:
 21814                           
 21815                           ;GPS.c: 138: };GPS.c: 141: if((Term == 7) && (SentenceType == 1)) {
 21816  001E90  0E07               	movlw	7
 21817  001E92  1842               	xorwf	_Term^0,w,c
 21818  001E94  A4D8               	btfss	status,2,c
 21819  001E96  D015               	goto	i2l13248
 21820  001E98  0443               	decf	_SentenceType^0,w,c
 21821  001E9A  A4D8               	btfss	status,2,c
 21822  001E9C  D012               	goto	i2l13248
 21823                           
 21824                           ;GPS.c: 142: stringcpy(buffer, rawSpeed, 0, 3);
 21825  001E9E  0EA6               	movlw	low _buffer
 21826  001EA0  6E01               	movwf	stringcpy@str1^0,c
 21827  001EA2  0E01               	movlw	high _buffer
 21828  001EA4  6E02               	movwf	(stringcpy@str1+1)^0,c
 21829  001EA6  0ED7               	movlw	low _rawSpeed
 21830  001EA8  6E03               	movwf	stringcpy@str2^0,c
 21831  001EAA  0E01               	movlw	high _rawSpeed
 21832  001EAC  6E04               	movwf	(stringcpy@str2+1)^0,c
 21833  001EAE  0E00               	movlw	0
 21834  001EB0  6E06               	movwf	(stringcpy@dir+1)^0,c
 21835  001EB2  0E00               	movlw	0
 21836  001EB4  6E05               	movwf	stringcpy@dir^0,c
 21837  001EB6  0E03               	movlw	3
 21838  001EB8  6E07               	movwf	stringcpy@size^0,c
 21839  001EBA  EC94  F029         	call	_stringcpy	;wreg free
 21840                           
 21841                           ;GPS.c: 143: gps_flag[5].flag = 1;
 21842  001EBE  0101               	movlb	1	; () banked
 21843  001EC0  8134               	bsf	(_gps_flag+5)& (0+255),0,b
 21844  001EC2                     i2l13248:
 21845                           
 21846                           ;GPS.c: 144: };GPS.c: 147: if(Term == 9 && SentenceType == 1) {
 21847  001EC2  0E09               	movlw	9
 21848  001EC4  1842               	xorwf	_Term^0,w,c
 21849  001EC6  A4D8               	btfss	status,2,c
 21850  001EC8  D015               	goto	i2l13256
 21851  001ECA  0443               	decf	_SentenceType^0,w,c
 21852  001ECC  A4D8               	btfss	status,2,c
 21853  001ECE  D012               	goto	i2l13256
 21854                           
 21855                           ;GPS.c: 148: stringcpy(buffer, rawDate, 0, 6);
 21856  001ED0  0EA6               	movlw	low _buffer
 21857  001ED2  6E01               	movwf	stringcpy@str1^0,c
 21858  001ED4  0E01               	movlw	high _buffer
 21859  001ED6  6E02               	movwf	(stringcpy@str1+1)^0,c
 21860  001ED8  0EC4               	movlw	low _rawDate
 21861  001EDA  6E03               	movwf	stringcpy@str2^0,c
 21862  001EDC  0E01               	movlw	high _rawDate
 21863  001EDE  6E04               	movwf	(stringcpy@str2+1)^0,c
 21864  001EE0  0E00               	movlw	0
 21865  001EE2  6E06               	movwf	(stringcpy@dir+1)^0,c
 21866  001EE4  0E00               	movlw	0
 21867  001EE6  6E05               	movwf	stringcpy@dir^0,c
 21868  001EE8  0E06               	movlw	6
 21869  001EEA  6E07               	movwf	stringcpy@size^0,c
 21870  001EEC  EC94  F029         	call	_stringcpy	;wreg free
 21871                           
 21872                           ;GPS.c: 149: gps_flag[3].flag = 1;
 21873  001EF0  0101               	movlb	1	; () banked
 21874  001EF2  8132               	bsf	(_gps_flag+3)& (0+255),0,b
 21875  001EF4                     i2l13256:
 21876                           
 21877                           ;GPS.c: 150: };GPS.c: 152: if((Term == 6) && (SentenceType == 2)) {
 21878  001EF4  0E06               	movlw	6
 21879  001EF6  1842               	xorwf	_Term^0,w,c
 21880  001EF8  A4D8               	btfss	status,2,c
 21881  001EFA  D016               	goto	i2l13264
 21882  001EFC  0E02               	movlw	2
 21883  001EFE  1843               	xorwf	_SentenceType^0,w,c
 21884  001F00  A4D8               	btfss	status,2,c
 21885  001F02  D012               	goto	i2l13264
 21886                           
 21887                           ;GPS.c: 153: stringcpy(buffer, rawFix, 0, 2);
 21888  001F04  0EA6               	movlw	low _buffer
 21889  001F06  6E01               	movwf	stringcpy@str1^0,c
 21890  001F08  0E01               	movlw	high _buffer
 21891  001F0A  6E02               	movwf	(stringcpy@str1+1)^0,c
 21892  001F0C  0EE3               	movlw	low _rawFix
 21893  001F0E  6E03               	movwf	stringcpy@str2^0,c
 21894  001F10  0E01               	movlw	high _rawFix
 21895  001F12  6E04               	movwf	(stringcpy@str2+1)^0,c
 21896  001F14  0E00               	movlw	0
 21897  001F16  6E06               	movwf	(stringcpy@dir+1)^0,c
 21898  001F18  0E00               	movlw	0
 21899  001F1A  6E05               	movwf	stringcpy@dir^0,c
 21900  001F1C  0E02               	movlw	2
 21901  001F1E  6E07               	movwf	stringcpy@size^0,c
 21902  001F20  EC94  F029         	call	_stringcpy	;wreg free
 21903                           
 21904                           ;GPS.c: 154: gps_flag[4].flag = 1;
 21905  001F24  0101               	movlb	1	; () banked
 21906  001F26  8133               	bsf	(_gps_flag+4)& (0+255),0,b
 21907  001F28                     i2l13264:
 21908                           
 21909                           ;GPS.c: 155: };GPS.c: 156: Term++;
 21910  001F28  2A42               	incf	_Term^0,f,c
 21911                           
 21912                           ;GPS.c: 157: char_number = 0;
 21913  001F2A  0E00               	movlw	0
 21914  001F2C  6E44               	movwf	_char_number^0,c
 21915                           
 21916                           ;GPS.c: 158: break;
 21917  001F2E  0012               	return	
 21918  001F30                     i2l13268:
 21919                           
 21920                           ;GPS.c: 161: buffer[char_number++] = c;
 21921  001F30  0EA6               	movlw	low _buffer
 21922  001F32  2444               	addwf	_char_number^0,w,c
 21923  001F34  6ED9               	movwf	fsr2l,c
 21924  001F36  6ADA               	clrf	fsr2h,c
 21925  001F38  0E01               	movlw	high _buffer
 21926  001F3A  22DA               	addwfc	fsr2h,f,c
 21927  001F3C  C00C  FFDF         	movff	GPSRead@c,indf2
 21928  001F40  2A44               	incf	_char_number^0,f,c
 21929                           
 21930                           ;GPS.c: 162: break;
 21931  001F42  0012               	return	
 21932  001F44                     i2l13274:
 21933  001F44  500C               	movf	GPSRead@c^0,w,c
 21934                           
 21935                           ; Switch size 1, requested type "simple"
 21936                           ; Number of cases is 3, Range of values is 13 to 44
 21937                           ; switch strategies available:
 21938                           ; Name         Instructions Cycles
 21939                           ; simple_byte           10     6 (average)
 21940                           ;	Chosen strategy is simple_byte
 21941  001F46  0A0D               	xorlw	13	; case 13
 21942  001F48  B4D8               	btfsc	status,2,c
 21943  001F4A  D6C9               	goto	i2l13158
 21944  001F4C  0A29               	xorlw	41	; case 36
 21945  001F4E  B4D8               	btfsc	status,2,c
 21946  001F50  D6E9               	goto	i2l13174
 21947  001F52  0A08               	xorlw	8	; case 44
 21948  001F54  B4D8               	btfsc	status,2,c
 21949  001F56  D6EB               	goto	i2l13176
 21950  001F58  D7EB               	goto	i2l13268
 21951  001F5A                     __end_of_GPSRead:
 21952                           	callstack 0
 21953                           
 21954 ;; *************** function _stringcpy *****************
 21955 ;; Defined at:
 21956 ;;		line 52 in file "bibliotecas/GPS.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  str1            2    0[COMRAM] PTR unsigned char 
 21959 ;;		 -> buffer(12), 
 21960 ;;  str2            2    2[COMRAM] PTR unsigned char 
 21961 ;;		 -> rawDate(7), rawSpeed(6), rawLongitude(13), rawLatitude(12), 
 21962 ;;		 -> rawFix(2), rawTime(11), sentence(6), 
 21963 ;;  dir             2    4[COMRAM] int 
 21964 ;;  size            1    6[COMRAM] unsigned char 
 21965 ;; Auto vars:     Size  Location     Type
 21966 ;;  chr             1    9[COMRAM] unsigned char 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  1    wreg      void 
 21969 ;; Registers used:
 21970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21976 ;;      Params:         7       0       0       0       0       0       0       0       0
 21977 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21978 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21979 ;;      Totals:        10       0       0       0       0       0       0       0       0
 21980 ;;Total ram usage:       10 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; This function calls:
 21983 ;;		Nothing
 21984 ;; This function is called by:
 21985 ;;		_GPSRead
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text123
 21990  005328                     __ptext123:
 21991                           	callstack 0
 21992  005328                     _stringcpy:
 21993                           	callstack 12
 21994                           
 21995                           ;GPS.c: 54: uint8_t chr = 0;
 21996                           
 21997                           ;incstack = 0
 21998  005328  0E00               	movlw	0
 21999  00532A  6E0A               	movwf	stringcpy@chr^0,c
 22000  00532C                     i2l12916:
 22001                           
 22002                           ;GPS.c: 57: str2[chr + dir] = str1[chr];
 22003  00532C  500A               	movf	stringcpy@chr^0,w,c
 22004  00532E  2401               	addwf	stringcpy@str1^0,w,c
 22005  005330  6ED9               	movwf	fsr2l,c
 22006  005332  0E00               	movlw	0
 22007  005334  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 22008  005336  6EDA               	movwf	fsr2h,c
 22009  005338  500A               	movf	stringcpy@chr^0,w,c
 22010  00533A  2403               	addwf	stringcpy@str2^0,w,c
 22011  00533C  6E08               	movwf	??_stringcpy^0,c
 22012  00533E  0E00               	movlw	0
 22013  005340  2004               	addwfc	(stringcpy@str2+1)^0,w,c
 22014  005342  6E09               	movwf	(??_stringcpy+1)^0,c
 22015  005344  5005               	movf	stringcpy@dir^0,w,c
 22016  005346  2408               	addwf	??_stringcpy^0,w,c
 22017  005348  6EE1               	movwf	fsr1l,c
 22018  00534A  5006               	movf	(stringcpy@dir+1)^0,w,c
 22019  00534C  2009               	addwfc	(??_stringcpy+1)^0,w,c
 22020  00534E  6EE2               	movwf	fsr1h,c
 22021  005350  CFDF FFE7          	movff	indf2,indf1
 22022                           
 22023                           ;GPS.c: 58: } while(str1[chr++] != '\0');
 22024  005354  2A0A               	incf	stringcpy@chr^0,f,c
 22025  005356  040A               	decf	stringcpy@chr^0,w,c
 22026  005358  6E08               	movwf	??_stringcpy^0,c
 22027  00535A  5008               	movf	??_stringcpy^0,w,c
 22028  00535C  2401               	addwf	stringcpy@str1^0,w,c
 22029  00535E  6ED9               	movwf	fsr2l,c
 22030  005360  0E00               	movlw	0
 22031  005362  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 22032  005364  6EDA               	movwf	fsr2h,c
 22033  005366  50DF               	movf	indf2,w,c
 22034  005368  B4D8               	btfsc	status,2,c
 22035  00536A  0012               	return	
 22036  00536C  D7DF               	goto	i2l12916
 22037  00536E                     __end_of_stringcpy:
 22038                           	callstack 0
 22039                           
 22040 ;; *************** function _strcmp *****************
 22041 ;; Defined at:
 22042 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcmp.c"
 22043 ;; Parameters:    Size  Location     Type
 22044 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 22045 ;;		 -> sentence(6), 
 22046 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 22047 ;;		 -> STR_6(6), STR_5(6), 
 22048 ;; Auto vars:     Size  Location     Type
 22049 ;;  r               1    6[COMRAM] char 
 22050 ;; Return value:  Size  Location     Type
 22051 ;;                  2    0[COMRAM] int 
 22052 ;; Registers used:
 22053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22054 ;; Tracked objects:
 22055 ;;		On entry : 0/0
 22056 ;;		On exit  : 0/0
 22057 ;;		Unchanged: 0/0
 22058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22059 ;;      Params:         4       0       0       0       0       0       0       0       0
 22060 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22061 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22062 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22063 ;;Total ram usage:        7 bytes
 22064 ;; Hardware stack levels used:    1
 22065 ;; This function calls:
 22066 ;;		Nothing
 22067 ;; This function is called by:
 22068 ;;		_GPSRead
 22069 ;; This function uses a non-reentrant model
 22070 ;;
 22071                           
 22072                           	psect	text124
 22073  00524E                     __ptext124:
 22074                           	callstack 0
 22075  00524E                     _strcmp:
 22076                           	callstack 12
 22077                           
 22078                           ;incstack = 0
 22079  00524E  D004               	goto	i2l12924
 22080  005250                     i2l12922:
 22081  005250  4A01               	infsnz	strcmp@s1^0,f,c
 22082  005252  2A02               	incf	(strcmp@s1+1)^0,f,c
 22083  005254  4A03               	infsnz	strcmp@s2^0,f,c
 22084  005256  2A04               	incf	(strcmp@s2+1)^0,f,c
 22085  005258                     i2l12924:
 22086  005258  C003  FFF6         	movff	strcmp@s2,tblptrl
 22087  00525C  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 22088  005260                     	if	0	;tblptru may be non-zero
 22089  005260                     	endif
 22090  005260                     	if	0	;tblptru may be non-zero
 22091  005260                     	endif
 22092  005260  0008               	tblrd		*
 22093  005262  CFF5 F005          	movff	tablat,??_strcmp
 22094  005266  C001  FFD9         	movff	strcmp@s1,fsr2l
 22095  00526A  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 22096  00526E  50DF               	movf	indf2,w,c
 22097  005270  6E06               	movwf	(??_strcmp+1)^0,c
 22098  005272  5005               	movf	??_strcmp^0,w,c
 22099  005274  5C06               	subwf	(??_strcmp+1)^0,w,c
 22100  005276  6E07               	movwf	strcmp@r^0,c
 22101  005278  5007               	movf	strcmp@r^0,w,c
 22102  00527A  A4D8               	btfss	status,2,c
 22103  00527C  D007               	goto	i2u1606_40
 22104  00527E  C001  FFD9         	movff	strcmp@s1,fsr2l
 22105  005282  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 22106  005286  50DF               	movf	indf2,w,c
 22107  005288  A4D8               	btfss	status,2,c
 22108  00528A  D7E2               	goto	i2l12922
 22109  00528C                     i2u1606_40:
 22110  00528C  5007               	movf	strcmp@r^0,w,c
 22111  00528E  6E01               	movwf	?_strcmp^0,c
 22112  005290  6A02               	clrf	(?_strcmp+1)^0,c
 22113  005292  BE01               	btfsc	?_strcmp^0,7,c
 22114  005294  0602               	decf	(?_strcmp+1)^0,f,c
 22115  005296  0012               	return		;funcret
 22116  005298                     __end_of_strcmp:
 22117                           	callstack 0
 22118                           
 22119                           	psect	text125
 22120  000000                     __ptext125:
 22121                           	callstack 0
 22122                           
 22123                           	psect	rparam
 22124  0000                     
 22125                           	psect	temp
 22126  000046                     btemp:
 22127                           	callstack 0
 22128  000046                     	ds	1
 22129  0000                     int$flags	set	btemp
 22130  0000                     wtemp8	set	btemp+1
 22131  0000                     ttemp5	set	btemp+1
 22132  0000                     ttemp6	set	btemp+4
 22133  0000                     ttemp7	set	btemp+8
 22134                           
 22135                           	psect	idloc
 22136                           
 22137                           ;Config register IDLOC0 @ 0x200000
 22138                           ;	unspecified, using default values
 22139  200000                     	org	2097152
 22140  200000  FF                 	db	255
 22141                           
 22142                           ;Config register IDLOC1 @ 0x200001
 22143                           ;	unspecified, using default values
 22144  200001                     	org	2097153
 22145  200001  FF                 	db	255
 22146                           
 22147                           ;Config register IDLOC2 @ 0x200002
 22148                           ;	unspecified, using default values
 22149  200002                     	org	2097154
 22150  200002  FF                 	db	255
 22151                           
 22152                           ;Config register IDLOC3 @ 0x200003
 22153                           ;	unspecified, using default values
 22154  200003                     	org	2097155
 22155  200003  FF                 	db	255
 22156                           
 22157                           ;Config register IDLOC4 @ 0x200004
 22158                           ;	unspecified, using default values
 22159  200004                     	org	2097156
 22160  200004  FF                 	db	255
 22161                           
 22162                           ;Config register IDLOC5 @ 0x200005
 22163                           ;	unspecified, using default values
 22164  200005                     	org	2097157
 22165  200005  FF                 	db	255
 22166                           
 22167                           ;Config register IDLOC6 @ 0x200006
 22168                           ;	unspecified, using default values
 22169  200006                     	org	2097158
 22170  200006  FF                 	db	255
 22171                           
 22172                           ;Config register IDLOC7 @ 0x200007
 22173                           ;	unspecified, using default values
 22174  200007                     	org	2097159
 22175  200007  FF                 	db	255
 22176                           
 22177                           	psect	config
 22178                           
 22179                           ;Config register CONFIG1L @ 0x300000
 22180                           ;	unspecified, using default values
 22181                           ;	PLL Prescaler Selection bits
 22182                           ;	PLLDIV = 0x0, unprogrammed default
 22183                           ;	System Clock Postscaler Selection bits
 22184                           ;	CPUDIV = 0x0, unprogrammed default
 22185                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22186                           ;	USBDIV = 0x0, unprogrammed default
 22187  300000                     	org	3145728
 22188  300000  00                 	db	0
 22189                           
 22190                           ;Config register CONFIG1H @ 0x300001
 22191                           ;	unspecified, using default values
 22192                           ;	Oscillator Selection bits
 22193                           ;	FOSC = 0x5, unprogrammed default
 22194                           ;	Fail-Safe Clock Monitor Enable bit
 22195                           ;	FCMEN = 0x0, unprogrammed default
 22196                           ;	Internal/External Oscillator Switchover bit
 22197                           ;	IESO = 0x0, unprogrammed default
 22198  300001                     	org	3145729
 22199  300001  05                 	db	5
 22200                           
 22201                           ;Config register CONFIG2L @ 0x300002
 22202                           ;	unspecified, using default values
 22203                           ;	Power-up Timer Enable bit
 22204                           ;	PWRT = 0x1, unprogrammed default
 22205                           ;	Brown-out Reset Enable bits
 22206                           ;	BOR = 0x3, unprogrammed default
 22207                           ;	Brown-out Reset Voltage bits
 22208                           ;	BORV = 0x3, unprogrammed default
 22209                           ;	USB Voltage Regulator Enable bit
 22210                           ;	VREGEN = 0x0, unprogrammed default
 22211  300002                     	org	3145730
 22212  300002  1F                 	db	31
 22213                           
 22214                           ;Config register CONFIG2H @ 0x300003
 22215                           ;	unspecified, using default values
 22216                           ;	Watchdog Timer Enable bit
 22217                           ;	WDT = 0x1, unprogrammed default
 22218                           ;	Watchdog Timer Postscale Select bits
 22219                           ;	WDTPS = 0xF, unprogrammed default
 22220  300003                     	org	3145731
 22221  300003  1F                 	db	31
 22222                           
 22223                           ; Padding undefined space
 22224  300004                     	org	3145732
 22225  300004  FF                 	db	255
 22226                           
 22227                           ;Config register CONFIG3H @ 0x300005
 22228                           ;	unspecified, using default values
 22229                           ;	CCP2 MUX bit
 22230                           ;	CCP2MX = 0x1, unprogrammed default
 22231                           ;	PORTB A/D Enable bit
 22232                           ;	PBADEN = 0x1, unprogrammed default
 22233                           ;	Low-Power Timer 1 Oscillator Enable bit
 22234                           ;	LPT1OSC = 0x0, unprogrammed default
 22235                           ;	MCLR Pin Enable bit
 22236                           ;	MCLRE = 0x1, unprogrammed default
 22237  300005                     	org	3145733
 22238  300005  83                 	db	131
 22239                           
 22240                           ;Config register CONFIG4L @ 0x300006
 22241                           ;	unspecified, using default values
 22242                           ;	Stack Full/Underflow Reset Enable bit
 22243                           ;	STVREN = 0x1, unprogrammed default
 22244                           ;	Single-Supply ICSP Enable bit
 22245                           ;	LVP = 0x1, unprogrammed default
 22246                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22247                           ;	ICPRT = 0x0, unprogrammed default
 22248                           ;	Extended Instruction Set Enable bit
 22249                           ;	XINST = 0x0, unprogrammed default
 22250                           ;	Background Debugger Enable bit
 22251                           ;	DEBUG = 0x1, unprogrammed default
 22252  300006                     	org	3145734
 22253  300006  85                 	db	133
 22254                           
 22255                           ; Padding undefined space
 22256  300007                     	org	3145735
 22257  300007  FF                 	db	255
 22258                           
 22259                           ;Config register CONFIG5L @ 0x300008
 22260                           ;	unspecified, using default values
 22261                           ;	Code Protection bit
 22262                           ;	CP0 = 0x1, unprogrammed default
 22263                           ;	Code Protection bit
 22264                           ;	CP1 = 0x1, unprogrammed default
 22265                           ;	Code Protection bit
 22266                           ;	CP2 = 0x1, unprogrammed default
 22267                           ;	Code Protection bit
 22268                           ;	CP3 = 0x1, unprogrammed default
 22269  300008                     	org	3145736
 22270  300008  0F                 	db	15
 22271                           
 22272                           ;Config register CONFIG5H @ 0x300009
 22273                           ;	unspecified, using default values
 22274                           ;	Boot Block Code Protection bit
 22275                           ;	CPB = 0x1, unprogrammed default
 22276                           ;	Data EEPROM Code Protection bit
 22277                           ;	CPD = 0x1, unprogrammed default
 22278  300009                     	org	3145737
 22279  300009  C0                 	db	192
 22280                           
 22281                           ;Config register CONFIG6L @ 0x30000A
 22282                           ;	unspecified, using default values
 22283                           ;	Write Protection bit
 22284                           ;	WRT0 = 0x1, unprogrammed default
 22285                           ;	Write Protection bit
 22286                           ;	WRT1 = 0x1, unprogrammed default
 22287                           ;	Write Protection bit
 22288                           ;	WRT2 = 0x1, unprogrammed default
 22289                           ;	Write Protection bit
 22290                           ;	WRT3 = 0x1, unprogrammed default
 22291  30000A                     	org	3145738
 22292  30000A  0F                 	db	15
 22293                           
 22294                           ;Config register CONFIG6H @ 0x30000B
 22295                           ;	unspecified, using default values
 22296                           ;	Configuration Register Write Protection bit
 22297                           ;	WRTC = 0x1, unprogrammed default
 22298                           ;	Boot Block Write Protection bit
 22299                           ;	WRTB = 0x1, unprogrammed default
 22300                           ;	Data EEPROM Write Protection bit
 22301                           ;	WRTD = 0x1, unprogrammed default
 22302  30000B                     	org	3145739
 22303  30000B  E0                 	db	224
 22304                           
 22305                           ;Config register CONFIG7L @ 0x30000C
 22306                           ;	unspecified, using default values
 22307                           ;	Table Read Protection bit
 22308                           ;	EBTR0 = 0x1, unprogrammed default
 22309                           ;	Table Read Protection bit
 22310                           ;	EBTR1 = 0x1, unprogrammed default
 22311                           ;	Table Read Protection bit
 22312                           ;	EBTR2 = 0x1, unprogrammed default
 22313                           ;	Table Read Protection bit
 22314                           ;	EBTR3 = 0x1, unprogrammed default
 22315  30000C                     	org	3145740
 22316  30000C  0F                 	db	15
 22317                           
 22318                           ;Config register CONFIG7H @ 0x30000D
 22319                           ;	unspecified, using default values
 22320                           ;	Boot Block Table Read Protection bit
 22321                           ;	EBTRB = 0x1, unprogrammed default
 22322  30000D                     	org	3145741
 22323  30000D  40                 	db	64
 22324                           tosu	equ	0xFFF
 22325                           tosh	equ	0xFFE
 22326                           tosl	equ	0xFFD
 22327                           stkptr	equ	0xFFC
 22328                           pclatu	equ	0xFFB
 22329                           pclath	equ	0xFFA
 22330                           pcl	equ	0xFF9
 22331                           tblptru	equ	0xFF8
 22332                           tblptrh	equ	0xFF7
 22333                           tblptrl	equ	0xFF6
 22334                           tablat	equ	0xFF5
 22335                           prodh	equ	0xFF4
 22336                           prodl	equ	0xFF3
 22337                           indf0	equ	0xFEF
 22338                           postinc0	equ	0xFEE
 22339                           postdec0	equ	0xFED
 22340                           preinc0	equ	0xFEC
 22341                           plusw0	equ	0xFEB
 22342                           fsr0h	equ	0xFEA
 22343                           fsr0l	equ	0xFE9
 22344                           wreg	equ	0xFE8
 22345                           indf1	equ	0xFE7
 22346                           postinc1	equ	0xFE6
 22347                           postdec1	equ	0xFE5
 22348                           preinc1	equ	0xFE4
 22349                           plusw1	equ	0xFE3
 22350                           fsr1h	equ	0xFE2
 22351                           fsr1l	equ	0xFE1
 22352                           bsr	equ	0xFE0
 22353                           indf2	equ	0xFDF
 22354                           postinc2	equ	0xFDE
 22355                           postdec2	equ	0xFDD
 22356                           preinc2	equ	0xFDC
 22357                           plusw2	equ	0xFDB
 22358                           fsr2h	equ	0xFDA
 22359                           fsr2l	equ	0xFD9
 22360                           status	equ	0xFD8

Data Sizes:
    Strings     264
    Constant    118
    Data        138
    BSS         874
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      69
    BANK0           160    141     160
    BANK1           256      6     249
    BANK2           256     34     219
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3609	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), STR_24(CODE[7]), STR_23(CODE[5]), rawDate(BANK1[7]), 
		 -> rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), STR_24(CODE[7]), STR_23(CODE[5]), rawDate(BANK1[7]), 
		 -> rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[11]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), STR_13(CODE[7]), rawDate(BANK1[7]), rawSpeed(BANK1[6]), 
		 -> rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[11]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), filename(BANK2[20]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), filename(BANK2[20]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> sentence(BANK1[6]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_20(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(BANK0[10]), convert_to_int_point_lat@convert_str_lat(BANK0[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), NULL(NULL[0]), rawSpeed(BANK1[6]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 6
		 -> NULL(NULL[0]), rawSpeed(BANK1[6]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_18(CODE[6]), STR_17(CODE[10]), STR_16(CODE[11]), STR_15(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK2[16]), ?_fprintf(BANK0[2]), fence(BANK1[7]), lo(BANK1[13]), 
		 -> vel(BANK1[6]), lt(BANK1[12]), hora(BANK1[6]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1410_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), STR_24(CODE[7]), STR_23(CODE[5]), rawDate(BANK1[7]), 
		 -> rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[11]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> verifica_dados_operacionais@dados_vel(BANK2[18]), verifica_dados_operacionais@dados_long(BANK2[36]), verifica_dados_operacionais@dados_lat(BANK2[33]), verifica_dados_operacionais@dados_data(BANK2[18]), 
		 -> verifica_dados_operacionais@dados_hora(BANK2[18]), filename(BANK2[20]), 

    S744_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S744_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 6
		 -> rawSpeed(BANK1[6]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 7
		 -> rawDate(BANK1[7]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 11
		 -> rawTime(BANK1[11]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    stringcpy@str1	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK1[12]), 

    stringcpy@str2	PTR unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawSpeed(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), 
		 -> rawFix(BANK1[2]), rawTime(BANK1[11]), sentence(BANK1[6]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_36(CODE[8]), STR_35(CODE[9]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> STR_32(CODE[5]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[7]), 
		 -> STR_28(CODE[7]), STR_27(CODE[2]), STR_26(CODE[5]), STR_25(CODE[7]), 
		 -> STR_22(CODE[11]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), lt(BANK1[12]), 
		 -> STR_12(CODE[9]), STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[14]), 
		 -> STR_8(CODE[21]), STR_7(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), 
		 -> rawFix(BANK1[2]), escreve_inteiro_lcd@texto(BANK0[7]), STR_4(CODE[11]), STR_3(CODE[10]), 
		 -> STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->___ftmul
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _atoi->___wmul
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    _f_write->_clust2sect
    _trace_path->_clust2sect
    _make_dirfile->_memset
    _reserve_direntry->_clust2sect
    _next_dir_entry->_clust2sect
    _clust2sect->___lmul
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->_posicao_cursor_lcd
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay

Critical Paths under _isr in COMRAM

    _isr->_GPSRead
    _GPSRead->_stringcpy

Critical Paths under _main in BANK0

    _verifica_dados_operacionais->_verifica_fence
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    ___fttol->___ftmul
    _troca_de_tela->_escreve_inteiro_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _inicializa_uart->_configura_baudrate_uart
    _escrita_sdcard->_f_open
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _check_fs->_disk_read
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_close->_f_sync
    _f_sync->_sync
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _disk_read->_sdc_disk_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escrita_sdcard->_fprintf

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  512990
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    7483
                                             31 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             28 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  503628
                                              3 BANK1      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          7     7      0   44665
                                             48 BANK0      7     7      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                           _monta_sd
                            _rawdata
                            _rawhora
                             _strcpy
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   23384
                                             47 BANK0      1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                             25 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                             25 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             47 COMRAM     1     1      0
                                             34 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             47 COMRAM     1     1      0
                                             34 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             45 COMRAM     2     0      2
                                             32 BANK0      2     2      0
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             23 BANK0      9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                              6 BANK0     16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                              6 BANK0     17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                              6 BANK0      4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             37 COMRAM     8     4      4
                                              0 BANK0      6     6      0
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1985
                                             31 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     671
                                              9 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4147
                                             42 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3556
                                             38 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3193
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        1     1      0   21295
                                             46 COMRAM     1     1      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6926
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6892
                                             12 BANK0     11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             45 COMRAM     1     1      0
                                              5 BANK0      7     0      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             38 COMRAM     7     0      7
                                              0 BANK0      5     5      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                     3     3      0  437445
                                              0 BANK1      3     3      0
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (4) _recebe_dado_gps                                      2     2      0      74
                                             25 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (5) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  427613
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             39 COMRAM     6     2      4
                                              0 BANK0      8     8      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                             25 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  426495
              _escreve_frase_ram_lcd
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                 _posicao_cursor_lcd
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1189
                                             27 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  129076
                                            123 BANK0     12     2     10
                                              0 BANK2     34    34      0
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   61743
                                            116 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   61250
                                            109 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   60438
                                             79 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                             25 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  203262
                                             97 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39329
                                             74 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             33 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   76792
                                             79 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   18672
                                             62 BANK0     12    11      1
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             37 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   33174
                                             65 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                             25 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   34282
                                             28 BANK0     46    44      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   22094
                                             45 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   21964
                                             44 COMRAM     1     1      0
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10548
                                             37 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             20 BANK0      8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                             25 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   54940
                                             79 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   34237
                                             65 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   16553
                                             41 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16243
                                             41 BANK0     21    19      2
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1282
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             52 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                             43 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             31 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             27 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             41 BANK0      2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             20 BANK0     21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                              8 BANK0     12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             37 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                              8 BANK0     12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             37 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                             25 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             30 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                             25 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                             25 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                             25 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             29 COMRAM    14    10      4
                                              0 BANK0     38    38      0
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fix                                                  2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    9724
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    9724
                                             31 COMRAM     5     3      2
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3717
                                             28 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    3209
                                             28 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                13    13      0    3507
                                             12 COMRAM    13    13      0
                            _GPSRead
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GPSRead                                             2     2      0    3329
                                             10 COMRAM     2     2      0
                             _strcmp
                          _stringcpy
 ---------------------------------------------------------------------------------
 (19) _stringcpy                                          10     3      7    2740
                                              0 COMRAM    10     3      7
 ---------------------------------------------------------------------------------
 (19) _strcmp                                              7     3      4     493
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       _dados_gps_to_sd
         _monta_sd
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
             _fix (ARG)
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
           _strlen
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
             _fix (ARG)
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                     _fix (ARG)
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                       _fix (ARG)
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
           _strcat
           _strcpy
             _latitude (ARG)
             _longitude (ARG)
             _rawdata (ARG)
             _rawhora (ARG)
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _recebe_dado_gps
         _verifica_recep_gps
     _troca_de_tela *
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
         _fix (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _monta_sd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
         _strlen
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
             _fix (ARG)
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
           _strlen
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
       _fix (ARG)
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _GPSRead
     _strcmp
     _stringcpy
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     22      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B9      20        0.0%
DATA                 0      0     4D9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu May 19 16:03:58 2022

                              next_dir_entry@idx 00A8                         __end_of_mensagem_inicial 4832  
                            next_dir_entry@clust 00A6                                      _SSPSTATbits 000FC7  
                               ??_init_interrupt 001A                                               l68 58C8  
                   __size_of_escreve_inteiro_lcd 003E                                               _fs 02DB  
                                             _lo 0174                                               _lt 018E  
                            ___wmul@multiplicand 001C                                      _put_cluster 26B0  
                               disk_write@sector 006A                                     ?_escalonador 0001  
                                 create_chain@fs 00A7                                 disk_write@result 0071  
                               ?_inicializa_uart 0001                                              l200 4878  
                                            l201 4880                                              l202 4882  
                                            l203 488A                                              l220 4D4C  
                                            l204 488C                                              l221 4D54  
                                            l213 4D20                                              l205 4894  
                                            l222 4D56                                              l206 4896  
                                            l223 4D5E                                              l215 4D2A  
                         __size_of_troca_de_tela 026A                                              l224 4D60  
                                            l232 4E4C                                              l144 2E6C  
                                            l225 4D68                                              l217 4D34  
                                            l250 4C70                                              l242 4C3C  
                                            l226 4D6A                                              l218 4D36  
                                            l251 4C72                                              l219 4D4A  
                                            l252 4C7A                                              l244 4C46  
                                            l181 5906                                              l253 4C7C  
                                            l254 4C84                                              l246 4C50  
                                            l183 590C                                              l255 4C86  
                                            l191 4842                                              l256 4C8E  
                                            l248 4C5A                                              l257 4C90  
                                            l249 4C5C                                              l193 484C  
                                            l195 4856                                              l197 4860  
                                            l198 4862                                              l199 4876  
                                            l619 5594                                              l635 4FC2  
                                            l742 59D6                                              l736 5A24  
                                            l923 367C                                              l852 3184  
                                            l926 362A                                              l849 318C  
                                            _PCL 000FF9                                              _PR2 000FCB  
                            _latitude_to_convert 4BB4                                              _fil 0158  
                               ??_init_oscilador 001A                                              _fix 5A68  
                                            _isr 0008                                              _vel 01D1  
                  __size_of_longitude_to_convert 007A                                     disk_read@res 0073  
                                            prod 000FF3                                   ??_create_chain 00A3  
                                            tosl 000FFD                                              wreg 000FE8  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 00A5                                  create_chain@ncl 00AD  
                                create_chain@scl 00AB                          ??_escreve_frase_ram_lcd 001F  
                                           l1010 0772                                             l1040 1798  
                                           l1050 18DA                                             l1210 14D2  
                                           l1035 176C                                             l1124 0B78  
                                           l1128 0D88                                             l1227 1622  
                                           l1177 54D0                                             l2079 4DCC  
                                           l2362 3908                                             l2348 4102  
                                           l1493 504E                                             l2394 3F4A  
                                           l1698 4A34                                             ?_fix 001A  
                                           ?_isr 0001                                             l9920 3AA4  
                                           l9930 3ADC                            _escreve_caractere_lcd 4C2C  
                                           l9870 4FBC                                             l9942 3B08  
                                           l9926 3AB8                                             STR_1 61EB  
                                           l9848 55A0                                             l9856 55FC  
                                           l9936 3AEC                                             STR_2 618C  
                                           STR_3 6214                                             l9946 3B20  
                                           l9938 3AF4                                             STR_4 61E0  
                                           STR_5 6259                                             l9956 3B50  
                                           STR_6 6253                                             STR_7 61AB  
                                           STR_8 6177                                             STR_9 61BA  
                                           l9984 2E0E                                             l9976 2DBC  
                                           l9998 2E32                                   timer_dois@flag 0041  
                                           _BRGH 007D62                                  __end_of_GPSRead 1F5A  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 00AA  
                                   trace_path@fn 00AB                                     trace_path@ds 00BB  
                                   trace_path@fs 00B7                                    ?_make_dirfile 0022  
                                           _Term 0042                                             _dado 0100  
                                           _data 0123                                             _atoi 403E  
                                           _atol 37F0                                             _main 56D6  
                                           _fsid 0150                                             _hora 01CB  
                                   ___ftpack@arg 001A                                     ___ftpack@exp 001D  
                                           _ltoa 543A                          __end_of_fence_diff_long 614F  
                                           fsr1h 000FE2                                             fsr2h 000FDA  
                                           indf1 000FE7                                             indf2 000FDF  
                                           fsr1l 000FE1                                             fsr2l 000FD9  
                                           btemp 0046                                             _sync 510C  
                                  disk_ioctl@cmd 001A                                    disk_read@buff 0068  
                                  disk_ioctl@res 001E                                    disk_read@pdrv 0070  
                           ?_latitude_to_convert 0001                                             prodh 000FF4  
                                           prodl 000FF3                                             start 000E  
                                   ___ftmul@cntr 0067                        sdc_disk_initialize@buff_i 0067  
                                   ___param_bank 000000                                     ___ftmul@sign 0068  
                      sdc_disk_initialize@count1 0063                        sdc_disk_initialize@count2 0069  
                                    _string_dado 027B                              diferenca@valor_long 007C  
                                   ___fttol@exp1 0077                                            ??_fix 001C  
                                   ___fttol@lval 0073                                            ??_isr 000D  
                        __size_of_escrita_sdcard 0164                 __size_of_configura_baudrate_uart 010A  
                       __size_of_recebe_dado_gps 0020                       ??_convert_to_int_point_lat 002E  
                                          l10030 2EDC                                            l10110 5234  
                                          l10016 2EB4                                            l11002 5734  
                                          l10300 4E58                                            l10060 4CCE  
                                          l10046 2F2C                                            l10230 2FC0  
                                          l10304 4E66                                            l10064 4CD2  
                                          l10056 4CA2                                            l10080 4CF4  
                                          l10144 59C8                                            l12000 0DF8  
                                          l11040 32EE                                            l10154 4D22  
                                          l10234 303C                                            l11018 5142  
                                          l11130 3612                                            l11122 3602  
                                          l10324 5160                                            l10308 4E74  
                                          l10316 4E82                                            l10092 5230  
                                          l11204 49C0                                            l12100 14AA  
                                          l10190 4C48                                            l10158 4D2C  
                                          l10318 4E9C                                            l10238 3044  
                                          l10246 3092                                            l10270 562E  
                                          l10414 2856                                            l10502 3194  
                                          l11134 361A                                            l12110 14C6  
                                          l10328 5188                                            l10088 5204  
                                          l10256 30E6                                            l10360 2D00  
                                          l10336 2BB2                                            l10432 28E6  
                                          l12008 0E68                                            l12024 0F62  
                                          l12016 0EFC                                            l11304 4612  
                                          l11056 33C6                                            l11160 365C  
                                          l11152 3644                                            l11072 356A  
                                          l12120 14F6                                            l12032 133A  
                                          l11232 4F04                                            l13000 2474  
                                          l10194 4C52                                            l10186 4C3E  
                                          l10274 5632                                            l10370 2D66  
                                          l10418 2880                                            l10434 2902  
                                          l10514 31C2                                            l10442 5070  
                                          l11314 4654                                            l11170 367A  
                                          l11162 365E                                            l11138 3622  
                                          l11402 2160                                            l12106 14BA  
                                          l12202 3D6C                                            l12300 0F88  
                                          l10268 5626                                            l10356 2CE0  
                                          l10372 2D80                                            l10380 26D6  
                                          l10532 31F6                                            l10452 4726  
                                          l11316 465C                                            l11420 2262  
                                          l11180 3696                                            l11092 35D4  
                                          l11340 201A                                            l12052 139A  
                                          l12036 1344                                            l13020 250E  
                                          l10286 563A                                            l10550 326C  
                                          l10446 5084                                            l10710 1BAE  
                                          l10622 1A24                                            l11502 062C  
                                          l11422 2274                                            l12142 1566  
                                          l12126 151A                                            l12062 13C6  
                                          l10606 58FA                                            l11238 4F30  
                                          l13102 26AA                                            l13014 24EC  
                                          l12312 1010                                            l11280 49F2  
                                          l11192 497A                                            l10456 4744  
                                          l10720 1BDA                                            l10704 1B9E  
                                          l10632 1A46                                            l11520 065C  
                                          l11352 2038                                            l11344 201E  
                                          l12128 1532                                            l12072 1408  
                                          l12208 3E8A                                            l12240 545A  
                                          l11264 4ED6                                            l12410 1264  
                                          l12402 1228                                            l12322 1068  
                                          l12306 1002                                            l11610 3986  
                                          l11290 4A26                                            l10394 2776  
                                          l10546 3230                                            l10490 3144  
                                          l10474 479E                                            l10730 1C02  
                                          l10642 1A7A                                            l10810 568A  
                                          l11530 068A                                            l10562 42F6  
                                          l11442 230A                                            l11418 223C  
                                          l11370 20CA                                            l12170 164E  
                                          l12162 1610                                            l12138 155A  
                                          l12090 1468                                            l12066 13DC  
                                          l12218 3EDC                                            l11258 4EAA  
                                          l12250 4BBC                                            l13050 25C8  
                                          l10396 27AA                                            l10388 2736  
                                          l11188 4976                                            l10652 1A9E  
                                          l10628 1A3A                                            l11516 0658  
                                          l11452 234A                                            l11428 229C  
                                          l12148 1596                                            l12084 1434  
                                          l13036 2550                                            l13060 25FC  
                                          l12422 12E2                                            l12334 107A  
                                          l12318 1014                                            l12430 12F0  
                                          l10582 5324                                            l11278 49E6  
                                          l10814 569A                                            l11438 2306  
                                          l11366 20BE                                            l11358 2060  
                                          l11630 4F60                                            l12166 1630  
                                          l12510 5896                                            l12262 4C16  
                                          l12416 1268                                            l12328 1076  
                                          l10576 5314                                            l11624 3A3A  
                                          l10824 46F4                                            l11296 45F2  
                                          l11464 23DA                                            l11384 2128  
                                          l11712 4DBE                                            l11704 4D8A  
                                          l10904 03A6                                            l12176 1698  
                                          l11640 4110                                            l13072 2620  
                                          l12186 5486                                            l12370 115C  
                                          l12354 10F6                                            l12338 10CE  
                                          l10498 316E                                            l11802 52BC  
                                          l10818 4686                                            l10826 46FC  
                                          l10746 1C60                                            l11538 0694  
                                          l11474 2414                                            l11378 210C  
                                          l11706 4D96                                            l10922 04EC  
                                          l10906 03B4                                            l10930 0520  
                                          l11634 4F8E                                            l12506 588E  
                                          l11730 48EC                                            l12274 4ACC  
                                          l13090 2666                                            l13058 25F8  
                                          l12188 548A                                            l12364 1158  
                                          l12348 10F2                                            l10764 1CC4  
                                          l10756 1C88                                            l10676 1B22  
                                          l11556 072A                                            l11548 0708  
                                          l11492 0608                                            l11484 05B0  
                                          l10588 5408                                            l10596 5428  
                                          l11396 214C                                            l11388 2134  
                                          l10940 058E                                            l11636 4F96  
                                          l11724 48C8                                            l12604 4B94  
                                          l12540 4E1E                                            l12516 4DE6  
                                          l13092 266A                                            l12382 11E4  
                                          l12358 114A                                            l12294 0F84  
                                          l11486 05B6                                            l10918 0470  
                                          l10854 00CC                                            l11670 420C  
                                          l11646 416E                                            l11654 41CC  
                                          l11742 4900                                            l11718 48C0  
                                          l12286 4B26                                            l12630 4BAA  
                                          l12526 4E02                                            l12376 11D6  
                                          l11808 52DC                                            l11592 09D2  
                                          l11824 16D8                                            l10936 057C  
                                          l11664 41F4                                            l12640 4374  
                                          l11736 48F8                                            l10778 58CC  
                                          l11586 09BC                                            l11578 08AE  
                                          l11906 18EE                                            l10866 0186  
                                          l12466 342E                                            l12650 43D0  
                                          l12642 437E                                            l10962 3870  
                                          l12570 4B44                                            l12396 1224  
                                          l12388 11E8                                            l10868 01A6  
                                          l11940 53BC                                            l12484 3516  
                                          l11676 422E                                            l11692 427C  
                                          l12652 43DA                                            l12644 439C  
                                          l12820 3DD6                                            l11748 4924  
                                          l11756 4930                                            l12580 4B60  
                                          l11854 1774                                            l10878 01FE  
                                          l11942 53C0                                            l11934 5378  
                                          l12486 3526                                            l11678 423A  
                                          l12814 3DAE                                            l12910 402C  
                                          l12902 4004                                            l10974 38C2  
                                          l10958 3846                                            l11758 493A  
                                          l12566 4E38                                            l10984 572A  
                                          l11872 1834                                            l10888 02E4  
                                          l10896 0338                                            l11944 53D0  
                                          l11936 5380                                            l11696 4292  
                                          l11688 426E                                            l12648 43B2  
                                          l12904 4010                                            l10968 387A  
                                          l10986 5730                                            l11874 1860  
                                          l11946 53D8                                            l12682 4858  
                                          l12674 4844                                            l12834 3E08  
                                          l12770 4044                                            l12594 4B7C  
                                          l13386 44AE                                            l13490 56EE  
                                          l11788 5722                                            l12844 3E30  
                                          l12780 4084                                            l11990 0DA6  
                                          l11974 0D3C                                            l11798 52A4  
                                          l11886 18B8                                            l12678 484E  
                                          l12838 3E18                                            l13398 4540  
                                          l12864 55C8                                            l12848 3E40  
                                          l12784 409A                                            l12768 4040  
                                          l12960 29D0                                            l11986 0D9C  
                                          l12874 3F96                                            l12970 2B5E  
                                          l12892 3FEC                                            l12788 40D0  
                                          l11998 0DE4                                            l12896 3FFC  
                                          l12986 556C                                  __end_of___aldiv 42A4  
                                          ?_atoi 0020                                            ?_atol 0026  
                                          ?_main 0001                                            STR_10 620A  
                                          ?_ltoa 0065                                            STR_11 6200  
                                          STR_20 6276                                            STR_12 6227  
                                          STR_21 627A                                            STR_13 6246  
                                          STR_30 6264                                            STR_14 6269  
                                          STR_22 61D5                                            STR_31 627D  
                                          STR_23 6264                                            STR_15 619C  
                                          STR_16 61A0                                            STR_32 625F  
                                          STR_24 623F                                            STR_25 623F  
                                          STR_33 6272                                            STR_17 61F6  
                                          STR_26 6264                                            STR_34 626E  
                                          STR_18 624D                                            STR_27 627D  
                                          STR_35 621E                                            STR_19 61C8  
                                          STR_28 6238                                            STR_36 6230  
                                          STR_29 623F                                     ?_leitura_SPI 0001  
                                __end_of___lldiv 4A46                                            ?_sync 0001  
                                          u11300 561E                                            u12020 312E  
                                __end_of___ftmul 3E7A                                            u12030 313A  
                                          u11320 4FCC                                            u12040 3164  
                                          _T0CON 000FD5                                            u12140 325A  
                                          u11350 3AB2                                            u12070 31B8  
                                          u11335 3A56                                            u12400 1C2A  
                                          u11425 2DE2                                  __end_of___llmod 4DDE  
                                          u12330 1B52                                            u12250 1A56  
                                          u12180 5310                                            u13300 49F6  
                                          u12260 1A66                                            u13205 3718  
                                __end_of___fttol 403E                                            u12350 1B5E  
                                          u12270 1A72                                            u13230 54C6  
                                          u13215 3748                                            u11455 2E88  
                                          u12271 1A70                                            u11480 2F3A  
                                          u13160 4976                                            u12440 1CA0  
                                          u13320 460E                                            u14120 16D4  
                                          _T2CON 000FCA                                            u13225 3768  
                                          u12450 1CD2                                            u12290 1AC0  
                                          u15100 1066                                            u15020 0FA8  
                                          u13340 4642                                            u14220 1830  
                                          u14300 53A8                                            u11805 2BE2  
                                          u11750 5180                                            u11670 2F7E  
                                          u12470 46B2                                            u13350 4668  
                                          u12710 0528                                            u13415 207C  
                                          u11760 51A8                                            u15200 117C  
                                          u15120 109A                                            u15040 0FCE  
                                          u13360 4680                                            u13520 2298  
                                          u11825 2C5C                                            u11905 27D6  
                                          u12625 024C                                            u11690 2FBC  
                                          u12810 513E                                            u12490 46E4  
                                          u13370 2004                                            u12730 3810  
                                          u15107 105C                                            u15027 0F9E  
                                          u13195 36FC                                            u14307 539E  
                                          u15300 1288                                            u15220 11A2  
                                          u15140 10CC                                            u15060 1000  
                                          u11780 2B7C                                            u14500 0EC2  
                                          u12900 35A0                                            u14260 18D6  
                                          u16020 4016                                            u11757 5176  
                                          u12477 46A8                                            u13710 0654  
                                          u13630 05D6                                            u13550 22F8  
                                          u14190 1794                                            u11767 519E  
                                          u15207 1172                                            u15127 1090  
                                          u15047 0FC4                                            u11855 2CEC  
                                          u11935 2862                                            u13535 22B8  
                                          u15320 12AE                                            u15240 11D4  
                                          u15160 1116                                            u15080 1034  
                                          u11880 2732                                            u12920 35B0  
                                          u14505 0EB8                                            u12497 46DA  
                                          u13377 1FFA                                            u12665 0324  
                                          u12737 3806                                            u13650 05FC  
                                          u12850 32EA                                            u12770 3866  
                                          u15307 127E                                            u15227 1198  
                                          u15147 10C2                                            u15067 0FF6  
                                          u11875 2706                                            u12907 3596  
                                          u15340 12E0                                            u15260 1214  
                                          u15180 1148                                            u11980 4764  
                                          u13820 09B8                                            u13580 2346  
                                          u16220 257A                                            u13637 05CC  
                                          u14470 0E04                                            u13830 09D0  
                                          u14630 14A8                                            u15510 4B58  
                                          u16230 25B6                                            u16150 2450  
                                          u15327 12A4                                            u15247 11CA  
                                          u15167 110C                                            u15087 102A  
                                          u17007 1B64                                            u13815 08C6  
                                          u14800 54AA                                            u15280 1254  
                                          u12880 336A                                            u14560 1390  
                                          u15520 4B5C                                            u15440 4DFE  
                                          u17017 1C08                                            u13657 05F2  
                                          u12865 32FA                                            u12777 385C  
                                          u14490 0E7C                                            u13930 423E  
                                          u16250 2608                                            u15347 12D6  
                                          u15267 120A                                            u15187 113E  
                                          u17027 5580                                            u14395 0BEC  
                                          u13780 0726                                            u14740 15F0  
                                          u15620 4366                                            u16228 257C  
                                          u16180 249E                                            u13845 0A56  
                                          u14590 1416                                            u15470 4E32  
                                          u16238 25B8                                            u16190 24DA  
                                          u14807 54A0                                            u15287 124A  
                                          u14825 3C8C                                            u15801 5508  
                                          u13970 4D9A                                            u14835 3CC6  
                                          u15660 43E4                                            u15820 503C  
                                          u16188 24A0                                            u14790 1670  
                                          u16198 24DC                                            u14855 3D08  
                                          u15911 3DBE                                            u14865 3D40  
                                          u15860 4094                                            u15790 48B8  
                                          u15961 3F7A                                            u15970 3F84  
                                          u15891 3D96                                            u15980 3FB4  
                                          u16780 47B4                                            u16790 47CC  
                                          u16768 44FE                                            u15985 3FAC  
                                          u16769 4512                                            u16957 4808  
                                          u16967 456C                                            u16977 4588  
                                          u16987 45A4                                            u16997 19F2  
                                          _RCREG 000FAE                                     ?_gps_minutos 001A  
                                          _RCSTA 000FAB                                            _SPBRG 000FAF  
                                          _TRISA 000F92                                            _TRISB 000F93  
                                          _TRISC 000F94                                            _TRISD 000F95  
                                          _TRISE 000F96                                  __end_of_f_close 56D6  
                                  trace_path@dir 00AE                                            _TXSTA 000FAC  
                                          _FatFs 0036                                  __end_of_f_lseek 0F74  
                            ___lmul@multiplicand 001E                       __size_of_config_timer_dois 000E  
                                __end_of_f_mount 52E0                                  ??_armazena_ltlo 0030  
                                __end_of_f_write 05A0                       __size_of_config_timer_zero 001A  
                                          _Speed 5A5E                                    get_cluster@bc 009A  
                                  get_cluster@fs 009C                                    get_cluster@wc 0094  
                                __end_of_command 5008                                    ___awtoft@sign 002A  
                                          _delay 5902                                  clust2sect@clust 0026  
                                          _fence 01BD                                  __end_of_gps_dia 5862  
                                __end_of_gps_ano 5884                                  __end_of_gps_mes 5840  
                                __end_of_fprintf 16A4                                            _fputc 54BE  
                                          _fputs 4F54                                  __end_of_isdigit 5902  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 001E  
                                          atoi@a 0025                                            atol@a 0061  
                                          atol@c 0065                                            atoi@s 0020  
                                          atol@s 0026                                            _ultoa 3E7A  
                                __end_of_rawdata 5A4A                                   ??_make_dirfile 0024  
                                __end_of_rawhora 5A40                                   disk_ioctl@buff 001B  
                                          pclath 000FFA                                   disk_read@count 006E  
                                          tablat 000FF5                                   disk_ioctl@pdrv 001D  
                               ?_dados_gps_to_sd 0001                                  __end_of_proceed 5A20  
                                          plusw1 000FE3                                            plusw2 000FDB  
                                          ttemp5 0047                                            ttemp6 004A  
                                          ttemp7 004E                            longitude_to_convert@i 008E  
                          longitude_to_convert@j 008D                                            status 000FD8  
                                  _troca_de_tela 2446                                            wtemp8 0047  
                          ??_latitude_to_convert 0030                                    disk_write@res 0073  
                                __initialization 4404                              disk_initialize@pdrv 002E  
          verifica_dados_operacionais@dados_data 0245                              disk_initialize@stat 002F  
                                   __end_of_atoi 410C                                     __end_of_atol 391A  
          verifica_dados_operacionais@dados_hora 0257                                     __end_of_main 56FE  
                                   clust2sect@fs 002F            verifica_dados_operacionais@dados_long 0200  
                                   __end_of_ltoa 547C     verifica_dados_operacionais@contador_anterior 00FE  
                                   __end_of_sync 515E                               _inicializa_tarefas 51B0  
                                escalonador@cont 01F8          convert_to_int_point_lat@convert_str_lat 006A  
                            reserve_direntry@dir 00B0                                create_chain@clust 00A1  
                                    auto_mount@p 00A0                                create_chain@cstat 00A9  
                                  sdc_reset@buff 002C                                           ??_atoi 0022  
                                         ??_atol 002A                                           ??_main 0031  
                                  ___fttol@sign1 0072                                           ??_ltoa 002E  
                                         ??_sync 0031                                    __activetblptr 000002  
                            ?_inicializa_tarefas 0001                             __end_of_desliga_uart 59AA  
                                      ??_GPSRead 000B                      ??_convert_to_int_point_long 002E  
                                         ?_Speed 001A                                   _next_dir_entry 3276  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0022  
                               ??_sdc_disk_write 002D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00CD                                 ___llmod@dividend 001A  
                                         ?_fputs 00D4                                   _convert_to_int 5796  
                             auto_mount@bootsect 0098                                 __end_of___awtoft 55EC  
                               __end_of___ftpack 4404                                           ?_ultoa 0027  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0081  
                                 armazena_ltlo@j 0080                                           i2l1465 3C4E  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9694 59B8                        convert_to_int_point_lat@i 0076  
                      convert_to_int_point_lat@j 0075                          __size_of_inicializa_SPI 0020  
                                 ?_troca_de_tela 0001                                           _TMR0IF 007F92  
                             auto_mount@maxclust 0094                         __end_of_recebe_dado_uart 59BC  
                   verifica_dados_operacionais@i 0096                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 001A  
                                         _SSPBUF 000FC9                         __size_of_sdc_disk_status 0010  
                               __end_of_check_fs 49C4                             ??_inicializa_tarefas 001A  
                              ?_disparo_gravacao 0001                                   trace_path@dptr 00BC  
                                 trace_path@path 00AC                           reserve_direntry@sector 00B5  
                       __size_of_disk_initialize 0026                       __end_of_posicao_cursor_lcd 4EA0  
                             ??_disparo_gravacao 01F3                                   auto_mount@path 007C  
                                   ?_move_window 0074                             __end_of_create_chain 3276  
                                   _dado_arquivo 0291                           __size_of_init_hardware 0016  
                                 auto_mount@stat 00A3                             __size_of_get_fattime 0156  
                                   put_cluster@p 009D                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0222                                           ___lmul 5060  
                                      ??___aldiv 0022                             __size_of_disk_status 0030  
                                         ___wmul 574C                                        ??___lldiv 0022  
                                      ??___ftmul 0060                                           _f_open 16A4  
                                      ??___llmod 0022                                        ??___fttol 006D  
                               __end_of_grava_sd 5970                                           _f_sync 391A  
                                         _buffer 01A6                                 __end_of_latitude 5A5E  
                               __end_of_gps_hora 5796                                           _estado 003E  
                                         _memcmp 4684                                           _memcpy 53F6  
                               __end_of_init_lcd 45E8                                           _memset 5680  
                                      ??_f_close 0031                                           _rawFix 01E3  
                                         clear_0 445E                                           clear_1 4470  
                                         clear_2 447C                                           clear_3 4488  
                                         clear_4 4494                                        ??_f_lseek 00B5  
                                      ??_f_mount 001C                         configura_baudrate_uart@x 002C  
                                      ??_f_write 00B5                                           _strcat 53B2  
                                         _strcmp 524E                              _sdc_disk_initialize 19D6  
                                      ??_command 0024                                      GPSRead@buff 000B  
                                         _strcpy 536E                                           _strlen 547C  
                          ___ftmul@f3_as_product 0064                                 put_cluster@clust 0089  
                                      ??_gps_dia 001C                                           fputc@c 00D1  
                             get_cluster@fatsect 0096                                 __end_of_monta_sd 1324  
                                      ??_gps_ano 001C                         __end_of_reserve_direntry 2446  
                                      ??_gps_mes 001C                                 __end_of_validate 5328  
                         __end_of_next_dir_entry 33DC                                        ??_fprintf 00E5  
                                   __pdataCOMRAM 0045                                           fputs@n 00D9  
                                      ??_isdigit 001A                             __size_of_escalonador 00A2  
                               __end_of_response 5A14                                ??_recebe_dado_gps 001A  
                                      ??_rawdata 001C                                     __mediumconst 6100  
                                disk_read@sector 006A                                        ??_rawhora 001C  
                                disk_read@result 0071                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 57B8                                        ??_proceed 001C  
                               _write_timer_zero 5A2C                                     ?_posicao_lat 0001  
                                         ultoa@c 0064                                           ultoa@v 0060  
                                         sync@fs 0089                        escreve_caractere_lcd@data 001C  
                                 ??_dummy_clocks 001A                              _escreve_inteiro_lcd 54FE  
                                sdc_disk_write@j 0065                                   ??_gps_segundos 001C  
                                     __accesstop 0060                          __end_of__initialization 449A  
                           ?_sdc_disk_initialize 0001                                   disk_write@buff 0068  
                                 disk_write@pdrv 0070                             __size_of_escreve_SPI 0010  
                                  ___rparam_used 000001                                ??_escreve_cmd_lcd 001C  
                   ?_verifica_plausibilidade_lat 0001                        _convert_to_int_point_long 4EA0  
                                     ___awtoft@c 0027                                       ___ftmul@f1 002B  
                                     ___ftmul@f2 002E                                       ___fttol@f1 0069  
                                 __pcstackCOMRAM 0001                                    __end_of_Speed 5A68  
                    __end_of_endereco_cursor_lcd 4D78                                     __pidataBANK1 59EC  
                                   __pidataBANK2 4A46                                ?_mensagem_inicial 0001  
                        _configura_baudrate_uart 3C7A             verifica_dados_operacionais@dados_lat 0224  
                                  __end_of_delay 5920             verifica_dados_operacionais@dados_vel 0269  
                                 _escrita_sdcard 33DC                                    __end_of_fputc 54FE  
                                  __end_of_fputs 4FAE                             ?_escreve_inteiro_lcd 006C  
                  ??_verifica_dados_operacionais 0090                 __end_of_convert_to_int_point_lat 4F54  
                                  __end_of_ultoa 3F68                                   diferenca@index 0077  
                             ??_mensagem_inicial 0020                             __end_of_make_dirfile 369A  
                                   ?_put_cluster 0089                    __size_of_mostra_dados_display 002E  
                             __size_of_diferenca 00CC                                reserve_direntry@c 00BC  
                              reserve_direntry@n 00B9                                 ??_verifica_fence 008F  
                             _tarefa_em_execucao 003B                       __end_ofi2_write_timer_zero 5A7C  
                                ?_next_dir_entry 009E                           __size_of_sdc_disk_read 0124  
                configura_baudrate_uart@baudrate 0028                             reserve_direntry@dptr 00BA  
                           __size_of_leitura_SPI 000C                                    _init_hardware 5970  
                                   auto_mount@fs 00A8                               __size_of_disk_read 0070  
                                        ??_Speed 001C                                  ?_convert_to_int 0066  
                     __end_of_verifica_recep_gps 5726                             __size_of_gps_minutos 0022  
                                        ??_delay 001A                                   sdc_reset@count 002A  
                                        ??_fputc 0031                                          ??_fputs 00D8  
                                ??_troca_de_tela 002F                                          ??_ultoa 002E  
                   mensagem_inicial@msg_linha_um 0060                                       __pbssBANK0 00ED  
                                     __pbssBANK1 0100                                       __pbssBANK2 027B  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51B0  
                          ??_sdc_disk_initialize 002D              verifica_plausibilidade_long@posicao 001A  
                   __end_of_longitude_to_convert 4B3C                        escreve_inteiro_uart@F3215 01E5  
                  ??_verifica_plausibilidade_lat 001A                           __end_of_escrita_sdcard 3540  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0039  
                                        ?___lmul 001A                                ??_sdc_disk_status 001A  
                                  make_dirfile@a 002A                                    make_dirfile@b 0028  
                                  make_dirfile@c 002C                                    make_dirfile@n 002B  
                                  make_dirfile@t 0029                                          ?___wmul 001A  
                          mensagem_inicial@F3664 6112                            mensagem_inicial@F3666 6101  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 00C1  
                                     _fence_flag 0031                                          ?_f_sync 008B  
                             __size_of_longitude 000A                                ??_disk_initialize 002E  
                          __size_of_desliga_uart 0012                                          ?_memcmp 001A  
                                        ?_memcpy 001A                                          ?_memset 001A  
                                 ___lmul@product 0022                                        ?___awtoft 0027  
                                      ?___ftpack 001A                                          ?_strcat 001A  
                                        ?_strcmp 0001                                          ?_strcpy 001C  
                                        ?_strlen 001A                                          i2l13200 1DD8  
                                        i2l13210 1E14                                          i2l13220 1E34  
                                        i2l13230 1E70                                          i2l13240 1E90  
                                        i2l13208 1E10                                          i2l13218 1E30  
                                        i2l13162 1CEE                                          i2l13228 1E6C  
                                        i2l13238 1E8C                                          i2l13190 1DA4  
                                        i2l13174 1D24                                          i2l13166 1D00  
                                        i2l13158 1CDE                                          i2l13264 1F28  
                                        i2l13256 1EF4                                          i2l13248 1EC2  
                                        i2l13192 1DA8                                          i2l13176 1D2E  
                                        i2l13432 3BBA                                          i2l13186 1D84  
                                        i2l13274 1F44                                          i2l13268 1F30  
                                        i2l13460 3C1E                                          i2l13444 3BCA  
                                        i2l13470 3C46                                          i2l13456 3C10  
                                        i2l13448 3BF8                                          i2l12922 5250  
                                        i2l12924 5258                                          i2l12916 532C  
                                        i2l13468 3C3A                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0074                                       _disk_ioctl 58C4  
                                        _GPSRead 1CD6                                       _disk_write 5200  
                                 remove_chain@fs 00A7             __size_of_verifica_dados_operacionais 0252  
                                        _SSPCON1 000FC6                         __size_of_inicializa_uart 0022  
                                        _SSPSTAT 000FC7                                       _clust2sect 42A4  
                                 _inicializa_SPI 58A4                                  trace_path@clust 00B9  
                                      ?_grava_sd 0001                                        ?_latitude 001A  
                                  ?_remove_chain 00A1                            __size_of_create_chain 018C  
                                      ?_gps_hora 001A                                        ?_init_lcd 0001  
                             __size_of_stringcpy 0046                                __end_of_diferenca 41D8  
                                  _sdc_disk_read 3A3E                                     _desliga_uart 5998  
                                     _auto_mount 05A0                                          __Hparam 0000  
                      ??_configura_baudrate_uart 0060                                          __Lparam 0000  
                                      ?_monta_sd 0020                                        ?_validate 0020  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4D0E  
                                  put_cluster@bc 009B                                        ?_response 0001  
                                  put_cluster@fs 009F                                          ___aldiv 41D8  
                                     f_close@res 0096                                  __size_of___lmul 0056  
                                        ___lldiv 49C4                                  __size_of___wmul 0026  
                                        ___ftmul 3D84                                          ___llmod 4D78  
                                        ___fttol 3F68                             __size_of_move_window 01AA  
                                     check_fs@fs 007A                                  __size_of_f_open 0332  
                                __size_of_f_sync 0124                             __end_of_dummy_clocks 55B4  
                                        _f_close 56AC                                          __pcinit 4404  
                                __size_of_memcmp 0092                                  __size_of_memcpy 0044  
                                     ??___awtoft 002A                                       ??___ftpack 001F  
                                __size_of_memset 002C                                          _f_lseek 0AEA  
                                     _init_ports 5920                                          __ramtop 0800  
                                        _f_mount 5298                                          __ptext0 56D6  
                                        __ptext1 47A6                                          __ptext2 454A  
                                        __ptext3 5970                                          __ptext4 5920  
                                        __ptext5 5A7C                                          __ptext6 5986  
                                        __ptext7 593C                                          __ptext8 5A2C  
                                        __ptext9 59FA                             __end_of_gps_segundos 57FC  
                                        _f_write 0012                                          _command 4FAE  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 009C  
                                __size_of_strcat 0044                                  __size_of_strcmp 004A  
                                __size_of_strcpy 0044                                  __size_of_strlen 0042  
                    endereco_cursor_lcd@endereco 001C                                          _gps_dia 5840  
                                        _gps_ano 5862                                          _gps_mes 581E  
                                        _fprintf 1324                                     __size_of_fix 000A  
                                        _rawDate 01C4                                          _isdigit 58E4  
                                   __size_of_isr 3C72             __size_of_verifica_plausibilidade_lat 0078  
                        ??_escreve_caractere_lcd 001C                                       ??_check_fs 0078  
                                        _rawTime 01B2                                 ___aldiv@dividend 001A  
                                        _rawdata 5A40                                          _rawhora 5A36  
                                   stringcpy@chr 000A                                     stringcpy@dir 0005  
                                        _time_sd 014C                                     _create_chain 30EA  
                                        _proceed 5A14                          __size_of_init_interrupt 0012  
                             _point_buff_gps_lat 0148                                __end_of_sdc_reset 47A6  
                         __end_of_inicializa_SPI 58C4                            __end_of_armazena_ltlo 4942  
                    __end_of_latitude_to_convert 4C2C                                       f_lseek@ofs 00B1  
                                 __pintcode_body 3B62                                       f_lseek@res 00C5  
                           end_of_initialization 449A                                __end_of_longitude 5A54  
           __end_of_verifica_plausibilidade_long 4E42            __size_of_verifica_plausibilidade_long 0064  
                   _verifica_plausibilidade_long 4DDE                __size_of_convert_to_int_point_lat 005A  
                           __size_of_posicao_lat 0006                                       f_open@mode 00C5  
                                     f_open@path 00C3                        ?_convert_to_int_point_lat 0066  
                                 ??_remove_chain 00A3                                          isr@cont 0019  
                                        memcmp@n 001E                                       ??_grava_sd 0031  
                                        memcpy@d 0021                                          memcpy@n 001E  
                                        memcpy@s 0023                          __size_of_init_oscilador 0008  
                                        fputc@bw 00D2                                       ??_latitude 001C  
                                        memset@c 001C                                          memset@n 001E  
                                     ??_gps_hora 001C                                          memset@p 0020  
                                  __Lmediumconst 6100                                       ??_init_lcd 001D  
                                        int_func 3B62                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 001E                                  disk_status@stat 001F  
                                 ?_sdc_disk_read 0026                                          ltoa@buf 0065  
                                        ltoa@val 0066                                        i2u1606_40 528C  
                                      i2u1682_40 3BAA                                        i2u1683_48 3BAC  
                         write_timer_zero@timer0 001A                                  ___lldiv@divisor 001E  
                                  _rawSatellites 013D                                       f_mount@drv 001C  
                             ??_recebe_dado_uart 0001                                  ___lldiv@counter 0026  
                                     ??_monta_sd 0022                                       ??_validate 0024  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0056  
                                 _fence_diff_lat 614F                                       ??_response 001A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5A36  
                               ___aldiv@quotient 0024                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5884                                    ?_posicao_long 0001  
                                     _wait_ready 55EC                                          strcmp@r 0007  
                                        strlen@s 001A                    longitude_to_convert@longitude 0082  
             __size_of_convert_to_int_point_long 005A                                        _PORTBbits 000F81  
                      __size_of_disparo_gravacao 003C                                        _PORTDbits 000F83  
                                      _PORTEbits 000F84                                  ??_init_hardware 001C  
                                     _trace_path 1F5A                               _posicao_cursor_lcd 4E42  
                              __end_of_stringcpy 536E                                    ??_desliga_SPI 001A  
                           __size_of_put_cluster 0266                  __end_of_configura_baudrate_uart 3D84  
                                    ?_disk_ioctl 001A                             _longitude_to_convert 4AC2  
                              ?_reserve_direntry 00AF                                       f_write@btw 00B2  
                                     f_write@res 00C1                                        _TRISBbits 000F93  
                                    ?_disk_write 0068                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 009E  
      verifica_dados_operacionais@contador_atual 00FF                                  _escreve_cmd_lcd 4832  
                             ??_reserve_direntry 00B1                              ?_posicao_cursor_lcd 001D  
                                ?_inicializa_SPI 0001                                  disk_write@count 006E  
                                    ?_clust2sect 0026                                 _put_cluster$1567 0093  
                               _put_cluster$1568 0095                   verifica_dados_operacionais@vel 0095  
                                     command@CMD 0024                                       command@CRC 0023  
                                     command@arg 001F                                     _make_dirfile 3540  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0060  
                              ??_inicializa_uart 002E                      __size_of_inicializa_tarefas 0050  
                                  ??_get_cluster 008B                           __end_of_fence_diff_lat 6177  
                                  ??_disk_status 001C                                      ?_auto_mount 007C  
                              _make_dirfile$1677 0026                                      ___ftmul@exp 0063  
                                command@argument 0025                               diferenca@valor_lat 0078  
                           ??_posicao_cursor_lcd 001E                                   ??_posicao_long 001A  
                                 __end_of___lmul 50B6                                   _temp_buff_long 0142  
                               ??_next_dir_entry 009F                                   __end_of___wmul 5772  
                                 __end_of_f_open 19D6                                    __pidataCOMRAM 5A90  
                                  ??_escalonador 01F6                                      ?_init_ports 0001  
                                 __end_of_f_sync 3A3E                                 ??_convert_to_int 002E  
                                 __end_of_memcmp 4716                                   __end_of_memcpy 543A  
                                 __end_of_memset 56AC                __end_of_convert_to_int_point_long 4EFA  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 53F6  
                                 __end_of_strcmp 5298                                   __end_of_strcpy 53B2  
                                 __end_of_strlen 54BE                                 _time_atualizacao 0034  
                            start_initialization 4404                                      __end_of_fix 5A72  
                                    __end_of_isr 3C7A                        __size_of_mensagem_inicial 008C  
                             reserve_direntry@dj 00AF                               reserve_direntry@fs 00BF  
                            __end_of_desliga_SPI 59EC                                    ??_escreve_SPI 001A  
                   __end_of_mostra_dados_display 5680                                  _sdc_disk_status 59BC  
                                ??_sdc_disk_read 002D                                auto_mount@fatsize 00A4  
                             i2_write_timer_zero 5A72                                  ___llmod@divisor 001E  
                                _disk_initialize 5726                                  ___llmod@counter 0022  
                        __end_of_recebe_dado_gps 58A4                               _verifica_recep_gps 56FE  
                          reserve_direntry@clust 00BD                          __size_of_sdc_disk_write 01B6  
                               _data_uart_recebe 003D                                wait_ready@timeout 001A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 00A2  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                            __size_of_disk_write 004E                                         ??___lmul 0022  
                          __size_of_gps_segundos 0022                                       fprintf@fil 00DB  
                                     fprintf@arp 02D5                                         ??___wmul 001E  
                                     fprintf@res 02C9                                       fprintf@val 02D1  
                                     fprintf@str 00DD                              __end_of_get_fattime 37F0  
                                       ??_f_open 00C6                              ?_verifica_recep_gps 0001  
                                       ??_f_sync 0031                                      ?_wait_ready 0001  
                                    __pdataBANK1 01E5                                      __pdataBANK2 0200  
                            __end_of_get_cluster 2D8A                                         ??_memcmp 0020  
                            __end_of_disk_status 5652                                         ??_memcpy 0020  
                            __size_of_clust2sect 00B2                                         ??_memset 0020  
                         sdc_disk_read@start_add 0061                             __end_of_remove_chain 4684  
                              ??_dados_gps_to_sd 0025                          sdc_disk_initialize@buff 006B  
                                  ??_leitura_SPI 001A                          __end_of_escreve_cmd_lcd 48BE  
                                       ??_strcat 001E                                         ??_strcmp 0005  
                                       ??_strcpy 0020                                         ??_strlen 001C  
                        sdc_disk_initialize@stat 0062                                      ?_trace_path 00AA  
                                  ??_gps_minutos 001C                                     _fprintf$2170 02CB  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 02DB  
                                  monta_sd@index 0023                                      __pbssCOMRAM 0031  
                                _trace_path$1724 00B3                                  _trace_path$1726 00B5  
                                       ?_GPSRead 0001                                    __pcstackBANK0 0060  
                                  __pcstackBANK1 01F3                                    __pcstackBANK2 02B9  
                                 _init_interrupt 5986                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 454A  
                    __end_of_sdc_disk_initialize 1CD6                                __size_of_check_fs 0082  
                                   _isdigit$3209 001B                                     check_fs@sect 0074  
                                    _char_number 0044                             ??_verifica_recep_gps 001A  
                                   _dummy_clocks 5578                                   _init_oscilador 5A7C  
                          __end_of_troca_de_tela 26B0                                         GPSRead@c 000C  
                               ??_escrita_sdcard 0031                              __size_of_init_ports 001C  
                                   _gps_segundos 57DA                            _escreve_frase_ram_lcd 515E  
                              __size_of_grava_sd 001A                                        _data_buff 0156  
                                      _data_hoje 0040                      __end_of_escreve_inteiro_lcd 553C  
                            __end_of_escreve_SPI 59DC                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                              delay@contador_int 001B                                delay@contador_ext 001A  
                 ??_verifica_plausibilidade_long 001A              __end_of_verifica_dados_operacionais 2B68  
                    _verifica_dados_operacionais 2916                                        _diferenca 410C  
                                      __pintcode 0008                                    __pmediumconst 6100  
                                       ?___aldiv 001A                             latitude_to_convert@i 008C  
                           latitude_to_convert@j 008B                                        __ptext100 58C4  
                                      __ptext101 369A                                        __ptext110 5A68  
                                      __ptext102 57DA                                        __ptext111 50B6  
                                      __ptext103 57FC                                        __ptext120 5A72  
                                      __ptext112 0F74                                        __ptext104 581E  
                                      __ptext121 59AA                                        __ptext113 547C  
                                      __ptext105 5772                                        __ptext122 1CD6  
                                      __ptext114 4E42                                        __ptext106 5840  
                                      __ptext123 5328                                        __ptext115 4D0E  
                                      __ptext107 5862                                        __ptext124 524E  
                                      __ptext116 515E                                        __ptext108 5998  
                                      __ptext125 0000                                        __ptext117 4C2C  
                                      __ptext109 59DC                                        __ptext118 5902  
                              __size_of_monta_sd 03B0                                         ?___lldiv 001A  
                                       ?___ftmul 002B                                         ?___llmod 001A  
                              __size_of_validate 0048                                         ?___fttol 0069  
                              __size_of_response 000C                                         ?_f_close 0094  
                                      _disk_read 4C9E                               _sinaliza_int_timer 003C  
                                       ?_f_lseek 00AF                                         ?_f_mount 001A  
                               _disparo_gravacao 553C                                         ?_f_write 00AF  
                         ??_longitude_to_convert 0030                                         ?_command 001F  
                         __end_of_init_interrupt 5998                                         ?_gps_dia 001A  
                                       ?_gps_ano 001A                                         ?_gps_mes 001A  
                                       ?_fprintf 00DB                                         ?_isdigit 0001  
                                    _desliga_SPI 59DC                              sdc_disk_read@p_buff 0026  
                        troca_de_tela@last_state 0038                              sdc_disk_read@length 0065  
                                       ?_rawdata 001A                              sdc_disk_read@sector 0028  
                                       ?_rawhora 001A                          __end_of_sdc_disk_status 59CC  
                 __size_of_escreve_caractere_lcd 0072                                   __size_of_Speed 000A  
                  __end_of_escreve_caractere_lcd 4C9E                                         ?_proceed 0001  
                                      f_close@fp 0094                              __end_of_leitura_SPI 5A2C  
                                 __size_of_delay 001E                          __end_of_disk_initialize 574C  
                         __end_of_init_oscilador 5A84                              __end_of_gps_minutos 581E  
                                 __size_of_fputc 0040                                   __size_of_fputs 005A  
                            make_dirfile@dirname 0023                                       validate@id 0022  
                                     validate@fs 0020                             __end_of_posicao_long 5A8A  
                                      _p_tarefas 011D                                   __size_of_ultoa 00EE  
                        __size_of_verifica_fence 0058                                        _rawCourse 0129  
                               make_dirfile@path 0022                                         _GPGGA_ok 0152  
                                      _sdc_reset 4716                              __size_of_wait_ready 0036  
                                ___aldiv@divisor 001E                      latitude_to_convert@latitude 0082  
                                ___aldiv@counter 0022                                   ___wmul@product 001E  
                                       _LATBbits 000F8A                                        f_lseek@fp 00AF  
                                       _LATCbits 000F8B              __end_of_verifica_plausibilidade_lat 4BB4  
                    _verifica_plausibilidade_lat 4B3C                                         _GPRMC_ok 0154  
                                      f_open@dir 00DD                                        f_open@res 00DC  
                                      _longitude 5A4A                                         _PIE1bits 000F9D  
                                    _get_fattime 369A                                     _rawLongitude 0181  
                               ?_recebe_dado_gps 0001                              __size_of_trace_path 027A  
                                    _get_cluster 2B68                                      _disk_status 5622  
                                  ??_move_window 0078                                        f_mount@fs 001A  
                                       _PIR1bits 000F9E                                       ?_diferenca 0001  
                                  move_window@fs 0087               verifica_plausibilidade_lat@posicao 001A  
    verifica_dados_operacionais@velocidade_atual 0144      verifica_dados_operacionais@velocidade_media 0139  
                              ?_write_timer_zero 001A                                  remove_chain@nxt 00A5  
                                      f_sync@dir 0092                                        f_sync@res 0091  
                                      f_sync@tim 008D                         posicao_cursor_lcd@coluna 001D  
                                     ?_disk_read 0068                               ??_write_timer_zero 001C  
                                      f_write@cc 00C7                       posicao_cursor_lcd@endereco 001F  
                                      f_write@bw 00B4                                        f_write@fp 00AF  
                           _mostra_dados_display 5652                        __size_of_recebe_dado_uart 0012  
                                    _escalonador 44A8                                ___wmul@multiplier 001A  
                               ?_escreve_cmd_lcd 0001                      escreve_frase_ram_lcd@buffer 001D  
                               ??_inicializa_SPI 001A                                  ?_init_interrupt 0001  
                                   ??_disk_ioctl 001D                                     ??_disk_write 006F  
                            armazena_ltlo@buffer 002E                                     f_lseek@clust 00CE  
                                _inicializa_uart 57B8                                     f_lseek@csize 00CA  
                                   f_lseek@ifptr 00C6                                        _stringcpy 5328  
                               __size_of_GPSRead 0284                                 _mensagem_inicial 47A6  
                                  ??_posicao_lat 001A                                    _temp_buff_lat 0140  
                                ?_init_oscilador 0001                                     ??_clust2sect 002A  
                              ___lmul@multiplier 001A                                        copy_data0 4418  
                                      copy_data1 4438                           recebe_dado_gps@timeout 001B  
                                    _escreve_SPI 59CC                                    _flag_anomalia 003A  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0028  
                       ?_configura_baudrate_uart 0028                           ?_escreve_frase_ram_lcd 001D  
                                     ?_longitude 001A                                 auto_mount@chk_wp 007D  
                              move_window@sector 0074                                   _sdc_disk_write 2D8A  
                      __size_of_reserve_direntry 0272                     __size_of_latitude_to_convert 0078  
                       escreve_inteiro_lcd@F3223 01EC                                     ??_auto_mount 007E  
                                       __Hrparam 0000                                        memcpy@tmp 0020  
                                       __Lrparam 0000                                        fprintf@cc 02D6  
                             __end_of_disk_ioctl 58E4                            __size_of_remove_chain 009C  
                                 put_cluster@val 008B                                 get_cluster@clust 0089  
                             __end_of_disk_write 524E                                     _SentenceType 0043  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0068  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0020  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F6  
                               __size_of___llmod 0066                                 __size_of___fttol 00D6  
                                  ??_put_cluster 008D                            ?_mostra_dados_display 0001  
                                   ??_init_ports 001A                              __end_of_move_window 30EA  
                                       ___awtoft 55B4                                         ___ftpack 4356  
                             __end_of_clust2sect 4356                         escreve_inteiro_lcd@valor 006C  
                               __size_of_f_close 002A                         escreve_inteiro_lcd@texto 0070  
                               __size_of_f_lseek 048A                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5A20                                 __size_of_f_write 058E  
                                    _gps_minutos 57FC                                 __size_of_command 005A  
                          __end_of_init_hardware 5986                                         _check_fs 4942  
                                     strcat@from 001C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 0380                                 __size_of_isdigit 001E  
                               ?_sdc_disk_status 0001                                       ?_stringcpy 0001  
                                  _time_recovery 014A                         _convert_to_int_point_lat 4EFA  
                               __size_of_rawdata 000A                               __end_of_auto_mount 0AEA  
                                       __ptext10 51B0                                 __size_of_rawhora 000A  
                                       __ptext11 44A8                                         __ptext20 4AC2  
                                       __ptext12 2446                                         __ptext21 4BB4  
                                       __ptext13 553C                                         __ptext30 5A4A  
                                       __ptext22 48BE                                         __ptext14 2916  
                                       __ptext31 5A54                                         __ptext23 410C  
                                       __ptext15 5008                                         __ptext40 54FE  
                                       __ptext32 403E                                         __ptext24 4EA0  
                                       __ptext16 4DDE                                         __ptext41 543A  
                                       __ptext33 58E4                                         __ptext25 4EFA  
                                       __ptext17 5A84                                         __ptext50 58A4  
                                       __ptext42 3E7A                                         __ptext34 3F68  
                                       __ptext26 5796                                         __ptext18 4B3C  
                                       __ptext51 33DC                                         __ptext43 4832  
                                       __ptext35 3D84                                         __ptext27 37F0  
                                       __ptext19 5A8A                                         __ptext60 1F5A  
                                       __ptext52 536E                                         __ptext44 5884  
                                       __ptext36 55B4                                         __ptext28 5A36  
                                       __ptext61 3540                                         __ptext53 53B2  
                                       __ptext45 56FE                                         __ptext37 4356  
                                       __ptext29 5A40                                         __ptext70 19D6  
                                       __ptext62 21D4                                         __ptext54 1324  
                                       __ptext46 5956                                         __ptext38 5A5E  
                                       __ptext71 4716                                         __ptext63 3276  
                                       __ptext55 4F54                                         __ptext47 57B8  
                                       __ptext39 5652                                         __ptext80 574C  
                                       __ptext72 4942                                         __ptext64 42A4  
                                       __ptext56 54BE                                         __ptext48 3C7A  
                                       __ptext81 49C4                                         __ptext73 4684  
                                       __ptext65 45E8                                         __ptext57 0012  
                                       __ptext49 41D8                                         __ptext90 2D8A  
                                       __ptext82 56AC                                         __ptext74 5060  
                                       __ptext66 53F6                                         __ptext58 4D78  
                                       __ptext91 4C9E                                         __ptext83 391A  
                                       __ptext75 5298                                         __ptext67 05A0  
                                       __ptext59 16A4                                         __ptext92 3A3E  
                                       __ptext84 52E0                                         __ptext76 0AEA  
                                       __ptext68 5680                                         __ptext93 5A08  
                                       __ptext85 5622                                         __ptext77 30EA  
                                       __ptext69 5726                                         __ptext94 5A14  
                                       __ptext86 59BC                                         __ptext78 26B0  
                                       __ptext95 4FAE                                         __ptext87 510C  
                                       __ptext79 2B68                                         __ptext96 55EC  
                                       __ptext88 2F40                                         __ptext97 59CC  
                                       __ptext89 5200                                         __ptext98 5578  
                                       __ptext99 5A20                                 __size_of_proceed 000C  
                                       _filename 02A5                                      _rawAltitude 010A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 014E  
                             sdc_disk_read@count 002C                                       strcpy@from 001E  
                            escrita_sdcard@f_fix 003F                       __end_of_inicializa_tarefas 5200  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5956  
                         __end_of_sdc_disk_write 2F40                                        monta_sd@i 0024  
                                       _gps_flag 012F                                         _latitude 5A54  
                                       _gps_hora 5772                                      _rawLatitude 019A  
                                       _init_lcd 454A                                    __size_of_atoi 00CE  
                                  __size_of_atol 012A                                    __size_of_main 0028  
                                   _remove_chain 45E8                                    __size_of_ltoa 0042  
                            __end_of_posicao_lat 5A90                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4D0E                               __end_of_init_ports 593C  
                                       _rawSpeed 01D7                                    dummy_clocks@i 001D  
                                       f_open@dj 00DF                                    dummy_clocks@n 001C  
                                       f_open@fn 00CA                                         f_open@fp 00C1  
                                       f_open@dw 00D8                                         f_open@rs 00D6  
                                _dados_gps_to_sd 50B6                                         _monta_sd 0F74  
                                       _validate 52E0                                      ??_diferenca 002E  
                                       _sentence 01DD                                     move_window@n 0082  
                                  stringcpy@str1 0001                                    stringcpy@str2 0003  
                                       _response 5A08                                    stringcpy@size 0007  
                                       f_sync@fp 008B                              _point_buff_gps_long 0146  
                    __size_of_posicao_cursor_lcd 005E                                         int$flags 0046  
                        posicao_cursor_lcd@linha 001E                                         atoi@sign 0024  
                                   ??_wait_ready 001A                                         atol@sign 0060  
                                    ??_disk_read 006F                               armazena_ltlo@index 002F  
                        __end_of_inicializa_uart 57DA    verifica_dados_operacionais@contador_gravacoes 00FD  
                           convert_to_int@p_buff 0066                                     ??_trace_path 00AF  
                           ?_endereco_cursor_lcd 0001                               put_cluster@fatsect 0097  
                                     _INTCONbits 000FF2                            __size_of_posicao_long 0006  
                     ?_convert_to_int_point_long 0066                                         memcmp@s1 001A  
                                       memcmp@s2 001C                                 move_window@wsect 0083  
                                       memcpy@d1 001A                                         memcpy@s1 001C  
                            __end_of_put_cluster 2916                                         fprintf@c 02DA  
                                       fprintf@f 02CF                                         fprintf@i 02D8  
                                       fprintf@r 02D0                                         fprintf@s 02B9  
                                       fprintf@w 02CD                                         fputc@chr 00CD  
                                       fputc@fil 00CF                                         isdigit@c 001C  
                                       memset@p1 001A                                        ultoa@base 002C  
                              _config_timer_dois 59FA                                     _tempo_backup 0117  
                                       fputs@fil 00D6                                         fputs@str 00D4  
                              _config_timer_zero 593C                                   _verifica_fence 5008  
                                  _armazena_ltlo 48BE                                     _poligono_ext 00ED  
                                  wait_ready@res 001E                                         intlevel2 0000  
                             ?_config_timer_dois 0001                         mensagem_inicial@msg_dois 0071  
                                    ??_sdc_reset 0026                                         ltoa@base 006A  
                             ?_config_timer_zero 0001                                     _tempo_tarefa 0111  
                                ?_sdc_disk_write 0026  verifica_dados_operacionais@velocidade_atual_int 0135  
                             __end_of_wait_ready 5622                         __end_of_disparo_gravacao 5578  
                               ___lldiv@dividend 001A                                sdc_disk_read@buff 0067  
                          __end_of_sdc_disk_read 3B62                                      ??_longitude 001C  
                            sdc_disk_status@pdrv 001B                                    ?_desliga_uart 0001  
                     recebe_dado_gps@flag_recebe 001A                              ??_config_timer_dois 001A  
                                     _OSCCONbits 000FD3                               __end_of_trace_path 21D4  
                            ??_config_timer_zero 001C                                      _move_window 2F40  
                                _fence_diff_long 6123                           ??_mostra_dados_display 0020  
                                   _posicao_long 5A84                             sdc_disk_write@count1 0062  
                           sdc_disk_write@p_buff 0026                                 _recebe_dado_uart 59AA  
                                       ultoa@buf 0027                             sdc_disk_write@sector 0028  
                          ??_endereco_cursor_lcd 001C                                         ultoa@val 0028  
                                   response@buff 001A                                         strcat@cp 001E  
                                       strcat@to 001A                                         strcmp@s1 0001  
                                       strcmp@s2 0003                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0022                       convert_to_int_point_long@i 0075  
                     convert_to_int_point_long@j 0074                                         strcpy@cp 0020  
                                       strlen@cp 001C                                         strcpy@to 001C  
                              remove_chain@clust 00A1                        __end_of_config_timer_dois 5A08  
                                   ___aldiv@sign 0023                                    ?_create_chain 00A1  
                      __end_of_config_timer_zero 5956                           __end_of_verifica_fence 5060  
                                    ??_stringcpy 0008                      __size_ofi2_write_timer_zero 000A  
                                    _SSPCON1bits 000FC6                          __size_of_next_dir_entry 0166  
                                    _posicao_lat 5A8A                           escreve_cmd_lcd@comando 001C  
                                 ?_armazena_ltlo 002E                              sdc_disk_write@count 002C  
                    __size_of_verifica_recep_gps 0028                          __size_of_convert_to_int 0022  
                  sdc_disk_initialize@crc_number 0065        convert_to_int_point_long@convert_str_long 006A  
                        __end_of_dados_gps_to_sd 510C                               sdc_disk_write@buff 0067  
                   __size_of_sdc_disk_initialize 0300                                     f_write@clust 00C9  
                                 ??_desliga_uart 001A                               leitura_sdcard@size 0045  
                                   f_write@wbuff 00C2                                     ?_get_fattime 001E  
                               _reserve_direntry 21D4                          disparo_gravacao@fix_gps 01F4  
                                    f_write@buff 00B1                                sdc_disk_write@res 0064  
                                   ?_get_cluster 0089                                      f_write@sect 00C3  
                                    f_write@wcnt 00CB                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3664 6123                    __end_ofmensagem_inicial@F3666 6112  
                                escreve_SPI@dado 001B  
