

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Jun 13 12:07:26 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK0
   203  005C6C                     __pidataBANK0:
   204                           	callstack 0
   205                           
   206                           ;initializer for leitura_sdcard@size
   207  005C6C  58                 	db	88
   208                           
   209                           	psect	idataBANK1
   210  005BCA                     __pidataBANK1:
   211                           	callstack 0
   212                           
   213                           ;initializer for escreve_inteiro_uart@F3215
   214  005BCA  30                 	db	48
   215  005BCB  30                 	db	48
   216  005BCC  30                 	db	48
   217  005BCD  30                 	db	48
   218  005BCE  30                 	db	48
   219  005BCF  30                 	db	48
   220  005BD0  00                 	db	0
   221                           
   222                           ;initializer for escreve_inteiro_lcd@F3223
   223  005BD1  30                 	db	48
   224  005BD2  30                 	db	48
   225  005BD3  30                 	db	48
   226  005BD4  30                 	db	48
   227  005BD5  30                 	db	48
   228  005BD6  30                 	db	48
   229  005BD7  00                 	db	0
   230                           
   231                           	psect	idataBANK2
   232  004D1C                     __pidataBANK2:
   233                           	callstack 0
   234                           
   235                           ;initializer for _dados_long
   236  004D1C  30                 	db	48
   237  004D1D  30                 	db	48
   238  004D1E  30                 	db	48
   239  004D1F  30                 	db	48
   240  004D20  30                 	db	48
   241  004D21  30                 	db	48
   242  004D22  30                 	db	48
   243  004D23  30                 	db	48
   244  004D24  30                 	db	48
   245  004D25  30                 	db	48
   246  004D26  30                 	db	48
   247  004D27  30                 	db	48
   248  004D28  30                 	db	48
   249  004D29  30                 	db	48
   250  004D2A  30                 	db	48
   251  004D2B  30                 	db	48
   252  004D2C  30                 	db	48
   253  004D2D  30                 	db	48
   254  004D2E  30                 	db	48
   255  004D2F  30                 	db	48
   256  004D30  30                 	db	48
   257  004D31  30                 	db	48
   258  004D32  30                 	db	48
   259  004D33  30                 	db	48
   260  004D34  30                 	db	48
   261  004D35  30                 	db	48
   262  004D36  30                 	db	48
   263  004D37  30                 	db	48
   264  004D38  30                 	db	48
   265  004D39  30                 	db	48
   266  004D3A  30                 	db	48
   267  004D3B  30                 	db	48
   268  004D3C  30                 	db	48
   269  004D3D  30                 	db	48
   270  004D3E  30                 	db	48
   271  004D3F  30                 	db	48
   272                           
   273                           ;initializer for _dados_lat
   274  004D40  30                 	db	48
   275  004D41  30                 	db	48
   276  004D42  30                 	db	48
   277  004D43  30                 	db	48
   278  004D44  30                 	db	48
   279  004D45  30                 	db	48
   280  004D46  30                 	db	48
   281  004D47  30                 	db	48
   282  004D48  30                 	db	48
   283  004D49  30                 	db	48
   284  004D4A  00                 	db	0
   285  004D4B  30                 	db	48
   286  004D4C  30                 	db	48
   287  004D4D  30                 	db	48
   288  004D4E  30                 	db	48
   289  004D4F  30                 	db	48
   290  004D50  30                 	db	48
   291  004D51  30                 	db	48
   292  004D52  30                 	db	48
   293  004D53  30                 	db	48
   294  004D54  30                 	db	48
   295  004D55  00                 	db	0
   296  004D56  30                 	db	48
   297  004D57  30                 	db	48
   298  004D58  30                 	db	48
   299  004D59  30                 	db	48
   300  004D5A  30                 	db	48
   301  004D5B  30                 	db	48
   302  004D5C  30                 	db	48
   303  004D5D  30                 	db	48
   304  004D5E  30                 	db	48
   305  004D5F  30                 	db	48
   306  004D60  00                 	db	0
   307                           
   308                           ;initializer for _dados_data
   309  004D61  30                 	db	48
   310  004D62  30                 	db	48
   311  004D63  30                 	db	48
   312  004D64  30                 	db	48
   313  004D65  30                 	db	48
   314  004D66  30                 	db	48
   315  004D67  30                 	db	48
   316  004D68  30                 	db	48
   317  004D69  30                 	db	48
   318  004D6A  30                 	db	48
   319  004D6B  30                 	db	48
   320  004D6C  30                 	db	48
   321  004D6D  30                 	db	48
   322  004D6E  30                 	db	48
   323  004D6F  30                 	db	48
   324  004D70  30                 	db	48
   325  004D71  30                 	db	48
   326  004D72  30                 	db	48
   327                           
   328                           ;initializer for _dados_hora
   329  004D73  30                 	db	48
   330  004D74  30                 	db	48
   331  004D75  30                 	db	48
   332  004D76  30                 	db	48
   333  004D77  30                 	db	48
   334  004D78  30                 	db	48
   335  004D79  30                 	db	48
   336  004D7A  30                 	db	48
   337  004D7B  30                 	db	48
   338  004D7C  30                 	db	48
   339  004D7D  30                 	db	48
   340  004D7E  30                 	db	48
   341  004D7F  30                 	db	48
   342  004D80  30                 	db	48
   343  004D81  30                 	db	48
   344  004D82  30                 	db	48
   345  004D83  30                 	db	48
   346  004D84  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006106                     __pmediumconst:
   350                           	callstack 0
   351  006106  00                 	db	0
   352  006107                     mensagem_inicial@F3679:
   353                           	callstack 0
   354  006107  54                 	db	84
   355  006108  43                 	db	67
   356  006109  43                 	db	67
   357  00610A  2D                 	db	45
   358  00610B  2D                 	db	45
   359  00610C  54                 	db	84
   360  00610D  45                 	db	69
   361  00610E  4C                 	db	76
   362  00610F  45                 	db	69
   363  006110  4D                 	db	77
   364  006111  54                 	db	84
   365  006112  52                 	db	82
   366  006113  49                 	db	73
   367  006114  41                 	db	65
   368  006115  00                 	db	0
   369  006116  00                 	db	0
   370  006117  00                 	db	0
   371  006118                     __end_ofmensagem_inicial@F3679:
   372                           	callstack 0
   373  006118                     mensagem_inicial@F3677:
   374                           	callstack 0
   375  006118  46                 	db	70
   376  006119  41                 	db	65
   377  00611A  54                 	db	84
   378  00611B  45                 	db	69
   379  00611C  43                 	db	67
   380  00611D  20                 	db	32
   381  00611E  53                 	db	83
   382  00611F  54                 	db	84
   383  006120  20                 	db	32
   384  006121  41                 	db	65
   385  006122  4E                 	db	78
   386  006123  44                 	db	68
   387  006124  52                 	db	82
   388  006125  45                 	db	69
   389  006126  00                 	db	0
   390  006127  00                 	db	0
   391  006128  00                 	db	0
   392  006129                     __end_ofmensagem_inicial@F3677:
   393                           	callstack 0
   394  006129                     _fence_diff_long:
   395                           	callstack 0
   396  006129  2D                 	db	45
   397  00612A  30                 	db	48
   398  00612B  34                 	db	52
   399  00612C  36                 	db	54
   400  00612D  33                 	db	51
   401  00612E  33                 	db	51
   402  00612F  39                 	db	57
   403  006130  34                 	db	52
   404  006131  30                 	db	48
   405  006132  35                 	db	53
   406  006133  30                 	db	48
   407  006134  2D                 	db	45
   408  006135  30                 	db	48
   409  006136  34                 	db	52
   410  006137  36                 	db	54
   411  006138  32                 	db	50
   412  006139  39                 	db	57
   413  00613A  34                 	db	52
   414  00613B  31                 	db	49
   415  00613C  34                 	db	52
   416  00613D  37                 	db	55
   417  00613E  34                 	db	52
   418  00613F  2D                 	db	45
   419  006140  30                 	db	48
   420  006141  34                 	db	52
   421  006142  36                 	db	54
   422  006143  32                 	db	50
   423  006144  39                 	db	57
   424  006145  34                 	db	52
   425  006146  31                 	db	49
   426  006147  34                 	db	52
   427  006148  37                 	db	55
   428  006149  34                 	db	52
   429  00614A  2D                 	db	45
   430  00614B  30                 	db	48
   431  00614C  34                 	db	52
   432  00614D  36                 	db	54
   433  00614E  33                 	db	51
   434  00614F  33                 	db	51
   435  006150  39                 	db	57
   436  006151  34                 	db	52
   437  006152  30                 	db	48
   438  006153  35                 	db	53
   439  006154  30                 	db	48
   440  006155                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  006155                     _fence_diff_lat:
   443                           	callstack 0
   444  006155  2D                 	db	45
   445  006156  32                 	db	50
   446  006157  33                 	db	51
   447  006158  33                 	db	51
   448  006159  36                 	db	54
   449  00615A  34                 	db	52
   450  00615B  36                 	db	54
   451  00615C  36                 	db	54
   452  00615D  35                 	db	53
   453  00615E  33                 	db	51
   454  00615F  2D                 	db	45
   455  006160  32                 	db	50
   456  006161  33                 	db	51
   457  006162  33                 	db	51
   458  006163  36                 	db	54
   459  006164  34                 	db	52
   460  006165  36                 	db	54
   461  006166  36                 	db	54
   462  006167  35                 	db	53
   463  006168  33                 	db	51
   464  006169  2D                 	db	45
   465  00616A  32                 	db	50
   466  00616B  33                 	db	51
   467  00616C  34                 	db	52
   468  00616D  31                 	db	49
   469  00616E  38                 	db	56
   470  00616F  39                 	db	57
   471  006170  35                 	db	53
   472  006171  37                 	db	55
   473  006172  33                 	db	51
   474  006173  2D                 	db	45
   475  006174  32                 	db	50
   476  006175  33                 	db	51
   477  006176  34                 	db	52
   478  006177  31                 	db	49
   479  006178  38                 	db	56
   480  006179  39                 	db	57
   481  00617A  35                 	db	53
   482  00617B  37                 	db	55
   483  00617C  33                 	db	51
   484  00617D                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  00617D  6F                 	db	111	;'o'
   540  00617E  20                 	db	32
   541  00617F  53                 	db	83	;'S'
   542  006180  69                 	db	105	;'i'
   543  006181  73                 	db	115	;'s'
   544  006182  74                 	db	116	;'t'
   545  006183  65                 	db	101	;'e'
   546  006184  6D                 	db	109	;'m'
   547  006185  61                 	db	97	;'a'
   548  006186  20                 	db	32
   549  006187  64                 	db	100	;'d'
   550  006188  65                 	db	101	;'e'
   551  006189  20                 	db	32
   552  00618A  61                 	db	97	;'a'
   553  00618B  72                 	db	114	;'r'
   554  00618C  71                 	db	113	;'q'
   555  00618D  75                 	db	117	;'u'
   556  00618E  69                 	db	105	;'i'
   557  00618F  76                 	db	118	;'v'
   558  006190  6F                 	db	111	;'o'
   559  006191  00                 	db	0
   560  006192                     STR_2:
   561  006192  49                 	db	73	;'I'
   562  006193  6E                 	db	110	;'n'
   563  006194  73                 	db	115	;'s'
   564  006195  69                 	db	105	;'i'
   565  006196  72                 	db	114	;'r'
   566  006197  61                 	db	97	;'a'
   567  006198  20                 	db	32
   568  006199  6F                 	db	111	;'o'
   569  00619A  20                 	db	32
   570  00619B  43                 	db	67	;'C'
   571  00619C  61                 	db	97	;'a'
   572  00619D  72                 	db	114	;'r'
   573  00619E  74                 	db	116	;'t'
   574  00619F  61                 	db	97	;'a'
   575  0061A0  6F                 	db	111	;'o'
   576  0061A1  00                 	db	0
   577  0061A2                     STR_12:
   578  0061A2  76                 	db	118	;'v'
   579  0061A3  25                 	db	37
   580  0061A4  73                 	db	115	;'s'
   581  0061A5  3B                 	db	59	;';'
   582  0061A6  6C                 	db	108	;'l'
   583  0061A7  74                 	db	116	;'t'
   584  0061A8  25                 	db	37
   585  0061A9  73                 	db	115	;'s'
   586  0061AA  3B                 	db	59	;';'
   587  0061AB  6C                 	db	108	;'l'
   588  0061AC  6F                 	db	111	;'o'
   589  0061AD  25                 	db	37
   590  0061AE  73                 	db	115	;'s'
   591  0061AF  3B                 	db	59	;';'
   592  0061B0  00                 	db	0
   593  0061B1  45                 	db	69	;'E'
   594  0061B2  72                 	db	114	;'r'
   595  0061B3  72                 	db	114	;'r'
   596  0061B4  6F                 	db	111	;'o'
   597  0061B5  20                 	db	32
   598  0061B6  61                 	db	97	;'a'
   599  0061B7  6F                 	db	111	;'o'
   600  0061B8  20                 	db	32
   601  0061B9  6D                 	db	109	;'m'
   602  0061BA  6F                 	db	111	;'o'
   603  0061BB  6E                 	db	110	;'n'
   604  0061BC  74                 	db	116	;'t'
   605  0061BD  61                 	db	97	;'a'
   606  0061BE  72                 	db	114	;'r'
   607  0061BF  00                 	db	0
   608  0061C0  45                 	db	69	;'E'
   609  0061C1  72                 	db	114	;'r'
   610  0061C2  72                 	db	114	;'r'
   611  0061C3  6F                 	db	111	;'o'
   612  0061C4  20                 	db	32
   613  0061C5  61                 	db	97	;'a'
   614  0061C6  6F                 	db	111	;'o'
   615  0061C7  20                 	db	32
   616  0061C8  63                 	db	99	;'c'
   617  0061C9  72                 	db	114	;'r'
   618  0061CA  69                 	db	105	;'i'
   619  0061CB  61                 	db	97	;'a'
   620  0061CC  72                 	db	114	;'r'
   621  0061CD  00                 	db	0
   622  0061CE  65                 	db	101	;'e'
   623  0061CF  78                 	db	120	;'x'
   624  0061D0  74                 	db	116	;'t'
   625  0061D1  66                 	db	102	;'f'
   626  0061D2  65                 	db	101	;'e'
   627  0061D3  6E                 	db	110	;'n'
   628  0061D4  63                 	db	99	;'c'
   629  0061D5  65                 	db	101	;'e'
   630  0061D6  2E                 	db	46
   631  0061D7  74                 	db	116	;'t'
   632  0061D8  78                 	db	120	;'x'
   633  0061D9  74                 	db	116	;'t'
   634  0061DA  00                 	db	0
   635  0061DB                     STR_19:
   636  0061DB  41                 	db	65	;'A'
   637  0061DC  47                 	db	71	;'G'
   638  0061DD  55                 	db	85	;'U'
   639  0061DE  41                 	db	65	;'A'
   640  0061DF  52                 	db	82	;'R'
   641  0061E0  44                 	db	68	;'D'
   642  0061E1  45                 	db	69	;'E'
   643  0061E2  2E                 	db	46
   644  0061E3  2E                 	db	46
   645  0061E4  2E                 	db	46
   646  0061E5  00                 	db	0
   647  0061E6                     STR_4:
   648  0061E6  4D                 	db	77	;'M'
   649  0061E7  4D                 	db	77	;'M'
   650  0061E8  43                 	db	67	;'C'
   651  0061E9  20                 	db	32
   652  0061EA  56                 	db	86	;'V'
   653  0061EB  65                 	db	101	;'e'
   654  0061EC  72                 	db	114	;'r'
   655  0061ED  2E                 	db	46
   656  0061EE  20                 	db	32
   657  0061EF  33                 	db	51	;'3'
   658  0061F0  00                 	db	0
   659  0061F1                     STR_1:
   660  0061F1  53                 	db	83	;'S'
   661  0061F2  65                 	db	101	;'e'
   662  0061F3  6D                 	db	109	;'m'
   663  0061F4  20                 	db	32
   664  0061F5  43                 	db	67	;'C'
   665  0061F6  61                 	db	97	;'a'
   666  0061F7  72                 	db	114	;'r'
   667  0061F8  74                 	db	116	;'t'
   668  0061F9  61                 	db	97	;'a'
   669  0061FA  6F                 	db	111	;'o'
   670  0061FB  00                 	db	0
   671  0061FC                     STR_13:
   672  0061FC  72                 	db	114	;'r'
   673  0061FD  30                 	db	48	;'0'
   674  0061FE  3B                 	db	59	;';'
   675  0061FF  63                 	db	99	;'c'
   676  006200  30                 	db	48	;'0'
   677  006201  3B                 	db	59	;';'
   678  006202  6B                 	db	107	;'k'
   679  006203  30                 	db	48	;'0'
   680  006204  3B                 	db	59	;';'
   681  006205  00                 	db	0
   682  006206                     STR_14:
   683  006206  68                 	db	104	;'h'
   684  006207  25                 	db	37
   685  006208  73                 	db	115	;'s'
   686  006209  3B                 	db	59	;';'
   687  00620A  64                 	db	100	;'d'
   688  00620B  4E                 	db	78	;'N'
   689  00620C  2F                 	db	47
   690  00620D  41                 	db	65	;'A'
   691  00620E  3B                 	db	59	;';'
   692  00620F  00                 	db	0
   693  006210  56                 	db	86	;'V'
   694  006211  65                 	db	101	;'e'
   695  006212  72                 	db	114	;'r'
   696  006213  69                 	db	105	;'i'
   697  006214  66                 	db	102	;'f'
   698  006215  69                 	db	105	;'i'
   699  006216  71                 	db	113	;'q'
   700  006217  75                 	db	117	;'u'
   701  006218  65                 	db	101	;'e'
   702  006219  00                 	db	0
   703  00621A  6F                 	db	111	;'o'
   704  00621B  20                 	db	32
   705  00621C  61                 	db	97	;'a'
   706  00621D  72                 	db	114	;'r'
   707  00621E  71                 	db	113	;'q'
   708  00621F  75                 	db	117	;'u'
   709  006220  69                 	db	105	;'i'
   710  006221  76                 	db	118	;'v'
   711  006222  6F                 	db	111	;'o'
   712  006223  00                 	db	0
   713  006224                     STR_3:
   714  006224  53                 	db	83	;'S'
   715  006225  44                 	db	68	;'D'
   716  006226  20                 	db	32
   717  006227  56                 	db	86	;'V'
   718  006228  45                 	db	69	;'E'
   719  006229  52                 	db	82	;'R'
   720  00622A  2E                 	db	46
   721  00622B  20                 	db	32
   722  00622C  31                 	db	49	;'1'
   723  00622D  00                 	db	0
   724  00622E                     STR_32:
   725  00622E  42                 	db	66	;'B'
   726  00622F  31                 	db	49	;'1'
   727  006230  3A                 	db	58	;':'
   728  006231  46                 	db	70	;'F'
   729  006232  45                 	db	69	;'E'
   730  006233  4E                 	db	78	;'N'
   731  006234  43                 	db	67	;'C'
   732  006235  45                 	db	69	;'E'
   733  006236  00                 	db	0
   734  006237  6F                 	db	111	;'o'
   735  006238  20                 	db	32
   736  006239  63                 	db	99	;'c'
   737  00623A  61                 	db	97	;'a'
   738  00623B  72                 	db	114	;'r'
   739  00623C  74                 	db	116	;'t'
   740  00623D  61                 	db	97	;'a'
   741  00623E  6F                 	db	111	;'o'
   742  00623F  00                 	db	0
   743  006240                     STR_33:
   744  006240  42                 	db	66	;'B'
   745  006241  32                 	db	50	;'2'
   746  006242  3A                 	db	58	;':'
   747  006243  4C                 	db	76	;'L'
   748  006244  54                 	db	84	;'T'
   749  006245  4C                 	db	76	;'L'
   750  006246  4F                 	db	79	;'O'
   751  006247  00                 	db	0
   752  006248                     STR_25:
   753  006248  46                 	db	70	;'F'
   754  006249  45                 	db	69	;'E'
   755  00624A  4E                 	db	78	;'N'
   756  00624B  43                 	db	67	;'C'
   757  00624C  45                 	db	69	;'E'
   758  00624D  3A                 	db	58	;':'
   759  00624E  00                 	db	0
   760  00624F                     STR_22:
   761  00624F  44                 	db	68	;'D'
   762  006250  45                 	db	69	;'E'
   763  006251  4E                 	db	78	;'N'
   764  006252  54                 	db	84	;'T'
   765  006253  52                 	db	82	;'R'
   766  006254  4F                 	db	79	;'O'
   767  006255  00                 	db	0
   768  006256                     STR_15:
   769  006256  66                 	db	102	;'f'
   770  006257  25                 	db	37
   771  006258  63                 	db	99	;'c'
   772  006259  3B                 	db	59	;';'
   773  00625A  0A                 	db	10
   774  00625B  00                 	db	0
   775  00625C                     STR_29:
   776  00625C  46                 	db	70	;'F'
   777  00625D  49                 	db	73	;'I'
   778  00625E  58                 	db	88	;'X'
   779  00625F  3A                 	db	58	;':'
   780  006260  00                 	db	0
   781  006261                     STR_23:
   782  006261  46                 	db	70	;'F'
   783  006262  4F                 	db	79	;'O'
   784  006263  52                 	db	82	;'R'
   785  006264  41                 	db	65	;'A'
   786  006265  00                 	db	0
   787  006266                     STR_11:
   788  006266  2E                 	db	46
   789  006267  74                 	db	116	;'t'
   790  006268  6C                 	db	108	;'l'
   791  006269  6D                 	db	109	;'m'
   792  00626A  00                 	db	0
   793  00626B                     STR_31:
   794  00626B  6C                 	db	108	;'l'
   795  00626C  6F                 	db	111	;'o'
   796  00626D  3A                 	db	58	;':'
   797  00626E  00                 	db	0
   798  00626F                     STR_30:
   799  00626F  6C                 	db	108	;'l'
   800  006270  74                 	db	116	;'t'
   801  006271  3A                 	db	58	;':'
   802  006272  00                 	db	0
   803  006273                     STR_17:
   804  006273  46                 	db	70	;'F'
   805  006274  41                 	db	65	;'A'
   806  006275  54                 	db	84	;'T'
   807  006276  00                 	db	0
   808  006277  0D                 	db	13
   809  006278  0A                 	db	10
   810  006279  00                 	db	0
   811  00627A                     STR_20:
   812  00627A  30                 	db	48	;'0'
   813  00627B  00                 	db	0
   814  00627C                     STR_24:
   815  00627C  7C                 	db	124
   816  00627D  00                 	db	0
   817  00627E  00                 	db	0	; dummy byte at the end
   818  0000                     
   819                           ; #config settings
   820                           
   821                           	psect	cinit
   822  004368                     __pcinit:
   823                           	callstack 0
   824  004368                     start_initialization:
   825                           	callstack 0
   826  004368                     __initialization:
   827                           	callstack 0
   828                           
   829                           ; Initialize objects allocated to BANK2 (105 bytes)
   830                           ; load TBLPTR registers with __pidataBANK2
   831  004368  0E1C               	movlw	low __pidataBANK2
   832  00436A  6EF6               	movwf	tblptrl,c
   833  00436C  0E4D               	movlw	high __pidataBANK2
   834  00436E  6EF7               	movwf	tblptrh,c
   835  004370  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   836  004372  6EF8               	movwf	tblptru,c
   837  004374  EE02  F07E         	lfsr	0,__pdataBANK2
   838  004378  EE10 F069          	lfsr	1,105
   839  00437C                     copy_data0:
   840  00437C  0009               	tblrd		*+
   841  00437E  CFF5 FFEE          	movff	tablat,postinc0
   842  004382  50E5               	movf	postdec1,w,c
   843  004384  50E1               	movf	fsr1l,w,c
   844  004386  E1FA               	bnz	copy_data0
   845                           
   846                           ; Initialize objects allocated to BANK1 (14 bytes)
   847                           ; load TBLPTR registers with __pidataBANK1
   848  004388  0ECA               	movlw	low __pidataBANK1
   849  00438A  6EF6               	movwf	tblptrl,c
   850  00438C  0E5B               	movlw	high __pidataBANK1
   851  00438E  6EF7               	movwf	tblptrh,c
   852  004390  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   853  004392  6EF8               	movwf	tblptru,c
   854  004394  EE01  F0EC         	lfsr	0,__pdataBANK1
   855  004398  EE10 F00E          	lfsr	1,14
   856  00439C                     copy_data1:
   857  00439C  0009               	tblrd		*+
   858  00439E  CFF5 FFEE          	movff	tablat,postinc0
   859  0043A2  50E5               	movf	postdec1,w,c
   860  0043A4  50E1               	movf	fsr1l,w,c
   861  0043A6  E1FA               	bnz	copy_data1
   862                           
   863                           ; Initialize objects allocated to BANK0 (1 bytes)
   864                           ; load TBLPTR registers with __pidataBANK0
   865  0043A8  0E6C               	movlw	low __pidataBANK0
   866  0043AA  6EF6               	movwf	tblptrl,c
   867  0043AC  0E5C               	movlw	high __pidataBANK0
   868  0043AE  6EF7               	movwf	tblptrh,c
   869  0043B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   870  0043B2  6EF8               	movwf	tblptru,c
   871  0043B4  0009               	tblrd		*+	;fetch initializer
   872  0043B6  CFF5 F0FF          	movff	tablat,__pdataBANK0
   873                           
   874                           ; Clear objects allocated to BIGRAM (544 bytes)
   875  0043BA  EE03  F096         	lfsr	0,__pbssBIGRAM
   876  0043BE  EE12 F020          	lfsr	1,544
   877  0043C2                     clear_0:
   878  0043C2  6AEE               	clrf	postinc0,c
   879  0043C4  50E5               	movf	postdec1,w,c
   880  0043C6  50E1               	movf	fsr1l,w,c
   881  0043C8  E1FC               	bnz	clear_0
   882  0043CA  50E2               	movf	fsr1h,w,c
   883  0043CC  E1FA               	bnz	clear_0
   884                           
   885                           ; Clear objects allocated to BANK3 (150 bytes)
   886  0043CE  EE03  F000         	lfsr	0,__pbssBANK3
   887  0043D2  0E96               	movlw	150
   888  0043D4                     clear_1:
   889  0043D4  6AEE               	clrf	postinc0,c
   890  0043D6  06E8               	decf	wreg,f,c
   891  0043D8  E1FD               	bnz	clear_1
   892                           
   893                           ; Clear objects allocated to BANK2 (126 bytes)
   894  0043DA  EE02  F000         	lfsr	0,__pbssBANK2
   895  0043DE  0E7E               	movlw	126
   896  0043E0                     clear_2:
   897  0043E0  6AEE               	clrf	postinc0,c
   898  0043E2  06E8               	decf	wreg,f,c
   899  0043E4  E1FD               	bnz	clear_2
   900                           
   901                           ; Clear objects allocated to BANK1 (236 bytes)
   902  0043E6  EE01  F000         	lfsr	0,__pbssBANK1
   903  0043EA  0EEC               	movlw	236
   904  0043EC                     clear_3:
   905  0043EC  6AEE               	clrf	postinc0,c
   906  0043EE  06E8               	decf	wreg,f,c
   907  0043F0  E1FD               	bnz	clear_3
   908                           
   909                           ; Clear objects allocated to BANK0 (24 bytes)
   910  0043F2  EE00  F0E7         	lfsr	0,__pbssBANK0
   911  0043F6  0E18               	movlw	24
   912  0043F8                     clear_4:
   913  0043F8  6AEE               	clrf	postinc0,c
   914  0043FA  06E8               	decf	wreg,f,c
   915  0043FC  E1FD               	bnz	clear_4
   916                           
   917                           ; Clear objects allocated to COMRAM (9 bytes)
   918  0043FE  EE00  F04D         	lfsr	0,__pbssCOMRAM
   919  004402  0E09               	movlw	9
   920  004404                     clear_5:
   921  004404  6AEE               	clrf	postinc0,c
   922  004406  06E8               	decf	wreg,f,c
   923  004408  E1FD               	bnz	clear_5
   924  00440A                     end_of_initialization:
   925                           	callstack 0
   926  00440A                     __end_of__initialization:
   927                           	callstack 0
   928  00440A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   929  00440C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   930  00440E  0100               	movlb	0
   931  004410  EFBE  F02B         	goto	_main	;jump to C main() function
   932                           
   933                           	psect	bssCOMRAM
   934  00004D                     __pbssCOMRAM:
   935                           	callstack 0
   936  00004D                     _FatFs:
   937                           	callstack 0
   938  00004D                     	ds	2
   939  00004F                     troca_de_tela@last_state:
   940                           	callstack 0
   941  00004F                     	ds	1
   942  000050                     troca_de_tela@state:
   943                           	callstack 0
   944  000050                     	ds	1
   945  000051                     verifica_dados_operacionais@contador_atual:
   946                           	callstack 0
   947  000051                     	ds	1
   948  000052                     _tarefa_em_execucao:
   949                           	callstack 0
   950  000052                     	ds	1
   951  000053                     escrita_sdcard@f_fix:
   952                           	callstack 0
   953  000053                     	ds	1
   954  000054                     _is_it_rmc_string:
   955                           	callstack 0
   956  000054                     	ds	1
   957  000055                     _is_it_gga_string:
   958                           	callstack 0
   959  000055                     	ds	1
   960                           
   961                           	psect	bssBANK0
   962  0000E7                     __pbssBANK0:
   963                           	callstack 0
   964  0000E7                     _fence_flag:
   965                           	callstack 0
   966  0000E7                     	ds	3
   967  0000EA                     _time_atualizacao:
   968                           	callstack 0
   969  0000EA                     	ds	2
   970  0000EC                     _rmc_index:
   971                           	callstack 0
   972  0000EC                     	ds	2
   973  0000EE                     _gga_index:
   974                           	callstack 0
   975  0000EE                     	ds	2
   976  0000F0                     verifica_dados_operacionais@contador_anterior:
   977                           	callstack 0
   978  0000F0                     	ds	1
   979  0000F1                     _flag_anomalia:
   980                           	callstack 0
   981  0000F1                     	ds	1
   982  0000F2                     _sinaliza_int_timer:
   983                           	callstack 0
   984  0000F2                     	ds	1
   985  0000F3                     _data_uart_recebe:
   986                           	callstack 0
   987  0000F3                     	ds	1
   988  0000F4                     _estado:
   989                           	callstack 0
   990  0000F4                     	ds	1
   991  0000F5                     _fence:
   992                           	callstack 0
   993  0000F5                     	ds	1
   994  0000F6                     _data_hoje:
   995                           	callstack 0
   996  0000F6                     	ds	1
   997  0000F7                     	ds	1
   998  0000F8                     _comma_counter_rmc:
   999                           	callstack 0
  1000  0000F8                     	ds	1
  1001  0000F9                     _comma_counter_gga:
  1002                           	callstack 0
  1003  0000F9                     	ds	1
  1004  0000FA                     _E_W:
  1005                           	callstack 0
  1006  0000FA                     	ds	1
  1007  0000FB                     _n_s:
  1008                           	callstack 0
  1009  0000FB                     	ds	1
  1010  0000FC                     _Term:
  1011                           	callstack 0
  1012  0000FC                     	ds	1
  1013  0000FD                     _SentenceType:
  1014                           	callstack 0
  1015  0000FD                     	ds	1
  1016  0000FE                     _char_number:
  1017                           	callstack 0
  1018  0000FE                     	ds	1
  1019                           
  1020                           	psect	dataBANK0
  1021  0000FF                     __pdataBANK0:
  1022                           	callstack 0
  1023  0000FF                     	ds	1
  1024                           
  1025                           	psect	bssBANK1
  1026  000100                     __pbssBANK1:
  1027                           	callstack 0
  1028  000100                     _poligono_ext:
  1029                           	callstack 0
  1030  000100                     	ds	16
  1031  000110                     _dado:
  1032                           	callstack 0
  1033  000110                     	ds	10
  1034  00011A                     _rawAltitude:
  1035                           	callstack 0
  1036  00011A                     	ds	7
  1037  000121                     	ds	6
  1038  000127                     _dados_vel:
  1039                           	callstack 0
  1040  000127                     	ds	6
  1041  00012D                     _tempo_tarefa:
  1042                           	callstack 0
  1043  00012D                     	ds	6
  1044  000133                     _tempo_backup:
  1045                           	callstack 0
  1046  000133                     	ds	6
  1047  000139                     _p_tarefas:
  1048                           	callstack 0
  1049  000139                     	ds	6
  1050  00013F                     _rawCourse:
  1051                           	callstack 0
  1052  00013F                     	ds	6
  1053  000145                     _sentence:
  1054                           	callstack 0
  1055  000145                     	ds	6
  1056  00014B                     _gps_flag:
  1057                           	callstack 0
  1058  00014B                     	ds	6
  1059  000151                     verifica_dados_operacionais@velocidade_atual_int:
  1060                           	callstack 0
  1061  000151                     	ds	4
  1062  000155                     	ds	4
  1063  000159                     _rmc_code:
  1064                           	callstack 0
  1065  000159                     	ds	3
  1066  00015C                     _gga_code:
  1067                           	callstack 0
  1068  00015C                     	ds	3
  1069  00015F                     _rawSatellites:
  1070                           	callstack 0
  1071  00015F                     	ds	3
  1072  000162                     _temp_buff_lat:
  1073                           	callstack 0
  1074  000162                     	ds	2
  1075  000164                     _temp_buff_long:
  1076                           	callstack 0
  1077  000164                     	ds	2
  1078  000166                     verifica_dados_operacionais@velocidade_atual:
  1079                           	callstack 0
  1080  000166                     	ds	2
  1081  000168                     _point_buff_gps_long:
  1082                           	callstack 0
  1083  000168                     	ds	2
  1084  00016A                     _point_buff_gps_lat:
  1085                           	callstack 0
  1086  00016A                     	ds	2
  1087  00016C                     _time_recovery:
  1088                           	callstack 0
  1089  00016C                     	ds	2
  1090  00016E                     _time_sd:
  1091                           	callstack 0
  1092  00016E                     	ds	2
  1093  000170                     _timeout_tarefa:
  1094                           	callstack 0
  1095  000170                     	ds	2
  1096  000172                     _fsid:
  1097                           	callstack 0
  1098  000172                     	ds	2
  1099  000174                     _teste:
  1100                           	callstack 0
  1101  000174                     	ds	2
  1102  000176                     _GPGGA_ok:
  1103                           	callstack 0
  1104  000176                     	ds	2
  1105  000178                     _GPRMC_ok:
  1106                           	callstack 0
  1107  000178                     	ds	2
  1108  00017A                     _data_buff:
  1109                           	callstack 0
  1110  00017A                     	ds	2
  1111  00017C                     _fil:
  1112                           	callstack 0
  1113  00017C                     	ds	28
  1114  000198                     _lo:
  1115                           	callstack 0
  1116  000198                     	ds	13
  1117  0001A5                     _rawLongitude:
  1118                           	callstack 0
  1119  0001A5                     	ds	13
  1120  0001B2                     _lt:
  1121                           	callstack 0
  1122  0001B2                     	ds	12
  1123  0001BE                     _rawLatitude:
  1124                           	callstack 0
  1125  0001BE                     	ds	12
  1126  0001CA                     _hora:
  1127                           	callstack 0
  1128  0001CA                     	ds	7
  1129  0001D1                     _rawTime:
  1130                           	callstack 0
  1131  0001D1                     	ds	7
  1132  0001D8                     _data:
  1133                           	callstack 0
  1134  0001D8                     	ds	6
  1135  0001DE                     _vel:
  1136                           	callstack 0
  1137  0001DE                     	ds	6
  1138  0001E4                     _rawDate:
  1139                           	callstack 0
  1140  0001E4                     	ds	6
  1141  0001EA                     _rawFix:
  1142                           	callstack 0
  1143  0001EA                     	ds	2
  1144                           
  1145                           	psect	dataBANK1
  1146  0001EC                     __pdataBANK1:
  1147                           	callstack 0
  1148  0001EC                     	ds	7
  1149  0001F3                     escreve_inteiro_lcd@F3223:
  1150                           	callstack 0
  1151  0001F3                     	ds	7
  1152                           
  1153                           	psect	bssBANK2
  1154  000200                     __pbssBANK2:
  1155                           	callstack 0
  1156  000200                     _string_dado:
  1157                           	callstack 0
  1158  000200                     	ds	22
  1159  000216                     _gga_pointers:
  1160                           	callstack 0
  1161  000216                     	ds	20
  1162  00022A                     _rmc_pointers:
  1163                           	callstack 0
  1164  00022A                     	ds	12
  1165  000236                     _buffer:
  1166                           	callstack 0
  1167  000236                     	ds	12
  1168  000242                     _dado_arquivo:
  1169                           	callstack 0
  1170  000242                     	ds	20
  1171  000256                     _filename:
  1172                           	callstack 0
  1173  000256                     	ds	20
  1174  00026A                     _rawSpeed:
  1175                           	callstack 0
  1176  00026A                     	ds	20
  1177                           
  1178                           	psect	dataBANK2
  1179  00027E                     __pdataBANK2:
  1180                           	callstack 0
  1181  00027E                     _dados_long:
  1182                           	callstack 0
  1183  00027E                     	ds	36
  1184  0002A2                     _dados_lat:
  1185                           	callstack 0
  1186  0002A2                     	ds	33
  1187  0002C3                     _dados_data:
  1188                           	callstack 0
  1189  0002C3                     	ds	18
  1190  0002D5                     _dados_hora:
  1191                           	callstack 0
  1192  0002D5                     	ds	18
  1193                           
  1194                           	psect	bssBANK3
  1195  000300                     __pbssBANK3:
  1196                           	callstack 0
  1197  000300                     _gga_buffer:
  1198                           	callstack 0
  1199  000300                     	ds	80
  1200  000350                     _rmc_buffer:
  1201                           	callstack 0
  1202  000350                     	ds	70
  1203                           
  1204                           	psect	bssBIGRAM
  1205  000396                     __pbssBIGRAM:
  1206                           	callstack 0
  1207  000396                     _fs:
  1208                           	callstack 0
  1209  000396                     	ds	544
  1210                           
  1211                           	psect	cstackBANK2
  1212  0002E7                     __pcstackBANK2:
  1213                           	callstack 0
  1214  0002E7                     disparo_gravacao@velocidade:
  1215                           	callstack 0
  1216                           
  1217                           ; 12 bytes @ 0x0
  1218  0002E7                     	ds	12
  1219  0002F3                     disparo_gravacao@fix_gps:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xC
  1223  0002F3                     	ds	2
  1224  0002F5                     disparo_gravacao@v_max:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xE
  1228  0002F5                     	ds	2
  1229  0002F7                     disparo_gravacao@index_max:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x10
  1233  0002F7                     	ds	2
  1234  0002F9                     disparo_gravacao@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x12
  1238  0002F9                     	ds	1
  1239                           
  1240                           	psect	cstackBANK0
  1241  000060                     __pcstackBANK0:
  1242                           	callstack 0
  1243  000060                     ??_get_cluster:
  1244  000060                     ??_auto_mount:
  1245  000060                     put_cluster@clust:
  1246                           	callstack 0
  1247  000060                     f_sync@fp:
  1248                           	callstack 0
  1249  000060                     latitude_to_convert@latitude:
  1250                           	callstack 0
  1251  000060                     longitude_to_convert@longitude:
  1252                           	callstack 0
  1253                           
  1254                           ; 11 bytes @ 0x0
  1255  000060                     	ds	2
  1256  000062                     put_cluster@val:
  1257                           	callstack 0
  1258  000062                     f_sync@tim:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2
  1262  000062                     	ds	2
  1263  000064                     ??_put_cluster:
  1264                           
  1265                           ; 1 bytes @ 0x4
  1266  000064                     	ds	2
  1267  000066                     f_sync@res:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  000066                     	ds	1
  1272  000067                     f_sync@dir:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x7
  1276  000067                     	ds	2
  1277  000069                     latitude_to_convert@j:
  1278                           	callstack 0
  1279  000069                     get_cluster@wc:
  1280                           	callstack 0
  1281  000069                     f_close@fp:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x9
  1285  000069                     	ds	1
  1286  00006A                     latitude_to_convert@i:
  1287                           	callstack 0
  1288  00006A                     _put_cluster$1623:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0xA
  1292  00006A                     	ds	1
  1293  00006B                     longitude_to_convert@j:
  1294                           	callstack 0
  1295  00006B                     get_cluster@fatsect:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0xB
  1299  00006B                     	ds	1
  1300  00006C                     longitude_to_convert@i:
  1301                           	callstack 0
  1302  00006C                     _put_cluster$1624:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0xC
  1306  00006C                     	ds	2
  1307  00006E                     put_cluster@fatsect:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xE
  1311  00006E                     	ds	1
  1312  00006F                     get_cluster@bc:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xF
  1316  00006F                     	ds	2
  1317  000071                     get_cluster@fs:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x11
  1321  000071                     	ds	1
  1322  000072                     put_cluster@bc:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x12
  1326  000072                     	ds	1
  1327  000073                     ??_next_dir_entry:
  1328                           
  1329                           ; 1 bytes @ 0x13
  1330  000073                     	ds	1
  1331  000074                     put_cluster@p:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x14
  1335  000074                     	ds	2
  1336  000076                     put_cluster@fs:
  1337                           	callstack 0
  1338  000076                     auto_mount@maxclust:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x16
  1342  000076                     	ds	2
  1343  000078                     ?_create_chain:
  1344                           	callstack 0
  1345  000078                     remove_chain@clust:
  1346                           	callstack 0
  1347  000078                     create_chain@clust:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x18
  1351  000078                     	ds	2
  1352  00007A                     next_dir_entry@clust:
  1353                           	callstack 0
  1354  00007A                     auto_mount@bootsect:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x1A
  1358  00007A                     	ds	2
  1359  00007C                     remove_chain@nxt:
  1360                           	callstack 0
  1361  00007C                     create_chain@mcl:
  1362                           	callstack 0
  1363  00007C                     next_dir_entry@idx:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x1C
  1367  00007C                     	ds	2
  1368  00007E                     trace_path@dj:
  1369                           	callstack 0
  1370  00007E                     remove_chain@fs:
  1371                           	callstack 0
  1372  00007E                     create_chain@fs:
  1373                           	callstack 0
  1374  00007E                     auto_mount@totalsect:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x1E
  1378  00007E                     	ds	1
  1379  00007F                     trace_path@fn:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x1F
  1383  00007F                     	ds	1
  1384  000080                     create_chain@cstat:
  1385                           	callstack 0
  1386  000080                     trace_path@path:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x20
  1390  000080                     	ds	2
  1391  000082                     trace_path@dir:
  1392                           	callstack 0
  1393  000082                     create_chain@scl:
  1394                           	callstack 0
  1395  000082                     auto_mount@p:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x22
  1399  000082                     	ds	1
  1400  000083                     ??_trace_path:
  1401                           
  1402                           ; 1 bytes @ 0x23
  1403  000083                     	ds	1
  1404  000084                     auto_mount@fmt:
  1405                           	callstack 0
  1406  000084                     create_chain@ncl:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x24
  1410  000084                     	ds	1
  1411  000085                     auto_mount@stat:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x25
  1415  000085                     	ds	1
  1416  000086                     reserve_direntry@dj:
  1417                           	callstack 0
  1418  000086                     f_write@fp:
  1419                           	callstack 0
  1420  000086                     f_lseek@fp:
  1421                           	callstack 0
  1422  000086                     auto_mount@fatsize:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x26
  1426  000086                     	ds	1
  1427  000087                     reserve_direntry@dir:
  1428                           	callstack 0
  1429  000087                     _trace_path$1780:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x27
  1433  000087                     	ds	1
  1434  000088                     ??_reserve_direntry:
  1435  000088                     f_write@buff:
  1436                           	callstack 0
  1437  000088                     f_lseek@ofs:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x28
  1441  000088                     	ds	1
  1442  000089                     _trace_path$1782:
  1443                           	callstack 0
  1444  000089                     f_write@btw:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x29
  1448  000089                     	ds	1
  1449  00008A                     auto_mount@fs:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x2A
  1453  00008A                     	ds	1
  1454  00008B                     f_write@bw:
  1455                           	callstack 0
  1456  00008B                     trace_path@fs:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x2B
  1460  00008B                     	ds	1
  1461  00008C                     ??_f_lseek:
  1462  00008C                     ??_f_write:
  1463  00008C                     reserve_direntry@sector:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x2C
  1467  00008C                     	ds	1
  1468  00008D                     trace_path@clust:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x2D
  1472  00008D                     	ds	2
  1473  00008F                     trace_path@ds:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x2F
  1477  00008F                     	ds	1
  1478  000090                     reserve_direntry@n:
  1479                           	callstack 0
  1480  000090                     trace_path@dptr:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x30
  1484  000090                     	ds	1
  1485  000091                     reserve_direntry@dptr:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  000091                     	ds	2
  1490  000093                     reserve_direntry@c:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x33
  1494  000093                     	ds	1
  1495  000094                     reserve_direntry@clust:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x34
  1499  000094                     	ds	2
  1500  000096                     reserve_direntry@fs:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x36
  1504  000096                     	ds	2
  1505  000098                     f_write@res:
  1506                           	callstack 0
  1507  000098                     f_open@fp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x38
  1511  000098                     	ds	1
  1512  000099                     f_write@wbuff:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x39
  1516  000099                     	ds	1
  1517  00009A                     f_open@path:
  1518                           	callstack 0
  1519  00009A                     f_write@sect:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x3A
  1523  00009A                     	ds	2
  1524  00009C                     f_open@mode:
  1525                           	callstack 0
  1526  00009C                     f_lseek@res:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x3C
  1530  00009C                     	ds	1
  1531  00009D                     ??_f_open:
  1532  00009D                     f_lseek@ifptr:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x3D
  1536  00009D                     	ds	1
  1537  00009E                     f_write@cc:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x3E
  1541  00009E                     	ds	2
  1542  0000A0                     f_write@clust:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x40
  1546  0000A0                     	ds	1
  1547  0000A1                     f_lseek@csize:
  1548                           	callstack 0
  1549  0000A1                     f_open@fn:
  1550                           	callstack 0
  1551                           
  1552                           ; 12 bytes @ 0x41
  1553  0000A1                     	ds	1
  1554  0000A2                     f_write@wcnt:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x42
  1558  0000A2                     	ds	2
  1559  0000A4                     ?_fputc:
  1560                           	callstack 0
  1561  0000A4                     fputc@chr:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x44
  1565  0000A4                     	ds	1
  1566  0000A5                     f_lseek@clust:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x45
  1570  0000A5                     	ds	1
  1571  0000A6                     fputc@fil:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x46
  1575  0000A6                     	ds	2
  1576  0000A8                     fputc@c:
  1577                           	callstack 0
  1578                           
  1579                           ; 1 bytes @ 0x48
  1580  0000A8                     	ds	1
  1581  0000A9                     fputc@bw:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x49
  1585  0000A9                     	ds	2
  1586  0000AB                     ?_fputs:
  1587                           	callstack 0
  1588  0000AB                     fputs@str:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x4B
  1592  0000AB                     	ds	2
  1593  0000AD                     f_open@rs:
  1594                           	callstack 0
  1595  0000AD                     fputs@fil:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x4D
  1599  0000AD                     	ds	2
  1600  0000AF                     fputs@n:
  1601                           	callstack 0
  1602  0000AF                     f_open@dw:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x4F
  1606  0000AF                     	ds	2
  1607  0000B1                     ?_fprintf:
  1608                           	callstack 0
  1609  0000B1                     fprintf@fil:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x51
  1613  0000B1                     	ds	2
  1614  0000B3                     f_open@res:
  1615                           	callstack 0
  1616  0000B3                     fprintf@str:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x53
  1620  0000B3                     	ds	1
  1621  0000B4                     f_open@dir:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x54
  1625  0000B4                     	ds	2
  1626  0000B6                     f_open@dj:
  1627                           	callstack 0
  1628                           
  1629                           ; 14 bytes @ 0x56
  1630  0000B6                     	ds	5
  1631  0000BB                     ??_fprintf:
  1632                           
  1633                           ; 1 bytes @ 0x5B
  1634  0000BB                     	ds	2
  1635  0000BD                     fprintf@s:
  1636                           	callstack 0
  1637                           
  1638                           ; 16 bytes @ 0x5D
  1639  0000BD                     	ds	16
  1640  0000CD                     fprintf@res:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x6D
  1644  0000CD                     	ds	2
  1645  0000CF                     _fprintf$2226:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x6F
  1649  0000CF                     	ds	2
  1650  0000D1                     fprintf@w:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x71
  1654  0000D1                     	ds	2
  1655  0000D3                     fprintf@f:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x73
  1659  0000D3                     	ds	1
  1660  0000D4                     fprintf@r:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x74
  1664  0000D4                     	ds	1
  1665  0000D5                     fprintf@val:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x75
  1669  0000D5                     	ds	4
  1670  0000D9                     fprintf@arp:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x79
  1674  0000D9                     	ds	1
  1675  0000DA                     fprintf@cc:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x7A
  1679  0000DA                     	ds	2
  1680  0000DC                     fprintf@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x7C
  1684  0000DC                     	ds	2
  1685  0000DE                     fprintf@c:
  1686                           	callstack 0
  1687                           
  1688                           ; 1 bytes @ 0x7E
  1689  0000DE                     	ds	1
  1690  0000DF                     ??_disparo_gravacao:
  1691                           
  1692                           ; 1 bytes @ 0x7F
  1693  0000DF                     	ds	5
  1694  0000E4                     ??_escalonador:
  1695                           
  1696                           ; 1 bytes @ 0x84
  1697  0000E4                     	ds	2
  1698  0000E6                     escalonador@cont:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x86
  1702  0000E6                     	ds	1
  1703                           
  1704                           	psect	cstackCOMRAM
  1705  000001                     __pcstackCOMRAM:
  1706                           	callstack 0
  1707  000001                     tratamento_uart@received_char:
  1708                           	callstack 0
  1709  000001                     i2write_timer_zero@timer0:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x0
  1713  000001                     	ds	2
  1714  000003                     ??_isr:
  1715  000003                     
  1716                           ; 1 bytes @ 0x2
  1717  000003                     	ds	6
  1718  000009                     isr@cont:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x8
  1722  000009                     	ds	1
  1723  00000A                     ??_dummy_clocks:
  1724  00000A                     ??_isdigit:
  1725  00000A                     ?_fix:
  1726                           	callstack 0
  1727  00000A                     ?_latitude:
  1728                           	callstack 0
  1729  00000A                     ?_longitude:
  1730                           	callstack 0
  1731  00000A                     ?_rawhora:
  1732                           	callstack 0
  1733  00000A                     ?_rawdata:
  1734                           	callstack 0
  1735  00000A                     ?_Speed:
  1736                           	callstack 0
  1737  00000A                     ?_strlen:
  1738                           	callstack 0
  1739  00000A                     ?_memcmp:
  1740                           	callstack 0
  1741  00000A                     ?_gps_segundos:
  1742                           	callstack 0
  1743  00000A                     ?_gps_minutos:
  1744                           	callstack 0
  1745  00000A                     ?_gps_hora:
  1746                           	callstack 0
  1747  00000A                     ?_gps_dia:
  1748                           	callstack 0
  1749  00000A                     ?_gps_mes:
  1750                           	callstack 0
  1751  00000A                     ?_gps_ano:
  1752                           	callstack 0
  1753  00000A                     ?___wmul:
  1754                           	callstack 0
  1755  00000A                     ?___lwdiv:
  1756                           	callstack 0
  1757  00000A                     ?___lwmod:
  1758                           	callstack 0
  1759  00000A                     ?___ftpack:
  1760                           	callstack 0
  1761  00000A                     ?___lmul:
  1762                           	callstack 0
  1763  00000A                     ?___lldiv:
  1764                           	callstack 0
  1765  00000A                     ?___aldiv:
  1766                           	callstack 0
  1767  00000A                     ?___llmod:
  1768                           	callstack 0
  1769  00000A                     disk_ioctl@cmd:
  1770                           	callstack 0
  1771  00000A                     delay@contador_ext:
  1772                           	callstack 0
  1773  00000A                     get_gpstime@index:
  1774                           	callstack 0
  1775  00000A                     get_latitude@index_lat:
  1776                           	callstack 0
  1777  00000A                     get_longitude@index_long:
  1778                           	callstack 0
  1779  00000A                     get_rawdate@index_date:
  1780                           	callstack 0
  1781  00000A                     get_rawspeed@index_speed:
  1782                           	callstack 0
  1783  00000A                     get_fix@index_fix:
  1784                           	callstack 0
  1785  00000A                     response@buff:
  1786                           	callstack 0
  1787  00000A                     recebe_dado_gps@flag_recebe:
  1788                           	callstack 0
  1789  00000A                     verifica_plausibilidade_long@posicao:
  1790                           	callstack 0
  1791  00000A                     verifica_plausibilidade_lat@posicao:
  1792                           	callstack 0
  1793  00000A                     write_timer_zero@timer0:
  1794                           	callstack 0
  1795  00000A                     data_nome@p_buff:
  1796                           	callstack 0
  1797  00000A                     hora_nome@p_buff:
  1798                           	callstack 0
  1799  00000A                     f_mount@fs:
  1800                           	callstack 0
  1801  00000A                     ___wmul@multiplier:
  1802                           	callstack 0
  1803  00000A                     ___lwdiv@dividend:
  1804                           	callstack 0
  1805  00000A                     ___lwmod@dividend:
  1806                           	callstack 0
  1807  00000A                     memcmp@s1:
  1808                           	callstack 0
  1809  00000A                     memcpy@d1:
  1810                           	callstack 0
  1811  00000A                     memset@p1:
  1812                           	callstack 0
  1813  00000A                     strcat@to:
  1814                           	callstack 0
  1815  00000A                     strlen@s:
  1816                           	callstack 0
  1817  00000A                     ___ftpack@arg:
  1818                           	callstack 0
  1819  00000A                     wait_ready@timeout:
  1820                           	callstack 0
  1821  00000A                     ___lmul@multiplier:
  1822                           	callstack 0
  1823  00000A                     ___lldiv@dividend:
  1824                           	callstack 0
  1825  00000A                     ___aldiv@dividend:
  1826                           	callstack 0
  1827  00000A                     ___llmod@dividend:
  1828                           	callstack 0
  1829                           
  1830                           ; 4 bytes @ 0x9
  1831  00000A                     	ds	1
  1832  00000B                     sdc_disk_status@pdrv:
  1833                           	callstack 0
  1834  00000B                     delay@contador_int:
  1835                           	callstack 0
  1836  00000B                     get_latitude@index:
  1837                           	callstack 0
  1838  00000B                     get_longitude@index:
  1839                           	callstack 0
  1840  00000B                     get_rawdate@index:
  1841                           	callstack 0
  1842  00000B                     get_rawspeed@index:
  1843                           	callstack 0
  1844  00000B                     get_fix@index:
  1845                           	callstack 0
  1846  00000B                     escreve_SPI@dado:
  1847                           	callstack 0
  1848  00000B                     recebe_dado_gps@timeout:
  1849                           	callstack 0
  1850  00000B                     _isdigit$3275:
  1851                           	callstack 0
  1852  00000B                     disk_ioctl@buff:
  1853                           	callstack 0
  1854                           
  1855                           ; 2 bytes @ 0xA
  1856  00000B                     	ds	1
  1857  00000C                     ??_gps_segundos:
  1858  00000C                     ??_gps_minutos:
  1859  00000C                     ??_gps_hora:
  1860  00000C                     ??_gps_dia:
  1861  00000C                     ??_gps_mes:
  1862  00000C                     ??_gps_ano:
  1863  00000C                     escreve_cmd_lcd@comando:
  1864                           	callstack 0
  1865  00000C                     endereco_cursor_lcd@endereco:
  1866                           	callstack 0
  1867  00000C                     escreve_caractere_lcd@data:
  1868                           	callstack 0
  1869  00000C                     dummy_clocks@n:
  1870                           	callstack 0
  1871  00000C                     data_nome@i:
  1872                           	callstack 0
  1873  00000C                     hora_nome@i:
  1874                           	callstack 0
  1875  00000C                     f_mount@drv:
  1876                           	callstack 0
  1877  00000C                     isdigit@c:
  1878                           	callstack 0
  1879  00000C                     ___wmul@multiplicand:
  1880                           	callstack 0
  1881  00000C                     ___lwdiv@divisor:
  1882                           	callstack 0
  1883  00000C                     ___lwmod@divisor:
  1884                           	callstack 0
  1885  00000C                     memcmp@s2:
  1886                           	callstack 0
  1887  00000C                     memcpy@s1:
  1888                           	callstack 0
  1889  00000C                     memset@c:
  1890                           	callstack 0
  1891  00000C                     strcat@from:
  1892                           	callstack 0
  1893  00000C                     strcpy@to:
  1894                           	callstack 0
  1895  00000C                     strlen@cp:
  1896                           	callstack 0
  1897                           
  1898                           ; 2 bytes @ 0xB
  1899  00000C                     	ds	1
  1900  00000D                     ??_init_lcd:
  1901  00000D                     disk_ioctl@pdrv:
  1902                           	callstack 0
  1903  00000D                     posicao_cursor_lcd@coluna:
  1904                           	callstack 0
  1905  00000D                     ___ftpack@exp:
  1906                           	callstack 0
  1907  00000D                     escreve_frase_ram_lcd@buffer:
  1908                           	callstack 0
  1909  00000D                     gps@flag_fix:
  1910                           	callstack 0
  1911  00000D                     dummy_clocks@i:
  1912                           	callstack 0
  1913                           
  1914                           ; 2 bytes @ 0xC
  1915  00000D                     	ds	1
  1916  00000E                     ?_get_fattime:
  1917                           	callstack 0
  1918  00000E                     disk_status@pdrv:
  1919                           	callstack 0
  1920  00000E                     disk_ioctl@res:
  1921                           	callstack 0
  1922  00000E                     posicao_cursor_lcd@linha:
  1923                           	callstack 0
  1924  00000E                     wait_ready@res:
  1925                           	callstack 0
  1926  00000E                     ___ftpack@sign:
  1927                           	callstack 0
  1928  00000E                     ___lwdiv@counter:
  1929                           	callstack 0
  1930  00000E                     ___lwmod@counter:
  1931                           	callstack 0
  1932  00000E                     ___wmul@product:
  1933                           	callstack 0
  1934  00000E                     memcmp@n:
  1935                           	callstack 0
  1936  00000E                     memcpy@n:
  1937                           	callstack 0
  1938  00000E                     memset@n:
  1939                           	callstack 0
  1940  00000E                     strcat@cp:
  1941                           	callstack 0
  1942  00000E                     strcpy@from:
  1943                           	callstack 0
  1944  00000E                     ___lmul@multiplicand:
  1945                           	callstack 0
  1946  00000E                     ___lldiv@divisor:
  1947                           	callstack 0
  1948  00000E                     ___aldiv@divisor:
  1949                           	callstack 0
  1950  00000E                     ___llmod@divisor:
  1951                           	callstack 0
  1952                           
  1953                           ; 4 bytes @ 0xD
  1954  00000E                     	ds	1
  1955  00000F                     ??___ftpack:
  1956  00000F                     disk_status@stat:
  1957                           	callstack 0
  1958  00000F                     posicao_cursor_lcd@endereco:
  1959                           	callstack 0
  1960  00000F                     ___lwdiv@quotient:
  1961                           	callstack 0
  1962  00000F                     command@arg:
  1963                           	callstack 0
  1964                           
  1965                           ; 4 bytes @ 0xE
  1966  00000F                     	ds	1
  1967  000010                     ??_memcmp:
  1968  000010                     ??_mensagem_inicial:
  1969  000010                     ?_atoi:
  1970                           	callstack 0
  1971  000010                     memcpy@tmp:
  1972                           	callstack 0
  1973  000010                     monta_sd@dado:
  1974                           	callstack 0
  1975  000010                     validate@fs:
  1976                           	callstack 0
  1977  000010                     memset@p:
  1978                           	callstack 0
  1979  000010                     strcpy@cp:
  1980                           	callstack 0
  1981  000010                     atoi@s:
  1982                           	callstack 0
  1983                           
  1984                           ; 3 bytes @ 0xF
  1985  000010                     	ds	1
  1986  000011                     utoa@buf:
  1987                           	callstack 0
  1988  000011                     memcpy@d:
  1989                           	callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x10
  1992  000011                     	ds	1
  1993  000012                     ??_get_fattime:
  1994  000012                     make_dirfile@path:
  1995                           	callstack 0
  1996  000012                     ___aldiv@counter:
  1997                           	callstack 0
  1998  000012                     ___llmod@counter:
  1999                           	callstack 0
  2000  000012                     validate@id:
  2001                           	callstack 0
  2002  000012                     ___lmul@product:
  2003                           	callstack 0
  2004  000012                     ___lldiv@quotient:
  2005                           	callstack 0
  2006  000012                     mensagem_inicial@msg_linha_um:
  2007                           	callstack 0
  2008                           
  2009                           ; 17 bytes @ 0x11
  2010  000012                     	ds	1
  2011  000013                     ??_atoi:
  2012  000013                     command@CRC:
  2013                           	callstack 0
  2014  000013                     monta_sd@index:
  2015                           	callstack 0
  2016  000013                     make_dirfile@dirname:
  2017                           	callstack 0
  2018  000013                     ___aldiv@sign:
  2019                           	callstack 0
  2020  000013                     utoa@val:
  2021                           	callstack 0
  2022  000013                     memcpy@s:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x12
  2026  000013                     	ds	1
  2027  000014                     ??_make_dirfile:
  2028  000014                     ??_validate:
  2029  000014                     command@CMD:
  2030                           	callstack 0
  2031  000014                     monta_sd@i:
  2032                           	callstack 0
  2033  000014                     ___aldiv@quotient:
  2034                           	callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x13
  2037  000014                     	ds	1
  2038  000015                     command@argument:
  2039                           	callstack 0
  2040  000015                     atoi@sign:
  2041                           	callstack 0
  2042  000015                     utoa@base:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0x14
  2046  000015                     	ds	1
  2047  000016                     ?_atol:
  2048                           	callstack 0
  2049  000016                     ?_clust2sect:
  2050                           	callstack 0
  2051  000016                     ___lldiv@counter:
  2052                           	callstack 0
  2053  000016                     sdc_disk_read@p_buff:
  2054                           	callstack 0
  2055  000016                     sdc_disk_write@p_buff:
  2056                           	callstack 0
  2057  000016                     clust2sect@clust:
  2058                           	callstack 0
  2059  000016                     _make_dirfile$1733:
  2060                           	callstack 0
  2061  000016                     atoi@a:
  2062                           	callstack 0
  2063  000016                     atol@s:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x15
  2067  000016                     	ds	1
  2068  000017                     ultoa@buf:
  2069                           	callstack 0
  2070  000017                     utoa@v:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x16
  2074  000017                     	ds	1
  2075  000018                     ?___awtoft:
  2076                           	callstack 0
  2077  000018                     make_dirfile@b:
  2078                           	callstack 0
  2079  000018                     sdc_reset@count_nosd:
  2080                           	callstack 0
  2081  000018                     ___awtoft@c:
  2082                           	callstack 0
  2083  000018                     sdc_disk_read@sector:
  2084                           	callstack 0
  2085  000018                     sdc_disk_write@sector:
  2086                           	callstack 0
  2087  000018                     configura_baudrate_uart@baudrate:
  2088                           	callstack 0
  2089  000018                     ultoa@val:
  2090                           	callstack 0
  2091                           
  2092                           ; 4 bytes @ 0x17
  2093  000018                     	ds	1
  2094  000019                     make_dirfile@t:
  2095                           	callstack 0
  2096  000019                     utoa@c:
  2097                           	callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x18
  2100  000019                     	ds	1
  2101  00001A                     ??_atol:
  2102  00001A                     ??_clust2sect:
  2103  00001A                     make_dirfile@a:
  2104                           	callstack 0
  2105  00001A                     sdc_reset@count:
  2106                           	callstack 0
  2107  00001A                     itoa@buf:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x19
  2111  00001A                     	ds	1
  2112  00001B                     make_dirfile@n:
  2113                           	callstack 0
  2114  00001B                     ___awtoft@sign:
  2115                           	callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x1A
  2118  00001B                     	ds	1
  2119  00001C                     ??_configura_baudrate_uart:
  2120  00001C                     ?___ftmul:
  2121                           	callstack 0
  2122  00001C                     sdc_reset@buff:
  2123                           	callstack 0
  2124  00001C                     sdc_disk_read@count:
  2125                           	callstack 0
  2126  00001C                     sdc_disk_write@count:
  2127                           	callstack 0
  2128  00001C                     make_dirfile@c:
  2129                           	callstack 0
  2130  00001C                     itoa@val:
  2131                           	callstack 0
  2132  00001C                     ultoa@base:
  2133                           	callstack 0
  2134  00001C                     ___ftmul@f1:
  2135                           	callstack 0
  2136                           
  2137                           ; 3 bytes @ 0x1B
  2138  00001C                     	ds	1
  2139  00001D                     ??_sdc_disk_initialize:
  2140  00001D                     ??_sdc_disk_read:
  2141  00001D                     ??_sdc_disk_write:
  2142                           
  2143                           ; 1 bytes @ 0x1C
  2144  00001D                     	ds	1
  2145  00001E                     atol@sign:
  2146                           	callstack 0
  2147  00001E                     itoa@base:
  2148                           	callstack 0
  2149  00001E                     ultoa@v:
  2150                           	callstack 0
  2151                           
  2152                           ; 4 bytes @ 0x1D
  2153  00001E                     	ds	1
  2154  00001F                     clust2sect@fs:
  2155                           	callstack 0
  2156  00001F                     ___ftmul@f2:
  2157                           	callstack 0
  2158  00001F                     atol@a:
  2159                           	callstack 0
  2160                           
  2161                           ; 4 bytes @ 0x1E
  2162  00001F                     	ds	1
  2163  000020                     sdc_disk_initialize@stat:
  2164                           	callstack 0
  2165                           
  2166                           ; 1 bytes @ 0x1F
  2167  000020                     	ds	1
  2168  000021                     sdc_disk_initialize@count1:
  2169                           	callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x20
  2172  000021                     	ds	1
  2173  000022                     ??___ftmul:
  2174  000022                     ultoa@c:
  2175                           	callstack 0
  2176  000022                     sdc_disk_read@start_add:
  2177                           	callstack 0
  2178                           
  2179                           ; 4 bytes @ 0x21
  2180  000022                     	ds	1
  2181  000023                     atol@c:
  2182                           	callstack 0
  2183  000023                     ltoa@buf:
  2184                           	callstack 0
  2185  000023                     sdc_disk_initialize@crc_number:
  2186                           	callstack 0
  2187  000023                     sdc_disk_write@count1:
  2188                           	callstack 0
  2189  000023                     mensagem_inicial@msg_dois:
  2190                           	callstack 0
  2191                           
  2192                           ; 17 bytes @ 0x22
  2193  000023                     	ds	1
  2194  000024                     ?_convert_to_int_point_lat:
  2195                           	callstack 0
  2196  000024                     ?_convert_to_int:
  2197                           	callstack 0
  2198  000024                     ?_convert_to_int_point_long:
  2199                           	callstack 0
  2200  000024                     configura_baudrate_uart@x:
  2201                           	callstack 0
  2202  000024                     convert_to_int@p_buff:
  2203                           	callstack 0
  2204  000024                     ltoa@val:
  2205                           	callstack 0
  2206                           
  2207                           ; 4 bytes @ 0x23
  2208  000024                     	ds	1
  2209  000025                     sdc_disk_initialize@buff_i:
  2210                           	callstack 0
  2211  000025                     sdc_disk_write@res:
  2212                           	callstack 0
  2213  000025                     ___ftmul@exp:
  2214                           	callstack 0
  2215                           
  2216                           ; 1 bytes @ 0x24
  2217  000025                     	ds	1
  2218  000026                     sdc_disk_initialize@ocr:
  2219                           	callstack 0
  2220  000026                     sdc_disk_read@length:
  2221                           	callstack 0
  2222  000026                     sdc_disk_write@j:
  2223                           	callstack 0
  2224  000026                     ___ftmul@f3_as_product:
  2225                           	callstack 0
  2226                           
  2227                           ; 3 bytes @ 0x25
  2228  000026                     	ds	1
  2229  000027                     sdc_disk_initialize@count2:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x26
  2233  000027                     	ds	1
  2234  000028                     sdc_disk_read@buff:
  2235                           	callstack 0
  2236  000028                     sdc_disk_write@buff:
  2237                           	callstack 0
  2238  000028                     ltoa@base:
  2239                           	callstack 0
  2240  000028                     convert_to_int_point_lat@convert_str_lat:
  2241                           	callstack 0
  2242  000028                     convert_to_int_point_long@convert_str_long:
  2243                           	callstack 0
  2244                           
  2245                           ; 10 bytes @ 0x27
  2246  000028                     	ds	1
  2247  000029                     sdc_disk_initialize@buff:
  2248                           	callstack 0
  2249  000029                     ___ftmul@cntr:
  2250                           	callstack 0
  2251  000029                     disk_read@buff:
  2252                           	callstack 0
  2253  000029                     disk_write@buff:
  2254                           	callstack 0
  2255                           
  2256                           ; 2 bytes @ 0x28
  2257  000029                     	ds	1
  2258  00002A                     disk_initialize@pdrv:
  2259                           	callstack 0
  2260  00002A                     ___ftmul@sign:
  2261                           	callstack 0
  2262                           
  2263                           ; 1 bytes @ 0x29
  2264  00002A                     	ds	1
  2265  00002B                     ?___fttol:
  2266                           	callstack 0
  2267  00002B                     disk_initialize@stat:
  2268                           	callstack 0
  2269  00002B                     ___fttol@f1:
  2270                           	callstack 0
  2271  00002B                     disk_read@sector:
  2272                           	callstack 0
  2273  00002B                     disk_write@sector:
  2274                           	callstack 0
  2275  00002B                     escreve_inteiro_lcd@valor:
  2276                           	callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x2A
  2279  00002B                     	ds	4
  2280  00002F                     ??___fttol:
  2281  00002F                     disk_read@count:
  2282                           	callstack 0
  2283  00002F                     disk_write@count:
  2284                           	callstack 0
  2285  00002F                     escreve_inteiro_lcd@texto:
  2286                           	callstack 0
  2287                           
  2288                           ; 7 bytes @ 0x2E
  2289  00002F                     	ds	1
  2290  000030                     ??_disk_read:
  2291  000030                     ??_disk_write:
  2292                           
  2293                           ; 1 bytes @ 0x2F
  2294  000030                     	ds	1
  2295  000031                     disk_read@pdrv:
  2296                           	callstack 0
  2297  000031                     disk_write@pdrv:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x30
  2301  000031                     	ds	1
  2302  000032                     convert_to_int_point_long@j:
  2303                           	callstack 0
  2304  000032                     disk_read@result:
  2305                           	callstack 0
  2306  000032                     disk_write@result:
  2307                           	callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x31
  2310  000032                     	ds	1
  2311  000033                     convert_to_int_point_lat@j:
  2312                           	callstack 0
  2313  000033                     convert_to_int_point_long@i:
  2314                           	callstack 0
  2315                           
  2316                           ; 1 bytes @ 0x32
  2317  000033                     	ds	1
  2318  000034                     disk_read@res:
  2319                           	callstack 0
  2320  000034                     disk_write@res:
  2321                           	callstack 0
  2322  000034                     convert_to_int_point_lat@i:
  2323                           	callstack 0
  2324  000034                     ___fttol@sign1:
  2325                           	callstack 0
  2326                           
  2327                           ; 1 bytes @ 0x33
  2328  000034                     	ds	1
  2329  000035                     diferenca@index:
  2330                           	callstack 0
  2331  000035                     move_window@sector:
  2332                           	callstack 0
  2333  000035                     check_fs@sect:
  2334                           	callstack 0
  2335  000035                     ___fttol@lval:
  2336                           	callstack 0
  2337                           
  2338                           ; 4 bytes @ 0x34
  2339  000035                     	ds	1
  2340  000036                     ??_troca_de_tela:
  2341  000036                     diferenca@valor_lat:
  2342                           	callstack 0
  2343                           
  2344                           ; 4 bytes @ 0x35
  2345  000036                     	ds	1
  2346  000037                     troca_de_tela@fix_signal:
  2347                           	callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x36
  2350  000037                     	ds	1
  2351  000038                     get_fattime@f_time:
  2352                           	callstack 0
  2353                           
  2354                           ; 10 bytes @ 0x37
  2355  000038                     	ds	1
  2356  000039                     ??_move_window:
  2357  000039                     ___fttol@exp1:
  2358                           	callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x38
  2361  000039                     	ds	1
  2362  00003A                     diferenca@valor_long:
  2363                           	callstack 0
  2364                           
  2365                           ; 4 bytes @ 0x39
  2366  00003A                     	ds	1
  2367  00003B                     check_fs@fs:
  2368                           	callstack 0
  2369                           
  2370                           ; 2 bytes @ 0x3A
  2371  00003B                     	ds	2
  2372  00003D                     auto_mount@path:
  2373                           	callstack 0
  2374                           
  2375                           ; 1 bytes @ 0x3C
  2376  00003D                     	ds	1
  2377  00003E                     auto_mount@chk_wp:
  2378                           	callstack 0
  2379  00003E                     armazena_ltlo@buffer:
  2380                           	callstack 0
  2381                           
  2382                           ; 1 bytes @ 0x3D
  2383  00003E                     	ds	1
  2384  00003F                     armazena_ltlo@index:
  2385                           	callstack 0
  2386                           
  2387                           ; 1 bytes @ 0x3E
  2388  00003F                     	ds	1
  2389  000040                     armazena_ltlo@j:
  2390                           	callstack 0
  2391                           
  2392                           ; 1 bytes @ 0x3F
  2393  000040                     	ds	1
  2394  000041                     armazena_ltlo@i:
  2395                           	callstack 0
  2396                           
  2397                           ; 1 bytes @ 0x40
  2398  000041                     	ds	1
  2399  000042                     
  2400                           ; 1 bytes @ 0x41
  2401  000042                     	ds	1
  2402  000043                     ??_verifica_fence:
  2403  000043                     move_window@n:
  2404                           	callstack 0
  2405                           
  2406                           ; 1 bytes @ 0x42
  2407  000043                     	ds	1
  2408  000044                     ??_verifica_dados_operacionais:
  2409  000044                     move_window@wsect:
  2410                           	callstack 0
  2411                           
  2412                           ; 4 bytes @ 0x43
  2413  000044                     	ds	4
  2414  000048                     move_window@fs:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x47
  2418  000048                     	ds	2
  2419  00004A                     ?_get_cluster:
  2420                           	callstack 0
  2421  00004A                     sync@fs:
  2422                           	callstack 0
  2423  00004A                     get_cluster@clust:
  2424                           	callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x49
  2427  00004A                     	ds	2
  2428  00004C                     ??_fputs:
  2429  00004C                     next_dir_entry@dj:
  2430                           	callstack 0
  2431  00004C                     f_close@res:
  2432                           	callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x4B
  2435  00004C                     	ds	1
  2436  00004D                     
  2437                           ; 1 bytes @ 0x4C
  2438 ;;
  2439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2440 ;;
  2441 ;; *************** function _main *****************
  2442 ;; Defined at:
  2443 ;;		line 222 in file "main.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels required when called:   18
  2463 ;; This function calls:
  2464 ;;		_escalonador
  2465 ;;		_gps
  2466 ;;		_inicializa_tarefas
  2467 ;;		_inicializa_uart
  2468 ;;		_init_hardware
  2469 ;;		_init_lcd
  2470 ;;		_mensagem_inicial
  2471 ;; This function is called by:
  2472 ;;		Startup code after reset
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text0
  2477  00577C                     __ptext0:
  2478                           	callstack 0
  2479  00577C                     _main:
  2480                           	callstack 13
  2481                           
  2482                           ;main.c: 224: init_hardware();
  2483                           
  2484                           ;incstack = 0
  2485  00577C  ECA7  F02D         	call	_init_hardware	;wreg free
  2486                           
  2487                           ;main.c: 225: T0CONbits.TMR0ON = 0;
  2488  005780  9ED5               	bcf	213,7,c	;volatile
  2489                           
  2490                           ;main.c: 226: init_lcd();
  2491  005782  EC01  F023         	call	_init_lcd	;wreg free
  2492                           
  2493                           ;main.c: 227: mensagem_inicial();
  2494  005786  EC50  F023         	call	_mensagem_inicial	;wreg free
  2495                           
  2496                           ;main.c: 228: inicializa_tarefas();
  2497  00578A  EC0C  F029         	call	_inicializa_tarefas	;wreg free
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 229: inicializa_uart();
  2501  00578E  ECCB  F02C         	call	_inicializa_uart	;wreg free
  2502                           
  2503                           ;main.c: 232: T0CONbits.TMR0ON = 1;
  2504  005792  8ED5               	bsf	213,7,c	;volatile
  2505  005794                     l13830:
  2506                           
  2507                           ;main.c: 234: {;main.c: 236: if ((sinaliza_int_timer == 1) && (3))
  2508  005794  0100               	movlb	0	; () banked
  2509  005796  05F2               	decf	_sinaliza_int_timer& (0+255),w,b
  2510  005798  A4D8               	btfss	status,2,c
  2511  00579A  D004               	goto	l13836
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 237: {;main.c: 238: sinaliza_int_timer = 0;
  2515  00579C  0E00               	movlw	0
  2516  00579E  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;main.c: 239: escalonador();
  2520  0057A0  EC0A  F022         	call	_escalonador	;wreg free
  2521  0057A4                     l13836:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 240: };main.c: 241: gps();
  2525  0057A4  EC28  F02B         	call	_gps	;wreg free
  2526  0057A8  D7F5               	goto	l13830
  2527  0057AA                     __end_of_main:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _mensagem_inicial *****************
  2531 ;; Defined at:
  2532 ;;		line 250 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2537 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0
  2548 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2550 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:       36 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    5
  2554 ;; This function calls:
  2555 ;;		_escreve_cmd_lcd
  2556 ;;		_escreve_frase_ram_lcd
  2557 ;;		_posicao_cursor_lcd
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text1
  2564  0046A0                     __ptext1:
  2565                           	callstack 0
  2566  0046A0                     _mensagem_inicial:
  2567                           	callstack 25
  2568                           
  2569                           ;main.c: 252: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2570                           
  2571                           ;incstack = 0
  2572  0046A0  0E18               	movlw	low mensagem_inicial@F3677
  2573  0046A2  6EF6               	movwf	tblptrl,c
  2574  0046A4                     	if	1	;There is more than 1 active tblptr byte
  2575  0046A4  0E61               	movlw	high mensagem_inicial@F3677
  2576  0046A6  6EF7               	movwf	tblptrh,c
  2577  0046A8                     	endif
  2578  0046A8                     	if	1	;There are 3 active tblptr bytes
  2579  0046A8  0E00               	movlw	low (mensagem_inicial@F3677 shr (0+16))
  2580  0046AA  6EF8               	movwf	tblptru,c
  2581  0046AC                     	endif
  2582  0046AC  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2583  0046B0  0E10               	movlw	16
  2584  0046B2                     u16500:
  2585  0046B2  0009               	tblrd		*+
  2586  0046B4  CFF5 FFDE          	movff	tablat,postinc2
  2587  0046B8  06E8               	decf	wreg,f,c
  2588  0046BA  E2FB               	bc	u16500
  2589                           
  2590                           ;main.c: 253: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2591  0046BC  0E07               	movlw	low mensagem_inicial@F3679
  2592  0046BE  6EF6               	movwf	tblptrl,c
  2593  0046C0                     	if	1	;There is more than 1 active tblptr byte
  2594  0046C0  0E61               	movlw	high mensagem_inicial@F3679
  2595  0046C2  6EF7               	movwf	tblptrh,c
  2596  0046C4                     	endif
  2597  0046C4                     	if	1	;There are 3 active tblptr bytes
  2598  0046C4  0E00               	movlw	low (mensagem_inicial@F3679 shr (0+16))
  2599  0046C6  6EF8               	movwf	tblptru,c
  2600  0046C8                     	endif
  2601  0046C8  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2602  0046CC  0E10               	movlw	16
  2603  0046CE                     u16510:
  2604  0046CE  0009               	tblrd		*+
  2605  0046D0  CFF5 FFDE          	movff	tablat,postinc2
  2606  0046D4  06E8               	decf	wreg,f,c
  2607  0046D6  E2FB               	bc	u16510
  2608                           
  2609                           ;main.c: 255: posicao_cursor_lcd(1,0);
  2610  0046D8  0E00               	movlw	0
  2611  0046DA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2612  0046DC  0E01               	movlw	1
  2613  0046DE  EC58  F027         	call	_posicao_cursor_lcd
  2614                           
  2615                           ;main.c: 256: escreve_frase_ram_lcd(msg_linha_um);
  2616  0046E2  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2617  0046E4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2618  0046E6  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2619  0046E8  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2620                           
  2621                           ;main.c: 258: posicao_cursor_lcd(2,0);
  2622  0046EC  0E00               	movlw	0
  2623  0046EE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2624  0046F0  0E02               	movlw	2
  2625  0046F2  EC58  F027         	call	_posicao_cursor_lcd
  2626                           
  2627                           ;main.c: 259: escreve_frase_ram_lcd(msg_dois);
  2628  0046F6  0E23               	movlw	low mensagem_inicial@msg_dois
  2629  0046F8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2630  0046FA  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2631  0046FC  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2632                           
  2633                           ;main.c: 260: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2634  004700  0E3D               	movlw	61
  2635  004702  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2636  004704  0EE1               	movlw	225
  2637  004706  6E10               	movwf	??_mensagem_inicial^0,c
  2638  004708  0E40               	movlw	64
  2639  00470A                     u16677:
  2640  00470A  2EE8               	decfsz	wreg,f,c
  2641  00470C  D7FE               	bra	u16677
  2642  00470E  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2643  004710  D7FC               	bra	u16677
  2644  004712  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2645  004714  D7FA               	bra	u16677
  2646                           
  2647                           ;main.c: 261: escreve_cmd_lcd(0b00000001);
  2648  004716  0E01               	movlw	1
  2649  004718  EC2B  F024         	call	_escreve_cmd_lcd
  2650                           
  2651                           ;main.c: 262: posicao_cursor_lcd(1,0);
  2652  00471C  0E00               	movlw	0
  2653  00471E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2654  004720  0E01               	movlw	1
  2655  004722  EC58  F027         	call	_posicao_cursor_lcd
  2656                           
  2657                           ;main.c: 263: escreve_frase_ram_lcd("AGUARDE...");
  2658  004726  0EDB               	movlw	low STR_19
  2659  004728  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2660  00472A  0E61               	movlw	high STR_19
  2661  00472C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2662  00472E  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2663  004732  0012               	return		;funcret
  2664  004734                     __end_of_mensagem_inicial:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _init_lcd *****************
  2668 ;; Defined at:
  2669 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    4
  2690 ;; This function calls:
  2691 ;;		_delay
  2692 ;;		_escreve_cmd_lcd
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text2
  2699  004602                     __ptext2:
  2700                           	callstack 0
  2701  004602                     _init_lcd:
  2702                           	callstack 26
  2703                           
  2704                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2705                           
  2706                           ;incstack = 0
  2707  004602  9495               	bcf	149,2,c	;volatile
  2708                           
  2709                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2710  004604  9295               	bcf	149,1,c	;volatile
  2711                           
  2712                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2713  004606  9095               	bcf	149,0,c	;volatile
  2714                           
  2715                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2716  004608  9895               	bcf	149,4,c	;volatile
  2717                           
  2718                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2719  00460A  9A95               	bcf	149,5,c	;volatile
  2720                           
  2721                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2722  00460C  9C95               	bcf	149,6,c	;volatile
  2723                           
  2724                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2725  00460E  9E95               	bcf	149,7,c	;volatile
  2726                           
  2727                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2728  004610  9483               	bcf	131,2,c	;volatile
  2729                           
  2730                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2731  004612  9283               	bcf	131,1,c	;volatile
  2732                           
  2733                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2734  004614  9083               	bcf	131,0,c	;volatile
  2735                           
  2736                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2737  004616  9E83               	bcf	131,7,c	;volatile
  2738                           
  2739                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2740  004618  9C83               	bcf	131,6,c	;volatile
  2741                           
  2742                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2743  00461A  8A83               	bsf	131,5,c	;volatile
  2744                           
  2745                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2746  00461C  8883               	bsf	131,4,c	;volatile
  2747                           
  2748                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2749  00461E  0EEA               	movlw	234
  2750  004620  6E0D               	movwf	??_init_lcd^0,c
  2751  004622  0EC3               	movlw	195
  2752  004624                     u16687:
  2753  004624  2EE8               	decfsz	wreg,f,c
  2754  004626  D7FE               	bra	u16687
  2755  004628  2E0D               	decfsz	??_init_lcd^0,f,c
  2756  00462A  D7FC               	bra	u16687
  2757  00462C  F000               	nop	
  2758                           
  2759                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2760  00462E  8083               	bsf	131,0,c	;volatile
  2761                           
  2762                           ;display_lcd.c: 108: delay();
  2763  004630  EC61  F02D         	call	_delay	;wreg free
  2764                           
  2765                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2766  004634  9083               	bcf	131,0,c	;volatile
  2767                           
  2768                           ;display_lcd.c: 110: delay();
  2769  004636  EC61  F02D         	call	_delay	;wreg free
  2770                           
  2771                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2772  00463A  0E4E               	movlw	78
  2773  00463C  6E0D               	movwf	??_init_lcd^0,c
  2774  00463E  0EEB               	movlw	235
  2775  004640                     u16697:
  2776  004640  2EE8               	decfsz	wreg,f,c
  2777  004642  D7FE               	bra	u16697
  2778  004644  2E0D               	decfsz	??_init_lcd^0,f,c
  2779  004646  D7FC               	bra	u16697
  2780  004648  F000               	nop	
  2781                           
  2782                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2783  00464A  8083               	bsf	131,0,c	;volatile
  2784                           
  2785                           ;display_lcd.c: 119: delay();
  2786  00464C  EC61  F02D         	call	_delay	;wreg free
  2787                           
  2788                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2789  004650  9083               	bcf	131,0,c	;volatile
  2790                           
  2791                           ;display_lcd.c: 121: delay();
  2792  004652  EC61  F02D         	call	_delay	;wreg free
  2793                           
  2794                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2795  004656  0E4E               	movlw	78
  2796  004658  6E0D               	movwf	??_init_lcd^0,c
  2797  00465A  0EEB               	movlw	235
  2798  00465C                     u16707:
  2799  00465C  2EE8               	decfsz	wreg,f,c
  2800  00465E  D7FE               	bra	u16707
  2801  004660  2E0D               	decfsz	??_init_lcd^0,f,c
  2802  004662  D7FC               	bra	u16707
  2803  004664  F000               	nop	
  2804                           
  2805                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2806  004666  8083               	bsf	131,0,c	;volatile
  2807                           
  2808                           ;display_lcd.c: 130: delay();
  2809  004668  EC61  F02D         	call	_delay	;wreg free
  2810                           
  2811                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2812  00466C  9083               	bcf	131,0,c	;volatile
  2813                           
  2814                           ;display_lcd.c: 132: delay();
  2815  00466E  EC61  F02D         	call	_delay	;wreg free
  2816                           
  2817                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2818  004672  9E83               	bcf	131,7,c	;volatile
  2819                           
  2820                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2821  004674  9C83               	bcf	131,6,c	;volatile
  2822                           
  2823                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2824  004676  8A83               	bsf	131,5,c	;volatile
  2825                           
  2826                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2827  004678  9883               	bcf	131,4,c	;volatile
  2828                           
  2829                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2830  00467A  8083               	bsf	131,0,c	;volatile
  2831                           
  2832                           ;display_lcd.c: 143: delay();
  2833  00467C  EC61  F02D         	call	_delay	;wreg free
  2834                           
  2835                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2836  004680  9083               	bcf	131,0,c	;volatile
  2837                           
  2838                           ;display_lcd.c: 145: delay();
  2839  004682  EC61  F02D         	call	_delay	;wreg free
  2840                           
  2841                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2842  004686  0E28               	movlw	40
  2843  004688  EC2B  F024         	call	_escreve_cmd_lcd
  2844                           
  2845                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2846  00468C  0E06               	movlw	6
  2847  00468E  EC2B  F024         	call	_escreve_cmd_lcd
  2848                           
  2849                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2850  004692  0E0E               	movlw	14
  2851  004694  EC2B  F024         	call	_escreve_cmd_lcd
  2852                           
  2853                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2854  004698  0E01               	movlw	1
  2855  00469A  EC2B  F024         	call	_escreve_cmd_lcd
  2856  00469E  0012               	return		;funcret
  2857  0046A0                     __end_of_init_lcd:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _init_hardware *****************
  2861 ;; Defined at:
  2862 ;;		line 52 in file "bibliotecas/hardware.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    4
  2883 ;; This function calls:
  2884 ;;		_config_timer_dois
  2885 ;;		_config_timer_zero
  2886 ;;		_init_interrupt
  2887 ;;		_init_oscilador
  2888 ;;		_init_ports
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text3
  2895  005B4E                     __ptext3:
  2896                           	callstack 0
  2897  005B4E                     _init_hardware:
  2898                           	callstack 26
  2899                           
  2900                           ;hardware.c: 55: init_oscilador();
  2901                           
  2902                           ;incstack = 0
  2903  005B4E  EC2D  F02E         	call	_init_oscilador	;wreg free
  2904                           
  2905                           ;hardware.c: 58: init_ports();
  2906  005B52  EC7F  F02D         	call	_init_ports	;wreg free
  2907                           
  2908                           ;hardware.c: 61: config_timer_zero();
  2909  005B56  EC8D  F02D         	call	_config_timer_zero	;wreg free
  2910                           
  2911                           ;hardware.c: 64: config_timer_dois();
  2912  005B5A  ECEC  F02D         	call	_config_timer_dois	;wreg free
  2913                           
  2914                           ;hardware.c: 67: init_interrupt();
  2915  005B5E  ECB2  F02D         	call	_init_interrupt	;wreg free
  2916  005B62  0012               	return		;funcret
  2917  005B64                     __end_of_init_hardware:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _init_ports *****************
  2921 ;; Defined at:
  2922 ;;		line 151 in file "bibliotecas/hardware.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_init_hardware
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text4
  2951  005AFE                     __ptext4:
  2952                           	callstack 0
  2953  005AFE                     _init_ports:
  2954                           	callstack 27
  2955                           
  2956                           ;hardware.c: 153: ADCON1 = 0X0F;
  2957                           
  2958                           ;incstack = 0
  2959  005AFE  0E0F               	movlw	15
  2960  005B00  6EC1               	movwf	193,c	;volatile
  2961                           
  2962                           ;hardware.c: 154: TRISB = 0b00000001;
  2963  005B02  0E01               	movlw	1
  2964  005B04  6E93               	movwf	147,c	;volatile
  2965                           
  2966                           ;hardware.c: 155: LATB = 0xFF;
  2967  005B06  688A               	setf	138,c	;volatile
  2968                           
  2969                           ;hardware.c: 156: TRISD = 0x00;
  2970  005B08  0E00               	movlw	0
  2971  005B0A  6E95               	movwf	149,c	;volatile
  2972                           
  2973                           ;hardware.c: 157: TRISA = 0b00000111;
  2974  005B0C  0E07               	movlw	7
  2975  005B0E  6E92               	movwf	146,c	;volatile
  2976                           
  2977                           ;hardware.c: 158: TRISC = 0x01111111;
  2978  005B10  0E11               	movlw	17
  2979  005B12  6E94               	movwf	148,c	;volatile
  2980                           
  2981                           ;hardware.c: 159: TRISE = 0b00000111;
  2982  005B14  0E07               	movlw	7
  2983  005B16  6E96               	movwf	150,c	;volatile
  2984  005B18  0012               	return		;funcret
  2985  005B1A                     __end_of_init_ports:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _init_oscilador *****************
  2989 ;; Defined at:
  2990 ;;		line 169 in file "bibliotecas/hardware.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_init_hardware
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text5
  3019  005C5A                     __ptext5:
  3020                           	callstack 0
  3021  005C5A                     _init_oscilador:
  3022                           	callstack 27
  3023                           
  3024                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3025                           
  3026                           ;incstack = 0
  3027  005C5A  88D3               	bsf	211,4,c	;volatile
  3028                           
  3029                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3030  005C5C  8AD3               	bsf	211,5,c	;volatile
  3031                           
  3032                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3033  005C5E  8CD3               	bsf	211,6,c	;volatile
  3034  005C60  0012               	return		;funcret
  3035  005C62                     __end_of_init_oscilador:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _init_interrupt *****************
  3039 ;; Defined at:
  3040 ;;		line 94 in file "bibliotecas/hardware.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_init_hardware
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text6
  3069  005B64                     __ptext6:
  3070                           	callstack 0
  3071  005B64                     _init_interrupt:
  3072                           	callstack 27
  3073                           
  3074                           ;hardware.c: 96: INTCON = 0b10110000;
  3075                           
  3076                           ;incstack = 0
  3077  005B64  0EB0               	movlw	176
  3078  005B66  6EF2               	movwf	242,c	;volatile
  3079                           
  3080                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3081  005B68  0E00               	movlw	0
  3082  005B6A  6EF1               	movwf	241,c	;volatile
  3083                           
  3084                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3085  005B6C  0E00               	movlw	0
  3086  005B6E  6EF0               	movwf	240,c	;volatile
  3087                           
  3088                           ;hardware.c: 100: PIE1 = 0b00101000;
  3089  005B70  0E28               	movlw	40
  3090  005B72  6E9D               	movwf	157,c	;volatile
  3091  005B74  0012               	return		;funcret
  3092  005B76                     __end_of_init_interrupt:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _config_timer_zero *****************
  3096 ;; Defined at:
  3097 ;;		line 79 in file "bibliotecas/hardware.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    3
  3118 ;; This function calls:
  3119 ;;		_write_timer_zero
  3120 ;; This function is called by:
  3121 ;;		_init_hardware
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text7
  3126  005B1A                     __ptext7:
  3127                           	callstack 0
  3128  005B1A                     _config_timer_zero:
  3129                           	callstack 26
  3130                           
  3131                           ;hardware.c: 81: T0CON = 0b11000101;
  3132                           
  3133                           ;incstack = 0
  3134  005B1A  0EC5               	movlw	197
  3135  005B1C  6ED5               	movwf	213,c	;volatile
  3136                           
  3137                           ;hardware.c: 82: SPPCON = 0b00000000;
  3138  005B1E  0E00               	movlw	0
  3139  005B20  6E65               	movwf	101,c	;volatile
  3140                           
  3141                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3142  005B22  0E00               	movlw	0
  3143  005B24  6E63               	movwf	99,c	;volatile
  3144                           
  3145                           ;hardware.c: 84: write_timer_zero(0x45);
  3146  005B26  0E00               	movlw	0
  3147  005B28  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3148  005B2A  0E45               	movlw	69
  3149  005B2C  6E0A               	movwf	write_timer_zero@timer0^0,c
  3150  005B2E  EC05  F02E         	call	_write_timer_zero	;wreg free
  3151  005B32  0012               	return		;funcret
  3152  005B34                     __end_of_config_timer_zero:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _write_timer_zero *****************
  3156 ;; Defined at:
  3157 ;;		line 134 in file "bibliotecas/hardware.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  timer0          2    9[COMRAM] unsigned int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_config_timer_zero
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text8
  3186  005C0A                     __ptext8:
  3187                           	callstack 0
  3188  005C0A                     _write_timer_zero:
  3189                           	callstack 26
  3190                           
  3191                           ;hardware.c: 142: TMR0 = timer0;
  3192                           
  3193                           ;incstack = 0
  3194  005C0A  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3195  005C0E  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3196  005C12  0012               	return		;funcret
  3197  005C14                     __end_of_write_timer_zero:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _config_timer_dois *****************
  3201 ;; Defined at:
  3202 ;;		line 198 in file "bibliotecas/hardware.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    2
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_init_hardware
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text9
  3231  005BD8                     __ptext9:
  3232                           	callstack 0
  3233  005BD8                     _config_timer_dois:
  3234                           	callstack 27
  3235                           
  3236                           ;hardware.c: 200: T2CON = 0b00000100;
  3237                           
  3238                           ;incstack = 0
  3239  005BD8  0E04               	movlw	4
  3240  005BDA  6ECA               	movwf	202,c	;volatile
  3241                           
  3242                           ;hardware.c: 201: TMR2 = 0;
  3243  005BDC  0E00               	movlw	0
  3244  005BDE  6ECC               	movwf	204,c	;volatile
  3245                           
  3246                           ;hardware.c: 202: PR2 = 0x01;
  3247  005BE0  0E01               	movlw	1
  3248  005BE2  6ECB               	movwf	203,c	;volatile
  3249  005BE4  0012               	return		;funcret
  3250  005BE6                     __end_of_config_timer_dois:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _inicializa_tarefas *****************
  3254 ;; Defined at:
  3255 ;;		line 172 in file "main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 3F/1
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text10
  3284  005218                     __ptext10:
  3285                           	callstack 0
  3286  005218                     _inicializa_tarefas:
  3287                           	callstack 28
  3288                           
  3289                           ;main.c: 175: p_tarefas[0] = verifica_dados_operacionais;
  3290                           
  3291                           ;incstack = 0
  3292  005218  0E0C               	movlw	low _verifica_dados_operacionais
  3293  00521A  0101               	movlb	1	; () banked
  3294  00521C  6F39               	movwf	_p_tarefas& (0+255),b
  3295  00521E  0E2F               	movlw	high _verifica_dados_operacionais
  3296  005220  6F3A               	movwf	(_p_tarefas+1)& (0+255),b
  3297                           
  3298                           ;main.c: 176: p_tarefas[1] = disparo_gravacao;
  3299  005222  0E10               	movlw	low _disparo_gravacao
  3300  005224  6F3B               	movwf	(_p_tarefas+2)& (0+255),b
  3301  005226  0E28               	movlw	high _disparo_gravacao
  3302  005228  6F3C               	movwf	(_p_tarefas+3)& (0+255),b
  3303                           
  3304                           ;main.c: 177: p_tarefas[2] = troca_de_tela;
  3305  00522A  0EFC               	movlw	low _troca_de_tela
  3306  00522C  6F3D               	movwf	(_p_tarefas+4)& (0+255),b
  3307  00522E  0E1B               	movlw	high _troca_de_tela
  3308  005230  6F3E               	movwf	(_p_tarefas+5)& (0+255),b
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 181: tempo_backup[0] = 500;
  3312  005232  0E01               	movlw	1
  3313  005234  6F34               	movwf	(_tempo_backup+1)& (0+255),b
  3314  005236  0EF4               	movlw	244
  3315  005238  6F33               	movwf	_tempo_backup& (0+255),b
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 182: tempo_backup[1] = 1000;
  3319  00523A  0E03               	movlw	3
  3320  00523C  6F36               	movwf	(_tempo_backup+3)& (0+255),b
  3321  00523E  0EE8               	movlw	232
  3322  005240  6F35               	movwf	(_tempo_backup+2)& (0+255),b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;main.c: 183: tempo_backup[2] = 5000;
  3326  005242  0E13               	movlw	19
  3327  005244  6F38               	movwf	(_tempo_backup+5)& (0+255),b
  3328  005246  0E88               	movlw	136
  3329  005248  6F37               	movwf	(_tempo_backup+4)& (0+255),b
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;main.c: 186: tempo_tarefa[0] = 500;
  3333  00524A  0E01               	movlw	1
  3334  00524C  6F2E               	movwf	(_tempo_tarefa+1)& (0+255),b
  3335  00524E  0EF4               	movlw	244
  3336  005250  6F2D               	movwf	_tempo_tarefa& (0+255),b
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 187: tempo_tarefa[1] = 1000;
  3340  005252  0E03               	movlw	3
  3341  005254  6F30               	movwf	(_tempo_tarefa+3)& (0+255),b
  3342  005256  0EE8               	movlw	232
  3343  005258  6F2F               	movwf	(_tempo_tarefa+2)& (0+255),b
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 188: tempo_tarefa[2] = 5000;
  3347  00525A  0E13               	movlw	19
  3348  00525C  6F32               	movwf	(_tempo_tarefa+5)& (0+255),b
  3349  00525E  0E88               	movlw	136
  3350  005260  6F31               	movwf	(_tempo_tarefa+4)& (0+255),b
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 190: tarefa_em_execucao = 0;
  3354  005262  0E00               	movlw	0
  3355  005264  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3356                           
  3357                           ; BSR set to: 1
  3358  005266  0012               	return		;funcret
  3359  005268                     __end_of_inicializa_tarefas:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _escalonador *****************
  3363 ;; Defined at:
  3364 ;;		line 201 in file "main.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  cont            1  134[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 3F/0
  3375 ;;		On exit  : 3F/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3381 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   17
  3385 ;; This function calls:
  3386 ;;		_disparo_gravacao
  3387 ;;		_troca_de_tela
  3388 ;;		_verifica_dados_operacionais
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text11
  3395  004414                     __ptext11:
  3396                           	callstack 0
  3397  004414                     _escalonador:
  3398                           	callstack 13
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 203: unsigned char cont;;main.c: 204: for(cont = 0; cont<3;cont++)
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;incstack = 0
  3405  004414  0E00               	movlw	0
  3406  004416  6FE6               	movwf	escalonador@cont& (0+255),b
  3407  004418                     l13800:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 205: {;main.c: 206: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3411  004418  51E6               	movf	escalonador@cont& (0+255),w,b
  3412  00441A  0D02               	mullw	2
  3413  00441C  0E39               	movlw	low _p_tarefas
  3414  00441E  24F3               	addwf	243,w,c
  3415  004420  6ED9               	movwf	fsr2l,c
  3416  004422  0E01               	movlw	high _p_tarefas
  3417  004424  20F4               	addwfc	prodh,w,c
  3418  004426  6EDA               	movwf	fsr2h,c
  3419  004428  50DE               	movf	postinc2,w,c
  3420  00442A  10DE               	iorwf	postinc2,w,c
  3421  00442C  B4D8               	btfsc	status,2,c
  3422  00442E  D042               	goto	l13812
  3423                           
  3424                           ; BSR set to: 0
  3425  004430  51E6               	movf	escalonador@cont& (0+255),w,b
  3426  004432  0D02               	mullw	2
  3427  004434  0E2D               	movlw	low _tempo_tarefa
  3428  004436  24F3               	addwf	243,w,c
  3429  004438  6ED9               	movwf	fsr2l,c
  3430  00443A  0E01               	movlw	high _tempo_tarefa
  3431  00443C  20F4               	addwfc	prodh,w,c
  3432  00443E  6EDA               	movwf	fsr2h,c
  3433  004440  50DE               	movf	postinc2,w,c
  3434  004442  10DE               	iorwf	postinc2,w,c
  3435  004444  A4D8               	btfss	status,2,c
  3436  004446  D036               	goto	l13812
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;main.c: 207: {;main.c: 208: tarefa_em_execucao = 1;
  3440  004448  0E01               	movlw	1
  3441  00444A  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3442                           
  3443                           ;main.c: 209: timeout_tarefa = 65000;
  3444  00444C  0EFD               	movlw	253
  3445  00444E  0101               	movlb	1	; () banked
  3446  004450  6F71               	movwf	(_timeout_tarefa+1)& (0+255),b
  3447  004452  0EE8               	movlw	232
  3448  004454  6F70               	movwf	_timeout_tarefa& (0+255),b
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 210: p_tarefas[cont]();
  3452  004456  0100               	movlb	0	; () banked
  3453  004458  51E6               	movf	escalonador@cont& (0+255),w,b
  3454  00445A  0D02               	mullw	2
  3455  00445C  0E39               	movlw	low _p_tarefas
  3456  00445E  24F3               	addwf	243,w,c
  3457  004460  6ED9               	movwf	fsr2l,c
  3458  004462  0E01               	movlw	high _p_tarefas
  3459  004464  20F4               	addwfc	prodh,w,c
  3460  004466  6EDA               	movwf	fsr2h,c
  3461  004468  CFDE F0E4          	movff	postinc2,??_escalonador
  3462  00446C  CFDD F0E5          	movff	postdec2,??_escalonador+1
  3463  004470  D801               	call	u16648
  3464  004472  D009               	goto	u16649
  3465  004474                     u16648:
  3466  004474  0005               	push	
  3467  004476  6EFA               	movwf	pclath,c
  3468  004478  51E4               	movf	??_escalonador& (0+255),w,b
  3469  00447A  6EFD               	movwf	tosl,c
  3470  00447C  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  3471  00447E  6EFE               	movwf	tosh,c
  3472  004480  6AFF               	clrf	tosu,c
  3473  004482  50FA               	movf	pclath,w,c
  3474  004484  0012               	return		;indir
  3475  004486                     u16649:
  3476                           
  3477                           ;main.c: 211: tarefa_em_execucao = 0;
  3478  004486  0E00               	movlw	0
  3479  004488  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3480                           
  3481                           ;main.c: 212: tempo_tarefa[cont] = tempo_backup[cont];
  3482  00448A  0100               	movlb	0	; () banked
  3483  00448C  51E6               	movf	escalonador@cont& (0+255),w,b
  3484  00448E  0D02               	mullw	2
  3485  004490  0E33               	movlw	low _tempo_backup
  3486  004492  24F3               	addwf	243,w,c
  3487  004494  6ED9               	movwf	fsr2l,c
  3488  004496  0E01               	movlw	high _tempo_backup
  3489  004498  20F4               	addwfc	prodh,w,c
  3490  00449A  6EDA               	movwf	fsr2h,c
  3491  00449C  51E6               	movf	escalonador@cont& (0+255),w,b
  3492  00449E  0D02               	mullw	2
  3493  0044A0  0E2D               	movlw	low _tempo_tarefa
  3494  0044A2  24F3               	addwf	243,w,c
  3495  0044A4  6EE1               	movwf	fsr1l,c
  3496  0044A6  0E01               	movlw	high _tempo_tarefa
  3497  0044A8  20F4               	addwfc	prodh,w,c
  3498  0044AA  6EE2               	movwf	fsr1h,c
  3499  0044AC  CFDE FFE6          	movff	postinc2,postinc1
  3500  0044B0  CFDD FFE5          	movff	postdec2,postdec1
  3501  0044B4                     l13812:
  3502                           
  3503                           ; BSR set to: 0
  3504  0044B4  2BE6               	incf	escalonador@cont& (0+255),f,b
  3505                           
  3506                           ; BSR set to: 0
  3507  0044B6  0E02               	movlw	2
  3508  0044B8  65E6               	cpfsgt	escalonador@cont& (0+255),b
  3509  0044BA  D7AE               	goto	l13800
  3510  0044BC  0012               	return	
  3511  0044BE                     __end_of_escalonador:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _troca_de_tela *****************
  3515 ;; Defined at:
  3516 ;;		line 412 in file "main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  fix_signal      2   54[COMRAM] PTR unsigned char 
  3521 ;;		 -> rawFix(2), 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 3F/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        3 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    6
  3538 ;; This function calls:
  3539 ;;		_escreve_caractere_lcd
  3540 ;;		_escreve_cmd_lcd
  3541 ;;		_escreve_frase_ram_lcd
  3542 ;;		_escreve_inteiro_lcd
  3543 ;;		_fix
  3544 ;;		_mostra_dados_display
  3545 ;;		_posicao_cursor_lcd
  3546 ;;		_recebe_dado_gps
  3547 ;; This function is called by:
  3548 ;;		_inicializa_tarefas
  3549 ;;		_escalonador
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text12
  3554  001BFC                     __ptext12:
  3555                           	callstack 0
  3556  001BFC                     _troca_de_tela:
  3557                           	callstack 23
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;main.c: 414: static unsigned char state = 0;;main.c: 415: static unsigned char last_sta
      +                          te = 0;;main.c: 416: unsigned char *fix_signal;;main.c: 418: if(!PORTEbits.RE0 || (state
      +                           == 1 ))
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;incstack = 0
  3564  001BFC  A084               	btfss	132,0,c	;volatile
  3565  001BFE  D003               	goto	u16140
  3566                           
  3567                           ; BSR set to: 0
  3568  001C00  0450               	decf	troca_de_tela@state^0,w,c
  3569  001C02  A4D8               	btfss	status,2,c
  3570  001C04  D0E2               	goto	l13420
  3571  001C06                     u16140:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;main.c: 419: {;main.c: 421: if(!time_atualizacao)
  3575  001C06  51EA               	movf	_time_atualizacao& (0+255),w,b
  3576  001C08  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3577  001C0A  A4D8               	btfss	status,2,c
  3578  001C0C  D061               	goto	l13380
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 422: {;main.c: 423: if(!fence_flag[2].point)
  3582  001C0E  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3583  001C10  D00C               	goto	l13358
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 424: {;main.c: 425: posicao_cursor_lcd(1,8);
  3587  001C12  0E08               	movlw	8
  3588  001C14  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3589  001C16  0E01               	movlw	1
  3590  001C18  EC58  F027         	call	_posicao_cursor_lcd
  3591                           
  3592                           ;main.c: 426: escreve_frase_ram_lcd("DENTRO");
  3593  001C1C  0E4F               	movlw	low STR_22
  3594  001C1E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3595  001C20  0E62               	movlw	high STR_22
  3596  001C22  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3597  001C24  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3598                           
  3599                           ;main.c: 427: }
  3600  001C28  D03C               	goto	l13372
  3601  001C2A                     l13358:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;main.c: 428: else;main.c: 429: {;main.c: 430: posicao_cursor_lcd(1,8);
  3605  001C2A  0E08               	movlw	8
  3606  001C2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3607  001C2E  0E01               	movlw	1
  3608  001C30  EC58  F027         	call	_posicao_cursor_lcd
  3609                           
  3610                           ;main.c: 431: escreve_frase_ram_lcd("FORA");
  3611  001C34  0E61               	movlw	low STR_23
  3612  001C36  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3613  001C38  0E62               	movlw	high STR_23
  3614  001C3A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3615  001C3C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3616                           
  3617                           ;main.c: 432: posicao_cursor_lcd(1,13);
  3618  001C40  0E0D               	movlw	13
  3619  001C42  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3620  001C44  0E01               	movlw	1
  3621  001C46  EC58  F027         	call	_posicao_cursor_lcd
  3622                           
  3623                           ;main.c: 433: escreve_inteiro_lcd(fence_flag[0].point);
  3624  001C4A  0100               	movlb	0	; () banked
  3625  001C4C  A1E7               	btfss	_fence_flag& (0+255),0,b
  3626  001C4E  D003               	goto	u16170
  3627  001C50  6A36               	clrf	??_troca_de_tela^0,c
  3628  001C52  2A36               	incf	??_troca_de_tela^0,f,c
  3629  001C54  D001               	goto	u16178
  3630  001C56                     u16170:
  3631  001C56  6A36               	clrf	??_troca_de_tela^0,c
  3632  001C58                     u16178:
  3633  001C58  5036               	movf	??_troca_de_tela^0,w,c
  3634  001C5A  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3635  001C5C  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3636  001C5E  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3637  001C60  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3638  001C62  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3639                           
  3640                           ;main.c: 434: posicao_cursor_lcd(1,14);
  3641  001C66  0E0E               	movlw	14
  3642  001C68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3643  001C6A  0E01               	movlw	1
  3644  001C6C  EC58  F027         	call	_posicao_cursor_lcd
  3645                           
  3646                           ;main.c: 435: escreve_frase_ram_lcd("|");
  3647  001C70  0E7C               	movlw	low STR_24
  3648  001C72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3649  001C74  0E62               	movlw	high STR_24
  3650  001C76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3651  001C78  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3652                           
  3653                           ;main.c: 436: posicao_cursor_lcd(1,15);
  3654  001C7C  0E0F               	movlw	15
  3655  001C7E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3656  001C80  0E01               	movlw	1
  3657  001C82  EC58  F027         	call	_posicao_cursor_lcd
  3658                           
  3659                           ;main.c: 437: escreve_inteiro_lcd(fence_flag[1].point);
  3660  001C86  0100               	movlb	0	; () banked
  3661  001C88  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3662  001C8A  D003               	goto	u16180
  3663  001C8C  6A36               	clrf	??_troca_de_tela^0,c
  3664  001C8E  2A36               	incf	??_troca_de_tela^0,f,c
  3665  001C90  D001               	goto	u16188
  3666  001C92                     u16180:
  3667  001C92  6A36               	clrf	??_troca_de_tela^0,c
  3668  001C94                     u16188:
  3669  001C94  5036               	movf	??_troca_de_tela^0,w,c
  3670  001C96  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3671  001C98  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3672  001C9A  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3673  001C9C  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3674  001C9E  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3675  001CA2                     l13372:
  3676                           
  3677                           ;main.c: 438: };main.c: 440: fix_signal = fix();
  3678  001CA2  EC23  F02E         	call	_fix	;wreg free
  3679  001CA6  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3680  001CAA  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3681                           
  3682                           ;main.c: 441: posicao_cursor_lcd(2,8);
  3683  001CAE  0E08               	movlw	8
  3684  001CB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3685  001CB2  0E02               	movlw	2
  3686  001CB4  EC58  F027         	call	_posicao_cursor_lcd
  3687                           
  3688                           ;main.c: 442: escreve_caractere_lcd(fix_signal[0]);
  3689  001CB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3690  001CBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3691  001CC0  50DF               	movf	indf2,w,c
  3692  001CC2  ECE9  F025         	call	_escreve_caractere_lcd
  3693                           
  3694                           ;main.c: 443: time_atualizacao = 10000;
  3695  001CC6  0E27               	movlw	39
  3696  001CC8  0100               	movlb	0	; () banked
  3697  001CCA  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3698  001CCC  0E10               	movlw	16
  3699  001CCE  6FEA               	movwf	_time_atualizacao& (0+255),b
  3700  001CD0                     l13380:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;main.c: 444: };main.c: 446: if(last_state != 1)
  3704  001CD0  044F               	decf	troca_de_tela@last_state^0,w,c
  3705  001CD2  B4D8               	btfsc	status,2,c
  3706  001CD4  D078               	goto	l13418
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 447: {;main.c: 448: state = 1;
  3710  001CD6  0E01               	movlw	1
  3711  001CD8  6E50               	movwf	troca_de_tela@state^0,c
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 449: escreve_cmd_lcd(0b00000001);
  3715  001CDA  0E01               	movlw	1
  3716  001CDC  EC2B  F024         	call	_escreve_cmd_lcd
  3717                           
  3718                           ;main.c: 450: posicao_cursor_lcd(1,0);
  3719  001CE0  0E00               	movlw	0
  3720  001CE2  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3721  001CE4  0E01               	movlw	1
  3722  001CE6  EC58  F027         	call	_posicao_cursor_lcd
  3723                           
  3724                           ;main.c: 451: escreve_frase_ram_lcd("FENCE:");
  3725  001CEA  0E48               	movlw	low STR_25
  3726  001CEC  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3727  001CEE  0E62               	movlw	high STR_25
  3728  001CF0  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3729  001CF2  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3730                           
  3731                           ;main.c: 453: if(!fence_flag[2].point)
  3732  001CF6  0100               	movlb	0	; () banked
  3733  001CF8  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3734  001CFA  D00C               	goto	l13396
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;main.c: 454: {;main.c: 455: posicao_cursor_lcd(1,8);
  3738  001CFC  0E08               	movlw	8
  3739  001CFE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3740  001D00  0E01               	movlw	1
  3741  001D02  EC58  F027         	call	_posicao_cursor_lcd
  3742                           
  3743                           ;main.c: 456: escreve_frase_ram_lcd("DENTRO");
  3744  001D06  0E4F               	movlw	low STR_22
  3745  001D08  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3746  001D0A  0E62               	movlw	high STR_22
  3747  001D0C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3748  001D0E  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3749                           
  3750                           ;main.c: 457: }
  3751  001D12  D03C               	goto	l13410
  3752  001D14                     l13396:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 458: else;main.c: 459: {;main.c: 460: posicao_cursor_lcd(1,8);
  3756  001D14  0E08               	movlw	8
  3757  001D16  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3758  001D18  0E01               	movlw	1
  3759  001D1A  EC58  F027         	call	_posicao_cursor_lcd
  3760                           
  3761                           ;main.c: 461: escreve_frase_ram_lcd("FORA");
  3762  001D1E  0E61               	movlw	low STR_23
  3763  001D20  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3764  001D22  0E62               	movlw	high STR_23
  3765  001D24  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3766  001D26  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3767                           
  3768                           ;main.c: 462: posicao_cursor_lcd(1,13);
  3769  001D2A  0E0D               	movlw	13
  3770  001D2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3771  001D2E  0E01               	movlw	1
  3772  001D30  EC58  F027         	call	_posicao_cursor_lcd
  3773                           
  3774                           ;main.c: 463: escreve_inteiro_lcd(fence_flag[0].point);
  3775  001D34  0100               	movlb	0	; () banked
  3776  001D36  A1E7               	btfss	_fence_flag& (0+255),0,b
  3777  001D38  D003               	goto	u16210
  3778  001D3A  6A36               	clrf	??_troca_de_tela^0,c
  3779  001D3C  2A36               	incf	??_troca_de_tela^0,f,c
  3780  001D3E  D001               	goto	u16218
  3781  001D40                     u16210:
  3782  001D40  6A36               	clrf	??_troca_de_tela^0,c
  3783  001D42                     u16218:
  3784  001D42  5036               	movf	??_troca_de_tela^0,w,c
  3785  001D44  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3786  001D46  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3787  001D48  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3788  001D4A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3789  001D4C  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3790                           
  3791                           ;main.c: 464: posicao_cursor_lcd(1,14);
  3792  001D50  0E0E               	movlw	14
  3793  001D52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3794  001D54  0E01               	movlw	1
  3795  001D56  EC58  F027         	call	_posicao_cursor_lcd
  3796                           
  3797                           ;main.c: 465: escreve_frase_ram_lcd("|");
  3798  001D5A  0E7C               	movlw	low STR_24
  3799  001D5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3800  001D5E  0E62               	movlw	high STR_24
  3801  001D60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3802  001D62  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3803                           
  3804                           ;main.c: 466: posicao_cursor_lcd(1,15);
  3805  001D66  0E0F               	movlw	15
  3806  001D68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3807  001D6A  0E01               	movlw	1
  3808  001D6C  EC58  F027         	call	_posicao_cursor_lcd
  3809                           
  3810                           ;main.c: 467: escreve_inteiro_lcd(fence_flag[1].point);
  3811  001D70  0100               	movlb	0	; () banked
  3812  001D72  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3813  001D74  D003               	goto	u16220
  3814  001D76  6A36               	clrf	??_troca_de_tela^0,c
  3815  001D78  2A36               	incf	??_troca_de_tela^0,f,c
  3816  001D7A  D001               	goto	u16228
  3817  001D7C                     u16220:
  3818  001D7C  6A36               	clrf	??_troca_de_tela^0,c
  3819  001D7E                     u16228:
  3820  001D7E  5036               	movf	??_troca_de_tela^0,w,c
  3821  001D80  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3822  001D82  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3823  001D84  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3824  001D86  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3825  001D88  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3826  001D8C                     l13410:
  3827                           
  3828                           ;main.c: 468: };main.c: 469: fix_signal = fix();
  3829  001D8C  EC23  F02E         	call	_fix	;wreg free
  3830  001D90  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3831  001D94  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3832                           
  3833                           ;main.c: 470: posicao_cursor_lcd(2,0);
  3834  001D98  0E00               	movlw	0
  3835  001D9A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3836  001D9C  0E02               	movlw	2
  3837  001D9E  EC58  F027         	call	_posicao_cursor_lcd
  3838                           
  3839                           ;main.c: 471: escreve_frase_ram_lcd("FIX:");
  3840  001DA2  0E5C               	movlw	low STR_29
  3841  001DA4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3842  001DA6  0E62               	movlw	high STR_29
  3843  001DA8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3844  001DAA  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3845                           
  3846                           ;main.c: 472: posicao_cursor_lcd(2,8);
  3847  001DAE  0E08               	movlw	8
  3848  001DB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3849  001DB2  0E02               	movlw	2
  3850  001DB4  EC58  F027         	call	_posicao_cursor_lcd
  3851                           
  3852                           ;main.c: 473: escreve_caractere_lcd(fix_signal[0]);
  3853  001DB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3854  001DBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3855  001DC0  50DF               	movf	indf2,w,c
  3856  001DC2  ECE9  F025         	call	_escreve_caractere_lcd
  3857  001DC6                     l13418:
  3858                           
  3859                           ;main.c: 474: };main.c: 475: last_state = 1;
  3860  001DC6  0E01               	movlw	1
  3861  001DC8  6E4F               	movwf	troca_de_tela@last_state^0,c
  3862  001DCA                     l13420:
  3863                           
  3864                           ;main.c: 477: };main.c: 487: if(!PORTEbits.RE1 || (state == 2))
  3865  001DCA  A284               	btfss	132,1,c	;volatile
  3866  001DCC  D004               	goto	u16240
  3867  001DCE  0E02               	movlw	2
  3868  001DD0  1850               	xorwf	troca_de_tela@state^0,w,c
  3869  001DD2  A4D8               	btfss	status,2,c
  3870  001DD4  D033               	goto	l13452
  3871  001DD6                     u16240:
  3872                           
  3873                           ;main.c: 488: {;main.c: 489: if(!time_atualizacao)
  3874  001DD6  0100               	movlb	0	; () banked
  3875  001DD8  51EA               	movf	_time_atualizacao& (0+255),w,b
  3876  001DDA  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3877  001DDC  A4D8               	btfss	status,2,c
  3878  001DDE  D009               	goto	l13432
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 490: {;main.c: 491: recebe_dado_gps();
  3882  001DE0  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  3883                           
  3884                           ;main.c: 492: mostra_dados_display();
  3885  001DE4  ECEC  F02B         	call	_mostra_dados_display	;wreg free
  3886                           
  3887                           ;main.c: 493: time_atualizacao = 2000;
  3888  001DE8  0E07               	movlw	7
  3889  001DEA  0100               	movlb	0	; () banked
  3890  001DEC  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3891  001DEE  0ED0               	movlw	208
  3892  001DF0  6FEA               	movwf	_time_atualizacao& (0+255),b
  3893  001DF2                     l13432:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 494: };main.c: 497: if(last_state != 2)
  3897  001DF2  0E02               	movlw	2
  3898  001DF4  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3899  001DF6  B4D8               	btfsc	status,2,c
  3900  001DF8  D01F               	goto	l13450
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 498: {;main.c: 499: state = 2;
  3904  001DFA  0E02               	movlw	2
  3905  001DFC  6E50               	movwf	troca_de_tela@state^0,c
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 500: escreve_cmd_lcd(0b00000001);
  3909  001DFE  0E01               	movlw	1
  3910  001E00  EC2B  F024         	call	_escreve_cmd_lcd
  3911                           
  3912                           ;main.c: 501: posicao_cursor_lcd(1,0);
  3913  001E04  0E00               	movlw	0
  3914  001E06  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3915  001E08  0E01               	movlw	1
  3916  001E0A  EC58  F027         	call	_posicao_cursor_lcd
  3917                           
  3918                           ;main.c: 502: escreve_frase_ram_lcd("lt:");
  3919  001E0E  0E6F               	movlw	low STR_30
  3920  001E10  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3921  001E12  0E62               	movlw	high STR_30
  3922  001E14  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3923  001E16  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3924                           
  3925                           ;main.c: 503: posicao_cursor_lcd(2,0);
  3926  001E1A  0E00               	movlw	0
  3927  001E1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3928  001E1E  0E02               	movlw	2
  3929  001E20  EC58  F027         	call	_posicao_cursor_lcd
  3930                           
  3931                           ;main.c: 504: escreve_frase_ram_lcd("lo:");
  3932  001E24  0E6B               	movlw	low STR_31
  3933  001E26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3934  001E28  0E62               	movlw	high STR_31
  3935  001E2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3936  001E2C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3937                           
  3938                           ;main.c: 505: recebe_dado_gps();
  3939  001E30  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  3940                           
  3941                           ;main.c: 506: mostra_dados_display();
  3942  001E34  ECEC  F02B         	call	_mostra_dados_display	;wreg free
  3943  001E38                     l13450:
  3944                           
  3945                           ;main.c: 507: };main.c: 508: last_state = 2;
  3946  001E38  0E02               	movlw	2
  3947  001E3A  6E4F               	movwf	troca_de_tela@last_state^0,c
  3948  001E3C                     l13452:
  3949                           
  3950                           ;main.c: 509: };main.c: 514: if(!state)
  3951  001E3C  5050               	movf	troca_de_tela@state^0,w,c
  3952  001E3E  A4D8               	btfss	status,2,c
  3953  001E40  0012               	return	
  3954                           
  3955                           ;main.c: 515: {;main.c: 516: if(last_state != 4)
  3956  001E42  0E04               	movlw	4
  3957  001E44  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3958  001E46  B4D8               	btfsc	status,2,c
  3959  001E48  D019               	goto	l13462
  3960                           
  3961                           ;main.c: 517: {;main.c: 518: escreve_cmd_lcd(0b00000001);
  3962  001E4A  0E01               	movlw	1
  3963  001E4C  EC2B  F024         	call	_escreve_cmd_lcd
  3964                           
  3965                           ;main.c: 519: posicao_cursor_lcd(1,0);
  3966  001E50  0E00               	movlw	0
  3967  001E52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3968  001E54  0E01               	movlw	1
  3969  001E56  EC58  F027         	call	_posicao_cursor_lcd
  3970                           
  3971                           ;main.c: 520: escreve_frase_ram_lcd("B1:FENCE");
  3972  001E5A  0E2E               	movlw	low STR_32
  3973  001E5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3974  001E5E  0E62               	movlw	high STR_32
  3975  001E60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3976  001E62  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3977                           
  3978                           ;main.c: 521: posicao_cursor_lcd(2,0);
  3979  001E66  0E00               	movlw	0
  3980  001E68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3981  001E6A  0E02               	movlw	2
  3982  001E6C  EC58  F027         	call	_posicao_cursor_lcd
  3983                           
  3984                           ;main.c: 522: escreve_frase_ram_lcd("B2:LTLO");
  3985  001E70  0E40               	movlw	low STR_33
  3986  001E72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3987  001E74  0E62               	movlw	high STR_33
  3988  001E76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3989  001E78  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3990  001E7C                     l13462:
  3991                           
  3992                           ;main.c: 524: };main.c: 525: last_state = 4;
  3993  001E7C  0E04               	movlw	4
  3994  001E7E  6E4F               	movwf	troca_de_tela@last_state^0,c
  3995  001E80  0012               	return		;funcret
  3996  001E82                     __end_of_troca_de_tela:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _disparo_gravacao *****************
  4000 ;; Defined at:
  4001 ;;		line 349 in file "main.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4006 ;;  index_max       2   16[BANK2 ] unsigned int 
  4007 ;;  v_max           2   14[BANK2 ] unsigned int 
  4008 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4009 ;;		 -> rawFix(2), 
  4010 ;;  i               1   18[BANK2 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 3F/0
  4017 ;;		On exit  : 3F/1
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4022 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4024 ;;Total ram usage:       24 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   16
  4027 ;; This function calls:
  4028 ;;		___wmul
  4029 ;;		_atoi
  4030 ;;		_dados_gps_to_sd
  4031 ;;		_fix
  4032 ;;		_grava_sd
  4033 ;;		_itoa
  4034 ;;		_monta_sd
  4035 ;;		_recebe_dado_gps
  4036 ;;		_verifica_fence
  4037 ;; This function is called by:
  4038 ;;		_inicializa_tarefas
  4039 ;;		_escalonador
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text13
  4044  002810                     __ptext13:
  4045                           	callstack 0
  4046  002810                     _disparo_gravacao:
  4047                           	callstack 13
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;main.c: 354: unsigned char *velocidade[6];;main.c: 356: v_max = atoi(dados_vel[0]);
  4051                           
  4052                           ; BSR set to: 0
  4053                           
  4054                           ;incstack = 0
  4055  002810  C127  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4056  002814  C128  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4057  002818  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4058  00281A  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4059  00281E  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4060  002822  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4061  002826  ECFA  F018         	call	_atoi	;wreg free
  4062  00282A  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4063  00282E  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4064                           
  4065                           ;main.c: 357: index_max = 0;
  4066  002832  0E00               	movlw	0
  4067  002834  0102               	movlb	2	; () banked
  4068  002836  6FF8               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4069  002838  0E00               	movlw	0
  4070  00283A  6FF7               	movwf	disparo_gravacao@index_max& (0+255),b
  4071                           
  4072                           ; BSR set to: 2
  4073                           ;main.c: 358: if(!time_sd)
  4074  00283C  0101               	movlb	1	; () banked
  4075  00283E  516E               	movf	_time_sd& (0+255),w,b
  4076  002840  116F               	iorwf	(_time_sd+1)& (0+255),w,b
  4077  002842  A4D8               	btfss	status,2,c
  4078  002844  0012               	return	
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 359: {;main.c: 360: verifica_fence();
  4082  002846  EC87  F027         	call	_verifica_fence	;wreg free
  4083                           
  4084                           ;main.c: 361: fix_gps = fix();
  4085  00284A  EC23  F02E         	call	_fix	;wreg free
  4086  00284E  C00A  F2F3         	movff	?_fix,disparo_gravacao@fix_gps
  4087  002852  C00B  F2F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4088                           
  4089                           ;main.c: 363: if(*fix_gps == '1')
  4090  002856  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4091  00285A  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4092  00285E  0E31               	movlw	49
  4093  002860  18DE               	xorwf	postinc2,w,c
  4094  002862  A4D8               	btfss	status,2,c
  4095  002864  D0DC               	goto	l13776
  4096                           
  4097                           ;main.c: 364: {;main.c: 365: if(v_max> 50)
  4098  002866  0102               	movlb	2	; () banked
  4099  002868  51F6               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4100  00286A  E104               	bnz	u16590
  4101  00286C  0E33               	movlw	51
  4102  00286E  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4103  002870  A0D8               	btfss	status,0,c
  4104  002872  D0C2               	goto	l13768
  4105  002874                     u16590:
  4106                           
  4107                           ; BSR set to: 2
  4108                           ;main.c: 366: {;main.c: 367: for(i=1; i<3; i++)
  4109  002874  0E01               	movlw	1
  4110  002876  6FF9               	movwf	disparo_gravacao@i& (0+255),b
  4111  002878                     l13746:
  4112                           
  4113                           ; BSR set to: 2
  4114                           ;main.c: 368: {;main.c: 369: if(v_max < atoi(dados_vel[i]))
  4115  002878  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4116  00287A  0D02               	mullw	2
  4117  00287C  0E27               	movlw	low _dados_vel
  4118  00287E  24F3               	addwf	243,w,c
  4119  002880  6ED9               	movwf	fsr2l,c
  4120  002882  0E01               	movlw	high _dados_vel
  4121  002884  20F4               	addwfc	prodh,w,c
  4122  002886  6EDA               	movwf	fsr2h,c
  4123  002888  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4124  00288C  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4125  002890  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4126  002894  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4127  002898  0100               	movlb	0	; () banked
  4128  00289A  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4129  00289C  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4130  0028A0  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4131  0028A4  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4132  0028A8  ECFA  F018         	call	_atoi	;wreg free
  4133  0028AC  5010               	movf	?_atoi^0,w,c
  4134  0028AE  0102               	movlb	2	; () banked
  4135  0028B0  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4136  0028B2  5011               	movf	(?_atoi+1)^0,w,c
  4137  0028B4  59F6               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4138  0028B6  B0D8               	btfsc	status,0,c
  4139  0028B8  D022               	goto	l13752
  4140                           
  4141                           ; BSR set to: 2
  4142                           ;main.c: 370: {;main.c: 371: v_max = atoi(dados_vel[i]);
  4143  0028BA  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4144  0028BC  0D02               	mullw	2
  4145  0028BE  0E27               	movlw	low _dados_vel
  4146  0028C0  24F3               	addwf	243,w,c
  4147  0028C2  6ED9               	movwf	fsr2l,c
  4148  0028C4  0E01               	movlw	high _dados_vel
  4149  0028C6  20F4               	addwfc	prodh,w,c
  4150  0028C8  6EDA               	movwf	fsr2h,c
  4151  0028CA  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4152  0028CE  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4153  0028D2  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4154  0028D6  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4155  0028DA  0100               	movlb	0	; () banked
  4156  0028DC  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4157  0028DE  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4158  0028E2  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4159  0028E6  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4160  0028EA  ECFA  F018         	call	_atoi	;wreg free
  4161  0028EE  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4162  0028F2  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4163                           
  4164                           ;main.c: 372: index_max = i;
  4165  0028F6  C2F9  F2F7         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4166  0028FA  0102               	movlb	2	; () banked
  4167  0028FC  6BF8               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4168  0028FE                     l13752:
  4169                           
  4170                           ; BSR set to: 2
  4171  0028FE  2BF9               	incf	disparo_gravacao@i& (0+255),f,b
  4172                           
  4173                           ; BSR set to: 2
  4174  002900  0E02               	movlw	2
  4175  002902  65F9               	cpfsgt	disparo_gravacao@i& (0+255),b
  4176  002904  D7B9               	goto	l13746
  4177                           
  4178                           ; BSR set to: 2
  4179                           ;main.c: 373: };main.c: 375: };main.c: 377: monta_sd(0, dados_hora[index_max]);
  4180  002906  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4181  00290A  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4182  00290E  0E00               	movlw	0
  4183  002910  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4184  002912  0E06               	movlw	6
  4185  002914  6E0C               	movwf	___wmul@multiplicand^0,c
  4186  002916  EC95  F02C         	call	___wmul	;wreg free
  4187  00291A  0ED5               	movlw	low _dados_hora
  4188  00291C  240A               	addwf	?___wmul^0,w,c
  4189  00291E  6E10               	movwf	monta_sd@dado^0,c
  4190  002920  0E02               	movlw	high _dados_hora
  4191  002922  200B               	addwfc	(?___wmul+1)^0,w,c
  4192  002924  6E11               	movwf	(monta_sd@dado+1)^0,c
  4193  002926  0E00               	movlw	0
  4194  002928  EC03  F00B         	call	_monta_sd
  4195                           
  4196                           ;main.c: 378: monta_sd(1, dados_data[index_max]);
  4197  00292C  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4198  002930  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4199  002934  0E00               	movlw	0
  4200  002936  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4201  002938  0E06               	movlw	6
  4202  00293A  6E0C               	movwf	___wmul@multiplicand^0,c
  4203  00293C  EC95  F02C         	call	___wmul	;wreg free
  4204  002940  0EC3               	movlw	low _dados_data
  4205  002942  240A               	addwf	?___wmul^0,w,c
  4206  002944  6E10               	movwf	monta_sd@dado^0,c
  4207  002946  0E02               	movlw	high _dados_data
  4208  002948  200B               	addwfc	(?___wmul+1)^0,w,c
  4209  00294A  6E11               	movwf	(monta_sd@dado+1)^0,c
  4210  00294C  0E01               	movlw	1
  4211  00294E  EC03  F00B         	call	_monta_sd
  4212                           
  4213                           ;main.c: 379: monta_sd(2, dados_lat[index_max]);
  4214  002952  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4215  002956  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4216  00295A  0E00               	movlw	0
  4217  00295C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4218  00295E  0E0B               	movlw	11
  4219  002960  6E0C               	movwf	___wmul@multiplicand^0,c
  4220  002962  EC95  F02C         	call	___wmul	;wreg free
  4221  002966  0EA2               	movlw	low _dados_lat
  4222  002968  240A               	addwf	?___wmul^0,w,c
  4223  00296A  6E10               	movwf	monta_sd@dado^0,c
  4224  00296C  0E02               	movlw	high _dados_lat
  4225  00296E  200B               	addwfc	(?___wmul+1)^0,w,c
  4226  002970  6E11               	movwf	(monta_sd@dado+1)^0,c
  4227  002972  0E02               	movlw	2
  4228  002974  EC03  F00B         	call	_monta_sd
  4229                           
  4230                           ;main.c: 380: monta_sd(3, dados_long[index_max]);
  4231  002978  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4232  00297C  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4233  002980  0E00               	movlw	0
  4234  002982  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4235  002984  0E0C               	movlw	12
  4236  002986  6E0C               	movwf	___wmul@multiplicand^0,c
  4237  002988  EC95  F02C         	call	___wmul	;wreg free
  4238  00298C  0E7E               	movlw	low _dados_long
  4239  00298E  240A               	addwf	?___wmul^0,w,c
  4240  002990  6E10               	movwf	monta_sd@dado^0,c
  4241  002992  0E02               	movlw	high _dados_long
  4242  002994  200B               	addwfc	(?___wmul+1)^0,w,c
  4243  002996  6E11               	movwf	(monta_sd@dado+1)^0,c
  4244  002998  0E03               	movlw	3
  4245  00299A  EC03  F00B         	call	_monta_sd
  4246                           
  4247                           ;main.c: 381: itoa(velocidade, dados_vel[index_max], 10);
  4248  00299E  0EE7               	movlw	low disparo_gravacao@velocidade
  4249  0029A0  6E1A               	movwf	itoa@buf^0,c
  4250  0029A2  0E02               	movlw	high disparo_gravacao@velocidade
  4251  0029A4  6E1B               	movwf	(itoa@buf+1)^0,c
  4252  0029A6  90D8               	bcf	status,0,c
  4253  0029A8  0102               	movlb	2	; () banked
  4254  0029AA  35F7               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4255  0029AC  6ED9               	movwf	fsr2l,c
  4256  0029AE  35F8               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4257  0029B0  6EDA               	movwf	fsr2h,c
  4258  0029B2  0E27               	movlw	low _dados_vel
  4259  0029B4  26D9               	addwf	fsr2l,f,c
  4260  0029B6  0E01               	movlw	high _dados_vel
  4261  0029B8  22DA               	addwfc	fsr2h,f,c
  4262  0029BA  CFDE F01C          	movff	postinc2,itoa@val
  4263  0029BE  CFDD F01D          	movff	postdec2,itoa@val+1
  4264  0029C2  0E00               	movlw	0
  4265  0029C4  6E1F               	movwf	(itoa@base+1)^0,c
  4266  0029C6  0E0A               	movlw	10
  4267  0029C8  6E1E               	movwf	itoa@base^0,c
  4268  0029CA  ECEF  F02A         	call	_itoa	;wreg free
  4269                           
  4270                           ;main.c: 382: monta_sd(7, velocidade);
  4271  0029CE  0EE7               	movlw	low disparo_gravacao@velocidade
  4272  0029D0  6E10               	movwf	monta_sd@dado^0,c
  4273  0029D2  0E02               	movlw	high disparo_gravacao@velocidade
  4274  0029D4  6E11               	movwf	(monta_sd@dado+1)^0,c
  4275  0029D6  0E07               	movlw	7
  4276  0029D8  EC03  F00B         	call	_monta_sd
  4277                           
  4278                           ;main.c: 384: dados_vel[0] = 50;
  4279  0029DC  0E00               	movlw	0
  4280  0029DE  0101               	movlb	1	; () banked
  4281  0029E0  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4282  0029E2  0E32               	movlw	50
  4283  0029E4  6F27               	movwf	_dados_vel& (0+255),b
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;main.c: 385: dados_vel[1] = 50;
  4287  0029E6  0E00               	movlw	0
  4288  0029E8  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4289  0029EA  0E32               	movlw	50
  4290  0029EC  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;main.c: 386: dados_vel[2] = 50;
  4294  0029EE  0E00               	movlw	0
  4295  0029F0  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4296  0029F2  0E32               	movlw	50
  4297  0029F4  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4298                           
  4299                           ;main.c: 387: }
  4300  0029F6  D011               	goto	l13774
  4301  0029F8                     l13768:
  4302                           
  4303                           ; BSR set to: 2
  4304                           ;main.c: 388: else;main.c: 389: {;main.c: 390: dados_vel[0] = 50;
  4305  0029F8  0E00               	movlw	0
  4306  0029FA  0101               	movlb	1	; () banked
  4307  0029FC  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4308  0029FE  0E32               	movlw	50
  4309  002A00  6F27               	movwf	_dados_vel& (0+255),b
  4310                           
  4311                           ;main.c: 391: dados_vel[1] = 50;
  4312  002A02  0E00               	movlw	0
  4313  002A04  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4314  002A06  0E32               	movlw	50
  4315  002A08  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4316                           
  4317                           ;main.c: 392: dados_vel[2] = 50;
  4318  002A0A  0E00               	movlw	0
  4319  002A0C  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4320  002A0E  0E32               	movlw	50
  4321  002A10  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4322                           
  4323                           ; BSR set to: 1
  4324                           ;main.c: 393: recebe_dado_gps();
  4325  002A12  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  4326                           
  4327                           ;main.c: 394: dados_gps_to_sd();
  4328  002A16  ECF6  F026         	call	_dados_gps_to_sd	;wreg free
  4329  002A1A                     l13774:
  4330                           
  4331                           ;main.c: 395: };main.c: 396: grava_sd();
  4332  002A1A  EC9A  F02D         	call	_grava_sd	;wreg free
  4333  002A1E                     l13776:
  4334                           
  4335                           ;main.c: 397: };main.c: 400: time_sd = 28000;
  4336  002A1E  0E6D               	movlw	109
  4337  002A20  0101               	movlb	1	; () banked
  4338  002A22  6F6F               	movwf	(_time_sd+1)& (0+255),b
  4339  002A24  0E60               	movlw	96
  4340  002A26  6F6E               	movwf	_time_sd& (0+255),b
  4341                           
  4342                           ; BSR set to: 1
  4343  002A28  0012               	return		;funcret
  4344  002A2A                     __end_of_disparo_gravacao:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _verifica_dados_operacionais *****************
  4348 ;; Defined at:
  4349 ;;		line 308 in file "main.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 3F/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4365 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4366 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4367 ;;Total ram usage:        6 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    9
  4370 ;; This function calls:
  4371 ;;		_Speed
  4372 ;;		___awtoft
  4373 ;;		___ftmul
  4374 ;;		___fttol
  4375 ;;		_atoi
  4376 ;;		_latitude
  4377 ;;		_longitude
  4378 ;;		_rawdata
  4379 ;;		_rawhora
  4380 ;;		_strcpy
  4381 ;;		_verifica_fence
  4382 ;; This function is called by:
  4383 ;;		_inicializa_tarefas
  4384 ;;		_escalonador
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text14
  4389  002F0C                     __ptext14:
  4390                           	callstack 0
  4391  002F0C                     _verifica_dados_operacionais:
  4392                           	callstack 20
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;main.c: 310: static unsigned char dado[6];;main.c: 311: static unsigned char contador_a
      +                          tual =0;;main.c: 312: static unsigned char contador_anterior =0;;main.c: 313: static uns
      +                          igned long int velocidade_media;;main.c: 314: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 315: static unsigned char *velocidade_atual;;main.c: 316: verifica_fenc
      +                          e();
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;incstack = 0
  4399  002F0C  EC87  F027         	call	_verifica_fence	;wreg free
  4400                           
  4401                           ;main.c: 318: if(contador_atual >=3)
  4402  002F10  0E02               	movlw	2
  4403  002F12  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  4404  002F14  D005               	goto	l13268
  4405                           
  4406                           ;main.c: 319: {;main.c: 320: contador_atual = 0;
  4407  002F16  0E00               	movlw	0
  4408  002F18  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  4409                           
  4410                           ;main.c: 321: contador_anterior = contador_atual;
  4411  002F1A  0E00               	movlw	0
  4412  002F1C  0100               	movlb	0	; () banked
  4413  002F1E  6FF0               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4414  002F20                     l13268:
  4415                           
  4416                           ;main.c: 322: };main.c: 324: velocidade_atual = Speed();
  4417  002F20  EC1E  F02E         	call	_Speed	;wreg free
  4418  002F24  C00A  F166         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4419  002F28  C00B  F167         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4420                           
  4421                           ;main.c: 325: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  4422  002F2C  0E0E               	movlw	14
  4423  002F2E  6E1F               	movwf	___ftmul@f2^0,c
  4424  002F30  0EED               	movlw	237
  4425  002F32  6E20               	movwf	(___ftmul@f2+1)^0,c
  4426  002F34  0E3F               	movlw	63
  4427  002F36  6E21               	movwf	(___ftmul@f2+2)^0,c
  4428  002F38  C166  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4429  002F3C  C167  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4430  002F40  5010               	movf	atoi@s^0,w,c
  4431  002F42  1011               	iorwf	(atoi@s+1)^0,w,c
  4432  002F44  A4D8               	btfss	status,2,c
  4433  002F46  0E20               	movlw	32
  4434  002F48  6E12               	movwf	(atoi@s+2)^0,c
  4435  002F4A  ECFA  F018         	call	_atoi	;wreg free
  4436  002F4E  C010  F018         	movff	?_atoi,___awtoft@c
  4437  002F52  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  4438  002F56  EC0C  F02B         	call	___awtoft	;wreg free
  4439  002F5A  C018  F01C         	movff	?___awtoft,___ftmul@f1
  4440  002F5E  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  4441  002F62  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  4442  002F66  EC66  F01E         	call	___ftmul	;wreg free
  4443  002F6A  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4444  002F6E  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4445  002F72  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4446  002F76  ECCC  F01F         	call	___fttol	;wreg free
  4447  002F7A  C02B  F151         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4448  002F7E  C02C  F152         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4449  002F82  C02D  F153         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4450  002F86  C02E  F154         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4451                           
  4452                           ;main.c: 326: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  4453  002F8A  0101               	movlb	1	; () banked
  4454  002F8C  512B               	movf	(_dados_vel+4)& (0+255),w,b
  4455  002F8E  6E44               	movwf	??_verifica_dados_operacionais^0,c
  4456  002F90  512C               	movf	(_dados_vel+5)& (0+255),w,b
  4457  002F92  6E45               	movwf	(??_verifica_dados_operacionais+1)^0,c
  4458  002F94  6A46               	clrf	(??_verifica_dados_operacionais+2)^0,c
  4459  002F96  6A47               	clrf	(??_verifica_dados_operacionais+3)^0,c
  4460  002F98  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4461  002F9A  5C44               	subwf	??_verifica_dados_operacionais^0,w,c
  4462  002F9C  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4463  002F9E  5845               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  4464  002FA0  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4465  002FA2  5846               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  4466  002FA4  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4467  002FA6  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4468  002FA8  B0D8               	btfsc	status,0,c
  4469  002FAA  0012               	return	
  4470                           
  4471                           ; BSR set to: 1
  4472  002FAC  0E03               	movlw	3
  4473  002FAE  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  4474  002FB0  0012               	return	
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;main.c: 327: {;main.c: 328: if(velocidade_atual_int > dados_vel[contador_anterior])
  4478  002FB2  0100               	movlb	0	; () banked
  4479  002FB4  51F0               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4480  002FB6  0D02               	mullw	2
  4481  002FB8  0E27               	movlw	low _dados_vel
  4482  002FBA  24F3               	addwf	243,w,c
  4483  002FBC  6ED9               	movwf	fsr2l,c
  4484  002FBE  0E01               	movlw	high _dados_vel
  4485  002FC0  20F4               	addwfc	prodh,w,c
  4486  002FC2  6EDA               	movwf	fsr2h,c
  4487  002FC4  CFDE F044          	movff	postinc2,??_verifica_dados_operacionais
  4488  002FC8  CFDD F045          	movff	postdec2,??_verifica_dados_operacionais+1
  4489  002FCC  5044               	movf	??_verifica_dados_operacionais^0,w,c
  4490  002FCE  6E46               	movwf	(??_verifica_dados_operacionais+2)^0,c
  4491  002FD0  5045               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  4492  002FD2  6E47               	movwf	(??_verifica_dados_operacionais+3)^0,c
  4493  002FD4  6A48               	clrf	(??_verifica_dados_operacionais+4)^0,c
  4494  002FD6  6A49               	clrf	(??_verifica_dados_operacionais+5)^0,c
  4495  002FD8  0101               	movlb	1	; () banked
  4496  002FDA  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4497  002FDC  5C46               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  4498  002FDE  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4499  002FE0  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4500  002FE2  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4501  002FE4  5848               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  4502  002FE6  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4503  002FE8  5849               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  4504  002FEA  B0D8               	btfsc	status,0,c
  4505  002FEC  D04C               	goto	l13288
  4506                           
  4507                           ; BSR set to: 1
  4508                           ;main.c: 329: {;main.c: 330: dados_vel[contador_atual] = velocidade_atual_int;
  4509  002FEE  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4510  002FF0  0D02               	mullw	2
  4511  002FF2  0E27               	movlw	low _dados_vel
  4512  002FF4  24F3               	addwf	243,w,c
  4513  002FF6  6ED9               	movwf	fsr2l,c
  4514  002FF8  0E01               	movlw	high _dados_vel
  4515  002FFA  20F4               	addwfc	prodh,w,c
  4516  002FFC  6EDA               	movwf	fsr2h,c
  4517  002FFE  C151  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  4518  003002  C152  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  4519                           
  4520                           ; BSR set to: 1
  4521                           ;main.c: 331: strcpy(dados_lat[contador_atual], latitude());
  4522  003006  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4523  003008  0D0B               	mullw	11
  4524  00300A  0EA2               	movlw	low _dados_lat
  4525  00300C  24F3               	addwf	243,w,c
  4526  00300E  6E0C               	movwf	strcpy@to^0,c
  4527  003010  0E02               	movlw	high _dados_lat
  4528  003012  20F4               	addwfc	prodh,w,c
  4529  003014  6E0D               	movwf	(strcpy@to+1)^0,c
  4530  003016  EC19  F02E         	call	_latitude	;wreg free
  4531  00301A  C00A  F00E         	movff	?_latitude,strcpy@from
  4532  00301E  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  4533  003022  ECD5  F02B         	call	_strcpy	;wreg free
  4534                           
  4535                           ;main.c: 332: strcpy(dados_long[contador_atual], longitude());
  4536  003026  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4537  003028  0D0C               	mullw	12
  4538  00302A  0E7E               	movlw	low _dados_long
  4539  00302C  24F3               	addwf	243,w,c
  4540  00302E  6E0C               	movwf	strcpy@to^0,c
  4541  003030  0E02               	movlw	high _dados_long
  4542  003032  20F4               	addwfc	prodh,w,c
  4543  003034  6E0D               	movwf	(strcpy@to+1)^0,c
  4544  003036  EC14  F02E         	call	_longitude	;wreg free
  4545  00303A  C00A  F00E         	movff	?_longitude,strcpy@from
  4546  00303E  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  4547  003042  ECD5  F02B         	call	_strcpy	;wreg free
  4548                           
  4549                           ;main.c: 333: strcpy(dados_hora[contador_atual], rawhora());
  4550  003046  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4551  003048  0D06               	mullw	6
  4552  00304A  0ED5               	movlw	low _dados_hora
  4553  00304C  24F3               	addwf	243,w,c
  4554  00304E  6E0C               	movwf	strcpy@to^0,c
  4555  003050  0E02               	movlw	high _dados_hora
  4556  003052  20F4               	addwfc	prodh,w,c
  4557  003054  6E0D               	movwf	(strcpy@to+1)^0,c
  4558  003056  EC0A  F02E         	call	_rawhora	;wreg free
  4559  00305A  C00A  F00E         	movff	?_rawhora,strcpy@from
  4560  00305E  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  4561  003062  ECD5  F02B         	call	_strcpy	;wreg free
  4562                           
  4563                           ;main.c: 334: strcpy(dados_data[contador_atual], rawdata());
  4564  003066  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4565  003068  0D06               	mullw	6
  4566  00306A  0EC3               	movlw	low _dados_data
  4567  00306C  24F3               	addwf	243,w,c
  4568  00306E  6E0C               	movwf	strcpy@to^0,c
  4569  003070  0E02               	movlw	high _dados_data
  4570  003072  20F4               	addwfc	prodh,w,c
  4571  003074  6E0D               	movwf	(strcpy@to+1)^0,c
  4572  003076  EC0F  F02E         	call	_rawdata	;wreg free
  4573  00307A  C00A  F00E         	movff	?_rawdata,strcpy@from
  4574  00307E  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  4575  003082  ECD5  F02B         	call	_strcpy	;wreg free
  4576  003086                     l13288:
  4577                           
  4578                           ;main.c: 335: };main.c: 336: contador_anterior = contador_atual;
  4579  003086  C051  F0F0         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4580                           
  4581                           ;main.c: 337: contador_atual++;
  4582  00308A  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  4583  00308C  0012               	return		;funcret
  4584  00308E                     __end_of_verifica_dados_operacionais:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _strcpy *****************
  4588 ;; Defined at:
  4589 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  to              2   11[COMRAM] PTR unsigned char 
  4592 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4593 ;;  from            2   13[COMRAM] PTR const unsigned char 
  4594 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4597 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2   11[COMRAM] PTR unsigned char 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/1
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4607 ;;      Params:         4       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    2
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_verifica_dados_operacionais
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text15
  4622  0057AA                     __ptext15:
  4623                           	callstack 0
  4624  0057AA                     _strcpy:
  4625                           	callstack 26
  4626                           
  4627                           ;incstack = 0
  4628  0057AA  C00C  F010         	movff	strcpy@to,strcpy@cp
  4629  0057AE  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  4630  0057B2  D004               	goto	l13244
  4631  0057B4                     l13242:
  4632  0057B4  4A10               	infsnz	strcpy@cp^0,f,c
  4633  0057B6  2A11               	incf	(strcpy@cp+1)^0,f,c
  4634  0057B8  4A0E               	infsnz	strcpy@from^0,f,c
  4635  0057BA  2A0F               	incf	(strcpy@from+1)^0,f,c
  4636  0057BC                     l13244:
  4637  0057BC  C00E  FFD9         	movff	strcpy@from,fsr2l
  4638  0057C0  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  4639  0057C4  C010  FFE1         	movff	strcpy@cp,fsr1l
  4640  0057C8  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  4641  0057CC  CFDF FFE7          	movff	indf2,indf1
  4642  0057D0  50E7               	movf	indf1,w,c
  4643  0057D2  B4D8               	btfsc	status,2,c
  4644  0057D4  0012               	return	
  4645  0057D6  D7EE               	goto	l13242
  4646  0057D8                     __end_of_strcpy:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function _rawhora *****************
  4650 ;; Defined at:
  4651 ;;		line 668 in file "bibliotecas/GPS.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2    9[COMRAM] PTR unsigned char 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/1
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         2       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        2 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    2
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_verifica_dados_operacionais
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text16
  4680  005C14                     __ptext16:
  4681                           	callstack 0
  4682  005C14                     _rawhora:
  4683                           	callstack 26
  4684                           
  4685                           ;GPS.c: 670: return rawTime;
  4686                           
  4687                           ;incstack = 0
  4688  005C14  0ED1               	movlw	low _rawTime
  4689  005C16  6E0A               	movwf	?_rawhora^0,c
  4690  005C18  0E01               	movlw	high _rawTime
  4691  005C1A  6E0B               	movwf	(?_rawhora+1)^0,c
  4692  005C1C  0012               	return		;funcret
  4693  005C1E                     __end_of_rawhora:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _rawdata *****************
  4697 ;; Defined at:
  4698 ;;		line 673 in file "bibliotecas/GPS.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  2    9[COMRAM] PTR unsigned char 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/1
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4712 ;;      Params:         2       0       0       0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4715 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4716 ;;Total ram usage:        2 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_verifica_dados_operacionais
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text17
  4727  005C1E                     __ptext17:
  4728                           	callstack 0
  4729  005C1E                     _rawdata:
  4730                           	callstack 26
  4731                           
  4732                           ;GPS.c: 675: return rawDate;
  4733                           
  4734                           ;incstack = 0
  4735  005C1E  0EE4               	movlw	low _rawDate
  4736  005C20  6E0A               	movwf	?_rawdata^0,c
  4737  005C22  0E01               	movlw	high _rawDate
  4738  005C24  6E0B               	movwf	(?_rawdata+1)^0,c
  4739  005C26  0012               	return		;funcret
  4740  005C28                     __end_of_rawdata:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function _longitude *****************
  4744 ;; Defined at:
  4745 ;;		line 663 in file "bibliotecas/GPS.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  2    9[COMRAM] PTR unsigned char 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/1
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         2       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    2
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_verifica_dados_operacionais
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text18
  4774  005C28                     __ptext18:
  4775                           	callstack 0
  4776  005C28                     _longitude:
  4777                           	callstack 26
  4778                           
  4779                           ;GPS.c: 665: return rawLongitude;
  4780                           
  4781                           ;incstack = 0
  4782  005C28  0EA5               	movlw	low _rawLongitude
  4783  005C2A  6E0A               	movwf	?_longitude^0,c
  4784  005C2C  0E01               	movlw	high _rawLongitude
  4785  005C2E  6E0B               	movwf	(?_longitude+1)^0,c
  4786  005C30  0012               	return		;funcret
  4787  005C32                     __end_of_longitude:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _latitude *****************
  4791 ;; Defined at:
  4792 ;;		line 658 in file "bibliotecas/GPS.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  2    9[COMRAM] PTR unsigned char 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 3F/1
  4803 ;;		On exit  : 3F/1
  4804 ;;		Unchanged: 3F/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         2       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        2 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    2
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_verifica_dados_operacionais
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text19
  4821  005C32                     __ptext19:
  4822                           	callstack 0
  4823  005C32                     _latitude:
  4824                           	callstack 26
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;GPS.c: 660: return rawLatitude;
  4828                           
  4829                           ;incstack = 0
  4830  005C32  0EBE               	movlw	low _rawLatitude
  4831  005C34  6E0A               	movwf	?_latitude^0,c
  4832  005C36  0E01               	movlw	high _rawLatitude
  4833  005C38  6E0B               	movwf	(?_latitude+1)^0,c
  4834                           
  4835                           ; BSR set to: 1
  4836  005C3A  0012               	return		;funcret
  4837  005C3C                     __end_of_latitude:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function ___fttol *****************
  4841 ;; Defined at:
  4842 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  f1              3   42[COMRAM] float 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  lval            4   52[COMRAM] unsigned long 
  4847 ;;  exp1            1   56[COMRAM] unsigned char 
  4848 ;;  sign1           1   51[COMRAM] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  4   42[COMRAM] long 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4858 ;;      Params:         4       0       0       0       0       0       0       0       0
  4859 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4860 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4861 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4862 ;;Total ram usage:       15 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    2
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_verifica_dados_operacionais
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text20
  4873  003F98                     __ptext20:
  4874                           	callstack 0
  4875  003F98                     ___fttol:
  4876                           	callstack 26
  4877                           
  4878                           ; BSR set to: 1
  4879                           ;incstack = 0
  4880  003F98  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4881  003F9C  6A30               	clrf	(??___fttol+1)^0,c
  4882  003F9E  6A31               	clrf	(??___fttol+2)^0,c
  4883  003FA0  342C               	rlcf	(___fttol@f1+1)^0,w,c
  4884  003FA2  362F               	rlcf	??___fttol^0,f,c
  4885  003FA4  E301               	bnc	u10461
  4886  003FA6  8030               	bsf	(??___fttol+1)^0,0,c
  4887  003FA8                     u10461:
  4888  003FA8  502F               	movf	??___fttol^0,w,c
  4889  003FAA  6E39               	movwf	___fttol@exp1^0,c
  4890  003FAC  5039               	movf	___fttol@exp1^0,w,c
  4891  003FAE  A4D8               	btfss	status,2,c
  4892  003FB0  D009               	goto	l9562
  4893  003FB2                     u10470:
  4894  003FB2  0E00               	movlw	0
  4895  003FB4  6E2B               	movwf	?___fttol^0,c
  4896  003FB6  0E00               	movlw	0
  4897  003FB8  6E2C               	movwf	(?___fttol+1)^0,c
  4898  003FBA  0E00               	movlw	0
  4899  003FBC  6E2D               	movwf	(?___fttol+2)^0,c
  4900  003FBE  0E00               	movlw	0
  4901  003FC0  6E2E               	movwf	(?___fttol+3)^0,c
  4902  003FC2  0012               	return	
  4903  003FC4                     l9562:
  4904  003FC4  0E17               	movlw	23
  4905  003FC6  6E2F               	movwf	??___fttol^0,c
  4906  003FC8  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4907  003FCC  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4908  003FD0  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4909  003FD4  282F               	incf	??___fttol^0,w,c
  4910  003FD6  6E33               	movwf	(??___fttol+4)^0,c
  4911  003FD8  D004               	goto	u10480
  4912  003FDA                     u10485:
  4913  003FDA  90D8               	bcf	status,0,c
  4914  003FDC  3232               	rrcf	(??___fttol+3)^0,f,c
  4915  003FDE  3231               	rrcf	(??___fttol+2)^0,f,c
  4916  003FE0  3230               	rrcf	(??___fttol+1)^0,f,c
  4917  003FE2                     u10480:
  4918  003FE2  2E33               	decfsz	(??___fttol+4)^0,f,c
  4919  003FE4  D7FA               	goto	u10485
  4920  003FE6  5030               	movf	(??___fttol+1)^0,w,c
  4921  003FE8  6E34               	movwf	___fttol@sign1^0,c
  4922  003FEA  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  4923  003FEC  0EFF               	movlw	255
  4924  003FEE  162B               	andwf	___fttol@f1^0,f,c
  4925  003FF0  0EFF               	movlw	255
  4926  003FF2  162C               	andwf	(___fttol@f1+1)^0,f,c
  4927  003FF4  0E00               	movlw	0
  4928  003FF6  162D               	andwf	(___fttol@f1+2)^0,f,c
  4929  003FF8  502B               	movf	___fttol@f1^0,w,c
  4930  003FFA  6E35               	movwf	___fttol@lval^0,c
  4931  003FFC  502C               	movf	(___fttol@f1+1)^0,w,c
  4932  003FFE  6E36               	movwf	(___fttol@lval+1)^0,c
  4933  004000  502D               	movf	(___fttol@f1+2)^0,w,c
  4934  004002  6E37               	movwf	(___fttol@lval+2)^0,c
  4935  004004  6A38               	clrf	(___fttol@lval+3)^0,c
  4936  004006  0E8E               	movlw	142
  4937  004008  5E39               	subwf	___fttol@exp1^0,f,c
  4938  00400A  AE39               	btfss	___fttol@exp1^0,7,c
  4939  00400C  D00D               	goto	l9584
  4940  00400E  5039               	movf	___fttol@exp1^0,w,c
  4941  004010  0A80               	xorlw	128
  4942  004012  0F8F               	addlw	143
  4943  004014  A0D8               	btfss	status,0,c
  4944  004016  D7CD               	goto	u10470
  4945  004018                     l9580:
  4946  004018  90D8               	bcf	status,0,c
  4947  00401A  3238               	rrcf	(___fttol@lval+3)^0,f,c
  4948  00401C  3237               	rrcf	(___fttol@lval+2)^0,f,c
  4949  00401E  3236               	rrcf	(___fttol@lval+1)^0,f,c
  4950  004020  3235               	rrcf	___fttol@lval^0,f,c
  4951  004022  3E39               	incfsz	___fttol@exp1^0,f,c
  4952  004024  D7F9               	goto	l9580
  4953  004026  D00D               	goto	u10520
  4954  004028                     l9584:
  4955  004028  0E17               	movlw	23
  4956  00402A  6439               	cpfsgt	___fttol@exp1^0,c
  4957  00402C  D007               	goto	l9592
  4958  00402E  D7C1               	goto	u10470
  4959  004030                     l9590:
  4960  004030  90D8               	bcf	status,0,c
  4961  004032  3635               	rlcf	___fttol@lval^0,f,c
  4962  004034  3636               	rlcf	(___fttol@lval+1)^0,f,c
  4963  004036  3637               	rlcf	(___fttol@lval+2)^0,f,c
  4964  004038  3638               	rlcf	(___fttol@lval+3)^0,f,c
  4965  00403A  0639               	decf	___fttol@exp1^0,f,c
  4966  00403C                     l9592:
  4967  00403C  5039               	movf	___fttol@exp1^0,w,c
  4968  00403E  A4D8               	btfss	status,2,c
  4969  004040  D7F7               	goto	l9590
  4970  004042                     u10520:
  4971  004042  5034               	movf	___fttol@sign1^0,w,c
  4972  004044  B4D8               	btfsc	status,2,c
  4973  004046  D008               	goto	l9598
  4974  004048  1E38               	comf	(___fttol@lval+3)^0,f,c
  4975  00404A  1E37               	comf	(___fttol@lval+2)^0,f,c
  4976  00404C  1E36               	comf	(___fttol@lval+1)^0,f,c
  4977  00404E  6C35               	negf	___fttol@lval^0,c
  4978  004050  0E00               	movlw	0
  4979  004052  2236               	addwfc	(___fttol@lval+1)^0,f,c
  4980  004054  2237               	addwfc	(___fttol@lval+2)^0,f,c
  4981  004056  2238               	addwfc	(___fttol@lval+3)^0,f,c
  4982  004058                     l9598:
  4983  004058  C035  F02B         	movff	___fttol@lval,?___fttol
  4984  00405C  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4985  004060  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4986  004064  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4987  004068  0012               	return		;funcret
  4988  00406A                     __end_of___fttol:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function ___ftmul *****************
  4992 ;; Defined at:
  4993 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  f1              3   27[COMRAM] float 
  4996 ;;  f2              3   30[COMRAM] float 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  4999 ;;  sign            1   41[COMRAM] unsigned char 
  5000 ;;  cntr            1   40[COMRAM] unsigned char 
  5001 ;;  exp             1   36[COMRAM] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  3   27[COMRAM] float 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5011 ;;      Params:         6       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5013 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5014 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5015 ;;Total ram usage:       15 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		___ftpack
  5020 ;; This function is called by:
  5021 ;;		_verifica_dados_operacionais
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text21
  5026  003CCC                     __ptext21:
  5027                           	callstack 0
  5028  003CCC                     ___ftmul:
  5029                           	callstack 25
  5030                           
  5031                           ;incstack = 0
  5032  003CCC  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5033  003CD0  6A23               	clrf	(??___ftmul+1)^0,c
  5034  003CD2  6A24               	clrf	(??___ftmul+2)^0,c
  5035  003CD4  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5036  003CD6  3622               	rlcf	??___ftmul^0,f,c
  5037  003CD8  E301               	bnc	u10391
  5038  003CDA  8023               	bsf	(??___ftmul+1)^0,0,c
  5039  003CDC                     u10391:
  5040  003CDC  5022               	movf	??___ftmul^0,w,c
  5041  003CDE  6E25               	movwf	___ftmul@exp^0,c
  5042  003CE0  5025               	movf	___ftmul@exp^0,w,c
  5043  003CE2  A4D8               	btfss	status,2,c
  5044  003CE4  D007               	goto	l9502
  5045  003CE6  0E00               	movlw	0
  5046  003CE8  6E1C               	movwf	?___ftmul^0,c
  5047  003CEA  0E00               	movlw	0
  5048  003CEC  6E1D               	movwf	(?___ftmul+1)^0,c
  5049  003CEE  0E00               	movlw	0
  5050  003CF0  6E1E               	movwf	(?___ftmul+2)^0,c
  5051  003CF2  0012               	return	
  5052  003CF4                     l9502:
  5053  003CF4  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5054  003CF8  6A23               	clrf	(??___ftmul+1)^0,c
  5055  003CFA  6A24               	clrf	(??___ftmul+2)^0,c
  5056  003CFC  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5057  003CFE  3622               	rlcf	??___ftmul^0,f,c
  5058  003D00  E301               	bnc	u10411
  5059  003D02  8023               	bsf	(??___ftmul+1)^0,0,c
  5060  003D04                     u10411:
  5061  003D04  5022               	movf	??___ftmul^0,w,c
  5062  003D06  6E2A               	movwf	___ftmul@sign^0,c
  5063  003D08  502A               	movf	___ftmul@sign^0,w,c
  5064  003D0A  A4D8               	btfss	status,2,c
  5065  003D0C  D007               	goto	l9508
  5066  003D0E  0E00               	movlw	0
  5067  003D10  6E1C               	movwf	?___ftmul^0,c
  5068  003D12  0E00               	movlw	0
  5069  003D14  6E1D               	movwf	(?___ftmul+1)^0,c
  5070  003D16  0E00               	movlw	0
  5071  003D18  6E1E               	movwf	(?___ftmul+2)^0,c
  5072  003D1A  0012               	return	
  5073  003D1C                     l9508:
  5074  003D1C  502A               	movf	___ftmul@sign^0,w,c
  5075  003D1E  0F7B               	addlw	123
  5076  003D20  2625               	addwf	___ftmul@exp^0,f,c
  5077  003D22  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5078  003D26  5021               	movf	(___ftmul@f2+2)^0,w,c
  5079  003D28  1A2A               	xorwf	___ftmul@sign^0,f,c
  5080  003D2A  0E80               	movlw	128
  5081  003D2C  162A               	andwf	___ftmul@sign^0,f,c
  5082  003D2E  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5083  003D30  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5084  003D32  0EFF               	movlw	255
  5085  003D34  161F               	andwf	___ftmul@f2^0,f,c
  5086  003D36  0EFF               	movlw	255
  5087  003D38  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5088  003D3A  0E00               	movlw	0
  5089  003D3C  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5090  003D3E  0E00               	movlw	0
  5091  003D40  6E26               	movwf	___ftmul@f3_as_product^0,c
  5092  003D42  0E00               	movlw	0
  5093  003D44  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5094  003D46  0E00               	movlw	0
  5095  003D48  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5096  003D4A  0E07               	movlw	7
  5097  003D4C  6E29               	movwf	___ftmul@cntr^0,c
  5098  003D4E                     l9522:
  5099  003D4E  A01C               	btfss	___ftmul@f1^0,0,c
  5100  003D50  D006               	goto	l9526
  5101  003D52  501F               	movf	___ftmul@f2^0,w,c
  5102  003D54  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5103  003D56  5020               	movf	(___ftmul@f2+1)^0,w,c
  5104  003D58  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5105  003D5A  5021               	movf	(___ftmul@f2+2)^0,w,c
  5106  003D5C  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5107  003D5E                     l9526:
  5108  003D5E  90D8               	bcf	status,0,c
  5109  003D60  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5110  003D62  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5111  003D64  321C               	rrcf	___ftmul@f1^0,f,c
  5112  003D66  90D8               	bcf	status,0,c
  5113  003D68  361F               	rlcf	___ftmul@f2^0,f,c
  5114  003D6A  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5115  003D6C  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5116  003D6E  2E29               	decfsz	___ftmul@cntr^0,f,c
  5117  003D70  D7EE               	goto	l9522
  5118  003D72  0E09               	movlw	9
  5119  003D74  6E29               	movwf	___ftmul@cntr^0,c
  5120  003D76                     l9532:
  5121  003D76  A01C               	btfss	___ftmul@f1^0,0,c
  5122  003D78  D006               	goto	l9536
  5123  003D7A  501F               	movf	___ftmul@f2^0,w,c
  5124  003D7C  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5125  003D7E  5020               	movf	(___ftmul@f2+1)^0,w,c
  5126  003D80  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5127  003D82  5021               	movf	(___ftmul@f2+2)^0,w,c
  5128  003D84  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5129  003D86                     l9536:
  5130  003D86  90D8               	bcf	status,0,c
  5131  003D88  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5132  003D8A  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5133  003D8C  321C               	rrcf	___ftmul@f1^0,f,c
  5134  003D8E  90D8               	bcf	status,0,c
  5135  003D90  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5136  003D92  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5137  003D94  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5138  003D96  2E29               	decfsz	___ftmul@cntr^0,f,c
  5139  003D98  D7EE               	goto	l9532
  5140  003D9A  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5141  003D9E  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5142  003DA2  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5143  003DA6  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5144  003DAA  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5145  003DAE  EC5D  F021         	call	___ftpack	;wreg free
  5146  003DB2  C00A  F01C         	movff	?___ftpack,?___ftmul
  5147  003DB6  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5148  003DBA  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5149  003DBE  0012               	return		;funcret
  5150  003DC0                     __end_of___ftmul:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function ___awtoft *****************
  5154 ;; Defined at:
  5155 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  c               2   23[COMRAM] int 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  sign            1   26[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  3   23[COMRAM] float 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5169 ;;      Params:         3       0       0       0       0       0       0       0       0
  5170 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5172 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5173 ;;Total ram usage:        4 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    3
  5176 ;; This function calls:
  5177 ;;		___ftpack
  5178 ;; This function is called by:
  5179 ;;		_verifica_dados_operacionais
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text22
  5184  005618                     __ptext22:
  5185                           	callstack 0
  5186  005618                     ___awtoft:
  5187                           	callstack 25
  5188                           
  5189                           ;incstack = 0
  5190  005618  0E00               	movlw	0
  5191  00561A  6E1B               	movwf	___awtoft@sign^0,c
  5192  00561C  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5193  00561E  D006               	goto	l9552
  5194  005620  6C18               	negf	___awtoft@c^0,c
  5195  005622  1E19               	comf	(___awtoft@c+1)^0,f,c
  5196  005624  B0D8               	btfsc	status,0,c
  5197  005626  2A19               	incf	(___awtoft@c+1)^0,f,c
  5198  005628  0E01               	movlw	1
  5199  00562A  6E1B               	movwf	___awtoft@sign^0,c
  5200  00562C                     l9552:
  5201  00562C  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5202  005630  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5203  005634  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5204  005636  0E8E               	movlw	142
  5205  005638  6E0D               	movwf	___ftpack@exp^0,c
  5206  00563A  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5207  00563E  EC5D  F021         	call	___ftpack	;wreg free
  5208  005642  C00A  F018         	movff	?___ftpack,?___awtoft
  5209  005646  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5210  00564A  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5211  00564E  0012               	return		;funcret
  5212  005650                     __end_of___awtoft:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function ___ftpack *****************
  5216 ;; Defined at:
  5217 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  arg             3    9[COMRAM] unsigned um
  5220 ;;  exp             1   12[COMRAM] unsigned char 
  5221 ;;  sign            1   13[COMRAM] unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  3    9[COMRAM] float 
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5233 ;;      Params:         5       0       0       0       0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5235 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5236 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5237 ;;Total ram usage:        8 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    2
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		___awtoft
  5244 ;;		___ftmul
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text23
  5249  0042BA                     __ptext23:
  5250                           	callstack 0
  5251  0042BA                     ___ftpack:
  5252                           	callstack 25
  5253                           
  5254                           ;incstack = 0
  5255  0042BA  500D               	movf	___ftpack@exp^0,w,c
  5256  0042BC  B4D8               	btfsc	status,2,c
  5257  0042BE  D005               	goto	u10010
  5258  0042C0  500A               	movf	___ftpack@arg^0,w,c
  5259  0042C2  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5260  0042C4  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5261  0042C6  A4D8               	btfss	status,2,c
  5262  0042C8  D00C               	goto	l9282
  5263  0042CA                     u10010:
  5264  0042CA  0E00               	movlw	0
  5265  0042CC  6E0A               	movwf	?___ftpack^0,c
  5266  0042CE  0E00               	movlw	0
  5267  0042D0  6E0B               	movwf	(?___ftpack+1)^0,c
  5268  0042D2  0E00               	movlw	0
  5269  0042D4  6E0C               	movwf	(?___ftpack+2)^0,c
  5270  0042D6  0012               	return	
  5271  0042D8                     l9280:
  5272  0042D8  2A0D               	incf	___ftpack@exp^0,f,c
  5273  0042DA  90D8               	bcf	status,0,c
  5274  0042DC  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5275  0042DE  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5276  0042E0  320A               	rrcf	___ftpack@arg^0,f,c
  5277  0042E2                     l9282:
  5278  0042E2  0E00               	movlw	0
  5279  0042E4  140A               	andwf	___ftpack@arg^0,w,c
  5280  0042E6  6E0F               	movwf	??___ftpack^0,c
  5281  0042E8  0E00               	movlw	0
  5282  0042EA  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5283  0042EC  6E10               	movwf	(??___ftpack+1)^0,c
  5284  0042EE  0EFE               	movlw	254
  5285  0042F0  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5286  0042F2  6E11               	movwf	(??___ftpack+2)^0,c
  5287  0042F4  500F               	movf	??___ftpack^0,w,c
  5288  0042F6  1010               	iorwf	(??___ftpack+1)^0,w,c
  5289  0042F8  1011               	iorwf	(??___ftpack+2)^0,w,c
  5290  0042FA  B4D8               	btfsc	status,2,c
  5291  0042FC  D00C               	goto	l9288
  5292  0042FE  D7EC               	goto	l9280
  5293  004300                     l9284:
  5294  004300  2A0D               	incf	___ftpack@exp^0,f,c
  5295  004302  0E01               	movlw	1
  5296  004304  260A               	addwf	___ftpack@arg^0,f,c
  5297  004306  0E00               	movlw	0
  5298  004308  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5299  00430A  0E00               	movlw	0
  5300  00430C  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5301  00430E  90D8               	bcf	status,0,c
  5302  004310  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5303  004312  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5304  004314  320A               	rrcf	___ftpack@arg^0,f,c
  5305  004316                     l9288:
  5306  004316  0E00               	movlw	0
  5307  004318  140A               	andwf	___ftpack@arg^0,w,c
  5308  00431A  6E0F               	movwf	??___ftpack^0,c
  5309  00431C  0E00               	movlw	0
  5310  00431E  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5311  004320  6E10               	movwf	(??___ftpack+1)^0,c
  5312  004322  0EFF               	movlw	255
  5313  004324  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5314  004326  6E11               	movwf	(??___ftpack+2)^0,c
  5315  004328  500F               	movf	??___ftpack^0,w,c
  5316  00432A  1010               	iorwf	(??___ftpack+1)^0,w,c
  5317  00432C  1011               	iorwf	(??___ftpack+2)^0,w,c
  5318  00432E  B4D8               	btfsc	status,2,c
  5319  004330  D006               	goto	l9292
  5320  004332  D7E6               	goto	l9284
  5321  004334                     l9290:
  5322  004334  060D               	decf	___ftpack@exp^0,f,c
  5323  004336  90D8               	bcf	status,0,c
  5324  004338  360A               	rlcf	___ftpack@arg^0,f,c
  5325  00433A  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5326  00433C  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  5327  00433E                     l9292:
  5328  00433E  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  5329  004340  D003               	goto	u10050
  5330  004342  0E02               	movlw	2
  5331  004344  600D               	cpfslt	___ftpack@exp^0,c
  5332  004346  D7F6               	goto	l9290
  5333  004348                     u10050:
  5334  004348  A00D               	btfss	___ftpack@exp^0,0,c
  5335  00434A  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  5336  00434C  90D8               	bcf	status,0,c
  5337  00434E  320D               	rrcf	___ftpack@exp^0,f,c
  5338  004350  500D               	movf	___ftpack@exp^0,w,c
  5339  004352  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  5340  004354  500E               	movf	___ftpack@sign^0,w,c
  5341  004356  A4D8               	btfss	status,2,c
  5342  004358  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  5343  00435A  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  5344  00435E  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  5345  004362  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  5346  004366  0012               	return		;funcret
  5347  004368                     __end_of___ftpack:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _Speed *****************
  5351 ;; Defined at:
  5352 ;;		line 685 in file "bibliotecas/GPS.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2    9[COMRAM] PTR unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:         2       0       0       0       0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5369 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5370 ;;Total ram usage:        2 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    2
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_verifica_dados_operacionais
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text24
  5381  005C3C                     __ptext24:
  5382                           	callstack 0
  5383  005C3C                     _Speed:
  5384                           	callstack 26
  5385                           
  5386                           ;GPS.c: 687: return rawSpeed;
  5387                           
  5388                           ;incstack = 0
  5389  005C3C  0E6A               	movlw	low _rawSpeed
  5390  005C3E  6E0A               	movwf	?_Speed^0,c
  5391  005C40  0E02               	movlw	high _rawSpeed
  5392  005C42  6E0B               	movwf	(?_Speed+1)^0,c
  5393  005C44  0012               	return		;funcret
  5394  005C46                     __end_of_Speed:
  5395                           	callstack 0
  5396                           
  5397 ;; *************** function _mostra_dados_display *****************
  5398 ;; Defined at:
  5399 ;;		line 691 in file "bibliotecas/GPS.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5417 ;;Total ram usage:        0 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    5
  5420 ;; This function calls:
  5421 ;;		_escreve_frase_ram_lcd
  5422 ;;		_posicao_cursor_lcd
  5423 ;; This function is called by:
  5424 ;;		_troca_de_tela
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text25
  5429  0057D8                     __ptext25:
  5430                           	callstack 0
  5431  0057D8                     _mostra_dados_display:
  5432                           	callstack 23
  5433                           
  5434                           ;GPS.c: 693: posicao_cursor_lcd(1,4);
  5435                           
  5436                           ;incstack = 0
  5437  0057D8  0E04               	movlw	4
  5438  0057DA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5439  0057DC  0E01               	movlw	1
  5440  0057DE  EC58  F027         	call	_posicao_cursor_lcd
  5441                           
  5442                           ;GPS.c: 694: escreve_frase_ram_lcd(rawLatitude);
  5443  0057E2  0EBE               	movlw	low _rawLatitude
  5444  0057E4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5445  0057E6  0E01               	movlw	high _rawLatitude
  5446  0057E8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5447  0057EA  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5448                           
  5449                           ;GPS.c: 695: posicao_cursor_lcd(2,4);
  5450  0057EE  0E04               	movlw	4
  5451  0057F0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5452  0057F2  0E02               	movlw	2
  5453  0057F4  EC58  F027         	call	_posicao_cursor_lcd
  5454                           
  5455                           ;GPS.c: 696: escreve_frase_ram_lcd(rawLongitude);
  5456  0057F8  0EA5               	movlw	low _rawLongitude
  5457  0057FA  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5458  0057FC  0E01               	movlw	high _rawLongitude
  5459  0057FE  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5460  005800  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5461  005804  0012               	return		;funcret
  5462  005806                     __end_of_mostra_dados_display:
  5463                           	callstack 0
  5464                           
  5465 ;; *************** function _escreve_inteiro_lcd *****************
  5466 ;; Defined at:
  5467 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  valor           4   42[COMRAM] long 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  texto           7   46[COMRAM] unsigned char [7]
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         4       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5484 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       11 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    5
  5488 ;; This function calls:
  5489 ;;		_escreve_frase_ram_lcd
  5490 ;;		_ltoa
  5491 ;; This function is called by:
  5492 ;;		_troca_de_tela
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text26
  5497  005564                     __ptext26:
  5498                           	callstack 0
  5499  005564                     _escreve_inteiro_lcd:
  5500                           	callstack 23
  5501                           
  5502                           ;display_lcd.c: 378: char texto[7] = "000000";
  5503                           
  5504                           ;incstack = 0
  5505  005564  EE21  F0F3         	lfsr	2,escreve_inteiro_lcd@F3223
  5506  005568  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
  5507  00556C  0E06               	movlw	6
  5508  00556E                     u15871:
  5509  00556E  CFDB FFE3          	movff	plusw2,plusw1
  5510  005572  06E8               	decf	wreg,f,c
  5511  005574  E2FC               	bc	u15871
  5512                           
  5513                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  5514  005576  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5515  005578  6E23               	movwf	ltoa@buf^0,c
  5516  00557A  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
  5517  00557E  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  5518  005582  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  5519  005586  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  5520  00558A  0E00               	movlw	0
  5521  00558C  6E29               	movwf	(ltoa@base+1)^0,c
  5522  00558E  0E0A               	movlw	10
  5523  005590  6E28               	movwf	ltoa@base^0,c
  5524  005592  EC2F  F02A         	call	_ltoa	;wreg free
  5525                           
  5526                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5527  005596  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5528  005598  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5529  00559A  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5530  00559C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5531  0055A0  0012               	return		;funcret
  5532  0055A2                     __end_of_escreve_inteiro_lcd:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _ltoa *****************
  5536 ;; Defined at:
  5537 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  buf             1   34[COMRAM] PTR unsigned char 
  5540 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5541 ;;  val             4   35[COMRAM] long 
  5542 ;;  base            2   39[COMRAM] int 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  cp              1    0        PTR unsigned char 
  5545 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      PTR unsigned char 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5555 ;;      Params:         7       0       0       0       0       0       0       0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5558 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5559 ;;Total ram usage:        8 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    4
  5562 ;; This function calls:
  5563 ;;		_ultoa
  5564 ;; This function is called by:
  5565 ;;		_escreve_inteiro_lcd
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text27
  5570  00545E                     __ptext27:
  5571                           	callstack 0
  5572  00545E                     _ltoa:
  5573                           	callstack 23
  5574                           
  5575                           ;incstack = 0
  5576  00545E  AE27               	btfss	(ltoa@val+3)^0,7,c
  5577  005460  D00E               	goto	l12728
  5578  005462  5023               	movf	ltoa@buf^0,w,c
  5579  005464  6ED9               	movwf	fsr2l,c
  5580  005466  6ADA               	clrf	fsr2h,c
  5581  005468  0E2D               	movlw	45
  5582  00546A  6EDF               	movwf	indf2,c
  5583  00546C  2A23               	incf	ltoa@buf^0,f,c
  5584  00546E  1E27               	comf	(ltoa@val+3)^0,f,c
  5585  005470  1E26               	comf	(ltoa@val+2)^0,f,c
  5586  005472  1E25               	comf	(ltoa@val+1)^0,f,c
  5587  005474  6C24               	negf	ltoa@val^0,c
  5588  005476  0E00               	movlw	0
  5589  005478  2225               	addwfc	(ltoa@val+1)^0,f,c
  5590  00547A  2226               	addwfc	(ltoa@val+2)^0,f,c
  5591  00547C  2227               	addwfc	(ltoa@val+3)^0,f,c
  5592  00547E                     l12728:
  5593  00547E  C023  F017         	movff	ltoa@buf,ultoa@buf
  5594  005482  C024  F018         	movff	ltoa@val,ultoa@val
  5595  005486  C025  F019         	movff	ltoa@val+1,ultoa@val+1
  5596  00548A  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
  5597  00548E  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
  5598  005492  C028  F01C         	movff	ltoa@base,ultoa@base
  5599  005496  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
  5600  00549A  EC58  F01F         	call	_ultoa	;wreg free
  5601  00549E  0012               	return		;funcret
  5602  0054A0                     __end_of_ltoa:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _ultoa *****************
  5606 ;; Defined at:
  5607 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  buf             1   22[COMRAM] PTR unsigned char 
  5610 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5611 ;;  val             4   23[COMRAM] unsigned long 
  5612 ;;  base            2   27[COMRAM] int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  v               4   29[COMRAM] unsigned long 
  5615 ;;  c               1   33[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      PTR unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5625 ;;      Params:         7       0       0       0       0       0       0       0       0
  5626 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5628 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5629 ;;Total ram usage:       12 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		___lldiv
  5634 ;;		___llmod
  5635 ;; This function is called by:
  5636 ;;		_ltoa
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text28
  5641  003EB0                     __ptext28:
  5642                           	callstack 0
  5643  003EB0                     _ultoa:
  5644                           	callstack 23
  5645                           
  5646                           ;incstack = 0
  5647  003EB0  C018  F01E         	movff	ultoa@val,ultoa@v
  5648  003EB4  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
  5649  003EB8  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
  5650  003EBC  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
  5651  003EC0                     l12696:
  5652  003EC0  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
  5653  003EC4  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
  5654  003EC8  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
  5655  003ECC  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
  5656  003ED0  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5657  003ED4  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5658  003ED8  0E00               	movlw	0
  5659  003EDA  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5660  003EDC  0EFF               	movlw	-1
  5661  003EDE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5662  003EE0  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5663  003EE2  ECF4  F024         	call	___lldiv	;wreg free
  5664  003EE6  C00A  F01E         	movff	?___lldiv,ultoa@v
  5665  003EEA  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
  5666  003EEE  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
  5667  003EF2  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
  5668  003EF6  2A17               	incf	ultoa@buf^0,f,c
  5669  003EF8  501E               	movf	ultoa@v^0,w,c
  5670  003EFA  101F               	iorwf	(ultoa@v+1)^0,w,c
  5671  003EFC  1020               	iorwf	(ultoa@v+2)^0,w,c
  5672  003EFE  1021               	iorwf	(ultoa@v+3)^0,w,c
  5673  003F00  A4D8               	btfss	status,2,c
  5674  003F02  D7DE               	goto	l12696
  5675  003F04  5017               	movf	ultoa@buf^0,w,c
  5676  003F06  6ED9               	movwf	fsr2l,c
  5677  003F08  6ADA               	clrf	fsr2h,c
  5678  003F0A  0E00               	movlw	0
  5679  003F0C  6EDF               	movwf	indf2,c
  5680  003F0E  0617               	decf	ultoa@buf^0,f,c
  5681  003F10                     l12706:
  5682  003F10  C018  F00A         	movff	ultoa@val,___llmod@dividend
  5683  003F14  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
  5684  003F18  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
  5685  003F1C  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
  5686  003F20  C01C  F00E         	movff	ultoa@base,___llmod@divisor
  5687  003F24  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
  5688  003F28  0E00               	movlw	0
  5689  003F2A  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
  5690  003F2C  0EFF               	movlw	-1
  5691  003F2E  6E10               	movwf	(___llmod@divisor+2)^0,c
  5692  003F30  6E11               	movwf	(___llmod@divisor+3)^0,c
  5693  003F32  ECC3  F026         	call	___llmod	;wreg free
  5694  003F36  500A               	movf	?___llmod^0,w,c
  5695  003F38  6E22               	movwf	ultoa@c^0,c
  5696  003F3A  C018  F00A         	movff	ultoa@val,___lldiv@dividend
  5697  003F3E  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
  5698  003F42  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
  5699  003F46  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
  5700  003F4A  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5701  003F4E  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5702  003F52  0E00               	movlw	0
  5703  003F54  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5704  003F56  0EFF               	movlw	-1
  5705  003F58  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5706  003F5A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5707  003F5C  ECF4  F024         	call	___lldiv	;wreg free
  5708  003F60  C00A  F018         	movff	?___lldiv,ultoa@val
  5709  003F64  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
  5710  003F68  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
  5711  003F6C  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
  5712  003F70  0E09               	movlw	9
  5713  003F72  6422               	cpfsgt	ultoa@c^0,c
  5714  003F74  D002               	goto	l2468
  5715  003F76  0E07               	movlw	7
  5716  003F78  2622               	addwf	ultoa@c^0,f,c
  5717  003F7A                     l2468:
  5718  003F7A  0E30               	movlw	48
  5719  003F7C  2622               	addwf	ultoa@c^0,f,c
  5720  003F7E  5017               	movf	ultoa@buf^0,w,c
  5721  003F80  6ED9               	movwf	fsr2l,c
  5722  003F82  6ADA               	clrf	fsr2h,c
  5723  003F84  C022  FFDF         	movff	ultoa@c,indf2
  5724  003F88  0617               	decf	ultoa@buf^0,f,c
  5725  003F8A  5018               	movf	ultoa@val^0,w,c
  5726  003F8C  1019               	iorwf	(ultoa@val+1)^0,w,c
  5727  003F8E  101A               	iorwf	(ultoa@val+2)^0,w,c
  5728  003F90  101B               	iorwf	(ultoa@val+3)^0,w,c
  5729  003F92  B4D8               	btfsc	status,2,c
  5730  003F94  0012               	return	
  5731  003F96  D7BC               	goto	l12706
  5732  003F98                     __end_of_ultoa:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function _escreve_cmd_lcd *****************
  5736 ;; Defined at:
  5737 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  comando         1    wreg     unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  comando         1   11[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0
  5752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    3
  5758 ;; This function calls:
  5759 ;;		_delay
  5760 ;; This function is called by:
  5761 ;;		_init_lcd
  5762 ;;		_mensagem_inicial
  5763 ;;		_troca_de_tela
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text29
  5768  004856                     __ptext29:
  5769                           	callstack 0
  5770  004856                     _escreve_cmd_lcd:
  5771                           	callstack 26
  5772                           
  5773                           ;incstack = 0
  5774                           ;escreve_cmd_lcd@comando stored from wreg
  5775  004856  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  5776                           
  5777                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5778  004858  9483               	bcf	131,2,c	;volatile
  5779                           
  5780                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5781  00485A  9283               	bcf	131,1,c	;volatile
  5782                           
  5783                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5784  00485C  9083               	bcf	131,0,c	;volatile
  5785                           
  5786                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5787  00485E  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  5788  004860  D002               	goto	l191
  5789  004862  8883               	bsf	131,4,c	;volatile
  5790  004864  D001               	goto	l13130
  5791  004866                     l191:
  5792                           
  5793                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5794  004866  9883               	bcf	131,4,c	;volatile
  5795  004868                     l13130:
  5796                           
  5797                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5798  004868  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  5799  00486A  D002               	goto	l193
  5800  00486C  8A83               	bsf	131,5,c	;volatile
  5801  00486E  D001               	goto	l13134
  5802  004870                     l193:
  5803                           
  5804                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5805  004870  9A83               	bcf	131,5,c	;volatile
  5806  004872                     l13134:
  5807                           
  5808                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5809  004872  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  5810  004874  D002               	goto	l195
  5811  004876  8C83               	bsf	131,6,c	;volatile
  5812  004878  D001               	goto	l13138
  5813  00487A                     l195:
  5814                           
  5815                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5816  00487A  9C83               	bcf	131,6,c	;volatile
  5817  00487C                     l13138:
  5818                           
  5819                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5820  00487C  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  5821  00487E  D002               	goto	l197
  5822  004880  8E83               	bsf	131,7,c	;volatile
  5823  004882  D001               	goto	l198
  5824  004884                     l197:
  5825                           
  5826                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5827  004884  9E83               	bcf	131,7,c	;volatile
  5828  004886                     l198:
  5829                           
  5830                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5831  004886  8083               	bsf	131,0,c	;volatile
  5832                           
  5833                           ;display_lcd.c: 181: delay();
  5834  004888  EC61  F02D         	call	_delay	;wreg free
  5835                           
  5836                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5837  00488C  9083               	bcf	131,0,c	;volatile
  5838                           
  5839                           ;display_lcd.c: 183: delay();
  5840  00488E  EC61  F02D         	call	_delay	;wreg free
  5841                           
  5842                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5843  004892  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  5844  004894  D002               	goto	l199
  5845  004896  8883               	bsf	131,4,c	;volatile
  5846  004898  D001               	goto	l200
  5847  00489A                     l199:
  5848                           
  5849                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5850  00489A  9883               	bcf	131,4,c	;volatile
  5851  00489C                     l200:
  5852                           
  5853                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5854  00489C  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  5855  00489E  D002               	goto	l201
  5856  0048A0  8A83               	bsf	131,5,c	;volatile
  5857  0048A2  D001               	goto	l202
  5858  0048A4                     l201:
  5859                           
  5860                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5861  0048A4  9A83               	bcf	131,5,c	;volatile
  5862  0048A6                     l202:
  5863                           
  5864                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5865  0048A6  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  5866  0048A8  D002               	goto	l203
  5867  0048AA  8C83               	bsf	131,6,c	;volatile
  5868  0048AC  D001               	goto	l204
  5869  0048AE                     l203:
  5870                           
  5871                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5872  0048AE  9C83               	bcf	131,6,c	;volatile
  5873  0048B0                     l204:
  5874                           
  5875                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5876  0048B0  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  5877  0048B2  D002               	goto	l205
  5878  0048B4  8E83               	bsf	131,7,c	;volatile
  5879  0048B6  D001               	goto	l206
  5880  0048B8                     l205:
  5881                           
  5882                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5883  0048B8  9E83               	bcf	131,7,c	;volatile
  5884  0048BA                     l206:
  5885                           
  5886                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5887  0048BA  8083               	bsf	131,0,c	;volatile
  5888                           
  5889                           ;display_lcd.c: 197: delay();
  5890  0048BC  EC61  F02D         	call	_delay	;wreg free
  5891                           
  5892                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5893  0048C0  9083               	bcf	131,0,c	;volatile
  5894                           
  5895                           ;display_lcd.c: 199: delay();
  5896  0048C2  EC61  F02D         	call	_delay	;wreg free
  5897                           
  5898                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5899  0048C6  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  5900  0048C8  B4D8               	btfsc	status,2,c
  5901  0048CA  D008               	goto	u15860
  5902  0048CC  0E02               	movlw	2
  5903  0048CE  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5904  0048D0  B4D8               	btfsc	status,2,c
  5905  0048D2  D004               	goto	u15860
  5906  0048D4  0E03               	movlw	3
  5907  0048D6  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5908  0048D8  A4D8               	btfss	status,2,c
  5909  0048DA  0012               	return	
  5910  0048DC                     u15860:
  5911                           
  5912                           ;display_lcd.c: 205: { delay(); }
  5913  0048DC  EC61  F02D         	call	_delay	;wreg free
  5914  0048E0  0012               	return		;funcret
  5915  0048E2                     __end_of_escreve_cmd_lcd:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function _verifica_fence *****************
  5919 ;; Defined at:
  5920 ;;		line 275 in file "main.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 3E/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5936 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5937 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5938 ;;Total ram usage:        1 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    8
  5941 ;; This function calls:
  5942 ;;		_latitude_to_convert
  5943 ;;		_longitude_to_convert
  5944 ;;		_monta_sd
  5945 ;;		_recebe_dado_gps
  5946 ;;		_verifica_plausibilidade_lat
  5947 ;;		_verifica_plausibilidade_long
  5948 ;; This function is called by:
  5949 ;;		_verifica_dados_operacionais
  5950 ;;		_disparo_gravacao
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text30
  5955  004F0E                     __ptext30:
  5956                           	callstack 0
  5957  004F0E                     _verifica_fence:
  5958                           	callstack 20
  5959                           
  5960                           ;main.c: 277: recebe_dado_gps();
  5961                           
  5962                           ;incstack = 0
  5963  004F0E  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  5964                           
  5965                           ;main.c: 278: longitude_to_convert();
  5966  004F12  EC35  F025         	call	_longitude_to_convert	;wreg free
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;main.c: 279: latitude_to_convert();
  5970  004F16  EC72  F025         	call	_latitude_to_convert	;wreg free
  5971                           
  5972                           ;main.c: 280: fence_flag[0].point = verifica_plausibilidade_long();
  5973  004F1A  EC28  F027         	call	_verifica_plausibilidade_long	;wreg free
  5974  004F1E  6E43               	movwf	??_verifica_fence^0,c
  5975  004F20  0100               	movlb	0	; () banked
  5976  004F22  51E7               	movf	_fence_flag& (0+255),w,b
  5977  004F24  1843               	xorwf	??_verifica_fence^0,w,c
  5978  004F26  0BFE               	andlw	-2
  5979  004F28  1843               	xorwf	??_verifica_fence^0,w,c
  5980  004F2A  6FE7               	movwf	_fence_flag& (0+255),b
  5981                           
  5982                           ;main.c: 281: fence_flag[1].point = verifica_plausibilidade_lat();
  5983  004F2C  ECAF  F025         	call	_verifica_plausibilidade_lat	;wreg free
  5984  004F30  6E43               	movwf	??_verifica_fence^0,c
  5985  004F32  0100               	movlb	0	; () banked
  5986  004F34  51E8               	movf	(_fence_flag+1)& (0+255),w,b
  5987  004F36  1843               	xorwf	??_verifica_fence^0,w,c
  5988  004F38  0BFE               	andlw	-2
  5989  004F3A  1843               	xorwf	??_verifica_fence^0,w,c
  5990  004F3C  6FE8               	movwf	(_fence_flag+1)& (0+255),b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;main.c: 286: if(fence_flag[0].point || fence_flag[1].point)
  5994  004F3E  B1E7               	btfsc	_fence_flag& (0+255),0,b
  5995  004F40  D002               	goto	u15900
  5996                           
  5997                           ; BSR set to: 0
  5998  004F42  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  5999  004F44  D009               	goto	l1573
  6000  004F46                     u15900:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;main.c: 287: {;main.c: 288: fence_flag[2].point = 1;
  6004  004F46  81E9               	bsf	(_fence_flag+2)& (0+255),0,b
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;main.c: 289: monta_sd(4, "0");
  6008  004F48  0E7A               	movlw	low STR_20
  6009  004F4A  6E10               	movwf	monta_sd@dado^0,c
  6010  004F4C  0E62               	movlw	high STR_20
  6011  004F4E  6E11               	movwf	(monta_sd@dado+1)^0,c
  6012  004F50  0E04               	movlw	4
  6013  004F52  EC03  F00B         	call	_monta_sd
  6014                           
  6015                           ;main.c: 290: }
  6016  004F56  0012               	return	
  6017  004F58                     l1573:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;main.c: 291: else;main.c: 292: {;main.c: 293: fence_flag[2].point = 0;
  6021  004F58  91E9               	bcf	(_fence_flag+2)& (0+255),0,b
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;main.c: 294: monta_sd(4, "1");
  6025  004F5A  0E2C               	movlw	low (STR_3+8)
  6026  004F5C  6E10               	movwf	monta_sd@dado^0,c
  6027  004F5E  0E62               	movlw	high (STR_3+8)
  6028  004F60  6E11               	movwf	(monta_sd@dado+1)^0,c
  6029  004F62  0E04               	movlw	4
  6030  004F64  EC03  F00B         	call	_monta_sd
  6031  004F68  0012               	return		;funcret
  6032  004F6A                     __end_of_verifica_fence:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _verifica_plausibilidade_long *****************
  6036 ;; Defined at:
  6037 ;;		line 311 in file "bibliotecas/fence.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;		None
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  posicao         1    9[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  1    wreg      unsigned char 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 3F/1
  6048 ;;		On exit  : 3F/1
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6054 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        1 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    3
  6058 ;; This function calls:
  6059 ;;		_posicao_long
  6060 ;; This function is called by:
  6061 ;;		_verifica_fence
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text31
  6066  004E50                     __ptext31:
  6067                           	callstack 0
  6068  004E50                     _verifica_plausibilidade_long:
  6069                           	callstack 24
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;fence.c: 313: char posicao = posicao_long();
  6073                           
  6074                           ;incstack = 0
  6075  004E50  EC34  F02E         	call	_posicao_long	;wreg free
  6076  004E54  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6077                           
  6078                           ;fence.c: 314: switch(posicao)
  6079  004E56  D027               	goto	l13028
  6080  004E58                     l12978:
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6084  004E58  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6085  004E5A  D00B               	goto	l12988
  6086                           
  6087                           ; BSR set to: 1
  6088  004E5C  BF0F               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6089  004E5E  D007               	goto	u15560
  6090  004E60  510F               	movf	(_poligono_ext+15)& (0+255),w,b
  6091  004E62  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6092  004E64  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6093  004E66  E105               	bnz	l12988
  6094  004E68  050C               	decf	(_poligono_ext+12)& (0+255),w,b
  6095  004E6A  B0D8               	btfsc	status,0,c
  6096  004E6C  D002               	goto	l12988
  6097  004E6E                     u15560:
  6098                           
  6099                           ; BSR set to: 1
  6100                           ;fence.c: 320: {;fence.c: 321: return 0;
  6101  004E6E  0E00               	movlw	0
  6102  004E70  0012               	return	
  6103  004E72                     l12988:
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6107  004E72  5104               	movf	(_poligono_ext+4)& (0+255),w,b
  6108  004E74  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6109  004E76  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6110  004E78  1107               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6111  004E7A  B4D8               	btfsc	status,2,c
  6112  004E7C  D7F8               	goto	u15560
  6113                           
  6114                           ; BSR set to: 1
  6115  004E7E  510C               	movf	(_poligono_ext+12)& (0+255),w,b
  6116  004E80  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6117  004E82  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6118  004E84  110F               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6119  004E86  B4D8               	btfsc	status,2,c
  6120  004E88  D7F2               	goto	u15560
  6121                           
  6122                           ; BSR set to: 1
  6123                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6124  004E8A  0E01               	movlw	1
  6125  004E8C  0012               	return	
  6126  004E8E                     l13002:
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6130  004E8E  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6131  004E90  D007               	goto	u15590
  6132  004E92  5107               	movf	(_poligono_ext+7)& (0+255),w,b
  6133  004E94  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6134  004E96  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6135  004E98  E1EC               	bnz	l12988
  6136  004E9A  0504               	decf	(_poligono_ext+4)& (0+255),w,b
  6137  004E9C  B0D8               	btfsc	status,0,c
  6138  004E9E  D7E9               	goto	l12988
  6139  004EA0                     u15590:
  6140                           
  6141                           ; BSR set to: 1
  6142  004EA0  AF0F               	btfss	(_poligono_ext+15)& (0+255),7,b
  6143  004EA2  D7E5               	goto	u15560
  6144  004EA4  D7E6               	goto	l12988
  6145  004EA6                     l13028:
  6146                           
  6147                           ; BSR set to: 1
  6148  004EA6  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6149                           
  6150                           ; Switch size 1, requested type "simple"
  6151                           ; Number of cases is 1, Range of values is 45 to 45
  6152                           ; switch strategies available:
  6153                           ; Name         Instructions Cycles
  6154                           ; simple_byte            4     3 (average)
  6155                           ;	Chosen strategy is simple_byte
  6156  004EA8  0A2D               	xorlw	45	; case 45
  6157  004EAA  B4D8               	btfsc	status,2,c
  6158  004EAC  D7D5               	goto	l12978
  6159  004EAE  D7EF               	goto	l13002
  6160  004EB0                     __end_of_verifica_plausibilidade_long:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _posicao_long *****************
  6164 ;; Defined at:
  6165 ;;		line 646 in file "bibliotecas/GPS.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      unsigned char 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2
  6174 ;; Tracked objects:
  6175 ;;		On entry : 3F/1
  6176 ;;		On exit  : 3F/1
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    2
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_verifica_plausibilidade_long
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text32
  6194  005C68                     __ptext32:
  6195                           	callstack 0
  6196  005C68                     _posicao_long:
  6197                           	callstack 24
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;GPS.c: 649: return rawLongitude[0];
  6201                           
  6202                           ; BSR set to: 1
  6203                           ;incstack = 0
  6204  005C68  51A5               	movf	_rawLongitude& (0+255),w,b
  6205                           
  6206                           ; BSR set to: 1
  6207  005C6A  0012               	return		;funcret
  6208  005C6C                     __end_of_posicao_long:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _verifica_plausibilidade_lat *****************
  6212 ;; Defined at:
  6213 ;;		line 365 in file "bibliotecas/fence.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  posicao         1    9[COMRAM] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      unsigned char 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 3F/0
  6224 ;;		On exit  : 3F/1
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0
  6228 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6230 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6231 ;;Total ram usage:        1 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    3
  6234 ;; This function calls:
  6235 ;;		_posicao_lat
  6236 ;; This function is called by:
  6237 ;;		_verifica_fence
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text33
  6242  004B5E                     __ptext33:
  6243                           	callstack 0
  6244  004B5E                     _verifica_plausibilidade_lat:
  6245                           	callstack 24
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;fence.c: 367: char posicao = posicao_lat();
  6249                           
  6250                           ; BSR set to: 1
  6251                           ;incstack = 0
  6252  004B5E  EC31  F02E         	call	_posicao_lat	;wreg free
  6253  004B62  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6254                           
  6255                           ;fence.c: 368: switch(posicao)
  6256  004B64  D031               	goto	l13092
  6257  004B66                     l13032:
  6258                           
  6259                           ; BSR set to: 1
  6260                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  6261  004B66  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6262  004B68  D007               	goto	u15630
  6263  004B6A  5103               	movf	(_poligono_ext+3)& (0+255),w,b
  6264  004B6C  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6265  004B6E  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6266  004B70  E107               	bnz	l13042
  6267  004B72  0500               	decf	_poligono_ext& (0+255),w,b
  6268  004B74  B0D8               	btfsc	status,0,c
  6269  004B76  D004               	goto	l13042
  6270  004B78                     u15630:
  6271                           
  6272                           ; BSR set to: 1
  6273  004B78  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6274  004B7A  D002               	goto	l13042
  6275  004B7C                     u15640:
  6276                           
  6277                           ; BSR set to: 1
  6278                           ;fence.c: 374: {;fence.c: 375: return 0;
  6279  004B7C  0E00               	movlw	0
  6280  004B7E  0012               	return	
  6281  004B80                     l13042:
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  6285  004B80  5100               	movf	_poligono_ext& (0+255),w,b
  6286  004B82  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6287  004B84  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6288  004B86  1103               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6289  004B88  B4D8               	btfsc	status,2,c
  6290  004B8A  D7F8               	goto	u15640
  6291                           
  6292                           ; BSR set to: 1
  6293  004B8C  5108               	movf	(_poligono_ext+8)& (0+255),w,b
  6294  004B8E  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6295  004B90  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6296  004B92  110B               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6297  004B94  B4D8               	btfsc	status,2,c
  6298  004B96  D7F2               	goto	u15640
  6299                           
  6300                           ; BSR set to: 1
  6301                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  6302  004B98  0E01               	movlw	1
  6303  004B9A  0012               	return	
  6304  004B9C                     l13056:
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6308  004B9C  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6309  004B9E  D009               	goto	l13066
  6310                           
  6311                           ; BSR set to: 1
  6312  004BA0  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6313  004BA2  D7EC               	goto	u15640
  6314  004BA4  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6315  004BA6  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6316  004BA8  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6317  004BAA  E103               	bnz	l13066
  6318  004BAC  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6319  004BAE  A0D8               	btfss	status,0,c
  6320  004BB0  D7E5               	goto	u15640
  6321  004BB2                     l13066:
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  6325  004BB2  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6326                           
  6327                           ; BSR set to: 1
  6328  004BB4  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6329  004BB6  D7E2               	goto	u15640
  6330  004BB8  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6331  004BBA  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6332  004BBC  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6333  004BBE  E1E0               	bnz	l13042
  6334  004BC0  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6335  004BC2  A0D8               	btfss	status,0,c
  6336  004BC4  D7DB               	goto	u15640
  6337  004BC6  D7DC               	goto	l13042
  6338  004BC8                     l13092:
  6339                           
  6340                           ; BSR set to: 1
  6341  004BC8  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6342                           
  6343                           ; Switch size 1, requested type "simple"
  6344                           ; Number of cases is 1, Range of values is 45 to 45
  6345                           ; switch strategies available:
  6346                           ; Name         Instructions Cycles
  6347                           ; simple_byte            4     3 (average)
  6348                           ;	Chosen strategy is simple_byte
  6349  004BCA  0A2D               	xorlw	45	; case 45
  6350  004BCC  B4D8               	btfsc	status,2,c
  6351  004BCE  D7CB               	goto	l13032
  6352  004BD0  D7E5               	goto	l13056
  6353  004BD2                     __end_of_verifica_plausibilidade_lat:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _posicao_lat *****************
  6357 ;; Defined at:
  6358 ;;		line 652 in file "bibliotecas/GPS.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      unsigned char 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2
  6367 ;; Tracked objects:
  6368 ;;		On entry : 3F/0
  6369 ;;		On exit  : 3F/1
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    2
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_verifica_plausibilidade_lat
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text34
  6387  005C62                     __ptext34:
  6388                           	callstack 0
  6389  005C62                     _posicao_lat:
  6390                           	callstack 24
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;GPS.c: 655: return rawLatitude[0];
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;incstack = 0
  6397  005C62  0101               	movlb	1	; () banked
  6398  005C64  51BE               	movf	_rawLatitude& (0+255),w,b
  6399                           
  6400                           ; BSR set to: 1
  6401  005C66  0012               	return		;funcret
  6402  005C68                     __end_of_posicao_lat:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function _recebe_dado_gps *****************
  6406 ;; Defined at:
  6407 ;;		line 556 in file "main.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  timeout         1   10[COMRAM] unsigned char 
  6412 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0
  6423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        2 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    3
  6429 ;; This function calls:
  6430 ;;		_verifica_recep_gps
  6431 ;; This function is called by:
  6432 ;;		_verifica_fence
  6433 ;;		_disparo_gravacao
  6434 ;;		_troca_de_tela
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text35
  6439  005A62                     __ptext35:
  6440                           	callstack 0
  6441  005A62                     _recebe_dado_gps:
  6442                           	callstack 24
  6443                           
  6444                           ;main.c: 558: unsigned char flag_recebe = 0;
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;incstack = 0
  6448  005A62  0E00               	movlw	0
  6449  005A64  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6450                           
  6451                           ;main.c: 559: unsigned char timeout = 10;
  6452  005A66  0E0A               	movlw	10
  6453  005A68  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6454                           
  6455                           ;main.c: 560: while(!flag_recebe && timeout>0)
  6456  005A6A  D004               	goto	l12972
  6457  005A6C                     l12968:
  6458                           
  6459                           ;main.c: 561: {;main.c: 562: flag_recebe = verifica_recep_gps();
  6460  005A6C  EC6E  F02C         	call	_verifica_recep_gps	;wreg free
  6461  005A70  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;main.c: 563: timeout--;
  6465  005A72  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6466  005A74                     l12972:
  6467  005A74  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6468  005A76  A4D8               	btfss	status,2,c
  6469  005A78  0012               	return	
  6470  005A7A  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6471  005A7C  B4D8               	btfsc	status,2,c
  6472  005A7E  0012               	return	
  6473  005A80  D7F5               	goto	l12968
  6474  005A82                     __end_of_recebe_dado_gps:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function _verifica_recep_gps *****************
  6478 ;; Defined at:
  6479 ;;		line 720 in file "bibliotecas/GPS.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      unsigned char 
  6486 ;; Registers used:
  6487 ;;		wreg
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 3F/1
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    2
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_recebe_dado_gps
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text36
  6508  0058DC                     __ptext36:
  6509                           	callstack 0
  6510  0058DC                     _verifica_recep_gps:
  6511                           	callstack 24
  6512                           
  6513                           ;GPS.c: 722: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6514                           
  6515                           ;incstack = 0
  6516  0058DC  0101               	movlb	1	; () banked
  6517  0058DE  B14B               	btfsc	_gps_flag& (0+255),0,b
  6518                           
  6519                           ; BSR set to: 1
  6520  0058E0  A14C               	btfss	(_gps_flag+1)& (0+255),0,b
  6521  0058E2  D00E               	goto	l12216
  6522                           
  6523                           ; BSR set to: 1
  6524  0058E4  B14D               	btfsc	(_gps_flag+2)& (0+255),0,b
  6525                           
  6526                           ; BSR set to: 1
  6527  0058E6  A14E               	btfss	(_gps_flag+3)& (0+255),0,b
  6528  0058E8  D00B               	goto	l12216
  6529                           
  6530                           ; BSR set to: 1
  6531  0058EA  B14F               	btfsc	(_gps_flag+4)& (0+255),0,b
  6532                           
  6533                           ; BSR set to: 1
  6534  0058EC  A150               	btfss	(_gps_flag+5)& (0+255),0,b
  6535  0058EE  D008               	goto	l12216
  6536                           
  6537                           ; BSR set to: 1
  6538                           ;GPS.c: 723: {;GPS.c: 724: gps_flag[0].flag = 0;
  6539  0058F0  914B               	bcf	_gps_flag& (0+255),0,b
  6540                           
  6541                           ;GPS.c: 725: gps_flag[1].flag = 0;
  6542  0058F2  914C               	bcf	(_gps_flag+1)& (0+255),0,b
  6543                           
  6544                           ;GPS.c: 726: gps_flag[2].flag = 0;
  6545  0058F4  914D               	bcf	(_gps_flag+2)& (0+255),0,b
  6546                           
  6547                           ;GPS.c: 727: gps_flag[3].flag = 0;
  6548  0058F6  914E               	bcf	(_gps_flag+3)& (0+255),0,b
  6549                           
  6550                           ;GPS.c: 728: gps_flag[4].flag = 0;
  6551  0058F8  914F               	bcf	(_gps_flag+4)& (0+255),0,b
  6552                           
  6553                           ;GPS.c: 729: gps_flag[5].flag = 0;
  6554  0058FA  9150               	bcf	(_gps_flag+5)& (0+255),0,b
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;GPS.c: 730: return 1;
  6558  0058FC  0E01               	movlw	1
  6559  0058FE  0012               	return	
  6560  005900                     l12216:
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;GPS.c: 732: else;GPS.c: 733: {;GPS.c: 735: return 0;
  6564  005900  0E00               	movlw	0
  6565                           
  6566                           ; BSR set to: 1
  6567  005902  0012               	return		;funcret
  6568  005904                     __end_of_verifica_recep_gps:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _longitude_to_convert *****************
  6572 ;; Defined at:
  6573 ;;		line 627 in file "bibliotecas/GPS.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6578 ;;  i               1   12[BANK0 ] unsigned char 
  6579 ;;  j               1   11[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 3F/1
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0
  6590 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6591 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6592 ;;      Totals:         1      13       0       0       0       0       0       0       0
  6593 ;;Total ram usage:       14 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    7
  6596 ;; This function calls:
  6597 ;;		_armazena_ltlo
  6598 ;; This function is called by:
  6599 ;;		_verifica_fence
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text37
  6604  004A6A                     __ptext37:
  6605                           	callstack 0
  6606  004A6A                     _longitude_to_convert:
  6607                           	callstack 20
  6608                           
  6609                           ;GPS.c: 629: unsigned char i,j;;GPS.c: 630: unsigned char longitude[11];;GPS.c: 633: j =
      +                           0;
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;incstack = 0
  6613  004A6A  0E00               	movlw	0
  6614  004A6C  0100               	movlb	0	; () banked
  6615  004A6E  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  6616                           
  6617                           ;GPS.c: 634: for(i=0; i<12; i++)
  6618  004A70  0E00               	movlw	0
  6619  004A72  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  6620  004A74                     l12762:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;GPS.c: 635: {;GPS.c: 636: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  6624  004A74  0EA5               	movlw	low _rawLongitude
  6625  004A76  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6626  004A78  6ED9               	movwf	fsr2l,c
  6627  004A7A  6ADA               	clrf	fsr2h,c
  6628  004A7C  0E01               	movlw	high _rawLongitude
  6629  004A7E  22DA               	addwfc	fsr2h,f,c
  6630  004A80  50DF               	movf	indf2,w,c
  6631  004A82  B4D8               	btfsc	status,2,c
  6632  004A84  D024               	goto	l12774
  6633                           
  6634                           ; BSR set to: 0
  6635  004A86  0EA5               	movlw	low _rawLongitude
  6636  004A88  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6637  004A8A  6ED9               	movwf	fsr2l,c
  6638  004A8C  6ADA               	clrf	fsr2h,c
  6639  004A8E  0E01               	movlw	high _rawLongitude
  6640  004A90  22DA               	addwfc	fsr2h,f,c
  6641  004A92  0E2D               	movlw	45
  6642  004A94  18DE               	xorwf	postinc2,w,c
  6643  004A96  B4D8               	btfsc	status,2,c
  6644  004A98  D01A               	goto	l12774
  6645                           
  6646                           ; BSR set to: 0
  6647  004A9A  0EA5               	movlw	low _rawLongitude
  6648  004A9C  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6649  004A9E  6ED9               	movwf	fsr2l,c
  6650  004AA0  6ADA               	clrf	fsr2h,c
  6651  004AA2  0E01               	movlw	high _rawLongitude
  6652  004AA4  22DA               	addwfc	fsr2h,f,c
  6653  004AA6  0E2E               	movlw	46
  6654  004AA8  18DE               	xorwf	postinc2,w,c
  6655  004AAA  B4D8               	btfsc	status,2,c
  6656  004AAC  D010               	goto	l12774
  6657                           
  6658                           ; BSR set to: 0
  6659  004AAE  0E0A               	movlw	10
  6660  004AB0  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  6661  004AB2  D00D               	goto	l12774
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;GPS.c: 637: {;GPS.c: 639: longitude[j] = rawLongitude[i];
  6665  004AB4  0EA5               	movlw	low _rawLongitude
  6666  004AB6  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6667  004AB8  6ED9               	movwf	fsr2l,c
  6668  004ABA  6ADA               	clrf	fsr2h,c
  6669  004ABC  0E01               	movlw	high _rawLongitude
  6670  004ABE  22DA               	addwfc	fsr2h,f,c
  6671  004AC0  516B               	movf	longitude_to_convert@j& (0+255),w,b
  6672  004AC2  0F60               	addlw	low longitude_to_convert@longitude
  6673  004AC4  6EE1               	movwf	fsr1l,c
  6674  004AC6  6AE2               	clrf	fsr1h,c
  6675  004AC8  CFDF FFE7          	movff	indf2,indf1
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;GPS.c: 640: j++;
  6679  004ACC  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  6680  004ACE                     l12774:
  6681                           
  6682                           ; BSR set to: 0
  6683  004ACE  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  6684                           
  6685                           ; BSR set to: 0
  6686  004AD0  0E0B               	movlw	11
  6687  004AD2  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  6688  004AD4  D7CF               	goto	l12762
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;GPS.c: 641: };GPS.c: 642: };GPS.c: 643: armazena_ltlo(longitude, 0);
  6692  004AD6  0E60               	movlw	low longitude_to_convert@longitude
  6693  004AD8  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6694  004ADA  0E00               	movlw	0
  6695  004ADC  6E3F               	movwf	armazena_ltlo@index^0,c
  6696  004ADE  EC71  F024         	call	_armazena_ltlo	;wreg free
  6697                           
  6698                           ; BSR set to: 1
  6699  004AE2  0012               	return		;funcret
  6700  004AE4                     __end_of_longitude_to_convert:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _latitude_to_convert *****************
  6704 ;; Defined at:
  6705 ;;		line 602 in file "bibliotecas/GPS.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  6710 ;;  i               1   10[BANK0 ] unsigned char 
  6711 ;;  j               1    9[BANK0 ] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 3F/1
  6718 ;;		On exit  : 3F/1
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0
  6722 ;;      Locals:         0      11       0       0       0       0       0       0       0
  6723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6724 ;;      Totals:         1      11       0       0       0       0       0       0       0
  6725 ;;Total ram usage:       12 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    7
  6728 ;; This function calls:
  6729 ;;		_armazena_ltlo
  6730 ;; This function is called by:
  6731 ;;		_verifica_fence
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text38
  6736  004AE4                     __ptext38:
  6737                           	callstack 0
  6738  004AE4                     _latitude_to_convert:
  6739                           	callstack 20
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;GPS.c: 604: unsigned char i,j;;GPS.c: 605: unsigned char latitude[9];;GPS.c: 608: j = 0
      +                          ;
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;incstack = 0
  6746  004AE4  0E00               	movlw	0
  6747  004AE6  0100               	movlb	0	; () banked
  6748  004AE8  6F69               	movwf	latitude_to_convert@j& (0+255),b
  6749                           
  6750                           ;GPS.c: 609: for(i=0; i<12; i++)
  6751  004AEA  0E00               	movlw	0
  6752  004AEC  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  6753  004AEE                     l12738:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;GPS.c: 610: {;GPS.c: 611: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  6757  004AEE  0EBE               	movlw	low _rawLatitude
  6758  004AF0  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6759  004AF2  6ED9               	movwf	fsr2l,c
  6760  004AF4  6ADA               	clrf	fsr2h,c
  6761  004AF6  0E01               	movlw	high _rawLatitude
  6762  004AF8  22DA               	addwfc	fsr2h,f,c
  6763  004AFA  50DF               	movf	indf2,w,c
  6764  004AFC  B4D8               	btfsc	status,2,c
  6765  004AFE  D024               	goto	l12750
  6766                           
  6767                           ; BSR set to: 0
  6768  004B00  0EBE               	movlw	low _rawLatitude
  6769  004B02  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6770  004B04  6ED9               	movwf	fsr2l,c
  6771  004B06  6ADA               	clrf	fsr2h,c
  6772  004B08  0E01               	movlw	high _rawLatitude
  6773  004B0A  22DA               	addwfc	fsr2h,f,c
  6774  004B0C  0E2D               	movlw	45
  6775  004B0E  18DE               	xorwf	postinc2,w,c
  6776  004B10  B4D8               	btfsc	status,2,c
  6777  004B12  D01A               	goto	l12750
  6778                           
  6779                           ; BSR set to: 0
  6780  004B14  0EBE               	movlw	low _rawLatitude
  6781  004B16  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6782  004B18  6ED9               	movwf	fsr2l,c
  6783  004B1A  6ADA               	clrf	fsr2h,c
  6784  004B1C  0E01               	movlw	high _rawLatitude
  6785  004B1E  22DA               	addwfc	fsr2h,f,c
  6786  004B20  0E2E               	movlw	46
  6787  004B22  18DE               	xorwf	postinc2,w,c
  6788  004B24  B4D8               	btfsc	status,2,c
  6789  004B26  D010               	goto	l12750
  6790                           
  6791                           ; BSR set to: 0
  6792  004B28  0E09               	movlw	9
  6793  004B2A  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  6794  004B2C  D00D               	goto	l12750
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;GPS.c: 612: {;GPS.c: 613: latitude[j] = rawLatitude[i];
  6798  004B2E  0EBE               	movlw	low _rawLatitude
  6799  004B30  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6800  004B32  6ED9               	movwf	fsr2l,c
  6801  004B34  6ADA               	clrf	fsr2h,c
  6802  004B36  0E01               	movlw	high _rawLatitude
  6803  004B38  22DA               	addwfc	fsr2h,f,c
  6804  004B3A  5169               	movf	latitude_to_convert@j& (0+255),w,b
  6805  004B3C  0F60               	addlw	low latitude_to_convert@latitude
  6806  004B3E  6EE1               	movwf	fsr1l,c
  6807  004B40  6AE2               	clrf	fsr1h,c
  6808  004B42  CFDF FFE7          	movff	indf2,indf1
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;GPS.c: 614: j++;
  6812  004B46  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  6813  004B48                     l12750:
  6814                           
  6815                           ; BSR set to: 0
  6816  004B48  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  6817                           
  6818                           ; BSR set to: 0
  6819  004B4A  0E0B               	movlw	11
  6820  004B4C  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  6821  004B4E  D7CF               	goto	l12738
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;GPS.c: 615: };GPS.c: 616: };GPS.c: 617: armazena_ltlo(latitude, 1);
  6825  004B50  0E60               	movlw	low latitude_to_convert@latitude
  6826  004B52  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6827  004B54  0E01               	movlw	1
  6828  004B56  6E3F               	movwf	armazena_ltlo@index^0,c
  6829  004B58  EC71  F024         	call	_armazena_ltlo	;wreg free
  6830                           
  6831                           ; BSR set to: 1
  6832  004B5C  0012               	return		;funcret
  6833  004B5E                     __end_of_latitude_to_convert:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _armazena_ltlo *****************
  6837 ;; Defined at:
  6838 ;;		line 64 in file "bibliotecas/fence.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  6841 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  6842 ;;  index           1   62[COMRAM] unsigned char 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  i               1   64[COMRAM] unsigned char 
  6845 ;;  j               1   63[COMRAM] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 3F/0
  6852 ;;		On exit  : 3F/1
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6855 ;;      Params:         2       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6858 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:        4 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    6
  6862 ;; This function calls:
  6863 ;;		_diferenca
  6864 ;; This function is called by:
  6865 ;;		_latitude_to_convert
  6866 ;;		_longitude_to_convert
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text39
  6871  0048E2                     __ptext39:
  6872                           	callstack 0
  6873  0048E2                     _armazena_ltlo:
  6874                           	callstack 20
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  6878                           
  6879                           ; BSR set to: 1
  6880                           ;incstack = 0
  6881  0048E2  D038               	goto	l12184
  6882  0048E4                     l12146:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;fence.c: 75: j = 0;
  6886  0048E4  0E00               	movlw	0
  6887  0048E6  6E40               	movwf	armazena_ltlo@j^0,c
  6888                           
  6889                           ;fence.c: 76: for(i=0; i<10; i++)
  6890  0048E8  0E00               	movlw	0
  6891  0048EA  6E41               	movwf	armazena_ltlo@i^0,c
  6892  0048EC                     l12152:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  6896  0048EC  503E               	movf	armazena_ltlo@buffer^0,w,c
  6897  0048EE  6ED9               	movwf	fsr2l,c
  6898  0048F0  6ADA               	clrf	fsr2h,c
  6899  0048F2  50DF               	movf	indf2,w,c
  6900  0048F4  B4D8               	btfsc	status,2,c
  6901  0048F6  D00C               	goto	l12158
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  6905  0048F8  503E               	movf	armazena_ltlo@buffer^0,w,c
  6906  0048FA  6ED9               	movwf	fsr2l,c
  6907  0048FC  6ADA               	clrf	fsr2h,c
  6908  0048FE  0E10               	movlw	low _dado
  6909  004900  2440               	addwf	armazena_ltlo@j^0,w,c
  6910  004902  6EE1               	movwf	fsr1l,c
  6911  004904  6AE2               	clrf	fsr1h,c
  6912  004906  0E01               	movlw	high _dado
  6913  004908  22E2               	addwfc	fsr1h,f,c
  6914  00490A  CFDF FFE7          	movff	indf2,indf1
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;fence.c: 82: j++;
  6918  00490E  2A40               	incf	armazena_ltlo@j^0,f,c
  6919  004910                     l12158:
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;fence.c: 83: };fence.c: 85: buffer++;
  6923  004910  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6924                           
  6925                           ; BSR set to: 0
  6926  004912  2A41               	incf	armazena_ltlo@i^0,f,c
  6927                           
  6928                           ; BSR set to: 0
  6929  004914  0E09               	movlw	9
  6930  004916  6441               	cpfsgt	armazena_ltlo@i^0,c
  6931  004918  D7E9               	goto	l12152
  6932  00491A  D021               	goto	l12186
  6933  00491C                     l12164:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;fence.c: 91: j = 0;
  6937  00491C  0E00               	movlw	0
  6938  00491E  6E40               	movwf	armazena_ltlo@j^0,c
  6939                           
  6940                           ;fence.c: 92: for(i=0; i<11; i++)
  6941  004920  0E00               	movlw	0
  6942  004922  6E41               	movwf	armazena_ltlo@i^0,c
  6943  004924                     l12170:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  6947  004924  503E               	movf	armazena_ltlo@buffer^0,w,c
  6948  004926  6ED9               	movwf	fsr2l,c
  6949  004928  6ADA               	clrf	fsr2h,c
  6950  00492A  50DF               	movf	indf2,w,c
  6951  00492C  B4D8               	btfsc	status,2,c
  6952  00492E  D00C               	goto	l12176
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  6956  004930  503E               	movf	armazena_ltlo@buffer^0,w,c
  6957  004932  6ED9               	movwf	fsr2l,c
  6958  004934  6ADA               	clrf	fsr2h,c
  6959  004936  0E10               	movlw	low _dado
  6960  004938  2440               	addwf	armazena_ltlo@j^0,w,c
  6961  00493A  6EE1               	movwf	fsr1l,c
  6962  00493C  6AE2               	clrf	fsr1h,c
  6963  00493E  0E01               	movlw	high _dado
  6964  004940  22E2               	addwfc	fsr1h,f,c
  6965  004942  CFDF FFE7          	movff	indf2,indf1
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;fence.c: 98: j++;
  6969  004946  2A40               	incf	armazena_ltlo@j^0,f,c
  6970  004948                     l12176:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;fence.c: 99: };fence.c: 101: buffer++;
  6974  004948  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6975                           
  6976                           ; BSR set to: 0
  6977  00494A  2A41               	incf	armazena_ltlo@i^0,f,c
  6978                           
  6979                           ; BSR set to: 0
  6980  00494C  0E0A               	movlw	10
  6981  00494E  6441               	cpfsgt	armazena_ltlo@i^0,c
  6982  004950  D7E9               	goto	l12170
  6983  004952  D005               	goto	l12186
  6984  004954                     l12184:
  6985                           
  6986                           ; BSR set to: 0
  6987  004954  503F               	movf	armazena_ltlo@index^0,w,c
  6988                           
  6989                           ; Switch size 1, requested type "simple"
  6990                           ; Number of cases is 1, Range of values is 1 to 1
  6991                           ; switch strategies available:
  6992                           ; Name         Instructions Cycles
  6993                           ; simple_byte            4     3 (average)
  6994                           ;	Chosen strategy is simple_byte
  6995  004956  0A01               	xorlw	1	; case 1
  6996  004958  B4D8               	btfsc	status,2,c
  6997  00495A  D7C4               	goto	l12146
  6998  00495C  D7DF               	goto	l12164
  6999  00495E                     l12186:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;fence.c: 108: diferenca(index);
  7003  00495E  503F               	movf	armazena_ltlo@index^0,w,c
  7004  004960  EC35  F020         	call	_diferenca
  7005                           
  7006                           ; BSR set to: 1
  7007  004964  0012               	return		;funcret
  7008  004966                     __end_of_armazena_ltlo:
  7009                           	callstack 0
  7010                           
  7011 ;; *************** function _diferenca *****************
  7012 ;; Defined at:
  7013 ;;		line 145 in file "bibliotecas/fence.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  index           1    wreg     unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  index           1   52[COMRAM] unsigned char 
  7018 ;;  valor_long      4   57[COMRAM] unsigned long 
  7019 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 3F/0
  7026 ;;		On exit  : 3F/1
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7029 ;;      Params:         0       0       0       0       0       0       0       0       0
  7030 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7032 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7033 ;;Total ram usage:        9 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    5
  7036 ;; This function calls:
  7037 ;;		_convert_to_int
  7038 ;;		_convert_to_int_point_lat
  7039 ;;		_convert_to_int_point_long
  7040 ;; This function is called by:
  7041 ;;		_armazena_ltlo
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text40
  7046  00406A                     __ptext40:
  7047                           	callstack 0
  7048  00406A                     _diferenca:
  7049                           	callstack 20
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;incstack = 0
  7053                           ;diferenca@index stored from wreg
  7054  00406A  6E35               	movwf	diferenca@index^0,c
  7055                           
  7056                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7057  00406C  D062               	goto	l12074
  7058  00406E                     l12060:
  7059                           
  7060                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7061  00406E  EC0E  F028         	call	_convert_to_int_point_lat	;wreg free
  7062  004072  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7063  004076  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7064  00407A  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7065  00407E  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7066                           
  7067                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7068  004082  0E55               	movlw	low _fence_diff_lat
  7069  004084  6E24               	movwf	convert_to_int@p_buff^0,c
  7070  004086  0E61               	movlw	high _fence_diff_lat
  7071  004088  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7072  00408A  ECBA  F02C         	call	_convert_to_int	;wreg free
  7073  00408E  5036               	movf	diferenca@valor_lat^0,w,c
  7074  004090  5C24               	subwf	?_convert_to_int^0,w,c
  7075  004092  0101               	movlb	1	; () banked
  7076  004094  6F00               	movwf	_poligono_ext& (0+255),b
  7077  004096  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7078  004098  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7079  00409A  6F01               	movwf	(_poligono_ext+1)& (0+255),b
  7080  00409C  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7081  00409E  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7082  0040A0  6F02               	movwf	(_poligono_ext+2)& (0+255),b
  7083  0040A2  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7084  0040A4  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7085  0040A6  6F03               	movwf	(_poligono_ext+3)& (0+255),b
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7089  0040A8  0E69               	movlw	low (_fence_diff_lat+20)
  7090  0040AA  6E24               	movwf	convert_to_int@p_buff^0,c
  7091  0040AC  0E61               	movlw	high (_fence_diff_lat+20)
  7092  0040AE  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7093  0040B0  ECBA  F02C         	call	_convert_to_int	;wreg free
  7094  0040B4  5036               	movf	diferenca@valor_lat^0,w,c
  7095  0040B6  5C24               	subwf	?_convert_to_int^0,w,c
  7096  0040B8  0101               	movlb	1	; () banked
  7097  0040BA  6F08               	movwf	(_poligono_ext+8)& (0+255),b
  7098  0040BC  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7099  0040BE  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7100  0040C0  6F09               	movwf	(_poligono_ext+9)& (0+255),b
  7101  0040C2  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7102  0040C4  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7103  0040C6  6F0A               	movwf	(_poligono_ext+10)& (0+255),b
  7104  0040C8  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7105  0040CA  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7106  0040CC  6F0B               	movwf	(_poligono_ext+11)& (0+255),b
  7107                           
  7108                           ;fence.c: 157: break;
  7109  0040CE  0012               	return	
  7110  0040D0                     l12066:
  7111                           
  7112                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7113  0040D0  ECE2  F027         	call	_convert_to_int_point_long	;wreg free
  7114  0040D4  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7115  0040D8  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7116  0040DC  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7117  0040E0  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7118                           
  7119                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7120  0040E4  0E29               	movlw	low _fence_diff_long
  7121  0040E6  6E24               	movwf	convert_to_int@p_buff^0,c
  7122  0040E8  0E61               	movlw	high _fence_diff_long
  7123  0040EA  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7124  0040EC  ECBA  F02C         	call	_convert_to_int	;wreg free
  7125  0040F0  503A               	movf	diferenca@valor_long^0,w,c
  7126  0040F2  5C24               	subwf	?_convert_to_int^0,w,c
  7127  0040F4  0101               	movlb	1	; () banked
  7128  0040F6  6F04               	movwf	(_poligono_ext+4)& (0+255),b
  7129  0040F8  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7130  0040FA  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7131  0040FC  6F05               	movwf	(_poligono_ext+5)& (0+255),b
  7132  0040FE  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7133  004100  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7134  004102  6F06               	movwf	(_poligono_ext+6)& (0+255),b
  7135  004104  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7136  004106  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7137  004108  6F07               	movwf	(_poligono_ext+7)& (0+255),b
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7141  00410A  0E3F               	movlw	low (_fence_diff_long+22)
  7142  00410C  6E24               	movwf	convert_to_int@p_buff^0,c
  7143  00410E  0E61               	movlw	high (_fence_diff_long+22)
  7144  004110  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7145  004112  ECBA  F02C         	call	_convert_to_int	;wreg free
  7146  004116  503A               	movf	diferenca@valor_long^0,w,c
  7147  004118  5C24               	subwf	?_convert_to_int^0,w,c
  7148  00411A  0101               	movlb	1	; () banked
  7149  00411C  6F0C               	movwf	(_poligono_ext+12)& (0+255),b
  7150  00411E  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7151  004120  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7152  004122  6F0D               	movwf	(_poligono_ext+13)& (0+255),b
  7153  004124  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7154  004126  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7155  004128  6F0E               	movwf	(_poligono_ext+14)& (0+255),b
  7156  00412A  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7157  00412C  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7158  00412E  6F0F               	movwf	(_poligono_ext+15)& (0+255),b
  7159                           
  7160                           ;fence.c: 165: break;
  7161  004130  0012               	return	
  7162  004132                     l12074:
  7163  004132  5035               	movf	diferenca@index^0,w,c
  7164                           
  7165                           ; Switch size 1, requested type "simple"
  7166                           ; Number of cases is 1, Range of values is 1 to 1
  7167                           ; switch strategies available:
  7168                           ; Name         Instructions Cycles
  7169                           ; simple_byte            4     3 (average)
  7170                           ;	Chosen strategy is simple_byte
  7171  004134  0A01               	xorlw	1	; case 1
  7172  004136  B4D8               	btfsc	status,2,c
  7173  004138  D79A               	goto	l12060
  7174  00413A  D7CA               	goto	l12066
  7175  00413C                     __end_of_diferenca:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _convert_to_int_point_long *****************
  7179 ;; Defined at:
  7180 ;;		line 455 in file "bibliotecas/fence.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7185 ;;  p               3    0        PTR unsigned char 
  7186 ;;  i               1   50[COMRAM] unsigned char 
  7187 ;;  j               1   49[COMRAM] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  4   35[COMRAM] unsigned long 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7197 ;;      Params:         4       0       0       0       0       0       0       0       0
  7198 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7200 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7201 ;;Total ram usage:       16 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    4
  7204 ;; This function calls:
  7205 ;;		_atol
  7206 ;; This function is called by:
  7207 ;;		_diferenca
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text41
  7212  004FC4                     __ptext41:
  7213                           	callstack 0
  7214  004FC4                     _convert_to_int_point_long:
  7215                           	callstack 20
  7216                           
  7217                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  7218                           
  7219                           ; BSR set to: 1
  7220                           ;incstack = 0
  7221  004FC4  0E00               	movlw	0
  7222  004FC6  6E32               	movwf	convert_to_int_point_long@j^0,c
  7223                           
  7224                           ;fence.c: 463: for(i=0; i<10;i++)
  7225  004FC8  0E00               	movlw	0
  7226  004FCA  6E33               	movwf	convert_to_int_point_long@i^0,c
  7227  004FCC                     l11580:
  7228                           
  7229                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  7230  004FCC  0E10               	movlw	low _dado
  7231  004FCE  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7232  004FD0  6ED9               	movwf	fsr2l,c
  7233  004FD2  6ADA               	clrf	fsr2h,c
  7234  004FD4  0E01               	movlw	high _dado
  7235  004FD6  22DA               	addwfc	fsr2h,f,c
  7236  004FD8  50DF               	movf	indf2,w,c
  7237  004FDA  B4D8               	btfsc	status,2,c
  7238  004FDC  D00D               	goto	l11586
  7239                           
  7240                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  7241  004FDE  0E10               	movlw	low _dado
  7242  004FE0  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7243  004FE2  6ED9               	movwf	fsr2l,c
  7244  004FE4  6ADA               	clrf	fsr2h,c
  7245  004FE6  0E01               	movlw	high _dado
  7246  004FE8  22DA               	addwfc	fsr2h,f,c
  7247  004FEA  5032               	movf	convert_to_int_point_long@j^0,w,c
  7248  004FEC  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7249  004FEE  6EE1               	movwf	fsr1l,c
  7250  004FF0  6AE2               	clrf	fsr1h,c
  7251  004FF2  CFDF FFE7          	movff	indf2,indf1
  7252                           
  7253                           ;fence.c: 469: j++;
  7254  004FF6  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7255  004FF8                     l11586:
  7256  004FF8  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7257  004FFA  0E09               	movlw	9
  7258  004FFC  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7259  004FFE  D7E6               	goto	l11580
  7260                           
  7261                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  7262  005000  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7263  005002  6E16               	movwf	atol@s^0,c
  7264  005004  6A17               	clrf	(atol@s+1)^0,c
  7265  005006  EC3C  F01C         	call	_atol	;wreg free
  7266  00500A  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7267  00500E  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7268  005012  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7269  005016  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7270  00501A  0012               	return		;funcret
  7271  00501C                     __end_of_convert_to_int_point_long:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _convert_to_int_point_lat *****************
  7275 ;; Defined at:
  7276 ;;		line 428 in file "bibliotecas/fence.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7281 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7282 ;;		 -> NULL(0), 
  7283 ;;  i               1   51[COMRAM] unsigned char 
  7284 ;;  j               1   50[COMRAM] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  4   35[COMRAM] long 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7294 ;;      Params:         4       0       0       0       0       0       0       0       0
  7295 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7297 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7298 ;;Total ram usage:       17 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    4
  7301 ;; This function calls:
  7302 ;;		_atol
  7303 ;; This function is called by:
  7304 ;;		_diferenca
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text42
  7309  00501C                     __ptext42:
  7310                           	callstack 0
  7311  00501C                     _convert_to_int_point_lat:
  7312                           	callstack 20
  7313                           
  7314                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  7315                           
  7316                           ;incstack = 0
  7317  00501C  0E00               	movlw	0
  7318  00501E  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7319                           
  7320                           ;fence.c: 436: for(i=0; i<10;i++)
  7321  005020  0E00               	movlw	0
  7322  005022  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7323  005024                     l11554:
  7324                           
  7325                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  7326  005024  0E10               	movlw	low _dado
  7327  005026  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7328  005028  6ED9               	movwf	fsr2l,c
  7329  00502A  6ADA               	clrf	fsr2h,c
  7330  00502C  0E01               	movlw	high _dado
  7331  00502E  22DA               	addwfc	fsr2h,f,c
  7332  005030  50DF               	movf	indf2,w,c
  7333  005032  B4D8               	btfsc	status,2,c
  7334  005034  D00D               	goto	l11560
  7335                           
  7336                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  7337  005036  0E10               	movlw	low _dado
  7338  005038  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7339  00503A  6ED9               	movwf	fsr2l,c
  7340  00503C  6ADA               	clrf	fsr2h,c
  7341  00503E  0E01               	movlw	high _dado
  7342  005040  22DA               	addwfc	fsr2h,f,c
  7343  005042  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7344  005044  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7345  005046  6EE1               	movwf	fsr1l,c
  7346  005048  6AE2               	clrf	fsr1h,c
  7347  00504A  CFDF FFE7          	movff	indf2,indf1
  7348                           
  7349                           ;fence.c: 442: j++;
  7350  00504E  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7351  005050                     l11560:
  7352  005050  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7353  005052  0E09               	movlw	9
  7354  005054  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7355  005056  D7E6               	goto	l11554
  7356                           
  7357                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  7358  005058  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7359  00505A  6E16               	movwf	atol@s^0,c
  7360  00505C  6A17               	clrf	(atol@s+1)^0,c
  7361  00505E  EC3C  F01C         	call	_atol	;wreg free
  7362  005062  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7363  005066  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7364  00506A  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7365  00506E  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7366  005072  0012               	return		;funcret
  7367  005074                     __end_of_convert_to_int_point_lat:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _convert_to_int *****************
  7371 ;; Defined at:
  7372 ;;		line 420 in file "bibliotecas/fence.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7375 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  4   35[COMRAM] long 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7387 ;;      Params:         4       0       0       0       0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7390 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7391 ;;Total ram usage:        4 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    4
  7394 ;; This function calls:
  7395 ;;		_atol
  7396 ;; This function is called by:
  7397 ;;		_diferenca
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text43
  7402  005974                     __ptext43:
  7403                           	callstack 0
  7404  005974                     _convert_to_int:
  7405                           	callstack 20
  7406                           
  7407                           ;fence.c: 423: p_buff++;
  7408                           
  7409                           ;incstack = 0
  7410  005974  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7411  005976  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7412                           
  7413                           ;fence.c: 424: return atol(p_buff);
  7414  005978  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7415  00597C  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7416  005980  EC3C  F01C         	call	_atol	;wreg free
  7417  005984  C016  F024         	movff	?_atol,?_convert_to_int
  7418  005988  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7419  00598C  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7420  005990  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7421  005994  0012               	return		;funcret
  7422  005996                     __end_of_convert_to_int:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _atol *****************
  7426 ;; Defined at:
  7427 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7430 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  a               4   30[COMRAM] long 
  7433 ;;  c               1   34[COMRAM] unsigned char 
  7434 ;;  sign            1   29[COMRAM] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  4   21[COMRAM] long 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7444 ;;      Params:         4       0       0       0       0       0       0       0       0
  7445 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7446 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7447 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7448 ;;Total ram usage:       14 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:    3
  7451 ;; This function calls:
  7452 ;;		___lmul
  7453 ;;		_isdigit
  7454 ;; This function is called by:
  7455 ;;		_convert_to_int
  7456 ;;		_convert_to_int_point_lat
  7457 ;;		_convert_to_int_point_long
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text44
  7462  003878                     __ptext44:
  7463                           	callstack 0
  7464  003878                     _atol:
  7465                           	callstack 20
  7466                           
  7467                           ;incstack = 0
  7468  003878  C016  FFF6         	movff	atol@s,tblptrl
  7469  00387C  C017  FFF7         	movff	atol@s+1,tblptrh
  7470  003880  6AF8               	clrf	tblptru,c
  7471  003882  0E07               	movlw	(high __ramtop+-1)
  7472  003884  64F7               	cpfsgt	tblptrh,c
  7473  003886  D003               	bra	u12777
  7474  003888  0008               	tblrd		*
  7475  00388A  50F5               	movf	tablat,w,c
  7476  00388C  D005               	bra	u12770
  7477  00388E                     u12777:
  7478  00388E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7479  003892  CFF7 FFE2          	movff	tblptrh,fsr1h
  7480  003896  50E7               	movf	indf1,w,c
  7481  003898                     u12770:
  7482  003898  6E23               	movwf	atol@c^0,c
  7483  00389A  4A16               	infsnz	atol@s^0,f,c
  7484  00389C  2A17               	incf	(atol@s+1)^0,f,c
  7485  00389E  0E20               	movlw	32
  7486  0038A0  1823               	xorwf	atol@c^0,w,c
  7487  0038A2  B4D8               	btfsc	status,2,c
  7488  0038A4  D7E9               	goto	_atol
  7489  0038A6  0E09               	movlw	9
  7490  0038A8  1823               	xorwf	atol@c^0,w,c
  7491  0038AA  B4D8               	btfsc	status,2,c
  7492  0038AC  D7E5               	goto	_atol
  7493  0038AE  0E00               	movlw	0
  7494  0038B0  6E1F               	movwf	atol@a^0,c
  7495  0038B2  0E00               	movlw	0
  7496  0038B4  6E20               	movwf	(atol@a+1)^0,c
  7497  0038B6  0E00               	movlw	0
  7498  0038B8  6E21               	movwf	(atol@a+2)^0,c
  7499  0038BA  0E00               	movlw	0
  7500  0038BC  6E22               	movwf	(atol@a+3)^0,c
  7501  0038BE  0E00               	movlw	0
  7502  0038C0  6E1E               	movwf	atol@sign^0,c
  7503  0038C2  0E2D               	movlw	45
  7504  0038C4  1823               	xorwf	atol@c^0,w,c
  7505  0038C6  A4D8               	btfss	status,2,c
  7506  0038C8  D015               	goto	l11284
  7507  0038CA  2A1E               	incf	atol@sign^0,f,c
  7508  0038CC                     l11280:
  7509  0038CC  C016  FFF6         	movff	atol@s,tblptrl
  7510  0038D0  C017  FFF7         	movff	atol@s+1,tblptrh
  7511  0038D4  6AF8               	clrf	tblptru,c
  7512  0038D6  0E07               	movlw	(high __ramtop+-1)
  7513  0038D8  64F7               	cpfsgt	tblptrh,c
  7514  0038DA  D003               	bra	u12817
  7515  0038DC  0008               	tblrd		*
  7516  0038DE  50F5               	movf	tablat,w,c
  7517  0038E0  D005               	bra	u12810
  7518  0038E2                     u12817:
  7519  0038E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7520  0038E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7521  0038EA  50E7               	movf	indf1,w,c
  7522  0038EC                     u12810:
  7523  0038EC  6E23               	movwf	atol@c^0,c
  7524  0038EE  4A16               	infsnz	atol@s^0,f,c
  7525  0038F0  2A17               	incf	(atol@s+1)^0,f,c
  7526  0038F2  D028               	goto	l11296
  7527  0038F4                     l11284:
  7528  0038F4  0E2B               	movlw	43
  7529  0038F6  1823               	xorwf	atol@c^0,w,c
  7530  0038F8  B4D8               	btfsc	status,2,c
  7531  0038FA  D7E8               	goto	l11280
  7532  0038FC  D023               	goto	l11296
  7533  0038FE                     l11290:
  7534  0038FE  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7535  003902  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7536  003906  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7537  00390A  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7538  00390E  0E0A               	movlw	10
  7539  003910  6E0E               	movwf	___lmul@multiplicand^0,c
  7540  003912  0E00               	movlw	0
  7541  003914  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7542  003916  0E00               	movlw	0
  7543  003918  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7544  00391A  0E00               	movlw	0
  7545  00391C  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7546  00391E  EC66  F028         	call	___lmul	;wreg free
  7547  003922  C023  F01A         	movff	atol@c,??_atol
  7548  003926  0ED0               	movlw	208
  7549  003928  261A               	addwf	??_atol^0,f,c
  7550  00392A  501A               	movf	??_atol^0,w,c
  7551  00392C  240A               	addwf	?___lmul^0,w,c
  7552  00392E  6E1F               	movwf	atol@a^0,c
  7553  003930  0E00               	movlw	0
  7554  003932  200B               	addwfc	(?___lmul+1)^0,w,c
  7555  003934  6E20               	movwf	(atol@a+1)^0,c
  7556  003936  0E00               	movlw	0
  7557  003938  200C               	addwfc	(?___lmul+2)^0,w,c
  7558  00393A  6E21               	movwf	(atol@a+2)^0,c
  7559  00393C  0E00               	movlw	0
  7560  00393E  200D               	addwfc	(?___lmul+3)^0,w,c
  7561  003940  6E22               	movwf	(atol@a+3)^0,c
  7562  003942  D7C4               	goto	l11280
  7563  003944                     l11296:
  7564  003944  5023               	movf	atol@c^0,w,c
  7565  003946  EC70  F02D         	call	_isdigit
  7566  00394A  B0D8               	btfsc	status,0,c
  7567  00394C  D7D8               	goto	l11290
  7568  00394E  501E               	movf	atol@sign^0,w,c
  7569  003950  B4D8               	btfsc	status,2,c
  7570  003952  D01A               	goto	l2436
  7571  003954  C01F  F01A         	movff	atol@a,??_atol
  7572  003958  C020  F01B         	movff	atol@a+1,??_atol+1
  7573  00395C  C021  F01C         	movff	atol@a+2,??_atol+2
  7574  003960  C022  F01D         	movff	atol@a+3,??_atol+3
  7575  003964  1E1A               	comf	??_atol^0,f,c
  7576  003966  1E1B               	comf	(??_atol+1)^0,f,c
  7577  003968  1E1C               	comf	(??_atol+2)^0,f,c
  7578  00396A  1E1D               	comf	(??_atol+3)^0,f,c
  7579  00396C  2A1A               	incf	??_atol^0,f,c
  7580  00396E  0E00               	movlw	0
  7581  003970  221B               	addwfc	(??_atol+1)^0,f,c
  7582  003972  221C               	addwfc	(??_atol+2)^0,f,c
  7583  003974  221D               	addwfc	(??_atol+3)^0,f,c
  7584  003976  C01A  F016         	movff	??_atol,?_atol
  7585  00397A  C01B  F017         	movff	??_atol+1,?_atol+1
  7586  00397E  C01C  F018         	movff	??_atol+2,?_atol+2
  7587  003982  C01D  F019         	movff	??_atol+3,?_atol+3
  7588  003986  0012               	return	
  7589  003988                     l2436:
  7590  003988  C01F  F016         	movff	atol@a,?_atol
  7591  00398C  C020  F017         	movff	atol@a+1,?_atol+1
  7592  003990  C021  F018         	movff	atol@a+2,?_atol+2
  7593  003994  C022  F019         	movff	atol@a+3,?_atol+3
  7594  003998  0012               	return		;funcret
  7595  00399A                     __end_of_atol:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _itoa *****************
  7599 ;; Defined at:
  7600 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7603 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7604 ;;  val             2   27[COMRAM] int 
  7605 ;;  base            2   29[COMRAM] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  cp              2    0        PTR unsigned char 
  7608 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2   25[COMRAM] PTR unsigned char 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 3F/2
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7618 ;;      Params:         6       0       0       0       0       0       0       0       0
  7619 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7621 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7622 ;;Total ram usage:        8 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    4
  7625 ;; This function calls:
  7626 ;;		_utoa
  7627 ;; This function is called by:
  7628 ;;		_disparo_gravacao
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text45
  7633  0055DE                     __ptext45:
  7634                           	callstack 0
  7635  0055DE                     _itoa:
  7636                           	callstack 24
  7637                           
  7638                           ; BSR set to: 2
  7639                           
  7640                           ;incstack = 0
  7641  0055DE  AE1D               	btfss	(itoa@val+1)^0,7,c
  7642  0055E0  D00C               	goto	l13720
  7643                           
  7644                           ; BSR set to: 2
  7645  0055E2  C01A  FFD9         	movff	itoa@buf,fsr2l
  7646  0055E6  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  7647  0055EA  0E2D               	movlw	45
  7648  0055EC  6EDF               	movwf	indf2,c
  7649                           
  7650                           ; BSR set to: 2
  7651  0055EE  4A1A               	infsnz	itoa@buf^0,f,c
  7652  0055F0  2A1B               	incf	(itoa@buf+1)^0,f,c
  7653                           
  7654                           ; BSR set to: 2
  7655  0055F2  6C1C               	negf	itoa@val^0,c
  7656  0055F4  1E1D               	comf	(itoa@val+1)^0,f,c
  7657  0055F6  B0D8               	btfsc	status,0,c
  7658  0055F8  2A1D               	incf	(itoa@val+1)^0,f,c
  7659  0055FA                     l13720:
  7660                           
  7661                           ; BSR set to: 2
  7662  0055FA  C01A  F011         	movff	itoa@buf,utoa@buf
  7663  0055FE  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  7664  005602  C01C  F013         	movff	itoa@val,utoa@val
  7665  005606  C01D  F014         	movff	itoa@val+1,utoa@val+1
  7666  00560A  C01E  F015         	movff	itoa@base,utoa@base
  7667  00560E  C01F  F016         	movff	itoa@base+1,utoa@base+1
  7668  005612  EC5F  F022         	call	_utoa	;wreg free
  7669  005616  0012               	return		;funcret
  7670  005618                     __end_of_itoa:
  7671                           	callstack 0
  7672                           
  7673 ;; *************** function _utoa *****************
  7674 ;; Defined at:
  7675 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7678 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7679 ;;  val             2   18[COMRAM] unsigned int 
  7680 ;;  base            2   20[COMRAM] int 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  v               2   22[COMRAM] unsigned int 
  7683 ;;  c               1   24[COMRAM] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  2   16[COMRAM] PTR unsigned char 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 3F/2
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7693 ;;      Params:         6       0       0       0       0       0       0       0       0
  7694 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7696 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7697 ;;Total ram usage:        9 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    3
  7700 ;; This function calls:
  7701 ;;		___lwdiv
  7702 ;;		___lwmod
  7703 ;; This function is called by:
  7704 ;;		_itoa
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text46
  7709  0044BE                     __ptext46:
  7710                           	callstack 0
  7711  0044BE                     _utoa:
  7712                           	callstack 24
  7713                           
  7714                           ; BSR set to: 2
  7715                           
  7716                           ;incstack = 0
  7717  0044BE  C013  F017         	movff	utoa@val,utoa@v
  7718  0044C2  C014  F018         	movff	utoa@val+1,utoa@v+1
  7719  0044C6                     l13684:
  7720  0044C6  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  7721  0044CA  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  7722  0044CE  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7723  0044D2  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7724  0044D6  EC91  F028         	call	___lwdiv	;wreg free
  7725  0044DA  C00A  F017         	movff	?___lwdiv,utoa@v
  7726  0044DE  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  7727  0044E2  4A11               	infsnz	utoa@buf^0,f,c
  7728  0044E4  2A12               	incf	(utoa@buf+1)^0,f,c
  7729  0044E6  5017               	movf	utoa@v^0,w,c
  7730  0044E8  1018               	iorwf	(utoa@v+1)^0,w,c
  7731  0044EA  A4D8               	btfss	status,2,c
  7732  0044EC  D7EC               	goto	l13684
  7733  0044EE  C011  FFD9         	movff	utoa@buf,fsr2l
  7734  0044F2  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7735  0044F6  0E00               	movlw	0
  7736  0044F8  6EDF               	movwf	indf2,c
  7737  0044FA  0611               	decf	utoa@buf^0,f,c
  7738  0044FC  A0D8               	btfss	status,0,c
  7739  0044FE  0612               	decf	(utoa@buf+1)^0,f,c
  7740  004500                     l13694:
  7741  004500  C013  F00A         	movff	utoa@val,___lwmod@dividend
  7742  004504  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  7743  004508  C015  F00C         	movff	utoa@base,___lwmod@divisor
  7744  00450C  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  7745  004510  EC50  F02A         	call	___lwmod	;wreg free
  7746  004514  500A               	movf	?___lwmod^0,w,c
  7747  004516  6E19               	movwf	utoa@c^0,c
  7748  004518  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  7749  00451C  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  7750  004520  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7751  004524  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7752  004528  EC91  F028         	call	___lwdiv	;wreg free
  7753  00452C  C00A  F013         	movff	?___lwdiv,utoa@val
  7754  004530  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  7755  004534  0E09               	movlw	9
  7756  004536  6419               	cpfsgt	utoa@c^0,c
  7757  004538  D002               	goto	l2454
  7758  00453A  0E07               	movlw	7
  7759  00453C  2619               	addwf	utoa@c^0,f,c
  7760  00453E                     l2454:
  7761  00453E  0E30               	movlw	48
  7762  004540  2619               	addwf	utoa@c^0,f,c
  7763  004542  C011  FFD9         	movff	utoa@buf,fsr2l
  7764  004546  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7765  00454A  C019  FFDF         	movff	utoa@c,indf2
  7766  00454E  0611               	decf	utoa@buf^0,f,c
  7767  004550  A0D8               	btfss	status,0,c
  7768  004552  0612               	decf	(utoa@buf+1)^0,f,c
  7769  004554  5013               	movf	utoa@val^0,w,c
  7770  004556  1014               	iorwf	(utoa@val+1)^0,w,c
  7771  004558  A4D8               	btfss	status,2,c
  7772  00455A  D7D2               	goto	l13694
  7773                           
  7774                           ;	Return value of _utoa is never used
  7775  00455C  4A11               	infsnz	utoa@buf^0,f,c
  7776  00455E  2A12               	incf	(utoa@buf+1)^0,f,c
  7777  004560  0012               	return		;funcret
  7778  004562                     __end_of_utoa:
  7779                           	callstack 0
  7780                           
  7781 ;; *************** function ___lwmod *****************
  7782 ;; Defined at:
  7783 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  dividend        2    9[COMRAM] unsigned int 
  7786 ;;  divisor         2   11[COMRAM] unsigned int 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  counter         1   13[COMRAM] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  2    9[COMRAM] unsigned int 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/2
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:        5 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    2
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_utoa
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text47
  7813  0054A0                     __ptext47:
  7814                           	callstack 0
  7815  0054A0                     ___lwmod:
  7816                           	callstack 24
  7817                           
  7818                           ;incstack = 0
  7819  0054A0  500C               	movf	___lwmod@divisor^0,w,c
  7820  0054A2  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  7821  0054A4  B4D8               	btfsc	status,2,c
  7822  0054A6  D018               	goto	l2234
  7823  0054A8  0E01               	movlw	1
  7824  0054AA  6E0E               	movwf	___lwmod@counter^0,c
  7825  0054AC  D004               	goto	l12684
  7826  0054AE                     l12682:
  7827  0054AE  90D8               	bcf	status,0,c
  7828  0054B0  360C               	rlcf	___lwmod@divisor^0,f,c
  7829  0054B2  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  7830  0054B4  2A0E               	incf	___lwmod@counter^0,f,c
  7831  0054B6                     l12684:
  7832  0054B6  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  7833  0054B8  D7FA               	goto	l12682
  7834  0054BA                     u15050:
  7835  0054BA  500C               	movf	___lwmod@divisor^0,w,c
  7836  0054BC  5C0A               	subwf	___lwmod@dividend^0,w,c
  7837  0054BE  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7838  0054C0  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  7839  0054C2  A0D8               	btfss	status,0,c
  7840  0054C4  D004               	goto	l12690
  7841  0054C6  500C               	movf	___lwmod@divisor^0,w,c
  7842  0054C8  5E0A               	subwf	___lwmod@dividend^0,f,c
  7843  0054CA  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7844  0054CC  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  7845  0054CE                     l12690:
  7846  0054CE  90D8               	bcf	status,0,c
  7847  0054D0  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  7848  0054D2  320C               	rrcf	___lwmod@divisor^0,f,c
  7849  0054D4  2E0E               	decfsz	___lwmod@counter^0,f,c
  7850  0054D6  D7F1               	goto	u15050
  7851  0054D8                     l2234:
  7852  0054D8  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  7853  0054DC  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  7854  0054E0  0012               	return		;funcret
  7855  0054E2                     __end_of___lwmod:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function ___lwdiv *****************
  7859 ;; Defined at:
  7860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  dividend        2    9[COMRAM] unsigned int 
  7863 ;;  divisor         2   11[COMRAM] unsigned int 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  quotient        2   14[COMRAM] unsigned int 
  7866 ;;  counter         1   13[COMRAM] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2    9[COMRAM] unsigned int 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/2
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7876 ;;      Params:         4       0       0       0       0       0       0       0       0
  7877 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7879 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7880 ;;Total ram usage:        7 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    2
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_utoa
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text48
  7891  005122                     __ptext48:
  7892                           	callstack 0
  7893  005122                     ___lwdiv:
  7894                           	callstack 24
  7895                           
  7896                           ;incstack = 0
  7897  005122  0E00               	movlw	0
  7898  005124  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7899  005126  0E00               	movlw	0
  7900  005128  6E0F               	movwf	___lwdiv@quotient^0,c
  7901  00512A  500C               	movf	___lwdiv@divisor^0,w,c
  7902  00512C  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7903  00512E  B4D8               	btfsc	status,2,c
  7904  005130  D01C               	goto	l2224
  7905  005132  0E01               	movlw	1
  7906  005134  6E0E               	movwf	___lwdiv@counter^0,c
  7907  005136  D004               	goto	l12664
  7908  005138                     l12662:
  7909  005138  90D8               	bcf	status,0,c
  7910  00513A  360C               	rlcf	___lwdiv@divisor^0,f,c
  7911  00513C  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7912  00513E  2A0E               	incf	___lwdiv@counter^0,f,c
  7913  005140                     l12664:
  7914  005140  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  7915  005142  D7FA               	goto	l12662
  7916  005144                     u15020:
  7917  005144  90D8               	bcf	status,0,c
  7918  005146  360F               	rlcf	___lwdiv@quotient^0,f,c
  7919  005148  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7920  00514A  500C               	movf	___lwdiv@divisor^0,w,c
  7921  00514C  5C0A               	subwf	___lwdiv@dividend^0,w,c
  7922  00514E  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7923  005150  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7924  005152  A0D8               	btfss	status,0,c
  7925  005154  D005               	goto	l12674
  7926  005156  500C               	movf	___lwdiv@divisor^0,w,c
  7927  005158  5E0A               	subwf	___lwdiv@dividend^0,f,c
  7928  00515A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7929  00515C  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7930  00515E  800F               	bsf	___lwdiv@quotient^0,0,c
  7931  005160                     l12674:
  7932  005160  90D8               	bcf	status,0,c
  7933  005162  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7934  005164  320C               	rrcf	___lwdiv@divisor^0,f,c
  7935  005166  2E0E               	decfsz	___lwdiv@counter^0,f,c
  7936  005168  D7ED               	goto	u15020
  7937  00516A                     l2224:
  7938  00516A  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  7939  00516E  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7940  005172  0012               	return		;funcret
  7941  005174                     __end_of___lwdiv:
  7942                           	callstack 0
  7943                           
  7944 ;; *************** function _grava_sd *****************
  7945 ;; Defined at:
  7946 ;;		line 537 in file "main.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/1
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7964 ;;Total ram usage:        0 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; Hardware stack levels required when called:   15
  7967 ;; This function calls:
  7968 ;;		_desliga_SPI
  7969 ;;		_desliga_uart
  7970 ;;		_escrita_sdcard
  7971 ;;		_inicializa_SPI
  7972 ;;		_inicializa_uart
  7973 ;; This function is called by:
  7974 ;;		_disparo_gravacao
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text49
  7979  005B34                     __ptext49:
  7980                           	callstack 0
  7981  005B34                     _grava_sd:
  7982                           	callstack 13
  7983                           
  7984                           ;main.c: 539: PORTBbits.RB3 = 0;
  7985                           
  7986                           ;incstack = 0
  7987  005B34  9681               	bcf	129,3,c	;volatile
  7988                           
  7989                           ;main.c: 540: desliga_uart();
  7990  005B36  ECBB  F02D         	call	_desliga_uart	;wreg free
  7991                           
  7992                           ;main.c: 541: inicializa_SPI();
  7993  005B3A  EC41  F02D         	call	_inicializa_SPI	;wreg free
  7994                           
  7995                           ;main.c: 542: escrita_sdcard();
  7996  005B3E  EC02  F01B         	call	_escrita_sdcard	;wreg free
  7997                           
  7998                           ;main.c: 543: desliga_SPI();
  7999  005B42  ECDD  F02D         	call	_desliga_SPI	;wreg free
  8000                           
  8001                           ;main.c: 544: inicializa_uart();
  8002  005B46  ECCB  F02C         	call	_inicializa_uart	;wreg free
  8003                           
  8004                           ;main.c: 545: PORTBbits.RB3 = 1;
  8005  005B4A  8681               	bsf	129,3,c	;volatile
  8006  005B4C  0012               	return		;funcret
  8007  005B4E                     __end_of_grava_sd:
  8008                           	callstack 0
  8009                           
  8010 ;; *************** function _inicializa_uart *****************
  8011 ;; Defined at:
  8012 ;;		line 206 in file "bibliotecas/uart.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/1
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8030 ;;Total ram usage:        0 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    4
  8033 ;; This function calls:
  8034 ;;		_configura_baudrate_uart
  8035 ;; This function is called by:
  8036 ;;		_main
  8037 ;;		_grava_sd
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text50
  8042  005996                     __ptext50:
  8043                           	callstack 0
  8044  005996                     _inicializa_uart:
  8045                           	callstack 26
  8046                           
  8047                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8048                           
  8049                           ;incstack = 0
  8050  005996  9C94               	bcf	148,6,c	;volatile
  8051                           
  8052                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8053  005998  9E94               	bcf	148,7,c	;volatile
  8054                           
  8055                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8056  00599A  0E80               	movlw	128
  8057  00599C  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8058  00599E  0E25               	movlw	37
  8059  0059A0  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8060  0059A2  0E00               	movlw	0
  8061  0059A4  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8062  0059A6  0E00               	movlw	0
  8063  0059A8  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8064  0059AA  ECE2  F01D         	call	_configura_baudrate_uart	;wreg free
  8065                           
  8066                           ;uart.c: 213: TXSTA = 0x20;
  8067  0059AE  0E20               	movlw	32
  8068  0059B0  6EAC               	movwf	172,c	;volatile
  8069                           
  8070                           ;uart.c: 214: RCSTA = 0x90;
  8071  0059B2  0E90               	movlw	144
  8072  0059B4  6EAB               	movwf	171,c	;volatile
  8073  0059B6  0012               	return		;funcret
  8074  0059B8                     __end_of_inicializa_uart:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _configura_baudrate_uart *****************
  8078 ;; Defined at:
  8079 ;;		line 50 in file "bibliotecas/uart.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  baudrate        4   23[COMRAM] const long 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  x               2   35[COMRAM] unsigned int 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      unsigned char 
  8086 ;; Registers used:
  8087 ;;		wreg, status,2, status,0, cstack
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/1
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8093 ;;      Params:         4       0       0       0       0       0       0       0       0
  8094 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8095 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8096 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8097 ;;Total ram usage:       14 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    3
  8100 ;; This function calls:
  8101 ;;		___aldiv
  8102 ;; This function is called by:
  8103 ;;		_inicializa_uart
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           	psect	text51
  8108  003BC4                     __ptext51:
  8109                           	callstack 0
  8110  003BC4                     _configura_baudrate_uart:
  8111                           	callstack 26
  8112                           
  8113                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8114                           
  8115                           ;incstack = 0
  8116  003BC4  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8117  003BC8  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8118  003BCC  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8119  003BD0  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8120  003BD4  0E06               	movlw	6
  8121  003BD6                     u14955:
  8122  003BD6  90D8               	bcf	status,0,c
  8123  003BD8  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8124  003BDA  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8125  003BDC  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8126  003BDE  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8127  003BE0  2EE8               	decfsz	wreg,f,c
  8128  003BE2  D7F9               	goto	u14955
  8129  003BE4  501C               	movf	??_configura_baudrate_uart^0,w,c
  8130  003BE6  0800               	sublw	0
  8131  003BE8  6E0A               	movwf	___aldiv@dividend^0,c
  8132  003BEA  0E6C               	movlw	108
  8133  003BEC  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8134  003BEE  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8135  003BF0  0EDC               	movlw	220
  8136  003BF2  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8137  003BF4  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8138  003BF6  0E02               	movlw	2
  8139  003BF8  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8140  003BFA  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8141  003BFC  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8142  003C00  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8143  003C04  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8144  003C08  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8145  003C0C  0E06               	movlw	6
  8146  003C0E                     u14965:
  8147  003C0E  90D8               	bcf	status,0,c
  8148  003C10  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8149  003C12  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8150  003C14  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8151  003C16  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8152  003C18  2EE8               	decfsz	wreg,f,c
  8153  003C1A  D7F9               	goto	u14965
  8154  003C1C  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8155  003C20  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8156  003C24  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8157  003C28  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8158  003C2C  EC9E  F020         	call	___aldiv	;wreg free
  8159  003C30  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8160  003C34  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8161                           
  8162                           ;uart.c: 55: if(x > 255)
  8163  003C38  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8164  003C3A  A0D8               	btfss	status,0,c
  8165  003C3C  D03B               	goto	l12652
  8166                           
  8167                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8168  003C3E  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8169  003C42  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8170  003C46  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8171  003C4A  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8172  003C4E  0E04               	movlw	4
  8173  003C50                     u14985:
  8174  003C50  90D8               	bcf	status,0,c
  8175  003C52  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8176  003C54  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8177  003C56  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8178  003C58  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8179  003C5A  2EE8               	decfsz	wreg,f,c
  8180  003C5C  D7F9               	goto	u14985
  8181  003C5E  501C               	movf	??_configura_baudrate_uart^0,w,c
  8182  003C60  0800               	sublw	0
  8183  003C62  6E0A               	movwf	___aldiv@dividend^0,c
  8184  003C64  0E6C               	movlw	108
  8185  003C66  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8186  003C68  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8187  003C6A  0EDC               	movlw	220
  8188  003C6C  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8189  003C6E  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8190  003C70  0E02               	movlw	2
  8191  003C72  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8192  003C74  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8193  003C76  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8194  003C7A  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8195  003C7E  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8196  003C82  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8197  003C86  0E04               	movlw	4
  8198  003C88                     u14995:
  8199  003C88  90D8               	bcf	status,0,c
  8200  003C8A  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8201  003C8C  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8202  003C8E  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8203  003C90  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8204  003C92  2EE8               	decfsz	wreg,f,c
  8205  003C94  D7F9               	goto	u14995
  8206  003C96  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8207  003C9A  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8208  003C9E  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8209  003CA2  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8210  003CA6  EC9E  F020         	call	___aldiv	;wreg free
  8211  003CAA  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8212  003CAE  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8213                           
  8214                           ;uart.c: 58: BRGH = 1;
  8215  003CB2  84AC               	bsf	4012,2,c	;volatile
  8216  003CB4                     l12652:
  8217                           
  8218                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8219  003CB4  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8220  003CB6  B0D8               	btfsc	status,0,c
  8221  003CB8  0012               	return	
  8222                           
  8223                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8224  003CBA  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8225                           
  8226                           ;uart.c: 63: SYNC = 0;
  8227  003CBE  98AC               	bcf	4012,4,c	;volatile
  8228                           
  8229                           ;uart.c: 64: SPEN = 1;
  8230  003CC0  8EAB               	bsf	4011,7,c	;volatile
  8231                           
  8232                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8233  003CC2  8E94               	bsf	148,7,c	;volatile
  8234                           
  8235                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8236  003CC4  9C94               	bcf	148,6,c	;volatile
  8237                           
  8238                           ;uart.c: 67: CREN = 1;
  8239  003CC6  88AB               	bsf	4011,4,c	;volatile
  8240                           
  8241                           ;uart.c: 68: TXEN = 1;
  8242  003CC8  8AAC               	bsf	4012,5,c	;volatile
  8243                           
  8244                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8245  003CCA  0012               	return		;funcret
  8246  003CCC                     __end_of_configura_baudrate_uart:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function ___aldiv *****************
  8250 ;; Defined at:
  8251 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  dividend        4    9[COMRAM] long 
  8254 ;;  divisor         4   13[COMRAM] long 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  quotient        4   19[COMRAM] long 
  8257 ;;  sign            1   18[COMRAM] unsigned char 
  8258 ;;  counter         1   17[COMRAM] unsigned char 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  4    9[COMRAM] long 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/1
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8268 ;;      Params:         8       0       0       0       0       0       0       0       0
  8269 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8271 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8272 ;;Total ram usage:       14 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    2
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_configura_baudrate_uart
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text52
  8283  00413C                     __ptext52:
  8284                           	callstack 0
  8285  00413C                     ___aldiv:
  8286                           	callstack 26
  8287                           
  8288                           ;incstack = 0
  8289  00413C  0E00               	movlw	0
  8290  00413E  6E13               	movwf	___aldiv@sign^0,c
  8291  004140  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8292  004142  D00A               	goto	l12084
  8293  004144  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8294  004146  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8295  004148  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8296  00414A  6C0E               	negf	___aldiv@divisor^0,c
  8297  00414C  0E00               	movlw	0
  8298  00414E  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8299  004150  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8300  004152  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8301  004154  0E01               	movlw	1
  8302  004156  6E13               	movwf	___aldiv@sign^0,c
  8303  004158                     l12084:
  8304  004158  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8305  00415A  D00A               	goto	l12090
  8306  00415C  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8307  00415E  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8308  004160  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8309  004162  6C0A               	negf	___aldiv@dividend^0,c
  8310  004164  0E00               	movlw	0
  8311  004166  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8312  004168  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8313  00416A  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8314  00416C  0E01               	movlw	1
  8315  00416E  1A13               	xorwf	___aldiv@sign^0,f,c
  8316  004170                     l12090:
  8317  004170  0E00               	movlw	0
  8318  004172  6E14               	movwf	___aldiv@quotient^0,c
  8319  004174  0E00               	movlw	0
  8320  004176  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8321  004178  0E00               	movlw	0
  8322  00417A  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8323  00417C  0E00               	movlw	0
  8324  00417E  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8325  004180  500E               	movf	___aldiv@divisor^0,w,c
  8326  004182  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8327  004184  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8328  004186  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8329  004188  B4D8               	btfsc	status,2,c
  8330  00418A  D02A               	goto	l12112
  8331  00418C  0E01               	movlw	1
  8332  00418E  6E12               	movwf	___aldiv@counter^0,c
  8333  004190  D006               	goto	l12098
  8334  004192                     l12096:
  8335  004192  90D8               	bcf	status,0,c
  8336  004194  360E               	rlcf	___aldiv@divisor^0,f,c
  8337  004196  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8338  004198  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8339  00419A  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8340  00419C  2A12               	incf	___aldiv@counter^0,f,c
  8341  00419E                     l12098:
  8342  00419E  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8343  0041A0  D7F8               	goto	l12096
  8344  0041A2                     u14050:
  8345  0041A2  90D8               	bcf	status,0,c
  8346  0041A4  3614               	rlcf	___aldiv@quotient^0,f,c
  8347  0041A6  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8348  0041A8  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8349  0041AA  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8350  0041AC  500E               	movf	___aldiv@divisor^0,w,c
  8351  0041AE  5C0A               	subwf	___aldiv@dividend^0,w,c
  8352  0041B0  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8353  0041B2  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8354  0041B4  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8355  0041B6  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8356  0041B8  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8357  0041BA  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8358  0041BC  A0D8               	btfss	status,0,c
  8359  0041BE  D009               	goto	l12108
  8360  0041C0  500E               	movf	___aldiv@divisor^0,w,c
  8361  0041C2  5E0A               	subwf	___aldiv@dividend^0,f,c
  8362  0041C4  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8363  0041C6  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8364  0041C8  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8365  0041CA  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8366  0041CC  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8367  0041CE  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8368  0041D0  8014               	bsf	___aldiv@quotient^0,0,c
  8369  0041D2                     l12108:
  8370  0041D2  90D8               	bcf	status,0,c
  8371  0041D4  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8372  0041D6  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8373  0041D8  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8374  0041DA  320E               	rrcf	___aldiv@divisor^0,f,c
  8375  0041DC  2E12               	decfsz	___aldiv@counter^0,f,c
  8376  0041DE  D7E1               	goto	u14050
  8377  0041E0                     l12112:
  8378  0041E0  5013               	movf	___aldiv@sign^0,w,c
  8379  0041E2  B4D8               	btfsc	status,2,c
  8380  0041E4  D008               	goto	l12116
  8381  0041E6  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8382  0041E8  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8383  0041EA  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8384  0041EC  6C14               	negf	___aldiv@quotient^0,c
  8385  0041EE  0E00               	movlw	0
  8386  0041F0  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8387  0041F2  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8388  0041F4  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8389  0041F6                     l12116:
  8390  0041F6  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8391  0041FA  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8392  0041FE  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8393  004202  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8394  004206  0012               	return		;funcret
  8395  004208                     __end_of___aldiv:
  8396                           	callstack 0
  8397                           
  8398 ;; *************** function _inicializa_SPI *****************
  8399 ;; Defined at:
  8400 ;;		line 48 in file "bibliotecas/SPI.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/1
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8414 ;;      Params:         0       0       0       0       0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8418 ;;Total ram usage:        0 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    2
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_grava_sd
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text53
  8429  005A82                     __ptext53:
  8430                           	callstack 0
  8431  005A82                     _inicializa_SPI:
  8432                           	callstack 25
  8433                           
  8434                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8435                           
  8436                           ;incstack = 0
  8437  005A82  9293               	bcf	147,1,c	;volatile
  8438                           
  8439                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8440  005A84  9A93               	bcf	147,5,c	;volatile
  8441                           
  8442                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8443  005A86  8093               	bsf	147,0,c	;volatile
  8444                           
  8445                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8446  005A88  9E94               	bcf	148,7,c	;volatile
  8447                           
  8448                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8449  005A8A  8A8A               	bsf	138,5,c	;volatile
  8450                           
  8451                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8452  005A8C  0E3F               	movlw	63
  8453  005A8E  16C7               	andwf	199,f,c	;volatile
  8454                           
  8455                           ;SPI.c: 57: SSPCON1 = 0x00;
  8456  005A90  0E00               	movlw	0
  8457  005A92  6EC6               	movwf	198,c	;volatile
  8458                           
  8459                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8460  005A94  9EC7               	bcf	199,7,c	;volatile
  8461                           
  8462                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8463  005A96  8CC7               	bsf	199,6,c	;volatile
  8464                           
  8465                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8466  005A98  98C6               	bcf	198,4,c	;volatile
  8467                           
  8468                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8469  005A9A  0E03               	movlw	3
  8470  005A9C  6EC6               	movwf	198,c	;volatile
  8471                           
  8472                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8473  005A9E  8AC6               	bsf	198,5,c	;volatile
  8474  005AA0  0012               	return		;funcret
  8475  005AA2                     __end_of_inicializa_SPI:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _escrita_sdcard *****************
  8479 ;; Defined at:
  8480 ;;		line 208 in file "bibliotecas/SDCard.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  fix_gps         3    0        PTR unsigned char 
  8485 ;;  bw              2    0        unsigned short 
  8486 ;;  j               1    0        unsigned char 
  8487 ;;  i               1    0        unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/1
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8500 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8501 ;;Total ram usage:        0 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:   14
  8504 ;; This function calls:
  8505 ;;		_data_nome
  8506 ;;		_f_close
  8507 ;;		_f_lseek
  8508 ;;		_f_mount
  8509 ;;		_f_open
  8510 ;;		_fprintf
  8511 ;;		_gps
  8512 ;;		_hora_nome
  8513 ;;		_strcat
  8514 ;; This function is called by:
  8515 ;;		_grava_sd
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text54
  8520  003604                     __ptext54:
  8521                           	callstack 0
  8522  003604                     _escrita_sdcard:
  8523                           	callstack 13
  8524                           
  8525                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 217: f_mount(0,&fs);
  8526                           
  8527                           ;incstack = 0
  8528  003604  0E96               	movlw	low _fs
  8529  003606  6E0A               	movwf	f_mount@fs^0,c
  8530  003608  0E03               	movlw	high _fs
  8531  00360A  6E0B               	movwf	(f_mount@fs+1)^0,c
  8532  00360C  0E00               	movlw	0
  8533  00360E  ECA2  F029         	call	_f_mount
  8534                           
  8535                           ;SDCard.c: 218: if(!f_fix)
  8536  003612  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8537  003614  A4D8               	btfss	status,2,c
  8538  003616  D023               	goto	l12934
  8539                           
  8540                           ;SDCard.c: 219: {;SDCard.c: 220: gps();
  8541  003618  EC28  F02B         	call	_gps	;wreg free
  8542                           
  8543                           ;SDCard.c: 221: if(data[0] != ' ' && hora[0] != ' ')
  8544  00361C  0E20               	movlw	32
  8545  00361E  0101               	movlb	1	; () banked
  8546  003620  19D8               	xorwf	_data& (0+255),w,b
  8547  003622  B4D8               	btfsc	status,2,c
  8548  003624  D01C               	goto	l12934
  8549                           
  8550                           ; BSR set to: 1
  8551  003626  0E20               	movlw	32
  8552  003628  19CA               	xorwf	_hora& (0+255),w,b
  8553  00362A  B4D8               	btfsc	status,2,c
  8554  00362C  D018               	goto	l12934
  8555                           
  8556                           ; BSR set to: 1
  8557                           ;SDCard.c: 222: {;SDCard.c: 223: data_nome(data);
  8558  00362E  0ED8               	movlw	low _data
  8559  003630  6E0A               	movwf	data_nome@p_buff^0,c
  8560  003632  0E01               	movlw	high _data
  8561  003634  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8562  003636  EC59  F02C         	call	_data_nome	;wreg free
  8563                           
  8564                           ;SDCard.c: 224: hora_nome(hora);
  8565  00363A  0ECA               	movlw	low _hora
  8566  00363C  6E0A               	movwf	hora_nome@p_buff^0,c
  8567  00363E  0E01               	movlw	high _hora
  8568  003640  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8569  003642  EC2F  F02C         	call	_hora_nome	;wreg free
  8570                           
  8571                           ; BSR set to: 1
  8572                           ;SDCard.c: 226: strcat(filename, ".tlm");
  8573  003646  0E56               	movlw	low _filename
  8574  003648  6E0A               	movwf	strcat@to^0,c
  8575  00364A  0E02               	movlw	high _filename
  8576  00364C  6E0B               	movwf	(strcat@to+1)^0,c
  8577  00364E  0E66               	movlw	low STR_11
  8578  003650  6E0C               	movwf	strcat@from^0,c
  8579  003652  0E62               	movlw	high STR_11
  8580  003654  6E0D               	movwf	(strcat@from+1)^0,c
  8581  003656  ECEA  F029         	call	_strcat	;wreg free
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;SDCard.c: 227: f_fix = 1;
  8585  00365A  0E01               	movlw	1
  8586  00365C  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8587  00365E                     l12934:
  8588                           
  8589                           ;SDCard.c: 228: };SDCard.c: 229: };SDCard.c: 231: if(f_fix)
  8590  00365E  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8591  003660  B4D8               	btfsc	status,2,c
  8592  003662  0012               	return	
  8593                           
  8594                           ;SDCard.c: 232: {;SDCard.c: 233: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8595  003664  0E7C               	movlw	low _fil
  8596  003666  0100               	movlb	0	; () banked
  8597  003668  6F98               	movwf	f_open@fp& (0+255),b
  8598  00366A  0E01               	movlw	high _fil
  8599  00366C  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8600  00366E  0E56               	movlw	low _filename
  8601  003670  6F9A               	movwf	f_open@path& (0+255),b
  8602  003672  0E02               	movlw	high _filename
  8603  003674  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8604  003676  0E02               	movlw	2
  8605  003678  6F9C               	movwf	f_open@mode& (0+255),b
  8606  00367A  EC66  F009         	call	_f_open	;wreg free
  8607  00367E  0900               	iorlw	0
  8608  003680  A4D8               	btfss	status,2,c
  8609  003682  D051               	goto	l12948
  8610                           
  8611                           ;SDCard.c: 234: {;SDCard.c: 236: f_lseek(&fil, ((&fil)->fsize));
  8612  003684  0E7C               	movlw	low _fil
  8613  003686  0100               	movlb	0	; () banked
  8614  003688  6F86               	movwf	f_lseek@fp& (0+255),b
  8615  00368A  0E01               	movlw	high _fil
  8616  00368C  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  8617  00368E  C186  F088         	movff	_fil+10,f_lseek@ofs
  8618  003692  C187  F089         	movff	_fil+11,f_lseek@ofs+1
  8619  003696  C188  F08A         	movff	_fil+12,f_lseek@ofs+2
  8620  00369A  C189  F08B         	movff	_fil+13,f_lseek@ofs+3
  8621  00369E  EC79  F005         	call	_f_lseek	;wreg free
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;SDCard.c: 237: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8625  0036A2  0E7C               	movlw	low _fil
  8626  0036A4  6FB1               	movwf	fprintf@fil& (0+255),b
  8627  0036A6  0E01               	movlw	high _fil
  8628  0036A8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8629  0036AA  0EA2               	movlw	low STR_12
  8630  0036AC  6FB3               	movwf	fprintf@str& (0+255),b
  8631  0036AE  0E61               	movlw	high STR_12
  8632  0036B0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8633  0036B2  0EDE               	movlw	low _vel
  8634  0036B4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8635  0036B6  0E01               	movlw	high _vel
  8636  0036B8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8637  0036BA  0EB2               	movlw	low _lt
  8638  0036BC  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  8639  0036BE  0E01               	movlw	high _lt
  8640  0036C0  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  8641  0036C2  0E98               	movlw	low _lo
  8642  0036C4  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  8643  0036C6  0E01               	movlw	high _lo
  8644  0036C8  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  8645  0036CA  ECBF  F007         	call	_fprintf	;wreg free
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;SDCard.c: 238: fprintf(&fil, "r0;c0;k0;");
  8649  0036CE  0E7C               	movlw	low _fil
  8650  0036D0  6FB1               	movwf	fprintf@fil& (0+255),b
  8651  0036D2  0E01               	movlw	high _fil
  8652  0036D4  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8653  0036D6  0EFC               	movlw	low STR_13
  8654  0036D8  6FB3               	movwf	fprintf@str& (0+255),b
  8655  0036DA  0E61               	movlw	high STR_13
  8656  0036DC  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8657  0036DE  ECBF  F007         	call	_fprintf	;wreg free
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;SDCard.c: 239: fprintf(&fil, "h%s;dN/A;", hora);
  8661  0036E2  0E7C               	movlw	low _fil
  8662  0036E4  6FB1               	movwf	fprintf@fil& (0+255),b
  8663  0036E6  0E01               	movlw	high _fil
  8664  0036E8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8665  0036EA  0E06               	movlw	low STR_14
  8666  0036EC  6FB3               	movwf	fprintf@str& (0+255),b
  8667  0036EE  0E62               	movlw	high STR_14
  8668  0036F0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8669  0036F2  0ECA               	movlw	low _hora
  8670  0036F4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8671  0036F6  0E01               	movlw	high _hora
  8672  0036F8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8673  0036FA  ECBF  F007         	call	_fprintf	;wreg free
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;SDCard.c: 240: fprintf(&fil, "f%c;\n", fence);
  8677  0036FE  0E7C               	movlw	low _fil
  8678  003700  6FB1               	movwf	fprintf@fil& (0+255),b
  8679  003702  0E01               	movlw	high _fil
  8680  003704  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8681  003706  0E56               	movlw	low STR_15
  8682  003708  6FB3               	movwf	fprintf@str& (0+255),b
  8683  00370A  0E62               	movlw	high STR_15
  8684  00370C  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8685  00370E  C0F5  F0B5         	movff	_fence,?_fprintf+4
  8686  003712  6BB6               	clrf	(?_fprintf+5)& (0+255),b
  8687  003714  ECBF  F007         	call	_fprintf	;wreg free
  8688                           
  8689                           ;SDCard.c: 243: f_close(&fil);
  8690  003718  0E7C               	movlw	low _fil
  8691  00371A  6F69               	movwf	f_close@fp& (0+255),b
  8692  00371C  0E01               	movlw	high _fil
  8693  00371E  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8694  003720  EC19  F02C         	call	_f_close	;wreg free
  8695                           
  8696                           ;SDCard.c: 244: }
  8697  003724  0012               	return	
  8698  003726                     l12948:
  8699                           
  8700                           ;SDCard.c: 245: else;SDCard.c: 246: {;SDCard.c: 247: f_open(&fil, filename, 0x08 );
  8701  003726  0E7C               	movlw	low _fil
  8702  003728  0100               	movlb	0	; () banked
  8703  00372A  6F98               	movwf	f_open@fp& (0+255),b
  8704  00372C  0E01               	movlw	high _fil
  8705  00372E  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8706  003730  0E56               	movlw	low _filename
  8707  003732  6F9A               	movwf	f_open@path& (0+255),b
  8708  003734  0E02               	movlw	high _filename
  8709  003736  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8710  003738  0E08               	movlw	8
  8711  00373A  6F9C               	movwf	f_open@mode& (0+255),b
  8712  00373C  EC66  F009         	call	_f_open	;wreg free
  8713                           
  8714                           ;SDCard.c: 248: f_close(&fil);
  8715  003740  0E7C               	movlw	low _fil
  8716  003742  0100               	movlb	0	; () banked
  8717  003744  6F69               	movwf	f_close@fp& (0+255),b
  8718  003746  0E01               	movlw	high _fil
  8719  003748  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8720  00374A  EC19  F02C         	call	_f_close	;wreg free
  8721  00374E  0012               	return		;funcret
  8722  003750                     __end_of_escrita_sdcard:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _strcat *****************
  8726 ;; Defined at:
  8727 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  to              2    9[COMRAM] PTR unsigned char 
  8730 ;;		 -> filename(20), 
  8731 ;;  from            2   11[COMRAM] PTR const unsigned char 
  8732 ;;		 -> STR_11(5), 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  cp              2   13[COMRAM] PTR unsigned char 
  8735 ;;		 -> filename(20), 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  2    9[COMRAM] PTR unsigned char 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8740 ;; Tracked objects:
  8741 ;;		On entry : 3F/1
  8742 ;;		On exit  : 3F/1
  8743 ;;		Unchanged: 3F/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8745 ;;      Params:         4       0       0       0       0       0       0       0       0
  8746 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8748 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8749 ;;Total ram usage:        6 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    2
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_escrita_sdcard
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text55
  8760  0053D4                     __ptext55:
  8761                           	callstack 0
  8762  0053D4                     _strcat:
  8763                           	callstack 24
  8764                           
  8765                           ; BSR set to: 1
  8766                           
  8767                           ;incstack = 0
  8768  0053D4  C00A  F00E         	movff	strcat@to,strcat@cp
  8769  0053D8  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  8770  0053DC  D002               	goto	l12392
  8771  0053DE                     l12390:
  8772                           
  8773                           ; BSR set to: 1
  8774  0053DE  4A0E               	infsnz	strcat@cp^0,f,c
  8775  0053E0  2A0F               	incf	(strcat@cp+1)^0,f,c
  8776  0053E2                     l12392:
  8777                           
  8778                           ; BSR set to: 1
  8779  0053E2  C00E  FFD9         	movff	strcat@cp,fsr2l
  8780  0053E6  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8781  0053EA  50DF               	movf	indf2,w,c
  8782  0053EC  B4D8               	btfsc	status,2,c
  8783  0053EE  D005               	goto	l12396
  8784  0053F0  D7F6               	goto	l12390
  8785  0053F2                     l12394:
  8786                           
  8787                           ; BSR set to: 1
  8788  0053F2  4A0E               	infsnz	strcat@cp^0,f,c
  8789  0053F4  2A0F               	incf	(strcat@cp+1)^0,f,c
  8790  0053F6  4A0C               	infsnz	strcat@from^0,f,c
  8791  0053F8  2A0D               	incf	(strcat@from+1)^0,f,c
  8792  0053FA                     l12396:
  8793                           
  8794                           ; BSR set to: 1
  8795  0053FA  C00C  FFF6         	movff	strcat@from,tblptrl
  8796  0053FE  C00D  FFF7         	movff	strcat@from+1,tblptrh
  8797  005402                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8798  005402  6AF8               	clrf	tblptru,c
  8799  005404                     	endif
  8800  005404                     	if	0	;tblptru may be non-zero
  8801  005404                     	endif
  8802  005404  C00E  FFD9         	movff	strcat@cp,fsr2l
  8803  005408  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8804  00540C  0008               	tblrd		*
  8805  00540E  CFF5 FFDF          	movff	tablat,indf2
  8806  005412  50DF               	movf	indf2,w,c
  8807  005414  B4D8               	btfsc	status,2,c
  8808  005416  0012               	return	
  8809  005418  D7EC               	goto	l12394
  8810  00541A                     __end_of_strcat:
  8811                           	callstack 0
  8812                           
  8813 ;; *************** function _hora_nome *****************
  8814 ;; Defined at:
  8815 ;;		line 414 in file "bibliotecas/SDCard.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  8818 ;;		 -> hora(7), 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  i               1   11[COMRAM] unsigned char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8825 ;; Tracked objects:
  8826 ;;		On entry : 3F/1
  8827 ;;		On exit  : 3F/1
  8828 ;;		Unchanged: 3F/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8830 ;;      Params:         2       0       0       0       0       0       0       0       0
  8831 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8833 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8834 ;;Total ram usage:        3 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    2
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_escrita_sdcard
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text56
  8845  00585E                     __ptext56:
  8846                           	callstack 0
  8847  00585E                     _hora_nome:
  8848                           	callstack 24
  8849                           
  8850                           ; BSR set to: 1
  8851                           ;SDCard.c: 416: unsigned char i;;SDCard.c: 417: for(i=4; i<8;i++)
  8852                           
  8853                           ; BSR set to: 1
  8854                           ;incstack = 0
  8855  00585E  0E04               	movlw	4
  8856  005860  6E0C               	movwf	hora_nome@i^0,c
  8857  005862                     l12380:
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;SDCard.c: 418: {;SDCard.c: 419: filename[i] = *p_buff;
  8861  005862  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  8862  005866  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  8863  00586A  0E56               	movlw	low _filename
  8864  00586C  240C               	addwf	hora_nome@i^0,w,c
  8865  00586E  6EE1               	movwf	fsr1l,c
  8866  005870  6AE2               	clrf	fsr1h,c
  8867  005872  0E02               	movlw	high _filename
  8868  005874  22E2               	addwfc	fsr1h,f,c
  8869  005876  CFDF FFE7          	movff	indf2,indf1
  8870                           
  8871                           ; BSR set to: 1
  8872                           ;SDCard.c: 420: p_buff++;
  8873  00587A  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  8874  00587C  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  8875                           
  8876                           ; BSR set to: 1
  8877  00587E  2A0C               	incf	hora_nome@i^0,f,c
  8878                           
  8879                           ; BSR set to: 1
  8880  005880  0E07               	movlw	7
  8881  005882  640C               	cpfsgt	hora_nome@i^0,c
  8882  005884  D7EE               	goto	l12380
  8883  005886  0012               	return	
  8884  005888                     __end_of_hora_nome:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _gps *****************
  8888 ;; Defined at:
  8889 ;;		line 92 in file "bibliotecas/GPS.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  flag_fix        2   12[COMRAM] PTR unsigned char 
  8894 ;;		 -> rawFix(2), 
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0
  8905 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8906 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8907 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8908 ;;Total ram usage:        3 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    3
  8911 ;; This function calls:
  8912 ;;		_fix
  8913 ;;		_get_fix
  8914 ;;		_get_gpstime
  8915 ;;		_get_latitude
  8916 ;;		_get_longitude
  8917 ;;		_get_rawdate
  8918 ;;		_get_rawspeed
  8919 ;; This function is called by:
  8920 ;;		_escrita_sdcard
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text57
  8926  005650                     __ptext57:
  8927                           	callstack 0
  8928  005650                     _gps:
  8929                           	callstack 27
  8930                           
  8931                           ;GPS.c: 94: unsigned char *flag_fix;;GPS.c: 95: get_fix();
  8932                           
  8933                           ; BSR set to: 1
  8934                           ;incstack = 0
  8935  005650  EC8E  F02B         	call	_get_fix	;wreg free
  8936                           
  8937                           ;GPS.c: 96: flag_fix = fix();
  8938  005654  EC23  F02E         	call	_fix	;wreg free
  8939  005658  C00A  F00D         	movff	?_fix,gps@flag_fix
  8940  00565C  C00B  F00E         	movff	?_fix+1,gps@flag_fix+1
  8941                           
  8942                           ;GPS.c: 97: if(flag_fix[0] == '1')
  8943  005660  C00D  FFD9         	movff	gps@flag_fix,fsr2l
  8944  005664  C00E  FFDA         	movff	gps@flag_fix+1,fsr2h
  8945  005668  0E31               	movlw	49
  8946  00566A  18DE               	xorwf	postinc2,w,c
  8947  00566C  A4D8               	btfss	status,2,c
  8948  00566E  0012               	return	
  8949                           
  8950                           ;GPS.c: 98: {;GPS.c: 99: get_gpstime();
  8951  005670  EC44  F02C         	call	_get_gpstime	;wreg free
  8952                           
  8953                           ;GPS.c: 100: get_latitude();
  8954  005674  EC7E  F029         	call	_get_latitude	;wreg free
  8955                           
  8956                           ;GPS.c: 101: get_longitude();
  8957  005678  EC5A  F029         	call	_get_longitude	;wreg free
  8958                           
  8959                           ;GPS.c: 102: get_rawdate();
  8960  00567C  EC76  F02B         	call	_get_rawdate	;wreg free
  8961                           
  8962                           ;GPS.c: 103: get_rawspeed();
  8963  005680  EC5E  F02B         	call	_get_rawspeed	;wreg free
  8964  005684  0012               	return		;funcret
  8965  005686                     __end_of_gps:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _get_rawspeed *****************
  8969 ;; Defined at:
  8970 ;;		line 310 in file "bibliotecas/GPS.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;  index           1   10[COMRAM] unsigned char 
  8975 ;;  index_speed     1    9[COMRAM] unsigned char 
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8980 ;; Tracked objects:
  8981 ;;		On entry : 3F/1
  8982 ;;		On exit  : 3F/1
  8983 ;;		Unchanged: 3F/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0
  8986 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8988 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8989 ;;Total ram usage:        2 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    2
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_gps
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text58
  9000  0056BC                     __ptext58:
  9001                           	callstack 0
  9002  0056BC                     _get_rawspeed:
  9003                           	callstack 27
  9004                           
  9005                           ; BSR set to: 1
  9006                           ;GPS.c: 312: unsigned char index_speed, index;;GPS.c: 314: index_speed = 0;
  9007                           
  9008                           ;incstack = 0
  9009  0056BC  0E00               	movlw	0
  9010  0056BE  6E0A               	movwf	get_rawspeed@index_speed^0,c
  9011                           
  9012                           ;GPS.c: 316: for(index = 39; index<44; index++)
  9013  0056C0  0E27               	movlw	39
  9014  0056C2  6E0B               	movwf	get_rawspeed@index^0,c
  9015  0056C4                     l11706:
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;GPS.c: 317: {;GPS.c: 318: rawSpeed[index_speed] = rmc_buffer[index];
  9019  0056C4  0E50               	movlw	low _rmc_buffer
  9020  0056C6  240B               	addwf	get_rawspeed@index^0,w,c
  9021  0056C8  6ED9               	movwf	fsr2l,c
  9022  0056CA  6ADA               	clrf	fsr2h,c
  9023  0056CC  0E03               	movlw	high _rmc_buffer
  9024  0056CE  22DA               	addwfc	fsr2h,f,c
  9025  0056D0  0E6A               	movlw	low _rawSpeed
  9026  0056D2  240A               	addwf	get_rawspeed@index_speed^0,w,c
  9027  0056D4  6EE1               	movwf	fsr1l,c
  9028  0056D6  6AE2               	clrf	fsr1h,c
  9029  0056D8  0E02               	movlw	high _rawSpeed
  9030  0056DA  22E2               	addwfc	fsr1h,f,c
  9031  0056DC  CFDF FFE7          	movff	indf2,indf1
  9032                           
  9033                           ; BSR set to: 1
  9034                           ;GPS.c: 319: index_speed++;
  9035  0056E0  2A0A               	incf	get_rawspeed@index_speed^0,f,c
  9036                           
  9037                           ; BSR set to: 1
  9038  0056E2  2A0B               	incf	get_rawspeed@index^0,f,c
  9039                           
  9040                           ; BSR set to: 1
  9041  0056E4  0E2B               	movlw	43
  9042  0056E6  640B               	cpfsgt	get_rawspeed@index^0,c
  9043  0056E8  D7ED               	goto	l11706
  9044  0056EA  0012               	return	
  9045  0056EC                     __end_of_get_rawspeed:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _get_rawdate *****************
  9049 ;; Defined at:
  9050 ;;		line 295 in file "bibliotecas/GPS.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  index           1   10[COMRAM] unsigned char 
  9055 ;;  index_date      1    9[COMRAM] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9060 ;; Tracked objects:
  9061 ;;		On entry : 3F/1
  9062 ;;		On exit  : 3F/1
  9063 ;;		Unchanged: 3F/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0
  9066 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9068 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9069 ;;Total ram usage:        2 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    2
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_gps
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text59
  9080  0056EC                     __ptext59:
  9081                           	callstack 0
  9082  0056EC                     _get_rawdate:
  9083                           	callstack 27
  9084                           
  9085                           ; BSR set to: 1
  9086                           ;GPS.c: 297: unsigned char index_date, index;;GPS.c: 299: index_date = 0;
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;incstack = 0
  9090  0056EC  0E00               	movlw	0
  9091  0056EE  6E0A               	movwf	get_rawdate@index_date^0,c
  9092                           
  9093                           ;GPS.c: 301: for(index = 46; index<52; index++)
  9094  0056F0  0E2E               	movlw	46
  9095  0056F2  6E0B               	movwf	get_rawdate@index^0,c
  9096  0056F4                     l11692:
  9097                           
  9098                           ; BSR set to: 1
  9099                           ;GPS.c: 302: {;GPS.c: 303: rawDate[index_date] = rmc_buffer[index];
  9100  0056F4  0E50               	movlw	low _rmc_buffer
  9101  0056F6  240B               	addwf	get_rawdate@index^0,w,c
  9102  0056F8  6ED9               	movwf	fsr2l,c
  9103  0056FA  6ADA               	clrf	fsr2h,c
  9104  0056FC  0E03               	movlw	high _rmc_buffer
  9105  0056FE  22DA               	addwfc	fsr2h,f,c
  9106  005700  0EE4               	movlw	low _rawDate
  9107  005702  240A               	addwf	get_rawdate@index_date^0,w,c
  9108  005704  6EE1               	movwf	fsr1l,c
  9109  005706  6AE2               	clrf	fsr1h,c
  9110  005708  0E01               	movlw	high _rawDate
  9111  00570A  22E2               	addwfc	fsr1h,f,c
  9112  00570C  CFDF FFE7          	movff	indf2,indf1
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;GPS.c: 304: index_date++;
  9116  005710  2A0A               	incf	get_rawdate@index_date^0,f,c
  9117                           
  9118                           ; BSR set to: 1
  9119  005712  2A0B               	incf	get_rawdate@index^0,f,c
  9120                           
  9121                           ; BSR set to: 1
  9122  005714  0E33               	movlw	51
  9123  005716  640B               	cpfsgt	get_rawdate@index^0,c
  9124  005718  D7ED               	goto	l11692
  9125  00571A  0012               	return	
  9126  00571C                     __end_of_get_rawdate:
  9127                           	callstack 0
  9128                           
  9129 ;; *************** function _get_longitude *****************
  9130 ;; Defined at:
  9131 ;;		line 273 in file "bibliotecas/GPS.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;		None
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  index           1   10[COMRAM] unsigned char 
  9136 ;;  index_long      1    9[COMRAM] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 3F/1
  9143 ;;		On exit  : 3F/1
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0
  9147 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9149 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9150 ;;Total ram usage:        2 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    2
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_gps
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text60
  9161  0052B4                     __ptext60:
  9162                           	callstack 0
  9163  0052B4                     _get_longitude:
  9164                           	callstack 27
  9165                           
  9166                           ; BSR set to: 1
  9167                           ;GPS.c: 275: unsigned char index_long, index;;GPS.c: 277: index_long = 1;
  9168                           
  9169                           ; BSR set to: 1
  9170                           ;incstack = 0
  9171  0052B4  0E01               	movlw	1
  9172  0052B6  6E0A               	movwf	get_longitude@index_long^0,c
  9173                           
  9174                           ;GPS.c: 279: for(index = 23; index<34; index++)
  9175  0052B8  0E17               	movlw	23
  9176  0052BA  6E0B               	movwf	get_longitude@index^0,c
  9177  0052BC                     l11672:
  9178                           
  9179                           ; BSR set to: 1
  9180                           ;GPS.c: 280: {;GPS.c: 281: rawLongitude[index_long] = gga_buffer[index];
  9181  0052BC  0E00               	movlw	low _gga_buffer
  9182  0052BE  240B               	addwf	get_longitude@index^0,w,c
  9183  0052C0  6ED9               	movwf	fsr2l,c
  9184  0052C2  6ADA               	clrf	fsr2h,c
  9185  0052C4  0E03               	movlw	high _gga_buffer
  9186  0052C6  22DA               	addwfc	fsr2h,f,c
  9187  0052C8  0EA5               	movlw	low _rawLongitude
  9188  0052CA  240A               	addwf	get_longitude@index_long^0,w,c
  9189  0052CC  6EE1               	movwf	fsr1l,c
  9190  0052CE  6AE2               	clrf	fsr1h,c
  9191  0052D0  0E01               	movlw	high _rawLongitude
  9192  0052D2  22E2               	addwfc	fsr1h,f,c
  9193  0052D4  CFDF FFE7          	movff	indf2,indf1
  9194                           
  9195                           ; BSR set to: 1
  9196                           ;GPS.c: 282: index_long++;
  9197  0052D8  2A0A               	incf	get_longitude@index_long^0,f,c
  9198                           
  9199                           ; BSR set to: 1
  9200  0052DA  2A0B               	incf	get_longitude@index^0,f,c
  9201                           
  9202                           ; BSR set to: 1
  9203  0052DC  0E21               	movlw	33
  9204  0052DE  640B               	cpfsgt	get_longitude@index^0,c
  9205  0052E0  D7ED               	goto	l11672
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;GPS.c: 283: };GPS.c: 284: if(gga_buffer[32] == 'E')
  9209  0052E2  0E45               	movlw	69
  9210  0052E4  0103               	movlb	3	; () banked
  9211  0052E6  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  9212  0052E8  A4D8               	btfss	status,2,c
  9213  0052EA  D004               	goto	l11684
  9214                           
  9215                           ; BSR set to: 3
  9216                           ;GPS.c: 285: {;GPS.c: 286: rawLongitude[0] = '0';
  9217  0052EC  0E30               	movlw	48
  9218  0052EE  0101               	movlb	1	; () banked
  9219  0052F0  6FA5               	movwf	_rawLongitude& (0+255),b
  9220                           
  9221                           ;GPS.c: 287: }
  9222  0052F2  0012               	return	
  9223  0052F4                     l11684:
  9224                           
  9225                           ; BSR set to: 3
  9226                           ;GPS.c: 288: else;GPS.c: 289: {;GPS.c: 290: rawLongitude[0] = '-';
  9227  0052F4  0E2D               	movlw	45
  9228  0052F6  0101               	movlb	1	; () banked
  9229  0052F8  6FA5               	movwf	_rawLongitude& (0+255),b
  9230                           
  9231                           ; BSR set to: 1
  9232  0052FA  0012               	return		;funcret
  9233  0052FC                     __end_of_get_longitude:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _get_latitude *****************
  9237 ;; Defined at:
  9238 ;;		line 249 in file "bibliotecas/GPS.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  time_buffer    15    0        unsigned char [15]
  9243 ;;  index           1   10[COMRAM] unsigned char 
  9244 ;;  index_lat       1    9[COMRAM] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 3F/1
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0
  9255 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9257 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9258 ;;Total ram usage:        2 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    2
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_gps
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text61
  9269  0052FC                     __ptext61:
  9270                           	callstack 0
  9271  0052FC                     _get_latitude:
  9272                           	callstack 27
  9273                           
  9274                           ;GPS.c: 251: unsigned char index_lat, index;;GPS.c: 252: unsigned char time_buffer[15];;
      +                          GPS.c: 254: index_lat = 1;
  9275                           
  9276                           ; BSR set to: 1
  9277                           ;incstack = 0
  9278  0052FC  0E01               	movlw	1
  9279  0052FE  6E0A               	movwf	get_latitude@index_lat^0,c
  9280                           
  9281                           ;GPS.c: 256: for(index = 10; index<20; index++)
  9282  005300  0E0A               	movlw	10
  9283  005302  6E0B               	movwf	get_latitude@index^0,c
  9284  005304                     l11652:
  9285                           
  9286                           ;GPS.c: 257: {;GPS.c: 258: rawLatitude[index_lat] = gga_buffer[index];
  9287  005304  0E00               	movlw	low _gga_buffer
  9288  005306  240B               	addwf	get_latitude@index^0,w,c
  9289  005308  6ED9               	movwf	fsr2l,c
  9290  00530A  6ADA               	clrf	fsr2h,c
  9291  00530C  0E03               	movlw	high _gga_buffer
  9292  00530E  22DA               	addwfc	fsr2h,f,c
  9293  005310  0EBE               	movlw	low _rawLatitude
  9294  005312  240A               	addwf	get_latitude@index_lat^0,w,c
  9295  005314  6EE1               	movwf	fsr1l,c
  9296  005316  6AE2               	clrf	fsr1h,c
  9297  005318  0E01               	movlw	high _rawLatitude
  9298  00531A  22E2               	addwfc	fsr1h,f,c
  9299  00531C  CFDF FFE7          	movff	indf2,indf1
  9300                           
  9301                           ;GPS.c: 259: index_lat++;
  9302  005320  2A0A               	incf	get_latitude@index_lat^0,f,c
  9303  005322  2A0B               	incf	get_latitude@index^0,f,c
  9304  005324  0E13               	movlw	19
  9305  005326  640B               	cpfsgt	get_latitude@index^0,c
  9306  005328  D7ED               	goto	l11652
  9307                           
  9308                           ;GPS.c: 260: };GPS.c: 261: if(gga_buffer[21] == 'N')
  9309  00532A  0E4E               	movlw	78
  9310  00532C  0103               	movlb	3	; () banked
  9311  00532E  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  9312  005330  A4D8               	btfss	status,2,c
  9313  005332  D004               	goto	l11664
  9314                           
  9315                           ; BSR set to: 3
  9316                           ;GPS.c: 262: {;GPS.c: 263: rawLatitude[0] = '0';
  9317  005334  0E30               	movlw	48
  9318  005336  0101               	movlb	1	; () banked
  9319  005338  6FBE               	movwf	_rawLatitude& (0+255),b
  9320                           
  9321                           ;GPS.c: 264: }
  9322  00533A  0012               	return	
  9323  00533C                     l11664:
  9324                           
  9325                           ; BSR set to: 3
  9326                           ;GPS.c: 265: else;GPS.c: 266: {;GPS.c: 267: rawLatitude[0] = '-';
  9327  00533C  0E2D               	movlw	45
  9328  00533E  0101               	movlb	1	; () banked
  9329  005340  6FBE               	movwf	_rawLatitude& (0+255),b
  9330                           
  9331                           ; BSR set to: 1
  9332  005342  0012               	return		;funcret
  9333  005344                     __end_of_get_latitude:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _get_gpstime *****************
  9337 ;; Defined at:
  9338 ;;		line 229 in file "bibliotecas/GPS.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  time_buffer    15    0        unsigned char [15]
  9343 ;;  index           1    9[COMRAM] unsigned char 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  1    wreg      void 
  9346 ;; Registers used:
  9347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9353 ;;      Params:         0       0       0       0       0       0       0       0       0
  9354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9356 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9357 ;;Total ram usage:        1 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    2
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_gps
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text62
  9368  005888                     __ptext62:
  9369                           	callstack 0
  9370  005888                     _get_gpstime:
  9371                           	callstack 27
  9372                           
  9373                           ;GPS.c: 231: unsigned char index;;GPS.c: 232: unsigned char time_buffer[15];;GPS.c: 236:
      +                           for(index = 0; index<6; index++)
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;incstack = 0
  9377  005888  0E00               	movlw	0
  9378  00588A  6E0A               	movwf	get_gpstime@index^0,c
  9379  00588C                     l11640:
  9380                           
  9381                           ;GPS.c: 237: {;GPS.c: 238: rawTime[index] = gga_buffer[index];
  9382  00588C  0E00               	movlw	low _gga_buffer
  9383  00588E  240A               	addwf	get_gpstime@index^0,w,c
  9384  005890  6ED9               	movwf	fsr2l,c
  9385  005892  6ADA               	clrf	fsr2h,c
  9386  005894  0E03               	movlw	high _gga_buffer
  9387  005896  22DA               	addwfc	fsr2h,f,c
  9388  005898  0ED1               	movlw	low _rawTime
  9389  00589A  240A               	addwf	get_gpstime@index^0,w,c
  9390  00589C  6EE1               	movwf	fsr1l,c
  9391  00589E  6AE2               	clrf	fsr1h,c
  9392  0058A0  0E01               	movlw	high _rawTime
  9393  0058A2  22E2               	addwfc	fsr1h,f,c
  9394  0058A4  CFDF FFE7          	movff	indf2,indf1
  9395  0058A8  2A0A               	incf	get_gpstime@index^0,f,c
  9396  0058AA  0E05               	movlw	5
  9397  0058AC  640A               	cpfsgt	get_gpstime@index^0,c
  9398  0058AE  D7EE               	goto	l11640
  9399  0058B0  0012               	return	
  9400  0058B2                     __end_of_get_gpstime:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _get_fix *****************
  9404 ;; Defined at:
  9405 ;;		line 324 in file "bibliotecas/GPS.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  index           1   10[COMRAM] unsigned char 
  9410 ;;  index_fix       1    9[COMRAM] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0
  9421 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9424 ;;Total ram usage:        2 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:    2
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_gps
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text63
  9435  00571C                     __ptext63:
  9436                           	callstack 0
  9437  00571C                     _get_fix:
  9438                           	callstack 27
  9439                           
  9440                           ;GPS.c: 326: unsigned char index_fix, index;;GPS.c: 328: index_fix = 0;
  9441                           
  9442                           ;incstack = 0
  9443  00571C  0E00               	movlw	0
  9444  00571E  6E0A               	movwf	get_fix@index_fix^0,c
  9445                           
  9446                           ;GPS.c: 330: for(index = 37; index<39; index++)
  9447  005720  0E25               	movlw	37
  9448  005722  6E0B               	movwf	get_fix@index^0,c
  9449  005724                     l11622:
  9450                           
  9451                           ;GPS.c: 331: {;GPS.c: 332: rawFix[index_fix] = gga_buffer[index];
  9452  005724  0E00               	movlw	low _gga_buffer
  9453  005726  240B               	addwf	get_fix@index^0,w,c
  9454  005728  6ED9               	movwf	fsr2l,c
  9455  00572A  6ADA               	clrf	fsr2h,c
  9456  00572C  0E03               	movlw	high _gga_buffer
  9457  00572E  22DA               	addwfc	fsr2h,f,c
  9458  005730  0EEA               	movlw	low _rawFix
  9459  005732  240A               	addwf	get_fix@index_fix^0,w,c
  9460  005734  6EE1               	movwf	fsr1l,c
  9461  005736  6AE2               	clrf	fsr1h,c
  9462  005738  0E01               	movlw	high _rawFix
  9463  00573A  22E2               	addwfc	fsr1h,f,c
  9464  00573C  CFDF FFE7          	movff	indf2,indf1
  9465                           
  9466                           ;GPS.c: 333: index_fix++;
  9467  005740  2A0A               	incf	get_fix@index_fix^0,f,c
  9468  005742  2A0B               	incf	get_fix@index^0,f,c
  9469  005744  0E26               	movlw	38
  9470  005746  640B               	cpfsgt	get_fix@index^0,c
  9471  005748  D7ED               	goto	l11622
  9472  00574A  0012               	return	
  9473  00574C                     __end_of_get_fix:
  9474                           	callstack 0
  9475                           
  9476 ;; *************** function _fix *****************
  9477 ;; Defined at:
  9478 ;;		line 679 in file "bibliotecas/GPS.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;		None
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  2    9[COMRAM] PTR unsigned char 
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9492 ;;      Params:         2       0       0       0       0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9495 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9496 ;;Total ram usage:        2 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    2
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_gps
  9503 ;;		_disparo_gravacao
  9504 ;;		_troca_de_tela
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text64
  9509  005C46                     __ptext64:
  9510                           	callstack 0
  9511  005C46                     _fix:
  9512                           	callstack 27
  9513                           
  9514                           ;GPS.c: 681: return rawFix;
  9515                           
  9516                           ;incstack = 0
  9517  005C46  0EEA               	movlw	low _rawFix
  9518  005C48  6E0A               	movwf	?_fix^0,c
  9519  005C4A  0E01               	movlw	high _rawFix
  9520  005C4C  6E0B               	movwf	(?_fix+1)^0,c
  9521  005C4E  0012               	return		;funcret
  9522  005C50                     __end_of_fix:
  9523                           	callstack 0
  9524                           
  9525 ;; *************** function _fprintf *****************
  9526 ;; Defined at:
  9527 ;;		line 1816 in file "bibliotecas/tff.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9530 ;;		 -> fil(28), 
  9531 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9532 ;;		 -> STR_15(6), STR_14(10), STR_13(10), STR_12(15), 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  s              16   93[BANK0 ] unsigned char [16]
  9535 ;;  val             4  117[BANK0 ] unsigned long 
  9536 ;;  i               2  124[BANK0 ] int 
  9537 ;;  cc              2  122[BANK0 ] int 
  9538 ;;  w               2  113[BANK0 ] int 
  9539 ;;  res             2  109[BANK0 ] int 
  9540 ;;  c               1  126[BANK0 ] unsigned char 
  9541 ;;  arp             1  121[BANK0 ] PTR void [1]
  9542 ;;		 -> ?_fprintf(2), 
  9543 ;;  r               1  116[BANK0 ] unsigned char 
  9544 ;;  f               1  115[BANK0 ] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  2   81[BANK0 ] int 
  9547 ;; Registers used:
  9548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 3F/0
  9551 ;;		On exit  : 3F/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9554 ;;      Params:         0      10       0       0       0       0       0       0       0
  9555 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9556 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9557 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9558 ;;Total ram usage:       46 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:   13
  9561 ;; This function calls:
  9562 ;;		___lldiv
  9563 ;;		___llmod
  9564 ;;		___wmul
  9565 ;;		_fputc
  9566 ;;		_fputs
  9567 ;; This function is called by:
  9568 ;;		_escrita_sdcard
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text65
  9573  000F7E                     __ptext65:
  9574                           	callstack 0
  9575  000F7E                     _fprintf:
  9576                           	callstack 13
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9580                           
  9581                           ;incstack = 0
  9582  000F7E  0EB5               	movlw	low (?_fprintf+4)
  9583  000F80  6FD9               	movwf	fprintf@arp& (0+255),b
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9587  000F82  0E00               	movlw	0
  9588  000F84  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9589  000F86  0E00               	movlw	0
  9590  000F88  6FCD               	movwf	fprintf@res& (0+255),b
  9591  000F8A  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9592  000F8E  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9593  000F92                     l12482:
  9594                           
  9595                           ; BSR set to: 0
  9596  000F92  29DA               	incf	fprintf@cc& (0+255),w,b
  9597  000F94  E103               	bnz	l12486
  9598  000F96  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9599  000F98  B4D8               	btfsc	status,2,c
  9600  000F9A  0012               	return	
  9601  000F9C                     l12486:
  9602                           
  9603                           ; BSR set to: 0
  9604                           ;tff.c: 1832: c = *str++;
  9605  000F9C  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9606  000FA0  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9607  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9608  000FA4  6AF8               	clrf	tblptru,c
  9609  000FA6                     	endif
  9610  000FA6                     	if	0	;tblptru may be non-zero
  9611  000FA6                     	endif
  9612  000FA6  0008               	tblrd		*
  9613  000FA8  CFF5 F0DE          	movff	tablat,fprintf@c
  9614                           
  9615                           ; BSR set to: 0
  9616  000FAC  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9617  000FAE  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;tff.c: 1833: if (c == 0) break;
  9621  000FB0  51DE               	movf	fprintf@c& (0+255),w,b
  9622  000FB2  B4D8               	btfsc	status,2,c
  9623  000FB4  0012               	return	
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;tff.c: 1834: if (c != '%') {
  9627  000FB6  0E25               	movlw	37
  9628  000FB8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9629  000FBA  B4D8               	btfsc	status,2,c
  9630  000FBC  D017               	goto	l12502
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;tff.c: 1835: cc = fputc(c, fil);
  9634  000FBE  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9635  000FC2  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9636  000FC4  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9637  000FC8  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9638  000FCC  EC92  F02A         	call	_fputc	;wreg free
  9639  000FD0  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9640  000FD4  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9644  000FD8  29DA               	incf	fprintf@cc& (0+255),w,b
  9645  000FDA  E103               	bnz	u14690
  9646  000FDC  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9647  000FDE  B4D8               	btfsc	status,2,c
  9648  000FE0  D170               	goto	l12626
  9649  000FE2                     u14690:
  9650                           
  9651                           ; BSR set to: 0
  9652  000FE2  0E00               	movlw	0
  9653  000FE4  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9654  000FE6  0E01               	movlw	1
  9655  000FE8  6FDA               	movwf	fprintf@cc& (0+255),b
  9656  000FEA  D16B               	goto	l12626
  9657  000FEC                     l12502:
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9661  000FEC  0E00               	movlw	0
  9662  000FEE  6FD3               	movwf	fprintf@f& (0+255),b
  9663  000FF0  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9664  000FF4  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;tff.c: 1840: c = *str++;
  9668  000FF6  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9669  000FFA  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9670  000FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9671  000FFE  6AF8               	clrf	tblptru,c
  9672  001000                     	endif
  9673  001000                     	if	0	;tblptru may be non-zero
  9674  001000                     	endif
  9675  001000  0008               	tblrd		*
  9676  001002  CFF5 F0DE          	movff	tablat,fprintf@c
  9677                           
  9678                           ; BSR set to: 0
  9679  001006  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9680  001008  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;tff.c: 1841: if (c == '0') {
  9684  00100A  0E30               	movlw	48
  9685  00100C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9686  00100E  A4D8               	btfss	status,2,c
  9687  001010  D023               	goto	l12522
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;tff.c: 1842: f = 1; c = *str++;
  9691  001012  0E01               	movlw	1
  9692  001014  6FD3               	movwf	fprintf@f& (0+255),b
  9693  001016                     l12512:
  9694                           
  9695                           ; BSR set to: 0
  9696  001016  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9697  00101A  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9698  00101E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9699  00101E  6AF8               	clrf	tblptru,c
  9700  001020                     	endif
  9701  001020                     	if	0	;tblptru may be non-zero
  9702  001020                     	endif
  9703  001020  0008               	tblrd		*
  9704  001022  CFF5 F0DE          	movff	tablat,fprintf@c
  9705                           
  9706                           ; BSR set to: 0
  9707  001026  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9708  001028  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9709  00102A  D016               	goto	l12522
  9710  00102C                     l12516:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9714  00102C  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9715  001030  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9716  001034  0E00               	movlw	0
  9717  001036  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9718  001038  0E0A               	movlw	10
  9719  00103A  6E0C               	movwf	___wmul@multiplicand^0,c
  9720  00103C  EC95  F02C         	call	___wmul	;wreg free
  9721  001040  0100               	movlb	0	; () banked
  9722  001042  51DE               	movf	fprintf@c& (0+255),w,b
  9723  001044  260A               	addwf	?___wmul^0,f,c
  9724  001046  0E00               	movlw	0
  9725  001048  220B               	addwfc	(?___wmul+1)^0,f,c
  9726  00104A  0ED0               	movlw	208
  9727  00104C  240A               	addwf	?___wmul^0,w,c
  9728  00104E  6FD1               	movwf	fprintf@w& (0+255),b
  9729  001050  0EFF               	movlw	255
  9730  001052  200B               	addwfc	(?___wmul+1)^0,w,c
  9731  001054  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9732  001056  D7DF               	goto	l12512
  9733  001058                     l12522:
  9734                           
  9735                           ; BSR set to: 0
  9736  001058  0E2F               	movlw	47
  9737  00105A  65DE               	cpfsgt	fprintf@c& (0+255),b
  9738  00105C  D003               	goto	u14720
  9739                           
  9740                           ; BSR set to: 0
  9741  00105E  0E39               	movlw	57
  9742  001060  65DE               	cpfsgt	fprintf@c& (0+255),b
  9743  001062  D7E4               	goto	l12516
  9744  001064                     u14720:
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9748  001064  0E6C               	movlw	108
  9749  001066  19DE               	xorwf	fprintf@c& (0+255),w,b
  9750  001068  A4D8               	btfss	status,2,c
  9751  00106A  D00B               	goto	l12534
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;tff.c: 1849: f |= 2; c = *str++;
  9755  00106C  83D3               	bsf	fprintf@f& (0+255),1,b
  9756                           
  9757                           ; BSR set to: 0
  9758  00106E  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9759  001072  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9760  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9761  001076  6AF8               	clrf	tblptru,c
  9762  001078                     	endif
  9763  001078                     	if	0	;tblptru may be non-zero
  9764  001078                     	endif
  9765  001078  0008               	tblrd		*
  9766  00107A  CFF5 F0DE          	movff	tablat,fprintf@c
  9767                           
  9768                           ; BSR set to: 0
  9769  00107E  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9770  001080  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9771  001082                     l12534:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9775  001082  0E73               	movlw	115
  9776  001084  19DE               	xorwf	fprintf@c& (0+255),w,b
  9777  001086  A4D8               	btfss	status,2,c
  9778  001088  D014               	goto	l12540
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9782  00108A  51D9               	movf	fprintf@arp& (0+255),w,b
  9783  00108C  6ED9               	movwf	fsr2l,c
  9784  00108E  6ADA               	clrf	fsr2h,c
  9785  001090  CFDE F0AB          	movff	postinc2,fputs@str
  9786  001094  CFDD F0AC          	movff	postdec2,fputs@str+1
  9787  001098  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9788  00109C  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9789  0010A0  EC3A  F028         	call	_fputs	;wreg free
  9790  0010A4  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9791  0010A8  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9792                           
  9793                           ; BSR set to: 0
  9794  0010AC  0E02               	movlw	2
  9795  0010AE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9796                           
  9797                           ;tff.c: 1853: continue;
  9798  0010B0  D108               	goto	l12626
  9799  0010B2                     l12540:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9803  0010B2  0E63               	movlw	99
  9804  0010B4  19DE               	xorwf	fprintf@c& (0+255),w,b
  9805  0010B6  A4D8               	btfss	status,2,c
  9806  0010B8  D01B               	goto	l12550
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9810  0010BA  51D9               	movf	fprintf@arp& (0+255),w,b
  9811  0010BC  6ED9               	movwf	fsr2l,c
  9812  0010BE  6ADA               	clrf	fsr2h,c
  9813  0010C0  50DF               	movf	indf2,w,c
  9814  0010C2  6FBB               	movwf	??_fprintf& (0+255),b
  9815  0010C4  51BB               	movf	??_fprintf& (0+255),w,b
  9816  0010C6  6FA4               	movwf	fputc@chr& (0+255),b
  9817  0010C8  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9818  0010CA  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9819  0010CE  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9820  0010D2  EC92  F02A         	call	_fputc	;wreg free
  9821  0010D6  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9822  0010DA  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9823                           
  9824                           ; BSR set to: 0
  9825  0010DE  0E02               	movlw	2
  9826  0010E0  27D9               	addwf	fprintf@arp& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9830  0010E2  29DA               	incf	fprintf@cc& (0+255),w,b
  9831  0010E4  E104               	bnz	u14760
  9832  0010E6  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9833  0010E8  A4D8               	btfss	status,2,c
  9834  0010EA  D77B               	goto	u14690
  9835  0010EC  D0EA               	goto	l12626
  9836  0010EE                     u14760:
  9837  0010EE  D779               	goto	u14690
  9838  0010F0                     l12550:
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9842  0010F0  0E00               	movlw	0
  9843  0010F2  6FD4               	movwf	fprintf@r& (0+255),b
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;tff.c: 1861: if (c == 'd') r = 10;
  9847  0010F4  0E64               	movlw	100
  9848  0010F6  19DE               	xorwf	fprintf@c& (0+255),w,b
  9849  0010F8  A4D8               	btfss	status,2,c
  9850  0010FA  D002               	goto	l12556
  9851                           
  9852                           ; BSR set to: 0
  9853  0010FC  0E0A               	movlw	10
  9854  0010FE  6FD4               	movwf	fprintf@r& (0+255),b
  9855  001100                     l12556:
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;tff.c: 1862: if (c == 'u') r = 10;
  9859  001100  0E75               	movlw	117
  9860  001102  19DE               	xorwf	fprintf@c& (0+255),w,b
  9861  001104  A4D8               	btfss	status,2,c
  9862  001106  D002               	goto	l12560
  9863                           
  9864                           ; BSR set to: 0
  9865  001108  0E0A               	movlw	10
  9866  00110A  6FD4               	movwf	fprintf@r& (0+255),b
  9867  00110C                     l12560:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;tff.c: 1863: if (c == 'X') r = 16;
  9871  00110C  0E58               	movlw	88
  9872  00110E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9873  001110  A4D8               	btfss	status,2,c
  9874  001112  D002               	goto	l1274
  9875                           
  9876                           ; BSR set to: 0
  9877  001114  0E10               	movlw	16
  9878  001116  6FD4               	movwf	fprintf@r& (0+255),b
  9879  001118                     l1274:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;tff.c: 1864: if (r == 0) break;
  9883  001118  51D4               	movf	fprintf@r& (0+255),w,b
  9884  00111A  B4D8               	btfsc	status,2,c
  9885  00111C  0012               	return	
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;tff.c: 1865: if (f & 2) {
  9889  00111E  A3D3               	btfss	fprintf@f& (0+255),1,b
  9890  001120  D00D               	goto	l12570
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9894  001122  51D9               	movf	fprintf@arp& (0+255),w,b
  9895  001124  6ED9               	movwf	fsr2l,c
  9896  001126  6ADA               	clrf	fsr2h,c
  9897  001128  CFDE F0D5          	movff	postinc2,fprintf@val
  9898  00112C  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9899  001130  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9900  001134  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9901                           
  9902                           ; BSR set to: 0
  9903  001138  0E04               	movlw	4
  9904  00113A  D01F               	goto	L1
  9905  00113C                     l12570:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9909  00113C  0E64               	movlw	100
  9910  00113E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9911  001140  B4D8               	btfsc	status,2,c
  9912  001142  D00E               	goto	l12576
  9913                           
  9914                           ; BSR set to: 0
  9915  001144  51D9               	movf	fprintf@arp& (0+255),w,b
  9916  001146  6ED9               	movwf	fsr2l,c
  9917  001148  6ADA               	clrf	fsr2h,c
  9918  00114A  CFDE F0BB          	movff	postinc2,??_fprintf
  9919  00114E  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9920  001152  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9921  001156  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9922  00115A  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9923  00115C  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9924  00115E  D00C               	goto	l12578
  9925  001160                     l12576:
  9926                           
  9927                           ; BSR set to: 0
  9928  001160  51D9               	movf	fprintf@arp& (0+255),w,b
  9929  001162  6ED9               	movwf	fsr2l,c
  9930  001164  6ADA               	clrf	fsr2h,c
  9931  001166  CFDE F0D5          	movff	postinc2,fprintf@val
  9932  00116A  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9933  00116E  0E00               	movlw	0
  9934  001170  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9935  001172  0EFF               	movlw	-1
  9936  001174  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9937  001176  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9938  001178                     l12578:
  9939                           
  9940                           ; BSR set to: 0
  9941  001178  0E02               	movlw	2
  9942  00117A                     L1:
  9943  00117A  27D9               	addwf	fprintf@arp& (0+255),f,b
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9947  00117C  0E64               	movlw	100
  9948  00117E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9949  001180  A4D8               	btfss	status,2,c
  9950  001182  D00E               	goto	l12588
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;tff.c: 1872: if (val >= 0x80000000) {
  9954  001184  0E80               	movlw	128
  9955  001186  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9956  001188  A0D8               	btfss	status,0,c
  9957  00118A  D00A               	goto	l12588
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;tff.c: 1873: val = 0 - val;
  9961  00118C  6DD5               	negf	fprintf@val& (0+255),b
  9962  00118E  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9963  001190  B0D8               	btfsc	status,0,c
  9964  001192  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9965  001194  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9966  001196  B0D8               	btfsc	status,0,c
  9967  001198  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9968  00119A  0E00               	movlw	0
  9969  00119C  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;tff.c: 1874: f |= 4;
  9973  00119E  85D3               	bsf	fprintf@f& (0+255),2,b
  9974  0011A0                     l12588:
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9978  0011A0  0E00               	movlw	0
  9979  0011A2  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9980  0011A4  0E0F               	movlw	15
  9981  0011A6  6FDC               	movwf	fprintf@i& (0+255),b
  9982                           
  9983                           ; BSR set to: 0
  9984  0011A8  0E00               	movlw	0
  9985  0011AA  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9986  0011AC                     l12592:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9990  0011AC  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
  9991  0011B0  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
  9992  0011B4  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
  9993  0011B8  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
  9994  0011BC  51D4               	movf	fprintf@r& (0+255),w,b
  9995  0011BE  6E0E               	movwf	___llmod@divisor^0,c
  9996  0011C0  6A0F               	clrf	(___llmod@divisor+1)^0,c
  9997  0011C2  6A10               	clrf	(___llmod@divisor+2)^0,c
  9998  0011C4  6A11               	clrf	(___llmod@divisor+3)^0,c
  9999  0011C6  ECC3  F026         	call	___llmod	;wreg free
 10000  0011CA  500A               	movf	?___llmod^0,w,c
 10001  0011CC  0F30               	addlw	48
 10002  0011CE  0100               	movlb	0	; () banked
 10003  0011D0  6FDE               	movwf	fprintf@c& (0+255),b
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;tff.c: 1880: if (c > '9') c += 7;
 10007  0011D2  0E39               	movlw	57
 10008  0011D4  65DE               	cpfsgt	fprintf@c& (0+255),b
 10009  0011D6  D002               	goto	l12598
 10010                           
 10011                           ; BSR set to: 0
 10012  0011D8  0E07               	movlw	7
 10013  0011DA  27DE               	addwf	fprintf@c& (0+255),f,b
 10014  0011DC                     l12598:
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;tff.c: 1881: s[--i] = c;
 10018  0011DC  07DC               	decf	fprintf@i& (0+255),f,b
 10019  0011DE  A0D8               	btfss	status,0,c
 10020  0011E0  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10021  0011E2  51DC               	movf	fprintf@i& (0+255),w,b
 10022  0011E4  0FBD               	addlw	low fprintf@s
 10023  0011E6  6ED9               	movwf	fsr2l,c
 10024  0011E8  6ADA               	clrf	fsr2h,c
 10025  0011EA  C0DE  FFDF         	movff	fprintf@c,indf2
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;tff.c: 1882: val /= r;
 10029  0011EE  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
 10030  0011F2  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
 10031  0011F6  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
 10032  0011FA  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
 10033  0011FE  51D4               	movf	fprintf@r& (0+255),w,b
 10034  001200  6E0E               	movwf	___lldiv@divisor^0,c
 10035  001202  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 10036  001204  6A10               	clrf	(___lldiv@divisor+2)^0,c
 10037  001206  6A11               	clrf	(___lldiv@divisor+3)^0,c
 10038  001208  ECF4  F024         	call	___lldiv	;wreg free
 10039  00120C  C00A  F0D5         	movff	?___lldiv,fprintf@val
 10040  001210  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
 10041  001214  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
 10042  001218  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
 10043                           
 10044                           ;tff.c: 1883: } while (i && val);
 10045  00121C  0100               	movlb	0	; () banked
 10046  00121E  51DC               	movf	fprintf@i& (0+255),w,b
 10047  001220  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10048  001222  B4D8               	btfsc	status,2,c
 10049  001224  D006               	goto	u14870
 10050                           
 10051                           ; BSR set to: 0
 10052  001226  51D5               	movf	fprintf@val& (0+255),w,b
 10053  001228  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
 10054  00122A  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
 10055  00122C  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
 10056  00122E  A4D8               	btfss	status,2,c
 10057  001230  D7BD               	goto	l12592
 10058  001232                     u14870:
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
 10062  001232  51DC               	movf	fprintf@i& (0+255),w,b
 10063  001234  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10064  001236  A4D8               	btfss	status,2,c
 10065                           
 10066                           ; BSR set to: 0
 10067  001238  A5D3               	btfss	fprintf@f& (0+255),2,b
 10068  00123A  D009               	goto	l12612
 10069                           
 10070                           ; BSR set to: 0
 10071  00123C  07DC               	decf	fprintf@i& (0+255),f,b
 10072  00123E  A0D8               	btfss	status,0,c
 10073  001240  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10074  001242  51DC               	movf	fprintf@i& (0+255),w,b
 10075  001244  0FBD               	addlw	low fprintf@s
 10076  001246  6ED9               	movwf	fsr2l,c
 10077  001248  6ADA               	clrf	fsr2h,c
 10078  00124A  0E2D               	movlw	45
 10079  00124C  6EDF               	movwf	indf2,c
 10080  00124E                     l12612:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
 10084  00124E  51D1               	movf	fprintf@w& (0+255),w,b
 10085  001250  080F               	sublw	15
 10086  001252  6FD1               	movwf	fprintf@w& (0+255),b
 10087  001254  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10088  001256  A0D8               	btfss	status,0,c
 10089  001258  2AE8               	incf	wreg,f,c
 10090  00125A  0800               	sublw	0
 10091  00125C  6FD2               	movwf	(fprintf@w+1)& (0+255),b
 10092                           
 10093                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
 10094  00125E  D013               	goto	l12620
 10095  001260                     l1291:
 10096                           
 10097                           ; BSR set to: 0
 10098  001260  B1D3               	btfsc	fprintf@f& (0+255),0,b
 10099  001262  D004               	goto	l12616
 10100                           
 10101                           ; BSR set to: 0
 10102  001264  0E00               	movlw	0
 10103  001266  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10104  001268  0E20               	movlw	32
 10105  00126A  D003               	goto	L2
 10106  00126C                     l12616:
 10107                           
 10108                           ; BSR set to: 0
 10109  00126C  0E00               	movlw	0
 10110  00126E  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10111  001270  0E30               	movlw	48
 10112  001272                     L2:
 10113  001272  6FCF               	movwf	_fprintf$2226& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116  001274  07DC               	decf	fprintf@i& (0+255),f,b
 10117  001276  A0D8               	btfss	status,0,c
 10118  001278  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10119  00127A  51DC               	movf	fprintf@i& (0+255),w,b
 10120  00127C  0FBD               	addlw	low fprintf@s
 10121  00127E  6ED9               	movwf	fsr2l,c
 10122  001280  6ADA               	clrf	fsr2h,c
 10123  001282  C0CF  FFDF         	movff	_fprintf$2226,indf2
 10124  001286                     l12620:
 10125                           
 10126                           ; BSR set to: 0
 10127  001286  51DC               	movf	fprintf@i& (0+255),w,b
 10128  001288  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10129  00128A  B4D8               	btfsc	status,2,c
 10130  00128C  D00A               	goto	u14920
 10131                           
 10132                           ; BSR set to: 0
 10133  00128E  51DC               	movf	fprintf@i& (0+255),w,b
 10134  001290  5DD1               	subwf	fprintf@w& (0+255),w,b
 10135  001292  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10136  001294  0A80               	xorlw	128
 10137  001296  6FBB               	movwf	??_fprintf& (0+255),b
 10138  001298  51DD               	movf	(fprintf@i+1)& (0+255),w,b
 10139  00129A  0A80               	xorlw	128
 10140  00129C  59BB               	subwfb	??_fprintf& (0+255),w,b
 10141  00129E  A0D8               	btfss	status,0,c
 10142  0012A0  D7DF               	goto	l1291
 10143  0012A2                     u14920:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;tff.c: 1887: cc = fputs(&s[i], fil);
 10147  0012A2  51DC               	movf	fprintf@i& (0+255),w,b
 10148  0012A4  0FBD               	addlw	low fprintf@s
 10149  0012A6  6FBB               	movwf	??_fprintf& (0+255),b
 10150  0012A8  C0BB  F0AB         	movff	??_fprintf,fputs@str
 10151  0012AC  6BAC               	clrf	(fputs@str+1)& (0+255),b
 10152  0012AE  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
 10153  0012B2  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
 10154  0012B6  EC3A  F028         	call	_fputs	;wreg free
 10155  0012BA  C0AB  F0DA         	movff	?_fputs,fprintf@cc
 10156  0012BE  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
 10157  0012C2                     l12626:
 10158                           
 10159                           ; BSR set to: 0
 10160  0012C2  51DA               	movf	fprintf@cc& (0+255),w,b
 10161  0012C4  27CD               	addwf	fprintf@res& (0+255),f,b
 10162  0012C6  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
 10163  0012C8  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
 10164  0012CA  D663               	goto	l12482
 10165  0012CC                     __end_of_fprintf:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function _fputs *****************
 10169 ;; Defined at:
 10170 ;;		line 1796 in file "bibliotecas/tff.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  str             2   75[BANK0 ] PTR const unsigned char 
 10173 ;;		 -> fprintf@s(16), ?_fprintf(2), lo(13), lt(12), 
 10174 ;;		 -> vel(6), hora(7), 
 10175 ;;  fil             2   77[BANK0 ] PTR struct _FIL
 10176 ;;		 -> fil(28), 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  n               2   79[BANK0 ] int 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  2   75[BANK0 ] int 
 10181 ;; Registers used:
 10182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 3F/0
 10185 ;;		On exit  : 3F/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10188 ;;      Params:         0       4       0       0       0       0       0       0       0
 10189 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10190 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10191 ;;      Totals:         1       6       0       0       0       0       0       0       0
 10192 ;;Total ram usage:        7 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:   12
 10195 ;; This function calls:
 10196 ;;		_fputc
 10197 ;; This function is called by:
 10198 ;;		_fprintf
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text66
 10203  005074                     __ptext66:
 10204                           	callstack 0
 10205  005074                     _fputs:
 10206                           	callstack 13
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;incstack = 0
 10213  005074  0E00               	movlw	0
 10214  005076  6FB0               	movwf	(fputs@n+1)& (0+255),b
 10215  005078  0E00               	movlw	0
 10216  00507A  6FAF               	movwf	fputs@n& (0+255),b
 10217  00507C  D01B               	goto	l12056
 10218  00507E                     l12050:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
 10222  00507E  C0AB  FFD9         	movff	fputs@str,fsr2l
 10223  005082  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10224  005086  50DF               	movf	indf2,w,c
 10225  005088  6E4C               	movwf	??_fputs^0,c
 10226  00508A  504C               	movf	??_fputs^0,w,c
 10227  00508C  6FA4               	movwf	fputc@chr& (0+255),b
 10228  00508E  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10229  005090  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10230  005094  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10231  005098  EC92  F02A         	call	_fputc	;wreg free
 10232  00509C  29A4               	incf	?_fputc& (0+255),w,b
 10233  00509E  E106               	bnz	l12054
 10234  0050A0  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10235  0050A2  A4D8               	btfss	status,2,c
 10236  0050A4  D003               	goto	l12054
 10237                           
 10238                           ; BSR set to: 0
 10239  0050A6  69AB               	setf	?_fputs& (0+255),b
 10240  0050A8  69AC               	setf	(?_fputs+1)& (0+255),b
 10241  0050AA  0012               	return	
 10242  0050AC                     l12054:
 10243                           
 10244                           ; BSR set to: 0
 10245  0050AC  4BAB               	infsnz	fputs@str& (0+255),f,b
 10246  0050AE  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10247  0050B0  4BAF               	infsnz	fputs@n& (0+255),f,b
 10248  0050B2  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10249  0050B4                     l12056:
 10250                           
 10251                           ; BSR set to: 0
 10252  0050B4  C0AB  FFD9         	movff	fputs@str,fsr2l
 10253  0050B8  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10254  0050BC  50DF               	movf	indf2,w,c
 10255  0050BE  A4D8               	btfss	status,2,c
 10256  0050C0  D7DE               	goto	l12050
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;tff.c: 1806: };tff.c: 1807: return n;
 10260  0050C2  C0AF  F0AB         	movff	fputs@n,?_fputs
 10261  0050C6  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10262                           
 10263                           ; BSR set to: 0
 10264  0050CA  0012               	return		;funcret
 10265  0050CC                     __end_of_fputs:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _fputc *****************
 10269 ;; Defined at:
 10270 ;;		line 1769 in file "bibliotecas/tff.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  chr             2   68[BANK0 ] int 
 10273 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10274 ;;		 -> fil(28), 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  bw              2   73[BANK0 ] unsigned int 
 10277 ;;  c               1   72[BANK0 ] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  2   68[BANK0 ] int 
 10280 ;; Registers used:
 10281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 3F/0
 10284 ;;		On exit  : 3F/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10287 ;;      Params:         0       4       0       0       0       0       0       0       0
 10288 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10290 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10291 ;;Total ram usage:        7 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:   11
 10294 ;; This function calls:
 10295 ;;		_f_write
 10296 ;; This function is called by:
 10297 ;;		_fputs
 10298 ;;		_fprintf
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text67
 10303  005524                     __ptext67:
 10304                           	callstack 0
 10305  005524                     _fputc:
 10306                           	callstack 13
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313  005524  51A6               	movf	fputc@fil& (0+255),w,b
 10314  005526  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10315  005528  A4D8               	btfss	status,2,c
 10316  00552A  D005               	goto	l1241
 10317  00552C                     u13270:
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;tff.c: 1783: return chr;
 10321  00552C  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10322  005530  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10323  005534  0012               	return	
 10324  005536                     l1241:
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10328  005536  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10332  00553A  C0A6  F086         	movff	fputc@fil,f_write@fp
 10333  00553E  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10334  005542  0EA8               	movlw	low fputc@c
 10335  005544  6F88               	movwf	f_write@buff& (0+255),b
 10336  005546  0E00               	movlw	0
 10337  005548  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10338  00554A  0E01               	movlw	1
 10339  00554C  6F89               	movwf	f_write@btw& (0+255),b
 10340  00554E  0EA9               	movlw	low fputc@bw
 10341  005550  6F8B               	movwf	f_write@bw& (0+255),b
 10342  005552  EC09  F000         	call	_f_write	;wreg free
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;tff.c: 1787: return bw ? chr : -1;
 10346  005556  51A9               	movf	fputc@bw& (0+255),w,b
 10347  005558  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10348  00555A  A4D8               	btfss	status,2,c
 10349  00555C  D7E7               	goto	u13270
 10350                           
 10351                           ; BSR set to: 0
 10352  00555E  69A4               	setf	?_fputc& (0+255),b
 10353  005560  69A5               	setf	(?_fputc+1)& (0+255),b
 10354                           
 10355                           ; BSR set to: 0
 10356  005562  0012               	return		;funcret
 10357  005564                     __end_of_fputc:
 10358                           	callstack 0
 10359                           
 10360 ;; *************** function _f_write *****************
 10361 ;; Defined at:
 10362 ;;		line 999 in file "bibliotecas/tff.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10365 ;;		 -> fil(28), 
 10366 ;;  buff            1   40[BANK0 ] PTR const void 
 10367 ;;		 -> fputc@c(1), 
 10368 ;;  btw             2   41[BANK0 ] unsigned int 
 10369 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10370 ;;		 -> fputc@bw(2), 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  sect            4   58[BANK0 ] unsigned long 
 10373 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10374 ;;  clust           2   64[BANK0 ] unsigned short 
 10375 ;;  cc              2   62[BANK0 ] unsigned int 
 10376 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10377 ;;		 -> fputc@c(1), 
 10378 ;;  res             1   56[BANK0 ] enum E155
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  1    wreg      enum E155
 10381 ;; Registers used:
 10382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10383 ;; Tracked objects:
 10384 ;;		On entry : 3F/0
 10385 ;;		On exit  : 3F/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10388 ;;      Params:         0       6       0       0       0       0       0       0       0
 10389 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10390 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10391 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10392 ;;Total ram usage:       30 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:   10
 10395 ;; This function calls:
 10396 ;;		_clust2sect
 10397 ;;		_create_chain
 10398 ;;		_disk_write
 10399 ;;		_memcpy
 10400 ;;		_move_window
 10401 ;;		_validate
 10402 ;; This function is called by:
 10403 ;;		_fputc
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text68
 10408  000012                     __ptext68:
 10409                           	callstack 0
 10410  000012                     _f_write:
 10411                           	callstack 13
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;incstack = 0
 10418  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;tff.c: 1013: *bw = 0;
 10422  000016  518B               	movf	f_write@bw& (0+255),w,b
 10423  000018  6ED9               	movwf	fsr2l,c
 10424  00001A  6ADA               	clrf	fsr2h,c
 10425  00001C  0E00               	movlw	0
 10426  00001E  6EDE               	movwf	postinc2,c
 10427  000020  0E00               	movlw	0
 10428  000022  6EDD               	movwf	postdec2,c
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10432  000024  EE20 F004          	lfsr	2,4
 10433  000028  5186               	movf	f_write@fp& (0+255),w,b
 10434  00002A  26D9               	addwf	fsr2l,f,c
 10435  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10436  00002E  22DA               	addwfc	fsr2h,f,c
 10437  000030  CFDE F010          	movff	postinc2,validate@fs
 10438  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10439  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10440  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10441  000040  CFDE F012          	movff	postinc2,validate@id
 10442  000044  CFDD F013          	movff	postdec2,validate@id+1
 10443  000048  ECC6  F029         	call	_validate	;wreg free
 10444  00004C  0100               	movlb	0	; () banked
 10445  00004E  6F98               	movwf	f_write@res& (0+255),b
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;tff.c: 1015: if (res != FR_OK) return res;
 10449  000050  5198               	movf	f_write@res& (0+255),w,b
 10450  000052  A4D8               	btfss	status,2,c
 10451  000054  0012               	return	
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10455  000056  EE20 F002          	lfsr	2,2
 10456  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10457  00005C  26D9               	addwf	fsr2l,f,c
 10458  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10459  000060  22DA               	addwfc	fsr2h,f,c
 10460  000062  BEDF               	btfsc	indf2,7,c
 10461  000064  0012               	return	
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10465  000066  EE20 F002          	lfsr	2,2
 10466  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10467  00006C  26D9               	addwf	fsr2l,f,c
 10468  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10469  000070  22DA               	addwfc	fsr2h,f,c
 10470  000072  A2DF               	btfss	indf2,1,c
 10471  000074  0012               	return	
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10475  000076  EE20 F00A          	lfsr	2,10
 10476  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10477  00007C  26D9               	addwf	fsr2l,f,c
 10478  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10479  000080  22DA               	addwfc	fsr2h,f,c
 10480  000082  EE10 F00A          	lfsr	1,10
 10481  000086  5186               	movf	f_write@fp& (0+255),w,b
 10482  000088  26E1               	addwf	fsr1l,f,c
 10483  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10484  00008C  22E2               	addwfc	fsr1h,f,c
 10485  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10486  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10487  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10488  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10489  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10490  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10491  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10492  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10493  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10494  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10495  0000AA  0E00               	movlw	0
 10496  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10497  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10498  0000B0  0E00               	movlw	0
 10499  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10500  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10501  0000B6  50DE               	movf	postinc2,w,c
 10502  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10503  0000BA  50DE               	movf	postinc2,w,c
 10504  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10505  0000BE  50DE               	movf	postinc2,w,c
 10506  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10507  0000C2  50DE               	movf	postinc2,w,c
 10508  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10509  0000C6  A0D8               	btfss	status,0,c
 10510  0000C8  0012               	return	
 10511  0000CA  D22D               	goto	l11252
 10512  0000CC                     l11176:
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10516  0000CC  EE20 F006          	lfsr	2,6
 10517  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10518  0000D2  26D9               	addwf	fsr2l,f,c
 10519  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10520  0000D6  22DA               	addwfc	fsr2h,f,c
 10521  0000D8  0EFF               	movlw	255
 10522  0000DA  14DE               	andwf	postinc2,w,c
 10523  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10524  0000DE  0E01               	movlw	1
 10525  0000E0  14DE               	andwf	postinc2,w,c
 10526  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10527  0000E4  0E00               	movlw	0
 10528  0000E6  14DE               	andwf	postinc2,w,c
 10529  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10530  0000EA  0E00               	movlw	0
 10531  0000EC  14DE               	andwf	postinc2,w,c
 10532  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10533  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10534  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10535  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10536  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10537  0000F8  A4D8               	btfss	status,2,c
 10538  0000FA  D15E               	goto	l11228
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10542  0000FC  EE20 F004          	lfsr	2,4
 10543  000100  5186               	movf	f_write@fp& (0+255),w,b
 10544  000102  26D9               	addwf	fsr2l,f,c
 10545  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10546  000106  22DA               	addwfc	fsr2h,f,c
 10547  000108  EE10 F01D          	lfsr	1,29
 10548  00010C  50DE               	movf	postinc2,w,c
 10549  00010E  26E1               	addwf	fsr1l,f,c
 10550  000110  50DD               	movf	postdec2,w,c
 10551  000112  22E2               	addwfc	fsr1h,f,c
 10552  000114  EE20 F003          	lfsr	2,3
 10553  000118  5186               	movf	f_write@fp& (0+255),w,b
 10554  00011A  26D9               	addwf	fsr2l,f,c
 10555  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10556  00011E  22DA               	addwfc	fsr2h,f,c
 10557  000120  50E6               	movf	postinc1,w,c
 10558  000122  5CDE               	subwf	postinc2,w,c
 10559  000124  A0D8               	btfss	status,0,c
 10560  000126  D06B               	goto	l11200
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;tff.c: 1024: if (fp->fptr == 0) {
 10564  000128  EE20 F006          	lfsr	2,6
 10565  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10566  00012E  26D9               	addwf	fsr2l,f,c
 10567  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10568  000132  22DA               	addwfc	fsr2h,f,c
 10569  000134  50DE               	movf	postinc2,w,c
 10570  000136  10DE               	iorwf	postinc2,w,c
 10571  000138  10DE               	iorwf	postinc2,w,c
 10572  00013A  10DE               	iorwf	postinc2,w,c
 10573  00013C  A4D8               	btfss	status,2,c
 10574  00013E  D023               	goto	l11188
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;tff.c: 1025: clust = fp->org_clust;
 10578  000140  EE20 F00E          	lfsr	2,14
 10579  000144  5186               	movf	f_write@fp& (0+255),w,b
 10580  000146  26D9               	addwf	fsr2l,f,c
 10581  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10582  00014A  22DA               	addwfc	fsr2h,f,c
 10583  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10584  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;tff.c: 1026: if (clust == 0)
 10588  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10589  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10590  000158  A4D8               	btfss	status,2,c
 10591  00015A  D025               	goto	l11190
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10595  00015C  0E00               	movlw	0
 10596  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10597  000160  0E00               	movlw	0
 10598  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10599  000164  ECBB  F016         	call	_create_chain	;wreg free
 10600  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10601  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10602  000170  EE20 F00E          	lfsr	2,14
 10603  000174  5186               	movf	f_write@fp& (0+255),w,b
 10604  000176  26D9               	addwf	fsr2l,f,c
 10605  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10606  00017A  22DA               	addwfc	fsr2h,f,c
 10607  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10608  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10609  000184  D010               	goto	l11190
 10610  000186                     l11188:
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10614  000186  EE20 F010          	lfsr	2,16
 10615  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10616  00018C  26D9               	addwf	fsr2l,f,c
 10617  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10618  000190  22DA               	addwfc	fsr2h,f,c
 10619  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10620  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10621  00019A  ECBB  F016         	call	_create_chain	;wreg free
 10622  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10623  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10624  0001A6                     l11190:
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10628  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10629  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10630  0001AA  B4D8               	btfsc	status,2,c
 10631  0001AC  D1C0               	goto	u12750
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10635  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10636  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10637  0001B2  B4D8               	btfsc	status,2,c
 10638  0001B4  D1EF               	goto	l11262
 10639                           
 10640                           ; BSR set to: 0
 10641  0001B6  EE20 F004          	lfsr	2,4
 10642  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10643  0001BC  26D9               	addwf	fsr2l,f,c
 10644  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10645  0001C0  22DA               	addwfc	fsr2h,f,c
 10646  0001C2  EE10 F016          	lfsr	1,22
 10647  0001C6  50DE               	movf	postinc2,w,c
 10648  0001C8  26E1               	addwf	fsr1l,f,c
 10649  0001CA  50DD               	movf	postdec2,w,c
 10650  0001CC  22E2               	addwfc	fsr1h,f,c
 10651  0001CE  50E6               	movf	postinc1,w,c
 10652  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10653  0001D2  50E6               	movf	postinc1,w,c
 10654  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10655  0001D6  B0D8               	btfsc	status,0,c
 10656  0001D8  D1DD               	goto	l11262
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;tff.c: 1033: fp->curr_clust = clust;
 10660  0001DA  EE20 F010          	lfsr	2,16
 10661  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10662  0001E0  26D9               	addwf	fsr2l,f,c
 10663  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10664  0001E4  22DA               	addwfc	fsr2h,f,c
 10665  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10666  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10667                           
 10668                           ;tff.c: 1034: fp->csect = 0;
 10669  0001EE  EE20 F003          	lfsr	2,3
 10670  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10671  0001F4  26D9               	addwf	fsr2l,f,c
 10672  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10673  0001F8  22DA               	addwfc	fsr2h,f,c
 10674  0001FA  0E00               	movlw	0
 10675  0001FC  6EDF               	movwf	indf2,c
 10676  0001FE                     l11200:
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10680  0001FE  EE20 F010          	lfsr	2,16
 10681  000202  5186               	movf	f_write@fp& (0+255),w,b
 10682  000204  26D9               	addwf	fsr2l,f,c
 10683  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10684  000208  22DA               	addwfc	fsr2h,f,c
 10685  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10686  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10687  000212  EC04  F021         	call	_clust2sect	;wreg free
 10688  000216  0100               	movlb	0	; () banked
 10689  000218  EE20 F003          	lfsr	2,3
 10690  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10691  00021E  26D9               	addwf	fsr2l,f,c
 10692  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10693  000222  22DA               	addwfc	fsr2h,f,c
 10694  000224  50DF               	movf	indf2,w,c
 10695  000226  6F8C               	movwf	??_f_write& (0+255),b
 10696  000228  518C               	movf	??_f_write& (0+255),w,b
 10697  00022A  2416               	addwf	?_clust2sect^0,w,c
 10698  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10699  00022E  0E00               	movlw	0
 10700  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10701  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10702  000234  0E00               	movlw	0
 10703  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10704  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10705  00023A  0E00               	movlw	0
 10706  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10707  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;tff.c: 1037: cc = btw / 512U;
 10711  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10712  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10713  000248  0E09               	movlw	9
 10714  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10715  00024C                     u12665:
 10716  00024C  90D8               	bcf	status,0,c
 10717  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10718  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10719  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10720  000254  D7FB               	goto	u12665
 10721  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10722  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;tff.c: 1038: if (cc) {
 10726  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10727  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10728  000262  B4D8               	btfsc	status,2,c
 10729  000264  D06A               	goto	l11218
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10733  000266  EE20 F003          	lfsr	2,3
 10734  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10735  00026C  26D9               	addwf	fsr2l,f,c
 10736  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10737  000270  22DA               	addwfc	fsr2h,f,c
 10738  000272  50DF               	movf	indf2,w,c
 10739  000274  6F8C               	movwf	??_f_write& (0+255),b
 10740  000276  518C               	movf	??_f_write& (0+255),w,b
 10741  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10742  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10743  00027C  0E00               	movlw	0
 10744  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10745  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10746  000282  EE20 F004          	lfsr	2,4
 10747  000286  5186               	movf	f_write@fp& (0+255),w,b
 10748  000288  26D9               	addwf	fsr2l,f,c
 10749  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10750  00028C  22DA               	addwfc	fsr2h,f,c
 10751  00028E  EE10 F01D          	lfsr	1,29
 10752  000292  50DE               	movf	postinc2,w,c
 10753  000294  26E1               	addwf	fsr1l,f,c
 10754  000296  50DD               	movf	postdec2,w,c
 10755  000298  22E2               	addwfc	fsr1h,f,c
 10756  00029A  50E7               	movf	indf1,w,c
 10757  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10758  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10759  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10760  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10761  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10762  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10763  0002A8  B0D8               	btfsc	status,0,c
 10764  0002AA  D01C               	goto	l11210
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10768  0002AC  EE20 F004          	lfsr	2,4
 10769  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10770  0002B2  26D9               	addwf	fsr2l,f,c
 10771  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10772  0002B6  22DA               	addwfc	fsr2h,f,c
 10773  0002B8  EE10 F01D          	lfsr	1,29
 10774  0002BC  50DE               	movf	postinc2,w,c
 10775  0002BE  26E1               	addwf	fsr1l,f,c
 10776  0002C0  50DD               	movf	postdec2,w,c
 10777  0002C2  22E2               	addwfc	fsr1h,f,c
 10778  0002C4  50E7               	movf	indf1,w,c
 10779  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10780  0002C8  EE20 F003          	lfsr	2,3
 10781  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10782  0002CE  26D9               	addwf	fsr2l,f,c
 10783  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10784  0002D2  22DA               	addwfc	fsr2h,f,c
 10785  0002D4  50DF               	movf	indf2,w,c
 10786  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10787  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10788  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10789  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10790  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10791  0002E0  A0D8               	btfss	status,0,c
 10792  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10793  0002E4                     l11210:
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10797  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10798  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10799  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10800  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10801  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10802  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10803  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10804  0002FE  0E00               	movlw	0
 10805  000300  EC34  F029         	call	_disk_write
 10806  000304  0900               	iorlw	0
 10807  000306  A4D8               	btfss	status,2,c
 10808  000308  D145               	goto	l11262
 10809                           
 10810                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10811  00030A  0100               	movlb	0	; () banked
 10812  00030C  EE20 F003          	lfsr	2,3
 10813  000310  5186               	movf	f_write@fp& (0+255),w,b
 10814  000312  26D9               	addwf	fsr2l,f,c
 10815  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10816  000316  22DA               	addwfc	fsr2h,f,c
 10817  000318  519E               	movf	f_write@cc& (0+255),w,b
 10818  00031A  26DF               	addwf	indf2,f,c
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;tff.c: 1044: wcnt = 512U * cc;
 10822  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10823  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10824  000324  0E09               	movlw	9
 10825  000326                     u12705:
 10826  000326  90D8               	bcf	status,0,c
 10827  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10828  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10829  00032C  2EE8               	decfsz	wreg,f,c
 10830  00032E  D7FB               	goto	u12705
 10831  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10832  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10833                           
 10834                           ;tff.c: 1045: continue;
 10835  000338  D0DC               	goto	l11244
 10836  00033A                     l11218:
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10840  00033A  EE20 F00A          	lfsr	2,10
 10841  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10842  000340  26D9               	addwf	fsr2l,f,c
 10843  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10844  000344  22DA               	addwfc	fsr2h,f,c
 10845  000346  EE10 F006          	lfsr	1,6
 10846  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10847  00034C  26E1               	addwf	fsr1l,f,c
 10848  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10849  000350  22E2               	addwfc	fsr1h,f,c
 10850  000352  50DE               	movf	postinc2,w,c
 10851  000354  5CE6               	subwf	postinc1,w,c
 10852  000356  50DE               	movf	postinc2,w,c
 10853  000358  58E6               	subwfb	postinc1,w,c
 10854  00035A  50DE               	movf	postinc2,w,c
 10855  00035C  58E6               	subwfb	postinc1,w,c
 10856  00035E  50DE               	movf	postinc2,w,c
 10857  000360  58E6               	subwfb	postinc1,w,c
 10858  000362  A0D8               	btfss	status,0,c
 10859  000364  D022               	goto	l11226
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10863  000366  0E00               	movlw	0
 10864  000368  6E35               	movwf	move_window@sector^0,c
 10865  00036A  0E00               	movlw	0
 10866  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10867  00036E  0E00               	movlw	0
 10868  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10869  000372  0E00               	movlw	0
 10870  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10871  000376  EC15  F015         	call	_move_window	;wreg free
 10872  00037A  0900               	iorlw	0
 10873  00037C  B4D8               	btfsc	status,2,c
 10874  00037E  D10A               	goto	l11262
 10875                           
 10876                           ;tff.c: 1049: fp->fs->winsect = sect;
 10877  000380  0100               	movlb	0	; () banked
 10878  000382  EE20 F004          	lfsr	2,4
 10879  000386  5186               	movf	f_write@fp& (0+255),w,b
 10880  000388  26D9               	addwf	fsr2l,f,c
 10881  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10882  00038C  22DA               	addwfc	fsr2h,f,c
 10883  00038E  EE10 F004          	lfsr	1,4
 10884  000392  50DE               	movf	postinc2,w,c
 10885  000394  26E1               	addwf	fsr1l,f,c
 10886  000396  50DD               	movf	postdec2,w,c
 10887  000398  22E2               	addwfc	fsr1h,f,c
 10888  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10889  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10890  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10891  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10892  0003AA                     l11226:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10896  0003AA  EE20 F003          	lfsr	2,3
 10897  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10898  0003B0  26D9               	addwf	fsr2l,f,c
 10899  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10900  0003B4  22DA               	addwfc	fsr2h,f,c
 10901  0003B6  2ADF               	incf	indf2,f,c
 10902  0003B8                     l11228:
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10906  0003B8  EE20 F010          	lfsr	2,16
 10907  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10908  0003BE  26D9               	addwf	fsr2l,f,c
 10909  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10910  0003C2  22DA               	addwfc	fsr2h,f,c
 10911  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10912  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10913  0003CC  EC04  F021         	call	_clust2sect	;wreg free
 10914  0003D0  0100               	movlb	0	; () banked
 10915  0003D2  EE20 F003          	lfsr	2,3
 10916  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10917  0003D8  26D9               	addwf	fsr2l,f,c
 10918  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10919  0003DC  22DA               	addwfc	fsr2h,f,c
 10920  0003DE  50DF               	movf	indf2,w,c
 10921  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10922  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10923  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10924  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10925  0003E8  0E00               	movlw	0
 10926  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10927  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10928  0003EE  0E00               	movlw	0
 10929  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10930  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10931  0003F4  0E00               	movlw	0
 10932  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10933  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10934  0003FA  0EFF               	movlw	255
 10935  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10936  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10937  000400  0EFF               	movlw	255
 10938  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10939  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10940  000406  0EFF               	movlw	255
 10941  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10942  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10943  00040C  0EFF               	movlw	255
 10944  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10945  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10949  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10950  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10951  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10952  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10953  000422  EC15  F015         	call	_move_window	;wreg free
 10954  000426  0900               	iorlw	0
 10955  000428  B4D8               	btfsc	status,2,c
 10956  00042A  D0B4               	goto	l11262
 10957                           
 10958                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10959  00042C  0EFF               	movlw	255
 10960  00042E  0100               	movlb	0	; () banked
 10961  000430  6F8C               	movwf	??_f_write& (0+255),b
 10962  000432  0E01               	movlw	1
 10963  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10964  000436  EE20 F006          	lfsr	2,6
 10965  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10966  00043C  26D9               	addwf	fsr2l,f,c
 10967  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10968  000440  22DA               	addwfc	fsr2h,f,c
 10969  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10970  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10971  00044A  518C               	movf	??_f_write& (0+255),w,b
 10972  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10973  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10974  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10975  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10976  000454  0800               	sublw	0
 10977  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10978  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10979  00045A  A0D8               	btfss	status,0,c
 10980  00045C  2AE8               	incf	wreg,f,c
 10981  00045E  0802               	sublw	2
 10982  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10986  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10987  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10988  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10989  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10990  00046A  B0D8               	btfsc	status,0,c
 10991  00046C  D004               	goto	l11240
 10992                           
 10993                           ; BSR set to: 0
 10994  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 10995  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 10996  000476                     l11240:
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 11000  000476  0EFF               	movlw	255
 11001  000478  6F8C               	movwf	??_f_write& (0+255),b
 11002  00047A  0E01               	movlw	1
 11003  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 11004  00047E  EE20 F006          	lfsr	2,6
 11005  000482  5186               	movf	f_write@fp& (0+255),w,b
 11006  000484  26D9               	addwf	fsr2l,f,c
 11007  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11008  000488  22DA               	addwfc	fsr2h,f,c
 11009  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 11010  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 11011  000492  518C               	movf	??_f_write& (0+255),w,b
 11012  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 11013  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 11014  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 11015  00049A  EE20 F004          	lfsr	2,4
 11016  00049E  5186               	movf	f_write@fp& (0+255),w,b
 11017  0004A0  26D9               	addwf	fsr2l,f,c
 11018  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11019  0004A4  22DA               	addwfc	fsr2h,f,c
 11020  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 11021  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 11022  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 11023  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 11024  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 11025  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 11026  0004B6  0E20               	movlw	32
 11027  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 11028  0004BA  6E0A               	movwf	memcpy@d1^0,c
 11029  0004BC  0E00               	movlw	0
 11030  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 11031  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 11032  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 11033  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 11034  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 11035  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 11036  0004D0  EC0D  F02A         	call	_memcpy	;wreg free
 11037                           
 11038                           ;tff.c: 1058: fp->fs->winflag = 1;
 11039  0004D4  0100               	movlb	0	; () banked
 11040  0004D6  EE20 F004          	lfsr	2,4
 11041  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 11042  0004DC  26D9               	addwf	fsr2l,f,c
 11043  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11044  0004E0  22DA               	addwfc	fsr2h,f,c
 11045  0004E2  EE10 F01F          	lfsr	1,31
 11046  0004E6  50DE               	movf	postinc2,w,c
 11047  0004E8  26E1               	addwf	fsr1l,f,c
 11048  0004EA  50DD               	movf	postdec2,w,c
 11049  0004EC  22E2               	addwfc	fsr1h,f,c
 11050  0004EE  0E01               	movlw	1
 11051  0004F0  6EE7               	movwf	indf1,c
 11052  0004F2                     l11244:
 11053                           
 11054                           ; BSR set to: 0
 11055  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 11056  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 11057                           
 11058                           ; BSR set to: 0
 11059  0004F6  EE20 F006          	lfsr	2,6
 11060  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 11061  0004FC  26D9               	addwf	fsr2l,f,c
 11062  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11063  000500  22DA               	addwfc	fsr2h,f,c
 11064  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 11065  000504  26DE               	addwf	postinc2,f,c
 11066  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11067  000508  22DE               	addwfc	postinc2,f,c
 11068  00050A  0E00               	movlw	0
 11069  00050C  22DE               	addwfc	postinc2,f,c
 11070  00050E  22DE               	addwfc	postinc2,f,c
 11071                           
 11072                           ; BSR set to: 0
 11073  000510  518B               	movf	f_write@bw& (0+255),w,b
 11074  000512  6ED9               	movwf	fsr2l,c
 11075  000514  6ADA               	clrf	fsr2h,c
 11076  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 11077  000518  26DE               	addwf	postinc2,f,c
 11078  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11079  00051C  22DD               	addwfc	postdec2,f,c
 11080                           
 11081                           ; BSR set to: 0
 11082  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 11083  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 11084  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11085  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 11086  000526                     l11252:
 11087                           
 11088                           ; BSR set to: 0
 11089  000526  5189               	movf	f_write@btw& (0+255),w,b
 11090  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 11091  00052A  A4D8               	btfss	status,2,c
 11092  00052C  D5CF               	goto	l11176
 11093  00052E                     u12750:
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 11097  00052E  EE20 F006          	lfsr	2,6
 11098  000532  5186               	movf	f_write@fp& (0+255),w,b
 11099  000534  26D9               	addwf	fsr2l,f,c
 11100  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11101  000538  22DA               	addwfc	fsr2h,f,c
 11102  00053A  EE10 F00A          	lfsr	1,10
 11103  00053E  5186               	movf	f_write@fp& (0+255),w,b
 11104  000540  26E1               	addwf	fsr1l,f,c
 11105  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11106  000544  22E2               	addwfc	fsr1h,f,c
 11107  000546  50DE               	movf	postinc2,w,c
 11108  000548  5CE6               	subwf	postinc1,w,c
 11109  00054A  50DE               	movf	postinc2,w,c
 11110  00054C  58E6               	subwfb	postinc1,w,c
 11111  00054E  50DE               	movf	postinc2,w,c
 11112  000550  58E6               	subwfb	postinc1,w,c
 11113  000552  50DE               	movf	postinc2,w,c
 11114  000554  58E6               	subwfb	postinc1,w,c
 11115  000556  B0D8               	btfsc	status,0,c
 11116  000558  D014               	goto	l11258
 11117                           
 11118                           ; BSR set to: 0
 11119  00055A  EE20 F006          	lfsr	2,6
 11120  00055E  5186               	movf	f_write@fp& (0+255),w,b
 11121  000560  26D9               	addwf	fsr2l,f,c
 11122  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11123  000564  22DA               	addwfc	fsr2h,f,c
 11124  000566  EE10 F00A          	lfsr	1,10
 11125  00056A  5186               	movf	f_write@fp& (0+255),w,b
 11126  00056C  26E1               	addwf	fsr1l,f,c
 11127  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11128  000570  22E2               	addwfc	fsr1h,f,c
 11129  000572  CFDE FFE6          	movff	postinc2,postinc1
 11130  000576  CFDE FFE6          	movff	postinc2,postinc1
 11131  00057A  CFDE FFE6          	movff	postinc2,postinc1
 11132  00057E  CFDE FFE6          	movff	postinc2,postinc1
 11133  000582                     l11258:
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;tff.c: 1062: fp->flag |= 0x20;
 11137  000582  EE20 F002          	lfsr	2,2
 11138  000586  5186               	movf	f_write@fp& (0+255),w,b
 11139  000588  26D9               	addwf	fsr2l,f,c
 11140  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11141  00058C  22DA               	addwfc	fsr2h,f,c
 11142  00058E  0E00               	movlw	0
 11143  000590  8ADB               	bsf	plusw2,5,c
 11144  000592  0012               	return	
 11145  000594                     l11262:
 11146                           
 11147                           ;tff.c: 1066: fp->flag |= 0x80;
 11148  000594  0100               	movlb	0	; () banked
 11149  000596  EE20 F002          	lfsr	2,2
 11150  00059A  5186               	movf	f_write@fp& (0+255),w,b
 11151  00059C  26D9               	addwf	fsr2l,f,c
 11152  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11153  0005A0  22DA               	addwfc	fsr2h,f,c
 11154  0005A2  0E00               	movlw	0
 11155  0005A4  8EDB               	bsf	plusw2,7,c
 11156                           
 11157                           ; BSR set to: 0
 11158  0005A6  0012               	return		;funcret
 11159  0005A8                     __end_of_f_write:
 11160                           	callstack 0
 11161                           
 11162 ;; *************** function ___llmod *****************
 11163 ;; Defined at:
 11164 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  dividend        4    9[COMRAM] unsigned long 
 11167 ;;  divisor         4   13[COMRAM] unsigned long 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;  counter         1   17[COMRAM] unsigned char 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  4    9[COMRAM] unsigned long 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11179 ;;      Params:         8       0       0       0       0       0       0       0       0
 11180 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11182 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11183 ;;Total ram usage:        9 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    2
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_fprintf
 11190 ;;		_ultoa
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text69
 11195  004D86                     __ptext69:
 11196                           	callstack 0
 11197  004D86                     ___llmod:
 11198                           	callstack 23
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;incstack = 0
 11202  004D86  500E               	movf	___llmod@divisor^0,w,c
 11203  004D88  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 11204  004D8A  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 11205  004D8C  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 11206  004D8E  B4D8               	btfsc	status,2,c
 11207  004D90  D024               	goto	l2153
 11208  004D92  0E01               	movlw	1
 11209  004D94  6E12               	movwf	___llmod@counter^0,c
 11210  004D96  D006               	goto	l12126
 11211  004D98                     l12124:
 11212  004D98  90D8               	bcf	status,0,c
 11213  004D9A  360E               	rlcf	___llmod@divisor^0,f,c
 11214  004D9C  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 11215  004D9E  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 11216  004DA0  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 11217  004DA2  2A12               	incf	___llmod@counter^0,f,c
 11218  004DA4                     l12126:
 11219  004DA4  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 11220  004DA6  D7F8               	goto	l12124
 11221  004DA8                     u14090:
 11222  004DA8  500E               	movf	___llmod@divisor^0,w,c
 11223  004DAA  5C0A               	subwf	___llmod@dividend^0,w,c
 11224  004DAC  500F               	movf	(___llmod@divisor+1)^0,w,c
 11225  004DAE  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 11226  004DB0  5010               	movf	(___llmod@divisor+2)^0,w,c
 11227  004DB2  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 11228  004DB4  5011               	movf	(___llmod@divisor+3)^0,w,c
 11229  004DB6  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 11230  004DB8  A0D8               	btfss	status,0,c
 11231  004DBA  D008               	goto	l12132
 11232  004DBC  500E               	movf	___llmod@divisor^0,w,c
 11233  004DBE  5E0A               	subwf	___llmod@dividend^0,f,c
 11234  004DC0  500F               	movf	(___llmod@divisor+1)^0,w,c
 11235  004DC2  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 11236  004DC4  5010               	movf	(___llmod@divisor+2)^0,w,c
 11237  004DC6  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 11238  004DC8  5011               	movf	(___llmod@divisor+3)^0,w,c
 11239  004DCA  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 11240  004DCC                     l12132:
 11241  004DCC  90D8               	bcf	status,0,c
 11242  004DCE  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 11243  004DD0  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 11244  004DD2  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 11245  004DD4  320E               	rrcf	___llmod@divisor^0,f,c
 11246  004DD6  2E12               	decfsz	___llmod@counter^0,f,c
 11247  004DD8  D7E7               	goto	u14090
 11248  004DDA                     l2153:
 11249  004DDA  C00A  F00A         	movff	___llmod@dividend,?___llmod
 11250  004DDE  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 11251  004DE2  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 11252  004DE6  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 11253  004DEA  0012               	return		;funcret
 11254  004DEC                     __end_of___llmod:
 11255                           	callstack 0
 11256                           
 11257 ;; *************** function _f_open *****************
 11258 ;; Defined at:
 11259 ;;		line 833 in file "bibliotecas/tff.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 11262 ;;		 -> fil(28), 
 11263 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 11264 ;;		 -> STR_16(13), filename(20), 
 11265 ;;  mode            1   60[BANK0 ] unsigned char 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  dw              4   79[BANK0 ] unsigned long 
 11268 ;;  rs              2   77[BANK0 ] unsigned short 
 11269 ;;  dj             14   86[BANK0 ] struct _DIR_E
 11270 ;;  fn             12   65[BANK0 ] unsigned char [12]
 11271 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 11272 ;;		 -> NULL(0), fs(544), 
 11273 ;;  res             1   83[BANK0 ] enum E155
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  1    wreg      enum E3231
 11276 ;; Registers used:
 11277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11278 ;; Tracked objects:
 11279 ;;		On entry : 3F/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11283 ;;      Params:         0       5       0       0       0       0       0       0       0
 11284 ;;      Locals:         0      35       0       0       0       0       0       0       0
 11285 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11286 ;;      Totals:         0      44       0       0       0       0       0       0       0
 11287 ;;Total ram usage:       44 bytes
 11288 ;; Hardware stack levels used:    1
 11289 ;; Hardware stack levels required when called:   11
 11290 ;; This function calls:
 11291 ;;		_auto_mount
 11292 ;;		_get_fattime
 11293 ;;		_memcpy
 11294 ;;		_memset
 11295 ;;		_move_window
 11296 ;;		_remove_chain
 11297 ;;		_reserve_direntry
 11298 ;;		_trace_path
 11299 ;; This function is called by:
 11300 ;;		_escrita_sdcard
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text70
 11305  0012CC                     __ptext70:
 11306                           	callstack 0
 11307  0012CC                     _f_open:
 11308                           	callstack 15
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 11312                           
 11313                           ;incstack = 0
 11314  0012CC  EE20 F004          	lfsr	2,4
 11315  0012D0  5198               	movf	f_open@fp& (0+255),w,b
 11316  0012D2  26D9               	addwf	fsr2l,f,c
 11317  0012D4  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11318  0012D6  22DA               	addwfc	fsr2h,f,c
 11319  0012D8  0E00               	movlw	0
 11320  0012DA  6EDE               	movwf	postinc2,c
 11321  0012DC  0E00               	movlw	0
 11322  0012DE  6EDD               	movwf	postdec2,c
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11326  0012E0  0E1F               	movlw	31
 11327  0012E2  179C               	andwf	f_open@mode& (0+255),f,b
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11331  0012E4  0E9A               	movlw	low f_open@path
 11332  0012E6  6E3D               	movwf	auto_mount@path^0,c
 11333  0012E8  519C               	movf	f_open@mode& (0+255),w,b
 11334  0012EA  0B1E               	andlw	30
 11335  0012EC  6E3E               	movwf	auto_mount@chk_wp^0,c
 11336  0012EE  ECD4  F002         	call	_auto_mount	;wreg free
 11337  0012F2  0100               	movlb	0	; () banked
 11338  0012F4  6FB3               	movwf	f_open@res& (0+255),b
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;tff.c: 853: if (res != FR_OK) return res;
 11342  0012F6  51B3               	movf	f_open@res& (0+255),w,b
 11343  0012F8  B4D8               	btfsc	status,2,c
 11344  0012FA  D002               	goto	l12252
 11345  0012FC                     u14250:
 11346                           
 11347                           ; BSR set to: 0
 11348  0012FC  51B3               	movf	f_open@res& (0+255),w,b
 11349  0012FE  0012               	return	
 11350  001300                     l12252:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11354  001300  0EB6               	movlw	low f_open@dj
 11355  001302  6F7E               	movwf	trace_path@dj& (0+255),b
 11356  001304  0EA1               	movlw	low f_open@fn
 11357  001306  6F7F               	movwf	trace_path@fn& (0+255),b
 11358  001308  C09A  F080         	movff	f_open@path,trace_path@path
 11359  00130C  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11360  001310  0EB4               	movlw	low f_open@dir
 11361  001312  6F82               	movwf	trace_path@dir& (0+255),b
 11362  001314  EC41  F00F         	call	_trace_path	;wreg free
 11363  001318  0100               	movlb	0	; () banked
 11364  00131A  6FB3               	movwf	f_open@res& (0+255),b
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11368  00131C  C09C  F09D         	movff	f_open@mode,??_f_open
 11369  001320  0E1C               	movlw	28
 11370  001322  179D               	andwf	??_f_open& (0+255),f,b
 11371  001324  B4D8               	btfsc	status,2,c
 11372  001326  D0E0               	goto	l12314
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11376  001328  51B3               	movf	f_open@res& (0+255),w,b
 11377  00132A  B4D8               	btfsc	status,2,c
 11378  00132C  D035               	goto	l1099
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11382  00132E  0E02               	movlw	2
 11383  001330  19B3               	xorwf	f_open@res& (0+255),w,b
 11384  001332  A4D8               	btfss	status,2,c
 11385  001334  D7E3               	goto	u14250
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11389  001336  0EB6               	movlw	low f_open@dj
 11390  001338  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11391  00133A  0EB4               	movlw	low f_open@dir
 11392  00133C  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11393  00133E  EC81  F010         	call	_reserve_direntry	;wreg free
 11394  001342  0100               	movlb	0	; () banked
 11395  001344  6FB3               	movwf	f_open@res& (0+255),b
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;tff.c: 864: if (res != FR_OK) return res;
 11399  001346  51B3               	movf	f_open@res& (0+255),w,b
 11400  001348  A4D8               	btfss	status,2,c
 11401  00134A  D7D8               	goto	u14250
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;tff.c: 865: memset(dir, 0, 32);
 11405  00134C  C0B4  F00A         	movff	f_open@dir,memset@p1
 11406  001350  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11407  001354  0E00               	movlw	0
 11408  001356  6E0D               	movwf	(memset@c+1)^0,c
 11409  001358  0E00               	movlw	0
 11410  00135A  6E0C               	movwf	memset@c^0,c
 11411  00135C  0E00               	movlw	0
 11412  00135E  6E0F               	movwf	(memset@n+1)^0,c
 11413  001360  0E20               	movlw	32
 11414  001362  6E0E               	movwf	memset@n^0,c
 11415  001364  EC03  F02C         	call	_memset	;wreg free
 11416                           
 11417                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11418  001368  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11419  00136C  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11420  001370  0EA1               	movlw	low f_open@fn
 11421  001372  6E0C               	movwf	memcpy@s1^0,c
 11422  001374  6A0D               	clrf	(memcpy@s1+1)^0,c
 11423  001376  0E00               	movlw	0
 11424  001378  6E0F               	movwf	(memcpy@n+1)^0,c
 11425  00137A  0E0B               	movlw	11
 11426  00137C  6E0E               	movwf	memcpy@n^0,c
 11427  00137E  EC0D  F02A         	call	_memcpy	;wreg free
 11428                           
 11429                           ;tff.c: 867: dir[12] = fn[11];
 11430  001382  0100               	movlb	0	; () banked
 11431  001384  EE20 F00C          	lfsr	2,12
 11432  001388  51B4               	movf	f_open@dir& (0+255),w,b
 11433  00138A  26D9               	addwf	fsr2l,f,c
 11434  00138C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11435  00138E  22DA               	addwfc	fsr2h,f,c
 11436  001390  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;tff.c: 868: mode |= 0x08;
 11440  001394  879C               	bsf	f_open@mode& (0+255),3,b
 11441                           
 11442                           ;tff.c: 869: }
 11443  001396  D07B               	goto	l12302
 11444  001398                     l1099:
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11448  001398  A59C               	btfss	f_open@mode& (0+255),2,b
 11449  00139A  D002               	goto	l12282
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;tff.c: 872: return FR_EXIST;
 11453  00139C  0E07               	movlw	7
 11454  00139E  0012               	return	
 11455  0013A0                     l12282:
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11459  0013A0  51B4               	movf	f_open@dir& (0+255),w,b
 11460  0013A2  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11461  0013A4  B4D8               	btfsc	status,2,c
 11462  0013A6  D00C               	goto	u14320
 11463                           
 11464                           ; BSR set to: 0
 11465  0013A8  EE20 F00B          	lfsr	2,11
 11466  0013AC  51B4               	movf	f_open@dir& (0+255),w,b
 11467  0013AE  26D9               	addwf	fsr2l,f,c
 11468  0013B0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11469  0013B2  22DA               	addwfc	fsr2h,f,c
 11470  0013B4  50DF               	movf	indf2,w,c
 11471  0013B6  6F9D               	movwf	??_f_open& (0+255),b
 11472  0013B8  0E11               	movlw	17
 11473  0013BA  179D               	andwf	??_f_open& (0+255),f,b
 11474  0013BC  B4D8               	btfsc	status,2,c
 11475  0013BE  D002               	goto	l1104
 11476  0013C0                     u14320:
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;tff.c: 874: return FR_DENIED;
 11480  0013C0  0E06               	movlw	6
 11481  0013C2  0012               	return	
 11482  0013C4                     l1104:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;tff.c: 875: if (mode & 0x08) {
 11486  0013C4  A79C               	btfss	f_open@mode& (0+255),3,b
 11487  0013C6  D063               	goto	l12302
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11491  0013C8  EE20 F01A          	lfsr	2,26
 11492  0013CC  51B4               	movf	f_open@dir& (0+255),w,b
 11493  0013CE  26D9               	addwf	fsr2l,f,c
 11494  0013D0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11495  0013D2  22DA               	addwfc	fsr2h,f,c
 11496  0013D4  CFDE F0AD          	movff	postinc2,f_open@rs
 11497  0013D8  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11498                           
 11499                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11500  0013DC  EE20 F01A          	lfsr	2,26
 11501  0013E0  51B4               	movf	f_open@dir& (0+255),w,b
 11502  0013E2  26D9               	addwf	fsr2l,f,c
 11503  0013E4  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11504  0013E6  22DA               	addwfc	fsr2h,f,c
 11505  0013E8  0E00               	movlw	0
 11506  0013EA  6EDE               	movwf	postinc2,c
 11507  0013EC  0E00               	movlw	0
 11508  0013EE  6EDD               	movwf	postdec2,c
 11509                           
 11510                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11511  0013F0  EE20 F01C          	lfsr	2,28
 11512  0013F4  51B4               	movf	f_open@dir& (0+255),w,b
 11513  0013F6  26D9               	addwf	fsr2l,f,c
 11514  0013F8  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11515  0013FA  22DA               	addwfc	fsr2h,f,c
 11516  0013FC  6ADE               	clrf	postinc2,c
 11517  0013FE  6ADE               	clrf	postinc2,c
 11518  001400  6ADE               	clrf	postinc2,c
 11519  001402  6ADD               	clrf	postdec2,c
 11520                           
 11521                           ;tff.c: 884: dj.fs->winflag = 1;
 11522  001404  EE20 F01F          	lfsr	2,31
 11523  001408  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11524  00140A  26D9               	addwf	fsr2l,f,c
 11525  00140C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11526  00140E  22DA               	addwfc	fsr2h,f,c
 11527  001410  0E01               	movlw	1
 11528  001412  6EDF               	movwf	indf2,c
 11529                           
 11530                           ;tff.c: 885: dw = dj.fs->winsect;
 11531  001414  EE20 F004          	lfsr	2,4
 11532  001418  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11533  00141A  26D9               	addwf	fsr2l,f,c
 11534  00141C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11535  00141E  22DA               	addwfc	fsr2h,f,c
 11536  001420  CFDE F0AF          	movff	postinc2,f_open@dw
 11537  001424  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11538  001428  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11539  00142C  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11543  001430  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11544  001434  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11545  001438  ECB1  F022         	call	_remove_chain	;wreg free
 11546  00143C  0900               	iorlw	0
 11547  00143E  B4D8               	btfsc	status,2,c
 11548  001440  D00D               	goto	u14350
 11549  001442  C0AF  F035         	movff	f_open@dw,move_window@sector
 11550  001446  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11551  00144A  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11552  00144E  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11553  001452  EC15  F015         	call	_move_window	;wreg free
 11554  001456  0900               	iorlw	0
 11555  001458  A4D8               	btfss	status,2,c
 11556  00145A  D002               	goto	l12300
 11557  00145C                     u14350:
 11558                           
 11559                           ;tff.c: 887: return FR_RW_ERROR;
 11560  00145C  0E08               	movlw	8
 11561  00145E  0012               	return	
 11562  001460                     l12300:
 11563                           
 11564                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11565  001460  0EFF               	movlw	255
 11566  001462  0100               	movlb	0	; () banked
 11567  001464  6F9D               	movwf	??_f_open& (0+255),b
 11568  001466  0EFF               	movlw	255
 11569  001468  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11570  00146A  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11571  00146E  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11572  001472  519D               	movf	??_f_open& (0+255),w,b
 11573  001474  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11574  001476  519E               	movf	(??_f_open+1)& (0+255),w,b
 11575  001478  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11576  00147A  EE20 F018          	lfsr	2,24
 11577  00147E  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11578  001480  26D9               	addwf	fsr2l,f,c
 11579  001482  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11580  001484  22DA               	addwfc	fsr2h,f,c
 11581  001486  C09F  FFDE         	movff	??_f_open+2,postinc2
 11582  00148A  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11583  00148E                     l12302:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11587  00148E  A79C               	btfss	f_open@mode& (0+255),3,b
 11588  001490  D046               	goto	l12334
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;tff.c: 892: dir[11] = 0;
 11592  001492  EE20 F00B          	lfsr	2,11
 11593  001496  51B4               	movf	f_open@dir& (0+255),w,b
 11594  001498  26D9               	addwf	fsr2l,f,c
 11595  00149A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11596  00149C  22DA               	addwfc	fsr2h,f,c
 11597  00149E  0E00               	movlw	0
 11598  0014A0  6EDF               	movwf	indf2,c
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;tff.c: 893: dw = get_fattime();
 11602  0014A2  EC58  F01A         	call	_get_fattime	;wreg free
 11603  0014A6  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11604  0014AA  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11605  0014AE  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11606  0014B2  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11607                           
 11608                           ; BSR set to: 1
 11609                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11610  0014B6  0100               	movlb	0	; () banked
 11611  0014B8  EE20 F00E          	lfsr	2,14
 11612  0014BC  51B4               	movf	f_open@dir& (0+255),w,b
 11613  0014BE  26D9               	addwf	fsr2l,f,c
 11614  0014C0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11615  0014C2  22DA               	addwfc	fsr2h,f,c
 11616  0014C4  C0AF  FFDE         	movff	f_open@dw,postinc2
 11617  0014C8  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11618  0014CC  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11619  0014D0  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;tff.c: 895: dj.fs->winflag = 1;
 11623  0014D4  EE20 F01F          	lfsr	2,31
 11624  0014D8  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11625  0014DA  26D9               	addwf	fsr2l,f,c
 11626  0014DC  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11627  0014DE  22DA               	addwfc	fsr2h,f,c
 11628  0014E0  0E01               	movlw	1
 11629  0014E2  6EDF               	movwf	indf2,c
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;tff.c: 896: mode |= 0x20;
 11633  0014E4  8B9C               	bsf	f_open@mode& (0+255),5,b
 11634  0014E6  D01B               	goto	l12334
 11635  0014E8                     l12314:
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11639  0014E8  51B3               	movf	f_open@res& (0+255),w,b
 11640  0014EA  A4D8               	btfss	status,2,c
 11641  0014EC  D707               	goto	u14250
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11645  0014EE  51B4               	movf	f_open@dir& (0+255),w,b
 11646  0014F0  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11647  0014F2  B4D8               	btfsc	status,2,c
 11648  0014F4  D008               	goto	u14390
 11649                           
 11650                           ; BSR set to: 0
 11651  0014F6  EE20 F00B          	lfsr	2,11
 11652  0014FA  51B4               	movf	f_open@dir& (0+255),w,b
 11653  0014FC  26D9               	addwf	fsr2l,f,c
 11654  0014FE  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11655  001500  22DA               	addwfc	fsr2h,f,c
 11656  001502  A8DF               	btfss	indf2,4,c
 11657  001504  D002               	goto	l1114
 11658  001506                     u14390:
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;tff.c: 904: return FR_NO_FILE;
 11662  001506  0E02               	movlw	2
 11663  001508  0012               	return	
 11664  00150A                     l1114:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11668  00150A  A39C               	btfss	f_open@mode& (0+255),1,b
 11669  00150C  D008               	goto	l12334
 11670                           
 11671                           ; BSR set to: 0
 11672  00150E  EE20 F00B          	lfsr	2,11
 11673  001512  51B4               	movf	f_open@dir& (0+255),w,b
 11674  001514  26D9               	addwf	fsr2l,f,c
 11675  001516  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11676  001518  22DA               	addwfc	fsr2h,f,c
 11677  00151A  B0DF               	btfsc	indf2,0,c
 11678  00151C  D751               	goto	u14320
 11679  00151E                     l12334:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11683  00151E  EE20 F004          	lfsr	2,4
 11684  001522  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11685  001524  26D9               	addwf	fsr2l,f,c
 11686  001526  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11687  001528  22DA               	addwfc	fsr2h,f,c
 11688  00152A  EE10 F016          	lfsr	1,22
 11689  00152E  5198               	movf	f_open@fp& (0+255),w,b
 11690  001530  26E1               	addwf	fsr1l,f,c
 11691  001532  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11692  001534  22E2               	addwfc	fsr1h,f,c
 11693  001536  CFDE FFE6          	movff	postinc2,postinc1
 11694  00153A  CFDE FFE6          	movff	postinc2,postinc1
 11695  00153E  CFDE FFE6          	movff	postinc2,postinc1
 11696  001542  CFDE FFE6          	movff	postinc2,postinc1
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;tff.c: 910: fp->dir_ptr = dir;
 11700  001546  EE20 F01A          	lfsr	2,26
 11701  00154A  5198               	movf	f_open@fp& (0+255),w,b
 11702  00154C  26D9               	addwf	fsr2l,f,c
 11703  00154E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11704  001550  22DA               	addwfc	fsr2h,f,c
 11705  001552  C0B4  FFDE         	movff	f_open@dir,postinc2
 11706  001556  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;tff.c: 912: fp->flag = mode;
 11710  00155A  EE20 F002          	lfsr	2,2
 11711  00155E  5198               	movf	f_open@fp& (0+255),w,b
 11712  001560  26D9               	addwf	fsr2l,f,c
 11713  001562  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11714  001564  22DA               	addwfc	fsr2h,f,c
 11715  001566  C09C  FFDF         	movff	f_open@mode,indf2
 11716                           
 11717                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11718  00156A  EE20 F01A          	lfsr	2,26
 11719  00156E  51B4               	movf	f_open@dir& (0+255),w,b
 11720  001570  26D9               	addwf	fsr2l,f,c
 11721  001572  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11722  001574  22DA               	addwfc	fsr2h,f,c
 11723  001576  EE10 F00E          	lfsr	1,14
 11724  00157A  5198               	movf	f_open@fp& (0+255),w,b
 11725  00157C  26E1               	addwf	fsr1l,f,c
 11726  00157E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11727  001580  22E2               	addwfc	fsr1h,f,c
 11728  001582  CFDE FFE6          	movff	postinc2,postinc1
 11729  001586  CFDD FFE5          	movff	postdec2,postdec1
 11730                           
 11731                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11732  00158A  EE20 F01C          	lfsr	2,28
 11733  00158E  51B4               	movf	f_open@dir& (0+255),w,b
 11734  001590  26D9               	addwf	fsr2l,f,c
 11735  001592  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11736  001594  22DA               	addwfc	fsr2h,f,c
 11737  001596  EE10 F00A          	lfsr	1,10
 11738  00159A  5198               	movf	f_open@fp& (0+255),w,b
 11739  00159C  26E1               	addwf	fsr1l,f,c
 11740  00159E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11741  0015A0  22E2               	addwfc	fsr1h,f,c
 11742  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 11743  0015A6  CFDE FFE6          	movff	postinc2,postinc1
 11744  0015AA  CFDE FFE6          	movff	postinc2,postinc1
 11745  0015AE  CFDE FFE6          	movff	postinc2,postinc1
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11749  0015B2  EE20 F006          	lfsr	2,6
 11750  0015B6  5198               	movf	f_open@fp& (0+255),w,b
 11751  0015B8  26D9               	addwf	fsr2l,f,c
 11752  0015BA  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11753  0015BC  22DA               	addwfc	fsr2h,f,c
 11754  0015BE  6ADE               	clrf	postinc2,c
 11755  0015C0  6ADE               	clrf	postinc2,c
 11756  0015C2  6ADE               	clrf	postinc2,c
 11757  0015C4  6ADD               	clrf	postdec2,c
 11758                           
 11759                           ; BSR set to: 0
 11760  0015C6  EE20 F003          	lfsr	2,3
 11761  0015CA  5198               	movf	f_open@fp& (0+255),w,b
 11762  0015CC  26D9               	addwf	fsr2l,f,c
 11763  0015CE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11764  0015D0  22DA               	addwfc	fsr2h,f,c
 11765  0015D2  0EFF               	movlw	255
 11766  0015D4  6EDF               	movwf	indf2,c
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11770  0015D6  EE20 F004          	lfsr	2,4
 11771  0015DA  5198               	movf	f_open@fp& (0+255),w,b
 11772  0015DC  26D9               	addwf	fsr2l,f,c
 11773  0015DE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11774  0015E0  22DA               	addwfc	fsr2h,f,c
 11775  0015E2  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11776  0015E6  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11777                           
 11778                           ; BSR set to: 0
 11779  0015EA  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11780  0015EE  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11781  0015F2  C098  FFE1         	movff	f_open@fp,fsr1l
 11782  0015F6  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11783  0015FA  CFDE FFE6          	movff	postinc2,postinc1
 11784  0015FE  CFDD FFE5          	movff	postdec2,postdec1
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;tff.c: 922: return FR_OK;
 11788  001602  0E00               	movlw	0
 11789  001604  0012               	return		;funcret
 11790  001606                     __end_of_f_open:
 11791                           	callstack 0
 11792                           
 11793 ;; *************** function _trace_path *****************
 11794 ;; Defined at:
 11795 ;;		line 502 in file "bibliotecas/tff.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11798 ;;		 -> f_open@dj(14), 
 11799 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11800 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11801 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11802 ;;		 -> STR_16(13), filename(20), 
 11803 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11804 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11807 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11808 ;;  clust           2   45[BANK0 ] unsigned short 
 11809 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11810 ;;		 -> NULL(0), fs(544), 
 11811 ;;  ds              1   47[BANK0 ] unsigned char 
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      enum E155
 11814 ;; Registers used:
 11815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 3F/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11821 ;;      Params:         0       5       0       0       0       0       0       0       0
 11822 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11823 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11824 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11825 ;;Total ram usage:       20 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:   10
 11828 ;; This function calls:
 11829 ;;		_clust2sect
 11830 ;;		_make_dirfile
 11831 ;;		_memcmp
 11832 ;;		_move_window
 11833 ;;		_next_dir_entry
 11834 ;; This function is called by:
 11835 ;;		_f_open
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text71
 11840  001E82                     __ptext71:
 11841                           	callstack 0
 11842  001E82                     _trace_path:
 11843                           	callstack 15
 11844                           
 11845                           ; BSR set to: 0
 11846                           ;tff.c: 512: FATFS *fs = FatFs;
 11847                           
 11848                           ;incstack = 0
 11849  001E82  C04D  F08B         	movff	_FatFs,trace_path@fs
 11850  001E86  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;tff.c: 515: dj->fs = fs;
 11854  001E8A  517E               	movf	trace_path@dj& (0+255),w,b
 11855  001E8C  6ED9               	movwf	fsr2l,c
 11856  001E8E  6ADA               	clrf	fsr2h,c
 11857  001E90  0E04               	movlw	4
 11858  001E92  26D9               	addwf	fsr2l,f,c
 11859  001E94  C08B  FFDE         	movff	trace_path@fs,postinc2
 11860  001E98  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;tff.c: 516: clust = fs->dirbase;
 11864  001E9C  EE20 F00C          	lfsr	2,12
 11865  001EA0  518B               	movf	trace_path@fs& (0+255),w,b
 11866  001EA2  26D9               	addwf	fsr2l,f,c
 11867  001EA4  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11868  001EA6  22DA               	addwfc	fsr2h,f,c
 11869  001EA8  CFDE F08D          	movff	postinc2,trace_path@clust
 11870  001EAC  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11874  001EB0  517E               	movf	trace_path@dj& (0+255),w,b
 11875  001EB2  6ED9               	movwf	fsr2l,c
 11876  001EB4  6ADA               	clrf	fsr2h,c
 11877  001EB6  0E06               	movlw	6
 11878  001EB8  26D9               	addwf	fsr2l,f,c
 11879  001EBA  0E00               	movlw	0
 11880  001EBC  6EDE               	movwf	postinc2,c
 11881  001EBE  0E00               	movlw	0
 11882  001EC0  6EDD               	movwf	postdec2,c
 11883  001EC2  517E               	movf	trace_path@dj& (0+255),w,b
 11884  001EC4  6EE1               	movwf	fsr1l,c
 11885  001EC6  6AE2               	clrf	fsr1h,c
 11886  001EC8  0E08               	movlw	8
 11887  001ECA  26E1               	addwf	fsr1l,f,c
 11888  001ECC  CFDE FFE6          	movff	postinc2,postinc1
 11889  001ED0  CFDD FFE5          	movff	postdec2,postdec1
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;tff.c: 525: dj->sect = clust;
 11893  001ED4  518D               	movf	trace_path@clust& (0+255),w,b
 11894  001ED6  6F83               	movwf	??_trace_path& (0+255),b
 11895  001ED8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11896  001EDA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11897  001EDC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11898  001EDE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11899  001EE0  517E               	movf	trace_path@dj& (0+255),w,b
 11900  001EE2  6ED9               	movwf	fsr2l,c
 11901  001EE4  6ADA               	clrf	fsr2h,c
 11902  001EE6  0E0A               	movlw	10
 11903  001EE8  26D9               	addwf	fsr2l,f,c
 11904  001EEA  C083  FFDE         	movff	??_trace_path,postinc2
 11905  001EEE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11906  001EF2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11907  001EF6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11911  001EFA  517E               	movf	trace_path@dj& (0+255),w,b
 11912  001EFC  6ED9               	movwf	fsr2l,c
 11913  001EFE  6ADA               	clrf	fsr2h,c
 11914  001F00  0E02               	movlw	2
 11915  001F02  26D9               	addwf	fsr2l,f,c
 11916  001F04  0E00               	movlw	0
 11917  001F06  6EDE               	movwf	postinc2,c
 11918  001F08  0E00               	movlw	0
 11919  001F0A  6EDD               	movwf	postdec2,c
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;tff.c: 529: if (*path == '\0') {
 11923  001F0C  C080  FFF6         	movff	trace_path@path,tblptrl
 11924  001F10  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11925  001F14  6AF8               	clrf	tblptru,c
 11926  001F16  0E07               	movlw	(high __ramtop+-1)
 11927  001F18  64F7               	cpfsgt	tblptrh,c
 11928  001F1A  D003               	bra	u13497
 11929  001F1C  0008               	tblrd		*
 11930  001F1E  50F5               	movf	tablat,w,c
 11931  001F20  D005               	bra	u13490
 11932  001F22                     u13497:
 11933  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11934  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11935  001F2A  50E7               	movf	indf1,w,c
 11936  001F2C                     u13490:
 11937  001F2C  0900               	iorlw	0
 11938  001F2E  A4D8               	btfss	status,2,c
 11939  001F30  D00A               	goto	l11764
 11940                           
 11941                           ;tff.c: 530: *dir = (0); return FR_OK;
 11942  001F32  0100               	movlb	0	; () banked
 11943  001F34  5182               	movf	trace_path@dir& (0+255),w,b
 11944  001F36  6ED9               	movwf	fsr2l,c
 11945  001F38  6ADA               	clrf	fsr2h,c
 11946  001F3A  0E00               	movlw	0
 11947  001F3C  6EDE               	movwf	postinc2,c
 11948  001F3E  0E00               	movlw	0
 11949  001F40  6EDD               	movwf	postdec2,c
 11950  001F42                     l11760:
 11951                           
 11952                           ; BSR set to: 0
 11953  001F42  0E00               	movlw	0
 11954  001F44  0012               	return	
 11955  001F46                     l11764:
 11956                           
 11957                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11958  001F46  0E80               	movlw	low trace_path@path
 11959  001F48  6E12               	movwf	make_dirfile@path^0,c
 11960  001F4A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11961  001F4E  ECAB  F019         	call	_make_dirfile	;wreg free
 11962  001F52  0100               	movlb	0	; () banked
 11963  001F54  6F8F               	movwf	trace_path@ds& (0+255),b
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11967  001F56  058F               	decf	trace_path@ds& (0+255),w,b
 11968  001F58  A4D8               	btfss	status,2,c
 11969  001F5A  D002               	goto	l11772
 11970                           
 11971                           ; BSR set to: 0
 11972  001F5C  0E04               	movlw	4
 11973  001F5E  0012               	return	
 11974  001F60                     l11772:
 11975                           
 11976                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11977  001F60  0100               	movlb	0	; () banked
 11978  001F62  517E               	movf	trace_path@dj& (0+255),w,b
 11979  001F64  6ED9               	movwf	fsr2l,c
 11980  001F66  6ADA               	clrf	fsr2h,c
 11981  001F68  0E0A               	movlw	10
 11982  001F6A  26D9               	addwf	fsr2l,f,c
 11983  001F6C  CFDE F035          	movff	postinc2,move_window@sector
 11984  001F70  CFDE F036          	movff	postinc2,move_window@sector+1
 11985  001F74  CFDE F037          	movff	postinc2,move_window@sector+2
 11986  001F78  CFDE F038          	movff	postinc2,move_window@sector+3
 11987  001F7C  EC15  F015         	call	_move_window	;wreg free
 11988  001F80  0900               	iorlw	0
 11989  001F82  A4D8               	btfss	status,2,c
 11990  001F84  D002               	goto	l11778
 11991  001F86  0E08               	movlw	8
 11992  001F88  0012               	return	
 11993  001F8A                     l11778:
 11994                           
 11995                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 11996  001F8A  0100               	movlb	0	; () banked
 11997  001F8C  517E               	movf	trace_path@dj& (0+255),w,b
 11998  001F8E  6ED9               	movwf	fsr2l,c
 11999  001F90  6ADA               	clrf	fsr2h,c
 12000  001F92  0E02               	movlw	2
 12001  001F94  26D9               	addwf	fsr2l,f,c
 12002  001F96  CFDE F083          	movff	postinc2,??_trace_path
 12003  001F9A  CFDD F084          	movff	postdec2,??_trace_path+1
 12004  001F9E  0E0F               	movlw	15
 12005  001FA0  1783               	andwf	??_trace_path& (0+255),f,b
 12006  001FA2  0E00               	movlw	0
 12007  001FA4  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 12008  001FA6  0E05               	movlw	5
 12009  001FA8                     u13535:
 12010  001FA8  90D8               	bcf	status,0,c
 12011  001FAA  3783               	rlcf	??_trace_path& (0+255),f,b
 12012  001FAC  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 12013  001FAE  2EE8               	decfsz	wreg,f,c
 12014  001FB0  D7FB               	goto	u13535
 12015  001FB2  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 12016  001FB6  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 12017  001FBA  5183               	movf	??_trace_path& (0+255),w,b
 12018  001FBC  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 12019  001FBE  5184               	movf	(??_trace_path+1)& (0+255),w,b
 12020  001FC0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 12021  001FC2  0E20               	movlw	32
 12022  001FC4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 12023  001FC6  6F90               	movwf	trace_path@dptr& (0+255),b
 12024  001FC8  0E00               	movlw	0
 12025  001FCA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 12026  001FCC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;tff.c: 539: if (dptr[0] == 0)
 12030  001FCE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12031  001FD2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12032  001FD6  50DF               	movf	indf2,w,c
 12033  001FD8  A4D8               	btfss	status,2,c
 12034  001FDA  D00D               	goto	l11790
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12038  001FDC  518F               	movf	trace_path@ds& (0+255),w,b
 12039  001FDE  B4D8               	btfsc	status,2,c
 12040  001FE0  D004               	goto	l11786
 12041                           
 12042                           ; BSR set to: 0
 12043  001FE2  0E00               	movlw	0
 12044  001FE4  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12045  001FE6  0E03               	movlw	3
 12046  001FE8  D003               	goto	L3
 12047  001FEA                     l11786:
 12048                           
 12049                           ; BSR set to: 0
 12050  001FEA  0E00               	movlw	0
 12051  001FEC  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12052  001FEE  0E02               	movlw	2
 12053  001FF0                     L3:
 12054  001FF0  6F87               	movwf	_trace_path$1780& (0+255),b
 12055                           
 12056                           ; BSR set to: 0
 12057  001FF2  5187               	movf	_trace_path$1780& (0+255),w,b
 12058  001FF4  0012               	return	
 12059  001FF6                     l11790:
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 12063  001FF6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12064  001FFA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12065  001FFE  0EE5               	movlw	229
 12066  002000  18DE               	xorwf	postinc2,w,c
 12067  002002  B4D8               	btfsc	status,2,c
 12068  002004  D019               	goto	l11798
 12069                           
 12070                           ; BSR set to: 0
 12071  002006  EE20 F00B          	lfsr	2,11
 12072  00200A  5190               	movf	trace_path@dptr& (0+255),w,b
 12073  00200C  26D9               	addwf	fsr2l,f,c
 12074  00200E  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12075  002010  22DA               	addwfc	fsr2h,f,c
 12076  002012  B6DF               	btfsc	indf2,3,c
 12077  002014  D011               	goto	l11798
 12078                           
 12079                           ; BSR set to: 0
 12080  002016  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 12081  00201A  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 12082  00201E  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 12083  002022  6A0D               	clrf	(memcmp@s2+1)^0,c
 12084  002024  0E00               	movlw	0
 12085  002026  6E0F               	movwf	(memcmp@n+1)^0,c
 12086  002028  0E0B               	movlw	11
 12087  00202A  6E0E               	movwf	memcmp@n^0,c
 12088  00202C  EC9A  F023         	call	_memcmp	;wreg free
 12089  002030  500A               	movf	?_memcmp^0,w,c
 12090  002032  100B               	iorwf	(?_memcmp+1)^0,w,c
 12091  002034  B4D8               	btfsc	status,2,c
 12092  002036  D015               	goto	l11808
 12093  002038                     l11798:
 12094                           
 12095                           ;tff.c: 544: if (!next_dir_entry(dj))
 12096  002038  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 12097  00203C  EC47  F018         	call	_next_dir_entry	;wreg free
 12098  002040  0900               	iorlw	0
 12099  002042  A4D8               	btfss	status,2,c
 12100  002044  D78D               	goto	l11772
 12101                           
 12102                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12103  002046  0100               	movlb	0	; () banked
 12104  002048  518F               	movf	trace_path@ds& (0+255),w,b
 12105  00204A  B4D8               	btfsc	status,2,c
 12106  00204C  D004               	goto	l11804
 12107                           
 12108                           ; BSR set to: 0
 12109  00204E  0E00               	movlw	0
 12110  002050  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12111  002052  0E03               	movlw	3
 12112  002054  D003               	goto	L4
 12113  002056                     l11804:
 12114                           
 12115                           ; BSR set to: 0
 12116  002056  0E00               	movlw	0
 12117  002058  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12118  00205A  0E02               	movlw	2
 12119  00205C                     L4:
 12120  00205C  6F89               	movwf	_trace_path$1782& (0+255),b
 12121                           
 12122                           ; BSR set to: 0
 12123  00205E  5189               	movf	_trace_path$1782& (0+255),w,b
 12124  002060  0012               	return	
 12125  002062                     l11808:
 12126                           
 12127                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 12128  002062  0100               	movlb	0	; () banked
 12129  002064  518F               	movf	trace_path@ds& (0+255),w,b
 12130  002066  A4D8               	btfss	status,2,c
 12131  002068  D008               	goto	l11816
 12132                           
 12133                           ; BSR set to: 0
 12134  00206A  5182               	movf	trace_path@dir& (0+255),w,b
 12135  00206C  6ED9               	movwf	fsr2l,c
 12136  00206E  6ADA               	clrf	fsr2h,c
 12137  002070  C090  FFDE         	movff	trace_path@dptr,postinc2
 12138  002074  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 12139  002078  D764               	goto	l11760
 12140  00207A                     l11816:
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 12144  00207A  EE20 F00B          	lfsr	2,11
 12145  00207E  5190               	movf	trace_path@dptr& (0+255),w,b
 12146  002080  26D9               	addwf	fsr2l,f,c
 12147  002082  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12148  002084  22DA               	addwfc	fsr2h,f,c
 12149  002086  B8DF               	btfsc	indf2,4,c
 12150  002088  D002               	goto	l11822
 12151                           
 12152                           ; BSR set to: 0
 12153  00208A  0E03               	movlw	3
 12154  00208C  0012               	return	
 12155  00208E                     l11822:
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 12159  00208E  EE20 F01A          	lfsr	2,26
 12160  002092  5190               	movf	trace_path@dptr& (0+255),w,b
 12161  002094  26D9               	addwf	fsr2l,f,c
 12162  002096  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12163  002098  22DA               	addwfc	fsr2h,f,c
 12164  00209A  CFDE F08D          	movff	postinc2,trace_path@clust
 12165  00209E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 12169  0020A2  517E               	movf	trace_path@dj& (0+255),w,b
 12170  0020A4  6ED9               	movwf	fsr2l,c
 12171  0020A6  6ADA               	clrf	fsr2h,c
 12172  0020A8  0E06               	movlw	6
 12173  0020AA  26D9               	addwf	fsr2l,f,c
 12174  0020AC  C08D  FFDE         	movff	trace_path@clust,postinc2
 12175  0020B0  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 12176  0020B4  517E               	movf	trace_path@dj& (0+255),w,b
 12177  0020B6  6EE1               	movwf	fsr1l,c
 12178  0020B8  6AE2               	clrf	fsr1h,c
 12179  0020BA  0E08               	movlw	8
 12180  0020BC  26E1               	addwf	fsr1l,f,c
 12181  0020BE  CFDE FFE6          	movff	postinc2,postinc1
 12182  0020C2  CFDD FFE5          	movff	postdec2,postdec1
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;tff.c: 555: dj->sect = clust2sect(clust);
 12186  0020C6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 12187  0020CA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 12188  0020CE  EC04  F021         	call	_clust2sect	;wreg free
 12189  0020D2  0100               	movlb	0	; () banked
 12190  0020D4  517E               	movf	trace_path@dj& (0+255),w,b
 12191  0020D6  6ED9               	movwf	fsr2l,c
 12192  0020D8  6ADA               	clrf	fsr2h,c
 12193  0020DA  0E0A               	movlw	10
 12194  0020DC  26D9               	addwf	fsr2l,f,c
 12195  0020DE  C016  FFDE         	movff	?_clust2sect,postinc2
 12196  0020E2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12197  0020E6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12198  0020EA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;tff.c: 556: dj->index = 2;
 12202  0020EE  517E               	movf	trace_path@dj& (0+255),w,b
 12203  0020F0  6ED9               	movwf	fsr2l,c
 12204  0020F2  6ADA               	clrf	fsr2h,c
 12205  0020F4  0E02               	movlw	2
 12206  0020F6  26D9               	addwf	fsr2l,f,c
 12207  0020F8  0E02               	movlw	2
 12208  0020FA  6EDE               	movwf	postinc2,c
 12209  0020FC  0E00               	movlw	0
 12210  0020FE  6EDD               	movwf	postdec2,c
 12211                           
 12212                           ;tff.c: 557: }
 12213  002100  D722               	goto	l11764
 12214  002102                     __end_of_trace_path:
 12215                           	callstack 0
 12216                           
 12217 ;; *************** function _make_dirfile *****************
 12218 ;; Defined at:
 12219 ;;		line 439 in file "bibliotecas/tff.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 12222 ;;		 -> trace_path@path(2), 
 12223 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 12224 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;  c               1   27[COMRAM] unsigned char 
 12227 ;;  n               1   26[COMRAM] unsigned char 
 12228 ;;  a               1   25[COMRAM] unsigned char 
 12229 ;;  t               1   24[COMRAM] unsigned char 
 12230 ;;  b               1   23[COMRAM] unsigned char 
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      unsigned char 
 12233 ;; Registers used:
 12234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12240 ;;      Params:         2       0       0       0       0       0       0       0       0
 12241 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12242 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12243 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12244 ;;Total ram usage:       11 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; Hardware stack levels required when called:    3
 12247 ;; This function calls:
 12248 ;;		_memset
 12249 ;; This function is called by:
 12250 ;;		_trace_path
 12251 ;; This function uses a non-reentrant model
 12252 ;;
 12253                           
 12254                           	psect	text72
 12255  003356                     __ptext72:
 12256                           	callstack 0
 12257  003356                     _make_dirfile:
 12258                           	callstack 21
 12259                           
 12260                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 12261                           
 12262                           ;incstack = 0
 12263  003356  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 12264  00335A  6A0B               	clrf	(memset@p1+1)^0,c
 12265  00335C  0E00               	movlw	0
 12266  00335E  6E0D               	movwf	(memset@c+1)^0,c
 12267  003360  0E20               	movlw	32
 12268  003362  6E0C               	movwf	memset@c^0,c
 12269  003364  0E00               	movlw	0
 12270  003366  6E0F               	movwf	(memset@n+1)^0,c
 12271  003368  0E0B               	movlw	11
 12272  00336A  6E0E               	movwf	memset@n^0,c
 12273  00336C  EC03  F02C         	call	_memset	;wreg free
 12274                           
 12275                           ;tff.c: 448: a = 0; b = 0x18;
 12276  003370  0E00               	movlw	0
 12277  003372  6E1A               	movwf	make_dirfile@a^0,c
 12278  003374  0E18               	movlw	24
 12279  003376  6E18               	movwf	make_dirfile@b^0,c
 12280                           
 12281                           ;tff.c: 449: n = 0; t = 8;
 12282  003378  0E00               	movlw	0
 12283  00337A  6E1B               	movwf	make_dirfile@n^0,c
 12284  00337C  0E08               	movlw	8
 12285  00337E  6E19               	movwf	make_dirfile@t^0,c
 12286  003380                     l11394:
 12287                           
 12288                           ;tff.c: 451: c = *(*path)++;
 12289  003380  5012               	movf	make_dirfile@path^0,w,c
 12290  003382  6ED9               	movwf	fsr2l,c
 12291  003384  6ADA               	clrf	fsr2h,c
 12292  003386  CFDF F014          	movff	indf2,??_make_dirfile
 12293  00338A  0E01               	movlw	1
 12294  00338C  26DE               	addwf	postinc2,f,c
 12295  00338E  CFDF F015          	movff	indf2,??_make_dirfile+1
 12296  003392  0E00               	movlw	0
 12297  003394  22DD               	addwfc	postdec2,f,c
 12298  003396  C014  FFF6         	movff	??_make_dirfile,tblptrl
 12299  00339A  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 12300  00339E  6AF8               	clrf	tblptru,c
 12301  0033A0  0E07               	movlw	(high __ramtop+-1)
 12302  0033A2  64F7               	cpfsgt	tblptrh,c
 12303  0033A4  D003               	bra	u12947
 12304  0033A6  0008               	tblrd		*
 12305  0033A8  50F5               	movf	tablat,w,c
 12306  0033AA  D005               	bra	u12940
 12307  0033AC                     u12947:
 12308  0033AC  CFF6 FFE1          	movff	tblptrl,fsr1l
 12309  0033B0  CFF7 FFE2          	movff	tblptrh,fsr1h
 12310  0033B4  50E7               	movf	indf1,w,c
 12311  0033B6                     u12940:
 12312  0033B6  6E1C               	movwf	make_dirfile@c^0,c
 12313                           
 12314                           ;tff.c: 452: if (c == '\0' || c == '/') {
 12315  0033B8  501C               	movf	make_dirfile@c^0,w,c
 12316  0033BA  B4D8               	btfsc	status,2,c
 12317  0033BC  D004               	goto	u12960
 12318  0033BE  0E2F               	movlw	47
 12319  0033C0  181C               	xorwf	make_dirfile@c^0,w,c
 12320  0033C2  A4D8               	btfss	status,2,c
 12321  0033C4  D012               	goto	l11414
 12322  0033C6                     u12960:
 12323                           
 12324                           ;tff.c: 453: if (n == 0) break;
 12325  0033C6  501B               	movf	make_dirfile@n^0,w,c
 12326  0033C8  B4D8               	btfsc	status,2,c
 12327  0033CA  D070               	goto	l11502
 12328  0033CC  501A               	movf	make_dirfile@a^0,w,c
 12329  0033CE  1418               	andwf	make_dirfile@b^0,w,c
 12330  0033D0  6E14               	movwf	??_make_dirfile^0,c
 12331  0033D2  5014               	movf	??_make_dirfile^0,w,c
 12332  0033D4  6E16               	movwf	_make_dirfile$1733^0,c
 12333  0033D6  6A17               	clrf	(_make_dirfile$1733+1)^0,c
 12334  0033D8  5013               	movf	make_dirfile@dirname^0,w,c
 12335  0033DA  6ED9               	movwf	fsr2l,c
 12336  0033DC  6ADA               	clrf	fsr2h,c
 12337  0033DE  0E0B               	movlw	11
 12338  0033E0  26D9               	addwf	fsr2l,f,c
 12339  0033E2  C016  FFDF         	movff	_make_dirfile$1733,indf2
 12340                           
 12341                           ;tff.c: 455: return c;
 12342  0033E6  501C               	movf	make_dirfile@c^0,w,c
 12343  0033E8  0012               	return	
 12344  0033EA                     l11414:
 12345                           
 12346                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12347  0033EA  0E20               	movlw	32
 12348  0033EC  641C               	cpfsgt	make_dirfile@c^0,c
 12349  0033EE  D05E               	goto	l11502
 12350  0033F0  0E7F               	movlw	127
 12351  0033F2  181C               	xorwf	make_dirfile@c^0,w,c
 12352  0033F4  B4D8               	btfsc	status,2,c
 12353  0033F6  D05A               	goto	l11502
 12354                           
 12355                           ;tff.c: 458: if (c == '.') {
 12356  0033F8  0E2E               	movlw	46
 12357  0033FA  181C               	xorwf	make_dirfile@c^0,w,c
 12358  0033FC  A4D8               	btfss	status,2,c
 12359  0033FE  D00C               	goto	l11444
 12360                           
 12361                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12362  003400  B01A               	btfsc	make_dirfile@a^0,0,c
 12363  003402  D054               	goto	l11502
 12364  003404  501B               	movf	make_dirfile@n^0,w,c
 12365  003406  B4D8               	btfsc	status,2,c
 12366  003408  D051               	goto	l11502
 12367  00340A  0E09               	movlw	9
 12368  00340C  601B               	cpfslt	make_dirfile@n^0,c
 12369  00340E  D04E               	goto	l11502
 12370                           
 12371                           ;tff.c: 460: n = 8; t = 11; continue;
 12372  003410  0E08               	movlw	8
 12373  003412  6E1B               	movwf	make_dirfile@n^0,c
 12374  003414  0E0B               	movlw	11
 12375  003416  D7B3               	goto	L5
 12376  003418                     l11444:
 12377                           
 12378                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12379  003418  0E22               	movlw	34
 12380  00341A  181C               	xorwf	make_dirfile@c^0,w,c
 12381  00341C  B4D8               	btfsc	status,2,c
 12382  00341E  D046               	goto	l11502
 12383                           
 12384                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12385  003420  0E2A               	movlw	42
 12386  003422  601C               	cpfslt	make_dirfile@c^0,c
 12387  003424  D001               	goto	l11452
 12388  003426  D035               	goto	l987
 12389  003428                     l11452:
 12390                           
 12391                           ;tff.c: 473: if (c <= ',') break;
 12392  003428  0E2D               	movlw	45
 12393  00342A  601C               	cpfslt	make_dirfile@c^0,c
 12394  00342C  D001               	goto	l11456
 12395  00342E  D03E               	goto	l11502
 12396  003430                     l11456:
 12397                           
 12398                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12399  003430  0E3A               	movlw	58
 12400  003432  601C               	cpfslt	make_dirfile@c^0,c
 12401  003434  D001               	goto	l11460
 12402  003436  D02D               	goto	l987
 12403  003438                     l11460:
 12404                           
 12405                           ;tff.c: 475: if (c <= '?') break;
 12406  003438  0E40               	movlw	64
 12407  00343A  601C               	cpfslt	make_dirfile@c^0,c
 12408  00343C  D001               	goto	l990
 12409  00343E  D036               	goto	l11502
 12410  003440                     l990:
 12411                           
 12412                           ;tff.c: 476: if (!(a & 1)) {
 12413  003440  B01A               	btfsc	make_dirfile@a^0,0,c
 12414  003442  D027               	goto	l987
 12415                           
 12416                           ;tff.c: 477: if (c == '|') break;
 12417  003444  0E7C               	movlw	124
 12418  003446  181C               	xorwf	make_dirfile@c^0,w,c
 12419  003448  B4D8               	btfsc	status,2,c
 12420  00344A  D030               	goto	l11502
 12421                           
 12422                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12423  00344C  0E5A               	movlw	90
 12424  00344E  641C               	cpfsgt	make_dirfile@c^0,c
 12425  003450  D004               	goto	l11474
 12426  003452  0E5E               	movlw	94
 12427  003454  601C               	cpfslt	make_dirfile@c^0,c
 12428  003456  D001               	goto	l11474
 12429  003458  D029               	goto	l11502
 12430  00345A                     l11474:
 12431  00345A  0E40               	movlw	64
 12432  00345C  641C               	cpfsgt	make_dirfile@c^0,c
 12433  00345E  D00A               	goto	l11484
 12434  003460  0E5B               	movlw	91
 12435  003462  601C               	cpfslt	make_dirfile@c^0,c
 12436  003464  D007               	goto	l11484
 12437                           
 12438                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12439  003466  0E08               	movlw	8
 12440  003468  1819               	xorwf	make_dirfile@t^0,w,c
 12441  00346A  A4D8               	btfss	status,2,c
 12442  00346C  D002               	goto	l11482
 12443  00346E  9618               	bcf	make_dirfile@b^0,3,c
 12444  003470  D001               	goto	l11484
 12445  003472                     l11482:
 12446  003472  9818               	bcf	make_dirfile@b^0,4,c
 12447  003474                     l11484:
 12448                           
 12449                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12450  003474  0E60               	movlw	96
 12451  003476  641C               	cpfsgt	make_dirfile@c^0,c
 12452  003478  D00C               	goto	l987
 12453  00347A  0E7B               	movlw	123
 12454  00347C  601C               	cpfslt	make_dirfile@c^0,c
 12455  00347E  D009               	goto	l987
 12456                           
 12457                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12458  003480  0E20               	movlw	32
 12459  003482  5E1C               	subwf	make_dirfile@c^0,f,c
 12460  003484  0E08               	movlw	8
 12461  003486  1819               	xorwf	make_dirfile@t^0,w,c
 12462  003488  A4D8               	btfss	status,2,c
 12463  00348A  D002               	goto	l11492
 12464  00348C  861A               	bsf	make_dirfile@a^0,3,c
 12465  00348E  D001               	goto	l987
 12466  003490                     l11492:
 12467  003490  881A               	bsf	make_dirfile@a^0,4,c
 12468  003492                     l987:
 12469                           
 12470                           ;tff.c: 487: a &= 0xFE;
 12471  003492  901A               	bcf	make_dirfile@a^0,0,c
 12472                           
 12473                           ;tff.c: 489: if (n >= t) break;
 12474  003494  5019               	movf	make_dirfile@t^0,w,c
 12475  003496  5C1B               	subwf	make_dirfile@n^0,w,c
 12476  003498  B0D8               	btfsc	status,0,c
 12477  00349A  D008               	goto	l11502
 12478                           
 12479                           ;tff.c: 490: dirname[n++] = c;
 12480  00349C  5013               	movf	make_dirfile@dirname^0,w,c
 12481  00349E  241B               	addwf	make_dirfile@n^0,w,c
 12482  0034A0  6ED9               	movwf	fsr2l,c
 12483  0034A2  6ADA               	clrf	fsr2h,c
 12484  0034A4  C01C  FFDF         	movff	make_dirfile@c,indf2
 12485  0034A8  2A1B               	incf	make_dirfile@n^0,f,c
 12486  0034AA  D76A               	goto	l11394
 12487  0034AC                     l11502:
 12488                           
 12489                           ;tff.c: 492: return 1;
 12490  0034AC  0E01               	movlw	1
 12491  0034AE  0012               	return		;funcret
 12492  0034B0                     __end_of_make_dirfile:
 12493                           	callstack 0
 12494                           
 12495 ;; *************** function _reserve_direntry *****************
 12496 ;; Defined at:
 12497 ;;		line 568 in file "bibliotecas/tff.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12500 ;;		 -> f_open@dj(14), 
 12501 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12502 ;;		 -> f_open@dir(2), 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  sector          4   44[BANK0 ] unsigned long 
 12505 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12506 ;;		 -> NULL(0), fs(544), 
 12507 ;;  clust           2   52[BANK0 ] unsigned short 
 12508 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12509 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12510 ;;  c               1   51[BANK0 ] unsigned char 
 12511 ;;  n               1   48[BANK0 ] unsigned char 
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      enum E155
 12514 ;; Registers used:
 12515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12516 ;; Tracked objects:
 12517 ;;		On entry : 3F/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12521 ;;      Params:         0       2       0       0       0       0       0       0       0
 12522 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12523 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12524 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12525 ;;Total ram usage:       18 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:   10
 12528 ;; This function calls:
 12529 ;;		_clust2sect
 12530 ;;		_create_chain
 12531 ;;		_disk_write
 12532 ;;		_memset
 12533 ;;		_move_window
 12534 ;;		_next_dir_entry
 12535 ;; This function is called by:
 12536 ;;		_f_open
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           	psect	text73
 12541  002102                     __ptext73:
 12542                           	callstack 0
 12543  002102                     _reserve_direntry:
 12544                           	callstack 15
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12548                           
 12549                           ;incstack = 0
 12550  002102  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12551  002104  6ED9               	movwf	fsr2l,c
 12552  002106  6ADA               	clrf	fsr2h,c
 12553  002108  0E04               	movlw	4
 12554  00210A  26D9               	addwf	fsr2l,f,c
 12555  00210C  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12556  002110  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12557                           
 12558                           ;tff.c: 580: clust = dj->sclust;
 12559  002114  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12560  002116  6ED9               	movwf	fsr2l,c
 12561  002118  6ADA               	clrf	fsr2h,c
 12562  00211A  0E06               	movlw	6
 12563  00211C  26D9               	addwf	fsr2l,f,c
 12564  00211E  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12565  002122  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;tff.c: 581: if (clust != 0) {
 12569  002126  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12570  002128  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12571  00212A  B4D8               	btfsc	status,2,c
 12572  00212C  D01E               	goto	l11838
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;tff.c: 582: dj->clust = clust;
 12576  00212E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12577  002130  6ED9               	movwf	fsr2l,c
 12578  002132  6ADA               	clrf	fsr2h,c
 12579  002134  0E08               	movlw	8
 12580  002136  26D9               	addwf	fsr2l,f,c
 12581  002138  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12582  00213C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12586  002140  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12587  002144  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12588  002148  EC04  F021         	call	_clust2sect	;wreg free
 12589  00214C  0100               	movlb	0	; () banked
 12590  00214E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12591  002150  6ED9               	movwf	fsr2l,c
 12592  002152  6ADA               	clrf	fsr2h,c
 12593  002154  0E0A               	movlw	10
 12594  002156  26D9               	addwf	fsr2l,f,c
 12595  002158  C016  FFDE         	movff	?_clust2sect,postinc2
 12596  00215C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12597  002160  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12598  002164  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12599                           
 12600                           ;tff.c: 584: } else {
 12601  002168  D013               	goto	l11840
 12602  00216A                     l11838:
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;tff.c: 585: dj->sect = fs->dirbase;
 12606  00216A  EE20 F00C          	lfsr	2,12
 12607  00216E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12608  002170  26D9               	addwf	fsr2l,f,c
 12609  002172  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12610  002174  22DA               	addwfc	fsr2h,f,c
 12611  002176  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12612  002178  6EE1               	movwf	fsr1l,c
 12613  00217A  6AE2               	clrf	fsr1h,c
 12614  00217C  0E0A               	movlw	10
 12615  00217E  26E1               	addwf	fsr1l,f,c
 12616  002180  CFDE FFE6          	movff	postinc2,postinc1
 12617  002184  CFDE FFE6          	movff	postinc2,postinc1
 12618  002188  CFDE FFE6          	movff	postinc2,postinc1
 12619  00218C  CFDE FFE6          	movff	postinc2,postinc1
 12620  002190                     l11840:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12624  002190  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12625  002192  6ED9               	movwf	fsr2l,c
 12626  002194  6ADA               	clrf	fsr2h,c
 12627  002196  0E02               	movlw	2
 12628  002198  26D9               	addwf	fsr2l,f,c
 12629  00219A  0E00               	movlw	0
 12630  00219C  6EDE               	movwf	postinc2,c
 12631  00219E  0E00               	movlw	0
 12632  0021A0  6EDD               	movwf	postdec2,c
 12633  0021A2                     l11842:
 12634                           
 12635                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12636  0021A2  0100               	movlb	0	; () banked
 12637  0021A4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12638  0021A6  6ED9               	movwf	fsr2l,c
 12639  0021A8  6ADA               	clrf	fsr2h,c
 12640  0021AA  0E0A               	movlw	10
 12641  0021AC  26D9               	addwf	fsr2l,f,c
 12642  0021AE  CFDE F035          	movff	postinc2,move_window@sector
 12643  0021B2  CFDE F036          	movff	postinc2,move_window@sector+1
 12644  0021B6  CFDE F037          	movff	postinc2,move_window@sector+2
 12645  0021BA  CFDE F038          	movff	postinc2,move_window@sector+3
 12646  0021BE  EC15  F015         	call	_move_window	;wreg free
 12647  0021C2  0900               	iorlw	0
 12648  0021C4  A4D8               	btfss	status,2,c
 12649  0021C6  D002               	goto	l11848
 12650  0021C8                     u13640:
 12651  0021C8  0E08               	movlw	8
 12652  0021CA  0012               	return	
 12653  0021CC                     l11848:
 12654                           
 12655                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12656  0021CC  0100               	movlb	0	; () banked
 12657  0021CE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12658  0021D0  6ED9               	movwf	fsr2l,c
 12659  0021D2  6ADA               	clrf	fsr2h,c
 12660  0021D4  0E02               	movlw	2
 12661  0021D6  26D9               	addwf	fsr2l,f,c
 12662  0021D8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12663  0021DC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12664  0021E0  0E0F               	movlw	15
 12665  0021E2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12666  0021E4  0E00               	movlw	0
 12667  0021E6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12668  0021E8  0E05               	movlw	5
 12669  0021EA                     u13655:
 12670  0021EA  90D8               	bcf	status,0,c
 12671  0021EC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12672  0021EE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12673  0021F0  2EE8               	decfsz	wreg,f,c
 12674  0021F2  D7FB               	goto	u13655
 12675  0021F4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12676  0021F8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12677  0021FC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12678  0021FE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12679  002200  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12680  002202  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12681  002204  0E20               	movlw	32
 12682  002206  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12683  002208  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12684  00220A  0E00               	movlw	0
 12685  00220C  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12686  00220E  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;tff.c: 592: c = dptr[0];
 12690  002210  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12691  002214  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12692  002218  50DF               	movf	indf2,w,c
 12693  00221A  6F93               	movwf	reserve_direntry@c& (0+255),b
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12697  00221C  5193               	movf	reserve_direntry@c& (0+255),w,b
 12698  00221E  B4D8               	btfsc	status,2,c
 12699  002220  D004               	goto	u13670
 12700                           
 12701                           ; BSR set to: 0
 12702  002222  0EE5               	movlw	229
 12703  002224  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12704  002226  A4D8               	btfss	status,2,c
 12705  002228  D009               	goto	l11862
 12706  00222A                     u13670:
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12710  00222A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12711  00222C  6ED9               	movwf	fsr2l,c
 12712  00222E  6ADA               	clrf	fsr2h,c
 12713  002230  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12714  002234  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12715  002238                     l11858:
 12716                           
 12717                           ; BSR set to: 0
 12718  002238  0E00               	movlw	0
 12719  00223A  0012               	return	
 12720  00223C                     l11862:
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12724  00223C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12725  002240  EC47  F018         	call	_next_dir_entry	;wreg free
 12726  002244  0900               	iorlw	0
 12727  002246  A4D8               	btfss	status,2,c
 12728  002248  D7AC               	goto	l11842
 12729                           
 12730                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12731  00224A  0100               	movlb	0	; () banked
 12732  00224C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12733  00224E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12734  002250  B4D8               	btfsc	status,2,c
 12735  002252  D013               	goto	u13700
 12736                           
 12737                           ; BSR set to: 0
 12738  002254  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12739  002256  6ED9               	movwf	fsr2l,c
 12740  002258  6ADA               	clrf	fsr2h,c
 12741  00225A  0E08               	movlw	8
 12742  00225C  26D9               	addwf	fsr2l,f,c
 12743  00225E  CFDE F078          	movff	postinc2,create_chain@clust
 12744  002262  CFDD F079          	movff	postdec2,create_chain@clust+1
 12745  002266  ECBB  F016         	call	_create_chain	;wreg free
 12746  00226A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12747  00226E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12748  002272  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12749  002274  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12750  002276  A4D8               	btfss	status,2,c
 12751  002278  D002               	goto	l11872
 12752  00227A                     u13700:
 12753                           
 12754                           ; BSR set to: 0
 12755  00227A  0E06               	movlw	6
 12756  00227C  0012               	return	
 12757  00227E                     l11872:
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12761  00227E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12762  002280  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12763  002282  B4D8               	btfsc	status,2,c
 12764  002284  D7A1               	goto	u13640
 12765                           
 12766                           ; BSR set to: 0
 12767  002286  0E00               	movlw	0
 12768  002288  6E35               	movwf	move_window@sector^0,c
 12769  00228A  0E00               	movlw	0
 12770  00228C  6E36               	movwf	(move_window@sector+1)^0,c
 12771  00228E  0E00               	movlw	0
 12772  002290  6E37               	movwf	(move_window@sector+2)^0,c
 12773  002292  0E00               	movlw	0
 12774  002294  6E38               	movwf	(move_window@sector+3)^0,c
 12775  002296  EC15  F015         	call	_move_window	;wreg free
 12776  00229A  0900               	iorlw	0
 12777  00229C  B4D8               	btfsc	status,2,c
 12778  00229E  D794               	goto	u13640
 12779                           
 12780                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12781  0022A0  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12782  0022A4  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12783  0022A8  EC04  F021         	call	_clust2sect	;wreg free
 12784  0022AC  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12785  0022B0  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12786  0022B4  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12787  0022B8  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12788  0022BC  0100               	movlb	0	; () banked
 12789  0022BE  EE20 F004          	lfsr	2,4
 12790  0022C2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12791  0022C4  26D9               	addwf	fsr2l,f,c
 12792  0022C6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12793  0022C8  22DA               	addwfc	fsr2h,f,c
 12794  0022CA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12795  0022CE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12796  0022D2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12797  0022D6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12798                           
 12799                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12800  0022DA  0E20               	movlw	32
 12801  0022DC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12802  0022DE  6E0A               	movwf	memset@p1^0,c
 12803  0022E0  0E00               	movlw	0
 12804  0022E2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12805  0022E4  6E0B               	movwf	(memset@p1+1)^0,c
 12806  0022E6  0E00               	movlw	0
 12807  0022E8  6E0D               	movwf	(memset@c+1)^0,c
 12808  0022EA  0E00               	movlw	0
 12809  0022EC  6E0C               	movwf	memset@c^0,c
 12810  0022EE  0E02               	movlw	2
 12811  0022F0  6E0F               	movwf	(memset@n+1)^0,c
 12812  0022F2  0E00               	movlw	0
 12813  0022F4  6E0E               	movwf	memset@n^0,c
 12814  0022F6  EC03  F02C         	call	_memset	;wreg free
 12815                           
 12816                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12817  0022FA  0100               	movlb	0	; () banked
 12818  0022FC  EE20 F01D          	lfsr	2,29
 12819  002300  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12820  002302  26D9               	addwf	fsr2l,f,c
 12821  002304  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12822  002306  22DA               	addwfc	fsr2h,f,c
 12823  002308  50DF               	movf	indf2,w,c
 12824  00230A  6F90               	movwf	reserve_direntry@n& (0+255),b
 12825  00230C  D01E               	goto	l11894
 12826  00230E                     l11884:
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12830  00230E  0E20               	movlw	32
 12831  002310  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12832  002312  6E29               	movwf	disk_write@buff^0,c
 12833  002314  0E00               	movlw	0
 12834  002316  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12835  002318  6E2A               	movwf	(disk_write@buff+1)^0,c
 12836  00231A  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12837  00231E  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12838  002322  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12839  002326  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12840  00232A  0E01               	movlw	1
 12841  00232C  6E2F               	movwf	disk_write@count^0,c
 12842  00232E  0E00               	movlw	0
 12843  002330  EC34  F029         	call	_disk_write
 12844  002334  0900               	iorlw	0
 12845  002336  A4D8               	btfss	status,2,c
 12846  002338  D747               	goto	u13640
 12847                           
 12848                           ;tff.c: 608: sector++;
 12849  00233A  0E01               	movlw	1
 12850  00233C  0100               	movlb	0	; () banked
 12851  00233E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12852  002340  0E00               	movlw	0
 12853  002342  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12854  002344  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12855  002346  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12856                           
 12857                           ; BSR set to: 0
 12858  002348  0790               	decf	reserve_direntry@n& (0+255),f,b
 12859  00234A                     l11894:
 12860                           
 12861                           ; BSR set to: 0
 12862  00234A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12863  00234C  A4D8               	btfss	status,2,c
 12864  00234E  D7DF               	goto	l11884
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12868  002350  EE20 F01F          	lfsr	2,31
 12869  002354  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12870  002356  26D9               	addwf	fsr2l,f,c
 12871  002358  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12872  00235A  22DA               	addwfc	fsr2h,f,c
 12873  00235C  0E01               	movlw	1
 12874  00235E  6EDF               	movwf	indf2,c
 12875                           
 12876                           ;tff.c: 611: *dir = fs->win;
 12877  002360  0E20               	movlw	32
 12878  002362  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12879  002364  6F88               	movwf	??_reserve_direntry& (0+255),b
 12880  002366  0E00               	movlw	0
 12881  002368  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12882  00236A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12883  00236C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12884  00236E  6ED9               	movwf	fsr2l,c
 12885  002370  6ADA               	clrf	fsr2h,c
 12886  002372  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12887  002376  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12888  00237A  D75E               	goto	l11858
 12889  00237C                     __end_of_reserve_direntry:
 12890                           	callstack 0
 12891                           
 12892 ;; *************** function _next_dir_entry *****************
 12893 ;; Defined at:
 12894 ;;		line 359 in file "bibliotecas/tff.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12897 ;;		 -> f_open@dj(14), 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;  idx             2   28[BANK0 ] unsigned short 
 12900 ;;  clust           2   26[BANK0 ] unsigned short 
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      enum E105
 12903 ;; Registers used:
 12904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12910 ;;      Params:         1       0       0       0       0       0       0       0       0
 12911 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12912 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12913 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12914 ;;Total ram usage:       12 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; Hardware stack levels required when called:    9
 12917 ;; This function calls:
 12918 ;;		_clust2sect
 12919 ;;		_get_cluster
 12920 ;; This function is called by:
 12921 ;;		_trace_path
 12922 ;;		_reserve_direntry
 12923 ;; This function uses a non-reentrant model
 12924 ;;
 12925                           
 12926                           	psect	text74
 12927  00308E                     __ptext74:
 12928                           	callstack 0
 12929  00308E                     _next_dir_entry:
 12930                           	callstack 15
 12931                           
 12932                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12933                           
 12934                           ;incstack = 0
 12935  00308E  504C               	movf	next_dir_entry@dj^0,w,c
 12936  003090  6ED9               	movwf	fsr2l,c
 12937  003092  6ADA               	clrf	fsr2h,c
 12938  003094  0E02               	movlw	2
 12939  003096  26D9               	addwf	fsr2l,f,c
 12940  003098  CFDE F073          	movff	postinc2,??_next_dir_entry
 12941  00309C  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12942  0030A0  0E01               	movlw	1
 12943  0030A2  0100               	movlb	0	; () banked
 12944  0030A4  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12945  0030A6  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12946  0030A8  0E00               	movlw	0
 12947  0030AA  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12948  0030AC  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;tff.c: 368: if ((idx & 15) == 0) {
 12952  0030AE  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12953  0030B2  0E0F               	movlw	15
 12954  0030B4  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12955  0030B6  A4D8               	btfss	status,2,c
 12956  0030B8  D092               	goto	l11378
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;tff.c: 369: dj->sect++;
 12960  0030BA  504C               	movf	next_dir_entry@dj^0,w,c
 12961  0030BC  6ED9               	movwf	fsr2l,c
 12962  0030BE  6ADA               	clrf	fsr2h,c
 12963  0030C0  0E0A               	movlw	10
 12964  0030C2  26D9               	addwf	fsr2l,f,c
 12965  0030C4  2ADE               	incf	postinc2,f,c
 12966  0030C6  0E00               	movlw	0
 12967  0030C8  22DE               	addwfc	postinc2,f,c
 12968  0030CA  22DE               	addwfc	postinc2,f,c
 12969  0030CC  22DE               	addwfc	postinc2,f,c
 12970                           
 12971                           ;tff.c: 370: if (dj->clust == 0) {
 12972  0030CE  504C               	movf	next_dir_entry@dj^0,w,c
 12973  0030D0  6ED9               	movwf	fsr2l,c
 12974  0030D2  6ADA               	clrf	fsr2h,c
 12975  0030D4  0E08               	movlw	8
 12976  0030D6  26D9               	addwf	fsr2l,f,c
 12977  0030D8  50DE               	movf	postinc2,w,c
 12978  0030DA  10DE               	iorwf	postinc2,w,c
 12979  0030DC  A4D8               	btfss	status,2,c
 12980  0030DE  D013               	goto	l11362
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12984  0030E0  504C               	movf	next_dir_entry@dj^0,w,c
 12985  0030E2  6ED9               	movwf	fsr2l,c
 12986  0030E4  6ADA               	clrf	fsr2h,c
 12987  0030E6  0E04               	movlw	4
 12988  0030E8  26D9               	addwf	fsr2l,f,c
 12989  0030EA  EE10 F002          	lfsr	1,2
 12990  0030EE  50DE               	movf	postinc2,w,c
 12991  0030F0  26E1               	addwf	fsr1l,f,c
 12992  0030F2  50DD               	movf	postdec2,w,c
 12993  0030F4  22E2               	addwfc	fsr1h,f,c
 12994  0030F6  50E6               	movf	postinc1,w,c
 12995  0030F8  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 12996  0030FA  50E6               	movf	postinc1,w,c
 12997  0030FC  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 12998  0030FE  A0D8               	btfss	status,0,c
 12999  003100  D06E               	goto	l11378
 13000  003102                     u12890:
 13001                           
 13002                           ; BSR set to: 0
 13003  003102  0E00               	movlw	0
 13004  003104  0012               	return	
 13005  003106                     l11362:
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 13009  003106  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 13010  00310A  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 13011  00310E  0E04               	movlw	4
 13012  003110  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 13013  003112                     u12905:
 13014  003112  90D8               	bcf	status,0,c
 13015  003114  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 13016  003116  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 13017  003118  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 13018  00311A  D7FB               	goto	u12905
 13019  00311C  0EFF               	movlw	255
 13020  00311E  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 13021  003120  0EFF               	movlw	255
 13022  003122  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 13023  003124  504C               	movf	next_dir_entry@dj^0,w,c
 13024  003126  6ED9               	movwf	fsr2l,c
 13025  003128  6ADA               	clrf	fsr2h,c
 13026  00312A  0E04               	movlw	4
 13027  00312C  26D9               	addwf	fsr2l,f,c
 13028  00312E  EE10 F01D          	lfsr	1,29
 13029  003132  50DE               	movf	postinc2,w,c
 13030  003134  26E1               	addwf	fsr1l,f,c
 13031  003136  50DD               	movf	postdec2,w,c
 13032  003138  22E2               	addwfc	fsr1h,f,c
 13033  00313A  50E7               	movf	indf1,w,c
 13034  00313C  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 13035  00313E  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 13036  003140  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 13037  003142  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 13038  003144  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 13039  003146  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 13040  003148  5173               	movf	??_next_dir_entry& (0+255),w,b
 13041  00314A  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 13042  00314C  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 13043  00314E  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 13044  003150  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 13045  003152  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 13046  003154  A4D8               	btfss	status,2,c
 13047  003156  D043               	goto	l11378
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;tff.c: 374: clust = get_cluster(dj->clust);
 13051  003158  504C               	movf	next_dir_entry@dj^0,w,c
 13052  00315A  6ED9               	movwf	fsr2l,c
 13053  00315C  6ADA               	clrf	fsr2h,c
 13054  00315E  0E08               	movlw	8
 13055  003160  26D9               	addwf	fsr2l,f,c
 13056  003162  CFDE F04A          	movff	postinc2,get_cluster@clust
 13057  003166  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 13058  00316A  ECF4  F012         	call	_get_cluster	;wreg free
 13059  00316E  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 13060  003172  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 13061                           
 13062                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 13063  003176  0100               	movlb	0	; () banked
 13064  003178  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 13065  00317A  E104               	bnz	u12920
 13066  00317C  0E02               	movlw	2
 13067  00317E  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13068  003180  A0D8               	btfss	status,0,c
 13069  003182  D7BF               	goto	u12890
 13070  003184                     u12920:
 13071                           
 13072                           ; BSR set to: 0
 13073  003184  504C               	movf	next_dir_entry@dj^0,w,c
 13074  003186  6ED9               	movwf	fsr2l,c
 13075  003188  6ADA               	clrf	fsr2h,c
 13076  00318A  0E04               	movlw	4
 13077  00318C  26D9               	addwf	fsr2l,f,c
 13078  00318E  EE10 F016          	lfsr	1,22
 13079  003192  50DE               	movf	postinc2,w,c
 13080  003194  26E1               	addwf	fsr1l,f,c
 13081  003196  50DD               	movf	postdec2,w,c
 13082  003198  22E2               	addwfc	fsr1h,f,c
 13083  00319A  50E6               	movf	postinc1,w,c
 13084  00319C  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13085  00319E  50E6               	movf	postinc1,w,c
 13086  0031A0  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 13087  0031A2  B0D8               	btfsc	status,0,c
 13088  0031A4  D7AE               	goto	u12890
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;tff.c: 377: dj->clust = clust;
 13092  0031A6  504C               	movf	next_dir_entry@dj^0,w,c
 13093  0031A8  6ED9               	movwf	fsr2l,c
 13094  0031AA  6ADA               	clrf	fsr2h,c
 13095  0031AC  0E08               	movlw	8
 13096  0031AE  26D9               	addwf	fsr2l,f,c
 13097  0031B0  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 13098  0031B4  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;tff.c: 378: dj->sect = clust2sect(clust);
 13102  0031B8  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 13103  0031BC  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 13104  0031C0  EC04  F021         	call	_clust2sect	;wreg free
 13105  0031C4  504C               	movf	next_dir_entry@dj^0,w,c
 13106  0031C6  6ED9               	movwf	fsr2l,c
 13107  0031C8  6ADA               	clrf	fsr2h,c
 13108  0031CA  0E0A               	movlw	10
 13109  0031CC  26D9               	addwf	fsr2l,f,c
 13110  0031CE  C016  FFDE         	movff	?_clust2sect,postinc2
 13111  0031D2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 13112  0031D6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 13113  0031DA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 13114  0031DE                     l11378:
 13115                           
 13116                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 13117  0031DE  504C               	movf	next_dir_entry@dj^0,w,c
 13118  0031E0  6ED9               	movwf	fsr2l,c
 13119  0031E2  6ADA               	clrf	fsr2h,c
 13120  0031E4  0E02               	movlw	2
 13121  0031E6  26D9               	addwf	fsr2l,f,c
 13122  0031E8  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 13123  0031EC  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 13124                           
 13125                           ;tff.c: 383: return TRUE;
 13126  0031F0  0E01               	movlw	1
 13127  0031F2  0012               	return		;funcret
 13128  0031F4                     __end_of_next_dir_entry:
 13129                           	callstack 0
 13130                           
 13131 ;; *************** function _clust2sect *****************
 13132 ;; Defined at:
 13133 ;;		line 339 in file "bibliotecas/tff.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;  clust           2   21[COMRAM] unsigned short 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 13138 ;;		 -> NULL(0), fs(544), 
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  4   21[COMRAM] unsigned long 
 13141 ;; Registers used:
 13142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13148 ;;      Params:         4       0       0       0       0       0       0       0       0
 13149 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13150 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13151 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13152 ;;Total ram usage:       11 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    3
 13155 ;; This function calls:
 13156 ;;		___lmul
 13157 ;; This function is called by:
 13158 ;;		_next_dir_entry
 13159 ;;		_trace_path
 13160 ;;		_reserve_direntry
 13161 ;;		_f_write
 13162 ;;		_f_read
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text75
 13167  004208                     __ptext75:
 13168                           	callstack 0
 13169  004208                     _clust2sect:
 13170                           	callstack 19
 13171                           
 13172                           ;tff.c: 343: FATFS *fs = FatFs;
 13173                           
 13174                           ;incstack = 0
 13175  004208  C04D  F01F         	movff	_FatFs,clust2sect@fs
 13176  00420C  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 13177                           
 13178                           ;tff.c: 346: clust -= 2;
 13179  004210  0E02               	movlw	2
 13180  004212  5E16               	subwf	clust2sect@clust^0,f,c
 13181  004214  0E00               	movlw	0
 13182  004216  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 13183                           
 13184                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 13185  004218  0EFE               	movlw	254
 13186  00421A  6E1A               	movwf	??_clust2sect^0,c
 13187  00421C  0EFF               	movlw	255
 13188  00421E  6E1B               	movwf	(??_clust2sect+1)^0,c
 13189  004220  EE20 F016          	lfsr	2,22
 13190  004224  501F               	movf	clust2sect@fs^0,w,c
 13191  004226  26D9               	addwf	fsr2l,f,c
 13192  004228  5020               	movf	(clust2sect@fs+1)^0,w,c
 13193  00422A  22DA               	addwfc	fsr2h,f,c
 13194  00422C  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13195  004230  CFDD F01D          	movff	postdec2,??_clust2sect+3
 13196  004234  501A               	movf	??_clust2sect^0,w,c
 13197  004236  261C               	addwf	(??_clust2sect+2)^0,f,c
 13198  004238  501B               	movf	(??_clust2sect+1)^0,w,c
 13199  00423A  221D               	addwfc	(??_clust2sect+3)^0,f,c
 13200  00423C  501C               	movf	(??_clust2sect+2)^0,w,c
 13201  00423E  5C16               	subwf	clust2sect@clust^0,w,c
 13202  004240  501D               	movf	(??_clust2sect+3)^0,w,c
 13203  004242  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 13204  004244  A0D8               	btfss	status,0,c
 13205  004246  D009               	goto	l10884
 13206  004248  0E00               	movlw	0
 13207  00424A  6E16               	movwf	?_clust2sect^0,c
 13208  00424C  0E00               	movlw	0
 13209  00424E  6E17               	movwf	(?_clust2sect+1)^0,c
 13210  004250  0E00               	movlw	0
 13211  004252  6E18               	movwf	(?_clust2sect+2)^0,c
 13212  004254  0E00               	movlw	0
 13213  004256  6E19               	movwf	(?_clust2sect+3)^0,c
 13214  004258  0012               	return	
 13215  00425A                     l10884:
 13216                           
 13217                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 13218  00425A  EE20 F010          	lfsr	2,16
 13219  00425E  501F               	movf	clust2sect@fs^0,w,c
 13220  004260  26D9               	addwf	fsr2l,f,c
 13221  004262  5020               	movf	(clust2sect@fs+1)^0,w,c
 13222  004264  22DA               	addwfc	fsr2h,f,c
 13223  004266  CFDE F01A          	movff	postinc2,??_clust2sect
 13224  00426A  CFDE F01B          	movff	postinc2,??_clust2sect+1
 13225  00426E  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13226  004272  CFDE F01D          	movff	postinc2,??_clust2sect+3
 13227  004276  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 13228  00427A  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 13229  00427E  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 13230  004280  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 13231  004282  EE20 F01D          	lfsr	2,29
 13232  004286  501F               	movf	clust2sect@fs^0,w,c
 13233  004288  26D9               	addwf	fsr2l,f,c
 13234  00428A  5020               	movf	(clust2sect@fs+1)^0,w,c
 13235  00428C  22DA               	addwfc	fsr2h,f,c
 13236  00428E  50DF               	movf	indf2,w,c
 13237  004290  6E1E               	movwf	(??_clust2sect+4)^0,c
 13238  004292  501E               	movf	(??_clust2sect+4)^0,w,c
 13239  004294  6E0E               	movwf	___lmul@multiplicand^0,c
 13240  004296  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13241  004298  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13242  00429A  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13243  00429C  EC66  F028         	call	___lmul	;wreg free
 13244  0042A0  501A               	movf	??_clust2sect^0,w,c
 13245  0042A2  240A               	addwf	?___lmul^0,w,c
 13246  0042A4  6E16               	movwf	?_clust2sect^0,c
 13247  0042A6  501B               	movf	(??_clust2sect+1)^0,w,c
 13248  0042A8  200B               	addwfc	(?___lmul+1)^0,w,c
 13249  0042AA  6E17               	movwf	(?_clust2sect+1)^0,c
 13250  0042AC  501C               	movf	(??_clust2sect+2)^0,w,c
 13251  0042AE  200C               	addwfc	(?___lmul+2)^0,w,c
 13252  0042B0  6E18               	movwf	(?_clust2sect+2)^0,c
 13253  0042B2  501D               	movf	(??_clust2sect+3)^0,w,c
 13254  0042B4  200D               	addwfc	(?___lmul+3)^0,w,c
 13255  0042B6  6E19               	movwf	(?_clust2sect+3)^0,c
 13256  0042B8  0012               	return		;funcret
 13257  0042BA                     __end_of_clust2sect:
 13258                           	callstack 0
 13259                           
 13260 ;; *************** function _remove_chain *****************
 13261 ;; Defined at:
 13262 ;;		line 250 in file "bibliotecas/tff.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;  clust           2   24[BANK0 ] unsigned short 
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 13267 ;;		 -> NULL(0), fs(544), 
 13268 ;;  nxt             2   28[BANK0 ] unsigned short 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      enum E105
 13271 ;; Registers used:
 13272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 3F/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13278 ;;      Params:         0       2       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        8 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    9
 13285 ;; This function calls:
 13286 ;;		_get_cluster
 13287 ;;		_put_cluster
 13288 ;; This function is called by:
 13289 ;;		_f_open
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text76
 13294  004562                     __ptext76:
 13295                           	callstack 0
 13296  004562                     _remove_chain:
 13297                           	callstack 16
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 13301                           
 13302                           ;incstack = 0
 13303  004562  C04D  F07E         	movff	_FatFs,remove_chain@fs
 13304  004566  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 13305                           
 13306                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 13307  00456A  D037               	goto	l11736
 13308  00456C                     l11716:
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;tff.c: 259: nxt = get_cluster(clust);
 13312  00456C  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 13313  004570  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 13314  004574  ECF4  F012         	call	_get_cluster	;wreg free
 13315  004578  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 13316  00457C  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 13317                           
 13318                           ;tff.c: 260: if (nxt == 1) return FALSE;
 13319  004580  0100               	movlb	0	; () banked
 13320  004582  057C               	decf	remove_chain@nxt& (0+255),w,b
 13321  004584  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 13322  004586  A4D8               	btfss	status,2,c
 13323  004588  D002               	goto	l11724
 13324  00458A                     u13440:
 13325  00458A  0E00               	movlw	0
 13326  00458C  0012               	return	
 13327  00458E                     l11724:
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13331  00458E  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13332  004592  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13333  004596  0E00               	movlw	0
 13334  004598  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13335  00459A  0E00               	movlw	0
 13336  00459C  6F62               	movwf	put_cluster@val& (0+255),b
 13337  00459E  ECBE  F011         	call	_put_cluster	;wreg free
 13338  0045A2  0900               	iorlw	0
 13339  0045A4  B4D8               	btfsc	status,2,c
 13340  0045A6  D7F1               	goto	u13440
 13341                           
 13342                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13343  0045A8  0100               	movlb	0	; () banked
 13344  0045AA  EE20 F01A          	lfsr	2,26
 13345  0045AE  517E               	movf	remove_chain@fs& (0+255),w,b
 13346  0045B0  26D9               	addwf	fsr2l,f,c
 13347  0045B2  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13348  0045B4  22DA               	addwfc	fsr2h,f,c
 13349  0045B6  28DE               	incf	postinc2,w,c
 13350  0045B8  E103               	bnz	u13460
 13351  0045BA  28DE               	incf	postinc2,w,c
 13352  0045BC  B4D8               	btfsc	status,2,c
 13353  0045BE  D009               	goto	l11734
 13354  0045C0                     u13460:
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;tff.c: 263: fs->free_clust++;
 13358  0045C0  EE20 F01A          	lfsr	2,26
 13359  0045C4  517E               	movf	remove_chain@fs& (0+255),w,b
 13360  0045C6  26D9               	addwf	fsr2l,f,c
 13361  0045C8  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13362  0045CA  22DA               	addwfc	fsr2h,f,c
 13363  0045CC  2ADE               	incf	postinc2,f,c
 13364  0045CE  0E00               	movlw	0
 13365  0045D0  22DD               	addwfc	postdec2,f,c
 13366  0045D2                     l11734:
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13370  0045D2  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13371  0045D6  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13372  0045DA                     l11736:
 13373                           
 13374                           ; BSR set to: 0
 13375  0045DA  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13376  0045DC  E104               	bnz	u13470
 13377  0045DE  0E02               	movlw	2
 13378  0045E0  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13379  0045E2  A0D8               	btfss	status,0,c
 13380  0045E4  D00C               	goto	u13480
 13381  0045E6                     u13470:
 13382                           
 13383                           ; BSR set to: 0
 13384  0045E6  EE20 F016          	lfsr	2,22
 13385  0045EA  517E               	movf	remove_chain@fs& (0+255),w,b
 13386  0045EC  26D9               	addwf	fsr2l,f,c
 13387  0045EE  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13388  0045F0  22DA               	addwfc	fsr2h,f,c
 13389  0045F2  50DE               	movf	postinc2,w,c
 13390  0045F4  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13391  0045F6  50DE               	movf	postinc2,w,c
 13392  0045F8  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13393  0045FA  A0D8               	btfss	status,0,c
 13394  0045FC  D7B7               	goto	l11716
 13395  0045FE                     u13480:
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13399  0045FE  0E01               	movlw	1
 13400  004600  0012               	return		;funcret
 13401  004602                     __end_of_remove_chain:
 13402                           	callstack 0
 13403                           
 13404 ;; *************** function _memcpy *****************
 13405 ;; Defined at:
 13406 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  d1              2    9[COMRAM] PTR void 
 13409 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13410 ;;  s1              2   11[COMRAM] PTR const void 
 13411 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13412 ;;		 -> fs(544), 
 13413 ;;  n               2   13[COMRAM] unsigned int 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13416 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13417 ;;		 -> fs(544), 
 13418 ;;  d               2   16[COMRAM] PTR unsigned char 
 13419 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13420 ;;  tmp             1   15[COMRAM] unsigned char 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  2    9[COMRAM] PTR void 
 13423 ;; Registers used:
 13424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13430 ;;      Params:         6       0       0       0       0       0       0       0       0
 13431 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13433 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13434 ;;Total ram usage:       11 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    2
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_f_open
 13441 ;;		_f_write
 13442 ;;		_f_read
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text77
 13447  00541A                     __ptext77:
 13448                           	callstack 0
 13449  00541A                     _memcpy:
 13450                           	callstack 20
 13451                           
 13452                           ;incstack = 0
 13453  00541A  C00C  F013         	movff	memcpy@s1,memcpy@s
 13454  00541E  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13455  005422  C00A  F011         	movff	memcpy@d1,memcpy@d
 13456  005426  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13457  00542A  D010               	goto	l10918
 13458  00542C                     l10910:
 13459  00542C  C013  FFD9         	movff	memcpy@s,fsr2l
 13460  005430  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13461  005434  50DF               	movf	indf2,w,c
 13462  005436  6E10               	movwf	memcpy@tmp^0,c
 13463  005438  4A13               	infsnz	memcpy@s^0,f,c
 13464  00543A  2A14               	incf	(memcpy@s+1)^0,f,c
 13465  00543C  C011  FFD9         	movff	memcpy@d,fsr2l
 13466  005440  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13467  005444  C010  FFDF         	movff	memcpy@tmp,indf2
 13468  005448  4A11               	infsnz	memcpy@d^0,f,c
 13469  00544A  2A12               	incf	(memcpy@d+1)^0,f,c
 13470  00544C                     l10918:
 13471  00544C  060E               	decf	memcpy@n^0,f,c
 13472  00544E  A0D8               	btfss	status,0,c
 13473  005450  060F               	decf	(memcpy@n+1)^0,f,c
 13474  005452  280E               	incf	memcpy@n^0,w,c
 13475  005454  E1EB               	bnz	l10910
 13476  005456  280F               	incf	(memcpy@n+1)^0,w,c
 13477  005458  B4D8               	btfsc	status,2,c
 13478  00545A  0012               	return	
 13479  00545C  D7E7               	goto	l10910
 13480  00545E                     __end_of_memcpy:
 13481                           	callstack 0
 13482                           
 13483 ;; *************** function _auto_mount *****************
 13484 ;; Defined at:
 13485 ;;		line 652 in file "bibliotecas/tff.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13488 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13489 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13492 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13493 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13494 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13495 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13496 ;;		 -> NULL(0), fs(544), 
 13497 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13498 ;;		 -> STR_16(13), filename(20), 
 13499 ;;  stat            1   37[BANK0 ] unsigned char 
 13500 ;;  fmt             1   36[BANK0 ] unsigned char 
 13501 ;; Return value:  Size  Location     Type
 13502 ;;                  1    wreg      enum E155
 13503 ;; Registers used:
 13504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13505 ;; Tracked objects:
 13506 ;;		On entry : 3F/0
 13507 ;;		On exit  : 3E/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13510 ;;      Params:         2       0       0       0       0       0       0       0       0
 13511 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13512 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13513 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13514 ;;Total ram usage:       46 bytes
 13515 ;; Hardware stack levels used:    1
 13516 ;; Hardware stack levels required when called:    8
 13517 ;; This function calls:
 13518 ;;		___lldiv
 13519 ;;		___lmul
 13520 ;;		_check_fs
 13521 ;;		_disk_initialize
 13522 ;;		_disk_status
 13523 ;;		_memset
 13524 ;; This function is called by:
 13525 ;;		_f_open
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text78
 13530  0005A8                     __ptext78:
 13531                           	callstack 0
 13532  0005A8                     _auto_mount:
 13533                           	callstack 17
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13537                           
 13538                           ;incstack = 0
 13539  0005A8  503D               	movf	auto_mount@path^0,w,c
 13540  0005AA  6ED9               	movwf	fsr2l,c
 13541  0005AC  6ADA               	clrf	fsr2h,c
 13542  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13543  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13544                           
 13545                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13546  0005B6  D003               	goto	l11906
 13547  0005B8                     l11904:
 13548  0005B8  0100               	movlb	0	; () banked
 13549  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13550  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13551  0005BE                     l11906:
 13552                           
 13553                           ; BSR set to: 0
 13554  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13555  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13556  0005C6  6AF8               	clrf	tblptru,c
 13557  0005C8  0E07               	movlw	(high __ramtop+-1)
 13558  0005CA  64F7               	cpfsgt	tblptrh,c
 13559  0005CC  D003               	bra	u13757
 13560  0005CE  0008               	tblrd		*
 13561  0005D0  50F5               	movf	tablat,w,c
 13562  0005D2  D005               	bra	u13750
 13563  0005D4                     u13757:
 13564  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13565  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13566  0005DC  50E7               	movf	indf1,w,c
 13567  0005DE                     u13750:
 13568  0005DE  0A20               	xorlw	32
 13569  0005E0  B4D8               	btfsc	status,2,c
 13570  0005E2  D7EA               	goto	l11904
 13571                           
 13572                           ;tff.c: 665: if (*p == '/') p++;
 13573  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13574  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13575  0005EC  6AF8               	clrf	tblptru,c
 13576  0005EE  0E07               	movlw	(high __ramtop+-1)
 13577  0005F0  64F7               	cpfsgt	tblptrh,c
 13578  0005F2  D003               	bra	u13777
 13579  0005F4  0008               	tblrd		*
 13580  0005F6  50F5               	movf	tablat,w,c
 13581  0005F8  D005               	bra	u13770
 13582  0005FA                     u13777:
 13583  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13584  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13585  000602  50E7               	movf	indf1,w,c
 13586  000604                     u13770:
 13587  000604  0A2F               	xorlw	47
 13588  000606  A4D8               	btfss	status,2,c
 13589  000608  D003               	goto	l11912
 13590  00060A  0100               	movlb	0	; () banked
 13591  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13592  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13593  000610                     l11912:
 13594                           
 13595                           ;tff.c: 666: *path = p;
 13596  000610  503D               	movf	auto_mount@path^0,w,c
 13597  000612  6ED9               	movwf	fsr2l,c
 13598  000614  6ADA               	clrf	fsr2h,c
 13599  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13600  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13601                           
 13602                           ;tff.c: 669: fs = FatFs;
 13603  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13604  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13605                           
 13606                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13607  000626  0100               	movlb	0	; () banked
 13608  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13609  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13610  00062C  A4D8               	btfss	status,2,c
 13611  00062E  D002               	goto	l11922
 13612                           
 13613                           ; BSR set to: 0
 13614  000630  0E0A               	movlw	10
 13615  000632  0012               	return	
 13616  000634                     l11922:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;tff.c: 672: if (fs->fs_type) {
 13620  000634  EE20 F01C          	lfsr	2,28
 13621  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13622  00063A  26D9               	addwf	fsr2l,f,c
 13623  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13624  00063E  22DA               	addwfc	fsr2h,f,c
 13625  000640  50DF               	movf	indf2,w,c
 13626  000642  B4D8               	btfsc	status,2,c
 13627  000644  D00F               	goto	l11940
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;tff.c: 673: stat = disk_status(0);
 13631  000646  0E00               	movlw	0
 13632  000648  ECA6  F02B         	call	_disk_status
 13633  00064C  0100               	movlb	0	; () banked
 13634  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;tff.c: 674: if (!(stat & 0x01)) {
 13638  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13639  000652  D008               	goto	l11940
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13643  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13644  000656  A4D8               	btfss	status,2,c
 13645                           
 13646                           ; BSR set to: 0
 13647  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13648  00065A  D002               	goto	l11936
 13649  00065C                     u13830:
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13653  00065C  0E09               	movlw	9
 13654  00065E  0012               	return	
 13655  000660                     l11936:
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;tff.c: 679: return FR_OK;
 13659  000660  0E00               	movlw	0
 13660  000662  0012               	return	
 13661  000664                     l11940:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13665  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13666  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13667  00066C  0E00               	movlw	0
 13668  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13669  000670  0E00               	movlw	0
 13670  000672  6E0C               	movwf	memset@c^0,c
 13671  000674  0E02               	movlw	2
 13672  000676  6E0F               	movwf	(memset@n+1)^0,c
 13673  000678  0E20               	movlw	32
 13674  00067A  6E0E               	movwf	memset@n^0,c
 13675  00067C  EC03  F02C         	call	_memset	;wreg free
 13676                           
 13677                           ;tff.c: 686: stat = disk_initialize(0);
 13678  000680  0E00               	movlw	0
 13679  000682  EC82  F02C         	call	_disk_initialize
 13680  000686  0100               	movlb	0	; () banked
 13681  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;tff.c: 687: if (stat & 0x01)
 13685  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13686  00068C  D002               	goto	l11950
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;tff.c: 688: return FR_NOT_READY;
 13690  00068E  0E01               	movlw	1
 13691  000690  0012               	return	
 13692  000692                     l11950:
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13696  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13697  000694  B4D8               	btfsc	status,2,c
 13698  000696  D002               	goto	l11958
 13699                           
 13700                           ; BSR set to: 0
 13701  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13702  00069A  D7E0               	goto	u13830
 13703  00069C                     l11958:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13707  00069C  0E00               	movlw	0
 13708  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13709  0006A0  0E00               	movlw	0
 13710  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13711  0006A4  0E00               	movlw	0
 13712  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13713  0006A8  0E00               	movlw	0
 13714  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13715  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13716  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13717  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13718  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13719  0006BC  ECB3  F024         	call	_check_fs	;wreg free
 13720  0006C0  0100               	movlb	0	; () banked
 13721  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;tff.c: 697: if (fmt == 1) {
 13725  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13726  0006C6  A4D8               	btfss	status,2,c
 13727  0006C8  D023               	goto	l11968
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;tff.c: 699: if (fs->win[446+4]) {
 13731  0006CA  EE21 F0E2          	lfsr	2,482
 13732  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13733  0006D0  26D9               	addwf	fsr2l,f,c
 13734  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13735  0006D4  22DA               	addwfc	fsr2h,f,c
 13736  0006D6  50DF               	movf	indf2,w,c
 13737  0006D8  B4D8               	btfsc	status,2,c
 13738  0006DA  D01A               	goto	l11968
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13742  0006DC  EE21 F0E6          	lfsr	2,486
 13743  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13744  0006E2  26D9               	addwf	fsr2l,f,c
 13745  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13746  0006E6  22DA               	addwfc	fsr2h,f,c
 13747  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13748  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13749  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13750  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;tff.c: 701: fmt = check_fs(bootsect);
 13754  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13755  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13756  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13757  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13758  000708  ECB3  F024         	call	_check_fs	;wreg free
 13759  00070C  0100               	movlb	0	; () banked
 13760  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13761  000710                     l11968:
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13765  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13766  000712  A4D8               	btfss	status,2,c
 13767  000714  D00C               	goto	u13900
 13768                           
 13769                           ; BSR set to: 0
 13770  000716  EE20 F02B          	lfsr	2,43
 13771  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13772  00071C  26D9               	addwf	fsr2l,f,c
 13773  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13774  000720  22DA               	addwfc	fsr2h,f,c
 13775  000722  50DE               	movf	postinc2,w,c
 13776  000724  E104               	bnz	u13900
 13777  000726  0E02               	movlw	2
 13778  000728  18DE               	xorwf	postinc2,w,c
 13779  00072A  B4D8               	btfsc	status,2,c
 13780  00072C  D002               	goto	l11976
 13781  00072E                     u13900:
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13785  00072E  0E0B               	movlw	11
 13786  000730  0012               	return	
 13787  000732                     l11976:
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13791  000732  EE20 F036          	lfsr	2,54
 13792  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13793  000738  26D9               	addwf	fsr2l,f,c
 13794  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13795  00073C  22DA               	addwfc	fsr2h,f,c
 13796  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13797  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13798  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13799  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13800  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13801  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13805  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13806  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13807  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13808  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13809  00075A  A4D8               	btfss	status,2,c
 13810  00075C  D00E               	goto	l1074
 13811                           
 13812                           ; BSR set to: 0
 13813  00075E  EE20 F044          	lfsr	2,68
 13814  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13815  000764  26D9               	addwf	fsr2l,f,c
 13816  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13817  000768  22DA               	addwfc	fsr2h,f,c
 13818  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13819  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13820  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13821  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13822  00077A                     l1074:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13826  00077A  EE20 F014          	lfsr	2,20
 13827  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13828  000780  26D9               	addwf	fsr2l,f,c
 13829  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13830  000784  22DA               	addwfc	fsr2h,f,c
 13831  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13832  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13836  00078E  EE20 F030          	lfsr	2,48
 13837  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13838  000794  26D9               	addwf	fsr2l,f,c
 13839  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13840  000798  22DA               	addwfc	fsr2h,f,c
 13841  00079A  EE10 F01E          	lfsr	1,30
 13842  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13843  0007A0  26E1               	addwf	fsr1l,f,c
 13844  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13845  0007A4  22E2               	addwfc	fsr1h,f,c
 13846  0007A6  CFDF FFE7          	movff	indf2,indf1
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;tff.c: 712: fatsize *= fs->n_fats;
 13850  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13851  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13852  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13853  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13854  0007BA  EE20 F01E          	lfsr	2,30
 13855  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13856  0007C0  26D9               	addwf	fsr2l,f,c
 13857  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13858  0007C4  22DA               	addwfc	fsr2h,f,c
 13859  0007C6  50DF               	movf	indf2,w,c
 13860  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13861  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13862  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13863  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13864  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13865  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13866  0007D4  EC66  F028         	call	___lmul	;wreg free
 13867  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13868  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13869  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13870  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13871                           
 13872                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13873  0007E8  0100               	movlb	0	; () banked
 13874  0007EA  EE20 F02E          	lfsr	2,46
 13875  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13876  0007F0  26D9               	addwf	fsr2l,f,c
 13877  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13878  0007F4  22DA               	addwfc	fsr2h,f,c
 13879  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13880  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13881  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13882  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13883  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13884  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13885  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13886  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13887  00080A  0E00               	movlw	0
 13888  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13889  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13890  000810  0E00               	movlw	0
 13891  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13892  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13893  000816  EE20 F008          	lfsr	2,8
 13894  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13895  00081C  26D9               	addwf	fsr2l,f,c
 13896  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13897  000820  22DA               	addwfc	fsr2h,f,c
 13898  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13899  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13900  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13901  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;tff.c: 714: fs->csize = fs->win[13];
 13905  000832  EE20 F02D          	lfsr	2,45
 13906  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13907  000838  26D9               	addwf	fsr2l,f,c
 13908  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13909  00083C  22DA               	addwfc	fsr2h,f,c
 13910  00083E  EE10 F01D          	lfsr	1,29
 13911  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13912  000844  26E1               	addwf	fsr1l,f,c
 13913  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13914  000848  22E2               	addwfc	fsr1h,f,c
 13915  00084A  CFDF FFE7          	movff	indf2,indf1
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13919  00084E  EE20 F031          	lfsr	2,49
 13920  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13921  000854  26D9               	addwf	fsr2l,f,c
 13922  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13923  000858  22DA               	addwfc	fsr2h,f,c
 13924  00085A  EE10 F002          	lfsr	1,2
 13925  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13926  000860  26E1               	addwf	fsr1l,f,c
 13927  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13928  000864  22E2               	addwfc	fsr1h,f,c
 13929  000866  CFDE FFE6          	movff	postinc2,postinc1
 13930  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13934  00086E  EE20 F033          	lfsr	2,51
 13935  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13936  000874  26D9               	addwf	fsr2l,f,c
 13937  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13938  000878  22DA               	addwfc	fsr2h,f,c
 13939  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13940  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13941  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13942  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13943  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13944  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13948  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13949  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13950  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13951  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13952  000896  A4D8               	btfss	status,2,c
 13953  000898  D00E               	goto	l11998
 13954                           
 13955                           ; BSR set to: 0
 13956  00089A  EE20 F040          	lfsr	2,64
 13957  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13958  0008A0  26D9               	addwf	fsr2l,f,c
 13959  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13960  0008A4  22DA               	addwfc	fsr2h,f,c
 13961  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13962  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13963  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13964  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13965  0008B6                     l11998:
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13969  0008B6  EE20 F002          	lfsr	2,2
 13970  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13971  0008BC  26D9               	addwf	fsr2l,f,c
 13972  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13973  0008C0  22DA               	addwfc	fsr2h,f,c
 13974  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13975  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13976  0008CA  0E04               	movlw	4
 13977  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13978  0008CE                     u13935:
 13979  0008CE  90D8               	bcf	status,0,c
 13980  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13981  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13982  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13983  0008D6  D7FB               	goto	u13935
 13984  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13985  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13986  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13987  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13988  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13989  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13990  0008E4  EE20 F02E          	lfsr	2,46
 13991  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 13992  0008EA  26D9               	addwf	fsr2l,f,c
 13993  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13994  0008EE  22DA               	addwfc	fsr2h,f,c
 13995  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 13996  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 13997  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 13998  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 13999  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 14000  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14001  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 14002  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 14003  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 14004  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 14005  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 14006  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 14007  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 14008  00090E  0E00               	movlw	0
 14009  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 14010  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 14011  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 14012  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14013  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 14014  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14015  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14016  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 14017  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14018  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14019  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 14020  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 14021  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14022  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 14023  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 14024  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 14025  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 14026  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 14027  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14028  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 14029  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 14030  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14031  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 14032  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 14033  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 14034  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 14035  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 14036  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 14037  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 14038  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 14039  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 14040  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 14041  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 14042  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 14043  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 14044  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 14045  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 14046  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 14047  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 14048  00095E  EE20 F01D          	lfsr	2,29
 14049  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 14050  000964  26D9               	addwf	fsr2l,f,c
 14051  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14052  000968  22DA               	addwfc	fsr2h,f,c
 14053  00096A  50DF               	movf	indf2,w,c
 14054  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 14055  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 14056  000970  6E0E               	movwf	___lldiv@divisor^0,c
 14057  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 14058  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 14059  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 14060  000978  ECF4  F024         	call	___lldiv	;wreg free
 14061  00097C  0E02               	movlw	2
 14062  00097E  240A               	addwf	?___lldiv^0,w,c
 14063  000980  0100               	movlb	0	; () banked
 14064  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 14065  000984  0E00               	movlw	0
 14066  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 14067  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 14068  00098A  0E00               	movlw	0
 14069  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 14070  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 14071  000990  0E00               	movlw	0
 14072  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 14073  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 14074  000996  EE20 F016          	lfsr	2,22
 14075  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 14076  00099C  26D9               	addwf	fsr2l,f,c
 14077  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14078  0009A0  22DA               	addwfc	fsr2h,f,c
 14079  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 14080  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;tff.c: 722: fmt = 1;
 14084  0009AA  0E01               	movlw	1
 14085  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 14089  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14090  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14091  0009B2  E106               	bnz	u13940
 14092  0009B4  0EF7               	movlw	247
 14093  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14094  0009B8  0E0F               	movlw	15
 14095  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14096  0009BC  A0D8               	btfss	status,0,c
 14097  0009BE  D002               	goto	l12006
 14098  0009C0                     u13940:
 14099                           
 14100                           ; BSR set to: 0
 14101  0009C0  0E02               	movlw	2
 14102  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 14103  0009C4                     l12006:
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 14107  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14108  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14109  0009C8  E107               	bnz	u13950
 14110  0009CA  0EF7               	movlw	247
 14111  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14112  0009CE  0EFF               	movlw	255
 14113  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14114  0009D2  B0D8               	btfsc	status,0,c
 14115  0009D4  D6AC               	goto	u13900
 14116  0009D6  D001               	goto	l12012
 14117  0009D8                     u13950:
 14118  0009D8  D6AA               	goto	u13900
 14119  0009DA                     l12012:
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 14123  0009DA  EE20 F008          	lfsr	2,8
 14124  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 14125  0009E0  26D9               	addwf	fsr2l,f,c
 14126  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14127  0009E4  22DA               	addwfc	fsr2h,f,c
 14128  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 14129  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 14130  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 14131  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 14132  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14133  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 14134  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 14135  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14136  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14137  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 14138  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14139  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14140  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14141  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14142  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14143  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14144  000A0E  EE20 F00C          	lfsr	2,12
 14145  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 14146  000A14  26D9               	addwf	fsr2l,f,c
 14147  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14148  000A18  22DA               	addwfc	fsr2h,f,c
 14149  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 14150  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 14151  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 14152  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 14153                           
 14154                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 14155  000A2A  EE20 F008          	lfsr	2,8
 14156  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 14157  000A30  26D9               	addwf	fsr2l,f,c
 14158  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14159  000A34  22DA               	addwfc	fsr2h,f,c
 14160  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 14161  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 14162  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 14163  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 14164  000A46  EE20 F002          	lfsr	2,2
 14165  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 14166  000A4C  26D9               	addwf	fsr2l,f,c
 14167  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14168  000A50  22DA               	addwfc	fsr2h,f,c
 14169  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 14170  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 14171  000A5A  0E04               	movlw	4
 14172  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14173  000A5E                     u13965:
 14174  000A5E  90D8               	bcf	status,0,c
 14175  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 14176  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 14177  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 14178  000A66  D7FB               	goto	u13965
 14179  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14180  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 14181  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14182  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14183  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14184  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 14185  000A74  0E00               	movlw	0
 14186  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14187  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14188  000A7A  0E00               	movlw	0
 14189  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14190  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14191  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14192  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 14193  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 14194  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14195  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 14196  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 14197  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14198  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 14199  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14200  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14201  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 14202  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14203  000A98  EE20 F010          	lfsr	2,16
 14204  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 14205  000A9E  26D9               	addwf	fsr2l,f,c
 14206  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14207  000AA2  22DA               	addwfc	fsr2h,f,c
 14208  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 14209  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 14210  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 14211  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 14212                           
 14213                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 14214  000AB4  EE20 F01A          	lfsr	2,26
 14215  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 14216  000ABA  26D9               	addwf	fsr2l,f,c
 14217  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14218  000ABE  22DA               	addwfc	fsr2h,f,c
 14219  000AC0  0EFF               	movlw	255
 14220  000AC2  6EDE               	movwf	postinc2,c
 14221  000AC4  0EFF               	movlw	255
 14222  000AC6  6EDD               	movwf	postdec2,c
 14223                           
 14224                           ;tff.c: 754: fs->fs_type = fmt;
 14225  000AC8  EE20 F01C          	lfsr	2,28
 14226  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 14227  000ACE  26D9               	addwf	fsr2l,f,c
 14228  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14229  000AD2  22DA               	addwfc	fsr2h,f,c
 14230  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;tff.c: 755: fs->id = ++fsid;
 14234  000AD8  0101               	movlb	1	; () banked
 14235  000ADA  4B72               	infsnz	_fsid& (0+255),f,b
 14236  000ADC  2B73               	incf	(_fsid+1)& (0+255),f,b
 14237  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 14238  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 14239  000AE6  C172  FFDE         	movff	_fsid,postinc2
 14240  000AEA  C173  FFDD         	movff	_fsid+1,postdec2
 14241                           
 14242                           ;tff.c: 756: return FR_OK;
 14243  000AEE  0E00               	movlw	0
 14244  000AF0  0012               	return		;funcret
 14245  000AF2                     __end_of_auto_mount:
 14246                           	callstack 0
 14247                           
 14248 ;; *************** function _memset *****************
 14249 ;; Defined at:
 14250 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  p1              2    9[COMRAM] PTR void 
 14253 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14254 ;;  c               2   11[COMRAM] int 
 14255 ;;  n               2   13[COMRAM] unsigned int 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;  p               2   15[COMRAM] PTR unsigned char 
 14258 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  2    9[COMRAM] PTR void 
 14261 ;; Registers used:
 14262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/0
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14268 ;;      Params:         6       0       0       0       0       0       0       0       0
 14269 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14271 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14272 ;;Total ram usage:        8 bytes
 14273 ;; Hardware stack levels used:    1
 14274 ;; Hardware stack levels required when called:    2
 14275 ;; This function calls:
 14276 ;;		Nothing
 14277 ;; This function is called by:
 14278 ;;		_make_dirfile
 14279 ;;		_reserve_direntry
 14280 ;;		_auto_mount
 14281 ;;		_f_open
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text79
 14286  005806                     __ptext79:
 14287                           	callstack 0
 14288  005806                     _memset:
 14289                           	callstack 21
 14290                           
 14291                           ;incstack = 0
 14292  005806  C00A  F010         	movff	memset@p1,memset@p
 14293  00580A  C00B  F011         	movff	memset@p1+1,memset@p+1
 14294  00580E  D008               	goto	l11136
 14295  005810                     l11132:
 14296  005810  C010  FFD9         	movff	memset@p,fsr2l
 14297  005814  C011  FFDA         	movff	memset@p+1,fsr2h
 14298  005818  C00C  FFDF         	movff	memset@c,indf2
 14299  00581C  4A10               	infsnz	memset@p^0,f,c
 14300  00581E  2A11               	incf	(memset@p+1)^0,f,c
 14301  005820                     l11136:
 14302  005820  060E               	decf	memset@n^0,f,c
 14303  005822  A0D8               	btfss	status,0,c
 14304  005824  060F               	decf	(memset@n+1)^0,f,c
 14305  005826  280E               	incf	memset@n^0,w,c
 14306  005828  E1F3               	bnz	l11132
 14307  00582A  280F               	incf	(memset@n+1)^0,w,c
 14308  00582C  B4D8               	btfsc	status,2,c
 14309  00582E  0012               	return	
 14310  005830  D7EF               	goto	l11132
 14311  005832                     __end_of_memset:
 14312                           	callstack 0
 14313                           
 14314 ;; *************** function _disk_initialize *****************
 14315 ;; Defined at:
 14316 ;;		line 59 in file "bibliotecas/diskio.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;  pdrv            1    wreg     unsigned char 
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;  pdrv            1   41[COMRAM] unsigned char 
 14321 ;;  result          2    0        int 
 14322 ;;  stat            1   42[COMRAM] unsigned char 
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1    wreg      unsigned char 
 14325 ;; Registers used:
 14326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 0/0
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14332 ;;      Params:         0       0       0       0       0       0       0       0       0
 14333 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14334 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14335 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14336 ;;Total ram usage:        2 bytes
 14337 ;; Hardware stack levels used:    1
 14338 ;; Hardware stack levels required when called:    7
 14339 ;; This function calls:
 14340 ;;		_sdc_disk_initialize
 14341 ;; This function is called by:
 14342 ;;		_auto_mount
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text80
 14347  005904                     __ptext80:
 14348                           	callstack 0
 14349  005904                     _disk_initialize:
 14350                           	callstack 17
 14351                           
 14352                           ;incstack = 0
 14353                           ;disk_initialize@pdrv stored from wreg
 14354  005904  6E2A               	movwf	disk_initialize@pdrv^0,c
 14355                           
 14356                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14357  005906  D005               	goto	l11324
 14358  005908                     l11306:
 14359                           
 14360                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14361  005908  EC8A  F00C         	call	_sdc_disk_initialize	;wreg free
 14362  00590C  6E2B               	movwf	disk_initialize@stat^0,c
 14363  00590E                     l11308:
 14364                           
 14365                           ;diskio.c: 72: return stat;
 14366  00590E  502B               	movf	disk_initialize@stat^0,w,c
 14367  005910  0012               	return	
 14368  005912                     l11324:
 14369  005912  502A               	movf	disk_initialize@pdrv^0,w,c
 14370                           
 14371                           ; Switch size 1, requested type "simple"
 14372                           ; Number of cases is 3, Range of values is 0 to 2
 14373                           ; switch strategies available:
 14374                           ; Name         Instructions Cycles
 14375                           ; simple_byte           10     6 (average)
 14376                           ;	Chosen strategy is simple_byte
 14377  005914  0A00               	xorlw	0	; case 0
 14378  005916  B4D8               	btfsc	status,2,c
 14379  005918  D7F7               	goto	l11306
 14380  00591A  0A01               	xorlw	1	; case 1
 14381  00591C  B4D8               	btfsc	status,2,c
 14382  00591E  D7F4               	goto	l11306
 14383  005920  0A03               	xorlw	3	; case 2
 14384  005922  B4D8               	btfsc	status,2,c
 14385  005924  D7F4               	goto	l11308
 14386                           
 14387                           ;diskio.c: 88: return 0x01;
 14388  005926  0E01               	movlw	1
 14389  005928  0012               	return		;funcret
 14390  00592A                     __end_of_disk_initialize:
 14391                           	callstack 0
 14392                           
 14393 ;; *************** function _sdc_disk_initialize *****************
 14394 ;; Defined at:
 14395 ;;		line 275 in file "bibliotecas/diskio.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;		None
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;  count2          2   38[COMRAM] int 
 14400 ;;  crc_number      2   34[COMRAM] int 
 14401 ;;  count1          2   32[COMRAM] int 
 14402 ;;  i               2    0        int 
 14403 ;;  buff            1   40[COMRAM] unsigned char 
 14404 ;;  ocr             1   37[COMRAM] unsigned char 
 14405 ;;  buff_i          1   36[COMRAM] unsigned char 
 14406 ;;  stat            1   31[COMRAM] unsigned char 
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1    wreg      unsigned char 
 14409 ;; Registers used:
 14410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14416 ;;      Params:         0       0       0       0       0       0       0       0       0
 14417 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14418 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14419 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14420 ;;Total ram usage:       13 bytes
 14421 ;; Hardware stack levels used:    1
 14422 ;; Hardware stack levels required when called:    6
 14423 ;; This function calls:
 14424 ;;		_command
 14425 ;;		_dummy_clocks
 14426 ;;		_escreve_frase_ram_lcd
 14427 ;;		_posicao_cursor_lcd
 14428 ;;		_proceed
 14429 ;;		_response
 14430 ;;		_sdc_reset
 14431 ;; This function is called by:
 14432 ;;		_disk_initialize
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text81
 14437  001914                     __ptext81:
 14438                           	callstack 0
 14439  001914                     _sdc_disk_initialize:
 14440                           	callstack 17
 14441                           
 14442                           ;incstack = 0
 14443  001914  0E00               	movlw	0
 14444  001916  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14445  001918  0E00               	movlw	0
 14446  00191A  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14447  00191C  0E00               	movlw	0
 14448  00191E  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14449  001920  0E00               	movlw	0
 14450  001922  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14451                           
 14452                           ;diskio.c: 280: BYTE buff = 0;
 14453  001924  0E00               	movlw	0
 14454  001926  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14455                           
 14456                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14457  001928  0E10               	movlw	16
 14458  00192A  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14459  00192C  0E94               	movlw	148
 14460  00192E                     u16717:
 14461  00192E  2EE8               	decfsz	wreg,f,c
 14462  001930  D7FE               	bra	u16717
 14463  001932  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14464  001934  D7FC               	bra	u16717
 14465  001936  D000               	nop2	
 14466                           
 14467                           ;diskio.c: 284: dummy_clocks(100);
 14468  001938  0E64               	movlw	100
 14469  00193A  ECD1  F02A         	call	_dummy_clocks
 14470                           
 14471                           ;diskio.c: 287: sdc_reset();
 14472  00193E  ECE3  F023         	call	_sdc_reset	;wreg free
 14473                           
 14474                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14475  001942  0EAA               	movlw	170
 14476  001944  6E0F               	movwf	command@arg^0,c
 14477  001946  0E01               	movlw	1
 14478  001948  6E10               	movwf	(command@arg+1)^0,c
 14479  00194A  0E00               	movlw	0
 14480  00194C  6E11               	movwf	(command@arg+2)^0,c
 14481  00194E  0E00               	movlw	0
 14482  001950  6E12               	movwf	(command@arg+3)^0,c
 14483  001952  0E87               	movlw	135
 14484  001954  6E13               	movwf	command@CRC^0,c
 14485  001956  0E48               	movlw	72
 14486  001958  ECB5  F027         	call	_command
 14487                           
 14488                           ;diskio.c: 289: proceed();
 14489  00195C  ECF9  F02D         	call	_proceed	;wreg free
 14490  001960                     l10944:
 14491                           
 14492                           ;diskio.c: 291: buff_i = response();
 14493  001960  ECF3  F02D         	call	_response	;wreg free
 14494  001964  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14495                           
 14496                           ;diskio.c: 292: if(buff_i == 1)
 14497  001966  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14498  001968  A4D8               	btfss	status,2,c
 14499  00196A  D004               	goto	l10950
 14500                           
 14501                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14502  00196C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14503  00196E  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14504  001970  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14505                           
 14506                           ;diskio.c: 295: }
 14507  001972  D006               	goto	l10954
 14508  001974                     l10950:
 14509                           
 14510                           ;diskio.c: 296: else if(buff_i==0xAA)
 14511  001974  0EAA               	movlw	170
 14512  001976  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14513  001978  A4D8               	btfss	status,2,c
 14514  00197A  D002               	goto	l10954
 14515                           
 14516                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14517  00197C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14518  00197E  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14519  001980                     l10954:
 14520                           
 14521                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14522  001980  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14523  001982  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14524                           
 14525                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14526  001984  0EAA               	movlw	170
 14527  001986  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14528  001988  E103               	bnz	u12290
 14529  00198A  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14530  00198C  B4D8               	btfsc	status,2,c
 14531  00198E  D008               	goto	u12300
 14532  001990                     u12290:
 14533  001990  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14534  001992  D7E6               	goto	l10944
 14535  001994  0EE8               	movlw	232
 14536  001996  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14537  001998  0E03               	movlw	3
 14538  00199A  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14539  00199C  A0D8               	btfss	status,0,c
 14540  00199E  D7E0               	goto	l10944
 14541  0019A0                     u12300:
 14542                           
 14543                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14544  0019A0  0EAA               	movlw	170
 14545  0019A2  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14546  0019A4  E102               	bnz	u12311
 14547  0019A6  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14548  0019A8  A4D8               	btfss	status,2,c
 14549  0019AA                     u12311:
 14550  0019AA  D099               	goto	l11032
 14551  0019AC                     u12310:
 14552                           
 14553                           ;diskio.c: 310: count2 = 0;
 14554                           
 14555                           ;diskio.c: 309: do{
 14556  0019AC  0E00               	movlw	0
 14557  0019AE  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14558  0019B0  0E00               	movlw	0
 14559  0019B2  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14560  0019B4                     
 14561                           ;diskio.c: 319: dummy_clocks(10);
 14562  0019B4  0E0A               	movlw	10
 14563  0019B6  ECD1  F02A         	call	_dummy_clocks
 14564                           
 14565                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14566  0019BA  0E00               	movlw	0
 14567  0019BC  6E0F               	movwf	command@arg^0,c
 14568  0019BE  0E00               	movlw	0
 14569  0019C0  6E10               	movwf	(command@arg+1)^0,c
 14570  0019C2  0E00               	movlw	0
 14571  0019C4  6E11               	movwf	(command@arg+2)^0,c
 14572  0019C6  0E00               	movlw	0
 14573  0019C8  6E12               	movwf	(command@arg+3)^0,c
 14574  0019CA  0E00               	movlw	0
 14575  0019CC  6E13               	movwf	command@CRC^0,c
 14576  0019CE  0E77               	movlw	119
 14577  0019D0  ECB5  F027         	call	_command
 14578                           
 14579                           ;diskio.c: 323: proceed();
 14580  0019D4  ECF9  F02D         	call	_proceed	;wreg free
 14581  0019D8                     l10974:
 14582                           
 14583                           ;diskio.c: 325: buff = response();
 14584  0019D8  ECF3  F02D         	call	_response	;wreg free
 14585  0019DC  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14586                           
 14587                           ;diskio.c: 326: count2++;
 14588  0019DE  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14589  0019E0  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14590                           
 14591                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14592  0019E2  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14593  0019E4  B4D8               	btfsc	status,2,c
 14594  0019E6  D008               	goto	u12330
 14595  0019E8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14596  0019EA  D7F6               	goto	l10974
 14597  0019EC  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14598  0019EE  E104               	bnz	u12330
 14599  0019F0  0E0A               	movlw	10
 14600  0019F2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14601  0019F4  A0D8               	btfss	status,0,c
 14602  0019F6  D7F0               	goto	l10974
 14603  0019F8                     u12330:
 14604                           
 14605                           ;diskio.c: 328: count2 = 0;
 14606  0019F8  0E00               	movlw	0
 14607  0019FA  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14608  0019FC  0E00               	movlw	0
 14609  0019FE  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14610                           
 14611                           ;diskio.c: 332: dummy_clocks(10);
 14612  001A00  0E0A               	movlw	10
 14613  001A02  ECD1  F02A         	call	_dummy_clocks
 14614                           
 14615                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14616  001A06  0E00               	movlw	0
 14617  001A08  6E0F               	movwf	command@arg^0,c
 14618  001A0A  0E00               	movlw	0
 14619  001A0C  6E10               	movwf	(command@arg+1)^0,c
 14620  001A0E  0E00               	movlw	0
 14621  001A10  6E11               	movwf	(command@arg+2)^0,c
 14622  001A12  0E40               	movlw	64
 14623  001A14  6E12               	movwf	(command@arg+3)^0,c
 14624  001A16  0E00               	movlw	0
 14625  001A18  6E13               	movwf	command@CRC^0,c
 14626  001A1A  0E69               	movlw	105
 14627  001A1C  ECB5  F027         	call	_command
 14628                           
 14629                           ;diskio.c: 334: proceed();
 14630  001A20  ECF9  F02D         	call	_proceed	;wreg free
 14631                           
 14632                           ;diskio.c: 335: buff = response();
 14633  001A24  ECF3  F02D         	call	_response	;wreg free
 14634  001A28  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14635                           
 14636                           ;diskio.c: 336: count2++;
 14637  001A2A  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14638  001A2C  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14639                           
 14640                           ;diskio.c: 337: }while(buff!=0X00);
 14641  001A2E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14642  001A30  A4D8               	btfss	status,2,c
 14643  001A32  D7C0               	goto	l10964
 14644                           
 14645                           ;diskio.c: 342: dummy_clocks(10);
 14646  001A34  0E0A               	movlw	10
 14647  001A36  ECD1  F02A         	call	_dummy_clocks
 14648                           
 14649                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14650  001A3A  0E00               	movlw	0
 14651  001A3C  6E0F               	movwf	command@arg^0,c
 14652  001A3E  0E00               	movlw	0
 14653  001A40  6E10               	movwf	(command@arg+1)^0,c
 14654  001A42  0E00               	movlw	0
 14655  001A44  6E11               	movwf	(command@arg+2)^0,c
 14656  001A46  0E00               	movlw	0
 14657  001A48  6E12               	movwf	(command@arg+3)^0,c
 14658  001A4A  0EFF               	movlw	255
 14659  001A4C  6E13               	movwf	command@CRC^0,c
 14660  001A4E  0E7A               	movlw	122
 14661  001A50  ECB5  F027         	call	_command
 14662                           
 14663                           ;diskio.c: 344: proceed();
 14664  001A54  ECF9  F02D         	call	_proceed	;wreg free
 14665  001A58                     l10998:
 14666                           
 14667                           ;diskio.c: 346: buff = response();
 14668  001A58  ECF3  F02D         	call	_response	;wreg free
 14669  001A5C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14670                           
 14671                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14672  001A5E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14673  001A60  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14674  001A62  0B80               	andlw	128
 14675  001A64  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14676                           
 14677                           ;diskio.c: 348: count2++;
 14678  001A66  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14679  001A68  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14680                           
 14681                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14682  001A6A  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14683  001A6C  B4D8               	btfsc	status,2,c
 14684  001A6E  D00B               	goto	u12370
 14685  001A70  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14686  001A72  B4D8               	btfsc	status,2,c
 14687  001A74  D008               	goto	u12370
 14688  001A76  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14689  001A78  D7EF               	goto	l10998
 14690  001A7A  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14691  001A7C  E104               	bnz	u12370
 14692  001A7E  0E0A               	movlw	10
 14693  001A80  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14694  001A82  A0D8               	btfss	status,0,c
 14695  001A84  D7E9               	goto	l10998
 14696  001A86                     u12370:
 14697                           
 14698                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14699  001A86  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14700  001A88  B4D8               	btfsc	status,2,c
 14701  001A8A  D003               	goto	u12390
 14702  001A8C  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14703  001A8E  A4D8               	btfss	status,2,c
 14704  001A90  D78D               	goto	u12310
 14705  001A92                     u12390:
 14706                           
 14707                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14708  001A92  0E10               	movlw	16
 14709  001A94  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14710  001A96  0E94               	movlw	148
 14711  001A98                     u16727:
 14712  001A98  2EE8               	decfsz	wreg,f,c
 14713  001A9A  D7FE               	bra	u16727
 14714  001A9C  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14715  001A9E  D7FC               	bra	u16727
 14716  001AA0  D000               	nop2	
 14717                           
 14718                           ;diskio.c: 356: stat = 0X00;
 14719  001AA2  0E00               	movlw	0
 14720  001AA4  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14721                           
 14722                           ;diskio.c: 358: if(!ocr)
 14723  001AA6  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14724  001AA8  A4D8               	btfss	status,2,c
 14725  001AAA  D0A6               	goto	u12490
 14726                           
 14727                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14728  001AAC  0E0A               	movlw	10
 14729  001AAE  ECD1  F02A         	call	_dummy_clocks
 14730                           
 14731                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14732  001AB2  0E00               	movlw	0
 14733  001AB4  6E0F               	movwf	command@arg^0,c
 14734  001AB6  0E02               	movlw	2
 14735  001AB8  6E10               	movwf	(command@arg+1)^0,c
 14736  001ABA  0E00               	movlw	0
 14737  001ABC  6E11               	movwf	(command@arg+2)^0,c
 14738  001ABE  0E00               	movlw	0
 14739  001AC0  6E12               	movwf	(command@arg+3)^0,c
 14740  001AC2  0EFF               	movlw	255
 14741  001AC4  6E13               	movwf	command@CRC^0,c
 14742  001AC6  0E50               	movlw	80
 14743  001AC8  ECB5  F027         	call	_command
 14744                           
 14745                           ;diskio.c: 363: proceed();
 14746  001ACC  ECF9  F02D         	call	_proceed	;wreg free
 14747  001AD0                     
 14748                           ;diskio.c: 367: buff = response();
 14749  001AD0  ECF3  F02D         	call	_response	;wreg free
 14750  001AD4  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14751                           
 14752                           ;diskio.c: 368: }while(buff!=0X00);
 14753  001AD6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14754  001AD8  B4D8               	btfsc	status,2,c
 14755  001ADA  D08E               	goto	u12490
 14756  001ADC  D7F9               	goto	l11026
 14757  001ADE                     l11032:
 14758                           
 14759                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14760  001ADE  0E00               	movlw	0
 14761  001AE0  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14762  001AE2  0E00               	movlw	0
 14763  001AE4  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14764                           
 14765                           ;diskio.c: 378: dummy_clocks(1);
 14766  001AE6  0E01               	movlw	1
 14767  001AE8  ECD1  F02A         	call	_dummy_clocks
 14768                           
 14769                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14770  001AEC  0E00               	movlw	0
 14771  001AEE  6E0F               	movwf	command@arg^0,c
 14772  001AF0  0E00               	movlw	0
 14773  001AF2  6E10               	movwf	(command@arg+1)^0,c
 14774  001AF4  0E00               	movlw	0
 14775  001AF6  6E11               	movwf	(command@arg+2)^0,c
 14776  001AF8  0E00               	movlw	0
 14777  001AFA  6E12               	movwf	(command@arg+3)^0,c
 14778  001AFC  0EFF               	movlw	255
 14779  001AFE  6E13               	movwf	command@CRC^0,c
 14780  001B00  0E69               	movlw	105
 14781  001B02  ECB5  F027         	call	_command
 14782                           
 14783                           ;diskio.c: 380: proceed();
 14784  001B06  ECF9  F02D         	call	_proceed	;wreg free
 14785  001B0A                     l11042:
 14786                           
 14787                           ;diskio.c: 382: buff = response();
 14788  001B0A  ECF3  F02D         	call	_response	;wreg free
 14789  001B0E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14790                           
 14791                           ;diskio.c: 383: count2++;
 14792  001B10  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14793  001B12  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14794                           
 14795                           ;diskio.c: 384: if(buff==0x00)
 14796  001B14  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14797  001B16  A4D8               	btfss	status,2,c
 14798  001B18  D00B               	goto	l11052
 14799                           
 14800                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14801  001B1A  0E00               	movlw	0
 14802  001B1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14803  001B1E  0E01               	movlw	1
 14804  001B20  EC58  F027         	call	_posicao_cursor_lcd
 14805                           
 14806                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14807  001B24  0E24               	movlw	low STR_3
 14808  001B26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14809  001B28  0E62               	movlw	high STR_3
 14810  001B2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14811  001B2C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14812  001B30                     l11052:
 14813                           
 14814                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14815  001B30  0E10               	movlw	16
 14816  001B32  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14817  001B34  0E94               	movlw	148
 14818  001B36                     u16737:
 14819  001B36  2EE8               	decfsz	wreg,f,c
 14820  001B38  D7FE               	bra	u16737
 14821  001B3A  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14822  001B3C  D7FC               	bra	u16737
 14823  001B3E  D000               	nop2	
 14824                           
 14825                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14826  001B40  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14827  001B42  B4D8               	btfsc	status,2,c
 14828  001B44  D008               	goto	u12440
 14829  001B46  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14830  001B48  D7E0               	goto	l11042
 14831  001B4A  0E10               	movlw	16
 14832  001B4C  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14833  001B4E  0E27               	movlw	39
 14834  001B50  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14835  001B52  A0D8               	btfss	status,0,c
 14836  001B54  D7DA               	goto	l11042
 14837  001B56                     u12440:
 14838                           
 14839                           ;diskio.c: 393: if(count2==10)
 14840  001B56  0E0A               	movlw	10
 14841  001B58  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14842  001B5A  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14843  001B5C  A4D8               	btfss	status,2,c
 14844  001B5E  D034               	goto	u12480
 14845                           
 14846                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14847  001B60  0E00               	movlw	0
 14848  001B62  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14849  001B64  0E00               	movlw	0
 14850  001B66  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14851                           
 14852                           ;diskio.c: 396: dummy_clocks(10);
 14853  001B68  0E0A               	movlw	10
 14854  001B6A  ECD1  F02A         	call	_dummy_clocks
 14855                           
 14856                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14857  001B6E  0E00               	movlw	0
 14858  001B70  6E0F               	movwf	command@arg^0,c
 14859  001B72  0E00               	movlw	0
 14860  001B74  6E10               	movwf	(command@arg+1)^0,c
 14861  001B76  0E00               	movlw	0
 14862  001B78  6E11               	movwf	(command@arg+2)^0,c
 14863  001B7A  0E00               	movlw	0
 14864  001B7C  6E12               	movwf	(command@arg+3)^0,c
 14865  001B7E  0EFF               	movlw	255
 14866  001B80  6E13               	movwf	command@CRC^0,c
 14867  001B82  0E41               	movlw	65
 14868  001B84  ECB5  F027         	call	_command
 14869                           
 14870                           ;diskio.c: 398: proceed();
 14871  001B88  ECF9  F02D         	call	_proceed	;wreg free
 14872  001B8C                     l11068:
 14873                           
 14874                           ;diskio.c: 400: buff = response();
 14875  001B8C  ECF3  F02D         	call	_response	;wreg free
 14876  001B90  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14877                           
 14878                           ;diskio.c: 401: count2++;
 14879  001B92  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14880  001B94  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14881                           
 14882                           ;diskio.c: 402: if(buff==0x00)
 14883  001B96  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14884  001B98  A4D8               	btfss	status,2,c
 14885  001B9A  D00B               	goto	l11078
 14886                           
 14887                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14888  001B9C  0E00               	movlw	0
 14889  001B9E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14890  001BA0  0E01               	movlw	1
 14891  001BA2  EC58  F027         	call	_posicao_cursor_lcd
 14892                           
 14893                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14894  001BA6  0EE6               	movlw	low STR_4
 14895  001BA8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14896  001BAA  0E61               	movlw	high STR_4
 14897  001BAC  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14898  001BAE  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14899  001BB2                     l11078:
 14900                           
 14901                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14902  001BB2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14903  001BB4  B4D8               	btfsc	status,2,c
 14904  001BB6  D008               	goto	u12480
 14905  001BB8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14906  001BBA  D7E8               	goto	l11068
 14907  001BBC  0E10               	movlw	16
 14908  001BBE  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14909  001BC0  0E27               	movlw	39
 14910  001BC2  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14911  001BC4  A0D8               	btfss	status,0,c
 14912  001BC6  D7E2               	goto	l11068
 14913  001BC8                     u12480:
 14914                           
 14915                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14916  001BC8  0E0A               	movlw	10
 14917  001BCA  ECD1  F02A         	call	_dummy_clocks
 14918                           
 14919                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14920  001BCE  0E00               	movlw	0
 14921  001BD0  6E0F               	movwf	command@arg^0,c
 14922  001BD2  0E02               	movlw	2
 14923  001BD4  6E10               	movwf	(command@arg+1)^0,c
 14924  001BD6  0E00               	movlw	0
 14925  001BD8  6E11               	movwf	(command@arg+2)^0,c
 14926  001BDA  0E00               	movlw	0
 14927  001BDC  6E12               	movwf	(command@arg+3)^0,c
 14928  001BDE  0EFF               	movlw	255
 14929  001BE0  6E13               	movwf	command@CRC^0,c
 14930  001BE2  0E50               	movlw	80
 14931  001BE4  ECB5  F027         	call	_command
 14932                           
 14933                           ;diskio.c: 414: proceed();
 14934  001BE8  ECF9  F02D         	call	_proceed	;wreg free
 14935  001BEC                     
 14936                           ;diskio.c: 418: buff = response();
 14937  001BEC  ECF3  F02D         	call	_response	;wreg free
 14938  001BF0  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14939                           
 14940                           ;diskio.c: 419: }while(buff!=0X00);
 14941  001BF2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14942  001BF4  A4D8               	btfss	status,2,c
 14943  001BF6  D7FA               	goto	l11086
 14944  001BF8                     u12490:
 14945                           
 14946                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14947  001BF8  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14948  001BFA  0012               	return		;funcret
 14949  001BFC                     __end_of_sdc_disk_initialize:
 14950                           	callstack 0
 14951                           
 14952 ;; *************** function _sdc_reset *****************
 14953 ;; Defined at:
 14954 ;;		line 238 in file "bibliotecas/diskio.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;		None
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;  teste          10    0        unsigned char [10]
 14959 ;;  count           2   25[COMRAM] int 
 14960 ;;  count_nosd      2   23[COMRAM] int 
 14961 ;;  i               2    0        int 
 14962 ;;  receive         2    0        unsigned int 
 14963 ;;  buff            1   27[COMRAM] unsigned char 
 14964 ;;  stat            1    0        unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0
 14975 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14977 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14978 ;;Total ram usage:        7 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    5
 14981 ;; This function calls:
 14982 ;;		_command
 14983 ;;		_escreve_frase_ram_lcd
 14984 ;;		_posicao_cursor_lcd
 14985 ;;		_proceed
 14986 ;;		_response
 14987 ;; This function is called by:
 14988 ;;		_sdc_disk_initialize
 14989 ;; This function uses a non-reentrant model
 14990 ;;
 14991                           
 14992                           	psect	text82
 14993  0047C6                     __ptext82:
 14994                           	callstack 0
 14995  0047C6                     _sdc_reset:
 14996                           	callstack 17
 14997                           
 14998                           ;incstack = 0
 14999  0047C6  0E00               	movlw	0
 15000  0047C8  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15001  0047CA  0E00               	movlw	0
 15002  0047CC  6E1A               	movwf	sdc_reset@count^0,c
 15003  0047CE  0E00               	movlw	0
 15004  0047D0  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 15005  0047D2  0E00               	movlw	0
 15006  0047D4  6E18               	movwf	sdc_reset@count_nosd^0,c
 15007  0047D6                     l10774:
 15008                           
 15009                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 15010  0047D6  0E00               	movlw	0
 15011  0047D8  6E0F               	movwf	command@arg^0,c
 15012  0047DA  0E00               	movlw	0
 15013  0047DC  6E10               	movwf	(command@arg+1)^0,c
 15014  0047DE  0E00               	movlw	0
 15015  0047E0  6E11               	movwf	(command@arg+2)^0,c
 15016  0047E2  0E00               	movlw	0
 15017  0047E4  6E12               	movwf	(command@arg+3)^0,c
 15018  0047E6  0E95               	movlw	149
 15019  0047E8  6E13               	movwf	command@CRC^0,c
 15020  0047EA  0E40               	movlw	64
 15021  0047EC  ECB5  F027         	call	_command
 15022                           
 15023                           ;diskio.c: 249: proceed();
 15024  0047F0  ECF9  F02D         	call	_proceed	;wreg free
 15025  0047F4                     l10778:
 15026                           
 15027                           ;diskio.c: 251: buff = response();
 15028  0047F4  ECF3  F02D         	call	_response	;wreg free
 15029  0047F8  6E1C               	movwf	sdc_reset@buff^0,c
 15030                           
 15031                           ;diskio.c: 252: count++;
 15032  0047FA  4A1A               	infsnz	sdc_reset@count^0,f,c
 15033  0047FC  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 15034                           
 15035                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 15036  0047FE  041C               	decf	sdc_reset@buff^0,w,c
 15037  004800  B4D8               	btfsc	status,2,c
 15038  004802  D008               	goto	u12020
 15039  004804  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 15040  004806  D7F6               	goto	l10778
 15041  004808  501B               	movf	(sdc_reset@count+1)^0,w,c
 15042  00480A  E104               	bnz	u12020
 15043  00480C  0E0A               	movlw	10
 15044  00480E  5C1A               	subwf	sdc_reset@count^0,w,c
 15045  004810  A0D8               	btfss	status,0,c
 15046  004812  D7F0               	goto	l10778
 15047  004814                     u12020:
 15048                           
 15049                           ;diskio.c: 254: count = 0;
 15050  004814  0E00               	movlw	0
 15051  004816  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15052  004818  0E00               	movlw	0
 15053  00481A  6E1A               	movwf	sdc_reset@count^0,c
 15054                           
 15055                           ;diskio.c: 255: if(buff != 0x01)
 15056  00481C  041C               	decf	sdc_reset@buff^0,w,c
 15057  00481E  B4D8               	btfsc	status,2,c
 15058  004820  D016               	goto	l10796
 15059                           
 15060                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 15061  004822  0E00               	movlw	0
 15062  004824  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15063  004826  0E01               	movlw	1
 15064  004828  EC58  F027         	call	_posicao_cursor_lcd
 15065                           
 15066                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 15067  00482C  0EF1               	movlw	low STR_1
 15068  00482E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15069  004830  0E61               	movlw	high STR_1
 15070  004832  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15071  004834  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15072                           
 15073                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 15074  004838  0E00               	movlw	0
 15075  00483A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15076  00483C  0E02               	movlw	2
 15077  00483E  EC58  F027         	call	_posicao_cursor_lcd
 15078                           
 15079                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 15080  004842  0E92               	movlw	low STR_2
 15081  004844  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15082  004846  0E61               	movlw	high STR_2
 15083  004848  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15084  00484A  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15085  00484E                     l10796:
 15086                           
 15087                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 15088  00484E  041C               	decf	sdc_reset@buff^0,w,c
 15089  004850  B4D8               	btfsc	status,2,c
 15090  004852  0012               	return	
 15091  004854  D7C0               	goto	l10774
 15092  004856                     __end_of_sdc_reset:
 15093                           	callstack 0
 15094                           
 15095 ;; *************** function _posicao_cursor_lcd *****************
 15096 ;; Defined at:
 15097 ;;		line 271 in file "bibliotecas/display_lcd.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;  linha           1    wreg     unsigned char 
 15100 ;;  coluna          1   12[COMRAM] unsigned char 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;  linha           1   13[COMRAM] unsigned char 
 15103 ;;  endereco        1   14[COMRAM] unsigned char 
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  1    wreg      void 
 15106 ;; Registers used:
 15107 ;;		wreg, status,2, status,0, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15113 ;;      Params:         1       0       0       0       0       0       0       0       0
 15114 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15116 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15117 ;;Total ram usage:        3 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:    4
 15120 ;; This function calls:
 15121 ;;		_endereco_cursor_lcd
 15122 ;; This function is called by:
 15123 ;;		_sdc_reset
 15124 ;;		_sdc_disk_initialize
 15125 ;;		_mostra_dados_display
 15126 ;;		_mensagem_inicial
 15127 ;;		_troca_de_tela
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text83
 15132  004EB0                     __ptext83:
 15133                           	callstack 0
 15134  004EB0                     _posicao_cursor_lcd:
 15135                           	callstack 25
 15136                           
 15137                           ;incstack = 0
 15138                           ;posicao_cursor_lcd@linha stored from wreg
 15139  004EB0  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 15140                           
 15141                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 15142  004EB2  0E11               	movlw	17
 15143  004EB4  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 15144  004EB6  0012               	return	
 15145  004EB8  D01B               	goto	l10638
 15146  004EBA                     l232:
 15147                           
 15148                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 15149  004EBA  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 15150                           
 15151                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 15152  004EBE  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15153  004EC0  EC59  F026         	call	_endereco_cursor_lcd
 15154                           
 15155                           ;display_lcd.c: 284: break;
 15156  004EC4  D022               	goto	l10640
 15157  004EC6                     l10622:
 15158                           
 15159                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 15160  004EC6  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15161  004EC8  0F40               	addlw	64
 15162  004ECA  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15163                           
 15164                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 15165  004ECC  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15166  004ECE  EC59  F026         	call	_endereco_cursor_lcd
 15167                           
 15168                           ;display_lcd.c: 289: break;
 15169  004ED2  D01B               	goto	l10640
 15170  004ED4                     l10626:
 15171                           
 15172                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 15173  004ED4  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15174  004ED6  0F14               	addlw	20
 15175  004ED8  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15176                           
 15177                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 15178  004EDA  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15179  004EDC  EC59  F026         	call	_endereco_cursor_lcd
 15180                           
 15181                           ;display_lcd.c: 294: break;
 15182  004EE0  D014               	goto	l10640
 15183  004EE2                     l10630:
 15184                           
 15185                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 15186  004EE2  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15187  004EE4  0F54               	addlw	84
 15188  004EE6  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15189                           
 15190                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 15191  004EE8  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15192  004EEA  EC59  F026         	call	_endereco_cursor_lcd
 15193                           
 15194                           ;display_lcd.c: 303: break;
 15195                           
 15196                           ;display_lcd.c: 299: break;
 15197  004EEE  D00D               	goto	l10640
 15198  004EF0                     l10638:
 15199  004EF0  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 15200                           
 15201                           ; Switch size 1, requested type "simple"
 15202                           ; Number of cases is 4, Range of values is 1 to 4
 15203                           ; switch strategies available:
 15204                           ; Name         Instructions Cycles
 15205                           ; simple_byte           13     7 (average)
 15206                           ;	Chosen strategy is simple_byte
 15207  004EF2  0A01               	xorlw	1	; case 1
 15208  004EF4  B4D8               	btfsc	status,2,c
 15209  004EF6  D7E1               	goto	l232
 15210  004EF8  0A03               	xorlw	3	; case 2
 15211  004EFA  B4D8               	btfsc	status,2,c
 15212  004EFC  D7E4               	goto	l10622
 15213  004EFE  0A01               	xorlw	1	; case 3
 15214  004F00  B4D8               	btfsc	status,2,c
 15215  004F02  D7E8               	goto	l10626
 15216  004F04  0A07               	xorlw	7	; case 4
 15217  004F06  B4D8               	btfsc	status,2,c
 15218  004F08  D7EC               	goto	l10630
 15219  004F0A                     l10640:
 15220                           
 15221                           ;display_lcd.c: 306: coluna++;
 15222  004F0A  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 15223                           
 15224                           ;display_lcd.c: 307: }
 15225  004F0C  0012               	return	
 15226  004F0E                     __end_of_posicao_cursor_lcd:
 15227                           	callstack 0
 15228                           
 15229 ;; *************** function _endereco_cursor_lcd *****************
 15230 ;; Defined at:
 15231 ;;		line 218 in file "bibliotecas/display_lcd.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;  endereco        1    wreg     unsigned char 
 15234 ;; Auto vars:     Size  Location     Type
 15235 ;;  endereco        1   11[COMRAM] unsigned char 
 15236 ;; Return value:  Size  Location     Type
 15237 ;;                  1    wreg      void 
 15238 ;; Registers used:
 15239 ;;		wreg, status,2, status,0, cstack
 15240 ;; Tracked objects:
 15241 ;;		On entry : 0/0
 15242 ;;		On exit  : 0/0
 15243 ;;		Unchanged: 0/0
 15244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15245 ;;      Params:         0       0       0       0       0       0       0       0       0
 15246 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15248 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15249 ;;Total ram usage:        1 bytes
 15250 ;; Hardware stack levels used:    1
 15251 ;; Hardware stack levels required when called:    3
 15252 ;; This function calls:
 15253 ;;		_delay
 15254 ;; This function is called by:
 15255 ;;		_posicao_cursor_lcd
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text84
 15260  004CB2                     __ptext84:
 15261                           	callstack 0
 15262  004CB2                     _endereco_cursor_lcd:
 15263                           	callstack 25
 15264                           
 15265                           ;incstack = 0
 15266                           ;endereco_cursor_lcd@endereco stored from wreg
 15267  004CB2  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 15268                           
 15269                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 15270  004CB4  9483               	bcf	131,2,c	;volatile
 15271                           
 15272                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 15273  004CB6  9283               	bcf	131,1,c	;volatile
 15274                           
 15275                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 15276  004CB8  9083               	bcf	131,0,c	;volatile
 15277                           
 15278                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 15279  004CBA  8E83               	bsf	131,7,c	;volatile
 15280                           
 15281                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 15282  004CBC  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 15283  004CBE  D002               	goto	l213
 15284  004CC0  8883               	bsf	131,4,c	;volatile
 15285  004CC2  D001               	goto	l10476
 15286  004CC4                     l213:
 15287                           
 15288                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 15289  004CC4  9883               	bcf	131,4,c	;volatile
 15290  004CC6                     l10476:
 15291                           
 15292                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 15293  004CC6  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 15294  004CC8  D002               	goto	l215
 15295  004CCA  8A83               	bsf	131,5,c	;volatile
 15296  004CCC  D001               	goto	l10480
 15297  004CCE                     l215:
 15298                           
 15299                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 15300  004CCE  9A83               	bcf	131,5,c	;volatile
 15301  004CD0                     l10480:
 15302                           
 15303                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 15304  004CD0  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 15305  004CD2  D002               	goto	l217
 15306  004CD4  8C83               	bsf	131,6,c	;volatile
 15307  004CD6  D001               	goto	l218
 15308  004CD8                     l217:
 15309                           
 15310                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 15311  004CD8  9C83               	bcf	131,6,c	;volatile
 15312  004CDA                     l218:
 15313                           
 15314                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 15315  004CDA  8083               	bsf	131,0,c	;volatile
 15316                           
 15317                           ;display_lcd.c: 236: delay();
 15318  004CDC  EC61  F02D         	call	_delay	;wreg free
 15319                           
 15320                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15321  004CE0  9083               	bcf	131,0,c	;volatile
 15322                           
 15323                           ;display_lcd.c: 238: delay();
 15324  004CE2  EC61  F02D         	call	_delay	;wreg free
 15325                           
 15326                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15327  004CE6  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15328  004CE8  D002               	goto	l219
 15329  004CEA  8883               	bsf	131,4,c	;volatile
 15330  004CEC  D001               	goto	l220
 15331  004CEE                     l219:
 15332                           
 15333                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15334  004CEE  9883               	bcf	131,4,c	;volatile
 15335  004CF0                     l220:
 15336                           
 15337                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15338  004CF0  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15339  004CF2  D002               	goto	l221
 15340  004CF4  8A83               	bsf	131,5,c	;volatile
 15341  004CF6  D001               	goto	l222
 15342  004CF8                     l221:
 15343                           
 15344                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15345  004CF8  9A83               	bcf	131,5,c	;volatile
 15346  004CFA                     l222:
 15347                           
 15348                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15349  004CFA  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15350  004CFC  D002               	goto	l223
 15351  004CFE  8C83               	bsf	131,6,c	;volatile
 15352  004D00  D001               	goto	l224
 15353  004D02                     l223:
 15354                           
 15355                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15356  004D02  9C83               	bcf	131,6,c	;volatile
 15357  004D04                     l224:
 15358                           
 15359                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15360  004D04  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15361  004D06  D002               	goto	l225
 15362  004D08  8E83               	bsf	131,7,c	;volatile
 15363  004D0A  D001               	goto	l226
 15364  004D0C                     l225:
 15365                           
 15366                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15367  004D0C  9E83               	bcf	131,7,c	;volatile
 15368  004D0E                     l226:
 15369                           
 15370                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15371  004D0E  8083               	bsf	131,0,c	;volatile
 15372                           
 15373                           ;display_lcd.c: 252: delay();
 15374  004D10  EC61  F02D         	call	_delay	;wreg free
 15375                           
 15376                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15377  004D14  9083               	bcf	131,0,c	;volatile
 15378                           
 15379                           ;display_lcd.c: 254: delay();
 15380  004D16  EC61  F02D         	call	_delay	;wreg free
 15381  004D1A  0012               	return		;funcret
 15382  004D1C                     __end_of_endereco_cursor_lcd:
 15383                           	callstack 0
 15384                           
 15385 ;; *************** function _escreve_frase_ram_lcd *****************
 15386 ;; Defined at:
 15387 ;;		line 445 in file "bibliotecas/display_lcd.c"
 15388 ;; Parameters:    Size  Location     Type
 15389 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 15390 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 15391 ;;		 -> STR_29(5), STR_28(2), STR_27(5), STR_26(7), 
 15392 ;;		 -> STR_25(7), STR_24(2), STR_23(5), STR_22(7), 
 15393 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 15394 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 15395 ;;		 -> STR_5(15), rawLongitude(13), rawLatitude(12), escreve_inteiro_lcd@texto(7), 
 15396 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;		None
 15399 ;; Return value:  Size  Location     Type
 15400 ;;                  1    wreg      void 
 15401 ;; Registers used:
 15402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15403 ;; Tracked objects:
 15404 ;;		On entry : 0/0
 15405 ;;		On exit  : 0/0
 15406 ;;		Unchanged: 0/0
 15407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15408 ;;      Params:         2       0       0       0       0       0       0       0       0
 15409 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15411 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15412 ;;Total ram usage:        2 bytes
 15413 ;; Hardware stack levels used:    1
 15414 ;; Hardware stack levels required when called:    4
 15415 ;; This function calls:
 15416 ;;		_escreve_caractere_lcd
 15417 ;; This function is called by:
 15418 ;;		_sdc_reset
 15419 ;;		_sdc_disk_initialize
 15420 ;;		_escreve_inteiro_lcd
 15421 ;;		_mostra_dados_display
 15422 ;;		_mensagem_inicial
 15423 ;;		_troca_de_tela
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text85
 15428  005174                     __ptext85:
 15429                           	callstack 0
 15430  005174                     _escreve_frase_ram_lcd:
 15431                           	callstack 25
 15432                           
 15433                           ;display_lcd.c: 447: while(*buffer)
 15434                           
 15435                           ;incstack = 0
 15436  005174  D014               	goto	l10650
 15437  005176                     l10646:
 15438                           
 15439                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 15440  005176  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15441  00517A  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15442  00517E  6AF8               	clrf	tblptru,c
 15443  005180  0E07               	movlw	(high __ramtop+-1)
 15444  005182  64F7               	cpfsgt	tblptrh,c
 15445  005184  D003               	bra	u11797
 15446  005186  0008               	tblrd		*
 15447  005188  50F5               	movf	tablat,w,c
 15448  00518A  D005               	bra	u11790
 15449  00518C                     u11797:
 15450  00518C  CFF6 FFE1          	movff	tblptrl,fsr1l
 15451  005190  CFF7 FFE2          	movff	tblptrh,fsr1h
 15452  005194  50E7               	movf	indf1,w,c
 15453  005196                     u11790:
 15454  005196  ECE9  F025         	call	_escreve_caractere_lcd
 15455                           
 15456                           ;display_lcd.c: 450: buffer++;
 15457  00519A  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 15458  00519C  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 15459  00519E                     l10650:
 15460  00519E  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15461  0051A2  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15462  0051A6  6AF8               	clrf	tblptru,c
 15463  0051A8  0E07               	movlw	(high __ramtop+-1)
 15464  0051AA  64F7               	cpfsgt	tblptrh,c
 15465  0051AC  D003               	bra	u11807
 15466  0051AE  0008               	tblrd		*
 15467  0051B0  50F5               	movf	tablat,w,c
 15468  0051B2  D005               	bra	u11800
 15469  0051B4                     u11807:
 15470  0051B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 15471  0051B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 15472  0051BC  50E7               	movf	indf1,w,c
 15473  0051BE                     u11800:
 15474  0051BE  0900               	iorlw	0
 15475  0051C0  B4D8               	btfsc	status,2,c
 15476  0051C2  0012               	return	
 15477  0051C4  D7D8               	goto	l10646
 15478  0051C6                     __end_of_escreve_frase_ram_lcd:
 15479                           	callstack 0
 15480                           
 15481 ;; *************** function _escreve_caractere_lcd *****************
 15482 ;; Defined at:
 15483 ;;		line 323 in file "bibliotecas/display_lcd.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  data            1    wreg     unsigned char 
 15486 ;; Auto vars:     Size  Location     Type
 15487 ;;  data            1   11[COMRAM] unsigned char 
 15488 ;; Return value:  Size  Location     Type
 15489 ;;                  1    wreg      void 
 15490 ;; Registers used:
 15491 ;;		wreg, status,2, status,0, cstack
 15492 ;; Tracked objects:
 15493 ;;		On entry : 0/0
 15494 ;;		On exit  : 0/0
 15495 ;;		Unchanged: 0/0
 15496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15497 ;;      Params:         0       0       0       0       0       0       0       0       0
 15498 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15500 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15501 ;;Total ram usage:        1 bytes
 15502 ;; Hardware stack levels used:    1
 15503 ;; Hardware stack levels required when called:    3
 15504 ;; This function calls:
 15505 ;;		_delay
 15506 ;; This function is called by:
 15507 ;;		_escreve_frase_ram_lcd
 15508 ;;		_troca_de_tela
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text86
 15513  004BD2                     __ptext86:
 15514                           	callstack 0
 15515  004BD2                     _escreve_caractere_lcd:
 15516                           	callstack 25
 15517                           
 15518                           ;incstack = 0
 15519                           ;escreve_caractere_lcd@data stored from wreg
 15520  004BD2  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 15521                           
 15522                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 15523  004BD4  9483               	bcf	131,2,c	;volatile
 15524                           
 15525                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 15526  004BD6  8283               	bsf	131,1,c	;volatile
 15527                           
 15528                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 15529  004BD8  9083               	bcf	131,0,c	;volatile
 15530                           
 15531                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 15532  004BDA  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 15533  004BDC  D002               	goto	l242
 15534  004BDE  8883               	bsf	131,4,c	;volatile
 15535  004BE0  D001               	goto	l10508
 15536  004BE2                     l242:
 15537                           
 15538                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 15539  004BE2  9883               	bcf	131,4,c	;volatile
 15540  004BE4                     l10508:
 15541                           
 15542                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 15543  004BE4  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 15544  004BE6  D002               	goto	l244
 15545  004BE8  8A83               	bsf	131,5,c	;volatile
 15546  004BEA  D001               	goto	l10512
 15547  004BEC                     l244:
 15548                           
 15549                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 15550  004BEC  9A83               	bcf	131,5,c	;volatile
 15551  004BEE                     l10512:
 15552                           
 15553                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 15554  004BEE  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 15555  004BF0  D002               	goto	l246
 15556  004BF2  8C83               	bsf	131,6,c	;volatile
 15557  004BF4  D001               	goto	l10516
 15558  004BF6                     l246:
 15559                           
 15560                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 15561  004BF6  9C83               	bcf	131,6,c	;volatile
 15562  004BF8                     l10516:
 15563                           
 15564                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 15565  004BF8  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 15566  004BFA  D002               	goto	l248
 15567  004BFC  8E83               	bsf	131,7,c	;volatile
 15568  004BFE  D001               	goto	l249
 15569  004C00                     l248:
 15570                           
 15571                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 15572  004C00  9E83               	bcf	131,7,c	;volatile
 15573  004C02                     l249:
 15574                           
 15575                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 15576  004C02  8083               	bsf	131,0,c	;volatile
 15577                           
 15578                           ;display_lcd.c: 342: delay();
 15579  004C04  EC61  F02D         	call	_delay	;wreg free
 15580                           
 15581                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 15582  004C08  9083               	bcf	131,0,c	;volatile
 15583                           
 15584                           ;display_lcd.c: 344: delay();
 15585  004C0A  EC61  F02D         	call	_delay	;wreg free
 15586                           
 15587                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 15588  004C0E  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 15589  004C10  D002               	goto	l250
 15590  004C12  8883               	bsf	131,4,c	;volatile
 15591  004C14  D001               	goto	l251
 15592  004C16                     l250:
 15593                           
 15594                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 15595  004C16  9883               	bcf	131,4,c	;volatile
 15596  004C18                     l251:
 15597                           
 15598                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 15599  004C18  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 15600  004C1A  D002               	goto	l252
 15601  004C1C  8A83               	bsf	131,5,c	;volatile
 15602  004C1E  D001               	goto	l253
 15603  004C20                     l252:
 15604                           
 15605                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 15606  004C20  9A83               	bcf	131,5,c	;volatile
 15607  004C22                     l253:
 15608                           
 15609                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 15610  004C22  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 15611  004C24  D002               	goto	l254
 15612  004C26  8C83               	bsf	131,6,c	;volatile
 15613  004C28  D001               	goto	l255
 15614  004C2A                     l254:
 15615                           
 15616                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 15617  004C2A  9C83               	bcf	131,6,c	;volatile
 15618  004C2C                     l255:
 15619                           
 15620                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 15621  004C2C  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 15622  004C2E  D002               	goto	l256
 15623  004C30  8E83               	bsf	131,7,c	;volatile
 15624  004C32  D001               	goto	l257
 15625  004C34                     l256:
 15626                           
 15627                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 15628  004C34  9E83               	bcf	131,7,c	;volatile
 15629  004C36                     l257:
 15630                           
 15631                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 15632  004C36  8083               	bsf	131,0,c	;volatile
 15633                           
 15634                           ;display_lcd.c: 359: delay();
 15635  004C38  EC61  F02D         	call	_delay	;wreg free
 15636                           
 15637                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 15638  004C3C  9083               	bcf	131,0,c	;volatile
 15639                           
 15640                           ;display_lcd.c: 361: delay();
 15641  004C3E  EC61  F02D         	call	_delay	;wreg free
 15642  004C42  0012               	return		;funcret
 15643  004C44                     __end_of_escreve_caractere_lcd:
 15644                           	callstack 0
 15645                           
 15646 ;; *************** function _delay *****************
 15647 ;; Defined at:
 15648 ;;		line 45 in file "bibliotecas/display_lcd.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;		None
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  contador_int    1   10[COMRAM] unsigned char 
 15653 ;;  contador_ext    1    9[COMRAM] unsigned char 
 15654 ;; Return value:  Size  Location     Type
 15655 ;;                  1    wreg      void 
 15656 ;; Registers used:
 15657 ;;		wreg, status,2, status,0
 15658 ;; Tracked objects:
 15659 ;;		On entry : 0/0
 15660 ;;		On exit  : 0/0
 15661 ;;		Unchanged: 0/0
 15662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15663 ;;      Params:         0       0       0       0       0       0       0       0       0
 15664 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15666 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15667 ;;Total ram usage:        2 bytes
 15668 ;; Hardware stack levels used:    1
 15669 ;; Hardware stack levels required when called:    2
 15670 ;; This function calls:
 15671 ;;		Nothing
 15672 ;; This function is called by:
 15673 ;;		_init_lcd
 15674 ;;		_escreve_cmd_lcd
 15675 ;;		_endereco_cursor_lcd
 15676 ;;		_escreve_caractere_lcd
 15677 ;; This function uses a non-reentrant model
 15678 ;;
 15679                           
 15680                           	psect	text87
 15681  005AC2                     __ptext87:
 15682                           	callstack 0
 15683  005AC2                     _delay:
 15684                           	callstack 25
 15685                           
 15686                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 15687                           
 15688                           ;incstack = 0
 15689  005AC2  0E00               	movlw	0
 15690  005AC4  6E0A               	movwf	delay@contador_ext^0,c
 15691  005AC6                     l181:
 15692                           
 15693                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 15694  005AC6  F000               	nop	
 15695                           
 15696                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 15697  005AC8  0E00               	movlw	0
 15698  005ACA  6E0B               	movwf	delay@contador_int^0,c
 15699  005ACC                     l183:
 15700                           
 15701                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 15702  005ACC  F000               	nop	
 15703  005ACE  2A0B               	incf	delay@contador_int^0,f,c
 15704  005AD0  0E31               	movlw	49
 15705  005AD2  640B               	cpfsgt	delay@contador_int^0,c
 15706  005AD4  D7FB               	goto	l183
 15707  005AD6  2A0A               	incf	delay@contador_ext^0,f,c
 15708  005AD8  0E63               	movlw	99
 15709  005ADA  640A               	cpfsgt	delay@contador_ext^0,c
 15710  005ADC  D7F4               	goto	l181
 15711  005ADE  0012               	return	
 15712  005AE0                     __end_of_delay:
 15713                           	callstack 0
 15714                           
 15715 ;; *************** function _check_fs *****************
 15716 ;; Defined at:
 15717 ;;		line 624 in file "bibliotecas/tff.c"
 15718 ;; Parameters:    Size  Location     Type
 15719 ;;  sect            4   52[COMRAM] unsigned long 
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15722 ;;		 -> NULL(0), fs(544), 
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  1    wreg      unsigned char 
 15725 ;; Registers used:
 15726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 3F/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15732 ;;      Params:         4       0       0       0       0       0       0       0       0
 15733 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15734 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15735 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15736 ;;Total ram usage:        8 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    7
 15739 ;; This function calls:
 15740 ;;		_disk_read
 15741 ;;		_memcmp
 15742 ;; This function is called by:
 15743 ;;		_auto_mount
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text88
 15748  004966                     __ptext88:
 15749                           	callstack 0
 15750  004966                     _check_fs:
 15751                           	callstack 17
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;tff.c: 628: FATFS *fs = FatFs;
 15755                           
 15756                           ;incstack = 0
 15757  004966  C04D  F03B         	movff	_FatFs,check_fs@fs
 15758  00496A  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15762  00496E  0E20               	movlw	32
 15763  004970  243B               	addwf	check_fs@fs^0,w,c
 15764  004972  6E29               	movwf	disk_read@buff^0,c
 15765  004974  0E00               	movlw	0
 15766  004976  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15767  004978  6E2A               	movwf	(disk_read@buff+1)^0,c
 15768  00497A  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15769  00497E  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15770  004982  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15771  004986  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15772  00498A  0E01               	movlw	1
 15773  00498C  6E2F               	movwf	disk_read@count^0,c
 15774  00498E  0E00               	movlw	0
 15775  004990  EC22  F026         	call	_disk_read
 15776  004994  0900               	iorlw	0
 15777  004996  B4D8               	btfsc	status,2,c
 15778  004998  D002               	goto	l11514
 15779  00499A                     u13200:
 15780  00499A                     l11510:
 15781                           
 15782                           ;tff.c: 631: return 2;
 15783  00499A  0E02               	movlw	2
 15784  00499C  0012               	return	
 15785  00499E                     l11514:
 15786                           
 15787                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15788  00499E  EE22 F01E          	lfsr	2,542
 15789  0049A2  503B               	movf	check_fs@fs^0,w,c
 15790  0049A4  26D9               	addwf	fsr2l,f,c
 15791  0049A6  503C               	movf	(check_fs@fs+1)^0,w,c
 15792  0049A8  22DA               	addwfc	fsr2h,f,c
 15793  0049AA  0E55               	movlw	85
 15794  0049AC  18DE               	xorwf	postinc2,w,c
 15795  0049AE  E1F5               	bnz	l11510
 15796  0049B0  0EAA               	movlw	170
 15797  0049B2  18DE               	xorwf	postinc2,w,c
 15798  0049B4  A4D8               	btfss	status,2,c
 15799  0049B6  D7F1               	goto	u13200
 15800                           
 15801                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15802  0049B8  0E56               	movlw	86
 15803  0049BA  243B               	addwf	check_fs@fs^0,w,c
 15804  0049BC  6E0A               	movwf	memcmp@s1^0,c
 15805  0049BE  0E00               	movlw	0
 15806  0049C0  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15807  0049C2  6E0B               	movwf	(memcmp@s1+1)^0,c
 15808  0049C4  0E73               	movlw	low STR_17
 15809  0049C6  6E0C               	movwf	memcmp@s2^0,c
 15810  0049C8  0E62               	movlw	high STR_17
 15811  0049CA  6E0D               	movwf	(memcmp@s2+1)^0,c
 15812  0049CC  0E00               	movlw	0
 15813  0049CE  6E0F               	movwf	(memcmp@n+1)^0,c
 15814  0049D0  0E03               	movlw	3
 15815  0049D2  6E0E               	movwf	memcmp@n^0,c
 15816  0049D4  EC9A  F023         	call	_memcmp	;wreg free
 15817  0049D8  500A               	movf	?_memcmp^0,w,c
 15818  0049DA  100B               	iorwf	(?_memcmp+1)^0,w,c
 15819  0049DC  A4D8               	btfss	status,2,c
 15820  0049DE  D002               	goto	l11526
 15821                           
 15822                           ;tff.c: 636: return 0;
 15823  0049E0  0E00               	movlw	0
 15824  0049E2  0012               	return	
 15825  0049E4                     l11526:
 15826                           
 15827                           ;tff.c: 641: return 1;
 15828  0049E4  0E01               	movlw	1
 15829  0049E6  0012               	return		;funcret
 15830  0049E8                     __end_of_check_fs:
 15831                           	callstack 0
 15832                           
 15833 ;; *************** function _memcmp *****************
 15834 ;; Defined at:
 15835 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;  s1              2    9[COMRAM] PTR const void 
 15838 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15839 ;;  s2              2   11[COMRAM] PTR const void 
 15840 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15841 ;;  n               2   13[COMRAM] unsigned int 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;		None
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  2    9[COMRAM] int 
 15846 ;; Registers used:
 15847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15853 ;;      Params:         6       0       0       0       0       0       0       0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15855 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15856 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15857 ;;Total ram usage:        8 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; Hardware stack levels required when called:    2
 15860 ;; This function calls:
 15861 ;;		Nothing
 15862 ;; This function is called by:
 15863 ;;		_trace_path
 15864 ;;		_check_fs
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text89
 15869  004734                     __ptext89:
 15870                           	callstack 0
 15871  004734                     _memcmp:
 15872                           	callstack 22
 15873                           
 15874                           ;incstack = 0
 15875  004734  D03B               	goto	l11148
 15876  004736                     l11140:
 15877  004736  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15878  00473A  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15879  00473E  50DF               	movf	indf2,w,c
 15880  004740  6E10               	movwf	??_memcmp^0,c
 15881  004742  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15882  004746  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15883  00474A  6AF8               	clrf	tblptru,c
 15884  00474C  0E07               	movlw	(high __ramtop+-1)
 15885  00474E  64F7               	cpfsgt	tblptrh,c
 15886  004750  D003               	bra	u12517
 15887  004752  0008               	tblrd		*
 15888  004754  50F5               	movf	tablat,w,c
 15889  004756  D005               	bra	u12510
 15890  004758                     u12517:
 15891  004758  CFF6 FFE1          	movff	tblptrl,fsr1l
 15892  00475C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15893  004760  50E7               	movf	indf1,w,c
 15894  004762                     u12510:
 15895  004762  1810               	xorwf	??_memcmp^0,w,c
 15896  004764  B4D8               	btfsc	status,2,c
 15897  004766  D01E               	goto	l11146
 15898  004768  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15899  00476C  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15900  004770  50DF               	movf	indf2,w,c
 15901  004772  6E10               	movwf	??_memcmp^0,c
 15902  004774  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15903  004778  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15904  00477C  6AF8               	clrf	tblptru,c
 15905  00477E  0E07               	movlw	(high __ramtop+-1)
 15906  004780  64F7               	cpfsgt	tblptrh,c
 15907  004782  D003               	bra	u12537
 15908  004784  0008               	tblrd		*
 15909  004786  50F5               	movf	tablat,w,c
 15910  004788  D005               	bra	u12530
 15911  00478A                     u12537:
 15912  00478A  CFF6 FFE1          	movff	tblptrl,fsr1l
 15913  00478E  CFF7 FFE2          	movff	tblptrh,fsr1h
 15914  004792  50E7               	movf	indf1,w,c
 15915  004794                     u12530:
 15916  004794  6E11               	movwf	(??_memcmp+1)^0,c
 15917  004796  5011               	movf	(??_memcmp+1)^0,w,c
 15918  004798  5C10               	subwf	??_memcmp^0,w,c
 15919  00479A  6E0A               	movwf	?_memcmp^0,c
 15920  00479C  6A0B               	clrf	(?_memcmp+1)^0,c
 15921  00479E  A0D8               	btfss	status,0,c
 15922  0047A0  060B               	decf	(?_memcmp+1)^0,f,c
 15923  0047A2  0012               	return	
 15924  0047A4                     l11146:
 15925  0047A4  4A0A               	infsnz	memcmp@s1^0,f,c
 15926  0047A6  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15927  0047A8  4A0C               	infsnz	memcmp@s2^0,f,c
 15928  0047AA  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15929  0047AC                     l11148:
 15930  0047AC  060E               	decf	memcmp@n^0,f,c
 15931  0047AE  A0D8               	btfss	status,0,c
 15932  0047B0  060F               	decf	(memcmp@n+1)^0,f,c
 15933  0047B2  280E               	incf	memcmp@n^0,w,c
 15934  0047B4  E1C0               	bnz	l11140
 15935  0047B6  280F               	incf	(memcmp@n+1)^0,w,c
 15936  0047B8  A4D8               	btfss	status,2,c
 15937  0047BA  D7BD               	goto	l11140
 15938  0047BC  0E00               	movlw	0
 15939  0047BE  6E0B               	movwf	(?_memcmp+1)^0,c
 15940  0047C0  0E00               	movlw	0
 15941  0047C2  6E0A               	movwf	?_memcmp^0,c
 15942  0047C4  0012               	return		;funcret
 15943  0047C6                     __end_of_memcmp:
 15944                           	callstack 0
 15945                           
 15946 ;; *************** function ___lmul *****************
 15947 ;; Defined at:
 15948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  multiplier      4    9[COMRAM] unsigned long 
 15951 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;  product         4   17[COMRAM] unsigned long 
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  4    9[COMRAM] unsigned long 
 15956 ;; Registers used:
 15957 ;;		wreg, status,2, status,0
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15963 ;;      Params:         8       0       0       0       0       0       0       0       0
 15964 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15966 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15967 ;;Total ram usage:       12 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    2
 15970 ;; This function calls:
 15971 ;;		Nothing
 15972 ;; This function is called by:
 15973 ;;		_clust2sect
 15974 ;;		_auto_mount
 15975 ;;		_atol
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text90
 15980  0050CC                     __ptext90:
 15981                           	callstack 0
 15982  0050CC                     ___lmul:
 15983                           	callstack 20
 15984                           
 15985                           ;incstack = 0
 15986  0050CC  0E00               	movlw	0
 15987  0050CE  6E12               	movwf	___lmul@product^0,c
 15988  0050D0  0E00               	movlw	0
 15989  0050D2  6E13               	movwf	(___lmul@product+1)^0,c
 15990  0050D4  0E00               	movlw	0
 15991  0050D6  6E14               	movwf	(___lmul@product+2)^0,c
 15992  0050D8  0E00               	movlw	0
 15993  0050DA  6E15               	movwf	(___lmul@product+3)^0,c
 15994  0050DC                     l10764:
 15995  0050DC  A00A               	btfss	___lmul@multiplier^0,0,c
 15996  0050DE  D008               	goto	l10768
 15997  0050E0  500E               	movf	___lmul@multiplicand^0,w,c
 15998  0050E2  2612               	addwf	___lmul@product^0,f,c
 15999  0050E4  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 16000  0050E6  2213               	addwfc	(___lmul@product+1)^0,f,c
 16001  0050E8  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 16002  0050EA  2214               	addwfc	(___lmul@product+2)^0,f,c
 16003  0050EC  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 16004  0050EE  2215               	addwfc	(___lmul@product+3)^0,f,c
 16005  0050F0                     l10768:
 16006  0050F0  90D8               	bcf	status,0,c
 16007  0050F2  360E               	rlcf	___lmul@multiplicand^0,f,c
 16008  0050F4  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16009  0050F6  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16010  0050F8  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16011  0050FA  90D8               	bcf	status,0,c
 16012  0050FC  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 16013  0050FE  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 16014  005100  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 16015  005102  320A               	rrcf	___lmul@multiplier^0,f,c
 16016  005104  500A               	movf	___lmul@multiplier^0,w,c
 16017  005106  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 16018  005108  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 16019  00510A  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 16020  00510C  A4D8               	btfss	status,2,c
 16021  00510E  D7E6               	goto	l10764
 16022  005110  C012  F00A         	movff	___lmul@product,?___lmul
 16023  005114  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 16024  005118  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 16025  00511C  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 16026  005120  0012               	return		;funcret
 16027  005122                     __end_of___lmul:
 16028                           	callstack 0
 16029                           
 16030 ;; *************** function _f_mount *****************
 16031 ;; Defined at:
 16032 ;;		line 794 in file "bibliotecas/tff.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;  drv             1    wreg     unsigned char 
 16035 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 16036 ;;		 -> fs(544), 
 16037 ;; Auto vars:     Size  Location     Type
 16038 ;;  drv             1   11[COMRAM] unsigned char 
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  1    wreg      enum E3231
 16041 ;; Registers used:
 16042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/1
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16048 ;;      Params:         2       0       0       0       0       0       0       0       0
 16049 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16051 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16052 ;;Total ram usage:        3 bytes
 16053 ;; Hardware stack levels used:    1
 16054 ;; Hardware stack levels required when called:    2
 16055 ;; This function calls:
 16056 ;;		Nothing
 16057 ;; This function is called by:
 16058 ;;		_escrita_sdcard
 16059 ;; This function uses a non-reentrant model
 16060 ;;
 16061                           
 16062                           	psect	text91
 16063  005344                     __ptext91:
 16064                           	callstack 0
 16065  005344                     _f_mount:
 16066                           	callstack 24
 16067                           
 16068                           ;incstack = 0
 16069                           ;f_mount@drv stored from wreg
 16070  005344  6E0C               	movwf	f_mount@drv^0,c
 16071                           
 16072                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 16073  005346  500C               	movf	f_mount@drv^0,w,c
 16074  005348  B4D8               	btfsc	status,2,c
 16075  00534A  D002               	goto	l12226
 16076  00534C  0E05               	movlw	5
 16077  00534E  0012               	return	
 16078  005350                     l12226:
 16079                           
 16080                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 16081  005350  504D               	movf	_FatFs^0,w,c
 16082  005352  104E               	iorwf	(_FatFs+1)^0,w,c
 16083  005354  B4D8               	btfsc	status,2,c
 16084  005356  D008               	goto	l12230
 16085  005358  EE20 F01C          	lfsr	2,28
 16086  00535C  504D               	movf	_FatFs^0,w,c
 16087  00535E  26D9               	addwf	fsr2l,f,c
 16088  005360  504E               	movf	(_FatFs+1)^0,w,c
 16089  005362  22DA               	addwfc	fsr2h,f,c
 16090  005364  0E00               	movlw	0
 16091  005366  6EDF               	movwf	indf2,c
 16092  005368                     l12230:
 16093                           
 16094                           ;tff.c: 803: FatFs = fs;
 16095  005368  C00A  F04D         	movff	f_mount@fs,_FatFs
 16096  00536C  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 16097                           
 16098                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 16099  005370  500A               	movf	f_mount@fs^0,w,c
 16100  005372  100B               	iorwf	(f_mount@fs+1)^0,w,c
 16101  005374  B4D8               	btfsc	status,2,c
 16102  005376  D008               	goto	l12236
 16103  005378  EE20 F01C          	lfsr	2,28
 16104  00537C  500A               	movf	f_mount@fs^0,w,c
 16105  00537E  26D9               	addwf	fsr2l,f,c
 16106  005380  500B               	movf	(f_mount@fs+1)^0,w,c
 16107  005382  22DA               	addwfc	fsr2h,f,c
 16108  005384  0E00               	movlw	0
 16109  005386  6EDF               	movwf	indf2,c
 16110  005388                     l12236:
 16111                           
 16112                           ;tff.c: 806: return FR_OK;
 16113  005388  0E00               	movlw	0
 16114  00538A  0012               	return		;funcret
 16115  00538C                     __end_of_f_mount:
 16116                           	callstack 0
 16117                           
 16118 ;; *************** function _f_lseek *****************
 16119 ;; Defined at:
 16120 ;;		line 1140 in file "bibliotecas/tff.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 16123 ;;		 -> fil(28), 
 16124 ;;  ofs             4   40[BANK0 ] unsigned long 
 16125 ;; Auto vars:     Size  Location     Type
 16126 ;;  csize           4   65[BANK0 ] unsigned long 
 16127 ;;  ifptr           4   61[BANK0 ] unsigned long 
 16128 ;;  clust           2   69[BANK0 ] unsigned short 
 16129 ;;  res             1   60[BANK0 ] enum E155
 16130 ;; Return value:  Size  Location     Type
 16131 ;;                  1    wreg      enum E3231
 16132 ;; Registers used:
 16133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16134 ;; Tracked objects:
 16135 ;;		On entry : 3F/0
 16136 ;;		On exit  : 3F/0
 16137 ;;		Unchanged: 0/0
 16138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16139 ;;      Params:         0       6       0       0       0       0       0       0       0
 16140 ;;      Locals:         0      11       0       0       0       0       0       0       0
 16141 ;;      Temps:          0      16       0       0       0       0       0       0       0
 16142 ;;      Totals:         0      33       0       0       0       0       0       0       0
 16143 ;;Total ram usage:       33 bytes
 16144 ;; Hardware stack levels used:    1
 16145 ;; Hardware stack levels required when called:   10
 16146 ;; This function calls:
 16147 ;;		___lldiv
 16148 ;;		_create_chain
 16149 ;;		_get_cluster
 16150 ;;		_validate
 16151 ;; This function is called by:
 16152 ;;		_escrita_sdcard
 16153 ;; This function uses a non-reentrant model
 16154 ;;
 16155                           
 16156                           	psect	text92
 16157  000AF2                     __ptext92:
 16158                           	callstack 0
 16159  000AF2                     _f_lseek:
 16160                           	callstack 16
 16161                           
 16162                           ; BSR set to: 0
 16163                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 16164                           
 16165                           ;incstack = 0
 16166  000AF2  EE20 F004          	lfsr	2,4
 16167  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 16168  000AF8  26D9               	addwf	fsr2l,f,c
 16169  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16170  000AFC  22DA               	addwfc	fsr2h,f,c
 16171  000AFE  CFDE F010          	movff	postinc2,validate@fs
 16172  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 16173  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 16174  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 16175  000B0E  CFDE F012          	movff	postinc2,validate@id
 16176  000B12  CFDD F013          	movff	postdec2,validate@id+1
 16177  000B16  ECC6  F029         	call	_validate	;wreg free
 16178  000B1A  0100               	movlb	0	; () banked
 16179  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 16180                           
 16181                           ; BSR set to: 0
 16182                           ;tff.c: 1151: if (res != FR_OK) return res;
 16183  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 16184  000B20  A4D8               	btfss	status,2,c
 16185  000B22  0012               	return	
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 16189  000B24  EE20 F002          	lfsr	2,2
 16190  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 16191  000B2A  26D9               	addwf	fsr2l,f,c
 16192  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16193  000B2E  22DA               	addwfc	fsr2h,f,c
 16194  000B30  BEDF               	btfsc	indf2,7,c
 16195  000B32  0012               	return	
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 16199  000B34  EE20 F00A          	lfsr	2,10
 16200  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 16201  000B3A  26D9               	addwf	fsr2l,f,c
 16202  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16203  000B3E  22DA               	addwfc	fsr2h,f,c
 16204  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 16205  000B42  5CDE               	subwf	postinc2,w,c
 16206  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16207  000B46  58DE               	subwfb	postinc2,w,c
 16208  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16209  000B4A  58DE               	subwfb	postinc2,w,c
 16210  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16211  000B4E  58DE               	subwfb	postinc2,w,c
 16212  000B50  B0D8               	btfsc	status,0,c
 16213  000B52  D016               	goto	l1188
 16214                           
 16215                           ; BSR set to: 0
 16216  000B54  EE20 F002          	lfsr	2,2
 16217  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 16218  000B5A  26D9               	addwf	fsr2l,f,c
 16219  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16220  000B5E  22DA               	addwfc	fsr2h,f,c
 16221  000B60  B2DF               	btfsc	indf2,1,c
 16222  000B62  D00E               	goto	l1188
 16223                           
 16224                           ; BSR set to: 0
 16225  000B64  EE20 F00A          	lfsr	2,10
 16226  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 16227  000B6A  26D9               	addwf	fsr2l,f,c
 16228  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16229  000B6E  22DA               	addwfc	fsr2h,f,c
 16230  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 16231  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 16232  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 16233  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 16234  000B80                     l1188:
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;tff.c: 1159: ifptr = fp->fptr;
 16238  000B80  EE20 F006          	lfsr	2,6
 16239  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 16240  000B86  26D9               	addwf	fsr2l,f,c
 16241  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16242  000B8A  22DA               	addwfc	fsr2h,f,c
 16243  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 16244  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 16245  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 16246  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 16247                           
 16248                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 16249  000B9C  EE20 F006          	lfsr	2,6
 16250  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 16251  000BA2  26D9               	addwf	fsr2l,f,c
 16252  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16253  000BA6  22DA               	addwfc	fsr2h,f,c
 16254  000BA8  6ADE               	clrf	postinc2,c
 16255  000BAA  6ADE               	clrf	postinc2,c
 16256  000BAC  6ADE               	clrf	postinc2,c
 16257  000BAE  6ADD               	clrf	postdec2,c
 16258  000BB0  EE20 F003          	lfsr	2,3
 16259  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 16260  000BB6  26D9               	addwf	fsr2l,f,c
 16261  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16262  000BBA  22DA               	addwfc	fsr2h,f,c
 16263  000BBC  0EFF               	movlw	255
 16264  000BBE  6EDF               	movwf	indf2,c
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;tff.c: 1161: if (ofs > 0) {
 16268  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 16269  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 16270  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 16271  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 16272  000BC8  B4D8               	btfsc	status,2,c
 16273  000BCA  D19D               	goto	l12466
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 16277  000BCC  EE20 F004          	lfsr	2,4
 16278  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 16279  000BD2  26D9               	addwf	fsr2l,f,c
 16280  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16281  000BD6  22DA               	addwfc	fsr2h,f,c
 16282  000BD8  EE10 F01D          	lfsr	1,29
 16283  000BDC  50DE               	movf	postinc2,w,c
 16284  000BDE  26E1               	addwf	fsr1l,f,c
 16285  000BE0  50DD               	movf	postdec2,w,c
 16286  000BE2  22E2               	addwfc	fsr1h,f,c
 16287  000BE4  50E7               	movf	indf1,w,c
 16288  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 16289  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 16290  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 16291  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 16292  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 16293  000BF2  0E09               	movlw	9
 16294  000BF4                     u14525:
 16295  000BF4  90D8               	bcf	status,0,c
 16296  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 16297  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 16298  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 16299  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 16300  000BFE  2EE8               	decfsz	wreg,f,c
 16301  000C00  D7F9               	goto	u14525
 16302  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 16303  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 16304  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 16305  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 16306                           
 16307                           ; BSR set to: 0
 16308                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 16309  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 16310  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 16311  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 16312  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 16313  000C1A  B4D8               	btfsc	status,2,c
 16314  000C1C  D093               	goto	l12424
 16315                           
 16316                           ; BSR set to: 0
 16317  000C1E  0EFF               	movlw	255
 16318  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 16319  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 16320  000C24  0EFF               	movlw	255
 16321  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 16322  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16323  000C2A  0EFF               	movlw	255
 16324  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 16325  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16326  000C30  0EFF               	movlw	255
 16327  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 16328  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16329  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16330  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16331  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16332  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16333  000C46  ECF4  F024         	call	___lldiv	;wreg free
 16334  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 16335  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 16336  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 16337  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 16338  000C5A  0EFF               	movlw	255
 16339  000C5C  0100               	movlb	0	; () banked
 16340  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16341  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 16342  000C62  0EFF               	movlw	255
 16343  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16344  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16345  000C68  0EFF               	movlw	255
 16346  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16347  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16348  000C6E  0EFF               	movlw	255
 16349  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16350  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16351  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16352  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16353  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16354  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16355  000C84  ECF4  F024         	call	___lldiv	;wreg free
 16356  000C88  500A               	movf	?___lldiv^0,w,c
 16357  000C8A  0100               	movlb	0	; () banked
 16358  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 16359  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 16360  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 16361  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 16362  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 16363  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 16364  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 16365  000C9A  A0D8               	btfss	status,0,c
 16366  000C9C  D053               	goto	l12424
 16367                           
 16368                           ; BSR set to: 0
 16369                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 16370  000C9E  0EFF               	movlw	255
 16371  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 16372  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 16373  000CA4  0EFF               	movlw	255
 16374  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 16375  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16376  000CAA  0EFF               	movlw	255
 16377  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 16378  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16379  000CB0  0EFF               	movlw	255
 16380  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 16381  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16382  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 16383  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 16384  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 16385  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 16386  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 16387  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 16388  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 16389  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 16390  000CC6  0EFF               	movlw	255
 16391  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16392  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 16393  000CCC  0EFF               	movlw	255
 16394  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16395  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 16396  000CD2  0EFF               	movlw	255
 16397  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16398  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 16399  000CD8  0EFF               	movlw	255
 16400  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16401  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 16402  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 16403  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 16404  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 16405  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 16406  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 16407  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 16408  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 16409  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 16410  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 16411  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 16412  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 16413  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 16414  000CF6  EE20 F006          	lfsr	2,6
 16415  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 16416  000CFC  26D9               	addwf	fsr2l,f,c
 16417  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16418  000D00  22DA               	addwfc	fsr2h,f,c
 16419  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 16420  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 16421  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 16422  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 16423                           
 16424                           ;tff.c: 1166: ofs -= fp->fptr;
 16425  000D12  EE20 F006          	lfsr	2,6
 16426  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 16427  000D18  26D9               	addwf	fsr2l,f,c
 16428  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16429  000D1C  22DA               	addwfc	fsr2h,f,c
 16430  000D1E  50DE               	movf	postinc2,w,c
 16431  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16432  000D22  50DE               	movf	postinc2,w,c
 16433  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16434  000D26  50DE               	movf	postinc2,w,c
 16435  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16436  000D2A  50DD               	movf	postdec2,w,c
 16437  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16438                           
 16439                           ;tff.c: 1167: clust = fp->curr_clust;
 16440  000D2E  EE20 F010          	lfsr	2,16
 16441  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 16442  000D34  26D9               	addwf	fsr2l,f,c
 16443  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16444  000D38  22DA               	addwfc	fsr2h,f,c
 16445  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16446  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16447                           
 16448                           ;tff.c: 1168: } else {
 16449  000D42  D030               	goto	l12436
 16450  000D44                     l12424:
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;tff.c: 1169: clust = fp->org_clust;
 16454  000D44  EE20 F00E          	lfsr	2,14
 16455  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 16456  000D4A  26D9               	addwf	fsr2l,f,c
 16457  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16458  000D4E  22DA               	addwfc	fsr2h,f,c
 16459  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16460  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;tff.c: 1171: if (clust == 0) {
 16464  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 16465  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16466  000D5C  A4D8               	btfss	status,2,c
 16467  000D5E  D018               	goto	l1192
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;tff.c: 1172: clust = create_chain(0);
 16471  000D60  0E00               	movlw	0
 16472  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 16473  000D64  0E00               	movlw	0
 16474  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 16475  000D68  ECBB  F016         	call	_create_chain	;wreg free
 16476  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16477  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 16481  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 16482  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16483  000D78  B4D8               	btfsc	status,2,c
 16484  000D7A  D0F8               	goto	l12474
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;tff.c: 1174: fp->org_clust = clust;
 16488  000D7C  EE20 F00E          	lfsr	2,14
 16489  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 16490  000D82  26D9               	addwf	fsr2l,f,c
 16491  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16492  000D86  22DA               	addwfc	fsr2h,f,c
 16493  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16494  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16495  000D90                     l1192:
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 16499  000D90  EE20 F010          	lfsr	2,16
 16500  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 16501  000D96  26D9               	addwf	fsr2l,f,c
 16502  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16503  000D9A  22DA               	addwfc	fsr2h,f,c
 16504  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16505  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16506  000DA4                     l12436:
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 16510  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 16511  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16512  000DA8  A4D8               	btfss	status,2,c
 16513  000DAA  D063               	goto	l12458
 16514  000DAC  D0AC               	goto	l12466
 16515  000DAE                     l12440:
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;tff.c: 1182: if (fp->flag & 0x02) {
 16519  000DAE  EE20 F002          	lfsr	2,2
 16520  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 16521  000DB4  26D9               	addwf	fsr2l,f,c
 16522  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16523  000DB8  22DA               	addwfc	fsr2h,f,c
 16524  000DBA  A2DF               	btfss	indf2,1,c
 16525  000DBC  D017               	goto	l12448
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;tff.c: 1183: clust = create_chain(clust);
 16529  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 16530  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 16531  000DC6  ECBB  F016         	call	_create_chain	;wreg free
 16532  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16533  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;tff.c: 1184: if (clust == 0) {
 16537  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 16538  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16539  000DD6  A4D8               	btfss	status,2,c
 16540  000DD8  D013               	goto	l12450
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;tff.c: 1185: ofs = csize; break;
 16544  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 16545  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 16546  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 16547  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 16548  000DEA  D04D               	goto	u14620
 16549  000DEC                     l12448:
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;tff.c: 1189: clust = get_cluster(clust);
 16553  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 16554  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 16555  000DF4  ECF4  F012         	call	_get_cluster	;wreg free
 16556  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 16557  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 16558  000E00                     l12450:
 16559                           
 16560                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 16561  000E00  0100               	movlb	0	; () banked
 16562  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 16563  000E04  E104               	bnz	u14600
 16564  000E06  0E02               	movlw	2
 16565  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16566  000E0A  A0D8               	btfss	status,0,c
 16567  000E0C  D0AF               	goto	l12474
 16568  000E0E                     u14600:
 16569                           
 16570                           ; BSR set to: 0
 16571  000E0E  EE20 F004          	lfsr	2,4
 16572  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 16573  000E14  26D9               	addwf	fsr2l,f,c
 16574  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16575  000E18  22DA               	addwfc	fsr2h,f,c
 16576  000E1A  EE10 F016          	lfsr	1,22
 16577  000E1E  50DE               	movf	postinc2,w,c
 16578  000E20  26E1               	addwf	fsr1l,f,c
 16579  000E22  50DD               	movf	postdec2,w,c
 16580  000E24  22E2               	addwfc	fsr1h,f,c
 16581  000E26  50E6               	movf	postinc1,w,c
 16582  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16583  000E2A  50E6               	movf	postinc1,w,c
 16584  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 16585  000E2E  B0D8               	btfsc	status,0,c
 16586  000E30  D09D               	goto	l12474
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;tff.c: 1191: fp->curr_clust = clust;
 16590  000E32  EE20 F010          	lfsr	2,16
 16591  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 16592  000E38  26D9               	addwf	fsr2l,f,c
 16593  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16594  000E3C  22DA               	addwfc	fsr2h,f,c
 16595  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16596  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16597                           
 16598                           ;tff.c: 1192: fp->fptr += csize;
 16599  000E46  EE20 F006          	lfsr	2,6
 16600  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 16601  000E4C  26D9               	addwf	fsr2l,f,c
 16602  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16603  000E50  22DA               	addwfc	fsr2h,f,c
 16604  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 16605  000E54  26DE               	addwf	postinc2,f,c
 16606  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16607  000E58  22DE               	addwfc	postinc2,f,c
 16608  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16609  000E5C  22DE               	addwfc	postinc2,f,c
 16610  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16611  000E60  22DE               	addwfc	postinc2,f,c
 16612                           
 16613                           ; BSR set to: 0
 16614                           ;tff.c: 1193: ofs -= csize;
 16615  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 16616  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16617  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16618  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16619  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16620  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16621  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16622  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16623  000E72                     l12458:
 16624                           
 16625                           ; BSR set to: 0
 16626  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 16627  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 16628  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16629  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 16630  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16631  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 16632  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16633  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 16634  000E82  A0D8               	btfss	status,0,c
 16635  000E84  D794               	goto	l12440
 16636  000E86                     u14620:
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 16640  000E86  EE20 F006          	lfsr	2,6
 16641  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 16642  000E8C  26D9               	addwf	fsr2l,f,c
 16643  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16644  000E90  22DA               	addwfc	fsr2h,f,c
 16645  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 16646  000E94  26DE               	addwf	postinc2,f,c
 16647  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16648  000E98  22DE               	addwfc	postinc2,f,c
 16649  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16650  000E9C  22DE               	addwfc	postinc2,f,c
 16651  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16652  000EA0  22DE               	addwfc	postinc2,f,c
 16653                           
 16654                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16655  000EA2  EE20 F003          	lfsr	2,3
 16656  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16657  000EA8  26D9               	addwf	fsr2l,f,c
 16658  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16659  000EAC  22DA               	addwfc	fsr2h,f,c
 16660  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16661  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16662  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16663  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16664  000EBE  0E0A               	movlw	10
 16665  000EC0  D005               	goto	u14630
 16666  000EC2                     u14635:
 16667  000EC2  90D8               	bcf	status,0,c
 16668  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16669  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16670  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16671  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16672  000ECC                     u14630:
 16673  000ECC  2EE8               	decfsz	wreg,f,c
 16674  000ECE  D7F9               	goto	u14635
 16675  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16676  000ED2  6EDF               	movwf	indf2,c
 16677                           
 16678                           ; BSR set to: 0
 16679                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16680  000ED4  0EFF               	movlw	255
 16681  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16682  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16683  000EDA  0E01               	movlw	1
 16684  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16685  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16686  000EE0  0E00               	movlw	0
 16687  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16688  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16689  000EE6  0E00               	movlw	0
 16690  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16691  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16692  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16693  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16694  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16695  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16696  000EF4  B4D8               	btfsc	status,2,c
 16697  000EF6  D007               	goto	l12466
 16698                           
 16699                           ; BSR set to: 0
 16700  000EF8  EE20 F003          	lfsr	2,3
 16701  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16702  000EFE  26D9               	addwf	fsr2l,f,c
 16703  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16704  000F02  22DA               	addwfc	fsr2h,f,c
 16705  000F04  2ADF               	incf	indf2,f,c
 16706  000F06                     l12466:
 16707                           
 16708                           ; BSR set to: 0
 16709                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16710  000F06  EE20 F006          	lfsr	2,6
 16711  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16712  000F0C  26D9               	addwf	fsr2l,f,c
 16713  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16714  000F10  22DA               	addwfc	fsr2h,f,c
 16715  000F12  EE10 F00A          	lfsr	1,10
 16716  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16717  000F18  26E1               	addwf	fsr1l,f,c
 16718  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16719  000F1C  22E2               	addwfc	fsr1h,f,c
 16720  000F1E  50DE               	movf	postinc2,w,c
 16721  000F20  5CE6               	subwf	postinc1,w,c
 16722  000F22  50DE               	movf	postinc2,w,c
 16723  000F24  58E6               	subwfb	postinc1,w,c
 16724  000F26  50DE               	movf	postinc2,w,c
 16725  000F28  58E6               	subwfb	postinc1,w,c
 16726  000F2A  50DE               	movf	postinc2,w,c
 16727  000F2C  58E6               	subwfb	postinc1,w,c
 16728  000F2E  B0D8               	btfsc	status,0,c
 16729  000F30  0012               	return	
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16733  000F32  EE20 F006          	lfsr	2,6
 16734  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16735  000F38  26D9               	addwf	fsr2l,f,c
 16736  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16737  000F3C  22DA               	addwfc	fsr2h,f,c
 16738  000F3E  EE10 F00A          	lfsr	1,10
 16739  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16740  000F44  26E1               	addwf	fsr1l,f,c
 16741  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16742  000F48  22E2               	addwfc	fsr1h,f,c
 16743  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16744  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16745  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16746  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;tff.c: 1204: fp->flag |= 0x20;
 16750  000F5A  EE20 F002          	lfsr	2,2
 16751  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16752  000F60  26D9               	addwf	fsr2l,f,c
 16753  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16754  000F64  22DA               	addwfc	fsr2h,f,c
 16755  000F66  0E00               	movlw	0
 16756  000F68  8ADB               	bsf	plusw2,5,c
 16757  000F6A  0012               	return	
 16758  000F6C                     l12474:
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;tff.c: 1211: fp->flag |= 0x80;
 16762  000F6C  EE20 F002          	lfsr	2,2
 16763  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16764  000F72  26D9               	addwf	fsr2l,f,c
 16765  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16766  000F76  22DA               	addwfc	fsr2h,f,c
 16767  000F78  0E00               	movlw	0
 16768  000F7A  8EDB               	bsf	plusw2,7,c
 16769                           
 16770                           ; BSR set to: 0
 16771  000F7C  0012               	return		;funcret
 16772  000F7E                     __end_of_f_lseek:
 16773                           	callstack 0
 16774                           
 16775 ;; *************** function _create_chain *****************
 16776 ;; Defined at:
 16777 ;;		line 283 in file "bibliotecas/tff.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;  clust           2   24[BANK0 ] unsigned short 
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;  ncl             2   36[BANK0 ] unsigned short 
 16782 ;;  scl             2   34[BANK0 ] unsigned short 
 16783 ;;  cstat           2   32[BANK0 ] unsigned short 
 16784 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16785 ;;		 -> NULL(0), fs(544), 
 16786 ;;  mcl             2   28[BANK0 ] unsigned short 
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  2   24[BANK0 ] unsigned short 
 16789 ;; Registers used:
 16790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16791 ;; Tracked objects:
 16792 ;;		On entry : 3F/0
 16793 ;;		On exit  : 3F/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16796 ;;      Params:         0       2       0       0       0       0       0       0       0
 16797 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16798 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16799 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16800 ;;Total ram usage:       14 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:    9
 16803 ;; This function calls:
 16804 ;;		_get_cluster
 16805 ;;		_put_cluster
 16806 ;; This function is called by:
 16807 ;;		_reserve_direntry
 16808 ;;		_f_write
 16809 ;;		_f_lseek
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           	psect	text93
 16814  002D76                     __ptext93:
 16815                           	callstack 0
 16816  002D76                     _create_chain:
 16817                           	callstack 13
 16818                           
 16819                           ; BSR set to: 0
 16820                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16821                           
 16822                           ; BSR set to: 0
 16823                           ;incstack = 0
 16824  002D76  C04D  F07E         	movff	_FatFs,create_chain@fs
 16825  002D7A  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;tff.c: 291: mcl = fs->max_clust;
 16829  002D7E  EE20 F016          	lfsr	2,22
 16830  002D82  517E               	movf	create_chain@fs& (0+255),w,b
 16831  002D84  26D9               	addwf	fsr2l,f,c
 16832  002D86  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16833  002D88  22DA               	addwfc	fsr2h,f,c
 16834  002D8A  CFDE F07C          	movff	postinc2,create_chain@mcl
 16835  002D8E  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;tff.c: 292: if (clust == 0) {
 16839  002D92  5178               	movf	create_chain@clust& (0+255),w,b
 16840  002D94  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16841  002D96  A4D8               	btfss	status,2,c
 16842  002D98  D01B               	goto	l10812
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;tff.c: 293: scl = fs->last_clust;
 16846  002D9A  EE20 F018          	lfsr	2,24
 16847  002D9E  517E               	movf	create_chain@fs& (0+255),w,b
 16848  002DA0  26D9               	addwf	fsr2l,f,c
 16849  002DA2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16850  002DA4  22DA               	addwfc	fsr2h,f,c
 16851  002DA6  CFDE F082          	movff	postinc2,create_chain@scl
 16852  002DAA  CFDD F083          	movff	postdec2,create_chain@scl+1
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16856  002DAE  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16857  002DB0  E104               	bnz	u12060
 16858  002DB2  0E02               	movlw	2
 16859  002DB4  5D82               	subwf	create_chain@scl& (0+255),w,b
 16860  002DB6  A0D8               	btfss	status,0,c
 16861  002DB8  D006               	goto	u12070
 16862  002DBA                     u12060:
 16863                           
 16864                           ; BSR set to: 0
 16865  002DBA  517C               	movf	create_chain@mcl& (0+255),w,b
 16866  002DBC  5D82               	subwf	create_chain@scl& (0+255),w,b
 16867  002DBE  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16868  002DC0  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16869  002DC2  A0D8               	btfss	status,0,c
 16870  002DC4  D02B               	goto	l913
 16871  002DC6                     u12070:
 16872                           
 16873                           ; BSR set to: 0
 16874  002DC6  0E00               	movlw	0
 16875  002DC8  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16876  002DCA  0E01               	movlw	1
 16877  002DCC  6F82               	movwf	create_chain@scl& (0+255),b
 16878  002DCE  D026               	goto	l913
 16879  002DD0                     l10812:
 16880                           
 16881                           ; BSR set to: 0
 16882                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16883  002DD0  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16884  002DD4  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16885  002DD8  ECF4  F012         	call	_get_cluster	;wreg free
 16886  002DDC  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16887  002DE0  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16888                           
 16889                           ;tff.c: 298: if (cstat < 2) return 1;
 16890  002DE4  0100               	movlb	0	; () banked
 16891  002DE6  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16892  002DE8  E10A               	bnz	l10820
 16893  002DEA  0E02               	movlw	2
 16894  002DEC  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16895  002DEE  B0D8               	btfsc	status,0,c
 16896  002DF0  D006               	goto	l10820
 16897  002DF2                     u12080:
 16898  002DF2  0E00               	movlw	0
 16899  002DF4  0100               	movlb	0	; () banked
 16900  002DF6  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16901  002DF8  0E01               	movlw	1
 16902  002DFA  6F78               	movwf	?_create_chain& (0+255),b
 16903  002DFC  0012               	return	
 16904  002DFE                     l10820:
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16908  002DFE  517C               	movf	create_chain@mcl& (0+255),w,b
 16909  002E00  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16910  002E02  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16911  002E04  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16912  002E06  B0D8               	btfsc	status,0,c
 16913  002E08  D005               	goto	l916
 16914                           
 16915                           ; BSR set to: 0
 16916  002E0A  C080  F078         	movff	create_chain@cstat,?_create_chain
 16917  002E0E  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16918  002E12  0012               	return	
 16919  002E14                     l916:
 16920                           
 16921                           ; BSR set to: 0
 16922                           ;tff.c: 300: scl = clust;
 16923  002E14  C078  F082         	movff	create_chain@clust,create_chain@scl
 16924  002E18  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16925  002E1C                     l913:
 16926                           
 16927                           ; BSR set to: 0
 16928                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16929  002E1C  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16930  002E20  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16931  002E24                     l10824:
 16932                           
 16933                           ; BSR set to: 0
 16934                           ;tff.c: 305: ncl++;
 16935  002E24  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16936  002E26  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16937                           
 16938                           ; BSR set to: 0
 16939                           ;tff.c: 306: if (ncl >= mcl) {
 16940  002E28  517C               	movf	create_chain@mcl& (0+255),w,b
 16941  002E2A  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16942  002E2C  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16943  002E2E  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16944  002E30  A0D8               	btfss	status,0,c
 16945  002E32  D00F               	goto	l10836
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;tff.c: 307: ncl = 2;
 16949  002E34  0E00               	movlw	0
 16950  002E36  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16951  002E38  0E02               	movlw	2
 16952  002E3A  6F84               	movwf	create_chain@ncl& (0+255),b
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;tff.c: 308: if (ncl > scl) return 0;
 16956  002E3C  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16957  002E3E  E109               	bnz	l10836
 16958  002E40  0E02               	movlw	2
 16959  002E42  5D82               	subwf	create_chain@scl& (0+255),w,b
 16960  002E44  B0D8               	btfsc	status,0,c
 16961  002E46  D005               	goto	l10836
 16962  002E48                     u12110:
 16963                           
 16964                           ; BSR set to: 0
 16965  002E48  0E00               	movlw	0
 16966  002E4A  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16967  002E4C  0E00               	movlw	0
 16968  002E4E  6F78               	movwf	?_create_chain& (0+255),b
 16969  002E50  0012               	return	
 16970  002E52                     l10836:
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16974  002E52  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16975  002E56  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16976  002E5A  ECF4  F012         	call	_get_cluster	;wreg free
 16977  002E5E  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16978  002E62  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16979                           
 16980                           ;tff.c: 311: if (cstat == 0) break;
 16981  002E66  0100               	movlb	0	; () banked
 16982  002E68  5180               	movf	create_chain@cstat& (0+255),w,b
 16983  002E6A  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16984  002E6C  B4D8               	btfsc	status,2,c
 16985  002E6E  D00C               	goto	l10854
 16986                           
 16987                           ; BSR set to: 0
 16988                           ;tff.c: 312: if (cstat == 1) return 1;
 16989  002E70  0580               	decf	create_chain@cstat& (0+255),w,b
 16990  002E72  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16991  002E74  B4D8               	btfsc	status,2,c
 16992  002E76  D7BD               	goto	u12080
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;tff.c: 313: if (ncl == scl) return 0;
 16996  002E78  5182               	movf	create_chain@scl& (0+255),w,b
 16997  002E7A  1984               	xorwf	create_chain@ncl& (0+255),w,b
 16998  002E7C  E1D3               	bnz	l10824
 16999  002E7E  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 17000  002E80  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 17001  002E82  B4D8               	btfsc	status,2,c
 17002  002E84  D7E1               	goto	u12110
 17003  002E86  D7CE               	goto	l10824
 17004  002E88                     l10854:
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 17008  002E88  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 17009  002E8C  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 17010  002E90  0EFF               	movlw	255
 17011  002E92  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 17012  002E94  6962               	setf	put_cluster@val& (0+255),b
 17013  002E96  ECBE  F011         	call	_put_cluster	;wreg free
 17014  002E9A  0900               	iorlw	0
 17015  002E9C  B4D8               	btfsc	status,2,c
 17016  002E9E  D7A9               	goto	u12080
 17017                           
 17018                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 17019  002EA0  0100               	movlb	0	; () banked
 17020  002EA2  5178               	movf	create_chain@clust& (0+255),w,b
 17021  002EA4  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 17022  002EA6  B4D8               	btfsc	status,2,c
 17023  002EA8  D00D               	goto	l10868
 17024                           
 17025                           ; BSR set to: 0
 17026  002EAA  C078  F060         	movff	create_chain@clust,put_cluster@clust
 17027  002EAE  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 17028  002EB2  C084  F062         	movff	create_chain@ncl,put_cluster@val
 17029  002EB6  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 17030  002EBA  ECBE  F011         	call	_put_cluster	;wreg free
 17031  002EBE  0900               	iorlw	0
 17032  002EC0  B4D8               	btfsc	status,2,c
 17033  002EC2  D797               	goto	u12080
 17034  002EC4                     l10868:
 17035                           
 17036                           ;tff.c: 319: fs->last_clust = ncl;
 17037  002EC4  0100               	movlb	0	; () banked
 17038  002EC6  EE20 F018          	lfsr	2,24
 17039  002ECA  517E               	movf	create_chain@fs& (0+255),w,b
 17040  002ECC  26D9               	addwf	fsr2l,f,c
 17041  002ECE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17042  002ED0  22DA               	addwfc	fsr2h,f,c
 17043  002ED2  C084  FFDE         	movff	create_chain@ncl,postinc2
 17044  002ED6  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 17045                           
 17046                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 17047  002EDA  EE20 F01A          	lfsr	2,26
 17048  002EDE  517E               	movf	create_chain@fs& (0+255),w,b
 17049  002EE0  26D9               	addwf	fsr2l,f,c
 17050  002EE2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17051  002EE4  22DA               	addwfc	fsr2h,f,c
 17052  002EE6  28DE               	incf	postinc2,w,c
 17053  002EE8  E103               	bnz	u12180
 17054  002EEA  28DE               	incf	postinc2,w,c
 17055  002EEC  B4D8               	btfsc	status,2,c
 17056  002EEE  D009               	goto	l10872
 17057  002EF0                     u12180:
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;tff.c: 321: fs->free_clust--;
 17061  002EF0  EE20 F01A          	lfsr	2,26
 17062  002EF4  517E               	movf	create_chain@fs& (0+255),w,b
 17063  002EF6  26D9               	addwf	fsr2l,f,c
 17064  002EF8  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17065  002EFA  22DA               	addwfc	fsr2h,f,c
 17066  002EFC  06DE               	decf	postinc2,f,c
 17067  002EFE  0E00               	movlw	0
 17068  002F00  5ADD               	subwfb	postdec2,f,c
 17069  002F02                     l10872:
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;tff.c: 325: };tff.c: 327: return ncl;
 17073  002F02  C084  F078         	movff	create_chain@ncl,?_create_chain
 17074  002F06  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 17075                           
 17076                           ; BSR set to: 0
 17077  002F0A  0012               	return		;funcret
 17078  002F0C                     __end_of_create_chain:
 17079                           	callstack 0
 17080                           
 17081 ;; *************** function _put_cluster *****************
 17082 ;; Defined at:
 17083 ;;		line 198 in file "bibliotecas/tff.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;  clust           2    0[BANK0 ] unsigned short 
 17086 ;;  val             2    2[BANK0 ] unsigned short 
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;  fatsect         4   14[BANK0 ] unsigned long 
 17089 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 17090 ;;		 -> NULL(0), fs(544), 
 17091 ;;  p               2   20[BANK0 ] PTR unsigned char 
 17092 ;;		 -> fs.win(512), NULL(0), fs(544), 
 17093 ;;  bc              2   18[BANK0 ] unsigned short 
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  1    wreg      enum E105
 17096 ;; Registers used:
 17097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17098 ;; Tracked objects:
 17099 ;;		On entry : 3F/0
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17103 ;;      Params:         0       4       0       0       0       0       0       0       0
 17104 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17105 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17106 ;;      Totals:         0      24       0       0       0       0       0       0       0
 17107 ;;Total ram usage:       24 bytes
 17108 ;; Hardware stack levels used:    1
 17109 ;; Hardware stack levels required when called:    8
 17110 ;; This function calls:
 17111 ;;		___wmul
 17112 ;;		_move_window
 17113 ;; This function is called by:
 17114 ;;		_remove_chain
 17115 ;;		_create_chain
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           	psect	text94
 17120  00237C                     __ptext94:
 17121                           	callstack 0
 17122  00237C                     _put_cluster:
 17123                           	callstack 13
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;incstack = 0
 17130  00237C  C04D  F076         	movff	_FatFs,put_cluster@fs
 17131  002380  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;tff.c: 209: fatsect = fs->fatbase;
 17135  002384  EE20 F008          	lfsr	2,8
 17136  002388  5176               	movf	put_cluster@fs& (0+255),w,b
 17137  00238A  26D9               	addwf	fsr2l,f,c
 17138  00238C  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17139  00238E  22DA               	addwfc	fsr2h,f,c
 17140  002390  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 17141  002394  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 17142  002398  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 17143  00239C  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 17144                           
 17145                           ;tff.c: 210: switch (fs->fs_type) {
 17146  0023A0  D10B               	goto	l10754
 17147  0023A2                     l10702:
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 17151  0023A2  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 17152  0023A6  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 17153  0023AA  0E00               	movlw	0
 17154  0023AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17155  0023AE  0E03               	movlw	3
 17156  0023B0  6E0C               	movwf	___wmul@multiplicand^0,c
 17157  0023B2  EC95  F02C         	call	___wmul	;wreg free
 17158  0023B6  90D8               	bcf	status,0,c
 17159  0023B8  300B               	rrcf	(?___wmul+1)^0,w,c
 17160  0023BA  0100               	movlb	0	; () banked
 17161  0023BC  6F64               	movwf	??_put_cluster& (0+255),b
 17162  0023BE  300A               	rrcf	?___wmul^0,w,c
 17163  0023C0  6F72               	movwf	put_cluster@bc& (0+255),b
 17164  0023C2  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17168  0023C6  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17169  0023CA  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17170  0023CE  0E09               	movlw	9
 17171  0023D0  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17172  0023D2                     u11915:
 17173  0023D2  90D8               	bcf	status,0,c
 17174  0023D4  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17175  0023D6  3364               	rrcf	??_put_cluster& (0+255),f,b
 17176  0023D8  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17177  0023DA  D7FB               	goto	u11915
 17178  0023DC  5164               	movf	??_put_cluster& (0+255),w,b
 17179  0023DE  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17180  0023E0  6E35               	movwf	move_window@sector^0,c
 17181  0023E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17182  0023E4  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17183  0023E6  6E36               	movwf	(move_window@sector+1)^0,c
 17184  0023E8  0E00               	movlw	0
 17185  0023EA  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17186  0023EC  6E37               	movwf	(move_window@sector+2)^0,c
 17187  0023EE  0E00               	movlw	0
 17188  0023F0  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17189  0023F2  6E38               	movwf	(move_window@sector+3)^0,c
 17190  0023F4  EC15  F015         	call	_move_window	;wreg free
 17191  0023F8  0900               	iorlw	0
 17192  0023FA  A4D8               	btfss	status,2,c
 17193  0023FC  D002               	goto	l10710
 17194  0023FE                     u11920:
 17195  0023FE  0E00               	movlw	0
 17196  002400  0012               	return	
 17197  002402                     l10710:
 17198                           
 17199                           ;tff.c: 214: p = &fs->win[bc % 512U];
 17200  002402  0EFF               	movlw	255
 17201  002404  0100               	movlb	0	; () banked
 17202  002406  6F64               	movwf	??_put_cluster& (0+255),b
 17203  002408  0E01               	movlw	1
 17204  00240A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17205  00240C  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17206  002410  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17207  002414  5164               	movf	??_put_cluster& (0+255),w,b
 17208  002416  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17209  002418  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17210  00241A  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17211  00241C  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17212  002420  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17213  002424  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17214  002426  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17215  002428  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17216  00242A  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17217  00242C  0E20               	movlw	32
 17218  00242E  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17219  002430  6F74               	movwf	put_cluster@p& (0+255),b
 17220  002432  0E00               	movlw	0
 17221  002434  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17222  002436  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 17226  002438  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17227  00243A  D004               	goto	l10716
 17228                           
 17229                           ; BSR set to: 0
 17230  00243C  C062  F06A         	movff	put_cluster@val,_put_cluster$1623
 17231  002440  6B6B               	clrf	(_put_cluster$1623+1)& (0+255),b
 17232  002442  D01A               	goto	l10718
 17233  002444                     l10716:
 17234                           
 17235                           ; BSR set to: 0
 17236  002444  5162               	movf	put_cluster@val& (0+255),w,b
 17237  002446  6F64               	movwf	??_put_cluster& (0+255),b
 17238  002448  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 17239  00244A  3B64               	swapf	??_put_cluster& (0+255),f,b
 17240  00244C  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 17241  00244E  0EF0               	movlw	240
 17242  002450  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 17243  002452  5164               	movf	??_put_cluster& (0+255),w,b
 17244  002454  0B0F               	andlw	15
 17245  002456  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 17246  002458  0EF0               	movlw	240
 17247  00245A  1764               	andwf	??_put_cluster& (0+255),f,b
 17248  00245C  C074  FFD9         	movff	put_cluster@p,fsr2l
 17249  002460  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17250  002464  50DF               	movf	indf2,w,c
 17251  002466  0B0F               	andlw	15
 17252  002468  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17253  00246A  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 17254  00246C  5164               	movf	??_put_cluster& (0+255),w,b
 17255  00246E  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 17256  002470  6F6A               	movwf	_put_cluster$1623& (0+255),b
 17257  002472  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17258  002474  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 17259  002476  6F6B               	movwf	(_put_cluster$1623+1)& (0+255),b
 17260  002478                     l10718:
 17261                           
 17262                           ; BSR set to: 0
 17263  002478  C074  FFD9         	movff	put_cluster@p,fsr2l
 17264  00247C  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17265  002480  C06A  FFDF         	movff	_put_cluster$1623,indf2
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;tff.c: 216: bc++;
 17269  002484  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 17270  002486  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 17271                           
 17272                           ; BSR set to: 0
 17273                           ;tff.c: 217: fs->winflag = 1;
 17274  002488  EE20 F01F          	lfsr	2,31
 17275  00248C  5176               	movf	put_cluster@fs& (0+255),w,b
 17276  00248E  26D9               	addwf	fsr2l,f,c
 17277  002490  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17278  002492  22DA               	addwfc	fsr2h,f,c
 17279  002494  0E01               	movlw	1
 17280  002496  6EDF               	movwf	indf2,c
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17284  002498  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17285  00249C  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17286  0024A0  0E09               	movlw	9
 17287  0024A2  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17288  0024A4                     u11945:
 17289  0024A4  90D8               	bcf	status,0,c
 17290  0024A6  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17291  0024A8  3364               	rrcf	??_put_cluster& (0+255),f,b
 17292  0024AA  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17293  0024AC  D7FB               	goto	u11945
 17294  0024AE  5164               	movf	??_put_cluster& (0+255),w,b
 17295  0024B0  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17296  0024B2  6E35               	movwf	move_window@sector^0,c
 17297  0024B4  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17298  0024B6  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17299  0024B8  6E36               	movwf	(move_window@sector+1)^0,c
 17300  0024BA  0E00               	movlw	0
 17301  0024BC  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17302  0024BE  6E37               	movwf	(move_window@sector+2)^0,c
 17303  0024C0  0E00               	movlw	0
 17304  0024C2  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17305  0024C4  6E38               	movwf	(move_window@sector+3)^0,c
 17306  0024C6  EC15  F015         	call	_move_window	;wreg free
 17307  0024CA  0900               	iorlw	0
 17308  0024CC  B4D8               	btfsc	status,2,c
 17309  0024CE  D797               	goto	u11920
 17310                           
 17311                           ;tff.c: 219: p = &fs->win[bc % 512U];
 17312  0024D0  0EFF               	movlw	255
 17313  0024D2  0100               	movlb	0	; () banked
 17314  0024D4  6F64               	movwf	??_put_cluster& (0+255),b
 17315  0024D6  0E01               	movlw	1
 17316  0024D8  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17317  0024DA  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17318  0024DE  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17319  0024E2  5164               	movf	??_put_cluster& (0+255),w,b
 17320  0024E4  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17321  0024E6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17322  0024E8  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17323  0024EA  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17324  0024EE  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17325  0024F2  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17326  0024F4  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17327  0024F6  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17328  0024F8  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17329  0024FA  0E20               	movlw	32
 17330  0024FC  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17331  0024FE  6F74               	movwf	put_cluster@p& (0+255),b
 17332  002500  0E00               	movlw	0
 17333  002502  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17334  002504  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17335                           
 17336                           ; BSR set to: 0
 17337                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 17338  002506  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17339  002508  D00E               	goto	l10736
 17340                           
 17341                           ; BSR set to: 0
 17342  00250A  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 17343  00250E  0E0F               	movlw	15
 17344  002510  1764               	andwf	??_put_cluster& (0+255),f,b
 17345  002512  C074  FFD9         	movff	put_cluster@p,fsr2l
 17346  002516  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17347  00251A  50DF               	movf	indf2,w,c
 17348  00251C  0BF0               	andlw	240
 17349  00251E  1164               	iorwf	??_put_cluster& (0+255),w,b
 17350  002520  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17351  002522  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17352  002524  D00C               	goto	L6
 17353  002526                     l10736:
 17354                           
 17355                           ; BSR set to: 0
 17356  002526  C062  F064         	movff	put_cluster@val,??_put_cluster
 17357  00252A  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 17358  00252E  0E04               	movlw	4
 17359  002530  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17360  002532                     u11975:
 17361  002532  90D8               	bcf	status,0,c
 17362  002534  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17363  002536  3364               	rrcf	??_put_cluster& (0+255),f,b
 17364  002538  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17365  00253A  D7FB               	goto	u11975
 17366  00253C  5164               	movf	??_put_cluster& (0+255),w,b
 17367  00253E                     L6:
 17368  00253E  6F6C               	movwf	_put_cluster$1624& (0+255),b
 17369  002540  6B6D               	clrf	(_put_cluster$1624+1)& (0+255),b
 17370                           
 17371                           ; BSR set to: 0
 17372  002542  C074  FFD9         	movff	put_cluster@p,fsr2l
 17373  002546  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17374  00254A  C06C  FFDF         	movff	_put_cluster$1624,indf2
 17375                           
 17376                           ;tff.c: 221: break;
 17377  00254E  D042               	goto	l10756
 17378  002550                     l10740:
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 17382  002550  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 17383  002552  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17384  002554  6E35               	movwf	move_window@sector^0,c
 17385  002556  0E00               	movlw	0
 17386  002558  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17387  00255A  6E36               	movwf	(move_window@sector+1)^0,c
 17388  00255C  0E00               	movlw	0
 17389  00255E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17390  002560  6E37               	movwf	(move_window@sector+2)^0,c
 17391  002562  0E00               	movlw	0
 17392  002564  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17393  002566  6E38               	movwf	(move_window@sector+3)^0,c
 17394  002568  EC15  F015         	call	_move_window	;wreg free
 17395  00256C  0900               	iorlw	0
 17396  00256E  B4D8               	btfsc	status,2,c
 17397  002570  D746               	goto	u11920
 17398                           
 17399                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 17400  002572  0EFF               	movlw	255
 17401  002574  0100               	movlb	0	; () banked
 17402  002576  6F64               	movwf	??_put_cluster& (0+255),b
 17403  002578  0E01               	movlw	1
 17404  00257A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17405  00257C  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 17406  002580  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 17407  002584  90D8               	bcf	status,0,c
 17408  002586  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 17409  002588  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 17410  00258A  5164               	movf	??_put_cluster& (0+255),w,b
 17411  00258C  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17412  00258E  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17413  002590  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17414  002592  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17415  002596  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17416  00259A  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17417  00259C  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17418  00259E  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17419  0025A0  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17420  0025A2  0E20               	movlw	32
 17421  0025A4  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17422  0025A6  6ED9               	movwf	fsr2l,c
 17423  0025A8  0E00               	movlw	0
 17424  0025AA  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17425  0025AC  6EDA               	movwf	fsr2h,c
 17426  0025AE  C062  FFDE         	movff	put_cluster@val,postinc2
 17427  0025B2  C063  FFDD         	movff	put_cluster@val+1,postdec2
 17428                           
 17429                           ;tff.c: 226: break;
 17430  0025B6  D00E               	goto	l10756
 17431  0025B8                     l10754:
 17432                           
 17433                           ; BSR set to: 0
 17434  0025B8  EE20 F01C          	lfsr	2,28
 17435  0025BC  5176               	movf	put_cluster@fs& (0+255),w,b
 17436  0025BE  26D9               	addwf	fsr2l,f,c
 17437  0025C0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17438  0025C2  22DA               	addwfc	fsr2h,f,c
 17439  0025C4  50DF               	movf	indf2,w,c
 17440                           
 17441                           ; Switch size 1, requested type "simple"
 17442                           ; Number of cases is 2, Range of values is 1 to 2
 17443                           ; switch strategies available:
 17444                           ; Name         Instructions Cycles
 17445                           ; simple_byte            7     4 (average)
 17446                           ;	Chosen strategy is simple_byte
 17447  0025C6  0A01               	xorlw	1	; case 1
 17448  0025C8  B4D8               	btfsc	status,2,c
 17449  0025CA  D6EB               	goto	l10702
 17450  0025CC  0A03               	xorlw	3	; case 2
 17451  0025CE  B4D8               	btfsc	status,2,c
 17452  0025D0  D7BF               	goto	l10740
 17453  0025D2  D715               	goto	u11920
 17454  0025D4                     l10756:
 17455                           
 17456                           ; BSR set to: 0
 17457                           ;tff.c: 236: fs->winflag = 1;
 17458  0025D4  EE20 F01F          	lfsr	2,31
 17459  0025D8  5176               	movf	put_cluster@fs& (0+255),w,b
 17460  0025DA  26D9               	addwf	fsr2l,f,c
 17461  0025DC  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17462  0025DE  22DA               	addwfc	fsr2h,f,c
 17463  0025E0  0E01               	movlw	1
 17464  0025E2  6EDF               	movwf	indf2,c
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;tff.c: 237: return TRUE;
 17468  0025E4  0E01               	movlw	1
 17469  0025E6  0012               	return		;funcret
 17470  0025E8                     __end_of_put_cluster:
 17471                           	callstack 0
 17472                           
 17473 ;; *************** function _get_cluster *****************
 17474 ;; Defined at:
 17475 ;;		line 155 in file "bibliotecas/tff.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;  clust           2   73[COMRAM] unsigned short 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;  fatsect         4   11[BANK0 ] unsigned long 
 17480 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 17481 ;;		 -> NULL(0), fs(544), 
 17482 ;;  bc              2   15[BANK0 ] unsigned short 
 17483 ;;  wc              2    9[BANK0 ] unsigned short 
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  2   73[COMRAM] unsigned short 
 17486 ;; Registers used:
 17487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17488 ;; Tracked objects:
 17489 ;;		On entry : 3F/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17493 ;;      Params:         2       0       0       0       0       0       0       0       0
 17494 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17495 ;;      Temps:          0       9       0       0       0       0       0       0       0
 17496 ;;      Totals:         2      19       0       0       0       0       0       0       0
 17497 ;;Total ram usage:       21 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; Hardware stack levels required when called:    8
 17500 ;; This function calls:
 17501 ;;		___wmul
 17502 ;;		_move_window
 17503 ;; This function is called by:
 17504 ;;		_remove_chain
 17505 ;;		_create_chain
 17506 ;;		_next_dir_entry
 17507 ;;		_f_lseek
 17508 ;;		_f_read
 17509 ;; This function uses a non-reentrant model
 17510 ;;
 17511                           
 17512                           	psect	text95
 17513  0025E8                     __ptext95:
 17514                           	callstack 0
 17515  0025E8                     _get_cluster:
 17516                           	callstack 13
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 17520                           
 17521                           ;incstack = 0
 17522  0025E8  C04D  F071         	movff	_FatFs,get_cluster@fs
 17523  0025EC  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 17524                           
 17525                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 17526  0025F0  504B               	movf	(get_cluster@clust+1)^0,w,c
 17527  0025F2  E104               	bnz	u11820
 17528  0025F4  0E02               	movlw	2
 17529  0025F6  5C4A               	subwf	get_cluster@clust^0,w,c
 17530  0025F8  A0D8               	btfss	status,0,c
 17531  0025FA  D105               	goto	l10694
 17532  0025FC                     u11820:
 17533                           
 17534                           ; BSR set to: 0
 17535  0025FC  EE20 F016          	lfsr	2,22
 17536  002600  5171               	movf	get_cluster@fs& (0+255),w,b
 17537  002602  26D9               	addwf	fsr2l,f,c
 17538  002604  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17539  002606  22DA               	addwfc	fsr2h,f,c
 17540  002608  50DE               	movf	postinc2,w,c
 17541  00260A  5C4A               	subwf	get_cluster@clust^0,w,c
 17542  00260C  50DE               	movf	postinc2,w,c
 17543  00260E  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 17544  002610  B0D8               	btfsc	status,0,c
 17545  002612  D0F9               	goto	l10694
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;tff.c: 165: fatsect = fs->fatbase;
 17549  002614  EE20 F008          	lfsr	2,8
 17550  002618  5171               	movf	get_cluster@fs& (0+255),w,b
 17551  00261A  26D9               	addwf	fsr2l,f,c
 17552  00261C  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17553  00261E  22DA               	addwfc	fsr2h,f,c
 17554  002620  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 17555  002624  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 17556  002628  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 17557  00262C  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 17558                           
 17559                           ;tff.c: 166: switch (fs->fs_type) {
 17560  002630  D0DD               	goto	l10692
 17561  002632                     l10658:
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 17565  002632  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 17566  002636  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 17567  00263A  0E00               	movlw	0
 17568  00263C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17569  00263E  0E03               	movlw	3
 17570  002640  6E0C               	movwf	___wmul@multiplicand^0,c
 17571  002642  EC95  F02C         	call	___wmul	;wreg free
 17572  002646  90D8               	bcf	status,0,c
 17573  002648  300B               	rrcf	(?___wmul+1)^0,w,c
 17574  00264A  0100               	movlb	0	; () banked
 17575  00264C  6F60               	movwf	??_get_cluster& (0+255),b
 17576  00264E  300A               	rrcf	?___wmul^0,w,c
 17577  002650  6F6F               	movwf	get_cluster@bc& (0+255),b
 17578  002652  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 17582  002656  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17583  00265A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17584  00265E  0E09               	movlw	9
 17585  002660  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17586  002662                     u11845:
 17587  002662  90D8               	bcf	status,0,c
 17588  002664  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17589  002666  3360               	rrcf	??_get_cluster& (0+255),f,b
 17590  002668  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17591  00266A  D7FB               	goto	u11845
 17592  00266C  5160               	movf	??_get_cluster& (0+255),w,b
 17593  00266E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17594  002670  6E35               	movwf	move_window@sector^0,c
 17595  002672  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17596  002674  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17597  002676  6E36               	movwf	(move_window@sector+1)^0,c
 17598  002678  0E00               	movlw	0
 17599  00267A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17600  00267C  6E37               	movwf	(move_window@sector+2)^0,c
 17601  00267E  0E00               	movlw	0
 17602  002680  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17603  002682  6E38               	movwf	(move_window@sector+3)^0,c
 17604  002684  EC15  F015         	call	_move_window	;wreg free
 17605  002688  0900               	iorlw	0
 17606  00268A  B4D8               	btfsc	status,2,c
 17607  00268C  D0BC               	goto	l10694
 17608                           
 17609                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 17610  00268E  0EFF               	movlw	255
 17611  002690  0100               	movlb	0	; () banked
 17612  002692  6F60               	movwf	??_get_cluster& (0+255),b
 17613  002694  0E01               	movlw	1
 17614  002696  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17615  002698  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17616  00269C  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17617  0026A0  5160               	movf	??_get_cluster& (0+255),w,b
 17618  0026A2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17619  0026A4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17620  0026A6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17621  0026A8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17622  0026AC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17623  0026B0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17624  0026B2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17625  0026B4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17626  0026B6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17627  0026B8  0E20               	movlw	32
 17628  0026BA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17629  0026BC  6ED9               	movwf	fsr2l,c
 17630  0026BE  0E00               	movlw	0
 17631  0026C0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17632  0026C2  6EDA               	movwf	fsr2h,c
 17633  0026C4  50DF               	movf	indf2,w,c
 17634  0026C6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17635  0026C8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17636  0026CA  6F69               	movwf	get_cluster@wc& (0+255),b
 17637  0026CC  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 17638                           
 17639                           ; BSR set to: 0
 17640  0026CE  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 17641  0026D0  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 17645  0026D2  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17646  0026D6  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17647  0026DA  0E09               	movlw	9
 17648  0026DC  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17649  0026DE                     u11865:
 17650  0026DE  90D8               	bcf	status,0,c
 17651  0026E0  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17652  0026E2  3360               	rrcf	??_get_cluster& (0+255),f,b
 17653  0026E4  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17654  0026E6  D7FB               	goto	u11865
 17655  0026E8  5160               	movf	??_get_cluster& (0+255),w,b
 17656  0026EA  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17657  0026EC  6E35               	movwf	move_window@sector^0,c
 17658  0026EE  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17659  0026F0  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17660  0026F2  6E36               	movwf	(move_window@sector+1)^0,c
 17661  0026F4  0E00               	movlw	0
 17662  0026F6  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17663  0026F8  6E37               	movwf	(move_window@sector+2)^0,c
 17664  0026FA  0E00               	movlw	0
 17665  0026FC  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17666  0026FE  6E38               	movwf	(move_window@sector+3)^0,c
 17667  002700  EC15  F015         	call	_move_window	;wreg free
 17668  002704  0900               	iorlw	0
 17669  002706  B4D8               	btfsc	status,2,c
 17670  002708  D07E               	goto	l10694
 17671                           
 17672                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17673  00270A  0EFF               	movlw	255
 17674  00270C  0100               	movlb	0	; () banked
 17675  00270E  6F60               	movwf	??_get_cluster& (0+255),b
 17676  002710  0E01               	movlw	1
 17677  002712  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17678  002714  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17679  002718  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17680  00271C  5160               	movf	??_get_cluster& (0+255),w,b
 17681  00271E  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17682  002720  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17683  002722  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17684  002724  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17685  002728  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17686  00272C  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17687  00272E  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17688  002730  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17689  002732  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17690  002734  0E20               	movlw	32
 17691  002736  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17692  002738  6ED9               	movwf	fsr2l,c
 17693  00273A  0E00               	movlw	0
 17694  00273C  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17695  00273E  6EDA               	movwf	fsr2h,c
 17696  002740  50DF               	movf	indf2,w,c
 17697  002742  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17698  002744  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17699  002746  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17700  002748  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17701  00274A  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17702  00274C  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17703  00274E  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17704  002750  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17708  002752  B04A               	btfsc	get_cluster@clust^0,0,c
 17709  002754  D007               	goto	l10678
 17710                           
 17711                           ; BSR set to: 0
 17712  002756  0EFF               	movlw	255
 17713  002758  1569               	andwf	get_cluster@wc& (0+255),w,b
 17714  00275A  6E4A               	movwf	?_get_cluster^0,c
 17715  00275C  0E0F               	movlw	15
 17716  00275E  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17717  002760  6E4B               	movwf	(?_get_cluster+1)^0,c
 17718  002762  0012               	return	
 17719  002764                     l10678:
 17720                           
 17721                           ; BSR set to: 0
 17722  002764  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17723  002768  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17724  00276C  0E04               	movlw	4
 17725  00276E  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17726  002770                     u11895:
 17727  002770  90D8               	bcf	status,0,c
 17728  002772  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17729  002774  3360               	rrcf	??_get_cluster& (0+255),f,b
 17730  002776  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17731  002778  D7FB               	goto	u11895
 17732  00277A  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17733  00277E  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17734  002782  0012               	return	
 17735  002784                     l10682:
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17739  002784  504B               	movf	(get_cluster@clust+1)^0,w,c
 17740  002786  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17741  002788  6E35               	movwf	move_window@sector^0,c
 17742  00278A  0E00               	movlw	0
 17743  00278C  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17744  00278E  6E36               	movwf	(move_window@sector+1)^0,c
 17745  002790  0E00               	movlw	0
 17746  002792  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17747  002794  6E37               	movwf	(move_window@sector+2)^0,c
 17748  002796  0E00               	movlw	0
 17749  002798  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17750  00279A  6E38               	movwf	(move_window@sector+3)^0,c
 17751  00279C  EC15  F015         	call	_move_window	;wreg free
 17752  0027A0  0900               	iorlw	0
 17753  0027A2  B4D8               	btfsc	status,2,c
 17754  0027A4  D030               	goto	l10694
 17755                           
 17756                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17757  0027A6  0EFF               	movlw	255
 17758  0027A8  0100               	movlb	0	; () banked
 17759  0027AA  6F60               	movwf	??_get_cluster& (0+255),b
 17760  0027AC  0E01               	movlw	1
 17761  0027AE  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17762  0027B0  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17763  0027B4  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17764  0027B8  90D8               	bcf	status,0,c
 17765  0027BA  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17766  0027BC  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17767  0027BE  5160               	movf	??_get_cluster& (0+255),w,b
 17768  0027C0  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17769  0027C2  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17770  0027C4  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17771  0027C6  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17772  0027CA  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17773  0027CE  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17774  0027D0  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17775  0027D2  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17776  0027D4  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17777  0027D6  0E20               	movlw	32
 17778  0027D8  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17779  0027DA  6ED9               	movwf	fsr2l,c
 17780  0027DC  0E00               	movlw	0
 17781  0027DE  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17782  0027E0  6EDA               	movwf	fsr2h,c
 17783  0027E2  CFDE F04A          	movff	postinc2,?_get_cluster
 17784  0027E6  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17785  0027EA  0012               	return	
 17786  0027EC                     l10692:
 17787                           
 17788                           ; BSR set to: 0
 17789  0027EC  EE20 F01C          	lfsr	2,28
 17790  0027F0  5171               	movf	get_cluster@fs& (0+255),w,b
 17791  0027F2  26D9               	addwf	fsr2l,f,c
 17792  0027F4  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17793  0027F6  22DA               	addwfc	fsr2h,f,c
 17794  0027F8  50DF               	movf	indf2,w,c
 17795                           
 17796                           ; Switch size 1, requested type "simple"
 17797                           ; Number of cases is 2, Range of values is 1 to 2
 17798                           ; switch strategies available:
 17799                           ; Name         Instructions Cycles
 17800                           ; simple_byte            7     4 (average)
 17801                           ;	Chosen strategy is simple_byte
 17802  0027FA  0A01               	xorlw	1	; case 1
 17803  0027FC  B4D8               	btfsc	status,2,c
 17804  0027FE  D719               	goto	l10658
 17805  002800  0A03               	xorlw	3	; case 2
 17806  002802  B4D8               	btfsc	status,2,c
 17807  002804  D7BF               	goto	l10682
 17808  002806                     l10694:
 17809                           
 17810                           ;tff.c: 184: };tff.c: 186: return 1;
 17811  002806  0E00               	movlw	0
 17812  002808  6E4B               	movwf	(?_get_cluster+1)^0,c
 17813  00280A  0E01               	movlw	1
 17814  00280C  6E4A               	movwf	?_get_cluster^0,c
 17815  00280E  0012               	return		;funcret
 17816  002810                     __end_of_get_cluster:
 17817                           	callstack 0
 17818                           
 17819 ;; *************** function ___lldiv *****************
 17820 ;; Defined at:
 17821 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 17822 ;; Parameters:    Size  Location     Type
 17823 ;;  dividend        4    9[COMRAM] unsigned long 
 17824 ;;  divisor         4   13[COMRAM] unsigned long 
 17825 ;; Auto vars:     Size  Location     Type
 17826 ;;  quotient        4   17[COMRAM] unsigned long 
 17827 ;;  counter         1   21[COMRAM] unsigned char 
 17828 ;; Return value:  Size  Location     Type
 17829 ;;                  4    9[COMRAM] unsigned long 
 17830 ;; Registers used:
 17831 ;;		wreg, status,2, status,0
 17832 ;; Tracked objects:
 17833 ;;		On entry : 0/0
 17834 ;;		On exit  : 0/0
 17835 ;;		Unchanged: 0/0
 17836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17837 ;;      Params:         8       0       0       0       0       0       0       0       0
 17838 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17840 ;;      Totals:        13       0       0       0       0       0       0       0       0
 17841 ;;Total ram usage:       13 bytes
 17842 ;; Hardware stack levels used:    1
 17843 ;; Hardware stack levels required when called:    2
 17844 ;; This function calls:
 17845 ;;		Nothing
 17846 ;; This function is called by:
 17847 ;;		_auto_mount
 17848 ;;		_f_lseek
 17849 ;;		_fprintf
 17850 ;;		_ultoa
 17851 ;; This function uses a non-reentrant model
 17852 ;;
 17853                           
 17854                           	psect	text96
 17855  0049E8                     __ptext96:
 17856                           	callstack 0
 17857  0049E8                     ___lldiv:
 17858                           	callstack 23
 17859                           
 17860                           ;incstack = 0
 17861  0049E8  0E00               	movlw	0
 17862  0049EA  6E12               	movwf	___lldiv@quotient^0,c
 17863  0049EC  0E00               	movlw	0
 17864  0049EE  6E13               	movwf	(___lldiv@quotient+1)^0,c
 17865  0049F0  0E00               	movlw	0
 17866  0049F2  6E14               	movwf	(___lldiv@quotient+2)^0,c
 17867  0049F4  0E00               	movlw	0
 17868  0049F6  6E15               	movwf	(___lldiv@quotient+3)^0,c
 17869  0049F8  500E               	movf	___lldiv@divisor^0,w,c
 17870  0049FA  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 17871  0049FC  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 17872  0049FE  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 17873  004A00  B4D8               	btfsc	status,2,c
 17874  004A02  D02A               	goto	l1772
 17875  004A04  0E01               	movlw	1
 17876  004A06  6E16               	movwf	___lldiv@counter^0,c
 17877  004A08  D006               	goto	l11602
 17878  004A0A                     l11600:
 17879  004A0A  90D8               	bcf	status,0,c
 17880  004A0C  360E               	rlcf	___lldiv@divisor^0,f,c
 17881  004A0E  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 17882  004A10  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 17883  004A12  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 17884  004A14  2A16               	incf	___lldiv@counter^0,f,c
 17885  004A16                     l11602:
 17886  004A16  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 17887  004A18  D7F8               	goto	l11600
 17888  004A1A                     u13340:
 17889  004A1A  90D8               	bcf	status,0,c
 17890  004A1C  3612               	rlcf	___lldiv@quotient^0,f,c
 17891  004A1E  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 17892  004A20  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 17893  004A22  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 17894  004A24  500E               	movf	___lldiv@divisor^0,w,c
 17895  004A26  5C0A               	subwf	___lldiv@dividend^0,w,c
 17896  004A28  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17897  004A2A  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 17898  004A2C  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17899  004A2E  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 17900  004A30  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17901  004A32  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 17902  004A34  A0D8               	btfss	status,0,c
 17903  004A36  D009               	goto	l11612
 17904  004A38  500E               	movf	___lldiv@divisor^0,w,c
 17905  004A3A  5E0A               	subwf	___lldiv@dividend^0,f,c
 17906  004A3C  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17907  004A3E  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 17908  004A40  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17909  004A42  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 17910  004A44  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17911  004A46  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 17912  004A48  8012               	bsf	___lldiv@quotient^0,0,c
 17913  004A4A                     l11612:
 17914  004A4A  90D8               	bcf	status,0,c
 17915  004A4C  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 17916  004A4E  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 17917  004A50  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 17918  004A52  320E               	rrcf	___lldiv@divisor^0,f,c
 17919  004A54  2E16               	decfsz	___lldiv@counter^0,f,c
 17920  004A56  D7E1               	goto	u13340
 17921  004A58                     l1772:
 17922  004A58  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 17923  004A5C  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 17924  004A60  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 17925  004A64  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 17926  004A68  0012               	return		;funcret
 17927  004A6A                     __end_of___lldiv:
 17928                           	callstack 0
 17929                           
 17930 ;; *************** function _f_close *****************
 17931 ;; Defined at:
 17932 ;;		line 1116 in file "bibliotecas/tff.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17935 ;;		 -> fil(28), 
 17936 ;; Auto vars:     Size  Location     Type
 17937 ;;  res             1   75[COMRAM] enum E155
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  1    wreg      enum E3231
 17940 ;; Registers used:
 17941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17942 ;; Tracked objects:
 17943 ;;		On entry : 3F/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17947 ;;      Params:         0       2       0       0       0       0       0       0       0
 17948 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17950 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17951 ;;Total ram usage:        3 bytes
 17952 ;; Hardware stack levels used:    1
 17953 ;; Hardware stack levels required when called:   10
 17954 ;; This function calls:
 17955 ;;		_f_sync
 17956 ;; This function is called by:
 17957 ;;		_escrita_sdcard
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           	psect	text97
 17962  005832                     __ptext97:
 17963                           	callstack 0
 17964  005832                     _f_close:
 17965                           	callstack 16
 17966                           
 17967                           ; BSR set to: 0
 17968                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17969                           
 17970                           ;incstack = 0
 17971  005832  C069  F060         	movff	f_close@fp,f_sync@fp
 17972  005836  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17973  00583A  ECA8  F01B         	call	_f_sync	;wreg free
 17974  00583E  6E4C               	movwf	f_close@res^0,c
 17975                           
 17976                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17977  005840  504C               	movf	f_close@res^0,w,c
 17978  005842  A4D8               	btfss	status,2,c
 17979  005844  0012               	return	
 17980  005846  0100               	movlb	0	; () banked
 17981  005848  EE20 F004          	lfsr	2,4
 17982  00584C  5169               	movf	f_close@fp& (0+255),w,b
 17983  00584E  26D9               	addwf	fsr2l,f,c
 17984  005850  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17985  005852  22DA               	addwfc	fsr2h,f,c
 17986  005854  0E00               	movlw	0
 17987  005856  6EDE               	movwf	postinc2,c
 17988  005858  0E00               	movlw	0
 17989  00585A  6EDD               	movwf	postdec2,c
 17990  00585C  0012               	return		;funcret
 17991  00585E                     __end_of_f_close:
 17992                           	callstack 0
 17993                           
 17994 ;; *************** function _f_sync *****************
 17995 ;; Defined at:
 17996 ;;		line 1077 in file "bibliotecas/tff.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 17999 ;;		 -> fil(28), 
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;  tim             4    2[BANK0 ] unsigned long 
 18002 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 18003 ;;		 -> NULL(0), fs(544), 
 18004 ;;  res             1    6[BANK0 ] enum E155
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  1    wreg      enum E155
 18007 ;; Registers used:
 18008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 3F/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18014 ;;      Params:         0       2       0       0       0       0       0       0       0
 18015 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18017 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18018 ;;Total ram usage:        9 bytes
 18019 ;; Hardware stack levels used:    1
 18020 ;; Hardware stack levels required when called:    9
 18021 ;; This function calls:
 18022 ;;		_get_fattime
 18023 ;;		_move_window
 18024 ;;		_sync
 18025 ;;		_validate
 18026 ;; This function is called by:
 18027 ;;		_f_close
 18028 ;; This function uses a non-reentrant model
 18029 ;;
 18030                           
 18031                           	psect	text98
 18032  003750                     __ptext98:
 18033                           	callstack 0
 18034  003750                     _f_sync:
 18035                           	callstack 16
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 18039                           
 18040                           ;incstack = 0
 18041  003750  EE20 F004          	lfsr	2,4
 18042  003754  5160               	movf	f_sync@fp& (0+255),w,b
 18043  003756  26D9               	addwf	fsr2l,f,c
 18044  003758  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18045  00375A  22DA               	addwfc	fsr2h,f,c
 18046  00375C  CFDE F010          	movff	postinc2,validate@fs
 18047  003760  CFDD F011          	movff	postdec2,validate@fs+1
 18048  003764  C060  FFD9         	movff	f_sync@fp,fsr2l
 18049  003768  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 18050  00376C  CFDE F012          	movff	postinc2,validate@id
 18051  003770  CFDD F013          	movff	postdec2,validate@id+1
 18052  003774  ECC6  F029         	call	_validate	;wreg free
 18053  003778  0100               	movlb	0	; () banked
 18054  00377A  6F66               	movwf	f_sync@res& (0+255),b
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;tff.c: 1087: if (res == FR_OK) {
 18058  00377C  5166               	movf	f_sync@res& (0+255),w,b
 18059  00377E  A4D8               	btfss	status,2,c
 18060  003780  D079               	goto	l12044
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;tff.c: 1088: if (fp->flag & 0x20) {
 18064  003782  EE20 F002          	lfsr	2,2
 18065  003786  5160               	movf	f_sync@fp& (0+255),w,b
 18066  003788  26D9               	addwf	fsr2l,f,c
 18067  00378A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18068  00378C  22DA               	addwfc	fsr2h,f,c
 18069  00378E  AADF               	btfss	indf2,5,c
 18070  003790  D071               	goto	l12044
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 18074  003792  EE20 F016          	lfsr	2,22
 18075  003796  5160               	movf	f_sync@fp& (0+255),w,b
 18076  003798  26D9               	addwf	fsr2l,f,c
 18077  00379A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18078  00379C  22DA               	addwfc	fsr2h,f,c
 18079  00379E  CFDE F035          	movff	postinc2,move_window@sector
 18080  0037A2  CFDE F036          	movff	postinc2,move_window@sector+1
 18081  0037A6  CFDE F037          	movff	postinc2,move_window@sector+2
 18082  0037AA  CFDE F038          	movff	postinc2,move_window@sector+3
 18083  0037AE  EC15  F015         	call	_move_window	;wreg free
 18084  0037B2  0900               	iorlw	0
 18085  0037B4  A4D8               	btfss	status,2,c
 18086  0037B6  D002               	goto	l12030
 18087                           
 18088                           ;tff.c: 1091: return FR_RW_ERROR;
 18089  0037B8  0E08               	movlw	8
 18090  0037BA  0012               	return	
 18091  0037BC                     l12030:
 18092                           
 18093                           ;tff.c: 1092: dir = fp->dir_ptr;
 18094  0037BC  0100               	movlb	0	; () banked
 18095  0037BE  EE20 F01A          	lfsr	2,26
 18096  0037C2  5160               	movf	f_sync@fp& (0+255),w,b
 18097  0037C4  26D9               	addwf	fsr2l,f,c
 18098  0037C6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18099  0037C8  22DA               	addwfc	fsr2h,f,c
 18100  0037CA  CFDE F067          	movff	postinc2,f_sync@dir
 18101  0037CE  CFDD F068          	movff	postdec2,f_sync@dir+1
 18102                           
 18103                           ;tff.c: 1093: dir[11] |= 0x20;
 18104  0037D2  EE20 F00B          	lfsr	2,11
 18105  0037D6  5167               	movf	f_sync@dir& (0+255),w,b
 18106  0037D8  26D9               	addwf	fsr2l,f,c
 18107  0037DA  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18108  0037DC  22DA               	addwfc	fsr2h,f,c
 18109  0037DE  0E00               	movlw	0
 18110  0037E0  8ADB               	bsf	plusw2,5,c
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 18114  0037E2  EE20 F00A          	lfsr	2,10
 18115  0037E6  5160               	movf	f_sync@fp& (0+255),w,b
 18116  0037E8  26D9               	addwf	fsr2l,f,c
 18117  0037EA  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18118  0037EC  22DA               	addwfc	fsr2h,f,c
 18119  0037EE  EE10 F01C          	lfsr	1,28
 18120  0037F2  5167               	movf	f_sync@dir& (0+255),w,b
 18121  0037F4  26E1               	addwf	fsr1l,f,c
 18122  0037F6  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18123  0037F8  22E2               	addwfc	fsr1h,f,c
 18124  0037FA  CFDE FFE6          	movff	postinc2,postinc1
 18125  0037FE  CFDE FFE6          	movff	postinc2,postinc1
 18126  003802  CFDE FFE6          	movff	postinc2,postinc1
 18127  003806  CFDE FFE6          	movff	postinc2,postinc1
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 18131  00380A  EE20 F00E          	lfsr	2,14
 18132  00380E  5160               	movf	f_sync@fp& (0+255),w,b
 18133  003810  26D9               	addwf	fsr2l,f,c
 18134  003812  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18135  003814  22DA               	addwfc	fsr2h,f,c
 18136  003816  EE10 F01A          	lfsr	1,26
 18137  00381A  5167               	movf	f_sync@dir& (0+255),w,b
 18138  00381C  26E1               	addwf	fsr1l,f,c
 18139  00381E  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18140  003820  22E2               	addwfc	fsr1h,f,c
 18141  003822  CFDE FFE6          	movff	postinc2,postinc1
 18142  003826  CFDD FFE5          	movff	postdec2,postdec1
 18143                           
 18144                           ; BSR set to: 0
 18145                           ;tff.c: 1099: tim = get_fattime();
 18146  00382A  EC58  F01A         	call	_get_fattime	;wreg free
 18147  00382E  C00E  F062         	movff	?_get_fattime,f_sync@tim
 18148  003832  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 18149  003836  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 18150  00383A  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 18151                           
 18152                           ; BSR set to: 1
 18153                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 18154  00383E  0100               	movlb	0	; () banked
 18155  003840  EE20 F016          	lfsr	2,22
 18156  003844  5167               	movf	f_sync@dir& (0+255),w,b
 18157  003846  26D9               	addwf	fsr2l,f,c
 18158  003848  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18159  00384A  22DA               	addwfc	fsr2h,f,c
 18160  00384C  C062  FFDE         	movff	f_sync@tim,postinc2
 18161  003850  C063  FFDE         	movff	f_sync@tim+1,postinc2
 18162  003854  C064  FFDE         	movff	f_sync@tim+2,postinc2
 18163  003858  C065  FFDE         	movff	f_sync@tim+3,postinc2
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 18167  00385C  EE20 F002          	lfsr	2,2
 18168  003860  5160               	movf	f_sync@fp& (0+255),w,b
 18169  003862  26D9               	addwf	fsr2l,f,c
 18170  003864  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18171  003866  22DA               	addwfc	fsr2h,f,c
 18172  003868  0EDF               	movlw	223
 18173  00386A  16DF               	andwf	indf2,f,c
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;tff.c: 1102: res = sync();
 18177  00386C  ECE3  F028         	call	_sync	;wreg free
 18178  003870  0100               	movlb	0	; () banked
 18179  003872  6F66               	movwf	f_sync@res& (0+255),b
 18180  003874                     l12044:
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 18184  003874  5166               	movf	f_sync@res& (0+255),w,b
 18185  003876  0012               	return		;funcret
 18186  003878                     __end_of_f_sync:
 18187                           	callstack 0
 18188                           
 18189 ;; *************** function _validate *****************
 18190 ;; Defined at:
 18191 ;;		line 767 in file "bibliotecas/tff.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 18194 ;;		 -> NULL(0), fs(544), 
 18195 ;;  id              2   17[COMRAM] unsigned short 
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;		None
 18198 ;; Return value:  Size  Location     Type
 18199 ;;                  1    wreg      enum E155
 18200 ;; Registers used:
 18201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18202 ;; Tracked objects:
 18203 ;;		On entry : 3F/0
 18204 ;;		On exit  : 0/0
 18205 ;;		Unchanged: 0/0
 18206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18207 ;;      Params:         4       0       0       0       0       0       0       0       0
 18208 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18209 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18210 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18211 ;;Total ram usage:        6 bytes
 18212 ;; Hardware stack levels used:    1
 18213 ;; Hardware stack levels required when called:    4
 18214 ;; This function calls:
 18215 ;;		_disk_status
 18216 ;; This function is called by:
 18217 ;;		_f_write
 18218 ;;		_f_sync
 18219 ;;		_f_lseek
 18220 ;;		_f_read
 18221 ;; This function uses a non-reentrant model
 18222 ;;
 18223                           
 18224                           	psect	text99
 18225  00538C                     __ptext99:
 18226                           	callstack 0
 18227  00538C                     _validate:
 18228                           	callstack 18
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 18232                           
 18233                           ;incstack = 0
 18234  00538C  5010               	movf	validate@fs^0,w,c
 18235  00538E  1011               	iorwf	(validate@fs+1)^0,w,c
 18236  005390  B4D8               	btfsc	status,2,c
 18237  005392  D014               	goto	u12220
 18238                           
 18239                           ; BSR set to: 0
 18240  005394  EE20 F01C          	lfsr	2,28
 18241  005398  5010               	movf	validate@fs^0,w,c
 18242  00539A  26D9               	addwf	fsr2l,f,c
 18243  00539C  5011               	movf	(validate@fs+1)^0,w,c
 18244  00539E  22DA               	addwfc	fsr2h,f,c
 18245  0053A0  50DF               	movf	indf2,w,c
 18246  0053A2  B4D8               	btfsc	status,2,c
 18247  0053A4  D00B               	goto	u12220
 18248                           
 18249                           ; BSR set to: 0
 18250  0053A6  C010  FFD9         	movff	validate@fs,fsr2l
 18251  0053AA  C011  FFDA         	movff	validate@fs+1,fsr2h
 18252  0053AE  5012               	movf	validate@id^0,w,c
 18253  0053B0  18DE               	xorwf	postinc2,w,c
 18254  0053B2  E104               	bnz	u12220
 18255  0053B4  5013               	movf	(validate@id+1)^0,w,c
 18256  0053B6  18DE               	xorwf	postinc2,w,c
 18257  0053B8  B4D8               	btfsc	status,2,c
 18258  0053BA  D002               	goto	l10898
 18259  0053BC                     u12220:
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;tff.c: 773: return FR_INVALID_OBJECT;
 18263  0053BC  0E0C               	movlw	12
 18264  0053BE  0012               	return	
 18265  0053C0                     l10898:
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;tff.c: 774: if (disk_status(0) & 0x01)
 18269  0053C0  0E00               	movlw	0
 18270  0053C2  ECA6  F02B         	call	_disk_status
 18271  0053C6  6E14               	movwf	??_validate^0,c
 18272  0053C8  A014               	btfss	??_validate^0,0,c
 18273  0053CA  D002               	goto	l10904
 18274                           
 18275                           ;tff.c: 775: return FR_NOT_READY;
 18276  0053CC  0E01               	movlw	1
 18277  0053CE  0012               	return	
 18278  0053D0                     l10904:
 18279                           
 18280                           ;tff.c: 777: return FR_OK;
 18281  0053D0  0E00               	movlw	0
 18282  0053D2  0012               	return		;funcret
 18283  0053D4                     __end_of_validate:
 18284                           	callstack 0
 18285                           
 18286 ;; *************** function _disk_status *****************
 18287 ;; Defined at:
 18288 ;;		line 27 in file "bibliotecas/diskio.c"
 18289 ;; Parameters:    Size  Location     Type
 18290 ;;  pdrv            1    wreg     unsigned char 
 18291 ;; Auto vars:     Size  Location     Type
 18292 ;;  pdrv            1   13[COMRAM] unsigned char 
 18293 ;;  result          2    0        int 
 18294 ;;  stat            1   14[COMRAM] unsigned char 
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      unsigned char 
 18297 ;; Registers used:
 18298 ;;		wreg, status,2, status,0, cstack
 18299 ;; Tracked objects:
 18300 ;;		On entry : 3F/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18304 ;;      Params:         0       0       0       0       0       0       0       0       0
 18305 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18307 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18308 ;;Total ram usage:        4 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; Hardware stack levels required when called:    3
 18311 ;; This function calls:
 18312 ;;		_sdc_disk_status
 18313 ;; This function is called by:
 18314 ;;		_auto_mount
 18315 ;;		_validate
 18316 ;; This function uses a non-reentrant model
 18317 ;;
 18318                           
 18319                           	psect	text100
 18320  00574C                     __ptext100:
 18321                           	callstack 0
 18322  00574C                     _disk_status:
 18323                           	callstack 18
 18324                           
 18325                           ;incstack = 0
 18326                           ;disk_status@pdrv stored from wreg
 18327  00574C  6E0E               	movwf	disk_status@pdrv^0,c
 18328                           
 18329                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 18330  00574E  D00A               	goto	l10608
 18331  005750                     l10590:
 18332                           
 18333                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 18334  005750  500E               	movf	disk_status@pdrv^0,w,c
 18335  005752  ECCD  F02D         	call	_sdc_disk_status
 18336  005756  6E0F               	movwf	disk_status@stat^0,c
 18337  005758                     l10592:
 18338                           
 18339                           ;diskio.c: 39: return stat;
 18340  005758  500F               	movf	disk_status@stat^0,w,c
 18341  00575A  0012               	return	
 18342  00575C                     l10596:
 18343  00575C  500E               	movf	disk_status@pdrv^0,w,c
 18344  00575E  ECCD  F02D         	call	_sdc_disk_status
 18345  005762  D7FA               	goto	l10592
 18346  005764                     l10608:
 18347  005764  500E               	movf	disk_status@pdrv^0,w,c
 18348                           
 18349                           ; Switch size 1, requested type "simple"
 18350                           ; Number of cases is 3, Range of values is 0 to 2
 18351                           ; switch strategies available:
 18352                           ; Name         Instructions Cycles
 18353                           ; simple_byte           10     6 (average)
 18354                           ;	Chosen strategy is simple_byte
 18355  005766  0A00               	xorlw	0	; case 0
 18356  005768  B4D8               	btfsc	status,2,c
 18357  00576A  D7F2               	goto	l10590
 18358  00576C  0A01               	xorlw	1	; case 1
 18359  00576E  B4D8               	btfsc	status,2,c
 18360  005770  D7F5               	goto	l10596
 18361  005772  0A03               	xorlw	3	; case 2
 18362  005774  B4D8               	btfsc	status,2,c
 18363  005776  D7F0               	goto	l10592
 18364                           
 18365                           ;diskio.c: 50: return 0x01;
 18366  005778  0E01               	movlw	1
 18367  00577A  0012               	return		;funcret
 18368  00577C                     __end_of_disk_status:
 18369                           	callstack 0
 18370                           
 18371 ;; *************** function _sdc_disk_status *****************
 18372 ;; Defined at:
 18373 ;;		line 588 in file "bibliotecas/diskio.c"
 18374 ;; Parameters:    Size  Location     Type
 18375 ;;  pdrv            1    wreg     unsigned char 
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;  pdrv            1   10[COMRAM] unsigned char 
 18378 ;;  stat            1    0        unsigned char 
 18379 ;;  cont            1    0        unsigned char 
 18380 ;;  buff            1    0        unsigned char 
 18381 ;; Return value:  Size  Location     Type
 18382 ;;                  1    wreg      unsigned char 
 18383 ;; Registers used:
 18384 ;;		wreg, status,2
 18385 ;; Tracked objects:
 18386 ;;		On entry : 0/0
 18387 ;;		On exit  : 0/0
 18388 ;;		Unchanged: 0/0
 18389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18390 ;;      Params:         0       0       0       0       0       0       0       0       0
 18391 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18392 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18393 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18394 ;;Total ram usage:        2 bytes
 18395 ;; Hardware stack levels used:    1
 18396 ;; Hardware stack levels required when called:    2
 18397 ;; This function calls:
 18398 ;;		Nothing
 18399 ;; This function is called by:
 18400 ;;		_disk_status
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404                           	psect	text101
 18405  005B9A                     __ptext101:
 18406                           	callstack 0
 18407  005B9A                     _sdc_disk_status:
 18408                           	callstack 18
 18409                           
 18410                           ;incstack = 0
 18411                           ;sdc_disk_status@pdrv stored from wreg
 18412  005B9A  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 18413                           
 18414                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 18415  005B9C  500B               	movf	sdc_disk_status@pdrv^0,w,c
 18416  005B9E  B4D8               	btfsc	status,2,c
 18417  005BA0  D002               	goto	l10466
 18418  005BA2  0E01               	movlw	1
 18419  005BA4  0012               	return	
 18420  005BA6                     l10466:
 18421                           
 18422                           ;diskio.c: 595: return FR_OK;
 18423  005BA6  0E00               	movlw	0
 18424  005BA8  0012               	return		;funcret
 18425  005BAA                     __end_of_sdc_disk_status:
 18426                           	callstack 0
 18427                           
 18428 ;; *************** function _sync *****************
 18429 ;; Defined at:
 18430 ;;		line 119 in file "bibliotecas/tff.c"
 18431 ;; Parameters:    Size  Location     Type
 18432 ;;		None
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 18435 ;;		 -> NULL(0), fs(544), 
 18436 ;; Return value:  Size  Location     Type
 18437 ;;                  1    wreg      enum E155
 18438 ;; Registers used:
 18439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18440 ;; Tracked objects:
 18441 ;;		On entry : 3F/0
 18442 ;;		On exit  : 0/0
 18443 ;;		Unchanged: 0/0
 18444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18445 ;;      Params:         0       0       0       0       0       0       0       0       0
 18446 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18448 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18449 ;;Total ram usage:        2 bytes
 18450 ;; Hardware stack levels used:    1
 18451 ;; Hardware stack levels required when called:    8
 18452 ;; This function calls:
 18453 ;;		_disk_ioctl
 18454 ;;		_move_window
 18455 ;; This function is called by:
 18456 ;;		_f_sync
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text102
 18461  0051C6                     __ptext102:
 18462                           	callstack 0
 18463  0051C6                     _sync:
 18464                           	callstack 16
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;tff.c: 121: FATFS *fs = FatFs;
 18468                           
 18469                           ;incstack = 0
 18470  0051C6  C04D  F04A         	movff	_FatFs,sync@fs
 18471  0051CA  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;tff.c: 124: fs->winflag = 1;
 18475  0051CE  EE20 F01F          	lfsr	2,31
 18476  0051D2  504A               	movf	sync@fs^0,w,c
 18477  0051D4  26D9               	addwf	fsr2l,f,c
 18478  0051D6  504B               	movf	(sync@fs+1)^0,w,c
 18479  0051D8  22DA               	addwfc	fsr2h,f,c
 18480  0051DA  0E01               	movlw	1
 18481  0051DC  6EDF               	movwf	indf2,c
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 18485  0051DE  0E00               	movlw	0
 18486  0051E0  6E35               	movwf	move_window@sector^0,c
 18487  0051E2  0E00               	movlw	0
 18488  0051E4  6E36               	movwf	(move_window@sector+1)^0,c
 18489  0051E6  0E00               	movlw	0
 18490  0051E8  6E37               	movwf	(move_window@sector+2)^0,c
 18491  0051EA  0E00               	movlw	0
 18492  0051EC  6E38               	movwf	(move_window@sector+3)^0,c
 18493  0051EE  EC15  F015         	call	_move_window	;wreg free
 18494  0051F2  0900               	iorlw	0
 18495  0051F4  A4D8               	btfss	status,2,c
 18496  0051F6  D002               	goto	l11340
 18497  0051F8                     u12850:
 18498  0051F8  0E08               	movlw	8
 18499  0051FA  0012               	return	
 18500  0051FC                     l11340:
 18501                           
 18502                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 18503  0051FC  0E00               	movlw	0
 18504  0051FE  6E0A               	movwf	disk_ioctl@cmd^0,c
 18505  005200  0E00               	movlw	0
 18506  005202  6E0B               	movwf	disk_ioctl@buff^0,c
 18507  005204  0E00               	movlw	0
 18508  005206  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 18509  005208  0E00               	movlw	0
 18510  00520A  EC51  F02D         	call	_disk_ioctl
 18511  00520E  0900               	iorlw	0
 18512  005210  A4D8               	btfss	status,2,c
 18513  005212  D7F2               	goto	u12850
 18514                           
 18515                           ;tff.c: 143: return FR_OK;
 18516  005214  0E00               	movlw	0
 18517  005216  0012               	return		;funcret
 18518  005218                     __end_of_sync:
 18519                           	callstack 0
 18520                           
 18521 ;; *************** function _move_window *****************
 18522 ;; Defined at:
 18523 ;;		line 77 in file "bibliotecas/tff.c"
 18524 ;; Parameters:    Size  Location     Type
 18525 ;;  sector          4   52[COMRAM] unsigned long 
 18526 ;; Auto vars:     Size  Location     Type
 18527 ;;  n               1   66[COMRAM] unsigned char 
 18528 ;;  wsect           4   67[COMRAM] unsigned long 
 18529 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 18530 ;;		 -> NULL(0), fs(544), 
 18531 ;; Return value:  Size  Location     Type
 18532 ;;                  1    wreg      enum E105
 18533 ;; Registers used:
 18534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18535 ;; Tracked objects:
 18536 ;;		On entry : 0/0
 18537 ;;		On exit  : 0/0
 18538 ;;		Unchanged: 0/0
 18539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18540 ;;      Params:         4       0       0       0       0       0       0       0       0
 18541 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18542 ;;      Temps:         10       0       0       0       0       0       0       0       0
 18543 ;;      Totals:        21       0       0       0       0       0       0       0       0
 18544 ;;Total ram usage:       21 bytes
 18545 ;; Hardware stack levels used:    1
 18546 ;; Hardware stack levels required when called:    7
 18547 ;; This function calls:
 18548 ;;		_disk_read
 18549 ;;		_disk_write
 18550 ;; This function is called by:
 18551 ;;		_sync
 18552 ;;		_get_cluster
 18553 ;;		_put_cluster
 18554 ;;		_trace_path
 18555 ;;		_reserve_direntry
 18556 ;;		_f_open
 18557 ;;		_f_write
 18558 ;;		_f_sync
 18559 ;;		_f_read
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           	psect	text103
 18564  002A2A                     __ptext103:
 18565                           	callstack 0
 18566  002A2A                     _move_window:
 18567                           	callstack 15
 18568                           
 18569                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 18570                           
 18571                           ;incstack = 0
 18572  002A2A  C04D  F048         	movff	_FatFs,move_window@fs
 18573  002A2E  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 18574                           
 18575                           ;tff.c: 85: wsect = fs->winsect;
 18576  002A32  EE20 F004          	lfsr	2,4
 18577  002A36  5048               	movf	move_window@fs^0,w,c
 18578  002A38  26D9               	addwf	fsr2l,f,c
 18579  002A3A  5049               	movf	(move_window@fs+1)^0,w,c
 18580  002A3C  22DA               	addwfc	fsr2h,f,c
 18581  002A3E  CFDE F044          	movff	postinc2,move_window@wsect
 18582  002A42  CFDE F045          	movff	postinc2,move_window@wsect+1
 18583  002A46  CFDE F046          	movff	postinc2,move_window@wsect+2
 18584  002A4A  CFDE F047          	movff	postinc2,move_window@wsect+3
 18585                           
 18586                           ;tff.c: 86: if (wsect != sector) {
 18587  002A4E  5035               	movf	move_window@sector^0,w,c
 18588  002A50  1844               	xorwf	move_window@wsect^0,w,c
 18589  002A52  E10A               	bnz	u11710
 18590  002A54  5036               	movf	(move_window@sector+1)^0,w,c
 18591  002A56  1845               	xorwf	(move_window@wsect+1)^0,w,c
 18592  002A58  E107               	bnz	u11710
 18593  002A5A  5037               	movf	(move_window@sector+2)^0,w,c
 18594  002A5C  1846               	xorwf	(move_window@wsect+2)^0,w,c
 18595  002A5E  E104               	bnz	u11710
 18596  002A60  5038               	movf	(move_window@sector+3)^0,w,c
 18597  002A62  1847               	xorwf	(move_window@wsect+3)^0,w,c
 18598  002A64  B4D8               	btfsc	status,2,c
 18599  002A66  D0B4               	goto	l10578
 18600  002A68                     u11710:
 18601                           
 18602                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 18603  002A68  EE20 F01F          	lfsr	2,31
 18604  002A6C  5048               	movf	move_window@fs^0,w,c
 18605  002A6E  26D9               	addwf	fsr2l,f,c
 18606  002A70  5049               	movf	(move_window@fs+1)^0,w,c
 18607  002A72  22DA               	addwfc	fsr2h,f,c
 18608  002A74  50DF               	movf	indf2,w,c
 18609  002A76  B4D8               	btfsc	status,2,c
 18610  002A78  D081               	goto	l10568
 18611                           
 18612                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 18613  002A7A  0E20               	movlw	32
 18614  002A7C  2448               	addwf	move_window@fs^0,w,c
 18615  002A7E  6E29               	movwf	disk_write@buff^0,c
 18616  002A80  0E00               	movlw	0
 18617  002A82  2049               	addwfc	(move_window@fs+1)^0,w,c
 18618  002A84  6E2A               	movwf	(disk_write@buff+1)^0,c
 18619  002A86  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18620  002A8A  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18621  002A8E  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18622  002A92  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18623  002A96  0E01               	movlw	1
 18624  002A98  6E2F               	movwf	disk_write@count^0,c
 18625  002A9A  0E00               	movlw	0
 18626  002A9C  EC34  F029         	call	_disk_write
 18627  002AA0  0900               	iorlw	0
 18628  002AA2  B4D8               	btfsc	status,2,c
 18629  002AA4  D002               	goto	l10552
 18630  002AA6                     u11730:
 18631                           
 18632                           ;tff.c: 91: return FALSE;
 18633  002AA6  0E00               	movlw	0
 18634  002AA8  0012               	return	
 18635  002AAA                     l10552:
 18636                           
 18637                           ;tff.c: 92: fs->winflag = 0;
 18638  002AAA  EE20 F01F          	lfsr	2,31
 18639  002AAE  5048               	movf	move_window@fs^0,w,c
 18640  002AB0  26D9               	addwf	fsr2l,f,c
 18641  002AB2  5049               	movf	(move_window@fs+1)^0,w,c
 18642  002AB4  22DA               	addwfc	fsr2h,f,c
 18643  002AB6  0E00               	movlw	0
 18644  002AB8  6EDF               	movwf	indf2,c
 18645                           
 18646                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 18647  002ABA  EE20 F008          	lfsr	2,8
 18648  002ABE  5048               	movf	move_window@fs^0,w,c
 18649  002AC0  26D9               	addwf	fsr2l,f,c
 18650  002AC2  5049               	movf	(move_window@fs+1)^0,w,c
 18651  002AC4  22DA               	addwfc	fsr2h,f,c
 18652  002AC6  CFDE F039          	movff	postinc2,??_move_window
 18653  002ACA  CFDE F03A          	movff	postinc2,??_move_window+1
 18654  002ACE  CFDE F03B          	movff	postinc2,??_move_window+2
 18655  002AD2  CFDE F03C          	movff	postinc2,??_move_window+3
 18656  002AD6  EE20 F014          	lfsr	2,20
 18657  002ADA  5048               	movf	move_window@fs^0,w,c
 18658  002ADC  26D9               	addwf	fsr2l,f,c
 18659  002ADE  5049               	movf	(move_window@fs+1)^0,w,c
 18660  002AE0  22DA               	addwfc	fsr2h,f,c
 18661  002AE2  CFDE F03D          	movff	postinc2,??_move_window+4
 18662  002AE6  CFDD F03E          	movff	postdec2,??_move_window+5
 18663  002AEA  503D               	movf	(??_move_window+4)^0,w,c
 18664  002AEC  2439               	addwf	??_move_window^0,w,c
 18665  002AEE  6E3F               	movwf	(??_move_window+6)^0,c
 18666  002AF0  503E               	movf	(??_move_window+5)^0,w,c
 18667  002AF2  203A               	addwfc	(??_move_window+1)^0,w,c
 18668  002AF4  6E40               	movwf	(??_move_window+7)^0,c
 18669  002AF6  0E00               	movlw	0
 18670  002AF8  203B               	addwfc	(??_move_window+2)^0,w,c
 18671  002AFA  6E41               	movwf	(??_move_window+8)^0,c
 18672  002AFC  0E00               	movlw	0
 18673  002AFE  203C               	addwfc	(??_move_window+3)^0,w,c
 18674  002B00  6E42               	movwf	(??_move_window+9)^0,c
 18675  002B02  503F               	movf	(??_move_window+6)^0,w,c
 18676  002B04  5C44               	subwf	move_window@wsect^0,w,c
 18677  002B06  5040               	movf	(??_move_window+7)^0,w,c
 18678  002B08  5845               	subwfb	(move_window@wsect+1)^0,w,c
 18679  002B0A  5041               	movf	(??_move_window+8)^0,w,c
 18680  002B0C  5846               	subwfb	(move_window@wsect+2)^0,w,c
 18681  002B0E  5042               	movf	(??_move_window+9)^0,w,c
 18682  002B10  5847               	subwfb	(move_window@wsect+3)^0,w,c
 18683  002B12  B0D8               	btfsc	status,0,c
 18684  002B14  D033               	goto	l10568
 18685                           
 18686                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 18687  002B16  EE20 F01E          	lfsr	2,30
 18688  002B1A  5048               	movf	move_window@fs^0,w,c
 18689  002B1C  26D9               	addwf	fsr2l,f,c
 18690  002B1E  5049               	movf	(move_window@fs+1)^0,w,c
 18691  002B20  22DA               	addwfc	fsr2h,f,c
 18692  002B22  50DF               	movf	indf2,w,c
 18693  002B24  6E43               	movwf	move_window@n^0,c
 18694  002B26                     l10556:
 18695  002B26  0E02               	movlw	2
 18696  002B28  6043               	cpfslt	move_window@n^0,c
 18697  002B2A  D001               	goto	l10560
 18698  002B2C  D027               	goto	l10568
 18699  002B2E                     l10560:
 18700                           
 18701                           ;tff.c: 95: wsect += fs->sects_fat;
 18702  002B2E  EE20 F014          	lfsr	2,20
 18703  002B32  5048               	movf	move_window@fs^0,w,c
 18704  002B34  26D9               	addwf	fsr2l,f,c
 18705  002B36  5049               	movf	(move_window@fs+1)^0,w,c
 18706  002B38  22DA               	addwfc	fsr2h,f,c
 18707  002B3A  CFDE F039          	movff	postinc2,??_move_window
 18708  002B3E  CFDD F03A          	movff	postdec2,??_move_window+1
 18709  002B42  5039               	movf	??_move_window^0,w,c
 18710  002B44  2644               	addwf	move_window@wsect^0,f,c
 18711  002B46  503A               	movf	(??_move_window+1)^0,w,c
 18712  002B48  2245               	addwfc	(move_window@wsect+1)^0,f,c
 18713  002B4A  0E00               	movlw	0
 18714  002B4C  2246               	addwfc	(move_window@wsect+2)^0,f,c
 18715  002B4E  0E00               	movlw	0
 18716  002B50  2247               	addwfc	(move_window@wsect+3)^0,f,c
 18717                           
 18718                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 18719  002B52  0E20               	movlw	32
 18720  002B54  2448               	addwf	move_window@fs^0,w,c
 18721  002B56  6E29               	movwf	disk_write@buff^0,c
 18722  002B58  0E00               	movlw	0
 18723  002B5A  2049               	addwfc	(move_window@fs+1)^0,w,c
 18724  002B5C  6E2A               	movwf	(disk_write@buff+1)^0,c
 18725  002B5E  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18726  002B62  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18727  002B66  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18728  002B6A  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18729  002B6E  0E01               	movlw	1
 18730  002B70  6E2F               	movwf	disk_write@count^0,c
 18731  002B72  0E00               	movlw	0
 18732  002B74  EC34  F029         	call	_disk_write
 18733  002B78  0643               	decf	move_window@n^0,f,c
 18734  002B7A  D7D5               	goto	l10556
 18735  002B7C                     l10568:
 18736                           
 18737                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 18738  002B7C  5035               	movf	move_window@sector^0,w,c
 18739  002B7E  1036               	iorwf	(move_window@sector+1)^0,w,c
 18740  002B80  1037               	iorwf	(move_window@sector+2)^0,w,c
 18741  002B82  1038               	iorwf	(move_window@sector+3)^0,w,c
 18742  002B84  B4D8               	btfsc	status,2,c
 18743  002B86  D024               	goto	l10578
 18744                           
 18745                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 18746  002B88  0E20               	movlw	32
 18747  002B8A  2448               	addwf	move_window@fs^0,w,c
 18748  002B8C  6E29               	movwf	disk_read@buff^0,c
 18749  002B8E  0E00               	movlw	0
 18750  002B90  2049               	addwfc	(move_window@fs+1)^0,w,c
 18751  002B92  6E2A               	movwf	(disk_read@buff+1)^0,c
 18752  002B94  C035  F02B         	movff	move_window@sector,disk_read@sector
 18753  002B98  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 18754  002B9C  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 18755  002BA0  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 18756  002BA4  0E01               	movlw	1
 18757  002BA6  6E2F               	movwf	disk_read@count^0,c
 18758  002BA8  0E00               	movlw	0
 18759  002BAA  EC22  F026         	call	_disk_read
 18760  002BAE  0900               	iorlw	0
 18761  002BB0  A4D8               	btfss	status,2,c
 18762  002BB2  D779               	goto	u11730
 18763                           
 18764                           ;tff.c: 104: fs->winsect = sector;
 18765  002BB4  EE20 F004          	lfsr	2,4
 18766  002BB8  5048               	movf	move_window@fs^0,w,c
 18767  002BBA  26D9               	addwf	fsr2l,f,c
 18768  002BBC  5049               	movf	(move_window@fs+1)^0,w,c
 18769  002BBE  22DA               	addwfc	fsr2h,f,c
 18770  002BC0  C035  FFDE         	movff	move_window@sector,postinc2
 18771  002BC4  C036  FFDE         	movff	move_window@sector+1,postinc2
 18772  002BC8  C037  FFDE         	movff	move_window@sector+2,postinc2
 18773  002BCC  C038  FFDE         	movff	move_window@sector+3,postinc2
 18774  002BD0                     l10578:
 18775                           
 18776                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18777  002BD0  0E01               	movlw	1
 18778  002BD2  0012               	return		;funcret
 18779  002BD4                     __end_of_move_window:
 18780                           	callstack 0
 18781                           
 18782 ;; *************** function _disk_write *****************
 18783 ;; Defined at:
 18784 ;;		line 150 in file "bibliotecas/diskio.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;  pdrv            1    wreg     unsigned char 
 18787 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18788 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18789 ;;  sector          4   42[COMRAM] unsigned long 
 18790 ;;  count           1   46[COMRAM] unsigned char 
 18791 ;; Auto vars:     Size  Location     Type
 18792 ;;  pdrv            1   48[COMRAM] unsigned char 
 18793 ;;  result          2   49[COMRAM] int 
 18794 ;;  res             1   51[COMRAM] enum E25
 18795 ;; Return value:  Size  Location     Type
 18796 ;;                  1    wreg      enum E25
 18797 ;; Registers used:
 18798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18799 ;; Tracked objects:
 18800 ;;		On entry : 0/0
 18801 ;;		On exit  : 0/0
 18802 ;;		Unchanged: 0/0
 18803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18804 ;;      Params:         7       0       0       0       0       0       0       0       0
 18805 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18806 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18807 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18808 ;;Total ram usage:       12 bytes
 18809 ;; Hardware stack levels used:    1
 18810 ;; Hardware stack levels required when called:    6
 18811 ;; This function calls:
 18812 ;;		_sdc_disk_write
 18813 ;; This function is called by:
 18814 ;;		_move_window
 18815 ;;		_reserve_direntry
 18816 ;;		_f_write
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text104
 18821  005268                     __ptext104:
 18822                           	callstack 0
 18823  005268                     _disk_write:
 18824                           	callstack 15
 18825                           
 18826                           ;incstack = 0
 18827                           ;disk_write@pdrv stored from wreg
 18828  005268  6E31               	movwf	disk_write@pdrv^0,c
 18829                           
 18830                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18831  00526A  D018               	goto	l10432
 18832  00526C                     l10410:
 18833                           
 18834                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18835  00526C  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18836  005270  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18837  005274  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18838  005278  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18839  00527C  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18840  005280  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18841  005284  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18842  005288  ECEA  F015         	call	_sdc_disk_write	;wreg free
 18843  00528C  6E30               	movwf	??_disk_write^0,c
 18844  00528E  5030               	movf	??_disk_write^0,w,c
 18845  005290  6E32               	movwf	disk_write@result^0,c
 18846  005292  6A33               	clrf	(disk_write@result+1)^0,c
 18847                           
 18848                           ;diskio.c: 165: res = result;
 18849  005294  C032  F034         	movff	disk_write@result,disk_write@res
 18850  005298                     l10414:
 18851                           
 18852                           ;diskio.c: 168: return res;
 18853  005298  5034               	movf	disk_write@res^0,w,c
 18854  00529A  0012               	return	
 18855  00529C                     l10432:
 18856  00529C  5031               	movf	disk_write@pdrv^0,w,c
 18857                           
 18858                           ; Switch size 1, requested type "simple"
 18859                           ; Number of cases is 3, Range of values is 0 to 2
 18860                           ; switch strategies available:
 18861                           ; Name         Instructions Cycles
 18862                           ; simple_byte           10     6 (average)
 18863                           ;	Chosen strategy is simple_byte
 18864  00529E  0A00               	xorlw	0	; case 0
 18865  0052A0  B4D8               	btfsc	status,2,c
 18866  0052A2  D7E4               	goto	l10410
 18867  0052A4  0A01               	xorlw	1	; case 1
 18868  0052A6  B4D8               	btfsc	status,2,c
 18869  0052A8  D7E1               	goto	l10410
 18870  0052AA  0A03               	xorlw	3	; case 2
 18871  0052AC  B4D8               	btfsc	status,2,c
 18872  0052AE  D7F4               	goto	l10414
 18873                           
 18874                           ;diskio.c: 189: return RES_PARERR;
 18875  0052B0  0E04               	movlw	4
 18876  0052B2  0012               	return		;funcret
 18877  0052B4                     __end_of_disk_write:
 18878                           	callstack 0
 18879                           
 18880 ;; *************** function _sdc_disk_write *****************
 18881 ;; Defined at:
 18882 ;;		line 509 in file "bibliotecas/diskio.c"
 18883 ;; Parameters:    Size  Location     Type
 18884 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18885 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18886 ;;  sector          4   23[COMRAM] unsigned long 
 18887 ;;  count           1   27[COMRAM] unsigned char 
 18888 ;; Auto vars:     Size  Location     Type
 18889 ;;  j               2   37[COMRAM] int 
 18890 ;;  count1          2   34[COMRAM] int 
 18891 ;;  i               2    0        int 
 18892 ;;  buff            1   39[COMRAM] unsigned char 
 18893 ;;  res             1   36[COMRAM] enum E25
 18894 ;; Return value:  Size  Location     Type
 18895 ;;                  1    wreg      enum E25
 18896 ;; Registers used:
 18897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18898 ;; Tracked objects:
 18899 ;;		On entry : 0/0
 18900 ;;		On exit  : 0/0
 18901 ;;		Unchanged: 0/0
 18902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18903 ;;      Params:         7       0       0       0       0       0       0       0       0
 18904 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18905 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18906 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18907 ;;Total ram usage:       19 bytes
 18908 ;; Hardware stack levels used:    1
 18909 ;; Hardware stack levels required when called:    5
 18910 ;; This function calls:
 18911 ;;		_command
 18912 ;;		_dummy_clocks
 18913 ;;		_escreve_SPI
 18914 ;;		_leitura_SPI
 18915 ;;		_proceed
 18916 ;;		_response
 18917 ;; This function is called by:
 18918 ;;		_disk_write
 18919 ;; This function uses a non-reentrant model
 18920 ;;
 18921                           
 18922                           	psect	text105
 18923  002BD4                     __ptext105:
 18924                           	callstack 0
 18925  002BD4                     _sdc_disk_write:
 18926                           	callstack 15
 18927                           
 18928                           ;incstack = 0
 18929  002BD4  0E00               	movlw	0
 18930  002BD6  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18931  002BD8  0E00               	movlw	0
 18932  002BDA  6E23               	movwf	sdc_disk_write@count1^0,c
 18933                           
 18934                           ;diskio.c: 515: if(count>1)
 18935  002BDC  0E01               	movlw	1
 18936  002BDE  641C               	cpfsgt	sdc_disk_write@count^0,c
 18937  002BE0  D065               	goto	l144
 18938                           
 18939                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18940  002BE2  9E8B               	bcf	139,7,c	;volatile
 18941                           
 18942                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18943  002BE4  9A8A               	bcf	138,5,c	;volatile
 18944                           
 18945                           ;diskio.c: 519: dummy_clocks(10);
 18946  002BE6  0E0A               	movlw	10
 18947  002BE8  ECD1  F02A         	call	_dummy_clocks
 18948                           
 18949                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18950  002BEC  501C               	movf	sdc_disk_write@count^0,w,c
 18951  002BEE  6E0F               	movwf	command@arg^0,c
 18952  002BF0  6A10               	clrf	(command@arg+1)^0,c
 18953  002BF2  6A11               	clrf	(command@arg+2)^0,c
 18954  002BF4  6A12               	clrf	(command@arg+3)^0,c
 18955  002BF6  0EFF               	movlw	255
 18956  002BF8  6E13               	movwf	command@CRC^0,c
 18957  002BFA  0E57               	movlw	87
 18958  002BFC  ECB5  F027         	call	_command
 18959                           
 18960                           ;diskio.c: 521: proceed();
 18961  002C00  ECF9  F02D         	call	_proceed	;wreg free
 18962  002C04                     l10298:
 18963                           
 18964                           ;diskio.c: 523: buff = response();
 18965  002C04  ECF3  F02D         	call	_response	;wreg free
 18966  002C08  6E28               	movwf	sdc_disk_write@buff^0,c
 18967                           
 18968                           ;diskio.c: 524: }while(buff!=0X00);
 18969  002C0A  5028               	movf	sdc_disk_write@buff^0,w,c
 18970  002C0C  A4D8               	btfss	status,2,c
 18971  002C0E  D7FA               	goto	l10298
 18972                           
 18973                           ;diskio.c: 526: dummy_clocks(10);
 18974  002C10  0E0A               	movlw	10
 18975  002C12  ECD1  F02A         	call	_dummy_clocks
 18976                           
 18977                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18978  002C16  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18979  002C1A  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18980  002C1E  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18981  002C22  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18982  002C26  0E09               	movlw	9
 18983  002C28                     u11465:
 18984  002C28  90D8               	bcf	status,0,c
 18985  002C2A  361D               	rlcf	??_sdc_disk_write^0,f,c
 18986  002C2C  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18987  002C2E  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18988  002C30  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18989  002C32  2EE8               	decfsz	wreg,f,c
 18990  002C34  D7F9               	goto	u11465
 18991  002C36  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18992  002C3A  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 18993  002C3E  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 18994  002C42  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 18995  002C46  0EFF               	movlw	255
 18996  002C48  6E13               	movwf	command@CRC^0,c
 18997  002C4A  0E59               	movlw	89
 18998  002C4C  ECB5  F027         	call	_command
 18999                           
 19000                           ;diskio.c: 528: proceed();
 19001  002C50  ECF9  F02D         	call	_proceed	;wreg free
 19002  002C54                     l10306:
 19003                           
 19004                           ;diskio.c: 530: buff = response();
 19005  002C54  ECF3  F02D         	call	_response	;wreg free
 19006  002C58  6E28               	movwf	sdc_disk_write@buff^0,c
 19007                           
 19008                           ;diskio.c: 531: }while(buff!=0X00);
 19009  002C5A  5028               	movf	sdc_disk_write@buff^0,w,c
 19010  002C5C  A4D8               	btfss	status,2,c
 19011  002C5E  D7FA               	goto	l10306
 19012                           
 19013                           ;diskio.c: 533: dummy_clocks(1);
 19014  002C60  0E01               	movlw	1
 19015  002C62  ECD1  F02A         	call	_dummy_clocks
 19016                           
 19017                           ;diskio.c: 534: escreve_SPI(0XFC);
 19018  002C66  0EFC               	movlw	252
 19019  002C68  ECD5  F02D         	call	_escreve_SPI
 19020                           
 19021                           ;diskio.c: 535: for(j=0;j<512;j++)
 19022  002C6C  0E00               	movlw	0
 19023  002C6E  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19024  002C70  0E00               	movlw	0
 19025  002C72  6E26               	movwf	sdc_disk_write@j^0,c
 19026  002C74                     l10320:
 19027                           
 19028                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 19029  002C74  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19030  002C78  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19031  002C7C  50DF               	movf	indf2,w,c
 19032  002C7E  ECD5  F02D         	call	_escreve_SPI
 19033                           
 19034                           ;diskio.c: 538: p_buff++;
 19035  002C82  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19036  002C84  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19037  002C86  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19038  002C88  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19039  002C8A  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19040  002C8C  D7F3               	goto	l10320
 19041  002C8E  0E02               	movlw	2
 19042  002C90  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19043  002C92  A0D8               	btfss	status,0,c
 19044  002C94  D7EF               	goto	l10320
 19045                           
 19046                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 19047  002C96  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19048                           
 19049                           ;diskio.c: 541: leitura_SPI();
 19050  002C9A  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19051                           
 19052                           ;diskio.c: 543: dummy_clocks(1);
 19053  002C9E  0E01               	movlw	1
 19054  002CA0  ECD1  F02A         	call	_dummy_clocks
 19055                           
 19056                           ;diskio.c: 544: escreve_SPI(0XFD);
 19057  002CA4  0EFD               	movlw	253
 19058  002CA6  ECD5  F02D         	call	_escreve_SPI
 19059                           
 19060                           ;diskio.c: 546: }
 19061  002CAA  D063               	goto	u11520
 19062  002CAC                     l144:
 19063                           
 19064                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 19065  002CAC  9E8B               	bcf	139,7,c	;volatile
 19066                           
 19067                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 19068  002CAE  9A8A               	bcf	138,5,c	;volatile
 19069                           
 19070                           ;diskio.c: 551: dummy_clocks(10);
 19071  002CB0  0E0A               	movlw	10
 19072  002CB2  ECD1  F02A         	call	_dummy_clocks
 19073                           
 19074                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 19075  002CB6  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 19076  002CBA  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 19077  002CBE  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 19078  002CC2  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 19079  002CC6  0E09               	movlw	9
 19080  002CC8                     u11495:
 19081  002CC8  90D8               	bcf	status,0,c
 19082  002CCA  361D               	rlcf	??_sdc_disk_write^0,f,c
 19083  002CCC  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 19084  002CCE  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 19085  002CD0  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 19086  002CD2  2EE8               	decfsz	wreg,f,c
 19087  002CD4  D7F9               	goto	u11495
 19088  002CD6  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19089  002CDA  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19090  002CDE  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19091  002CE2  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19092  002CE6  0E00               	movlw	0
 19093  002CE8  6E13               	movwf	command@CRC^0,c
 19094  002CEA  0E58               	movlw	88
 19095  002CEC  ECB5  F027         	call	_command
 19096                           
 19097                           ;diskio.c: 553: proceed();
 19098  002CF0  ECF9  F02D         	call	_proceed	;wreg free
 19099  002CF4                     l10338:
 19100                           
 19101                           ;diskio.c: 555: buff = response();
 19102  002CF4  ECF3  F02D         	call	_response	;wreg free
 19103  002CF8  6E28               	movwf	sdc_disk_write@buff^0,c
 19104                           
 19105                           ;diskio.c: 556: }while(buff!=0X00);
 19106  002CFA  5028               	movf	sdc_disk_write@buff^0,w,c
 19107  002CFC  A4D8               	btfss	status,2,c
 19108  002CFE  D7FA               	goto	l10338
 19109                           
 19110                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 19111  002D00  9A8A               	bcf	138,5,c	;volatile
 19112                           
 19113                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 19114  002D02  9E8B               	bcf	139,7,c	;volatile
 19115                           
 19116                           ;diskio.c: 560: dummy_clocks(1);
 19117  002D04  0E01               	movlw	1
 19118  002D06  ECD1  F02A         	call	_dummy_clocks
 19119                           
 19120                           ;diskio.c: 561: escreve_SPI(0XFE);
 19121  002D0A  0EFE               	movlw	254
 19122  002D0C  ECD5  F02D         	call	_escreve_SPI
 19123                           
 19124                           ;diskio.c: 562: for(j=0;j<512;j++)
 19125  002D10  0E00               	movlw	0
 19126  002D12  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19127  002D14  0E00               	movlw	0
 19128  002D16  6E26               	movwf	sdc_disk_write@j^0,c
 19129  002D18                     l10352:
 19130                           
 19131                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 19132  002D18  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19133  002D1C  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19134  002D20  50DF               	movf	indf2,w,c
 19135  002D22  ECD5  F02D         	call	_escreve_SPI
 19136                           
 19137                           ;diskio.c: 565: p_buff++;
 19138  002D26  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19139  002D28  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19140  002D2A  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19141  002D2C  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19142  002D2E  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19143  002D30  D7F3               	goto	l10352
 19144  002D32  0E02               	movlw	2
 19145  002D34  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19146  002D36  A0D8               	btfss	status,0,c
 19147  002D38  D7EF               	goto	l10352
 19148                           
 19149                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 19150  002D3A  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19151                           
 19152                           ;diskio.c: 568: leitura_SPI();
 19153  002D3E  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19154                           
 19155                           ;diskio.c: 570: dummy_clocks(10);
 19156  002D42  0E0A               	movlw	10
 19157  002D44  ECD1  F02A         	call	_dummy_clocks
 19158                           
 19159                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 19160  002D48  0E00               	movlw	0
 19161  002D4A  6E0F               	movwf	command@arg^0,c
 19162  002D4C  0E00               	movlw	0
 19163  002D4E  6E10               	movwf	(command@arg+1)^0,c
 19164  002D50  0E00               	movlw	0
 19165  002D52  6E11               	movwf	(command@arg+2)^0,c
 19166  002D54  0E00               	movlw	0
 19167  002D56  6E12               	movwf	(command@arg+3)^0,c
 19168  002D58  0E00               	movlw	0
 19169  002D5A  6E13               	movwf	command@CRC^0,c
 19170  002D5C  0E4D               	movlw	77
 19171  002D5E  ECB5  F027         	call	_command
 19172                           
 19173                           ;diskio.c: 572: proceed();
 19174  002D62  ECF9  F02D         	call	_proceed	;wreg free
 19175  002D66                     l10368:
 19176                           
 19177                           ;diskio.c: 574: buff = response();
 19178  002D66  ECF3  F02D         	call	_response	;wreg free
 19179  002D6A  6E28               	movwf	sdc_disk_write@buff^0,c
 19180                           
 19181                           ;diskio.c: 575: }while(buff!=0X00 );
 19182  002D6C  5028               	movf	sdc_disk_write@buff^0,w,c
 19183  002D6E  A4D8               	btfss	status,2,c
 19184  002D70  D7FA               	goto	l10368
 19185  002D72                     u11520:
 19186                           
 19187                           ;diskio.c: 576: };diskio.c: 577: return res;
 19188  002D72  5025               	movf	sdc_disk_write@res^0,w,c
 19189  002D74  0012               	return		;funcret
 19190  002D76                     __end_of_sdc_disk_write:
 19191                           	callstack 0
 19192                           
 19193 ;; *************** function _disk_read *****************
 19194 ;; Defined at:
 19195 ;;		line 97 in file "bibliotecas/diskio.c"
 19196 ;; Parameters:    Size  Location     Type
 19197 ;;  pdrv            1    wreg     unsigned char 
 19198 ;;  buff            2   40[COMRAM] PTR unsigned char 
 19199 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19200 ;;  sector          4   42[COMRAM] unsigned long 
 19201 ;;  count           1   46[COMRAM] unsigned char 
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;  pdrv            1   48[COMRAM] unsigned char 
 19204 ;;  result          2   49[COMRAM] int 
 19205 ;;  res             1   51[COMRAM] enum E25
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      enum E25
 19208 ;; Registers used:
 19209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19215 ;;      Params:         7       0       0       0       0       0       0       0       0
 19216 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19217 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19218 ;;      Totals:        12       0       0       0       0       0       0       0       0
 19219 ;;Total ram usage:       12 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:    6
 19222 ;; This function calls:
 19223 ;;		_sdc_disk_read
 19224 ;; This function is called by:
 19225 ;;		_move_window
 19226 ;;		_check_fs
 19227 ;;		_f_read
 19228 ;; This function uses a non-reentrant model
 19229 ;;
 19230                           
 19231                           	psect	text106
 19232  004C44                     __ptext106:
 19233                           	callstack 0
 19234  004C44                     _disk_read:
 19235                           	callstack 15
 19236                           
 19237                           ;incstack = 0
 19238                           ;disk_read@pdrv stored from wreg
 19239  004C44  6E31               	movwf	disk_read@pdrv^0,c
 19240                           
 19241                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 19242  004C46  D029               	goto	l10402
 19243  004C48                     l10378:
 19244                           
 19245                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 19246  004C48  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19247  004C4C  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19248  004C50  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19249  004C54  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19250  004C58  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19251  004C5C  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19252  004C60  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19253  004C64  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19254  004C68  6E30               	movwf	??_disk_read^0,c
 19255  004C6A  5030               	movf	??_disk_read^0,w,c
 19256  004C6C  6E32               	movwf	disk_read@result^0,c
 19257  004C6E  6A33               	clrf	(disk_read@result+1)^0,c
 19258                           
 19259                           ;diskio.c: 115: res = result;
 19260  004C70  C032  F034         	movff	disk_read@result,disk_read@res
 19261  004C74                     l10382:
 19262                           
 19263                           ;diskio.c: 117: return res;
 19264  004C74  5034               	movf	disk_read@res^0,w,c
 19265  004C76  0012               	return	
 19266  004C78                     l10386:
 19267                           
 19268                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 19269  004C78  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19270  004C7C  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19271  004C80  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19272  004C84  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19273  004C88  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19274  004C8C  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19275  004C90  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19276  004C94  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19277  004C98  D7E7               	goto	L7
 19278  004C9A                     l10402:
 19279  004C9A  5031               	movf	disk_read@pdrv^0,w,c
 19280                           
 19281                           ; Switch size 1, requested type "simple"
 19282                           ; Number of cases is 3, Range of values is 0 to 2
 19283                           ; switch strategies available:
 19284                           ; Name         Instructions Cycles
 19285                           ; simple_byte           10     6 (average)
 19286                           ;	Chosen strategy is simple_byte
 19287  004C9C  0A00               	xorlw	0	; case 0
 19288  004C9E  B4D8               	btfsc	status,2,c
 19289  004CA0  D7D3               	goto	l10378
 19290  004CA2  0A01               	xorlw	1	; case 1
 19291  004CA4  B4D8               	btfsc	status,2,c
 19292  004CA6  D7E8               	goto	l10386
 19293  004CA8  0A03               	xorlw	3	; case 2
 19294  004CAA  B4D8               	btfsc	status,2,c
 19295  004CAC  D7E3               	goto	l10382
 19296                           
 19297                           ;diskio.c: 141: return RES_PARERR;
 19298  004CAE  0E04               	movlw	4
 19299  004CB0  0012               	return		;funcret
 19300  004CB2                     __end_of_disk_read:
 19301                           	callstack 0
 19302                           
 19303 ;; *************** function _sdc_disk_read *****************
 19304 ;; Defined at:
 19305 ;;		line 439 in file "bibliotecas/diskio.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 19308 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19309 ;;  sector          4   23[COMRAM] unsigned long 
 19310 ;;  count           1   27[COMRAM] unsigned char 
 19311 ;; Auto vars:     Size  Location     Type
 19312 ;;  start_add       4   33[COMRAM] unsigned long 
 19313 ;;  length          2   37[COMRAM] int 
 19314 ;;  count1          2    0        int 
 19315 ;;  i               2    0        int 
 19316 ;;  buff            1   39[COMRAM] unsigned char 
 19317 ;;  ptr             1    0        unsigned char 
 19318 ;;  res             1    0        enum E25
 19319 ;; Return value:  Size  Location     Type
 19320 ;;                  1    wreg      enum E25
 19321 ;; Registers used:
 19322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19323 ;; Tracked objects:
 19324 ;;		On entry : 0/0
 19325 ;;		On exit  : 0/0
 19326 ;;		Unchanged: 0/0
 19327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19328 ;;      Params:         7       0       0       0       0       0       0       0       0
 19329 ;;      Locals:         8       0       0       0       0       0       0       0       0
 19330 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19331 ;;      Totals:        19       0       0       0       0       0       0       0       0
 19332 ;;Total ram usage:       19 bytes
 19333 ;; Hardware stack levels used:    1
 19334 ;; Hardware stack levels required when called:    5
 19335 ;; This function calls:
 19336 ;;		_command
 19337 ;;		_dummy_clocks
 19338 ;;		_proceed
 19339 ;;		_response
 19340 ;; This function is called by:
 19341 ;;		_disk_read
 19342 ;; This function uses a non-reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text107
 19346  00399A                     __ptext107:
 19347                           	callstack 0
 19348  00399A                     _sdc_disk_read:
 19349                           	callstack 15
 19350                           
 19351                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 19352                           
 19353                           ;incstack = 0
 19354  00399A  0E0A               	movlw	10
 19355  00399C  ECD1  F02A         	call	_dummy_clocks
 19356                           
 19357                           ;diskio.c: 452: start_add = sector*512;
 19358  0039A0  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 19359  0039A4  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 19360  0039A8  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 19361  0039AC  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 19362  0039B0  0E09               	movlw	9
 19363  0039B2                     u11375:
 19364  0039B2  90D8               	bcf	status,0,c
 19365  0039B4  361D               	rlcf	??_sdc_disk_read^0,f,c
 19366  0039B6  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 19367  0039B8  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 19368  0039BA  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 19369  0039BC  2EE8               	decfsz	wreg,f,c
 19370  0039BE  D7F9               	goto	u11375
 19371  0039C0  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 19372  0039C4  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 19373  0039C8  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 19374  0039CC  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 19375                           
 19376                           ;diskio.c: 455: if(sector != 1)
 19377  0039D0  0418               	decf	sdc_disk_read@sector^0,w,c
 19378  0039D2  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 19379  0039D4  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 19380  0039D6  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 19381  0039D8  B4D8               	btfsc	status,2,c
 19382  0039DA  D01B               	goto	l10248
 19383                           
 19384                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 19385  0039DC  0E0A               	movlw	10
 19386  0039DE  ECD1  F02A         	call	_dummy_clocks
 19387                           
 19388                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 19389  0039E2  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 19390  0039E6  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 19391  0039EA  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 19392  0039EE  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 19393  0039F2  0E00               	movlw	0
 19394  0039F4  6E13               	movwf	command@CRC^0,c
 19395  0039F6  0E52               	movlw	82
 19396  0039F8  ECB5  F027         	call	_command
 19397                           
 19398                           ;diskio.c: 459: proceed();
 19399  0039FC  ECF9  F02D         	call	_proceed	;wreg free
 19400  003A00                     l10242:
 19401                           
 19402                           ;diskio.c: 461: buff = response();
 19403  003A00  ECF3  F02D         	call	_response	;wreg free
 19404  003A04  6E28               	movwf	sdc_disk_read@buff^0,c
 19405                           
 19406                           ;diskio.c: 462: }while(buff!=0X00);
 19407  003A06  5028               	movf	sdc_disk_read@buff^0,w,c
 19408  003A08  A4D8               	btfss	status,2,c
 19409  003A0A  D7FA               	goto	l10242
 19410  003A0C                     u11390:
 19411                           
 19412                           ;diskio.c: 463: proceed();
 19413  003A0C  ECF9  F02D         	call	_proceed	;wreg free
 19414                           
 19415                           ;diskio.c: 464: }
 19416  003A10  D01C               	goto	l10260
 19417  003A12                     l10248:
 19418                           
 19419                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 19420  003A12  0E0A               	movlw	10
 19421  003A14  ECD1  F02A         	call	_dummy_clocks
 19422                           
 19423                           ;diskio.c: 468: command(0X51,sector ,0X00);
 19424  003A18  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 19425  003A1C  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 19426  003A20  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 19427  003A24  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 19428  003A28  0E00               	movlw	0
 19429  003A2A  6E13               	movwf	command@CRC^0,c
 19430  003A2C  0E51               	movlw	81
 19431  003A2E  ECB5  F027         	call	_command
 19432                           
 19433                           ;diskio.c: 469: proceed();
 19434  003A32  ECF9  F02D         	call	_proceed	;wreg free
 19435  003A36                     l10252:
 19436                           
 19437                           ;diskio.c: 471: buff = response();
 19438  003A36  ECF3  F02D         	call	_response	;wreg free
 19439  003A3A  6E28               	movwf	sdc_disk_read@buff^0,c
 19440                           
 19441                           ;diskio.c: 472: }while(buff!=0X00);
 19442  003A3C  5028               	movf	sdc_disk_read@buff^0,w,c
 19443  003A3E  B4D8               	btfsc	status,2,c
 19444  003A40  D7E5               	goto	u11390
 19445  003A42  D7F9               	goto	l10252
 19446  003A44                     l10258:
 19447                           
 19448                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 19449  003A44  ECF3  F02D         	call	_response	;wreg free
 19450  003A48  6E28               	movwf	sdc_disk_read@buff^0,c
 19451  003A4A                     l10260:
 19452  003A4A  0EFE               	movlw	254
 19453  003A4C  1828               	xorwf	sdc_disk_read@buff^0,w,c
 19454  003A4E  A4D8               	btfss	status,2,c
 19455  003A50  D7F9               	goto	l10258
 19456                           
 19457                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 19458  003A52  0E00               	movlw	0
 19459  003A54  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 19460  003A56  0E00               	movlw	0
 19461  003A58  6E26               	movwf	sdc_disk_read@length^0,c
 19462                           
 19463                           ;diskio.c: 484: while ( length < 512 )
 19464  003A5A  D00B               	goto	l10268
 19465  003A5C                     l10264:
 19466                           
 19467                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 19468  003A5C  5026               	movf	sdc_disk_read@length^0,w,c
 19469  003A5E  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 19470  003A60  6ED9               	movwf	fsr2l,c
 19471  003A62  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 19472  003A64  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 19473  003A66  6EDA               	movwf	fsr2h,c
 19474  003A68  ECF3  F02D         	call	_response	;wreg free
 19475  003A6C  6EDF               	movwf	indf2,c
 19476                           
 19477                           ;diskio.c: 487: length++;
 19478  003A6E  4A26               	infsnz	sdc_disk_read@length^0,f,c
 19479  003A70  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 19480  003A72                     l10268:
 19481  003A72  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 19482  003A74  D7F3               	goto	l10264
 19483  003A76  0E02               	movlw	2
 19484  003A78  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 19485  003A7A  A0D8               	btfss	status,0,c
 19486  003A7C  D7EF               	goto	l10264
 19487                           
 19488                           ;diskio.c: 491: dummy_clocks(10);
 19489  003A7E  0E0A               	movlw	10
 19490  003A80  ECD1  F02A         	call	_dummy_clocks
 19491                           
 19492                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 19493  003A84  0E00               	movlw	0
 19494  003A86  6E0F               	movwf	command@arg^0,c
 19495  003A88  0E00               	movlw	0
 19496  003A8A  6E10               	movwf	(command@arg+1)^0,c
 19497  003A8C  0E00               	movlw	0
 19498  003A8E  6E11               	movwf	(command@arg+2)^0,c
 19499  003A90  0E00               	movlw	0
 19500  003A92  6E12               	movwf	(command@arg+3)^0,c
 19501  003A94  0E00               	movlw	0
 19502  003A96  6E13               	movwf	command@CRC^0,c
 19503  003A98  0E4C               	movlw	76
 19504  003A9A  ECB5  F027         	call	_command
 19505                           
 19506                           ;diskio.c: 494: proceed();
 19507  003A9E  ECF9  F02D         	call	_proceed	;wreg free
 19508  003AA2                     l10278:
 19509                           
 19510                           ;diskio.c: 496: buff = response();
 19511  003AA2  ECF3  F02D         	call	_response	;wreg free
 19512  003AA6  6E28               	movwf	sdc_disk_read@buff^0,c
 19513                           
 19514                           ;diskio.c: 497: }while(buff!=0xFF);
 19515  003AA8  2828               	incf	sdc_disk_read@buff^0,w,c
 19516  003AAA  A4D8               	btfss	status,2,c
 19517  003AAC  D7FA               	goto	l10278
 19518                           
 19519                           ;diskio.c: 500: return RES_OK;
 19520  003AAE  0E00               	movlw	0
 19521  003AB0  0012               	return		;funcret
 19522  003AB2                     __end_of_sdc_disk_read:
 19523                           	callstack 0
 19524                           
 19525 ;; *************** function _response *****************
 19526 ;; Defined at:
 19527 ;;		line 61 in file "bibliotecas/SDCard.c"
 19528 ;; Parameters:    Size  Location     Type
 19529 ;;		None
 19530 ;; Auto vars:     Size  Location     Type
 19531 ;;  buff            1    9[COMRAM] unsigned char 
 19532 ;; Return value:  Size  Location     Type
 19533 ;;                  1    wreg      unsigned char 
 19534 ;; Registers used:
 19535 ;;		wreg, status,2, cstack
 19536 ;; Tracked objects:
 19537 ;;		On entry : 0/0
 19538 ;;		On exit  : 0/0
 19539 ;;		Unchanged: 0/0
 19540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19541 ;;      Params:         0       0       0       0       0       0       0       0       0
 19542 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19544 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19545 ;;Total ram usage:        1 bytes
 19546 ;; Hardware stack levels used:    1
 19547 ;; Hardware stack levels required when called:    3
 19548 ;; This function calls:
 19549 ;;		_leitura_SPI
 19550 ;; This function is called by:
 19551 ;;		_sdc_reset
 19552 ;;		_sdc_disk_initialize
 19553 ;;		_sdc_disk_read
 19554 ;;		_sdc_disk_write
 19555 ;; This function uses a non-reentrant model
 19556 ;;
 19557                           
 19558                           	psect	text108
 19559  005BE6                     __ptext108:
 19560                           	callstack 0
 19561  005BE6                     _response:
 19562                           	callstack 16
 19563                           
 19564                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 19565                           
 19566                           ;incstack = 0
 19567  005BE6  9A8A               	bcf	138,5,c	;volatile
 19568                           
 19569                           ;SDCard.c: 65: buff= leitura_SPI();
 19570  005BE8  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19571  005BEC  6E0A               	movwf	response@buff^0,c
 19572                           
 19573                           ;SDCard.c: 66: return buff;
 19574  005BEE  500A               	movf	response@buff^0,w,c
 19575  005BF0  0012               	return		;funcret
 19576  005BF2                     __end_of_response:
 19577                           	callstack 0
 19578                           
 19579 ;; *************** function _proceed *****************
 19580 ;; Defined at:
 19581 ;;		line 94 in file "bibliotecas/SDCard.c"
 19582 ;; Parameters:    Size  Location     Type
 19583 ;;		None
 19584 ;; Auto vars:     Size  Location     Type
 19585 ;;		None
 19586 ;; Return value:  Size  Location     Type
 19587 ;;                  1    wreg      void 
 19588 ;; Registers used:
 19589 ;;		wreg, cstack
 19590 ;; Tracked objects:
 19591 ;;		On entry : 0/0
 19592 ;;		On exit  : 0/0
 19593 ;;		Unchanged: 0/0
 19594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19595 ;;      Params:         0       0       0       0       0       0       0       0       0
 19596 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19598 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19599 ;;Total ram usage:        0 bytes
 19600 ;; Hardware stack levels used:    1
 19601 ;; Hardware stack levels required when called:    3
 19602 ;; This function calls:
 19603 ;;		_escreve_SPI
 19604 ;; This function is called by:
 19605 ;;		_sdc_reset
 19606 ;;		_sdc_disk_initialize
 19607 ;;		_sdc_disk_read
 19608 ;;		_sdc_disk_write
 19609 ;; This function uses a non-reentrant model
 19610 ;;
 19611                           
 19612                           	psect	text109
 19613  005BF2                     __ptext109:
 19614                           	callstack 0
 19615  005BF2                     _proceed:
 19616                           	callstack 16
 19617                           
 19618                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 19619                           
 19620                           ;incstack = 0
 19621  005BF2  9A8A               	bcf	138,5,c	;volatile
 19622                           
 19623                           ;SDCard.c: 97: escreve_SPI(0xFF);
 19624  005BF4  0EFF               	movlw	255
 19625  005BF6  ECD5  F02D         	call	_escreve_SPI
 19626                           
 19627                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 19628  005BFA  8A8A               	bsf	138,5,c	;volatile
 19629  005BFC  0012               	return		;funcret
 19630  005BFE                     __end_of_proceed:
 19631                           	callstack 0
 19632                           
 19633 ;; *************** function _command *****************
 19634 ;; Defined at:
 19635 ;;		line 127 in file "bibliotecas/SDCard.c"
 19636 ;; Parameters:    Size  Location     Type
 19637 ;;  CMD             1    wreg     unsigned char 
 19638 ;;  arg             4   14[COMRAM] unsigned long 
 19639 ;;  CRC             1   18[COMRAM] unsigned char 
 19640 ;; Auto vars:     Size  Location     Type
 19641 ;;  CMD             1   19[COMRAM] unsigned char 
 19642 ;;  argument        1   20[COMRAM] unsigned char 
 19643 ;; Return value:  Size  Location     Type
 19644 ;;                  1    wreg      void 
 19645 ;; Registers used:
 19646 ;;		wreg, status,2, status,0, cstack
 19647 ;; Tracked objects:
 19648 ;;		On entry : 0/0
 19649 ;;		On exit  : 0/0
 19650 ;;		Unchanged: 0/0
 19651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19652 ;;      Params:         5       0       0       0       0       0       0       0       0
 19653 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19655 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19656 ;;Total ram usage:        7 bytes
 19657 ;; Hardware stack levels used:    1
 19658 ;; Hardware stack levels required when called:    4
 19659 ;; This function calls:
 19660 ;;		_dummy_clocks
 19661 ;;		_escreve_SPI
 19662 ;;		_wait_ready
 19663 ;; This function is called by:
 19664 ;;		_sdc_reset
 19665 ;;		_sdc_disk_initialize
 19666 ;;		_sdc_disk_read
 19667 ;;		_sdc_disk_write
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           	psect	text110
 19672  004F6A                     __ptext110:
 19673                           	callstack 0
 19674  004F6A                     _command:
 19675                           	callstack 15
 19676                           
 19677                           ;incstack = 0
 19678                           ;command@CMD stored from wreg
 19679  004F6A  6E14               	movwf	command@CMD^0,c
 19680                           
 19681                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 19682  004F6C  EC43  F02B         	call	_wait_ready	;wreg free
 19683  004F70  0AFF               	xorlw	255
 19684  004F72  A4D8               	btfss	status,2,c
 19685  004F74  D004               	goto	l702
 19686  004F76  D008               	goto	u11360
 19687  004F78                     l10192:
 19688                           
 19689                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 19690  004F78  0E0A               	movlw	10
 19691  004F7A  ECD1  F02A         	call	_dummy_clocks
 19692  004F7E                     l702:
 19693  004F7E  EC43  F02B         	call	_wait_ready	;wreg free
 19694  004F82  0AFF               	xorlw	255
 19695  004F84  A4D8               	btfss	status,2,c
 19696  004F86  D7F8               	goto	l10192
 19697  004F88                     u11360:
 19698                           
 19699                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 19700  004F88  0EFF               	movlw	255
 19701  004F8A  ECD5  F02D         	call	_escreve_SPI
 19702                           
 19703                           ;SDCard.c: 139: escreve_SPI(CMD);
 19704  004F8E  5014               	movf	command@CMD^0,w,c
 19705  004F90  ECD5  F02D         	call	_escreve_SPI
 19706                           
 19707                           ;SDCard.c: 140: argument = arg>>24;
 19708  004F94  C012  F015         	movff	command@arg+3,command@argument
 19709                           
 19710                           ;SDCard.c: 141: escreve_SPI(argument);
 19711  004F98  5015               	movf	command@argument^0,w,c
 19712  004F9A  ECD5  F02D         	call	_escreve_SPI
 19713                           
 19714                           ;SDCard.c: 142: argument = arg>>16;
 19715  004F9E  C011  F015         	movff	command@arg+2,command@argument
 19716                           
 19717                           ;SDCard.c: 143: escreve_SPI(argument);
 19718  004FA2  5015               	movf	command@argument^0,w,c
 19719  004FA4  ECD5  F02D         	call	_escreve_SPI
 19720                           
 19721                           ;SDCard.c: 144: argument = arg>>8;
 19722  004FA8  C010  F015         	movff	command@arg+1,command@argument
 19723                           
 19724                           ;SDCard.c: 145: escreve_SPI(argument);
 19725  004FAC  5015               	movf	command@argument^0,w,c
 19726  004FAE  ECD5  F02D         	call	_escreve_SPI
 19727                           
 19728                           ;SDCard.c: 146: argument = arg;
 19729  004FB2  C00F  F015         	movff	command@arg,command@argument
 19730                           
 19731                           ;SDCard.c: 147: escreve_SPI(argument);
 19732  004FB6  5015               	movf	command@argument^0,w,c
 19733  004FB8  ECD5  F02D         	call	_escreve_SPI
 19734                           
 19735                           ;SDCard.c: 148: escreve_SPI(CRC);
 19736  004FBC  5013               	movf	command@CRC^0,w,c
 19737  004FBE  ECD5  F02D         	call	_escreve_SPI
 19738  004FC2  0012               	return		;funcret
 19739  004FC4                     __end_of_command:
 19740                           	callstack 0
 19741                           
 19742 ;; *************** function _wait_ready *****************
 19743 ;; Defined at:
 19744 ;;		line 107 in file "bibliotecas/SDCard.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;		None
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;  msg            10    0        unsigned char [10]
 19749 ;;  timeout         4    9[COMRAM] unsigned long 
 19750 ;;  res             1   13[COMRAM] unsigned char 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1    wreg      unsigned char 
 19753 ;; Registers used:
 19754 ;;		wreg, status,2, status,0, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0
 19761 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19763 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19764 ;;Total ram usage:        5 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    3
 19767 ;; This function calls:
 19768 ;;		_leitura_SPI
 19769 ;; This function is called by:
 19770 ;;		_command
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text111
 19775  005686                     __ptext111:
 19776                           	callstack 0
 19777  005686                     _wait_ready:
 19778                           	callstack 15
 19779                           
 19780                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19781                           
 19782                           ;incstack = 0
 19783  005686  0EFF               	movlw	255
 19784  005688  6E0A               	movwf	wait_ready@timeout^0,c
 19785  00568A  0E7F               	movlw	127
 19786  00568C  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19787  00568E  0E00               	movlw	0
 19788  005690  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19789  005692  0E00               	movlw	0
 19790  005694  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19791  005696                     l10178:
 19792                           
 19793                           ;SDCard.c: 114: res = leitura_SPI();
 19794  005696  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19795  00569A  6E0E               	movwf	wait_ready@res^0,c
 19796                           
 19797                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19798  00569C  280E               	incf	wait_ready@res^0,w,c
 19799  00569E  B4D8               	btfsc	status,2,c
 19800  0056A0  D00B               	goto	u11340
 19801  0056A2  060A               	decf	wait_ready@timeout^0,f,c
 19802  0056A4  0E00               	movlw	0
 19803  0056A6  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19804  0056A8  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19805  0056AA  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19806  0056AC  500A               	movf	wait_ready@timeout^0,w,c
 19807  0056AE  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19808  0056B0  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19809  0056B2  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19810  0056B4  A4D8               	btfss	status,2,c
 19811  0056B6  D7EF               	goto	l10178
 19812  0056B8                     u11340:
 19813                           
 19814                           ;SDCard.c: 117: return res;
 19815  0056B8  500E               	movf	wait_ready@res^0,w,c
 19816  0056BA  0012               	return		;funcret
 19817  0056BC                     __end_of_wait_ready:
 19818                           	callstack 0
 19819                           
 19820 ;; *************** function _escreve_SPI *****************
 19821 ;; Defined at:
 19822 ;;		line 105 in file "bibliotecas/SPI.c"
 19823 ;; Parameters:    Size  Location     Type
 19824 ;;  dado            1    wreg     unsigned char 
 19825 ;; Auto vars:     Size  Location     Type
 19826 ;;  dado            1   10[COMRAM] unsigned char 
 19827 ;;  TempVar         1    0        unsigned char 
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  1    wreg      void 
 19830 ;; Registers used:
 19831 ;;		wreg
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19837 ;;      Params:         0       0       0       0       0       0       0       0       0
 19838 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19840 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19841 ;;Total ram usage:        2 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; Hardware stack levels required when called:    2
 19844 ;; This function calls:
 19845 ;;		Nothing
 19846 ;; This function is called by:
 19847 ;;		_sdc_disk_write
 19848 ;;		_proceed
 19849 ;;		_command
 19850 ;; This function uses a non-reentrant model
 19851 ;;
 19852                           
 19853                           	psect	text112
 19854  005BAA                     __ptext112:
 19855                           	callstack 0
 19856  005BAA                     _escreve_SPI:
 19857                           	callstack 16
 19858                           
 19859                           ;incstack = 0
 19860                           ;escreve_SPI@dado stored from wreg
 19861  005BAA  6E0B               	movwf	escreve_SPI@dado^0,c
 19862  005BAC  50C9               	movf	201,w,c	;volatile
 19863                           
 19864                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19865  005BAE  969E               	bcf	158,3,c	;volatile
 19866                           
 19867                           ;SPI.c: 111: SSPBUF = dado;
 19868  005BB0  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19869  005BB4                     l806:
 19870  005BB4  B69E               	btfsc	158,3,c	;volatile
 19871  005BB6  0012               	return	
 19872  005BB8  D7FD               	goto	l806
 19873  005BBA                     __end_of_escreve_SPI:
 19874                           	callstack 0
 19875                           
 19876 ;; *************** function _dummy_clocks *****************
 19877 ;; Defined at:
 19878 ;;		line 76 in file "bibliotecas/SDCard.c"
 19879 ;; Parameters:    Size  Location     Type
 19880 ;;  n               1    wreg     unsigned char 
 19881 ;; Auto vars:     Size  Location     Type
 19882 ;;  n               1   11[COMRAM] unsigned char 
 19883 ;;  i               2   12[COMRAM] unsigned int 
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  1    wreg      void 
 19886 ;; Registers used:
 19887 ;;		wreg, status,2, status,0, cstack
 19888 ;; Tracked objects:
 19889 ;;		On entry : 0/0
 19890 ;;		On exit  : 0/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19893 ;;      Params:         0       0       0       0       0       0       0       0       0
 19894 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19895 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19896 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19897 ;;Total ram usage:        5 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; Hardware stack levels required when called:    3
 19900 ;; This function calls:
 19901 ;;		_leitura_SPI
 19902 ;; This function is called by:
 19903 ;;		_sdc_disk_initialize
 19904 ;;		_sdc_disk_read
 19905 ;;		_sdc_disk_write
 19906 ;;		_command
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text113
 19911  0055A2                     __ptext113:
 19912                           	callstack 0
 19913  0055A2                     _dummy_clocks:
 19914                           	callstack 16
 19915                           
 19916                           ;incstack = 0
 19917                           ;dummy_clocks@n stored from wreg
 19918  0055A2  6E0C               	movwf	dummy_clocks@n^0,c
 19919                           
 19920                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19921  0055A4  0E10               	movlw	16
 19922  0055A6  6E0A               	movwf	??_dummy_clocks^0,c
 19923  0055A8  0E94               	movlw	148
 19924  0055AA                     u16747:
 19925  0055AA  2EE8               	decfsz	wreg,f,c
 19926  0055AC  D7FE               	bra	u16747
 19927  0055AE  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19928  0055B0  D7FC               	bra	u16747
 19929  0055B2  D000               	nop2	
 19930                           
 19931                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19932  0055B4  0E00               	movlw	0
 19933  0055B6  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19934  0055B8  0E00               	movlw	0
 19935  0055BA  6E0D               	movwf	dummy_clocks@i^0,c
 19936  0055BC  D006               	goto	l10170
 19937  0055BE                     l686:
 19938                           
 19939                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19940  0055BE  8A8A               	bsf	138,5,c	;volatile
 19941                           
 19942                           ;SDCard.c: 83: leitura_SPI();
 19943  0055C0  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19944                           
 19945                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19946  0055C4  9A8A               	bcf	138,5,c	;volatile
 19947  0055C6  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19948  0055C8  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19949  0055CA                     l10170:
 19950  0055CA  500C               	movf	dummy_clocks@n^0,w,c
 19951  0055CC  6E0A               	movwf	??_dummy_clocks^0,c
 19952  0055CE  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19953  0055D0  500A               	movf	??_dummy_clocks^0,w,c
 19954  0055D2  5C0D               	subwf	dummy_clocks@i^0,w,c
 19955  0055D4  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19956  0055D6  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19957  0055D8  B0D8               	btfsc	status,0,c
 19958  0055DA  0012               	return	
 19959  0055DC  D7F0               	goto	l686
 19960  0055DE                     __end_of_dummy_clocks:
 19961                           	callstack 0
 19962                           
 19963 ;; *************** function _leitura_SPI *****************
 19964 ;; Defined at:
 19965 ;;		line 90 in file "bibliotecas/SPI.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;		None
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;		None
 19970 ;; Return value:  Size  Location     Type
 19971 ;;                  1    wreg      unsigned char 
 19972 ;; Registers used:
 19973 ;;		wreg, status,2
 19974 ;; Tracked objects:
 19975 ;;		On entry : 0/0
 19976 ;;		On exit  : 0/0
 19977 ;;		Unchanged: 0/0
 19978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19979 ;;      Params:         0       0       0       0       0       0       0       0       0
 19980 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19981 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19982 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19983 ;;Total ram usage:        0 bytes
 19984 ;; Hardware stack levels used:    1
 19985 ;; Hardware stack levels required when called:    2
 19986 ;; This function calls:
 19987 ;;		Nothing
 19988 ;; This function is called by:
 19989 ;;		_sdc_disk_write
 19990 ;;		_response
 19991 ;;		_dummy_clocks
 19992 ;;		_wait_ready
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           	psect	text114
 19997  005BFE                     __ptext114:
 19998                           	callstack 0
 19999  005BFE                     _leitura_SPI:
 20000                           	callstack 16
 20001                           
 20002                           ;SPI.c: 92: SSPBUF = 0xFF;
 20003                           
 20004                           ;incstack = 0
 20005  005BFE  68C9               	setf	201,c	;volatile
 20006                           
 20007                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 20008  005C00  90C7               	bcf	199,0,c	;volatile
 20009  005C02                     l800:
 20010  005C02  A0C7               	btfss	199,0,c	;volatile
 20011  005C04  D7FE               	goto	l800
 20012                           
 20013                           ;SPI.c: 95: return (SSPBUF);
 20014  005C06  50C9               	movf	201,w,c	;volatile
 20015  005C08  0012               	return		;funcret
 20016  005C0A                     __end_of_leitura_SPI:
 20017                           	callstack 0
 20018                           
 20019 ;; *************** function _disk_ioctl *****************
 20020 ;; Defined at:
 20021 ;;		line 198 in file "bibliotecas/diskio.c"
 20022 ;; Parameters:    Size  Location     Type
 20023 ;;  pdrv            1    wreg     unsigned char 
 20024 ;;  cmd             1    9[COMRAM] unsigned char 
 20025 ;;  buff            2   10[COMRAM] PTR void 
 20026 ;;		 -> NULL(0), 
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;  pdrv            1   12[COMRAM] unsigned char 
 20029 ;;  result          2    0        int 
 20030 ;;  res             1   13[COMRAM] enum E25
 20031 ;; Return value:  Size  Location     Type
 20032 ;;                  1    wreg      enum E25
 20033 ;; Registers used:
 20034 ;;		wreg, status,2, status,0
 20035 ;; Tracked objects:
 20036 ;;		On entry : 0/0
 20037 ;;		On exit  : 0/0
 20038 ;;		Unchanged: 0/0
 20039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20040 ;;      Params:         3       0       0       0       0       0       0       0       0
 20041 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20043 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20044 ;;Total ram usage:        5 bytes
 20045 ;; Hardware stack levels used:    1
 20046 ;; Hardware stack levels required when called:    2
 20047 ;; This function calls:
 20048 ;;		Nothing
 20049 ;; This function is called by:
 20050 ;;		_sync
 20051 ;; This function uses a non-reentrant model
 20052 ;;
 20053                           
 20054                           	psect	text115
 20055  005AA2                     __ptext115:
 20056                           	callstack 0
 20057  005AA2                     _disk_ioctl:
 20058                           	callstack 21
 20059                           
 20060                           ;incstack = 0
 20061                           ;disk_ioctl@pdrv stored from wreg
 20062  005AA2  6E0D               	movwf	disk_ioctl@pdrv^0,c
 20063                           
 20064                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 20065  005AA4  D002               	goto	l11100
 20066  005AA6                     l68:
 20067                           
 20068                           ;diskio.c: 212: return res;
 20069  005AA6  500E               	movf	disk_ioctl@res^0,w,c
 20070  005AA8  0012               	return	
 20071  005AAA                     l11100:
 20072  005AAA  500D               	movf	disk_ioctl@pdrv^0,w,c
 20073                           
 20074                           ; Switch size 1, requested type "simple"
 20075                           ; Number of cases is 3, Range of values is 0 to 2
 20076                           ; switch strategies available:
 20077                           ; Name         Instructions Cycles
 20078                           ; simple_byte           10     6 (average)
 20079                           ;	Chosen strategy is simple_byte
 20080  005AAC  0A00               	xorlw	0	; case 0
 20081  005AAE  B4D8               	btfsc	status,2,c
 20082  005AB0  D7FA               	goto	l68
 20083  005AB2  0A01               	xorlw	1	; case 1
 20084  005AB4  B4D8               	btfsc	status,2,c
 20085  005AB6  D7F7               	goto	l68
 20086  005AB8  0A03               	xorlw	3	; case 2
 20087  005ABA  B4D8               	btfsc	status,2,c
 20088  005ABC  D7F4               	goto	l68
 20089                           
 20090                           ;diskio.c: 227: return RES_PARERR;
 20091  005ABE  0E04               	movlw	4
 20092  005AC0  0012               	return		;funcret
 20093  005AC2                     __end_of_disk_ioctl:
 20094                           	callstack 0
 20095                           
 20096 ;; *************** function _get_fattime *****************
 20097 ;; Defined at:
 20098 ;;		line 810 in file "bibliotecas/tff.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;		None
 20101 ;; Auto vars:     Size  Location     Type
 20102 ;;  f_time         10   55[COMRAM] struct .
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  4   13[COMRAM] unsigned long 
 20105 ;; Registers used:
 20106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20107 ;; Tracked objects:
 20108 ;;		On entry : 3F/0
 20109 ;;		On exit  : 3F/1
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20112 ;;      Params:         4       0       0       0       0       0       0       0       0
 20113 ;;      Locals:        10       0       0       0       0       0       0       0       0
 20114 ;;      Temps:         38       0       0       0       0       0       0       0       0
 20115 ;;      Totals:        52       0       0       0       0       0       0       0       0
 20116 ;;Total ram usage:       52 bytes
 20117 ;; Hardware stack levels used:    1
 20118 ;; Hardware stack levels required when called:    3
 20119 ;; This function calls:
 20120 ;;		_gps_ano
 20121 ;;		_gps_dia
 20122 ;;		_gps_hora
 20123 ;;		_gps_mes
 20124 ;;		_gps_minutos
 20125 ;;		_gps_segundos
 20126 ;; This function is called by:
 20127 ;;		_f_open
 20128 ;;		_f_sync
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132                           	psect	text116
 20133  0034B0                     __ptext116:
 20134                           	callstack 0
 20135  0034B0                     _get_fattime:
 20136                           	callstack 22
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 20140                           
 20141                           ;incstack = 0
 20142  0034B0  ECA8  F02C         	call	_gps_hora	;wreg free
 20143  0034B4  0EFD               	movlw	253
 20144  0034B6  240A               	addwf	?_gps_hora^0,w,c
 20145  0034B8  6E38               	movwf	get_fattime@f_time^0,c
 20146  0034BA  0EFF               	movlw	255
 20147  0034BC  200B               	addwfc	(?_gps_hora+1)^0,w,c
 20148  0034BE  6E39               	movwf	(get_fattime@f_time+1)^0,c
 20149                           
 20150                           ;tff.c: 815: f_time.min = gps_minutos();
 20151  0034C0  ECED  F02C         	call	_gps_minutos	;wreg free
 20152  0034C4  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 20153  0034C8  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 20154                           
 20155                           ;tff.c: 816: f_time.seg = gps_segundos();
 20156  0034CC  ECDC  F02C         	call	_gps_segundos	;wreg free
 20157  0034D0  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 20158  0034D4  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 20159                           
 20160                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 20161  0034D8  EC20  F02D         	call	_gps_ano	;wreg free
 20162  0034DC  0ED0               	movlw	208
 20163  0034DE  240A               	addwf	?_gps_ano^0,w,c
 20164  0034E0  6E40               	movwf	(get_fattime@f_time+8)^0,c
 20165  0034E2  0E07               	movlw	7
 20166  0034E4  200B               	addwfc	(?_gps_ano+1)^0,w,c
 20167  0034E6  6E41               	movwf	(get_fattime@f_time+9)^0,c
 20168                           
 20169                           ;tff.c: 818: f_time.mes = gps_mes();
 20170  0034E8  ECFE  F02C         	call	_gps_mes	;wreg free
 20171  0034EC  500A               	movf	?_gps_mes^0,w,c
 20172  0034EE  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 20173                           
 20174                           ;tff.c: 819: f_time.dia = gps_dia();
 20175  0034F0  EC0F  F02D         	call	_gps_dia	;wreg free
 20176  0034F4  500A               	movf	?_gps_dia^0,w,c
 20177  0034F6  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 20178                           
 20179                           ; BSR set to: 1
 20180                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 20181  0034F8  90D8               	bcf	status,0,c
 20182  0034FA  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 20183  0034FC  6E13               	movwf	(??_get_fattime+1)^0,c
 20184  0034FE  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 20185  003500  6E12               	movwf	??_get_fattime^0,c
 20186  003502  503A               	movf	(get_fattime@f_time+2)^0,w,c
 20187  003504  6E14               	movwf	(??_get_fattime+2)^0,c
 20188  003506  503B               	movf	(get_fattime@f_time+3)^0,w,c
 20189  003508  6E15               	movwf	(??_get_fattime+3)^0,c
 20190  00350A  6A16               	clrf	(??_get_fattime+4)^0,c
 20191  00350C  6A17               	clrf	(??_get_fattime+5)^0,c
 20192  00350E  0E05               	movlw	5
 20193  003510                     u13235:
 20194  003510  90D8               	bcf	status,0,c
 20195  003512  3614               	rlcf	(??_get_fattime+2)^0,f,c
 20196  003514  3615               	rlcf	(??_get_fattime+3)^0,f,c
 20197  003516  3616               	rlcf	(??_get_fattime+4)^0,f,c
 20198  003518  3617               	rlcf	(??_get_fattime+5)^0,f,c
 20199  00351A  2EE8               	decfsz	wreg,f,c
 20200  00351C  D7F9               	goto	u13235
 20201  00351E  5038               	movf	get_fattime@f_time^0,w,c
 20202  003520  6E18               	movwf	(??_get_fattime+6)^0,c
 20203  003522  5039               	movf	(get_fattime@f_time+1)^0,w,c
 20204  003524  6E19               	movwf	(??_get_fattime+7)^0,c
 20205  003526  6A1A               	clrf	(??_get_fattime+8)^0,c
 20206  003528  6A1B               	clrf	(??_get_fattime+9)^0,c
 20207  00352A  0E0B               	movlw	11
 20208  00352C                     u13245:
 20209  00352C  90D8               	bcf	status,0,c
 20210  00352E  3618               	rlcf	(??_get_fattime+6)^0,f,c
 20211  003530  3619               	rlcf	(??_get_fattime+7)^0,f,c
 20212  003532  361A               	rlcf	(??_get_fattime+8)^0,f,c
 20213  003534  361B               	rlcf	(??_get_fattime+9)^0,f,c
 20214  003536  2EE8               	decfsz	wreg,f,c
 20215  003538  D7F9               	goto	u13245
 20216  00353A  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 20217  00353E  6A1D               	clrf	(??_get_fattime+11)^0,c
 20218  003540  6A1E               	clrf	(??_get_fattime+12)^0,c
 20219  003542  6A1F               	clrf	(??_get_fattime+13)^0,c
 20220  003544  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 20221  003548  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 20222  00354C  6A1D               	clrf	(??_get_fattime+11)^0,c
 20223  00354E  6A1C               	clrf	(??_get_fattime+10)^0,c
 20224  003550  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 20225  003554  6A21               	clrf	(??_get_fattime+15)^0,c
 20226  003556  6A22               	clrf	(??_get_fattime+16)^0,c
 20227  003558  6A23               	clrf	(??_get_fattime+17)^0,c
 20228  00355A  0E15               	movlw	21
 20229  00355C                     u13255:
 20230  00355C  90D8               	bcf	status,0,c
 20231  00355E  3620               	rlcf	(??_get_fattime+14)^0,f,c
 20232  003560  3621               	rlcf	(??_get_fattime+15)^0,f,c
 20233  003562  3622               	rlcf	(??_get_fattime+16)^0,f,c
 20234  003564  3623               	rlcf	(??_get_fattime+17)^0,f,c
 20235  003566  2EE8               	decfsz	wreg,f,c
 20236  003568  D7F9               	goto	u13255
 20237  00356A  0EC4               	movlw	196
 20238  00356C  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 20239  00356E  6E24               	movwf	(??_get_fattime+18)^0,c
 20240  003570  0EFF               	movlw	255
 20241  003572  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 20242  003574  6E25               	movwf	(??_get_fattime+19)^0,c
 20243  003576  6A26               	clrf	(??_get_fattime+20)^0,c
 20244  003578  6A27               	clrf	(??_get_fattime+21)^0,c
 20245  00357A  0E19               	movlw	25
 20246  00357C                     u13265:
 20247  00357C  90D8               	bcf	status,0,c
 20248  00357E  3624               	rlcf	(??_get_fattime+18)^0,f,c
 20249  003580  3625               	rlcf	(??_get_fattime+19)^0,f,c
 20250  003582  3626               	rlcf	(??_get_fattime+20)^0,f,c
 20251  003584  3627               	rlcf	(??_get_fattime+21)^0,f,c
 20252  003586  2EE8               	decfsz	wreg,f,c
 20253  003588  D7F9               	goto	u13265
 20254  00358A  5020               	movf	(??_get_fattime+14)^0,w,c
 20255  00358C  1024               	iorwf	(??_get_fattime+18)^0,w,c
 20256  00358E  6E28               	movwf	(??_get_fattime+22)^0,c
 20257  003590  5021               	movf	(??_get_fattime+15)^0,w,c
 20258  003592  1025               	iorwf	(??_get_fattime+19)^0,w,c
 20259  003594  6E29               	movwf	(??_get_fattime+23)^0,c
 20260  003596  5022               	movf	(??_get_fattime+16)^0,w,c
 20261  003598  1026               	iorwf	(??_get_fattime+20)^0,w,c
 20262  00359A  6E2A               	movwf	(??_get_fattime+24)^0,c
 20263  00359C  5023               	movf	(??_get_fattime+17)^0,w,c
 20264  00359E  1027               	iorwf	(??_get_fattime+21)^0,w,c
 20265  0035A0  6E2B               	movwf	(??_get_fattime+25)^0,c
 20266  0035A2  501C               	movf	(??_get_fattime+10)^0,w,c
 20267  0035A4  1028               	iorwf	(??_get_fattime+22)^0,w,c
 20268  0035A6  6E2C               	movwf	(??_get_fattime+26)^0,c
 20269  0035A8  501D               	movf	(??_get_fattime+11)^0,w,c
 20270  0035AA  1029               	iorwf	(??_get_fattime+23)^0,w,c
 20271  0035AC  6E2D               	movwf	(??_get_fattime+27)^0,c
 20272  0035AE  501E               	movf	(??_get_fattime+12)^0,w,c
 20273  0035B0  102A               	iorwf	(??_get_fattime+24)^0,w,c
 20274  0035B2  6E2E               	movwf	(??_get_fattime+28)^0,c
 20275  0035B4  501F               	movf	(??_get_fattime+13)^0,w,c
 20276  0035B6  102B               	iorwf	(??_get_fattime+25)^0,w,c
 20277  0035B8  6E2F               	movwf	(??_get_fattime+29)^0,c
 20278  0035BA  5018               	movf	(??_get_fattime+6)^0,w,c
 20279  0035BC  102C               	iorwf	(??_get_fattime+26)^0,w,c
 20280  0035BE  6E30               	movwf	(??_get_fattime+30)^0,c
 20281  0035C0  5019               	movf	(??_get_fattime+7)^0,w,c
 20282  0035C2  102D               	iorwf	(??_get_fattime+27)^0,w,c
 20283  0035C4  6E31               	movwf	(??_get_fattime+31)^0,c
 20284  0035C6  501A               	movf	(??_get_fattime+8)^0,w,c
 20285  0035C8  102E               	iorwf	(??_get_fattime+28)^0,w,c
 20286  0035CA  6E32               	movwf	(??_get_fattime+32)^0,c
 20287  0035CC  501B               	movf	(??_get_fattime+9)^0,w,c
 20288  0035CE  102F               	iorwf	(??_get_fattime+29)^0,w,c
 20289  0035D0  6E33               	movwf	(??_get_fattime+33)^0,c
 20290  0035D2  5014               	movf	(??_get_fattime+2)^0,w,c
 20291  0035D4  1030               	iorwf	(??_get_fattime+30)^0,w,c
 20292  0035D6  6E34               	movwf	(??_get_fattime+34)^0,c
 20293  0035D8  5015               	movf	(??_get_fattime+3)^0,w,c
 20294  0035DA  1031               	iorwf	(??_get_fattime+31)^0,w,c
 20295  0035DC  6E35               	movwf	(??_get_fattime+35)^0,c
 20296  0035DE  5016               	movf	(??_get_fattime+4)^0,w,c
 20297  0035E0  1032               	iorwf	(??_get_fattime+32)^0,w,c
 20298  0035E2  6E36               	movwf	(??_get_fattime+36)^0,c
 20299  0035E4  5017               	movf	(??_get_fattime+5)^0,w,c
 20300  0035E6  1033               	iorwf	(??_get_fattime+33)^0,w,c
 20301  0035E8  6E37               	movwf	(??_get_fattime+37)^0,c
 20302  0035EA  5012               	movf	??_get_fattime^0,w,c
 20303  0035EC  1034               	iorwf	(??_get_fattime+34)^0,w,c
 20304  0035EE  6E0E               	movwf	?_get_fattime^0,c
 20305  0035F0  5013               	movf	(??_get_fattime+1)^0,w,c
 20306  0035F2  1035               	iorwf	(??_get_fattime+35)^0,w,c
 20307  0035F4  6E0F               	movwf	(?_get_fattime+1)^0,c
 20308  0035F6  0E00               	movlw	0
 20309  0035F8  1036               	iorwf	(??_get_fattime+36)^0,w,c
 20310  0035FA  6E10               	movwf	(?_get_fattime+2)^0,c
 20311  0035FC  0E00               	movlw	0
 20312  0035FE  1037               	iorwf	(??_get_fattime+37)^0,w,c
 20313  003600  6E11               	movwf	(?_get_fattime+3)^0,c
 20314                           
 20315                           ; BSR set to: 1
 20316  003602  0012               	return		;funcret
 20317  003604                     __end_of_get_fattime:
 20318                           	callstack 0
 20319                           
 20320 ;; *************** function _gps_segundos *****************
 20321 ;; Defined at:
 20322 ;;		line 530 in file "bibliotecas/GPS.c"
 20323 ;; Parameters:    Size  Location     Type
 20324 ;;		None
 20325 ;; Auto vars:     Size  Location     Type
 20326 ;;		None
 20327 ;; Return value:  Size  Location     Type
 20328 ;;                  2    9[COMRAM] unsigned int 
 20329 ;; Registers used:
 20330 ;;		wreg, status,2, status,0, prodl, prodh
 20331 ;; Tracked objects:
 20332 ;;		On entry : 3F/1
 20333 ;;		On exit  : 3F/1
 20334 ;;		Unchanged: 0/0
 20335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20336 ;;      Params:         2       0       0       0       0       0       0       0       0
 20337 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20338 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20339 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20340 ;;Total ram usage:        4 bytes
 20341 ;; Hardware stack levels used:    1
 20342 ;; Hardware stack levels required when called:    2
 20343 ;; This function calls:
 20344 ;;		Nothing
 20345 ;; This function is called by:
 20346 ;;		_get_fattime
 20347 ;; This function uses a non-reentrant model
 20348 ;;
 20349                           
 20350                           	psect	text117
 20351  0059B8                     __ptext117:
 20352                           	callstack 0
 20353  0059B8                     _gps_segundos:
 20354                           	callstack 22
 20355                           
 20356                           ; BSR set to: 1
 20357                           ;GPS.c: 532: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 20358                           
 20359                           ; BSR set to: 1
 20360                           ;incstack = 0
 20361  0059B8  51D5               	movf	(_rawTime+4)& (0+255),w,b
 20362  0059BA  0D0A               	mullw	10
 20363  0059BC  CFF3 F00C          	movff	prodl,??_gps_segundos
 20364  0059C0  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 20365  0059C4  51D6               	movf	(_rawTime+5)& (0+255),w,b
 20366  0059C6  260C               	addwf	??_gps_segundos^0,f,c
 20367  0059C8  0E00               	movlw	0
 20368  0059CA  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 20369  0059CC  0EF0               	movlw	240
 20370  0059CE  240C               	addwf	??_gps_segundos^0,w,c
 20371  0059D0  6E0A               	movwf	?_gps_segundos^0,c
 20372  0059D2  0EFD               	movlw	253
 20373  0059D4  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 20374  0059D6  6E0B               	movwf	(?_gps_segundos+1)^0,c
 20375                           
 20376                           ; BSR set to: 1
 20377  0059D8  0012               	return		;funcret
 20378  0059DA                     __end_of_gps_segundos:
 20379                           	callstack 0
 20380                           
 20381 ;; *************** function _gps_minutos *****************
 20382 ;; Defined at:
 20383 ;;		line 541 in file "bibliotecas/GPS.c"
 20384 ;; Parameters:    Size  Location     Type
 20385 ;;		None
 20386 ;; Auto vars:     Size  Location     Type
 20387 ;;		None
 20388 ;; Return value:  Size  Location     Type
 20389 ;;                  2    9[COMRAM] unsigned int 
 20390 ;; Registers used:
 20391 ;;		wreg, status,2, status,0, prodl, prodh
 20392 ;; Tracked objects:
 20393 ;;		On entry : 3F/1
 20394 ;;		On exit  : 3F/1
 20395 ;;		Unchanged: 0/0
 20396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20397 ;;      Params:         2       0       0       0       0       0       0       0       0
 20398 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20399 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20400 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20401 ;;Total ram usage:        4 bytes
 20402 ;; Hardware stack levels used:    1
 20403 ;; Hardware stack levels required when called:    2
 20404 ;; This function calls:
 20405 ;;		Nothing
 20406 ;; This function is called by:
 20407 ;;		_get_fattime
 20408 ;; This function uses a non-reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text118
 20412  0059DA                     __ptext118:
 20413                           	callstack 0
 20414  0059DA                     _gps_minutos:
 20415                           	callstack 22
 20416                           
 20417                           ; BSR set to: 1
 20418                           ;GPS.c: 543: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 20419                           
 20420                           ; BSR set to: 1
 20421                           ;incstack = 0
 20422  0059DA  51D3               	movf	(_rawTime+2)& (0+255),w,b
 20423  0059DC  0D0A               	mullw	10
 20424  0059DE  CFF3 F00C          	movff	prodl,??_gps_minutos
 20425  0059E2  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 20426  0059E6  51D4               	movf	(_rawTime+3)& (0+255),w,b
 20427  0059E8  260C               	addwf	??_gps_minutos^0,f,c
 20428  0059EA  0E00               	movlw	0
 20429  0059EC  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 20430  0059EE  0EF0               	movlw	240
 20431  0059F0  240C               	addwf	??_gps_minutos^0,w,c
 20432  0059F2  6E0A               	movwf	?_gps_minutos^0,c
 20433  0059F4  0EFD               	movlw	253
 20434  0059F6  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 20435  0059F8  6E0B               	movwf	(?_gps_minutos+1)^0,c
 20436                           
 20437                           ; BSR set to: 1
 20438  0059FA  0012               	return		;funcret
 20439  0059FC                     __end_of_gps_minutos:
 20440                           	callstack 0
 20441                           
 20442 ;; *************** function _gps_mes *****************
 20443 ;; Defined at:
 20444 ;;		line 578 in file "bibliotecas/GPS.c"
 20445 ;; Parameters:    Size  Location     Type
 20446 ;;		None
 20447 ;; Auto vars:     Size  Location     Type
 20448 ;;		None
 20449 ;; Return value:  Size  Location     Type
 20450 ;;                  2    9[COMRAM] unsigned int 
 20451 ;; Registers used:
 20452 ;;		wreg, status,2, status,0, prodl, prodh
 20453 ;; Tracked objects:
 20454 ;;		On entry : 3F/1
 20455 ;;		On exit  : 3F/1
 20456 ;;		Unchanged: 0/0
 20457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20458 ;;      Params:         2       0       0       0       0       0       0       0       0
 20459 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20460 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20461 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20462 ;;Total ram usage:        4 bytes
 20463 ;; Hardware stack levels used:    1
 20464 ;; Hardware stack levels required when called:    2
 20465 ;; This function calls:
 20466 ;;		Nothing
 20467 ;; This function is called by:
 20468 ;;		_get_fattime
 20469 ;; This function uses a non-reentrant model
 20470 ;;
 20471                           
 20472                           	psect	text119
 20473  0059FC                     __ptext119:
 20474                           	callstack 0
 20475  0059FC                     _gps_mes:
 20476                           	callstack 22
 20477                           
 20478                           ; BSR set to: 1
 20479                           ;GPS.c: 580: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 20480                           
 20481                           ; BSR set to: 1
 20482                           ;incstack = 0
 20483  0059FC  51E6               	movf	(_rawDate+2)& (0+255),w,b
 20484  0059FE  0D0A               	mullw	10
 20485  005A00  CFF3 F00C          	movff	prodl,??_gps_mes
 20486  005A04  CFF4 F00D          	movff	prodh,??_gps_mes+1
 20487  005A08  51E7               	movf	(_rawDate+3)& (0+255),w,b
 20488  005A0A  260C               	addwf	??_gps_mes^0,f,c
 20489  005A0C  0E00               	movlw	0
 20490  005A0E  220D               	addwfc	(??_gps_mes+1)^0,f,c
 20491  005A10  0EF0               	movlw	240
 20492  005A12  240C               	addwf	??_gps_mes^0,w,c
 20493  005A14  6E0A               	movwf	?_gps_mes^0,c
 20494  005A16  0EFD               	movlw	253
 20495  005A18  200D               	addwfc	(??_gps_mes+1)^0,w,c
 20496  005A1A  6E0B               	movwf	(?_gps_mes+1)^0,c
 20497                           
 20498                           ; BSR set to: 1
 20499  005A1C  0012               	return		;funcret
 20500  005A1E                     __end_of_gps_mes:
 20501                           	callstack 0
 20502                           
 20503 ;; *************** function _gps_hora *****************
 20504 ;; Defined at:
 20505 ;;		line 553 in file "bibliotecas/GPS.c"
 20506 ;; Parameters:    Size  Location     Type
 20507 ;;		None
 20508 ;; Auto vars:     Size  Location     Type
 20509 ;;		None
 20510 ;; Return value:  Size  Location     Type
 20511 ;;                  2    9[COMRAM] unsigned int 
 20512 ;; Registers used:
 20513 ;;		wreg, status,2, status,0, prodl, prodh
 20514 ;; Tracked objects:
 20515 ;;		On entry : 3F/0
 20516 ;;		On exit  : 3F/1
 20517 ;;		Unchanged: 0/0
 20518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20519 ;;      Params:         2       0       0       0       0       0       0       0       0
 20520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20521 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20522 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20523 ;;Total ram usage:        4 bytes
 20524 ;; Hardware stack levels used:    1
 20525 ;; Hardware stack levels required when called:    2
 20526 ;; This function calls:
 20527 ;;		Nothing
 20528 ;; This function is called by:
 20529 ;;		_get_fattime
 20530 ;; This function uses a non-reentrant model
 20531 ;;
 20532                           
 20533                           	psect	text120
 20534  005950                     __ptext120:
 20535                           	callstack 0
 20536  005950                     _gps_hora:
 20537                           	callstack 22
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;GPS.c: 555: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 20541                           
 20542                           ; BSR set to: 1
 20543                           ;incstack = 0
 20544  005950  0101               	movlb	1	; () banked
 20545  005952  51D1               	movf	_rawTime& (0+255),w,b
 20546  005954  0D0A               	mullw	10
 20547  005956  CFF3 F00C          	movff	prodl,??_gps_hora
 20548  00595A  CFF4 F00D          	movff	prodh,??_gps_hora+1
 20549  00595E  51D2               	movf	(_rawTime+1)& (0+255),w,b
 20550  005960  260C               	addwf	??_gps_hora^0,f,c
 20551  005962  0E00               	movlw	0
 20552  005964  220D               	addwfc	(??_gps_hora+1)^0,f,c
 20553  005966  0EF0               	movlw	240
 20554  005968  240C               	addwf	??_gps_hora^0,w,c
 20555  00596A  6E0A               	movwf	?_gps_hora^0,c
 20556  00596C  0EFD               	movlw	253
 20557  00596E  200D               	addwfc	(??_gps_hora+1)^0,w,c
 20558  005970  6E0B               	movwf	(?_gps_hora+1)^0,c
 20559                           
 20560                           ; BSR set to: 1
 20561  005972  0012               	return		;funcret
 20562  005974                     __end_of_gps_hora:
 20563                           	callstack 0
 20564                           
 20565 ;; *************** function _gps_dia *****************
 20566 ;; Defined at:
 20567 ;;		line 565 in file "bibliotecas/GPS.c"
 20568 ;; Parameters:    Size  Location     Type
 20569 ;;		None
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;		None
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  2    9[COMRAM] unsigned int 
 20574 ;; Registers used:
 20575 ;;		wreg, status,2, status,0, prodl, prodh
 20576 ;; Tracked objects:
 20577 ;;		On entry : 3F/1
 20578 ;;		On exit  : 3F/1
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20581 ;;      Params:         2       0       0       0       0       0       0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20583 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20584 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20585 ;;Total ram usage:        4 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:    2
 20588 ;; This function calls:
 20589 ;;		Nothing
 20590 ;; This function is called by:
 20591 ;;		_get_fattime
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text121
 20596  005A1E                     __ptext121:
 20597                           	callstack 0
 20598  005A1E                     _gps_dia:
 20599                           	callstack 22
 20600                           
 20601                           ; BSR set to: 1
 20602                           ;GPS.c: 567: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 20603                           
 20604                           ; BSR set to: 1
 20605                           ;incstack = 0
 20606  005A1E  51E4               	movf	_rawDate& (0+255),w,b
 20607  005A20  0D0A               	mullw	10
 20608  005A22  CFF3 F00C          	movff	prodl,??_gps_dia
 20609  005A26  CFF4 F00D          	movff	prodh,??_gps_dia+1
 20610  005A2A  51E5               	movf	(_rawDate+1)& (0+255),w,b
 20611  005A2C  260C               	addwf	??_gps_dia^0,f,c
 20612  005A2E  0E00               	movlw	0
 20613  005A30  220D               	addwfc	(??_gps_dia+1)^0,f,c
 20614  005A32  0EF0               	movlw	240
 20615  005A34  240C               	addwf	??_gps_dia^0,w,c
 20616  005A36  6E0A               	movwf	?_gps_dia^0,c
 20617  005A38  0EFD               	movlw	253
 20618  005A3A  200D               	addwfc	(??_gps_dia+1)^0,w,c
 20619  005A3C  6E0B               	movwf	(?_gps_dia+1)^0,c
 20620                           
 20621                           ; BSR set to: 1
 20622  005A3E  0012               	return		;funcret
 20623  005A40                     __end_of_gps_dia:
 20624                           	callstack 0
 20625                           
 20626 ;; *************** function _gps_ano *****************
 20627 ;; Defined at:
 20628 ;;		line 590 in file "bibliotecas/GPS.c"
 20629 ;; Parameters:    Size  Location     Type
 20630 ;;		None
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;		None
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  2    9[COMRAM] unsigned int 
 20635 ;; Registers used:
 20636 ;;		wreg, status,2, status,0, prodl, prodh
 20637 ;; Tracked objects:
 20638 ;;		On entry : 3F/1
 20639 ;;		On exit  : 3F/1
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20642 ;;      Params:         2       0       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20644 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20645 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        4 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:    2
 20649 ;; This function calls:
 20650 ;;		Nothing
 20651 ;; This function is called by:
 20652 ;;		_get_fattime
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           	psect	text122
 20657  005A40                     __ptext122:
 20658                           	callstack 0
 20659  005A40                     _gps_ano:
 20660                           	callstack 22
 20661                           
 20662                           ; BSR set to: 1
 20663                           ;GPS.c: 592: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 20664                           
 20665                           ; BSR set to: 1
 20666                           ;incstack = 0
 20667  005A40  51E8               	movf	(_rawDate+4)& (0+255),w,b
 20668  005A42  0D0A               	mullw	10
 20669  005A44  CFF3 F00C          	movff	prodl,??_gps_ano
 20670  005A48  CFF4 F00D          	movff	prodh,??_gps_ano+1
 20671  005A4C  51E9               	movf	(_rawDate+5)& (0+255),w,b
 20672  005A4E  260C               	addwf	??_gps_ano^0,f,c
 20673  005A50  0E00               	movlw	0
 20674  005A52  220D               	addwfc	(??_gps_ano+1)^0,f,c
 20675  005A54  0EF0               	movlw	240
 20676  005A56  240C               	addwf	??_gps_ano^0,w,c
 20677  005A58  6E0A               	movwf	?_gps_ano^0,c
 20678  005A5A  0EFD               	movlw	253
 20679  005A5C  200D               	addwfc	(??_gps_ano+1)^0,w,c
 20680  005A5E  6E0B               	movwf	(?_gps_ano+1)^0,c
 20681                           
 20682                           ; BSR set to: 1
 20683  005A60  0012               	return		;funcret
 20684  005A62                     __end_of_gps_ano:
 20685                           	callstack 0
 20686                           
 20687 ;; *************** function _data_nome *****************
 20688 ;; Defined at:
 20689 ;;		line 396 in file "bibliotecas/SDCard.c"
 20690 ;; Parameters:    Size  Location     Type
 20691 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 20692 ;;		 -> data(6), 
 20693 ;; Auto vars:     Size  Location     Type
 20694 ;;  i               1   11[COMRAM] unsigned char 
 20695 ;; Return value:  Size  Location     Type
 20696 ;;                  1    wreg      void 
 20697 ;; Registers used:
 20698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20699 ;; Tracked objects:
 20700 ;;		On entry : 3F/1
 20701 ;;		On exit  : 3F/1
 20702 ;;		Unchanged: 3F/0
 20703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20704 ;;      Params:         2       0       0       0       0       0       0       0       0
 20705 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20706 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20707 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20708 ;;Total ram usage:        3 bytes
 20709 ;; Hardware stack levels used:    1
 20710 ;; Hardware stack levels required when called:    2
 20711 ;; This function calls:
 20712 ;;		Nothing
 20713 ;; This function is called by:
 20714 ;;		_escrita_sdcard
 20715 ;; This function uses a non-reentrant model
 20716 ;;
 20717                           
 20718                           	psect	text123
 20719  0058B2                     __ptext123:
 20720                           	callstack 0
 20721  0058B2                     _data_nome:
 20722                           	callstack 24
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;SDCard.c: 398: unsigned char i;;SDCard.c: 399: for(i=0; i<4;i++)
 20726                           
 20727                           ; BSR set to: 1
 20728                           ;incstack = 0
 20729  0058B2  0E00               	movlw	0
 20730  0058B4  6E0C               	movwf	data_nome@i^0,c
 20731  0058B6                     l12366:
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;SDCard.c: 400: {;SDCard.c: 401: filename[i] = *p_buff;
 20735  0058B6  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 20736  0058BA  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 20737  0058BE  0E56               	movlw	low _filename
 20738  0058C0  240C               	addwf	data_nome@i^0,w,c
 20739  0058C2  6EE1               	movwf	fsr1l,c
 20740  0058C4  6AE2               	clrf	fsr1h,c
 20741  0058C6  0E02               	movlw	high _filename
 20742  0058C8  22E2               	addwfc	fsr1h,f,c
 20743  0058CA  CFDF FFE7          	movff	indf2,indf1
 20744                           
 20745                           ; BSR set to: 1
 20746                           ;SDCard.c: 402: p_buff++;
 20747  0058CE  4A0A               	infsnz	data_nome@p_buff^0,f,c
 20748  0058D0  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 20749                           
 20750                           ; BSR set to: 1
 20751  0058D2  2A0C               	incf	data_nome@i^0,f,c
 20752                           
 20753                           ; BSR set to: 1
 20754  0058D4  0E03               	movlw	3
 20755  0058D6  640C               	cpfsgt	data_nome@i^0,c
 20756  0058D8  D7EE               	goto	l12366
 20757  0058DA  0012               	return	
 20758  0058DC                     __end_of_data_nome:
 20759                           	callstack 0
 20760                           
 20761 ;; *************** function _desliga_uart *****************
 20762 ;; Defined at:
 20763 ;;		line 223 in file "bibliotecas/uart.c"
 20764 ;; Parameters:    Size  Location     Type
 20765 ;;		None
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;		None
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  1    wreg      void 
 20770 ;; Registers used:
 20771 ;;		wreg, status,2
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/1
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20777 ;;      Params:         0       0       0       0       0       0       0       0       0
 20778 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20780 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20781 ;;Total ram usage:        0 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:    2
 20784 ;; This function calls:
 20785 ;;		Nothing
 20786 ;; This function is called by:
 20787 ;;		_grava_sd
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text124
 20792  005B76                     __ptext124:
 20793                           	callstack 0
 20794  005B76                     _desliga_uart:
 20795                           	callstack 25
 20796                           
 20797                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20798                           
 20799                           ; BSR set to: 1
 20800                           ;incstack = 0
 20801  005B76  8C94               	bsf	148,6,c	;volatile
 20802                           
 20803                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20804  005B78  8E94               	bsf	148,7,c	;volatile
 20805                           
 20806                           ;uart.c: 230: TXSTA = 0x00;
 20807  005B7A  0E00               	movlw	0
 20808  005B7C  6EAC               	movwf	172,c	;volatile
 20809                           
 20810                           ;uart.c: 232: RCSTA = 0x00;
 20811  005B7E  0E00               	movlw	0
 20812  005B80  6EAB               	movwf	171,c	;volatile
 20813                           
 20814                           ;uart.c: 233: RCREG = 0x00;
 20815  005B82  0E00               	movlw	0
 20816  005B84  6EAE               	movwf	174,c	;volatile
 20817  005B86  0012               	return		;funcret
 20818  005B88                     __end_of_desliga_uart:
 20819                           	callstack 0
 20820                           
 20821 ;; *************** function _desliga_SPI *****************
 20822 ;; Defined at:
 20823 ;;		line 75 in file "bibliotecas/SPI.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;		None
 20826 ;; Auto vars:     Size  Location     Type
 20827 ;;		None
 20828 ;; Return value:  Size  Location     Type
 20829 ;;                  1    wreg      void 
 20830 ;; Registers used:
 20831 ;;		wreg, status,2
 20832 ;; Tracked objects:
 20833 ;;		On entry : 0/1
 20834 ;;		On exit  : 0/0
 20835 ;;		Unchanged: 0/0
 20836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20837 ;;      Params:         0       0       0       0       0       0       0       0       0
 20838 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20840 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20841 ;;Total ram usage:        0 bytes
 20842 ;; Hardware stack levels used:    1
 20843 ;; Hardware stack levels required when called:    2
 20844 ;; This function calls:
 20845 ;;		Nothing
 20846 ;; This function is called by:
 20847 ;;		_grava_sd
 20848 ;; This function uses a non-reentrant model
 20849 ;;
 20850                           
 20851                           	psect	text125
 20852  005BBA                     __ptext125:
 20853                           	callstack 0
 20854  005BBA                     _desliga_SPI:
 20855                           	callstack 25
 20856                           
 20857                           ;SPI.c: 77: SSPSTAT = 0x00;
 20858                           
 20859                           ;incstack = 0
 20860  005BBA  0E00               	movlw	0
 20861  005BBC  6EC7               	movwf	199,c	;volatile
 20862                           
 20863                           ;SPI.c: 78: SSPCON1 = 0x00;
 20864  005BBE  0E00               	movlw	0
 20865  005BC0  6EC6               	movwf	198,c	;volatile
 20866                           
 20867                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20868  005BC2  9AC6               	bcf	198,5,c	;volatile
 20869                           
 20870                           ;SPI.c: 80: SSPBUF = 0x00;
 20871  005BC4  0E00               	movlw	0
 20872  005BC6  6EC9               	movwf	201,c	;volatile
 20873  005BC8  0012               	return		;funcret
 20874  005BCA                     __end_of_desliga_SPI:
 20875                           	callstack 0
 20876                           
 20877 ;; *************** function _dados_gps_to_sd *****************
 20878 ;; Defined at:
 20879 ;;		line 702 in file "bibliotecas/GPS.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;		None
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;		None
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  1    wreg      void 
 20886 ;; Registers used:
 20887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/1
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20893 ;;      Params:         0       0       0       0       0       0       0       0       0
 20894 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20896 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20897 ;;Total ram usage:        0 bytes
 20898 ;; Hardware stack levels used:    1
 20899 ;; Hardware stack levels required when called:    4
 20900 ;; This function calls:
 20901 ;;		_monta_sd
 20902 ;; This function is called by:
 20903 ;;		_disparo_gravacao
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text126
 20908  004DEC                     __ptext126:
 20909                           	callstack 0
 20910  004DEC                     _dados_gps_to_sd:
 20911                           	callstack 24
 20912                           
 20913                           ;GPS.c: 705: monta_sd(0, rawTime);
 20914                           
 20915                           ;incstack = 0
 20916  004DEC  0ED1               	movlw	low _rawTime
 20917  004DEE  6E10               	movwf	monta_sd@dado^0,c
 20918  004DF0  0E01               	movlw	high _rawTime
 20919  004DF2  6E11               	movwf	(monta_sd@dado+1)^0,c
 20920  004DF4  0E00               	movlw	0
 20921  004DF6  EC03  F00B         	call	_monta_sd
 20922                           
 20923                           ;GPS.c: 706: monta_sd(1, rawDate);
 20924  004DFA  0EE4               	movlw	low _rawDate
 20925  004DFC  6E10               	movwf	monta_sd@dado^0,c
 20926  004DFE  0E01               	movlw	high _rawDate
 20927  004E00  6E11               	movwf	(monta_sd@dado+1)^0,c
 20928  004E02  0E01               	movlw	1
 20929  004E04  EC03  F00B         	call	_monta_sd
 20930                           
 20931                           ;GPS.c: 707: monta_sd(2, rawLatitude);
 20932  004E08  0EBE               	movlw	low _rawLatitude
 20933  004E0A  6E10               	movwf	monta_sd@dado^0,c
 20934  004E0C  0E01               	movlw	high _rawLatitude
 20935  004E0E  6E11               	movwf	(monta_sd@dado+1)^0,c
 20936  004E10  0E02               	movlw	2
 20937  004E12  EC03  F00B         	call	_monta_sd
 20938                           
 20939                           ;GPS.c: 708: monta_sd(3, rawLongitude);
 20940  004E16  0EA5               	movlw	low _rawLongitude
 20941  004E18  6E10               	movwf	monta_sd@dado^0,c
 20942  004E1A  0E01               	movlw	high _rawLongitude
 20943  004E1C  6E11               	movwf	(monta_sd@dado+1)^0,c
 20944  004E1E  0E03               	movlw	3
 20945  004E20  EC03  F00B         	call	_monta_sd
 20946                           
 20947                           ;GPS.c: 709: monta_sd(5, rawTime);
 20948  004E24  0ED1               	movlw	low _rawTime
 20949  004E26  6E10               	movwf	monta_sd@dado^0,c
 20950  004E28  0E01               	movlw	high _rawTime
 20951  004E2A  6E11               	movwf	(monta_sd@dado+1)^0,c
 20952  004E2C  0E05               	movlw	5
 20953  004E2E  EC03  F00B         	call	_monta_sd
 20954                           
 20955                           ;GPS.c: 710: monta_sd(6, rawDate);
 20956  004E32  0EE4               	movlw	low _rawDate
 20957  004E34  6E10               	movwf	monta_sd@dado^0,c
 20958  004E36  0E01               	movlw	high _rawDate
 20959  004E38  6E11               	movwf	(monta_sd@dado+1)^0,c
 20960  004E3A  0E06               	movlw	6
 20961  004E3C  EC03  F00B         	call	_monta_sd
 20962                           
 20963                           ;GPS.c: 711: monta_sd(7, rawSpeed);
 20964  004E40  0E6A               	movlw	low _rawSpeed
 20965  004E42  6E10               	movwf	monta_sd@dado^0,c
 20966  004E44  0E02               	movlw	high _rawSpeed
 20967  004E46  6E11               	movwf	(monta_sd@dado+1)^0,c
 20968  004E48  0E07               	movlw	7
 20969  004E4A  EC03  F00B         	call	_monta_sd
 20970  004E4E  0012               	return		;funcret
 20971  004E50                     __end_of_dados_gps_to_sd:
 20972                           	callstack 0
 20973                           
 20974 ;; *************** function _monta_sd *****************
 20975 ;; Defined at:
 20976 ;;		line 305 in file "bibliotecas/SDCard.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  index           1    wreg     unsigned char 
 20979 ;;  dado            2   15[COMRAM] PTR unsigned char 
 20980 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 20981 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 20982 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 20983 ;; Auto vars:     Size  Location     Type
 20984 ;;  index           1   18[COMRAM] unsigned char 
 20985 ;;  i               1   19[COMRAM] unsigned char 
 20986 ;;  size            1    0        unsigned char 
 20987 ;; Return value:  Size  Location     Type
 20988 ;;                  1    wreg      void 
 20989 ;; Registers used:
 20990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20991 ;; Tracked objects:
 20992 ;;		On entry : 0/2
 20993 ;;		On exit  : 0/0
 20994 ;;		Unchanged: 0/0
 20995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20996 ;;      Params:         2       0       0       0       0       0       0       0       0
 20997 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20999 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21000 ;;Total ram usage:        5 bytes
 21001 ;; Hardware stack levels used:    1
 21002 ;; Hardware stack levels required when called:    3
 21003 ;; This function calls:
 21004 ;;		_strlen
 21005 ;; This function is called by:
 21006 ;;		_dados_gps_to_sd
 21007 ;;		_verifica_fence
 21008 ;;		_disparo_gravacao
 21009 ;; This function uses a non-reentrant model
 21010 ;;
 21011                           
 21012                           	psect	text127
 21013  001606                     __ptext127:
 21014                           	callstack 0
 21015  001606                     _monta_sd:
 21016                           	callstack 24
 21017                           
 21018                           ;incstack = 0
 21019                           ;monta_sd@index stored from wreg
 21020  001606  6E13               	movwf	monta_sd@index^0,c
 21021  001608  C010  F00A         	movff	monta_sd@dado,strlen@s
 21022  00160C  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21023  001610  EC71  F02A         	call	_strlen	;wreg free
 21024                           
 21025                           ;SDCard.c: 309: switch(index)
 21026  001614  D165               	goto	l12896
 21027  001616                     l12782:
 21028                           
 21029                           ;SDCard.c: 312: for(i=0; i<7;i++)
 21030  001616  0E00               	movlw	0
 21031  001618  6E14               	movwf	monta_sd@i^0,c
 21032  00161A                     l12788:
 21033                           
 21034                           ;SDCard.c: 313: {;SDCard.c: 314: if(*dado != '\0')
 21035  00161A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21036  00161E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21037  001622  6AF8               	clrf	tblptru,c
 21038  001624  0E07               	movlw	(high __ramtop+-1)
 21039  001626  64F7               	cpfsgt	tblptrh,c
 21040  001628  D003               	bra	u15217
 21041  00162A  0008               	tblrd		*
 21042  00162C  50F5               	movf	tablat,w,c
 21043  00162E  D005               	bra	u15210
 21044  001630                     u15217:
 21045  001630  CFF6 FFE1          	movff	tblptrl,fsr1l
 21046  001634  CFF7 FFE2          	movff	tblptrh,fsr1h
 21047  001638  50E7               	movf	indf1,w,c
 21048  00163A                     u15210:
 21049  00163A  0900               	iorlw	0
 21050  00163C  B4D8               	btfsc	status,2,c
 21051  00163E  D017               	goto	l12792
 21052                           
 21053                           ;SDCard.c: 315: {;SDCard.c: 316: hora[i] = *dado;
 21054  001640  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21055  001644  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21056  001648  6AF8               	clrf	tblptru,c
 21057  00164A  0ECA               	movlw	low _hora
 21058  00164C  2414               	addwf	monta_sd@i^0,w,c
 21059  00164E  6ED9               	movwf	fsr2l,c
 21060  001650  6ADA               	clrf	fsr2h,c
 21061  001652  0E01               	movlw	high _hora
 21062  001654  22DA               	addwfc	fsr2h,f,c
 21063  001656  0E07               	movlw	(high __ramtop+-1)
 21064  001658  64F7               	cpfsgt	tblptrh,c
 21065  00165A  D003               	bra	u15237
 21066  00165C  0008               	tblrd		*
 21067  00165E  50F5               	movf	tablat,w,c
 21068  001660  D005               	bra	u15230
 21069  001662                     u15237:
 21070  001662  CFF6 FFE1          	movff	tblptrl,fsr1l
 21071  001666  CFF7 FFE2          	movff	tblptrh,fsr1h
 21072  00166A  50E7               	movf	indf1,w,c
 21073  00166C                     u15230:
 21074  00166C  6EDF               	movwf	indf2,c
 21075  00166E                     l12792:
 21076                           
 21077                           ;SDCard.c: 317: };SDCard.c: 318: dado++;
 21078  00166E  4A10               	infsnz	monta_sd@dado^0,f,c
 21079  001670  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21080  001672  2A14               	incf	monta_sd@i^0,f,c
 21081  001674  0E06               	movlw	6
 21082  001676  6414               	cpfsgt	monta_sd@i^0,c
 21083  001678  D7D0               	goto	l12788
 21084  00167A  0012               	return	
 21085  00167C                     l12798:
 21086                           
 21087                           ;SDCard.c: 323: for(i=0; i<6;i++)
 21088  00167C  0E00               	movlw	0
 21089  00167E  6E14               	movwf	monta_sd@i^0,c
 21090  001680                     l12804:
 21091                           
 21092                           ;SDCard.c: 324: {;SDCard.c: 325: if(*dado != '\0')
 21093  001680  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21094  001684  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21095  001688  6AF8               	clrf	tblptru,c
 21096  00168A  0E07               	movlw	(high __ramtop+-1)
 21097  00168C  64F7               	cpfsgt	tblptrh,c
 21098  00168E  D003               	bra	u15257
 21099  001690  0008               	tblrd		*
 21100  001692  50F5               	movf	tablat,w,c
 21101  001694  D005               	bra	u15250
 21102  001696                     u15257:
 21103  001696  CFF6 FFE1          	movff	tblptrl,fsr1l
 21104  00169A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21105  00169E  50E7               	movf	indf1,w,c
 21106  0016A0                     u15250:
 21107  0016A0  0900               	iorlw	0
 21108  0016A2  B4D8               	btfsc	status,2,c
 21109  0016A4  D017               	goto	l12808
 21110                           
 21111                           ;SDCard.c: 326: {;SDCard.c: 327: data[i] = *dado;
 21112  0016A6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21113  0016AA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21114  0016AE  6AF8               	clrf	tblptru,c
 21115  0016B0  0ED8               	movlw	low _data
 21116  0016B2  2414               	addwf	monta_sd@i^0,w,c
 21117  0016B4  6ED9               	movwf	fsr2l,c
 21118  0016B6  6ADA               	clrf	fsr2h,c
 21119  0016B8  0E01               	movlw	high _data
 21120  0016BA  22DA               	addwfc	fsr2h,f,c
 21121  0016BC  0E07               	movlw	(high __ramtop+-1)
 21122  0016BE  64F7               	cpfsgt	tblptrh,c
 21123  0016C0  D003               	bra	u15277
 21124  0016C2  0008               	tblrd		*
 21125  0016C4  50F5               	movf	tablat,w,c
 21126  0016C6  D005               	bra	u15270
 21127  0016C8                     u15277:
 21128  0016C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21129  0016CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21130  0016D0  50E7               	movf	indf1,w,c
 21131  0016D2                     u15270:
 21132  0016D2  6EDF               	movwf	indf2,c
 21133  0016D4                     l12808:
 21134                           
 21135                           ;SDCard.c: 328: };SDCard.c: 329: dado++;
 21136  0016D4  4A10               	infsnz	monta_sd@dado^0,f,c
 21137  0016D6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21138  0016D8  2A14               	incf	monta_sd@i^0,f,c
 21139  0016DA  0E05               	movlw	5
 21140  0016DC  6414               	cpfsgt	monta_sd@i^0,c
 21141  0016DE  D7D0               	goto	l12804
 21142  0016E0  0012               	return	
 21143  0016E2                     l12814:
 21144                           
 21145                           ;SDCard.c: 334: for(i=0; i<11;i++)
 21146  0016E2  0E00               	movlw	0
 21147  0016E4  6E14               	movwf	monta_sd@i^0,c
 21148  0016E6                     l12820:
 21149                           
 21150                           ;SDCard.c: 335: {;SDCard.c: 336: if(*dado != '\0')
 21151  0016E6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21152  0016EA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21153  0016EE  6AF8               	clrf	tblptru,c
 21154  0016F0  0E07               	movlw	(high __ramtop+-1)
 21155  0016F2  64F7               	cpfsgt	tblptrh,c
 21156  0016F4  D003               	bra	u15297
 21157  0016F6  0008               	tblrd		*
 21158  0016F8  50F5               	movf	tablat,w,c
 21159  0016FA  D005               	bra	u15290
 21160  0016FC                     u15297:
 21161  0016FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21162  001700  CFF7 FFE2          	movff	tblptrh,fsr1h
 21163  001704  50E7               	movf	indf1,w,c
 21164  001706                     u15290:
 21165  001706  0900               	iorlw	0
 21166  001708  B4D8               	btfsc	status,2,c
 21167  00170A  D017               	goto	l12824
 21168                           
 21169                           ;SDCard.c: 337: {;SDCard.c: 338: lt[i] = *dado;
 21170  00170C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21171  001710  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21172  001714  6AF8               	clrf	tblptru,c
 21173  001716  0EB2               	movlw	low _lt
 21174  001718  2414               	addwf	monta_sd@i^0,w,c
 21175  00171A  6ED9               	movwf	fsr2l,c
 21176  00171C  6ADA               	clrf	fsr2h,c
 21177  00171E  0E01               	movlw	high _lt
 21178  001720  22DA               	addwfc	fsr2h,f,c
 21179  001722  0E07               	movlw	(high __ramtop+-1)
 21180  001724  64F7               	cpfsgt	tblptrh,c
 21181  001726  D003               	bra	u15317
 21182  001728  0008               	tblrd		*
 21183  00172A  50F5               	movf	tablat,w,c
 21184  00172C  D005               	bra	u15310
 21185  00172E                     u15317:
 21186  00172E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21187  001732  CFF7 FFE2          	movff	tblptrh,fsr1h
 21188  001736  50E7               	movf	indf1,w,c
 21189  001738                     u15310:
 21190  001738  6EDF               	movwf	indf2,c
 21191  00173A                     l12824:
 21192                           
 21193                           ;SDCard.c: 339: };SDCard.c: 340: dado++;
 21194  00173A  4A10               	infsnz	monta_sd@dado^0,f,c
 21195  00173C  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21196  00173E  2A14               	incf	monta_sd@i^0,f,c
 21197  001740  0E0A               	movlw	10
 21198  001742  6414               	cpfsgt	monta_sd@i^0,c
 21199  001744  D7D0               	goto	l12820
 21200  001746  0012               	return	
 21201  001748                     l12830:
 21202                           
 21203                           ;SDCard.c: 345: for(i=0; i<12;i++)
 21204  001748  0E00               	movlw	0
 21205  00174A  6E14               	movwf	monta_sd@i^0,c
 21206  00174C                     l12836:
 21207                           
 21208                           ;SDCard.c: 346: {;SDCard.c: 347: if(*dado != '\0')
 21209  00174C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21210  001750  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21211  001754  6AF8               	clrf	tblptru,c
 21212  001756  0E07               	movlw	(high __ramtop+-1)
 21213  001758  64F7               	cpfsgt	tblptrh,c
 21214  00175A  D003               	bra	u15337
 21215  00175C  0008               	tblrd		*
 21216  00175E  50F5               	movf	tablat,w,c
 21217  001760  D005               	bra	u15330
 21218  001762                     u15337:
 21219  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
 21220  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
 21221  00176A  50E7               	movf	indf1,w,c
 21222  00176C                     u15330:
 21223  00176C  0900               	iorlw	0
 21224  00176E  B4D8               	btfsc	status,2,c
 21225  001770  D017               	goto	l12840
 21226                           
 21227                           ;SDCard.c: 348: {;SDCard.c: 349: lo[i] = *dado;
 21228  001772  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21229  001776  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21230  00177A  6AF8               	clrf	tblptru,c
 21231  00177C  0E98               	movlw	low _lo
 21232  00177E  2414               	addwf	monta_sd@i^0,w,c
 21233  001780  6ED9               	movwf	fsr2l,c
 21234  001782  6ADA               	clrf	fsr2h,c
 21235  001784  0E01               	movlw	high _lo
 21236  001786  22DA               	addwfc	fsr2h,f,c
 21237  001788  0E07               	movlw	(high __ramtop+-1)
 21238  00178A  64F7               	cpfsgt	tblptrh,c
 21239  00178C  D003               	bra	u15357
 21240  00178E  0008               	tblrd		*
 21241  001790  50F5               	movf	tablat,w,c
 21242  001792  D005               	bra	u15350
 21243  001794                     u15357:
 21244  001794  CFF6 FFE1          	movff	tblptrl,fsr1l
 21245  001798  CFF7 FFE2          	movff	tblptrh,fsr1h
 21246  00179C  50E7               	movf	indf1,w,c
 21247  00179E                     u15350:
 21248  00179E  6EDF               	movwf	indf2,c
 21249  0017A0                     l12840:
 21250                           
 21251                           ;SDCard.c: 350: };SDCard.c: 351: dado++;
 21252  0017A0  4A10               	infsnz	monta_sd@dado^0,f,c
 21253  0017A2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21254  0017A4  2A14               	incf	monta_sd@i^0,f,c
 21255  0017A6  0E0B               	movlw	11
 21256  0017A8  6414               	cpfsgt	monta_sd@i^0,c
 21257  0017AA  D7D0               	goto	l12836
 21258  0017AC  0012               	return	
 21259  0017AE                     l12846:
 21260                           
 21261                           ;SDCard.c: 357: fence = *dado;
 21262  0017AE  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21263  0017B2  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21264  0017B6  6AF8               	clrf	tblptru,c
 21265  0017B8  0E07               	movlw	(high __ramtop+-1)
 21266  0017BA  64F7               	cpfsgt	tblptrh,c
 21267  0017BC  D003               	bra	u15377
 21268  0017BE  0008               	tblrd		*
 21269  0017C0  50F5               	movf	tablat,w,c
 21270  0017C2  D005               	bra	u15370
 21271  0017C4                     u15377:
 21272  0017C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21273  0017C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21274  0017CC  50E7               	movf	indf1,w,c
 21275  0017CE                     u15370:
 21276  0017CE  0100               	movlb	0	; () banked
 21277  0017D0  6FF5               	movwf	_fence& (0+255),b
 21278                           
 21279                           ;SDCard.c: 358: break;
 21280  0017D2  0012               	return	
 21281  0017D4                     l12848:
 21282                           
 21283                           ;SDCard.c: 361: for(i=0; i<4;i++)
 21284  0017D4  0E00               	movlw	0
 21285  0017D6  6E14               	movwf	monta_sd@i^0,c
 21286  0017D8                     l12854:
 21287                           
 21288                           ;SDCard.c: 362: {;SDCard.c: 363: string_dado.hora_name[i] = *dado;
 21289  0017D8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21290  0017DC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21291  0017E0  6AF8               	clrf	tblptru,c
 21292  0017E2  0E14               	movlw	low (_string_dado+20)
 21293  0017E4  2414               	addwf	monta_sd@i^0,w,c
 21294  0017E6  6ED9               	movwf	fsr2l,c
 21295  0017E8  6ADA               	clrf	fsr2h,c
 21296  0017EA  0E02               	movlw	high (_string_dado+20)
 21297  0017EC  22DA               	addwfc	fsr2h,f,c
 21298  0017EE  0E07               	movlw	(high __ramtop+-1)
 21299  0017F0  64F7               	cpfsgt	tblptrh,c
 21300  0017F2  D003               	bra	u15387
 21301  0017F4  0008               	tblrd		*
 21302  0017F6  50F5               	movf	tablat,w,c
 21303  0017F8  D005               	bra	u15380
 21304  0017FA                     u15387:
 21305  0017FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21306  0017FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21307  001802  50E7               	movf	indf1,w,c
 21308  001804                     u15380:
 21309  001804  6EDF               	movwf	indf2,c
 21310                           
 21311                           ;SDCard.c: 364: dado++;
 21312  001806  4A10               	infsnz	monta_sd@dado^0,f,c
 21313  001808  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21314  00180A  2A14               	incf	monta_sd@i^0,f,c
 21315  00180C  0E03               	movlw	3
 21316  00180E  6414               	cpfsgt	monta_sd@i^0,c
 21317  001810  D7E3               	goto	l12854
 21318  001812  0012               	return	
 21319  001814                     l12862:
 21320                           
 21321                           ;SDCard.c: 370: for(i=0; i<4;i++)
 21322  001814  0E00               	movlw	0
 21323  001816  6E14               	movwf	monta_sd@i^0,c
 21324  001818                     l12868:
 21325                           
 21326                           ;SDCard.c: 371: {;SDCard.c: 372: string_dado.data_name[i] = *dado;
 21327  001818  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21328  00181C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21329  001820  6AF8               	clrf	tblptru,c
 21330  001822  0E12               	movlw	low (_string_dado+18)
 21331  001824  2414               	addwf	monta_sd@i^0,w,c
 21332  001826  6ED9               	movwf	fsr2l,c
 21333  001828  6ADA               	clrf	fsr2h,c
 21334  00182A  0E02               	movlw	high (_string_dado+18)
 21335  00182C  22DA               	addwfc	fsr2h,f,c
 21336  00182E  0E07               	movlw	(high __ramtop+-1)
 21337  001830  64F7               	cpfsgt	tblptrh,c
 21338  001832  D003               	bra	u15407
 21339  001834  0008               	tblrd		*
 21340  001836  50F5               	movf	tablat,w,c
 21341  001838  D005               	bra	u15400
 21342  00183A                     u15407:
 21343  00183A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21344  00183E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21345  001842  50E7               	movf	indf1,w,c
 21346  001844                     u15400:
 21347  001844  6EDF               	movwf	indf2,c
 21348                           
 21349                           ;SDCard.c: 373: dado++;
 21350  001846  4A10               	infsnz	monta_sd@dado^0,f,c
 21351  001848  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21352  00184A  2A14               	incf	monta_sd@i^0,f,c
 21353  00184C  0E03               	movlw	3
 21354  00184E  6414               	cpfsgt	monta_sd@i^0,c
 21355  001850  D7E3               	goto	l12868
 21356  001852  0012               	return	
 21357  001854                     l12876:
 21358                           
 21359                           ;SDCard.c: 378: for(i=0; i<6;i++)
 21360  001854  0E00               	movlw	0
 21361  001856  6E14               	movwf	monta_sd@i^0,c
 21362  001858                     l12882:
 21363                           
 21364                           ;SDCard.c: 379: {;SDCard.c: 380: if(*dado != ' ' && *dado != '\0')
 21365  001858  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21366  00185C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21367  001860  6AF8               	clrf	tblptru,c
 21368  001862  0E07               	movlw	(high __ramtop+-1)
 21369  001864  64F7               	cpfsgt	tblptrh,c
 21370  001866  D003               	bra	u15427
 21371  001868  0008               	tblrd		*
 21372  00186A  50F5               	movf	tablat,w,c
 21373  00186C  D005               	bra	u15420
 21374  00186E                     u15427:
 21375  00186E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21376  001872  CFF7 FFE2          	movff	tblptrh,fsr1h
 21377  001876  50E7               	movf	indf1,w,c
 21378  001878                     u15420:
 21379  001878  0A20               	xorlw	32
 21380  00187A  B4D8               	btfsc	status,2,c
 21381  00187C  D02A               	goto	l12888
 21382  00187E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21383  001882  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21384  001886  6AF8               	clrf	tblptru,c
 21385  001888  0E07               	movlw	(high __ramtop+-1)
 21386  00188A  64F7               	cpfsgt	tblptrh,c
 21387  00188C  D003               	bra	u15447
 21388  00188E  0008               	tblrd		*
 21389  001890  50F5               	movf	tablat,w,c
 21390  001892  D005               	bra	u15440
 21391  001894                     u15447:
 21392  001894  CFF6 FFE1          	movff	tblptrl,fsr1l
 21393  001898  CFF7 FFE2          	movff	tblptrh,fsr1h
 21394  00189C  50E7               	movf	indf1,w,c
 21395  00189E                     u15440:
 21396  00189E  0900               	iorlw	0
 21397  0018A0  B4D8               	btfsc	status,2,c
 21398  0018A2  D017               	goto	l12888
 21399                           
 21400                           ;SDCard.c: 381: {;SDCard.c: 382: vel[i] = *dado;
 21401  0018A4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21402  0018A8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21403  0018AC  6AF8               	clrf	tblptru,c
 21404  0018AE  0EDE               	movlw	low _vel
 21405  0018B0  2414               	addwf	monta_sd@i^0,w,c
 21406  0018B2  6ED9               	movwf	fsr2l,c
 21407  0018B4  6ADA               	clrf	fsr2h,c
 21408  0018B6  0E01               	movlw	high _vel
 21409  0018B8  22DA               	addwfc	fsr2h,f,c
 21410  0018BA  0E07               	movlw	(high __ramtop+-1)
 21411  0018BC  64F7               	cpfsgt	tblptrh,c
 21412  0018BE  D003               	bra	u15467
 21413  0018C0  0008               	tblrd		*
 21414  0018C2  50F5               	movf	tablat,w,c
 21415  0018C4  D005               	bra	u15460
 21416  0018C6                     u15467:
 21417  0018C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21418  0018CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21419  0018CE  50E7               	movf	indf1,w,c
 21420  0018D0                     u15460:
 21421  0018D0  6EDF               	movwf	indf2,c
 21422  0018D2                     l12888:
 21423                           
 21424                           ;SDCard.c: 383: };SDCard.c: 385: dado++;
 21425  0018D2  4A10               	infsnz	monta_sd@dado^0,f,c
 21426  0018D4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21427  0018D6  2A14               	incf	monta_sd@i^0,f,c
 21428  0018D8  0E05               	movlw	5
 21429  0018DA  6414               	cpfsgt	monta_sd@i^0,c
 21430  0018DC  D7BD               	goto	l12882
 21431  0018DE  0012               	return	
 21432  0018E0                     l12896:
 21433  0018E0  5013               	movf	monta_sd@index^0,w,c
 21434                           
 21435                           ; Switch size 1, requested type "simple"
 21436                           ; Number of cases is 8, Range of values is 0 to 7
 21437                           ; switch strategies available:
 21438                           ; Name         Instructions Cycles
 21439                           ; simple_byte           25    13 (average)
 21440                           ;	Chosen strategy is simple_byte
 21441  0018E2  0A00               	xorlw	0	; case 0
 21442  0018E4  B4D8               	btfsc	status,2,c
 21443  0018E6  D697               	goto	l12782
 21444  0018E8  0A01               	xorlw	1	; case 1
 21445  0018EA  B4D8               	btfsc	status,2,c
 21446  0018EC  D6C7               	goto	l12798
 21447  0018EE  0A03               	xorlw	3	; case 2
 21448  0018F0  B4D8               	btfsc	status,2,c
 21449  0018F2  D6F7               	goto	l12814
 21450  0018F4  0A01               	xorlw	1	; case 3
 21451  0018F6  B4D8               	btfsc	status,2,c
 21452  0018F8  D727               	goto	l12830
 21453  0018FA  0A07               	xorlw	7	; case 4
 21454  0018FC  B4D8               	btfsc	status,2,c
 21455  0018FE  D757               	goto	l12846
 21456  001900  0A01               	xorlw	1	; case 5
 21457  001902  B4D8               	btfsc	status,2,c
 21458  001904  D767               	goto	l12848
 21459  001906  0A03               	xorlw	3	; case 6
 21460  001908  B4D8               	btfsc	status,2,c
 21461  00190A  D784               	goto	l12862
 21462  00190C  0A01               	xorlw	1	; case 7
 21463  00190E  A4D8               	btfss	status,2,c
 21464  001910  0012               	return	
 21465  001912  D7A0               	goto	l12876
 21466  001914                     __end_of_monta_sd:
 21467                           	callstack 0
 21468                           
 21469 ;; *************** function _strlen *****************
 21470 ;; Defined at:
 21471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21472 ;; Parameters:    Size  Location     Type
 21473 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21474 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21475 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21476 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21479 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21480 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21481 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21482 ;; Return value:  Size  Location     Type
 21483 ;;                  2    9[COMRAM] unsigned int 
 21484 ;; Registers used:
 21485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21486 ;; Tracked objects:
 21487 ;;		On entry : 0/2
 21488 ;;		On exit  : 0/0
 21489 ;;		Unchanged: 0/0
 21490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21491 ;;      Params:         2       0       0       0       0       0       0       0       0
 21492 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21493 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21494 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21495 ;;Total ram usage:        4 bytes
 21496 ;; Hardware stack levels used:    1
 21497 ;; Hardware stack levels required when called:    2
 21498 ;; This function calls:
 21499 ;;		Nothing
 21500 ;; This function is called by:
 21501 ;;		_monta_sd
 21502 ;; This function uses a non-reentrant model
 21503 ;;
 21504                           
 21505                           	psect	text128
 21506  0054E2                     __ptext128:
 21507                           	callstack 0
 21508  0054E2                     _strlen:
 21509                           	callstack 24
 21510                           
 21511                           ;incstack = 0
 21512  0054E2  C00A  F00C         	movff	strlen@s,strlen@cp
 21513  0054E6  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21514  0054EA  D002               	goto	l12638
 21515  0054EC                     l12636:
 21516  0054EC  4A0C               	infsnz	strlen@cp^0,f,c
 21517  0054EE  2A0D               	incf	(strlen@cp+1)^0,f,c
 21518  0054F0                     l12638:
 21519  0054F0  C00C  FFF6         	movff	strlen@cp,tblptrl
 21520  0054F4  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21521  0054F8  6AF8               	clrf	tblptru,c
 21522  0054FA  0E07               	movlw	(high __ramtop+-1)
 21523  0054FC  64F7               	cpfsgt	tblptrh,c
 21524  0054FE  D003               	bra	u14937
 21525  005500  0008               	tblrd		*
 21526  005502  50F5               	movf	tablat,w,c
 21527  005504  D005               	bra	u14930
 21528  005506                     u14937:
 21529  005506  CFF6 FFE1          	movff	tblptrl,fsr1l
 21530  00550A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21531  00550E  50E7               	movf	indf1,w,c
 21532  005510                     u14930:
 21533  005510  0900               	iorlw	0
 21534  005512  A4D8               	btfss	status,2,c
 21535  005514  D7EB               	goto	l12636
 21536  005516  500A               	movf	strlen@s^0,w,c
 21537  005518  5C0C               	subwf	strlen@cp^0,w,c
 21538  00551A  6E0A               	movwf	?_strlen^0,c
 21539  00551C  500B               	movf	(strlen@s+1)^0,w,c
 21540  00551E  580D               	subwfb	(strlen@cp+1)^0,w,c
 21541  005520  6E0B               	movwf	(?_strlen+1)^0,c
 21542  005522  0012               	return		;funcret
 21543  005524                     __end_of_strlen:
 21544                           	callstack 0
 21545                           
 21546 ;; *************** function _atoi *****************
 21547 ;; Defined at:
 21548 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21549 ;; Parameters:    Size  Location     Type
 21550 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21551 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21552 ;; Auto vars:     Size  Location     Type
 21553 ;;  a               2   21[COMRAM] int 
 21554 ;;  sign            1   20[COMRAM] unsigned char 
 21555 ;; Return value:  Size  Location     Type
 21556 ;;                  2   15[COMRAM] int 
 21557 ;; Registers used:
 21558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21559 ;; Tracked objects:
 21560 ;;		On entry : 0/0
 21561 ;;		On exit  : 0/0
 21562 ;;		Unchanged: 0/0
 21563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21564 ;;      Params:         3       0       0       0       0       0       0       0       0
 21565 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21566 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21567 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21568 ;;Total ram usage:        8 bytes
 21569 ;; Hardware stack levels used:    1
 21570 ;; Hardware stack levels required when called:    3
 21571 ;; This function calls:
 21572 ;;		___wmul
 21573 ;;		_isdigit
 21574 ;; This function is called by:
 21575 ;;		_verifica_dados_operacionais
 21576 ;;		_disparo_gravacao
 21577 ;; This function uses a non-reentrant model
 21578 ;;
 21579                           
 21580                           	psect	text129
 21581  0031F4                     __ptext129:
 21582                           	callstack 0
 21583  0031F4                     _atoi:
 21584                           	callstack 25
 21585                           
 21586                           ;incstack = 0
 21587  0031F4  D006               	goto	l13214
 21588  0031F6                     l13212:
 21589  0031F6  0E01               	movlw	1
 21590  0031F8  2610               	addwf	atoi@s^0,f,c
 21591  0031FA  0E00               	movlw	0
 21592  0031FC  2211               	addwfc	(atoi@s+1)^0,f,c
 21593  0031FE  0E00               	movlw	0
 21594  003200  2212               	addwfc	(atoi@s+2)^0,f,c
 21595  003202                     l13214:
 21596  003202  C010  FFF6         	movff	atoi@s,tblptrl
 21597  003206  C011  FFF7         	movff	atoi@s+1,tblptrh
 21598  00320A  C012  FFF8         	movff	atoi@s+2,tblptru
 21599  00320E  BAF8               	btfsc	tblptru,5,c
 21600  003210  D003               	bra	u15917
 21601  003212  0008               	tblrd		*
 21602  003214  50F5               	movf	tablat,w,c
 21603  003216  D005               	bra	u15910
 21604  003218                     u15917:
 21605  003218  CFF6 FFE1          	movff	tblptrl,fsr1l
 21606  00321C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21607  003220  50E7               	movf	indf1,w,c
 21608  003222                     u15910:
 21609  003222  0A20               	xorlw	32
 21610  003224  B4D8               	btfsc	status,2,c
 21611  003226  D7E7               	goto	l13212
 21612  003228  C010  FFF6         	movff	atoi@s,tblptrl
 21613  00322C  C011  FFF7         	movff	atoi@s+1,tblptrh
 21614  003230  C012  FFF8         	movff	atoi@s+2,tblptru
 21615  003234  BAF8               	btfsc	tblptru,5,c
 21616  003236  D003               	bra	u15937
 21617  003238  0008               	tblrd		*
 21618  00323A  50F5               	movf	tablat,w,c
 21619  00323C  D005               	bra	u15930
 21620  00323E                     u15937:
 21621  00323E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21622  003242  CFF7 FFE2          	movff	tblptrh,fsr1h
 21623  003246  50E7               	movf	indf1,w,c
 21624  003248                     u15930:
 21625  003248  0A09               	xorlw	9
 21626  00324A  B4D8               	btfsc	status,2,c
 21627  00324C  D7D4               	goto	l13212
 21628  00324E  0E00               	movlw	0
 21629  003250  6E17               	movwf	(atoi@a+1)^0,c
 21630  003252  0E00               	movlw	0
 21631  003254  6E16               	movwf	atoi@a^0,c
 21632  003256  0E00               	movlw	0
 21633  003258  6E15               	movwf	atoi@sign^0,c
 21634  00325A  C010  FFF6         	movff	atoi@s,tblptrl
 21635  00325E  C011  FFF7         	movff	atoi@s+1,tblptrh
 21636  003262  C012  FFF8         	movff	atoi@s+2,tblptru
 21637  003266  BAF8               	btfsc	tblptru,5,c
 21638  003268  D003               	bra	u15957
 21639  00326A  0008               	tblrd		*
 21640  00326C  50F5               	movf	tablat,w,c
 21641  00326E  D005               	bra	u15950
 21642  003270                     u15957:
 21643  003270  CFF6 FFE1          	movff	tblptrl,fsr1l
 21644  003274  CFF7 FFE2          	movff	tblptrh,fsr1h
 21645  003278  50E7               	movf	indf1,w,c
 21646  00327A                     u15950:
 21647  00327A  0A2D               	xorlw	45
 21648  00327C  A4D8               	btfss	status,2,c
 21649  00327E  D008               	goto	l13226
 21650  003280  2A15               	incf	atoi@sign^0,f,c
 21651  003282                     l13224:
 21652  003282  0E01               	movlw	1
 21653  003284  2610               	addwf	atoi@s^0,f,c
 21654  003286  0E00               	movlw	0
 21655  003288  2211               	addwfc	(atoi@s+1)^0,f,c
 21656  00328A  0E00               	movlw	0
 21657  00328C  2212               	addwfc	(atoi@s+2)^0,f,c
 21658  00328E  D03A               	goto	l13234
 21659  003290                     l13226:
 21660  003290  C010  FFF6         	movff	atoi@s,tblptrl
 21661  003294  C011  FFF7         	movff	atoi@s+1,tblptrh
 21662  003298  C012  FFF8         	movff	atoi@s+2,tblptru
 21663  00329C  BAF8               	btfsc	tblptru,5,c
 21664  00329E  D003               	bra	u15977
 21665  0032A0  0008               	tblrd		*
 21666  0032A2  50F5               	movf	tablat,w,c
 21667  0032A4  D005               	bra	u15970
 21668  0032A6                     u15977:
 21669  0032A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21670  0032AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21671  0032AE  50E7               	movf	indf1,w,c
 21672  0032B0                     u15970:
 21673  0032B0  0A2B               	xorlw	43
 21674  0032B2  B4D8               	btfsc	status,2,c
 21675  0032B4  D7E6               	goto	l13224
 21676  0032B6  D026               	goto	l13234
 21677  0032B8                     l13230:
 21678  0032B8  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21679  0032BC  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21680  0032C0  0E00               	movlw	0
 21681  0032C2  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21682  0032C4  0E0A               	movlw	10
 21683  0032C6  6E0C               	movwf	___wmul@multiplicand^0,c
 21684  0032C8  EC95  F02C         	call	___wmul	;wreg free
 21685  0032CC  C010  FFF6         	movff	atoi@s,tblptrl
 21686  0032D0  C011  FFF7         	movff	atoi@s+1,tblptrh
 21687  0032D4  C012  FFF8         	movff	atoi@s+2,tblptru
 21688  0032D8  BAF8               	btfsc	tblptru,5,c
 21689  0032DA  D003               	bra	u15997
 21690  0032DC  0008               	tblrd		*
 21691  0032DE  50F5               	movf	tablat,w,c
 21692  0032E0  D005               	bra	u15990
 21693  0032E2                     u15997:
 21694  0032E2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21695  0032E6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21696  0032EA  50E7               	movf	indf1,w,c
 21697  0032EC                     u15990:
 21698  0032EC  6E13               	movwf	??_atoi^0,c
 21699  0032EE  5013               	movf	??_atoi^0,w,c
 21700  0032F0  260A               	addwf	?___wmul^0,f,c
 21701  0032F2  0E00               	movlw	0
 21702  0032F4  220B               	addwfc	(?___wmul+1)^0,f,c
 21703  0032F6  0ED0               	movlw	208
 21704  0032F8  240A               	addwf	?___wmul^0,w,c
 21705  0032FA  6E16               	movwf	atoi@a^0,c
 21706  0032FC  0EFF               	movlw	255
 21707  0032FE  200B               	addwfc	(?___wmul+1)^0,w,c
 21708  003300  6E17               	movwf	(atoi@a+1)^0,c
 21709  003302  D7BF               	goto	l13224
 21710  003304                     l13234:
 21711  003304  C010  FFF6         	movff	atoi@s,tblptrl
 21712  003308  C011  FFF7         	movff	atoi@s+1,tblptrh
 21713  00330C  C012  FFF8         	movff	atoi@s+2,tblptru
 21714  003310  BAF8               	btfsc	tblptru,5,c
 21715  003312  D003               	bra	u16007
 21716  003314  0008               	tblrd		*
 21717  003316  50F5               	movf	tablat,w,c
 21718  003318  D005               	bra	u16000
 21719  00331A                     u16007:
 21720  00331A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21721  00331E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21722  003322  50E7               	movf	indf1,w,c
 21723  003324                     u16000:
 21724  003324  EC70  F02D         	call	_isdigit
 21725  003328  B0D8               	btfsc	status,0,c
 21726  00332A  D7C6               	goto	l13230
 21727  00332C  5015               	movf	atoi@sign^0,w,c
 21728  00332E  B4D8               	btfsc	status,2,c
 21729  003330  D00D               	goto	l2422
 21730  003332  C016  F013         	movff	atoi@a,??_atoi
 21731  003336  C017  F014         	movff	atoi@a+1,??_atoi+1
 21732  00333A  1E13               	comf	??_atoi^0,f,c
 21733  00333C  1E14               	comf	(??_atoi+1)^0,f,c
 21734  00333E  4A13               	infsnz	??_atoi^0,f,c
 21735  003340  2A14               	incf	(??_atoi+1)^0,f,c
 21736  003342  C013  F010         	movff	??_atoi,?_atoi
 21737  003346  C014  F011         	movff	??_atoi+1,?_atoi+1
 21738  00334A  0012               	return	
 21739  00334C                     l2422:
 21740  00334C  C016  F010         	movff	atoi@a,?_atoi
 21741  003350  C017  F011         	movff	atoi@a+1,?_atoi+1
 21742  003354  0012               	return		;funcret
 21743  003356                     __end_of_atoi:
 21744                           	callstack 0
 21745                           
 21746 ;; *************** function _isdigit *****************
 21747 ;; Defined at:
 21748 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;  c               1    wreg     unsigned char 
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;  c               1   11[COMRAM] unsigned char 
 21753 ;; Return value:  Size  Location     Type
 21754 ;;		None               void
 21755 ;; Registers used:
 21756 ;;		wreg, status,2, status,0
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0
 21763 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21764 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21765 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21766 ;;Total ram usage:        3 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; Hardware stack levels required when called:    2
 21769 ;; This function calls:
 21770 ;;		Nothing
 21771 ;; This function is called by:
 21772 ;;		_atoi
 21773 ;;		_atol
 21774 ;; This function uses a non-reentrant model
 21775 ;;
 21776                           
 21777                           	psect	text130
 21778  005AE0                     __ptext130:
 21779                           	callstack 0
 21780  005AE0                     _isdigit:
 21781                           	callstack 20
 21782                           
 21783                           ;incstack = 0
 21784                           ;isdigit@c stored from wreg
 21785  005AE0  6E0C               	movwf	isdigit@c^0,c
 21786  005AE2  0E00               	movlw	0
 21787  005AE4  6E0B               	movwf	_isdigit$3275^0,c
 21788  005AE6  0E3A               	movlw	58
 21789  005AE8  600C               	cpfslt	isdigit@c^0,c
 21790  005AEA  D005               	goto	l10928
 21791  005AEC  0E2F               	movlw	47
 21792  005AEE  640C               	cpfsgt	isdigit@c^0,c
 21793  005AF0  D002               	goto	l10928
 21794  005AF2  0E01               	movlw	1
 21795  005AF4  6E0B               	movwf	_isdigit$3275^0,c
 21796  005AF6                     l10928:
 21797  005AF6  C00B  F00A         	movff	_isdigit$3275,??_isdigit
 21798  005AFA  300A               	rrcf	??_isdigit^0,w,c
 21799  005AFC  0012               	return		;funcret
 21800  005AFE                     __end_of_isdigit:
 21801                           	callstack 0
 21802                           
 21803 ;; *************** function ___wmul *****************
 21804 ;; Defined at:
 21805 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21806 ;; Parameters:    Size  Location     Type
 21807 ;;  multiplier      2    9[COMRAM] unsigned int 
 21808 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21809 ;; Auto vars:     Size  Location     Type
 21810 ;;  product         2   13[COMRAM] unsigned int 
 21811 ;; Return value:  Size  Location     Type
 21812 ;;                  2    9[COMRAM] unsigned int 
 21813 ;; Registers used:
 21814 ;;		wreg, status,2, status,0, prodl, prodh
 21815 ;; Tracked objects:
 21816 ;;		On entry : 0/2
 21817 ;;		On exit  : 0/0
 21818 ;;		Unchanged: 0/0
 21819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21820 ;;      Params:         4       0       0       0       0       0       0       0       0
 21821 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21823 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21824 ;;Total ram usage:        6 bytes
 21825 ;; Hardware stack levels used:    1
 21826 ;; Hardware stack levels required when called:    2
 21827 ;; This function calls:
 21828 ;;		Nothing
 21829 ;; This function is called by:
 21830 ;;		_get_cluster
 21831 ;;		_put_cluster
 21832 ;;		_fprintf
 21833 ;;		_atoi
 21834 ;;		_disparo_gravacao
 21835 ;; This function uses a non-reentrant model
 21836 ;;
 21837                           
 21838                           	psect	text131
 21839  00592A                     __ptext131:
 21840                           	callstack 0
 21841  00592A                     ___wmul:
 21842                           	callstack 25
 21843                           
 21844                           ;incstack = 0
 21845  00592A  500A               	movf	___wmul@multiplier^0,w,c
 21846  00592C  020C               	mulwf	___wmul@multiplicand^0,c
 21847  00592E  CFF3 F00E          	movff	prodl,___wmul@product
 21848  005932  CFF4 F00F          	movff	prodh,___wmul@product+1
 21849  005936  500A               	movf	___wmul@multiplier^0,w,c
 21850  005938  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21851  00593A  50F3               	movf	243,w,c
 21852  00593C  260F               	addwf	(___wmul@product+1)^0,f,c
 21853  00593E  500B               	movf	(___wmul@multiplier+1)^0,w,c
 21854  005940  020C               	mulwf	___wmul@multiplicand^0,c
 21855  005942  50F3               	movf	243,w,c
 21856  005944  260F               	addwf	(___wmul@product+1)^0,f,c
 21857  005946  C00E  F00A         	movff	___wmul@product,?___wmul
 21858  00594A  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 21859  00594E  0012               	return		;funcret
 21860  005950                     __end_of___wmul:
 21861                           	callstack 0
 21862                           
 21863 ;; *************** function _isr *****************
 21864 ;; Defined at:
 21865 ;;		line 111 in file "main.c"
 21866 ;; Parameters:    Size  Location     Type
 21867 ;;		None
 21868 ;; Auto vars:     Size  Location     Type
 21869 ;;  cont            1    8[COMRAM] unsigned char 
 21870 ;; Return value:  Size  Location     Type
 21871 ;;                  1    wreg      void 
 21872 ;; Registers used:
 21873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21874 ;; Tracked objects:
 21875 ;;		On entry : 0/0
 21876 ;;		On exit  : 0/0
 21877 ;;		Unchanged: 0/0
 21878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21879 ;;      Params:         0       0       0       0       0       0       0       0       0
 21880 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21881 ;;      Temps:          6       0       0       0       0       0       0       0       0
 21882 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21883 ;;Total ram usage:        7 bytes
 21884 ;; Hardware stack levels used:    1
 21885 ;; Hardware stack levels required when called:    1
 21886 ;; This function calls:
 21887 ;;		_recebe_dado_uart
 21888 ;;		_tratamento_uart
 21889 ;;		i2_write_timer_zero
 21890 ;; This function is called by:
 21891 ;;		Interrupt level 2
 21892 ;; This function uses a non-reentrant model
 21893 ;;
 21894                           
 21895                           	psect	intcode
 21896  000008                     __pintcode:
 21897                           	callstack 0
 21898  000008                     _isr:
 21899                           	callstack 13
 21900                           
 21901                           ;incstack = 0
 21902  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21903  00000A  EDE0  F01E         	call	int_func,f	;refresh shadow registers
 21904                           
 21905                           	psect	intcode_body
 21906  003DC0                     __pintcode_body:
 21907                           	callstack 13
 21908  003DC0                     int_func:
 21909                           	callstack 13
 21910  003DC0  0006               	pop		; remove dummy address from shadow register refresh
 21911  003DC2  CFD9 F005          	movff	fsr2l,??_isr+2
 21912  003DC6  CFDA F006          	movff	fsr2h,??_isr+3
 21913  003DCA  CFF3 F007          	movff	prodl,??_isr+4
 21914  003DCE  CFF4 F008          	movff	prodh,??_isr+5
 21915                           
 21916                           ;main.c: 113: unsigned char cont;;main.c: 116: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21917  003DD2  BA9D               	btfsc	157,5,c	;volatile
 21918  003DD4  AA9E               	btfss	158,5,c	;volatile
 21919  003DD6  D015               	goto	i2l10088
 21920                           
 21921                           ;main.c: 117: {;main.c: 118: PIR1bits.RCIF = 0;
 21922  003DD8  9A9E               	bcf	158,5,c	;volatile
 21923                           
 21924                           ;main.c: 119: data_uart_recebe = recebe_dado_uart();
 21925  003DDA  ECC4  F02D         	call	_recebe_dado_uart	;wreg free
 21926  003DDE  0100               	movlb	0	; () banked
 21927  003DE0  6FF3               	movwf	_data_uart_recebe& (0+255),b
 21928                           
 21929                           ; BSR set to: 0
 21930                           ;main.c: 120: tratamento_uart(data_uart_recebe);
 21931  003DE2  51F3               	movf	_data_uart_recebe& (0+255),w,b
 21932  003DE4  EC59  F01D         	call	_tratamento_uart
 21933                           
 21934                           ;main.c: 121: PORTBbits.RB2 = !PORTBbits.RB2;
 21935  003DE8  B481               	btfsc	129,2,c	;volatile
 21936  003DEA  D003               	goto	i2u1117_40
 21937  003DEC  6A03               	clrf	??_isr^0,c
 21938  003DEE  2A03               	incf	??_isr^0,f,c
 21939  003DF0  D001               	goto	i2u1118_48
 21940  003DF2                     i2u1117_40:
 21941  003DF2  6A03               	clrf	??_isr^0,c
 21942  003DF4                     i2u1118_48:
 21943  003DF4  4603               	rlncf	??_isr^0,f,c
 21944  003DF6  4603               	rlncf	??_isr^0,f,c
 21945  003DF8  5081               	movf	129,w,c	;volatile
 21946  003DFA  1803               	xorwf	??_isr^0,w,c
 21947  003DFC  0BFB               	andlw	-5
 21948  003DFE  1803               	xorwf	??_isr^0,w,c
 21949  003E00  6E81               	movwf	129,c	;volatile
 21950  003E02                     i2l10088:
 21951                           
 21952                           ;main.c: 122: };main.c: 125: unsigned char cont;;main.c: 127: if (TMR0IF && T0IF)
 21953  003E02  B4F2               	btfsc	4082,2,c	;volatile
 21954  003E04  A4F2               	btfss	4082,2,c	;volatile
 21955  003E06  D046               	goto	i2l10126
 21956                           
 21957                           ;main.c: 128: {;main.c: 129: INTCONbits.TMR0IF = 0;
 21958  003E08  94F2               	bcf	242,2,c	;volatile
 21959                           
 21960                           ;main.c: 130: sinaliza_int_timer = 1;
 21961  003E0A  0E01               	movlw	1
 21962  003E0C  0100               	movlb	0	; () banked
 21963  003E0E  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
 21964                           
 21965                           ;main.c: 132: for(cont= 0; cont<3;cont++)
 21966  003E10  0E00               	movlw	0
 21967  003E12  6E09               	movwf	isr@cont^0,c
 21968  003E14                     i2l10100:
 21969                           
 21970                           ;main.c: 133: {;main.c: 134: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21971  003E14  5009               	movf	isr@cont^0,w,c
 21972  003E16  0D02               	mullw	2
 21973  003E18  0E2D               	movlw	low _tempo_tarefa
 21974  003E1A  24F3               	addwf	243,w,c
 21975  003E1C  6ED9               	movwf	fsr2l,c
 21976  003E1E  0E01               	movlw	high _tempo_tarefa
 21977  003E20  20F4               	addwfc	prodh,w,c
 21978  003E22  6EDA               	movwf	fsr2h,c
 21979  003E24  50DE               	movf	postinc2,w,c
 21980  003E26  10DE               	iorwf	postinc2,w,c
 21981  003E28  B4D8               	btfsc	status,2,c
 21982  003E2A  D00B               	goto	i2l10104
 21983  003E2C  5009               	movf	isr@cont^0,w,c
 21984  003E2E  0D02               	mullw	2
 21985  003E30  0E2D               	movlw	low _tempo_tarefa
 21986  003E32  24F3               	addwf	243,w,c
 21987  003E34  6ED9               	movwf	fsr2l,c
 21988  003E36  0E01               	movlw	high _tempo_tarefa
 21989  003E38  20F4               	addwfc	prodh,w,c
 21990  003E3A  6EDA               	movwf	fsr2h,c
 21991  003E3C  06DE               	decf	postinc2,f,c
 21992  003E3E  0E00               	movlw	0
 21993  003E40  5ADD               	subwfb	postdec2,f,c
 21994  003E42                     i2l10104:
 21995  003E42  2A09               	incf	isr@cont^0,f,c
 21996  003E44  0E02               	movlw	2
 21997  003E46  6409               	cpfsgt	isr@cont^0,c
 21998  003E48  D7E5               	goto	i2l10100
 21999                           
 22000                           ;main.c: 136: };main.c: 137: if(time_sd > 0) time_sd--;
 22001  003E4A  0101               	movlb	1	; () banked
 22002  003E4C  516E               	movf	_time_sd& (0+255),w,b
 22003  003E4E  116F               	iorwf	(_time_sd+1)& (0+255),w,b
 22004  003E50  B4D8               	btfsc	status,2,c
 22005  003E52  D003               	goto	i2l10112
 22006                           
 22007                           ; BSR set to: 1
 22008  003E54  076E               	decf	_time_sd& (0+255),f,b
 22009  003E56  A0D8               	btfss	status,0,c
 22010  003E58  076F               	decf	(_time_sd+1)& (0+255),f,b
 22011  003E5A                     i2l10112:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;main.c: 138: if(time_atualizacao > 0) time_atualizacao--;
 22015  003E5A  0100               	movlb	0	; () banked
 22016  003E5C  51EA               	movf	_time_atualizacao& (0+255),w,b
 22017  003E5E  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22018  003E60  B4D8               	btfsc	status,2,c
 22019  003E62  D003               	goto	i2l10116
 22020                           
 22021                           ; BSR set to: 0
 22022  003E64  07EA               	decf	_time_atualizacao& (0+255),f,b
 22023  003E66  A0D8               	btfss	status,0,c
 22024  003E68  07EB               	decf	(_time_atualizacao+1)& (0+255),f,b
 22025  003E6A                     i2l10116:
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;main.c: 140: if(tarefa_em_execucao == 1)
 22029  003E6A  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22030  003E6C  A4D8               	btfss	status,2,c
 22031  003E6E  D00C               	goto	i2l10124
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;main.c: 141: {;main.c: 142: timeout_tarefa--;
 22035  003E70  0101               	movlb	1	; () banked
 22036  003E72  0770               	decf	_timeout_tarefa& (0+255),f,b
 22037  003E74  A0D8               	btfss	status,0,c
 22038  003E76  0771               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;main.c: 143: if(!timeout_tarefa)
 22042  003E78  5170               	movf	_timeout_tarefa& (0+255),w,b
 22043  003E7A  1171               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22044  003E7C  A4D8               	btfss	status,2,c
 22045  003E7E  D004               	goto	i2l10124
 22046                           
 22047                           ; BSR set to: 1
 22048                           ;main.c: 144: {;main.c: 146: PCLATH = 0;
 22049  003E80  0E00               	movlw	0
 22050  003E82  6EFA               	movwf	250,c	;volatile
 22051                           
 22052                           ;main.c: 147: PCL = 0;
 22053  003E84  0E00               	movlw	0
 22054  003E86  6EF9               	movwf	249,c	;volatile
 22055  003E88                     i2l10124:
 22056                           
 22057                           ;main.c: 148: };main.c: 149: };main.c: 153: write_timer_zero(0x45);
 22058  003E88  0E00               	movlw	0
 22059  003E8A  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22060  003E8C  0E45               	movlw	69
 22061  003E8E  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22062  003E90  EC28  F02E         	call	i2_write_timer_zero	;wreg free
 22063  003E94                     i2l10126:
 22064                           
 22065                           ;main.c: 154: };main.c: 156: if (INT0IF && INT0IE)
 22066  003E94  B2F2               	btfsc	4082,1,c	;volatile
 22067  003E96  A8F2               	btfss	4082,4,c	;volatile
 22068  003E98  D001               	goto	i2l1545
 22069                           
 22070                           ;main.c: 157: {;main.c: 158: INT0IF = 0;
 22071  003E9A  92F2               	bcf	4082,1,c	;volatile
 22072  003E9C                     i2l1545:
 22073  003E9C  C008  FFF4         	movff	??_isr+5,prodh
 22074  003EA0  C007  FFF3         	movff	??_isr+4,prodl
 22075  003EA4  C006  FFDA         	movff	??_isr+3,fsr2h
 22076  003EA8  C005  FFD9         	movff	??_isr+2,fsr2l
 22077  003EAC  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22078  003EAE  0011               	retfie		f
 22079  003EB0                     __end_of_isr:
 22080                           	callstack 0
 22081                           
 22082 ;; *************** function i2_write_timer_zero *****************
 22083 ;; Defined at:
 22084 ;;		line 134 in file "bibliotecas/hardware.c"
 22085 ;; Parameters:    Size  Location     Type
 22086 ;;  timer0          2    0[COMRAM] unsigned int 
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;		None
 22089 ;; Return value:  Size  Location     Type
 22090 ;;                  1    wreg      void 
 22091 ;; Registers used:
 22092 ;;		None
 22093 ;; Tracked objects:
 22094 ;;		On entry : 3E/0
 22095 ;;		On exit  : 3E/0
 22096 ;;		Unchanged: 3E/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22098 ;;      Params:         2       0       0       0       0       0       0       0       0
 22099 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22101 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22102 ;;Total ram usage:        2 bytes
 22103 ;; Hardware stack levels used:    1
 22104 ;; This function calls:
 22105 ;;		Nothing
 22106 ;; This function is called by:
 22107 ;;		_isr
 22108 ;; This function uses a non-reentrant model
 22109 ;;
 22110                           
 22111                           	psect	text133
 22112  005C50                     __ptext133:
 22113                           	callstack 0
 22114  005C50                     i2_write_timer_zero:
 22115                           	callstack 13
 22116                           
 22117                           ;hardware.c: 142: TMR0 = timer0;
 22118                           
 22119                           ;incstack = 0
 22120  005C50  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22121  005C54  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22122  005C58  0012               	return		;funcret
 22123  005C5A                     __end_ofi2_write_timer_zero:
 22124                           	callstack 0
 22125                           
 22126 ;; *************** function _tratamento_uart *****************
 22127 ;; Defined at:
 22128 ;;		line 347 in file "bibliotecas/GPS.c"
 22129 ;; Parameters:    Size  Location     Type
 22130 ;;  received_cha    1    wreg     unsigned char 
 22131 ;; Auto vars:     Size  Location     Type
 22132 ;;  received_cha    1    0[COMRAM] unsigned char 
 22133 ;; Return value:  Size  Location     Type
 22134 ;;                  1    wreg      void 
 22135 ;; Registers used:
 22136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22137 ;; Tracked objects:
 22138 ;;		On entry : 3F/0
 22139 ;;		On exit  : 3E/0
 22140 ;;		Unchanged: 0/0
 22141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22142 ;;      Params:         0       0       0       0       0       0       0       0       0
 22143 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22145 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22146 ;;Total ram usage:        1 bytes
 22147 ;; Hardware stack levels used:    1
 22148 ;; This function calls:
 22149 ;;		Nothing
 22150 ;; This function is called by:
 22151 ;;		_isr
 22152 ;; This function uses a non-reentrant model
 22153 ;;
 22154                           
 22155                           	psect	text134
 22156  003AB2                     __ptext134:
 22157                           	callstack 0
 22158  003AB2                     _tratamento_uart:
 22159                           	callstack 13
 22160                           
 22161                           ;incstack = 0
 22162                           ;tratamento_uart@received_char stored from wreg
 22163  003AB2  6E01               	movwf	tratamento_uart@received_char^0,c
 22164                           
 22165                           ;GPS.c: 349: if(received_char =='$'){
 22166  003AB4  0E24               	movlw	36
 22167  003AB6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22168  003AB8  A4D8               	btfss	status,2,c
 22169  003ABA  D011               	goto	i2l9876
 22170                           
 22171                           ;GPS.c: 350: gga_index = 0;
 22172  003ABC  0E00               	movlw	0
 22173  003ABE  0100               	movlb	0	; () banked
 22174  003AC0  6FEF               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22175  003AC2  0E00               	movlw	0
 22176  003AC4  6FEE               	movwf	_gga_index& (0+255),b	;volatile
 22177                           
 22178                           ;GPS.c: 351: rmc_index = 0;
 22179  003AC6  0E00               	movlw	0
 22180  003AC8  6FED               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22181  003ACA  0E00               	movlw	0
 22182  003ACC  6FEC               	movwf	_rmc_index& (0+255),b	;volatile
 22183                           
 22184                           ;GPS.c: 352: is_it_gga_string = 0;
 22185  003ACE  0E00               	movlw	0
 22186  003AD0  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22187                           
 22188                           ;GPS.c: 353: is_it_rmc_string = 0;
 22189  003AD2  0E00               	movlw	0
 22190  003AD4  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22191                           
 22192                           ;GPS.c: 354: comma_counter_gga = 0;
 22193  003AD6  0E00               	movlw	0
 22194  003AD8  6FF9               	movwf	_comma_counter_gga& (0+255),b
 22195                           
 22196                           ;GPS.c: 355: comma_counter_rmc = 0;
 22197  003ADA  0E00               	movlw	0
 22198  003ADC  6FF8               	movwf	_comma_counter_rmc& (0+255),b
 22199  003ADE                     i2l9876:
 22200                           
 22201                           ;GPS.c: 356: };GPS.c: 358: if(is_it_gga_string == 1)
 22202  003ADE  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22203  003AE0  A4D8               	btfss	status,2,c
 22204  003AE2  D01A               	goto	i2l9886
 22205                           
 22206                           ;GPS.c: 359: {;GPS.c: 360: if(received_char == ',' )
 22207  003AE4  0E2C               	movlw	44
 22208  003AE6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22209  003AE8  A4D8               	btfss	status,2,c
 22210  003AEA  D00A               	goto	i2l9884
 22211                           
 22212                           ;GPS.c: 361: {;GPS.c: 362: gga_pointers[comma_counter_gga++] = gga_index;
 22213  003AEC  0E16               	movlw	low _gga_pointers
 22214  003AEE  0100               	movlb	0	; () banked
 22215  003AF0  25F9               	addwf	_comma_counter_gga& (0+255),w,b
 22216  003AF2  6ED9               	movwf	fsr2l,c
 22217  003AF4  6ADA               	clrf	fsr2h,c
 22218  003AF6  0E02               	movlw	high _gga_pointers
 22219  003AF8  22DA               	addwfc	fsr2h,f,c
 22220  003AFA  C0EE  FFDF         	movff	_gga_index,indf2	;volatile
 22221                           
 22222                           ; BSR set to: 0
 22223  003AFE  2BF9               	incf	_comma_counter_gga& (0+255),f,b
 22224  003B00                     i2l9884:
 22225                           
 22226                           ;GPS.c: 363: };GPS.c: 364: gga_buffer[gga_index++] = received_char;
 22227  003B00  0E00               	movlw	low _gga_buffer
 22228  003B02  0100               	movlb	0	; () banked
 22229  003B04  25EE               	addwf	_gga_index& (0+255),w,b	;volatile
 22230  003B06  6ED9               	movwf	fsr2l,c
 22231  003B08  0E03               	movlw	high _gga_buffer
 22232  003B0A  21EF               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22233  003B0C  6EDA               	movwf	fsr2h,c
 22234  003B0E  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22235  003B12  4BEE               	infsnz	_gga_index& (0+255),f,b	;volatile
 22236  003B14  2BEF               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22237                           
 22238                           ;GPS.c: 365: }
 22239  003B16  D01C               	goto	i2l9894
 22240  003B18                     i2l9886:
 22241                           
 22242                           ;GPS.c: 366: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22243  003B18  0E47               	movlw	71
 22244  003B1A  0101               	movlb	1	; () banked
 22245  003B1C  195C               	xorwf	_gga_code& (0+255),w,b
 22246  003B1E  A4D8               	btfss	status,2,c
 22247  003B20  D011               	goto	i2l439
 22248                           
 22249                           ; BSR set to: 1
 22250  003B22  0E47               	movlw	71
 22251  003B24  195D               	xorwf	(_gga_code+1)& (0+255),w,b
 22252  003B26  A4D8               	btfss	status,2,c
 22253  003B28  D00D               	goto	i2l439
 22254                           
 22255                           ; BSR set to: 1
 22256  003B2A  0E41               	movlw	65
 22257  003B2C  195E               	xorwf	(_gga_code+2)& (0+255),w,b
 22258  003B2E  A4D8               	btfss	status,2,c
 22259  003B30  D009               	goto	i2l439
 22260                           
 22261                           ; BSR set to: 1
 22262                           ;GPS.c: 367: is_it_gga_string = 1;
 22263  003B32  0E01               	movlw	1
 22264  003B34  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22265                           
 22266                           ;GPS.c: 368: gga_code[0] = 0;
 22267  003B36  0E00               	movlw	0
 22268  003B38  6F5C               	movwf	_gga_code& (0+255),b
 22269                           
 22270                           ;GPS.c: 369: gga_code[1] = 0;
 22271  003B3A  0E00               	movlw	0
 22272  003B3C  6F5D               	movwf	(_gga_code+1)& (0+255),b
 22273                           
 22274                           ;GPS.c: 370: gga_code[2] = 0;
 22275  003B3E  0E00               	movlw	0
 22276  003B40  6F5E               	movwf	(_gga_code+2)& (0+255),b
 22277                           
 22278                           ;GPS.c: 371: }
 22279  003B42  D006               	goto	i2l9894
 22280  003B44                     i2l439:
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;GPS.c: 372: else{;GPS.c: 373: gga_code[0] = gga_code[1];
 22284  003B44  C15D  F15C         	movff	_gga_code+1,_gga_code
 22285                           
 22286                           ;GPS.c: 374: gga_code[1] = gga_code[2];
 22287  003B48  C15E  F15D         	movff	_gga_code+2,_gga_code+1
 22288                           
 22289                           ;GPS.c: 375: gga_code[2] = received_char;
 22290  003B4C  C001  F15E         	movff	tratamento_uart@received_char,_gga_code+2
 22291  003B50                     i2l9894:
 22292                           
 22293                           ;GPS.c: 376: };GPS.c: 378: if(is_it_rmc_string == 1)
 22294  003B50  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22295  003B52  A4D8               	btfss	status,2,c
 22296  003B54  D01A               	goto	i2l9904
 22297                           
 22298                           ;GPS.c: 379: {;GPS.c: 380: if(received_char == ',' )
 22299  003B56  0E2C               	movlw	44
 22300  003B58  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22301  003B5A  A4D8               	btfss	status,2,c
 22302  003B5C  D00A               	goto	i2l9902
 22303                           
 22304                           ;GPS.c: 381: {;GPS.c: 382: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22305  003B5E  0E2A               	movlw	low _rmc_pointers
 22306  003B60  0100               	movlb	0	; () banked
 22307  003B62  25F8               	addwf	_comma_counter_rmc& (0+255),w,b
 22308  003B64  6ED9               	movwf	fsr2l,c
 22309  003B66  6ADA               	clrf	fsr2h,c
 22310  003B68  0E02               	movlw	high _rmc_pointers
 22311  003B6A  22DA               	addwfc	fsr2h,f,c
 22312  003B6C  C0EC  FFDF         	movff	_rmc_index,indf2	;volatile
 22313                           
 22314                           ; BSR set to: 0
 22315  003B70  2BF8               	incf	_comma_counter_rmc& (0+255),f,b
 22316  003B72                     i2l9902:
 22317                           
 22318                           ;GPS.c: 383: };GPS.c: 384: rmc_buffer[rmc_index++] = received_char;
 22319  003B72  0E50               	movlw	low _rmc_buffer
 22320  003B74  0100               	movlb	0	; () banked
 22321  003B76  25EC               	addwf	_rmc_index& (0+255),w,b	;volatile
 22322  003B78  6ED9               	movwf	fsr2l,c
 22323  003B7A  0E03               	movlw	high _rmc_buffer
 22324  003B7C  21ED               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22325  003B7E  6EDA               	movwf	fsr2h,c
 22326  003B80  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22327  003B84  4BEC               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22328  003B86  2BED               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22329                           
 22330                           ;GPS.c: 385: }
 22331  003B88  0012               	return	
 22332  003B8A                     i2l9904:
 22333                           
 22334                           ;GPS.c: 386: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22335  003B8A  0E52               	movlw	82
 22336  003B8C  0101               	movlb	1	; () banked
 22337  003B8E  1959               	xorwf	_rmc_code& (0+255),w,b
 22338  003B90  A4D8               	btfss	status,2,c
 22339  003B92  D011               	goto	i2l444
 22340                           
 22341                           ; BSR set to: 1
 22342  003B94  0E4D               	movlw	77
 22343  003B96  195A               	xorwf	(_rmc_code+1)& (0+255),w,b
 22344  003B98  A4D8               	btfss	status,2,c
 22345  003B9A  D00D               	goto	i2l444
 22346                           
 22347                           ; BSR set to: 1
 22348  003B9C  0E43               	movlw	67
 22349  003B9E  195B               	xorwf	(_rmc_code+2)& (0+255),w,b
 22350  003BA0  A4D8               	btfss	status,2,c
 22351  003BA2  D009               	goto	i2l444
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;GPS.c: 387: is_it_rmc_string = 1;
 22355  003BA4  0E01               	movlw	1
 22356  003BA6  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22357                           
 22358                           ;GPS.c: 388: rmc_code[0] = 0;
 22359  003BA8  0E00               	movlw	0
 22360  003BAA  6F59               	movwf	_rmc_code& (0+255),b
 22361                           
 22362                           ;GPS.c: 389: rmc_code[1] = 0;
 22363  003BAC  0E00               	movlw	0
 22364  003BAE  6F5A               	movwf	(_rmc_code+1)& (0+255),b
 22365                           
 22366                           ;GPS.c: 390: rmc_code[2] = 0;
 22367  003BB0  0E00               	movlw	0
 22368  003BB2  6F5B               	movwf	(_rmc_code+2)& (0+255),b
 22369                           
 22370                           ;GPS.c: 391: }
 22371  003BB4  0012               	return	
 22372  003BB6                     i2l444:
 22373                           
 22374                           ; BSR set to: 1
 22375                           ;GPS.c: 392: else{;GPS.c: 393: rmc_code[0] = rmc_code[1];
 22376  003BB6  C15A  F159         	movff	_rmc_code+1,_rmc_code
 22377                           
 22378                           ;GPS.c: 394: rmc_code[1] = rmc_code[2];
 22379  003BBA  C15B  F15A         	movff	_rmc_code+2,_rmc_code+1
 22380                           
 22381                           ;GPS.c: 395: rmc_code[2] = received_char;
 22382  003BBE  C001  F15B         	movff	tratamento_uart@received_char,_rmc_code+2
 22383  003BC2  0012               	return		;funcret
 22384  003BC4                     __end_of_tratamento_uart:
 22385                           	callstack 0
 22386                           
 22387 ;; *************** function _recebe_dado_uart *****************
 22388 ;; Defined at:
 22389 ;;		line 138 in file "bibliotecas/uart.c"
 22390 ;; Parameters:    Size  Location     Type
 22391 ;;		None
 22392 ;; Auto vars:     Size  Location     Type
 22393 ;;		None
 22394 ;; Return value:  Size  Location     Type
 22395 ;;                  1    wreg      unsigned char 
 22396 ;; Registers used:
 22397 ;;		wreg, status,2
 22398 ;; Tracked objects:
 22399 ;;		On entry : 0/0
 22400 ;;		On exit  : 0/0
 22401 ;;		Unchanged: 0/0
 22402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22403 ;;      Params:         0       0       0       0       0       0       0       0       0
 22404 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22406 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22407 ;;Total ram usage:        0 bytes
 22408 ;; Hardware stack levels used:    1
 22409 ;; This function calls:
 22410 ;;		Nothing
 22411 ;; This function is called by:
 22412 ;;		_isr
 22413 ;; This function uses a non-reentrant model
 22414 ;;
 22415                           
 22416                           	psect	text135
 22417  005B88                     __ptext135:
 22418                           	callstack 0
 22419  005B88                     _recebe_dado_uart:
 22420                           	callstack 13
 22421                           
 22422                           ;uart.c: 140: while(RCIF==0);
 22423                           
 22424                           ;incstack = 0
 22425  005B88  AA9E               	btfss	3998,5,c	;volatile
 22426  005B8A  D7FE               	goto	_recebe_dado_uart
 22427                           
 22428                           ;uart.c: 141: if(RCSTAbits.OERR)
 22429  005B8C  A2AB               	btfss	171,1,c	;volatile
 22430  005B8E  D003               	goto	i2l10014
 22431                           
 22432                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22433  005B90  98AB               	bcf	4011,4,c	;volatile
 22434                           
 22435                           ;uart.c: 144: __nop();
 22436  005B92  F000               	nop	
 22437                           
 22438                           ;uart.c: 145: CREN=1;
 22439  005B94  88AB               	bsf	4011,4,c	;volatile
 22440  005B96                     i2l10014:
 22441                           
 22442                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22443  005B96  50AE               	movf	174,w,c	;volatile
 22444  005B98  0012               	return		;funcret
 22445  005B9A                     __end_of_recebe_dado_uart:
 22446                           	callstack 0
 22447                           
 22448                           	psect	text136
 22449  000000                     __ptext136:
 22450                           	callstack 0
 22451                           
 22452                           	psect	rparam
 22453  0000                     
 22454                           	psect	temp
 22455  000056                     btemp:
 22456                           	callstack 0
 22457  000056                     	ds	1
 22458  0000                     int$flags	set	btemp
 22459  0000                     wtemp8	set	btemp+1
 22460  0000                     ttemp5	set	btemp+1
 22461  0000                     ttemp6	set	btemp+4
 22462  0000                     ttemp7	set	btemp+8
 22463                           
 22464                           	psect	idloc
 22465                           
 22466                           ;Config register IDLOC0 @ 0x200000
 22467                           ;	unspecified, using default values
 22468  200000                     	org	2097152
 22469  200000  FF                 	db	255
 22470                           
 22471                           ;Config register IDLOC1 @ 0x200001
 22472                           ;	unspecified, using default values
 22473  200001                     	org	2097153
 22474  200001  FF                 	db	255
 22475                           
 22476                           ;Config register IDLOC2 @ 0x200002
 22477                           ;	unspecified, using default values
 22478  200002                     	org	2097154
 22479  200002  FF                 	db	255
 22480                           
 22481                           ;Config register IDLOC3 @ 0x200003
 22482                           ;	unspecified, using default values
 22483  200003                     	org	2097155
 22484  200003  FF                 	db	255
 22485                           
 22486                           ;Config register IDLOC4 @ 0x200004
 22487                           ;	unspecified, using default values
 22488  200004                     	org	2097156
 22489  200004  FF                 	db	255
 22490                           
 22491                           ;Config register IDLOC5 @ 0x200005
 22492                           ;	unspecified, using default values
 22493  200005                     	org	2097157
 22494  200005  FF                 	db	255
 22495                           
 22496                           ;Config register IDLOC6 @ 0x200006
 22497                           ;	unspecified, using default values
 22498  200006                     	org	2097158
 22499  200006  FF                 	db	255
 22500                           
 22501                           ;Config register IDLOC7 @ 0x200007
 22502                           ;	unspecified, using default values
 22503  200007                     	org	2097159
 22504  200007  FF                 	db	255
 22505                           
 22506                           	psect	config
 22507                           
 22508                           ;Config register CONFIG1L @ 0x300000
 22509                           ;	unspecified, using default values
 22510                           ;	PLL Prescaler Selection bits
 22511                           ;	PLLDIV = 0x0, unprogrammed default
 22512                           ;	System Clock Postscaler Selection bits
 22513                           ;	CPUDIV = 0x0, unprogrammed default
 22514                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22515                           ;	USBDIV = 0x0, unprogrammed default
 22516  300000                     	org	3145728
 22517  300000  00                 	db	0
 22518                           
 22519                           ;Config register CONFIG1H @ 0x300001
 22520                           ;	unspecified, using default values
 22521                           ;	Oscillator Selection bits
 22522                           ;	FOSC = 0x5, unprogrammed default
 22523                           ;	Fail-Safe Clock Monitor Enable bit
 22524                           ;	FCMEN = 0x0, unprogrammed default
 22525                           ;	Internal/External Oscillator Switchover bit
 22526                           ;	IESO = 0x0, unprogrammed default
 22527  300001                     	org	3145729
 22528  300001  05                 	db	5
 22529                           
 22530                           ;Config register CONFIG2L @ 0x300002
 22531                           ;	unspecified, using default values
 22532                           ;	Power-up Timer Enable bit
 22533                           ;	PWRT = 0x1, unprogrammed default
 22534                           ;	Brown-out Reset Enable bits
 22535                           ;	BOR = 0x3, unprogrammed default
 22536                           ;	Brown-out Reset Voltage bits
 22537                           ;	BORV = 0x3, unprogrammed default
 22538                           ;	USB Voltage Regulator Enable bit
 22539                           ;	VREGEN = 0x0, unprogrammed default
 22540  300002                     	org	3145730
 22541  300002  1F                 	db	31
 22542                           
 22543                           ;Config register CONFIG2H @ 0x300003
 22544                           ;	unspecified, using default values
 22545                           ;	Watchdog Timer Enable bit
 22546                           ;	WDT = 0x1, unprogrammed default
 22547                           ;	Watchdog Timer Postscale Select bits
 22548                           ;	WDTPS = 0xF, unprogrammed default
 22549  300003                     	org	3145731
 22550  300003  1F                 	db	31
 22551                           
 22552                           ; Padding undefined space
 22553  300004                     	org	3145732
 22554  300004  FF                 	db	255
 22555                           
 22556                           ;Config register CONFIG3H @ 0x300005
 22557                           ;	unspecified, using default values
 22558                           ;	CCP2 MUX bit
 22559                           ;	CCP2MX = 0x1, unprogrammed default
 22560                           ;	PORTB A/D Enable bit
 22561                           ;	PBADEN = 0x1, unprogrammed default
 22562                           ;	Low-Power Timer 1 Oscillator Enable bit
 22563                           ;	LPT1OSC = 0x0, unprogrammed default
 22564                           ;	MCLR Pin Enable bit
 22565                           ;	MCLRE = 0x1, unprogrammed default
 22566  300005                     	org	3145733
 22567  300005  83                 	db	131
 22568                           
 22569                           ;Config register CONFIG4L @ 0x300006
 22570                           ;	unspecified, using default values
 22571                           ;	Stack Full/Underflow Reset Enable bit
 22572                           ;	STVREN = 0x1, unprogrammed default
 22573                           ;	Single-Supply ICSP Enable bit
 22574                           ;	LVP = 0x1, unprogrammed default
 22575                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22576                           ;	ICPRT = 0x0, unprogrammed default
 22577                           ;	Extended Instruction Set Enable bit
 22578                           ;	XINST = 0x0, unprogrammed default
 22579                           ;	Background Debugger Enable bit
 22580                           ;	DEBUG = 0x1, unprogrammed default
 22581  300006                     	org	3145734
 22582  300006  85                 	db	133
 22583                           
 22584                           ; Padding undefined space
 22585  300007                     	org	3145735
 22586  300007  FF                 	db	255
 22587                           
 22588                           ;Config register CONFIG5L @ 0x300008
 22589                           ;	unspecified, using default values
 22590                           ;	Code Protection bit
 22591                           ;	CP0 = 0x1, unprogrammed default
 22592                           ;	Code Protection bit
 22593                           ;	CP1 = 0x1, unprogrammed default
 22594                           ;	Code Protection bit
 22595                           ;	CP2 = 0x1, unprogrammed default
 22596                           ;	Code Protection bit
 22597                           ;	CP3 = 0x1, unprogrammed default
 22598  300008                     	org	3145736
 22599  300008  0F                 	db	15
 22600                           
 22601                           ;Config register CONFIG5H @ 0x300009
 22602                           ;	unspecified, using default values
 22603                           ;	Boot Block Code Protection bit
 22604                           ;	CPB = 0x1, unprogrammed default
 22605                           ;	Data EEPROM Code Protection bit
 22606                           ;	CPD = 0x1, unprogrammed default
 22607  300009                     	org	3145737
 22608  300009  C0                 	db	192
 22609                           
 22610                           ;Config register CONFIG6L @ 0x30000A
 22611                           ;	unspecified, using default values
 22612                           ;	Write Protection bit
 22613                           ;	WRT0 = 0x1, unprogrammed default
 22614                           ;	Write Protection bit
 22615                           ;	WRT1 = 0x1, unprogrammed default
 22616                           ;	Write Protection bit
 22617                           ;	WRT2 = 0x1, unprogrammed default
 22618                           ;	Write Protection bit
 22619                           ;	WRT3 = 0x1, unprogrammed default
 22620  30000A                     	org	3145738
 22621  30000A  0F                 	db	15
 22622                           
 22623                           ;Config register CONFIG6H @ 0x30000B
 22624                           ;	unspecified, using default values
 22625                           ;	Configuration Register Write Protection bit
 22626                           ;	WRTC = 0x1, unprogrammed default
 22627                           ;	Boot Block Write Protection bit
 22628                           ;	WRTB = 0x1, unprogrammed default
 22629                           ;	Data EEPROM Write Protection bit
 22630                           ;	WRTD = 0x1, unprogrammed default
 22631  30000B                     	org	3145739
 22632  30000B  E0                 	db	224
 22633                           
 22634                           ;Config register CONFIG7L @ 0x30000C
 22635                           ;	unspecified, using default values
 22636                           ;	Table Read Protection bit
 22637                           ;	EBTR0 = 0x1, unprogrammed default
 22638                           ;	Table Read Protection bit
 22639                           ;	EBTR1 = 0x1, unprogrammed default
 22640                           ;	Table Read Protection bit
 22641                           ;	EBTR2 = 0x1, unprogrammed default
 22642                           ;	Table Read Protection bit
 22643                           ;	EBTR3 = 0x1, unprogrammed default
 22644  30000C                     	org	3145740
 22645  30000C  0F                 	db	15
 22646                           
 22647                           ;Config register CONFIG7H @ 0x30000D
 22648                           ;	unspecified, using default values
 22649                           ;	Boot Block Table Read Protection bit
 22650                           ;	EBTRB = 0x1, unprogrammed default
 22651  30000D                     	org	3145741
 22652  30000D  40                 	db	64
 22653                           tosu	equ	0xFFF
 22654                           tosh	equ	0xFFE
 22655                           tosl	equ	0xFFD
 22656                           stkptr	equ	0xFFC
 22657                           pclatu	equ	0xFFB
 22658                           pclath	equ	0xFFA
 22659                           pcl	equ	0xFF9
 22660                           tblptru	equ	0xFF8
 22661                           tblptrh	equ	0xFF7
 22662                           tblptrl	equ	0xFF6
 22663                           tablat	equ	0xFF5
 22664                           prodh	equ	0xFF4
 22665                           prodl	equ	0xFF3
 22666                           indf0	equ	0xFEF
 22667                           postinc0	equ	0xFEE
 22668                           postdec0	equ	0xFED
 22669                           preinc0	equ	0xFEC
 22670                           plusw0	equ	0xFEB
 22671                           fsr0h	equ	0xFEA
 22672                           fsr0l	equ	0xFE9
 22673                           wreg	equ	0xFE8
 22674                           indf1	equ	0xFE7
 22675                           postinc1	equ	0xFE6
 22676                           postdec1	equ	0xFE5
 22677                           preinc1	equ	0xFE4
 22678                           plusw1	equ	0xFE3
 22679                           fsr1h	equ	0xFE2
 22680                           fsr1l	equ	0xFE1
 22681                           bsr	equ	0xFE0
 22682                           indf2	equ	0xFDF
 22683                           postinc2	equ	0xFDE
 22684                           postdec2	equ	0xFDD
 22685                           preinc2	equ	0xFDC
 22686                           plusw2	equ	0xFDB
 22687                           fsr2h	equ	0xFDA
 22688                           fsr2l	equ	0xFD9
 22689                           status	equ	0xFD8

Data Sizes:
    Strings     257
    Constant    118
    Data        120
    BSS         1089
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     250
    BANK2           256     19     250
    BANK3           256      0     150
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3668	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    troca_de_tela@fix_signal	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), lo(BANK1[13]), lt(BANK1[12]), 
		 -> vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1466_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S795_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S795_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    gps@flag_fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), escreve_inteiro_lcd@texto(COMRAM[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->_verifica_fence
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _gps->_fix
    _gps->_get_fix
    _gps->_get_latitude
    _gps->_get_longitude
    _gps->_get_rawdate
    _gps->_get_rawspeed
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  514250
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  504584
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   26803
                                             67 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        3     3      0   20307
                                             53 COMRAM     3     3      0
              _escreve_caractere_lcd
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6386
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6532
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  457168
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16353
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (5) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426316
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425198
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                                _gps
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _gps                                                  3     3      0     844
                                             11 COMRAM     3     3      0
                                _fix
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        17    17      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0     130
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205014
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2849
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2693
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2693
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _gps
             _fix
             _get_fix
             _get_gpstime
             _get_latitude
             _get_longitude
             _get_rawdate
             _get_rawspeed
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_caractere_lcd
         _delay
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
   _gps
     _fix
     _get_fix
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      96      11       58.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      20        0.0%
DATA                 0      0     59F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Jun 13 12:07:26 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 4734                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5AA6                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 0396                                               _lo 0198  
                                             _lt 01B2                              ___wmul@multiplicand 000C  
                                    _put_cluster 237C                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 489C                                              l201 48A4  
                                            l202 48A6                                              l203 48AE  
                                            l220 4CF0                                              l204 48B0  
                                            l221 4CF8                                              l213 4CC4  
                                            l205 48B8                                              l222 4CFA  
                                            l206 48BA                                              l223 4D02  
                                            l215 4CCE                           __size_of_troca_de_tela 0286  
                                            l144 2CAC                                              l224 4D04  
                                            l232 4EBA                                              l225 4D0C  
                                            l217 4CD8                                              l250 4C16  
                                            l242 4BE2                                              l226 4D0E  
                                            l218 4CDA                                              l251 4C18  
                                            l219 4CEE                                              l252 4C20  
                                            l244 4BEC                                              l181 5AC6  
                                            l253 4C22                                              l254 4C2A  
                                            l246 4BF6                                              l183 5ACC  
                                            l255 4C2C                                              l191 4866  
                                            l256 4C34                                              l248 4C00  
                                            l257 4C36                                              l249 4C02  
                                            l193 4870                                              l195 487A  
                                            l197 4884                                              l702 4F7E  
                                            l198 4886                                              l199 489A  
                                            l800 5C02                                              l806 5BB4  
                                            l913 2E1C                                              l916 2E14  
                                            l686 55BE                                              l990 3440  
                                            l987 3492                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 00FA  
                            _latitude_to_convert 4AE4                                              _fil 017C  
                               ??_init_oscilador 000A                                              _fix 5C46  
                                            _n_s 00FB                                              _gps 5650  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01DE                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 000B  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1104 13C4                                             l1114 150A  
                                           l1241 5536                                             l1074 077A  
                                           l1192 0D90                                             l2224 516A  
                                           l2153 4DDA                                             l1274 1118  
                                           l2234 54D8                                             l1099 1398  
                                           l1291 1260                                             l1188 0B80  
                                           l2422 334C                                             l2436 3988  
                                           l1573 4F58                                             l2454 453E  
                                           l1772 4A58                                             l2468 3F7A  
                                           ?_fix 000A                                             ?_gps 0001  
                                           ?_isr 0001                                             l9502 3CF4  
                                           l9280 42D8                                             l9290 4334  
                                           l9282 42E2                                             l9522 3D4E  
                                           l9292 433E                                             l9284 4300  
                                           l9532 3D76                                             l9508 3D1C  
                                           l9526 3D5E                                             l9288 4316  
                                           l9552 562C                                             l9536 3D86  
                                           l9562 3FC4                                             l9580 4018  
                                           l9590 4030                                             l9592 403C  
                                           l9584 4028                            _escreve_caractere_lcd 4BD2  
                                           l9598 4058                                             STR_1 61F1  
                                           STR_2 6192                                             STR_3 6224  
                                           STR_4 61E6                                             STR_5 61B1  
                                           STR_6 617D                                             STR_7 61C0  
                                           STR_8 621A                                             STR_9 6210  
                                 timer_dois@flag 00F7                                             _BRGH 007D62  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 007E  
                                   trace_path@fn 007F                                     trace_path@ds 008F  
                                   trace_path@fs 008B                                    ?_make_dirfile 0012  
                                           _Term 00FC                                             _dado 0110  
                                           _data 01D8                                             _atoi 31F4  
                                           _atol 3878                                             _main 577C  
                                           _fsid 0172                                             _hora 01CA  
                                   ___ftpack@arg 000A                                             _itoa 55DE  
                                   ___ftpack@exp 000D                                             _ltoa 545E  
                        __end_of_fence_diff_long 6155                                             fsr1h 000FE2  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 0056  
                                           _utoa 44BE                                             _sync 51C6  
                                  disk_ioctl@cmd 000A                                    disk_read@buff 0029  
                                  disk_ioctl@res 000E                                   ??_get_latitude 000A  
                                  disk_read@pdrv 0031                             ?_latitude_to_convert 0001  
                                           prodh 000FF4                                             prodl 000FF3  
                   tratamento_uart@received_char 0001                            get_latitude@index_lat 000A  
                                           start 000E                                      gps@flag_fix 000D  
                              disparo_gravacao@i 02F9                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 000C                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014C  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l11100 5AAA  
                                          l10320 2C74                                            l11032 1ADE  
                                          l11200 01FE                                            l10170 55CA  
                                          l10242 3A00                                            l10402 4C9A  
                                          l10306 2C54                                            l10410 526C  
                                          l11042 1B0A                                            l11026 1AD0  
                                          l11210 02E4                                            l10252 3A36  
                                          l10260 3A4A                                            l11140 4736  
                                          l11052 1B30                                            l11132 5810  
                                          l12012 09DA                                            l10414 5298  
                                          l12030 37BC                                            l12006 09C4  
                                          l10192 4F78                                            l10264 3A5C  
                                          l10248 3A12                                            l10352 2D18  
                                          l10432 529C                                            l10512 4BEE  
                                          l11136 5820                                            l11240 0476  
                                          l12112 41E0                                            l10178 5696  
                                          l10258 3A44                                            l10338 2CF4  
                                          l11146 47A4                                            l11306 5908  
                                          l11226 03AA                                            l11218 033A  
                                          l12050 507E                                            l13002 4E8E  
                                          l10268 3A72                                            l11340 51FC  
                                          l12044 3874                                            l11148 47AC  
                                          l10516 4BF8                                            l10508 4BE4  
                                          l11068 1B8C                                            l11308 590E  
                                          l11324 5912                                            l12300 1460  
                                          l12132 4DCC                                            l12124 4D98  
                                          l11244 04F2                                            l11228 03B8  
                                          l11252 0526                                            l12116 41F6  
                                          l12108 41D2                                            l12060 406E  
                                          l10278 3AA2                                            l10382 4C74  
                                          l10710 2402                                            l10702 23A2  
                                          l12230 5368                                            l11510 499A  
                                          l10630 4EE2                                            l10622 4EC6  
                                          l11086 1BEC                                            l11078 1BB2  
                                          l11502 34AC                                            l11414 33EA  
                                          l12302 148E                                            l12126 4DA4  
                                          l11262 0594                                            l11190 01A6  
                                          l12054 50AC                                            l10368 2D66  
                                          l10560 2B2E                                            l10552 2AAA  
                                          l10608 5764                                            l11600 4A0A  
                                          l10480 4CD0                                            l10640 4F0A  
                                          l11176 00CC                                            l12056 50B4  
                                          l11280 38CC                                            l12152 48EC  
                                          l12216 5900                                            l13032 4B66  
                                          l10386 4C78                                            l10378 4C48  
                                          l10298 2C04                                            l10466 5BA6  
                                          l11602 4A16                                            l12226 5350  
                                          l11514 499E                                            l10650 519E  
                                          l10626 4ED4                                            l11362 3106  
                                          l12314 14E8                                            l11258 0582  
                                          l12090 4170                                            l11290 38FE  
                                          l12066 40D0                                            l12074 4132  
                                          l12170 4924                                            l12146 48E4  
                                          l13042 4B80                                            l13130 4868  
                                          l13212 31F6                                            l10556 2B26  
                                          l11612 4A4A                                            l10740 2550  
                                          l10716 2444                                            l10820 2DFE  
                                          l10812 2DD0                                            l12236 5388  
                                          l10476 4CC6                                            l11460 3438  
                                          l11452 3428                                            l11444 3418  
                                          l12252 1300                                            l11188 0186  
                                          l12084 4158                                            l11284 38F4  
                                          l12164 491C                                            l13028 4EA6  
                                          l13230 32B8                                            l13214 3202  
                                          l10590 5750                                            l10718 2478  
                                          l11526 49E4                                            l10646 5176  
                                          l10638 4EF0                                            l10910 542C  
                                          l12334 151E                                            l12502 0FEC  
                                          l11622 5724                                            l12158 4910  
                                          l13134 4872                                            l13224 3282  
                                          l10568 2B7C                                            l10592 5758  
                                          l10904 53D0                                            l10736 2526  
                                          l10824 2E24                                            l12440 0DAE  
                                          l12424 0D44                                            l11456 3430  
                                          l12512 1016                                            l11640 588C  
                                          l12096 4192                                            l11296 3944  
                                          l11560 5050                                            l12176 4948  
                                          l12184 4954                                            l13056 4B9C  
                                          l13234 3304                                            l13226 3290  
                                          l10578 2BD0                                            l10682 2784  
                                          l10658 2632                                            l10754 25B8  
                                          l12450 0E00                                            l11378 31DE  
                                          l11482 3472                                            l11474 345A  
                                          l11394 3380                                            l12282 13A0  
                                          l12522 1058                                            l11706 56C4  
                                          l12098 419E                                            l11554 5024  
                                          l12186 495E                                            l13066 4BB2  
                                          l13138 487C                                            l13242 57B4  
                                          l13410 1D8C                                            l10596 575C  
                                          l10692 27EC                                            l10756 25D4  
                                          l10836 2E52                                            l12436 0DA4  
                                          l10764 50DC                                            l11724 458E  
                                          l11716 456C                                            l11492 3490  
                                          l11484 3474                                            l11804 2056  
                                          l12620 1286                                            l12612 124E  
                                          l12540 10B2                                            l12516 102C  
                                          l11652 5304                                            l12380 5862  
                                          l11580 4FCC                                            l13092 4BC8  
                                          l13244 57BC                                            l13420 1DCA  
                                          l12366 58B6                                            l10678 2764  
                                          l10694 2806                                            l10854 2E88  
                                          l10774 47D6                                            l10950 1974  
                                          l10918 544C                                            l11734 45D2  
                                          l11822 208E                                            l12550 10F0  
                                          l12534 1082                                            l12390 53DE  
                                          l10928 5AF6                                            l10872 2F02  
                                          l12448 0DEC                                            l10768 50F0  
                                          l10944 1960                                            l11912 0610  
                                          l11904 05B8                                            l11736 45DA  
                                          l11840 2190                                            l11816 207A  
                                          l11808 2062                                            l11760 1F42  
                                          l12616 126C                                            l12560 110C  
                                          l11664 533C                                            l11672 52BC  
                                          l12392 53E2                                            l13432 1DF2  
                                          l12458 0E72                                            l12474 0F6C  
                                          l12466 0F06                                            l10778 47F4  
                                          l10954 1980                                            l11922 0634  
                                          l11906 05BE                                            l11842 21A2  
                                          l12570 113C                                            l12626 12C2  
                                          l12482 0F92                                            l12394 53F2  
                                          l11586 4FF8                                            l12706 3F10  
                                          l13450 1E38                                            l13418 1DC6  
                                          l12636 54EC                                            l12820 16E6  
                                          l12804 1680                                            l10868 2EC4  
                                          l10796 484E                                            l10964 19B4  
                                          l11940 0664                                            l10884 425A  
                                          l11772 1F60                                            l11764 1F46  
                                          l12556 1100                                            l11684 52F4  
                                          l11692 56F4                                            l12396 53FA  
                                          l12652 3CB4                                            l13268 2F20  
                                          l13452 1E3C                                            l13372 1CA2  
                                          l13380 1CD0                                            l12638 54F0  
                                          l12830 1748                                            l12814 16E2  
                                          l10974 19D8                                            l11950 0692  
                                          l11862 223C                                            l11838 216A  
                                          l11790 1FF6                                            l12486 0F9C  
                                          l12662 5138                                            l12750 4B48  
                                          l13462 1E7C                                            l13358 1C2A  
                                          l12840 17A0                                            l12824 173A  
                                          l12808 16D4                                            l11936 0660  
                                          l11872 227E                                            l11848 21CC  
                                          l12592 11AC                                            l12576 1160  
                                          l12664 5140                                            l13720 55FA  
                                          l12728 547E                                            l13288 3086  
                                          l13800 4418                                            l10898 53C0  
                                          l11858 2238                                            l11786 1FEA  
                                          l11778 1F8A                                            l12578 1178  
                                          l12674 5160                                            l12690 54CE  
                                          l12682 54AE                                            l12738 4AEE  
                                          l12762 4A74                                            l12836 174C  
                                          l11884 230E                                            l12588 11A0  
                                          l12684 54B6                                            l13396 1D14  
                                          l13812 44B4                                            l12862 1814  
                                          l12854 17D8                                            l12846 17AE  
                                          l12782 1616                                            l10998 1A58  
                                          l11958 069C                                            l11894 234A  
                                          l11798 2038                                            l12598 11DC  
                                          l12934 365E                                            l12774 4ACE  
                                          l13830 5794                                            l12848 17D4  
                                          l12792 166E                                            l11976 0732  
                                          l11968 0710                                            l12696 3EC0  
                                          l13752 28FE                                            l12882 1858  
                                          l13746 2878                                            l12876 1854  
                                          l12868 1818                                            l12788 161A  
                                          l12948 3726                                            l13684 44C6  
                                          l12972 5A74                                            l13836 57A4  
                                          l12798 167C                                            l11998 08B6  
                                          l13694 4500                                            l13774 2A1A  
                                          l12888 18D2                                            l12896 18E0  
                                          l12968 5A6C                                            l13768 29F8  
                                          l13776 2A1E                                            l12978 4E58  
                                          l12988 4E72                                  __end_of___aldiv 4208  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6237                                            ?_ltoa 0023  
                                          STR_11 6266                                            STR_20 627A  
                                          STR_12 61A2                                            STR_21 622C  
                                          STR_13 61FC                                            STR_30 626F  
                                          STR_22 624F                                            STR_14 6206  
                                          STR_31 626B                                            STR_23 6261  
                                          STR_15 6256                                            STR_24 627C  
                                          STR_32 622E                                            STR_16 61CE  
                                          STR_17 6273                                            STR_25 6248  
                                          STR_33 6240                                            STR_26 624F  
                                          STR_18 6277                                            STR_27 6261  
                                          STR_19 61DB                                            STR_28 627C  
                                          STR_29 625C                                     ?_leitura_SPI 0001  
                                          u10010 42CA                                  __end_of___lldiv 4A6A  
                                          ?_utoa 0011                                            u10050 4348  
                                          ?_sync 0001                                            u10411 3D04  
                                          u12020 4814                                  __end_of___ftmul 3DC0  
                                          u12110 2E48                                            u10520 4042  
                                          _T0CON 000FD5                                            u11340 56B8  
                                          u12220 53BC                                            u12060 2DBA  
                                          u12300 19A0                                            u10461 3FA8  
                                          u12070 2DC6                                            u12310 19AC  
                                          u10470 3FB2                                            u12311 19AA  
                                          u10391 3CDC                                            u11360 4F88  
                                          u11520 2D72                                            u12080 2DF2  
                                          u13200 499A                                            u10480 3FE2  
                                __end_of___llmod 4DEC                                            u12330 19F8  
                                          u12180 2EF0                                            u10485 3FDA  
                                __end_of___fttol 406A                                            u11390 3A0C  
                                          u11710 2A68                                            u12510 4762  
                                          u11375 39B2                                            u11800 51BE  
                                          u12440 1B56                                            _T2CON 000FCA  
                                          u11465 2C28                                            u11730 2AA6  
                                          u12530 4794                                            u12370 1A86  
                                          u12290 1990                                            u14050 41A2  
                                          u13235 3510                                            u13340 4A1A  
                                          u11820 25FC                                            u15020 5144  
                                          u13245 352C                                            u12517 4758  
                                          u12390 1A92                                            u13270 552C  
                                          u13255 355C                                            u11495 2CC8  
                                          u11807 51B4                                            u16000 3324  
                                          u11920 23FE                                            u12480 1BC8  
                                          u13440 458A                                            u14320 13C0  
                                          u13265 357C                                            u12537 478A  
                                          u12705 0326                                            u15210 163A  
                                          u12490 1BF8                                            u14250 12FC  
                                          u14090 4DA8                                            u15050 54BA  
                                          u12810 38EC                                            u11915 23D2  
                                          u13460 45C0                                            u13700 227A  
                                          u11845 2662                                            u15310 1738  
                                          u15230 166C                                            u11790 5196  
                                          u13470 45E6                                            u14350 145C  
                                          u12750 052E                                            u16007 331A  
                                          u13535 1FA8                                            u15400 1844  
                                          u14600 0E0E                                            u13480 45FE  
                                          u12920 3184                                            u13640 21C8  
                                          u15217 1630                                            u11865 26DE  
                                          u11945 24A4                                            u12905 3112  
                                          u12665 024C                                            u12817 38E2  
                                          u15330 176C                                            u15250 16A0  
                                          u12850 51F8                                            u13490 1F2C  
                                          u12770 3898                                            u16210 1D40  
                                          u15420 1878                                            u14620 0E86  
                                          u13900 072E                                            u12940 33B6  
                                          u16220 1D7C                                            u16140 1C06  
                                          u15317 172E                                            u15237 1662  
                                          u14525 0BF4                                            u11797 518C  
                                          u15350 179E                                            u15270 16D2  
                                          u14630 0ECC                                            u13830 065C  
                                          u13750 05DE                                            u13670 222A  
                                          u14390 1506                                            u15407 183A  
                                          u11895 2770                                            u11975 2532  
                                          u13655 21EA                                            u15440 189E  
                                          u12960 33C6                                            u14720 1064  
                                          u16240 1DD6                                            u15337 1762  
                                          u15257 1696                                            u13497 1F22  
                                          u12777 388E                                            u15370 17CE  
                                          u15290 1706                                            u13770 0604  
                                          u12890 3102                                            u16218 1D42  
                                          u16170 1C56                                            u15427 186E  
                                          u14635 0EC2                                            u12947 33AC  
                                          u15460 18D0                                            u15380 1804  
                                          u13940 09C0                                            u16228 1D7E  
                                          u16180 1C92                                            u16500 46B2  
                                          u15357 1794                                            u15277 16C8  
                                          u13757 05D4                                            u13950 09D8  
                                          u15630 4B78                                            u16510 46CE  
                                          u15447 1894                                            u13935 08CE  
                                          u14920 12A2                                            u14760 10EE  
                                          u15640 4B7C                                            u15560 4E6E  
                                          u15377 17C4                                            u15297 16FC  
                                          u13777 05FA                                            u14930 5510  
                                          u14690 0FE2                                            u16178 1C58  
                                          u15467 18C6                                            u15387 17FA  
                                          u15900 4F46                                            u16188 1C94  
                                          u13965 0A5E                                            u15910 3222  
                                          u14870 1232                                            u15590 4EA0  
                                          u14937 5506                                            u15930 3248  
                                          u14955 3BD6                                            u16707 465C  
                                          u15860 48DC                                            u15917 3218  
                                          u16717 192E                                            u14965 3C0E  
                                          u15950 327A                                            u16590 2874  
                                          u16727 1A98                                            u15871 556E  
                                          u16648 4474                                            u15937 323E  
                                          u16737 1B36                                            u14985 3C50  
                                          u16649 4486                                            u15970 32B0  
                                          u16747 55AA                                            u14995 3C88  
                                __end_of___lwdiv 5174                                            u15957 3270  
                                          u16677 470A                                            u15990 32EC  
                                          u16687 4624                                            u15977 32A6  
                                          u16697 4640                                            u15997 32E2  
                                __end_of___lwmod 54E2                                            i2l444 3BB6  
                                          i2l439 3B44                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 585E                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 538C  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5C3C  
                                  get_cluster@bc 006F                                  __end_of_get_fix 574C  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FC4                                    ___awtoft@sign 001B  
                                          _delay 5AC2                                  clust2sect@clust 0016  
                                          _fence 00F5                                  __end_of_gps_dia 5A40  
                                __end_of_gps_ano 5A62                                  __end_of_gps_mes 5A1E  
                                __end_of_fprintf 12CC                                            _fputc 5524  
                                          _fputs 5074                                  __end_of_isdigit 5AFE  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0174  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3EB0                                  __end_of_rawdata 5C28  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5C1E  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5BFE                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 1BFC  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4368  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 3356  
                                   __end_of_atol 399A                                     __end_of_main 57AA  
                                   clust2sect@fs 001F                                     __end_of_itoa 5618  
                                   __end_of_ltoa 54A0     verifica_dados_operacionais@contador_anterior 00F0  
                                   __end_of_utoa 4562                                     __end_of_sync 5218  
                             _inicializa_tarefas 5218                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000A                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5B88                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 308E  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 5974  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 5650  
                               __end_of___ftpack 4368                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1545 3E9C  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9902 3B72                                           i2l9904 3B8A  
                                         i2l9884 3B00                                           i2l9876 3ADE  
                                         i2l9894 3B50                                           i2l9886 3B18  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5B9A                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 49E8  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000B                       __end_of_posicao_cursor_lcd 4F0E  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F0C  
                                   _dado_arquivo 0242                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 50CC  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 592A                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 12CC  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5B4E  
                           __size_of_get_gpstime 002A                                           _f_sync 3750  
                                      ??___lwmod 000E                                           _buffer 0236  
                           __size_of_get_rawdate 0030                                 __end_of_latitude 5C3C  
                               __end_of_gps_hora 5974                                           _estado 00F4  
                                         _memcmp 4734                                           _memcpy 541A  
                               __end_of_init_lcd 46A0                                           _memset 5806  
                                      ??_f_close 004C                                           _rawFix 01EA  
                                         clear_0 43C2                                           clear_1 43D4  
                                         clear_2 43E0                                           clear_3 43EC  
                                         clear_4 43F8                                           clear_5 4404  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 000A                                           _strcat 53D4  
                            _sdc_disk_initialize 1914                                        ??_command 0014  
                                         _strcpy 57AA                                           _strlen 54E2  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 1914  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 237C  
                                      ??_gps_mes 000C                                 __end_of_validate 53D4  
                         __end_of_next_dir_entry 31F4                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 5344  
                               __end_of_response 5BF2                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6106  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 5996                                        ??_proceed 000C  
                               _write_timer_zero 5C0A                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 56EC  
                            _escreve_inteiro_lcd 5564                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 440A                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 4FC4                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5C46                                  _tratamento_uart 3AB2  
                    __end_of_endereco_cursor_lcd 4D1C                                     __pidataBANK0 5C6C  
                                   __pidataBANK1 5BCA                                     __pidataBANK2 4D1C  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3BC4  
                                  __end_of_delay 5AE0                                   _escrita_sdcard 3604  
                                hora_nome@p_buff 000A                                    __end_of_fputc 5564  
                                  __end_of_fputs 50CC                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 0044                 __end_of_convert_to_int_point_lat 5074  
                             __size_of_data_nome 002A                                    __end_of_ultoa 3F98  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 34B0                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000A  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5C5A  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000B  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5B4E                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 5904  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02C3  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02D5                                       _dados_long 027E  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51C6  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4AE4  
                      escreve_inteiro_uart@F3215 01EC                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 3750  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3677 6118                            mensagem_inicial@F3679 6107  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 00E7                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10100 3E14  
                                        i2l10014 5B96                                          i2l10112 3E5A  
                                        i2l10104 3E42                                          i2l10124 3E88  
                                        i2l10116 3E6A                                          i2l10126 3E94  
                                        i2l10088 3E02                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5AA2  
                                     _disk_write 5268                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 0182                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4208                                   _inicializa_SPI 5A82  
                                trace_path@clust 008D                                __end_of_data_nome 58DC  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3BC4                                __end_of_diferenca 413C  
                                  _sdc_disk_read 399A                                     _desliga_uart 5B76  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4CB2  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 413C  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 49E8                                  __size_of___wmul 0026  
                                        ___ftmul 3CCC                                          ___llmod 4D86  
                                        ___fttol 3F98                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 5122  
                                        ___lwmod 54A0                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 55DE  
                          __size_of_get_latitude 0048                                          _f_close 5832  
                                        __pcinit 4368                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5AFE  
                                        __ramtop 0800                                          _f_mount 5344  
                                        __ptext0 577C                                          __ptext1 46A0  
                                        __ptext2 4602                                          __ptext3 5B4E  
                                        __ptext4 5AFE                                          __ptext5 5C5A  
                                        __ptext6 5B64                                          __ptext7 5B1A  
                                        __ptext8 5C0A                                          __ptext9 5BD8  
                           __end_of_gps_segundos 59DA                                          _f_write 0012  
                                        _get_fix 571C                                          _command 4F6A  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 5888  
                                        _gps_dia 5A1E                                          _gps_ano 5A40  
                                        _gps_mes 59FC                                          _fprintf 0F7E  
                                   __size_of_fix 000A                                     __size_of_gps 0036  
                                        _rawDate 01E4                                          _isdigit 5AE0  
                                   __size_of_isr 3EA8             __size_of_verifica_plausibilidade_lat 0074  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0030                                          _rawTime 01D1  
                               ___aldiv@dividend 000A                                          _rawdata 5C1E  
                                        _rawhora 5C14                                          _time_sd 016E  
                                   _create_chain 2D76                                          _proceed 5BF2  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 016A  
                              __end_of_sdc_reset 4856                           __end_of_inicializa_SPI 5AA2  
                          __end_of_armazena_ltlo 4966                      __end_of_latitude_to_convert 4B5E  
                                     f_lseek@ofs 0088                                   __pintcode_body 3DC0  
                                     f_lseek@res 009C                             end_of_initialization 440A  
                              __end_of_longitude 5C32             __end_of_verifica_plausibilidade_long 4EB0  
          __size_of_verifica_plausibilidade_long 0060                     _verifica_plausibilidade_long 4E50  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0006  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000A  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3DC0  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1117_40 3DF2  
                                      i2u1118_48 3DF4                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 015F  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 52FC                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 6155                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5C14  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5A62                            __end_of_get_longitude 52FC  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 5686  
                                   _get_rawspeed 56BC                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 021A  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1E82  
                             _posicao_cursor_lcd 4EB0                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3CCC  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4A6A  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 4856  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 000A                                      ?_clust2sect 0016  
                               _put_cluster$1623 006A                                 _put_cluster$1624 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 3356  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 617D                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1733 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 5122  
                                 _temp_buff_long 0164                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 5950                                   __end_of_f_open 1606  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 3878                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 47C6                                   __end_of_memcpy 545E  
                                 __end_of_memset 5832                __end_of_convert_to_int_point_long 501C  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 541A  
                                 __end_of_strcpy 57D8                                   __end_of_strlen 5524  
                               _time_atualizacao 00EA                              start_initialization 4368  
                                    __end_of_fix 5C50                                      __end_of_gps 5686  
                                    __end_of_isr 3EB0                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02F7                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5BCA  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5806  
                                _sdc_disk_status 5B9A                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5C50  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 5904                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5A82                               _verifica_recep_gps 58DC  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00F3                                wait_ready@timeout 000A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 0084  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                                     hora_nome@i 000C                              __size_of_disk_write 004C  
                                       ??___lmul 0012                            __size_of_gps_segundos 0022  
                                     fprintf@fil 00B1                                       fprintf@arp 00D9  
                                       ??___wmul 000E                                       fprintf@res 00CD  
                                     fprintf@val 00D5                                       fprintf@str 00B3  
                            __end_of_get_fattime 3604                                         ??_f_open 009D  
                            ?_verifica_recep_gps 0001                                         ??_f_sync 004C  
                                    ?_wait_ready 0001                                      __pdataBANK0 00FF  
                                    __pdataBANK1 01EC                                      __pdataBANK2 027E  
                            __end_of_get_cluster 2810                  verifica_dados_operacionais@dado 0121  
                                       ??_memcmp 0010                              __end_of_disk_status 577C  
                                       ??_memcpy 0010                              __size_of_clust2sect 00B2  
                                       ??_memset 0010                              __end_of_get_gpstime 58B2  
                         sdc_disk_read@start_add 0022                             __end_of_remove_chain 4602  
                              ??_dados_gps_to_sd 0015                              __end_of_get_rawdate 571C  
                        sdc_disk_initialize@buff 0029                                    ??_leitura_SPI 000A  
                        __end_of_escreve_cmd_lcd 48E2                                         ??_strcat 000E  
                                       ??_strcpy 0010                                         ??_strlen 000C  
                        sdc_disk_initialize@stat 0020                                      ?_trace_path 007E  
                                  ??_gps_minutos 000C                                     _fprintf$2226 00CF  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 0396  
                                  monta_sd@index 0013                                      __pbssCOMRAM 004D  
                                _trace_path$1780 0087                                  _trace_path$1782 0089  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02E7  
                                 _init_interrupt 5B64                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 44BE  
                    __end_of_sdc_disk_initialize 1BFC                                __size_of_check_fs 0082  
                                   _isdigit$3275 000B                                     check_fs@sect 0035  
                                    _char_number 00FE                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 55A2                                   _init_oscilador 5C5A  
                          __end_of_troca_de_tela 1E82                                 ??_escrita_sdcard 004D  
                                      _dados_lat 02A2                              __size_of_init_ports 001C  
                                      _dados_vel 0127                                     _gps_segundos 59B8  
                          _escreve_frase_ram_lcd 5174                                __size_of_grava_sd 001A  
                                      _data_buff 017A                                        _data_hoje 00F6  
                    __end_of_escreve_inteiro_lcd 55A2                                        _data_nome 58B2  
                            __end_of_escreve_SPI 5BBA                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00EE  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 308E  
                    _verifica_dados_operacionais 2F0C                                        _diferenca 406A  
                                      __pintcode 0008                                    __pmediumconst 6106  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 574C  
                                      __ptext101 5B9A                                        __ptext110 4F6A  
                                      __ptext102 51C6                                        __ptext111 5686  
                                      __ptext103 2A2A                                        __ptext120 5950  
                                      __ptext112 5BAA                                        __ptext104 5268  
                                      __ptext121 5A1E                                        __ptext113 55A2  
                                      __ptext105 2BD4                          troca_de_tela@fix_signal 0037  
                                      __ptext130 5AE0                                        __ptext122 5A40  
                                      __ptext114 5BFE                                        __ptext106 4C44  
                                      __ptext131 592A                                        __ptext123 58B2  
                                      __ptext115 5AA2                                        __ptext107 399A  
                                      __ptext124 5B76                                        __ptext116 34B0  
                                      __ptext108 5BE6                                        __ptext133 5C50  
                                      __ptext125 5BBA                                        __ptext117 59B8  
                                      __ptext109 5BF2                                        __ptext134 3AB2  
                                      __ptext126 4DEC                                        __ptext118 59DA  
                                      __ptext135 5B88                                        __ptext127 1606  
                                      __ptext119 59FC                                        __ptext136 0000  
                                      __ptext128 54E2                                        __ptext129 31F4  
                              __size_of_monta_sd 030E                                         ?___lldiv 000A  
                                       ?___ftmul 001C                                         ?___llmod 000A  
                              __size_of_validate 0048                                         ?___fttol 002B  
                                       ?___lwdiv 000A                                         ?___lwmod 000A  
                              __size_of_response 000C                                         ?_f_close 0069  
                                      _disk_read 4C44                               _sinaliza_int_timer 00F2  
                                       ?_f_lseek 0086                                         ?_f_mount 000A  
                               _disparo_gravacao 2810                                         ?_f_write 0086  
                         ??_longitude_to_convert 0042                                         ?_get_fix 0001  
                                       ?_command 000F                           __end_of_init_interrupt 5B76  
                                       ?_gps_dia 000A                                         ?_gps_ano 000A  
                                       ?_gps_mes 000A                                         ?_fprintf 00B1  
                                       ?_isdigit 0001                                      _desliga_SPI 5BBA  
                            sdc_disk_read@p_buff 0016                          troca_de_tela@last_state 004F  
                            sdc_disk_read@length 0026                                         ?_rawdata 000A  
                            sdc_disk_read@sector 0018                                         ?_rawhora 000A  
                        __end_of_sdc_disk_status 5BAA                   __size_of_escreve_caractere_lcd 0072  
                                 __size_of_Speed 000A                    __end_of_escreve_caractere_lcd 4C44  
                                       ?_proceed 0001                                        f_close@fp 0069  
                            __end_of_leitura_SPI 5C0A                                        _hora_nome 585E  
                               ___lwdiv@quotient 000F                                   __size_of_delay 001E  
                        __end_of_disk_initialize 592A                           __end_of_init_oscilador 5C62  
                            __end_of_gps_minutos 59FC                                   __size_of_fputc 0040  
                                 __size_of_fputs 0058                              make_dirfile@dirname 0013  
                                     validate@id 0012                                       validate@fs 0010  
                           __end_of_posicao_long 5C6C                                        _p_tarefas 0139  
                                 __size_of_ultoa 00E8                          __size_of_verifica_fence 005C  
                                      _rawCourse 013F                                 make_dirfile@path 0012  
                                       _GPGGA_ok 0176                                        _sdc_reset 47C6  
                            __size_of_wait_ready 0036                                  ___aldiv@divisor 000E  
                    latitude_to_convert@latitude 0060                                  ___aldiv@counter 0012  
                                 ___wmul@product 000E                                         _LATBbits 000F8A  
                                      f_lseek@fp 0086                                         _LATCbits 000F8B  
            __end_of_verifica_plausibilidade_lat 4BD2                      _verifica_plausibilidade_lat 4B5E  
                                       _GPRMC_ok 0178                                        f_open@dir 00B4  
                                      f_open@res 00B3                                        _longitude 5C28  
                                       _PIE1bits 000F9D                                      _get_fattime 34B0  
                                   _rawLongitude 01A5                                 ?_recebe_dado_gps 0001  
                                     ?_data_nome 000A                              __size_of_trace_path 0280  
                                      _rmc_index 00EC                                      _get_cluster 25E8  
                                    _disk_status 574C                                    ??_move_window 0039  
                                      f_mount@fs 000A                                         _PIR1bits 000F9E  
                                    _get_gpstime 5888                                       ?_diferenca 0001  
                                  move_window@fs 0048                                      _get_rawdate 56EC  
             verifica_plausibilidade_lat@posicao 000A      verifica_dados_operacionais@velocidade_atual 0166  
    verifica_dados_operacionais@velocidade_media 0155                                ?_write_timer_zero 000A  
                                remove_chain@nxt 007C                                        f_sync@dir 0067  
                                      f_sync@res 0066                                        f_sync@tim 0062  
                       posicao_cursor_lcd@coluna 000D                                       ?_disk_read 0029  
                             ??_write_timer_zero 000C                                        f_write@cc 009E  
                     posicao_cursor_lcd@endereco 000F                                        f_write@bw 008B  
                                      f_write@fp 0086                             _mostra_dados_display 57D8  
                      __size_of_recebe_dado_uart 0012                                      _escalonador 4414  
                              ___wmul@multiplier 000A                                 ?_escreve_cmd_lcd 0001  
                    escreve_frase_ram_lcd@buffer 000D                                 ??_inicializa_SPI 000A  
                                ?_init_interrupt 0001                                     ??_disk_ioctl 000D  
                                   ??_disk_write 0030                              armazena_ltlo@buffer 003E  
                                   f_lseek@clust 00A5                                  _inicializa_uart 5996  
                                   f_lseek@csize 00A1                                     f_lseek@ifptr 009D  
                               _mensagem_inicial 46A0                                    ??_posicao_lat 000A  
                                     ?_hora_nome 000A                                    _temp_buff_lat 0162  
                                ?_init_oscilador 0001                                     ??_clust2sect 001A  
                              ___lmul@multiplier 000A                                        copy_data0 437C  
                                      copy_data1 439C                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5BAA                                    _flag_anomalia 00F1  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2BD4  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 007A  
                       escreve_inteiro_lcd@F3223 01F3                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5AC2                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 52B4                                     _SentenceType 00FD  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2BD4  
                                       ___awtoft 5618                                         ___ftpack 42BA  
                             __end_of_clust2sect 42BA                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5BFE                       disparo_gravacao@velocidade 02E7  
                               __size_of_f_write 0596                                 __size_of_get_fix 0030  
                                    _gps_minutos 59DA                                 __size_of_command 005A  
                          __end_of_init_hardware 5B64                                         _check_fs 4966  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 015C                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 016C  
                       _convert_to_int_point_lat 501C                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5218                                 __size_of_rawhora 000A  
                                       __ptext11 4414                                         __ptext20 3F98  
                                       __ptext12 1BFC                                         __ptext21 3CCC  
                                       __ptext13 2810                                         __ptext30 4F0E  
                                       __ptext22 5618                                         __ptext14 2F0C  
                                       __ptext31 4E50                                         __ptext23 42BA  
                                       __ptext15 57AA                                         __ptext40 406A  
                                       __ptext32 5C68                                         __ptext24 5C3C  
                                       __ptext16 5C14                                         __ptext41 4FC4  
                                       __ptext33 4B5E                                         __ptext25 57D8  
                                       __ptext17 5C1E                                         __ptext50 5996  
                                       __ptext42 501C                                         __ptext34 5C62  
                                       __ptext26 5564                                         __ptext18 5C28  
                                       __ptext51 3BC4                                         __ptext43 5974  
                                       __ptext35 5A62                                         __ptext27 545E  
                                       __ptext19 5C32                                         __ptext60 52B4  
                                       __ptext52 413C                                         __ptext44 3878  
                                       __ptext36 58DC                                         __ptext28 3EB0  
                                       __ptext61 52FC                                         __ptext53 5A82  
                                       __ptext45 55DE                                         __ptext37 4A6A  
                                       __ptext29 4856                                         __ptext70 12CC  
                                       __ptext62 5888                                         __ptext54 3604  
                                       __ptext46 44BE                                         __ptext38 4AE4  
                                       __ptext71 1E82                                         __ptext63 571C  
                                       __ptext55 53D4                                         __ptext47 54A0  
                                       __ptext39 48E2                                         __ptext80 5904  
                                       __ptext72 3356                                         __ptext64 5C46  
                                       __ptext56 585E                                         __ptext48 5122  
                                       __ptext81 1914                                         __ptext73 2102  
                                       __ptext65 0F7E                                         __ptext57 5650  
                                       __ptext49 5B34                                         __ptext90 50CC  
                                       __ptext82 47C6                                         __ptext74 308E  
                                       __ptext66 5074                                         __ptext58 56BC  
                                       __ptext91 5344                                         __ptext83 4EB0  
                                       __ptext75 4208                                         __ptext67 5524  
                                       __ptext59 56EC                                         __ptext92 0AF2  
                                       __ptext84 4CB2                                         __ptext76 4562  
                                       __ptext68 0012                                         __ptext93 2D76  
                                       __ptext85 5174                                         __ptext77 541A  
                                       __ptext69 4D86                                         __ptext94 237C  
                                       __ptext86 4BD2                                         __ptext78 05A8  
                                       __ptext95 25E8                                         __ptext87 5AC2  
                                       __ptext79 5806                                         __ptext96 49E8  
                                       __ptext88 4966                                         __ptext97 5832  
                                       __ptext89 4734                                         __ptext98 3750  
                                       __ptext99 538C                                 __size_of_proceed 000C  
                                       _filename 0256                                      _rawAltitude 011A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 0170  
                                   _rmc_pointers 022A                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0048                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5268  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5B34  
                         __end_of_sdc_disk_write 2D76                                        monta_sd@i 0014  
                                       _gps_flag 014B                                         _latitude 5C32  
                                       _gps_hora 5950                                      _rawLatitude 01BE  
                                       _init_lcd 4602                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 4562                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5C68  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4CB2                               __end_of_init_ports 5B1A  
                                       _rawSpeed 026A                                      ??_data_nome 000C  
                              _comma_counter_gga 00F9                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00F8                                  _dados_gps_to_sd 4DEC  
                                       _rmc_code 0159                                         _monta_sd 1606  
                                       _validate 538C                                      ??_diferenca 0035  
                                       _sentence 0145                                     move_window@n 0043  
                                       _response 5BE6                                         f_sync@fp 0060  
                            _point_buff_gps_long 0168                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 59B8                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0004                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 25E8  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5BD8  
                                   _tempo_backup 0133                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5B1A  
                                 _verifica_fence 4F0E                                    _armazena_ltlo 48E2  
                                   _poligono_ext 0100                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 012D                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0151                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 56BC                         __end_of_disparo_gravacao 2A2A  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3AB2                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000B  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 2102                              ??_config_timer_zero 000C  
                                    _move_window 2A2A                                  _fence_diff_long 6129  
                              get_latitude@index 000B                           ??_mostra_dados_display 0010  
                                   _posicao_long 5C68                                    _get_longitude 52B4  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5B88                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5BE6  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5B34                           __end_of_verifica_fence 4F6A  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5C62  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4E50  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 00FF                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 2102  
                        disparo_gravacao@fix_gps 02F3                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3677 6129                    __end_ofmensagem_inicial@F3679 6118  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02F5  
