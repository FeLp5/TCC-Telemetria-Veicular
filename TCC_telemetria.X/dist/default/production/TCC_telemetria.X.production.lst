

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri May 20 16:20:04 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK1
   203  005C92                     __pidataBANK1:
   204                           	callstack 0
   205                           
   206                           ;initializer for escreve_inteiro_uart@F3215
   207  005C92  30                 	db	48
   208  005C93  30                 	db	48
   209  005C94  30                 	db	48
   210  005C95  30                 	db	48
   211  005C96  30                 	db	48
   212  005C97  30                 	db	48
   213  005C98  00                 	db	0
   214                           
   215                           ;initializer for escreve_inteiro_lcd@F3223
   216  005C99  30                 	db	48
   217  005C9A  30                 	db	48
   218  005C9B  30                 	db	48
   219  005C9C  30                 	db	48
   220  005C9D  30                 	db	48
   221  005C9E  30                 	db	48
   222  005C9F  00                 	db	0
   223                           
   224                           ;initializer for leitura_sdcard@size
   225  005CA0  58                 	db	88
   226                           
   227                           	psect	idataBANK2
   228  0054A4                     __pidataBANK2:
   229                           	callstack 0
   230                           
   231                           ;initializer for _dados_lat
   232  0054A4  30                 	db	48
   233  0054A5  30                 	db	48
   234  0054A6  30                 	db	48
   235  0054A7  30                 	db	48
   236  0054A8  30                 	db	48
   237  0054A9  30                 	db	48
   238  0054AA  30                 	db	48
   239  0054AB  30                 	db	48
   240  0054AC  30                 	db	48
   241  0054AD  30                 	db	48
   242  0054AE  00                 	db	0
   243  0054AF  30                 	db	48
   244  0054B0  30                 	db	48
   245  0054B1  30                 	db	48
   246  0054B2  30                 	db	48
   247  0054B3  30                 	db	48
   248  0054B4  30                 	db	48
   249  0054B5  30                 	db	48
   250  0054B6  30                 	db	48
   251  0054B7  30                 	db	48
   252  0054B8  30                 	db	48
   253  0054B9  00                 	db	0
   254  0054BA  30                 	db	48
   255  0054BB  30                 	db	48
   256  0054BC  30                 	db	48
   257  0054BD  30                 	db	48
   258  0054BE  30                 	db	48
   259  0054BF  30                 	db	48
   260  0054C0  30                 	db	48
   261  0054C1  30                 	db	48
   262  0054C2  30                 	db	48
   263  0054C3  30                 	db	48
   264  0054C4  00                 	db	0
   265                           
   266                           ;initializer for _dados_data
   267  0054C5  30                 	db	48
   268  0054C6  30                 	db	48
   269  0054C7  30                 	db	48
   270  0054C8  30                 	db	48
   271  0054C9  30                 	db	48
   272  0054CA  30                 	db	48
   273  0054CB  30                 	db	48
   274  0054CC  30                 	db	48
   275  0054CD  30                 	db	48
   276  0054CE  30                 	db	48
   277  0054CF  30                 	db	48
   278  0054D0  30                 	db	48
   279  0054D1  30                 	db	48
   280  0054D2  30                 	db	48
   281  0054D3  30                 	db	48
   282  0054D4  30                 	db	48
   283  0054D5  30                 	db	48
   284  0054D6  30                 	db	48
   285                           
   286                           ;initializer for _dados_hora
   287  0054D7  30                 	db	48
   288  0054D8  30                 	db	48
   289  0054D9  30                 	db	48
   290  0054DA  30                 	db	48
   291  0054DB  30                 	db	48
   292  0054DC  30                 	db	48
   293  0054DD  30                 	db	48
   294  0054DE  30                 	db	48
   295  0054DF  30                 	db	48
   296  0054E0  30                 	db	48
   297  0054E1  30                 	db	48
   298  0054E2  30                 	db	48
   299  0054E3  30                 	db	48
   300  0054E4  30                 	db	48
   301  0054E5  30                 	db	48
   302  0054E6  30                 	db	48
   303  0054E7  30                 	db	48
   304  0054E8  30                 	db	48
   305                           
   306                           	psect	idataBANK3
   307  0059DA                     __pidataBANK3:
   308                           	callstack 0
   309                           
   310                           ;initializer for _dados_long
   311  0059DA  30                 	db	48
   312  0059DB  30                 	db	48
   313  0059DC  30                 	db	48
   314  0059DD  30                 	db	48
   315  0059DE  30                 	db	48
   316  0059DF  30                 	db	48
   317  0059E0  30                 	db	48
   318  0059E1  30                 	db	48
   319  0059E2  30                 	db	48
   320  0059E3  30                 	db	48
   321  0059E4  30                 	db	48
   322  0059E5  30                 	db	48
   323  0059E6  30                 	db	48
   324  0059E7  30                 	db	48
   325  0059E8  30                 	db	48
   326  0059E9  30                 	db	48
   327  0059EA  30                 	db	48
   328  0059EB  30                 	db	48
   329  0059EC  30                 	db	48
   330  0059ED  30                 	db	48
   331  0059EE  30                 	db	48
   332  0059EF  30                 	db	48
   333  0059F0  30                 	db	48
   334  0059F1  30                 	db	48
   335  0059F2  30                 	db	48
   336  0059F3  30                 	db	48
   337  0059F4  30                 	db	48
   338  0059F5  30                 	db	48
   339  0059F6  30                 	db	48
   340  0059F7  30                 	db	48
   341  0059F8  30                 	db	48
   342  0059F9  30                 	db	48
   343  0059FA  30                 	db	48
   344  0059FB  30                 	db	48
   345  0059FC  30                 	db	48
   346  0059FD  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006100                     __pmediumconst:
   350                           	callstack 0
   351  006100  00                 	db	0
   352  006101                     mensagem_inicial@F3689:
   353                           	callstack 0
   354  006101  54                 	db	84
   355  006102  43                 	db	67
   356  006103  43                 	db	67
   357  006104  2D                 	db	45
   358  006105  2D                 	db	45
   359  006106  54                 	db	84
   360  006107  45                 	db	69
   361  006108  4C                 	db	76
   362  006109  45                 	db	69
   363  00610A  4D                 	db	77
   364  00610B  54                 	db	84
   365  00610C  52                 	db	82
   366  00610D  49                 	db	73
   367  00610E  41                 	db	65
   368  00610F  00                 	db	0
   369  006110  00                 	db	0
   370  006111  00                 	db	0
   371  006112                     __end_ofmensagem_inicial@F3689:
   372                           	callstack 0
   373  006112                     mensagem_inicial@F3687:
   374                           	callstack 0
   375  006112  46                 	db	70
   376  006113  41                 	db	65
   377  006114  54                 	db	84
   378  006115  45                 	db	69
   379  006116  43                 	db	67
   380  006117  20                 	db	32
   381  006118  53                 	db	83
   382  006119  54                 	db	84
   383  00611A  20                 	db	32
   384  00611B  41                 	db	65
   385  00611C  4E                 	db	78
   386  00611D  44                 	db	68
   387  00611E  52                 	db	82
   388  00611F  45                 	db	69
   389  006120  00                 	db	0
   390  006121  00                 	db	0
   391  006122  00                 	db	0
   392  006123                     __end_ofmensagem_inicial@F3687:
   393                           	callstack 0
   394  006123                     _fence_diff_long:
   395                           	callstack 0
   396  006123  2D                 	db	45
   397  006124  30                 	db	48
   398  006125  34                 	db	52
   399  006126  36                 	db	54
   400  006127  33                 	db	51
   401  006128  33                 	db	51
   402  006129  39                 	db	57
   403  00612A  34                 	db	52
   404  00612B  30                 	db	48
   405  00612C  35                 	db	53
   406  00612D  30                 	db	48
   407  00612E  2D                 	db	45
   408  00612F  30                 	db	48
   409  006130  34                 	db	52
   410  006131  36                 	db	54
   411  006132  32                 	db	50
   412  006133  39                 	db	57
   413  006134  34                 	db	52
   414  006135  31                 	db	49
   415  006136  34                 	db	52
   416  006137  37                 	db	55
   417  006138  34                 	db	52
   418  006139  2D                 	db	45
   419  00613A  30                 	db	48
   420  00613B  34                 	db	52
   421  00613C  36                 	db	54
   422  00613D  32                 	db	50
   423  00613E  39                 	db	57
   424  00613F  34                 	db	52
   425  006140  31                 	db	49
   426  006141  34                 	db	52
   427  006142  37                 	db	55
   428  006143  34                 	db	52
   429  006144  2D                 	db	45
   430  006145  30                 	db	48
   431  006146  34                 	db	52
   432  006147  36                 	db	54
   433  006148  33                 	db	51
   434  006149  33                 	db	51
   435  00614A  39                 	db	57
   436  00614B  34                 	db	52
   437  00614C  30                 	db	48
   438  00614D  35                 	db	53
   439  00614E  30                 	db	48
   440  00614F                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  00614F                     _fence_diff_lat:
   443                           	callstack 0
   444  00614F  2D                 	db	45
   445  006150  32                 	db	50
   446  006151  33                 	db	51
   447  006152  33                 	db	51
   448  006153  36                 	db	54
   449  006154  34                 	db	52
   450  006155  36                 	db	54
   451  006156  36                 	db	54
   452  006157  35                 	db	53
   453  006158  33                 	db	51
   454  006159  2D                 	db	45
   455  00615A  32                 	db	50
   456  00615B  33                 	db	51
   457  00615C  33                 	db	51
   458  00615D  36                 	db	54
   459  00615E  34                 	db	52
   460  00615F  36                 	db	54
   461  006160  36                 	db	54
   462  006161  35                 	db	53
   463  006162  33                 	db	51
   464  006163  2D                 	db	45
   465  006164  32                 	db	50
   466  006165  33                 	db	51
   467  006166  34                 	db	52
   468  006167  30                 	db	48
   469  006168  35                 	db	53
   470  006169  39                 	db	57
   471  00616A  36                 	db	54
   472  00616B  34                 	db	52
   473  00616C  32                 	db	50
   474  00616D  2D                 	db	45
   475  00616E  32                 	db	50
   476  00616F  33                 	db	51
   477  006170  34                 	db	52
   478  006171  30                 	db	48
   479  006172  35                 	db	53
   480  006173  39                 	db	57
   481  006174  36                 	db	54
   482  006175  34                 	db	52
   483  006176  32                 	db	50
   484  006177                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  006177  6F                 	db	111	;'o'
   540  006178  20                 	db	32
   541  006179  53                 	db	83	;'S'
   542  00617A  69                 	db	105	;'i'
   543  00617B  73                 	db	115	;'s'
   544  00617C  74                 	db	116	;'t'
   545  00617D  65                 	db	101	;'e'
   546  00617E  6D                 	db	109	;'m'
   547  00617F  61                 	db	97	;'a'
   548  006180  20                 	db	32
   549  006181  64                 	db	100	;'d'
   550  006182  65                 	db	101	;'e'
   551  006183  20                 	db	32
   552  006184  61                 	db	97	;'a'
   553  006185  72                 	db	114	;'r'
   554  006186  71                 	db	113	;'q'
   555  006187  75                 	db	117	;'u'
   556  006188  69                 	db	105	;'i'
   557  006189  76                 	db	118	;'v'
   558  00618A  6F                 	db	111	;'o'
   559  00618B  00                 	db	0
   560  00618C                     STR_2:
   561  00618C  49                 	db	73	;'I'
   562  00618D  6E                 	db	110	;'n'
   563  00618E  73                 	db	115	;'s'
   564  00618F  69                 	db	105	;'i'
   565  006190  72                 	db	114	;'r'
   566  006191  61                 	db	97	;'a'
   567  006192  20                 	db	32
   568  006193  6F                 	db	111	;'o'
   569  006194  20                 	db	32
   570  006195  43                 	db	67	;'C'
   571  006196  61                 	db	97	;'a'
   572  006197  72                 	db	114	;'r'
   573  006198  74                 	db	116	;'t'
   574  006199  61                 	db	97	;'a'
   575  00619A  6F                 	db	111	;'o'
   576  00619B  00                 	db	0
   577  00619C                     STR_12:
   578  00619C  76                 	db	118	;'v'
   579  00619D  25                 	db	37
   580  00619E  73                 	db	115	;'s'
   581  00619F  3B                 	db	59	;';'
   582  0061A0  6C                 	db	108	;'l'
   583  0061A1  74                 	db	116	;'t'
   584  0061A2  25                 	db	37
   585  0061A3  73                 	db	115	;'s'
   586  0061A4  3B                 	db	59	;';'
   587  0061A5  6C                 	db	108	;'l'
   588  0061A6  6F                 	db	111	;'o'
   589  0061A7  25                 	db	37
   590  0061A8  73                 	db	115	;'s'
   591  0061A9  3B                 	db	59	;';'
   592  0061AA  00                 	db	0
   593  0061AB  45                 	db	69	;'E'
   594  0061AC  72                 	db	114	;'r'
   595  0061AD  72                 	db	114	;'r'
   596  0061AE  6F                 	db	111	;'o'
   597  0061AF  20                 	db	32
   598  0061B0  61                 	db	97	;'a'
   599  0061B1  6F                 	db	111	;'o'
   600  0061B2  20                 	db	32
   601  0061B3  6D                 	db	109	;'m'
   602  0061B4  6F                 	db	111	;'o'
   603  0061B5  6E                 	db	110	;'n'
   604  0061B6  74                 	db	116	;'t'
   605  0061B7  61                 	db	97	;'a'
   606  0061B8  72                 	db	114	;'r'
   607  0061B9  00                 	db	0
   608  0061BA  45                 	db	69	;'E'
   609  0061BB  72                 	db	114	;'r'
   610  0061BC  72                 	db	114	;'r'
   611  0061BD  6F                 	db	111	;'o'
   612  0061BE  20                 	db	32
   613  0061BF  61                 	db	97	;'a'
   614  0061C0  6F                 	db	111	;'o'
   615  0061C1  20                 	db	32
   616  0061C2  63                 	db	99	;'c'
   617  0061C3  72                 	db	114	;'r'
   618  0061C4  69                 	db	105	;'i'
   619  0061C5  61                 	db	97	;'a'
   620  0061C6  72                 	db	114	;'r'
   621  0061C7  00                 	db	0
   622  0061C8  65                 	db	101	;'e'
   623  0061C9  78                 	db	120	;'x'
   624  0061CA  74                 	db	116	;'t'
   625  0061CB  66                 	db	102	;'f'
   626  0061CC  65                 	db	101	;'e'
   627  0061CD  6E                 	db	110	;'n'
   628  0061CE  63                 	db	99	;'c'
   629  0061CF  65                 	db	101	;'e'
   630  0061D0  2E                 	db	46
   631  0061D1  74                 	db	116	;'t'
   632  0061D2  78                 	db	120	;'x'
   633  0061D3  74                 	db	116	;'t'
   634  0061D4  00                 	db	0
   635  0061D5                     STR_19:
   636  0061D5  41                 	db	65	;'A'
   637  0061D6  47                 	db	71	;'G'
   638  0061D7  55                 	db	85	;'U'
   639  0061D8  41                 	db	65	;'A'
   640  0061D9  52                 	db	82	;'R'
   641  0061DA  44                 	db	68	;'D'
   642  0061DB  45                 	db	69	;'E'
   643  0061DC  2E                 	db	46
   644  0061DD  2E                 	db	46
   645  0061DE  2E                 	db	46
   646  0061DF  00                 	db	0
   647  0061E0                     STR_14:
   648  0061E0  68                 	db	104	;'h'
   649  0061E1  25                 	db	37
   650  0061E2  73                 	db	115	;'s'
   651  0061E3  3B                 	db	59	;';'
   652  0061E4  64                 	db	100	;'d'
   653  0061E5  4E                 	db	78	;'N'
   654  0061E6  2F                 	db	47
   655  0061E7  41                 	db	65	;'A'
   656  0061E8  3B                 	db	59	;';'
   657  0061E9  0A                 	db	10
   658  0061EA  00                 	db	0
   659  0061EB                     STR_4:
   660  0061EB  4D                 	db	77	;'M'
   661  0061EC  4D                 	db	77	;'M'
   662  0061ED  43                 	db	67	;'C'
   663  0061EE  20                 	db	32
   664  0061EF  56                 	db	86	;'V'
   665  0061F0  65                 	db	101	;'e'
   666  0061F1  72                 	db	114	;'r'
   667  0061F2  2E                 	db	46
   668  0061F3  20                 	db	32
   669  0061F4  33                 	db	51	;'3'
   670  0061F5  00                 	db	0
   671  0061F6                     STR_1:
   672  0061F6  53                 	db	83	;'S'
   673  0061F7  65                 	db	101	;'e'
   674  0061F8  6D                 	db	109	;'m'
   675  0061F9  20                 	db	32
   676  0061FA  43                 	db	67	;'C'
   677  0061FB  61                 	db	97	;'a'
   678  0061FC  72                 	db	114	;'r'
   679  0061FD  74                 	db	116	;'t'
   680  0061FE  61                 	db	97	;'a'
   681  0061FF  6F                 	db	111	;'o'
   682  006200  00                 	db	0
   683  006201                     STR_13:
   684  006201  72                 	db	114	;'r'
   685  006202  30                 	db	48	;'0'
   686  006203  3B                 	db	59	;';'
   687  006204  63                 	db	99	;'c'
   688  006205  30                 	db	48	;'0'
   689  006206  3B                 	db	59	;';'
   690  006207  6B                 	db	107	;'k'
   691  006208  30                 	db	48	;'0'
   692  006209  3B                 	db	59	;';'
   693  00620A  00                 	db	0
   694  00620B  56                 	db	86	;'V'
   695  00620C  65                 	db	101	;'e'
   696  00620D  72                 	db	114	;'r'
   697  00620E  69                 	db	105	;'i'
   698  00620F  66                 	db	102	;'f'
   699  006210  69                 	db	105	;'i'
   700  006211  71                 	db	113	;'q'
   701  006212  75                 	db	117	;'u'
   702  006213  65                 	db	101	;'e'
   703  006214  00                 	db	0
   704  006215  6F                 	db	111	;'o'
   705  006216  20                 	db	32
   706  006217  61                 	db	97	;'a'
   707  006218  72                 	db	114	;'r'
   708  006219  71                 	db	113	;'q'
   709  00621A  75                 	db	117	;'u'
   710  00621B  69                 	db	105	;'i'
   711  00621C  76                 	db	118	;'v'
   712  00621D  6F                 	db	111	;'o'
   713  00621E  00                 	db	0
   714  00621F                     STR_3:
   715  00621F  53                 	db	83	;'S'
   716  006220  44                 	db	68	;'D'
   717  006221  20                 	db	32
   718  006222  56                 	db	86	;'V'
   719  006223  45                 	db	69	;'E'
   720  006224  52                 	db	82	;'R'
   721  006225  2E                 	db	46
   722  006226  20                 	db	32
   723  006227  31                 	db	49	;'1'
   724  006228  00                 	db	0
   725  006229                     STR_32:
   726  006229  42                 	db	66	;'B'
   727  00622A  31                 	db	49	;'1'
   728  00622B  3A                 	db	58	;':'
   729  00622C  46                 	db	70	;'F'
   730  00622D  45                 	db	69	;'E'
   731  00622E  4E                 	db	78	;'N'
   732  00622F  43                 	db	67	;'C'
   733  006230  45                 	db	69	;'E'
   734  006231  00                 	db	0
   735  006232  6F                 	db	111	;'o'
   736  006233  20                 	db	32
   737  006234  63                 	db	99	;'c'
   738  006235  61                 	db	97	;'a'
   739  006236  72                 	db	114	;'r'
   740  006237  74                 	db	116	;'t'
   741  006238  61                 	db	97	;'a'
   742  006239  6F                 	db	111	;'o'
   743  00623A  00                 	db	0
   744  00623B                     STR_33:
   745  00623B  42                 	db	66	;'B'
   746  00623C  32                 	db	50	;'2'
   747  00623D  3A                 	db	58	;':'
   748  00623E  4C                 	db	76	;'L'
   749  00623F  54                 	db	84	;'T'
   750  006240  4C                 	db	76	;'L'
   751  006241  4F                 	db	79	;'O'
   752  006242  00                 	db	0
   753  006243                     STR_20:
   754  006243  46                 	db	70	;'F'
   755  006244  4F                 	db	79	;'O'
   756  006245  52                 	db	82	;'R'
   757  006246  41                 	db	65	;'A'
   758  006247  20                 	db	32
   759  006248  20                 	db	32
   760  006249  00                 	db	0
   761  00624A                     STR_25:
   762  00624A  46                 	db	70	;'F'
   763  00624B  45                 	db	69	;'E'
   764  00624C  4E                 	db	78	;'N'
   765  00624D  43                 	db	67	;'C'
   766  00624E  45                 	db	69	;'E'
   767  00624F  3A                 	db	58	;':'
   768  006250  00                 	db	0
   769  006251                     STR_21:
   770  006251  44                 	db	68	;'D'
   771  006252  45                 	db	69	;'E'
   772  006253  4E                 	db	78	;'N'
   773  006254  54                 	db	84	;'T'
   774  006255  52                 	db	82	;'R'
   775  006256  4F                 	db	79	;'O'
   776  006257  00                 	db	0
   777  006258                     STR_15:
   778  006258  66                 	db	102	;'f'
   779  006259  25                 	db	37
   780  00625A  73                 	db	115	;'s'
   781  00625B  3B                 	db	59	;';'
   782  00625C  0A                 	db	10
   783  00625D  00                 	db	0
   784  00625E                     STR_29:
   785  00625E  46                 	db	70	;'F'
   786  00625F  49                 	db	73	;'I'
   787  006260  58                 	db	88	;'X'
   788  006261  3A                 	db	58	;':'
   789  006262  00                 	db	0
   790  006263                     STR_23:
   791  006263  46                 	db	70	;'F'
   792  006264  4F                 	db	79	;'O'
   793  006265  52                 	db	82	;'R'
   794  006266  41                 	db	65	;'A'
   795  006267  00                 	db	0
   796  006268                     STR_11:
   797  006268  2E                 	db	46
   798  006269  74                 	db	116	;'t'
   799  00626A  6C                 	db	108	;'l'
   800  00626B  6D                 	db	109	;'m'
   801  00626C  00                 	db	0
   802  00626D                     STR_31:
   803  00626D  6C                 	db	108	;'l'
   804  00626E  6F                 	db	111	;'o'
   805  00626F  3A                 	db	58	;':'
   806  006270  00                 	db	0
   807  006271                     STR_30:
   808  006271  6C                 	db	108	;'l'
   809  006272  74                 	db	116	;'t'
   810  006273  3A                 	db	58	;':'
   811  006274  00                 	db	0
   812  006275                     STR_17:
   813  006275  46                 	db	70	;'F'
   814  006276  41                 	db	65	;'A'
   815  006277  54                 	db	84	;'T'
   816  006278  00                 	db	0
   817  006279  0D                 	db	13
   818  00627A  0A                 	db	10
   819  00627B  00                 	db	0
   820  00627C                     STR_24:
   821  00627C  7C                 	db	124
   822  00627D  00                 	db	0
   823  00627E  00                 	db	0	; dummy byte at the end
   824  0000                     
   825                           ; #config settings
   826                           
   827                           	psect	cinit
   828  004276                     __pcinit:
   829                           	callstack 0
   830  004276                     start_initialization:
   831                           	callstack 0
   832  004276                     __initialization:
   833                           	callstack 0
   834                           
   835                           ; Initialize objects allocated to BANK3 (36 bytes)
   836                           ; load TBLPTR registers with __pidataBANK3
   837  004276  0EDA               	movlw	low __pidataBANK3
   838  004278  6EF6               	movwf	tblptrl,c
   839  00427A  0E59               	movlw	high __pidataBANK3
   840  00427C  6EF7               	movwf	tblptrh,c
   841  00427E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   842  004280  6EF8               	movwf	tblptru,c
   843  004282  EE03  F096         	lfsr	0,__pdataBANK3
   844  004286  EE10 F024          	lfsr	1,36
   845  00428A                     copy_data0:
   846  00428A  0009               	tblrd		*+
   847  00428C  CFF5 FFEE          	movff	tablat,postinc0
   848  004290  50E5               	movf	postdec1,w,c
   849  004292  50E1               	movf	fsr1l,w,c
   850  004294  E1FA               	bnz	copy_data0
   851                           
   852                           ; Initialize objects allocated to BANK2 (69 bytes)
   853                           ; load TBLPTR registers with __pidataBANK2
   854  004296  0EA4               	movlw	low __pidataBANK2
   855  004298  6EF6               	movwf	tblptrl,c
   856  00429A  0E54               	movlw	high __pidataBANK2
   857  00429C  6EF7               	movwf	tblptrh,c
   858  00429E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   859  0042A0  6EF8               	movwf	tblptru,c
   860  0042A2  EE02  F09A         	lfsr	0,__pdataBANK2
   861  0042A6  EE10 F045          	lfsr	1,69
   862  0042AA                     copy_data1:
   863  0042AA  0009               	tblrd		*+
   864  0042AC  CFF5 FFEE          	movff	tablat,postinc0
   865  0042B0  50E5               	movf	postdec1,w,c
   866  0042B2  50E1               	movf	fsr1l,w,c
   867  0042B4  E1FA               	bnz	copy_data1
   868                           
   869                           ; Initialize objects allocated to BANK1 (15 bytes)
   870                           ; load TBLPTR registers with __pidataBANK1
   871  0042B6  0E92               	movlw	low __pidataBANK1
   872  0042B8  6EF6               	movwf	tblptrl,c
   873  0042BA  0E5C               	movlw	high __pidataBANK1
   874  0042BC  6EF7               	movwf	tblptrh,c
   875  0042BE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   876  0042C0  6EF8               	movwf	tblptru,c
   877  0042C2  EE01  F0EA         	lfsr	0,__pdataBANK1
   878  0042C6  EE10 F00F          	lfsr	1,15
   879  0042CA                     copy_data2:
   880  0042CA  0009               	tblrd		*+
   881  0042CC  CFF5 FFEE          	movff	tablat,postinc0
   882  0042D0  50E5               	movf	postdec1,w,c
   883  0042D2  50E1               	movf	fsr1l,w,c
   884  0042D4  E1FA               	bnz	copy_data2
   885                           
   886                           ; Clear objects allocated to BIGRAM (544 bytes)
   887  0042D6  EE03  F0BA         	lfsr	0,__pbssBIGRAM
   888  0042DA  EE12 F020          	lfsr	1,544
   889  0042DE                     clear_0:
   890  0042DE  6AEE               	clrf	postinc0,c
   891  0042E0  50E5               	movf	postdec1,w,c
   892  0042E2  50E1               	movf	fsr1l,w,c
   893  0042E4  E1FC               	bnz	clear_0
   894  0042E6  50E2               	movf	fsr1h,w,c
   895  0042E8  E1FA               	bnz	clear_0
   896                           
   897                           ; Clear objects allocated to BANK3 (150 bytes)
   898  0042EA  EE03  F000         	lfsr	0,__pbssBANK3
   899  0042EE  0E96               	movlw	150
   900  0042F0                     clear_1:
   901  0042F0  6AEE               	clrf	postinc0,c
   902  0042F2  06E8               	decf	wreg,f,c
   903  0042F4  E1FD               	bnz	clear_1
   904                           
   905                           ; Clear objects allocated to BANK2 (154 bytes)
   906  0042F6  EE02  F000         	lfsr	0,__pbssBANK2
   907  0042FA  0E9A               	movlw	154
   908  0042FC                     clear_2:
   909  0042FC  6AEE               	clrf	postinc0,c
   910  0042FE  06E8               	decf	wreg,f,c
   911  004300  E1FD               	bnz	clear_2
   912                           
   913                           ; Clear objects allocated to BANK1 (234 bytes)
   914  004302  EE01  F000         	lfsr	0,__pbssBANK1
   915  004306  0EEA               	movlw	234
   916  004308                     clear_3:
   917  004308  6AEE               	clrf	postinc0,c
   918  00430A  06E8               	decf	wreg,f,c
   919  00430C  E1FD               	bnz	clear_3
   920                           
   921                           ; Clear objects allocated to BANK0 (25 bytes)
   922  00430E  EE00  F0E7         	lfsr	0,__pbssBANK0
   923  004312  0E19               	movlw	25
   924  004314                     clear_4:
   925  004314  6AEE               	clrf	postinc0,c
   926  004316  06E8               	decf	wreg,f,c
   927  004318  E1FD               	bnz	clear_4
   928                           
   929                           ; Clear objects allocated to COMRAM (9 bytes)
   930  00431A  EE00  F04D         	lfsr	0,__pbssCOMRAM
   931  00431E  0E09               	movlw	9
   932  004320                     clear_5:
   933  004320  6AEE               	clrf	postinc0,c
   934  004322  06E8               	decf	wreg,f,c
   935  004324  E1FD               	bnz	clear_5
   936  004326                     end_of_initialization:
   937                           	callstack 0
   938  004326                     __end_of__initialization:
   939                           	callstack 0
   940  004326  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   941  004328  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   942  00432A  0100               	movlb	0
   943  00432C  EF03  F02C         	goto	_main	;jump to C main() function
   944                           
   945                           	psect	bssCOMRAM
   946  00004D                     __pbssCOMRAM:
   947                           	callstack 0
   948  00004D                     _FatFs:
   949                           	callstack 0
   950  00004D                     	ds	2
   951  00004F                     troca_de_tela@last_state:
   952                           	callstack 0
   953  00004F                     	ds	1
   954  000050                     troca_de_tela@state:
   955                           	callstack 0
   956  000050                     	ds	1
   957  000051                     verifica_dados_operacionais@contador_atual:
   958                           	callstack 0
   959  000051                     	ds	1
   960  000052                     _tarefa_em_execucao:
   961                           	callstack 0
   962  000052                     	ds	1
   963  000053                     escrita_sdcard@f_fix:
   964                           	callstack 0
   965  000053                     	ds	1
   966  000054                     _is_it_rmc_string:
   967                           	callstack 0
   968  000054                     	ds	1
   969  000055                     _is_it_gga_string:
   970                           	callstack 0
   971  000055                     	ds	1
   972                           
   973                           	psect	bssBANK0
   974  0000E7                     __pbssBANK0:
   975                           	callstack 0
   976  0000E7                     _poligono_ext:
   977                           	callstack 0
   978  0000E7                     	ds	16
   979  0000F7                     _rmc_index:
   980                           	callstack 0
   981  0000F7                     	ds	2
   982  0000F9                     _gga_index:
   983                           	callstack 0
   984  0000F9                     	ds	2
   985  0000FB                     verifica_dados_operacionais@contador_anterior:
   986                           	callstack 0
   987  0000FB                     	ds	1
   988  0000FC                     _sinaliza_int_timer:
   989                           	callstack 0
   990  0000FC                     	ds	1
   991  0000FD                     _data_uart_recebe:
   992                           	callstack 0
   993  0000FD                     	ds	1
   994  0000FE                     _comma_counter_rmc:
   995                           	callstack 0
   996  0000FE                     	ds	1
   997  0000FF                     _comma_counter_gga:
   998                           	callstack 0
   999  0000FF                     	ds	1
  1000                           
  1001                           	psect	bssBANK1
  1002  000100                     __pbssBANK1:
  1003                           	callstack 0
  1004  000100                     _dado:
  1005                           	callstack 0
  1006  000100                     	ds	10
  1007  00010A                     _dado_buffer:
  1008                           	callstack 0
  1009  00010A                     	ds	7
  1010  000111                     _rawAltitude:
  1011                           	callstack 0
  1012  000111                     	ds	7
  1013  000118                     	ds	6
  1014  00011E                     _dados_vel:
  1015                           	callstack 0
  1016  00011E                     	ds	6
  1017  000124                     _tempo_tarefa:
  1018                           	callstack 0
  1019  000124                     	ds	6
  1020  00012A                     _tempo_backup:
  1021                           	callstack 0
  1022  00012A                     	ds	6
  1023  000130                     _p_tarefas:
  1024                           	callstack 0
  1025  000130                     	ds	6
  1026  000136                     _rawCourse:
  1027                           	callstack 0
  1028  000136                     	ds	6
  1029  00013C                     _sentence:
  1030                           	callstack 0
  1031  00013C                     	ds	6
  1032  000142                     _gps_flag:
  1033                           	callstack 0
  1034  000142                     	ds	6
  1035  000148                     verifica_dados_operacionais@velocidade_atual_int:
  1036                           	callstack 0
  1037  000148                     	ds	4
  1038  00014C                     	ds	4
  1039  000150                     _fence_flag:
  1040                           	callstack 0
  1041  000150                     	ds	3
  1042  000153                     _rmc_code:
  1043                           	callstack 0
  1044  000153                     	ds	3
  1045  000156                     _gga_code:
  1046                           	callstack 0
  1047  000156                     	ds	3
  1048  000159                     _rawSatellites:
  1049                           	callstack 0
  1050  000159                     	ds	3
  1051  00015C                     _temp_buff_lat:
  1052                           	callstack 0
  1053  00015C                     	ds	2
  1054  00015E                     _temp_buff_long:
  1055                           	callstack 0
  1056  00015E                     	ds	2
  1057  000160                     verifica_dados_operacionais@velocidade_atual:
  1058                           	callstack 0
  1059  000160                     	ds	2
  1060  000162                     _point_buff_gps_long:
  1061                           	callstack 0
  1062  000162                     	ds	2
  1063  000164                     _point_buff_gps_lat:
  1064                           	callstack 0
  1065  000164                     	ds	2
  1066  000166                     _time_atualizacao:
  1067                           	callstack 0
  1068  000166                     	ds	2
  1069  000168                     _time_recovery:
  1070                           	callstack 0
  1071  000168                     	ds	2
  1072  00016A                     _time_sd:
  1073                           	callstack 0
  1074  00016A                     	ds	2
  1075  00016C                     _timeout_tarefa:
  1076                           	callstack 0
  1077  00016C                     	ds	2
  1078  00016E                     _fsid:
  1079                           	callstack 0
  1080  00016E                     	ds	2
  1081  000170                     _teste:
  1082                           	callstack 0
  1083  000170                     	ds	2
  1084  000172                     _GPGGA_ok:
  1085                           	callstack 0
  1086  000172                     	ds	2
  1087  000174                     _GPRMC_ok:
  1088                           	callstack 0
  1089  000174                     	ds	2
  1090  000176                     _data_buff:
  1091                           	callstack 0
  1092  000176                     	ds	2
  1093  000178                     _flag_anomalia:
  1094                           	callstack 0
  1095  000178                     	ds	1
  1096  000179                     _estado:
  1097                           	callstack 0
  1098  000179                     	ds	1
  1099  00017A                     _data_hoje:
  1100                           	callstack 0
  1101  00017A                     	ds	1
  1102  00017B                     	ds	1
  1103  00017C                     _E_W:
  1104                           	callstack 0
  1105  00017C                     	ds	1
  1106  00017D                     _n_s:
  1107                           	callstack 0
  1108  00017D                     	ds	1
  1109  00017E                     _Term:
  1110                           	callstack 0
  1111  00017E                     	ds	1
  1112  00017F                     _SentenceType:
  1113                           	callstack 0
  1114  00017F                     	ds	1
  1115  000180                     _char_number:
  1116                           	callstack 0
  1117  000180                     	ds	1
  1118  000181                     _fil:
  1119                           	callstack 0
  1120  000181                     	ds	28
  1121  00019D                     _rawLongitude:
  1122                           	callstack 0
  1123  00019D                     	ds	13
  1124  0001AA                     _lt:
  1125                           	callstack 0
  1126  0001AA                     	ds	12
  1127  0001B6                     _rawLatitude:
  1128                           	callstack 0
  1129  0001B6                     	ds	12
  1130  0001C2                     _hora:
  1131                           	callstack 0
  1132  0001C2                     	ds	7
  1133  0001C9                     _rawTime:
  1134                           	callstack 0
  1135  0001C9                     	ds	7
  1136  0001D0                     _data:
  1137                           	callstack 0
  1138  0001D0                     	ds	6
  1139  0001D6                     _vel:
  1140                           	callstack 0
  1141  0001D6                     	ds	6
  1142  0001DC                     _fence:
  1143                           	callstack 0
  1144  0001DC                     	ds	6
  1145  0001E2                     _rawDate:
  1146                           	callstack 0
  1147  0001E2                     	ds	6
  1148  0001E8                     _rawFix:
  1149                           	callstack 0
  1150  0001E8                     	ds	2
  1151                           
  1152                           	psect	dataBANK1
  1153  0001EA                     __pdataBANK1:
  1154                           	callstack 0
  1155  0001EA                     	ds	7
  1156  0001F1                     escreve_inteiro_lcd@F3223:
  1157                           	callstack 0
  1158  0001F1                     	ds	7
  1159  0001F8                     	ds	1
  1160                           
  1161                           	psect	bssBANK2
  1162  000200                     __pbssBANK2:
  1163                           	callstack 0
  1164  000200                     _string_dado:
  1165                           	callstack 0
  1166  000200                     	ds	22
  1167  000216                     _gga_pointers:
  1168                           	callstack 0
  1169  000216                     	ds	20
  1170  00022A                     _data_buffer:
  1171                           	callstack 0
  1172  00022A                     	ds	15
  1173  000239                     _rmc_pointers:
  1174                           	callstack 0
  1175  000239                     	ds	12
  1176  000245                     _buffer:
  1177                           	callstack 0
  1178  000245                     	ds	12
  1179  000251                     _dado_arquivo:
  1180                           	callstack 0
  1181  000251                     	ds	20
  1182  000265                     _filename:
  1183                           	callstack 0
  1184  000265                     	ds	20
  1185  000279                     _rawSpeed:
  1186                           	callstack 0
  1187  000279                     	ds	20
  1188  00028D                     _lo:
  1189                           	callstack 0
  1190  00028D                     	ds	13
  1191                           
  1192                           	psect	dataBANK2
  1193  00029A                     __pdataBANK2:
  1194                           	callstack 0
  1195  00029A                     _dados_lat:
  1196                           	callstack 0
  1197  00029A                     	ds	33
  1198  0002BB                     _dados_data:
  1199                           	callstack 0
  1200  0002BB                     	ds	18
  1201  0002CD                     _dados_hora:
  1202                           	callstack 0
  1203  0002CD                     	ds	18
  1204                           
  1205                           	psect	bssBANK3
  1206  000300                     __pbssBANK3:
  1207                           	callstack 0
  1208  000300                     _gga_buffer:
  1209                           	callstack 0
  1210  000300                     	ds	80
  1211  000350                     _rmc_buffer:
  1212                           	callstack 0
  1213  000350                     	ds	70
  1214                           
  1215                           	psect	dataBANK3
  1216  000396                     __pdataBANK3:
  1217                           	callstack 0
  1218  000396                     _dados_long:
  1219                           	callstack 0
  1220  000396                     	ds	36
  1221                           
  1222                           	psect	bssBIGRAM
  1223  0003BA                     __pbssBIGRAM:
  1224                           	callstack 0
  1225  0003BA                     _fs:
  1226                           	callstack 0
  1227  0003BA                     	ds	544
  1228                           
  1229                           	psect	cstackBANK2
  1230  0002DF                     __pcstackBANK2:
  1231                           	callstack 0
  1232  0002DF                     disparo_gravacao@velocidade:
  1233                           	callstack 0
  1234                           
  1235                           ; 12 bytes @ 0x0
  1236  0002DF                     	ds	12
  1237  0002EB                     disparo_gravacao@fix_gps:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0xC
  1241  0002EB                     	ds	2
  1242  0002ED                     disparo_gravacao@v_max:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0xE
  1246  0002ED                     	ds	2
  1247  0002EF                     disparo_gravacao@index_max:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x10
  1251  0002EF                     	ds	2
  1252  0002F1                     disparo_gravacao@i:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x12
  1256  0002F1                     	ds	1
  1257                           
  1258                           	psect	cstackBANK0
  1259  000060                     __pcstackBANK0:
  1260                           	callstack 0
  1261  000060                     ??_get_cluster:
  1262  000060                     ??_auto_mount:
  1263  000060                     put_cluster@clust:
  1264                           	callstack 0
  1265  000060                     f_sync@fp:
  1266                           	callstack 0
  1267  000060                     latitude_to_convert@latitude:
  1268                           	callstack 0
  1269  000060                     longitude_to_convert@longitude:
  1270                           	callstack 0
  1271                           
  1272                           ; 11 bytes @ 0x0
  1273  000060                     	ds	2
  1274  000062                     put_cluster@val:
  1275                           	callstack 0
  1276  000062                     f_sync@tim:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x2
  1280  000062                     	ds	2
  1281  000064                     ??_put_cluster:
  1282                           
  1283                           ; 1 bytes @ 0x4
  1284  000064                     	ds	2
  1285  000066                     f_sync@res:
  1286                           	callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x6
  1289  000066                     	ds	1
  1290  000067                     f_sync@dir:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x7
  1294  000067                     	ds	2
  1295  000069                     latitude_to_convert@j:
  1296                           	callstack 0
  1297  000069                     get_cluster@wc:
  1298                           	callstack 0
  1299  000069                     f_close@fp:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x9
  1303  000069                     	ds	1
  1304  00006A                     latitude_to_convert@i:
  1305                           	callstack 0
  1306  00006A                     _put_cluster$1622:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0xA
  1310  00006A                     	ds	1
  1311  00006B                     longitude_to_convert@j:
  1312                           	callstack 0
  1313  00006B                     get_cluster@fatsect:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0xB
  1317  00006B                     	ds	1
  1318  00006C                     longitude_to_convert@i:
  1319                           	callstack 0
  1320  00006C                     _put_cluster$1623:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0xC
  1324  00006C                     	ds	2
  1325  00006E                     put_cluster@fatsect:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0xE
  1329  00006E                     	ds	1
  1330  00006F                     get_cluster@bc:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0xF
  1334  00006F                     	ds	2
  1335  000071                     get_cluster@fs:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x11
  1339  000071                     	ds	1
  1340  000072                     put_cluster@bc:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x12
  1344  000072                     	ds	1
  1345  000073                     ??_next_dir_entry:
  1346                           
  1347                           ; 1 bytes @ 0x13
  1348  000073                     	ds	1
  1349  000074                     put_cluster@p:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x14
  1353  000074                     	ds	2
  1354  000076                     put_cluster@fs:
  1355                           	callstack 0
  1356  000076                     auto_mount@maxclust:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x16
  1360  000076                     	ds	2
  1361  000078                     ?_create_chain:
  1362                           	callstack 0
  1363  000078                     remove_chain@clust:
  1364                           	callstack 0
  1365  000078                     create_chain@clust:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x18
  1369  000078                     	ds	2
  1370  00007A                     next_dir_entry@clust:
  1371                           	callstack 0
  1372  00007A                     auto_mount@bootsect:
  1373                           	callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x1A
  1376  00007A                     	ds	2
  1377  00007C                     remove_chain@nxt:
  1378                           	callstack 0
  1379  00007C                     create_chain@mcl:
  1380                           	callstack 0
  1381  00007C                     next_dir_entry@idx:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x1C
  1385  00007C                     	ds	2
  1386  00007E                     trace_path@dj:
  1387                           	callstack 0
  1388  00007E                     remove_chain@fs:
  1389                           	callstack 0
  1390  00007E                     create_chain@fs:
  1391                           	callstack 0
  1392  00007E                     auto_mount@totalsect:
  1393                           	callstack 0
  1394                           
  1395                           ; 4 bytes @ 0x1E
  1396  00007E                     	ds	1
  1397  00007F                     trace_path@fn:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x1F
  1401  00007F                     	ds	1
  1402  000080                     create_chain@cstat:
  1403                           	callstack 0
  1404  000080                     trace_path@path:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x20
  1408  000080                     	ds	2
  1409  000082                     trace_path@dir:
  1410                           	callstack 0
  1411  000082                     create_chain@scl:
  1412                           	callstack 0
  1413  000082                     auto_mount@p:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x22
  1417  000082                     	ds	1
  1418  000083                     ??_trace_path:
  1419                           
  1420                           ; 1 bytes @ 0x23
  1421  000083                     	ds	1
  1422  000084                     auto_mount@fmt:
  1423                           	callstack 0
  1424  000084                     create_chain@ncl:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x24
  1428  000084                     	ds	1
  1429  000085                     auto_mount@stat:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x25
  1433  000085                     	ds	1
  1434  000086                     reserve_direntry@dj:
  1435                           	callstack 0
  1436  000086                     f_write@fp:
  1437                           	callstack 0
  1438  000086                     f_lseek@fp:
  1439                           	callstack 0
  1440  000086                     auto_mount@fatsize:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x26
  1444  000086                     	ds	1
  1445  000087                     reserve_direntry@dir:
  1446                           	callstack 0
  1447  000087                     _trace_path$1779:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x27
  1451  000087                     	ds	1
  1452  000088                     ??_reserve_direntry:
  1453  000088                     f_write@buff:
  1454                           	callstack 0
  1455  000088                     f_lseek@ofs:
  1456                           	callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x28
  1459  000088                     	ds	1
  1460  000089                     _trace_path$1781:
  1461                           	callstack 0
  1462  000089                     f_write@btw:
  1463                           	callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x29
  1466  000089                     	ds	1
  1467  00008A                     auto_mount@fs:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x2A
  1471  00008A                     	ds	1
  1472  00008B                     f_write@bw:
  1473                           	callstack 0
  1474  00008B                     trace_path@fs:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x2B
  1478  00008B                     	ds	1
  1479  00008C                     ??_f_lseek:
  1480  00008C                     ??_f_write:
  1481  00008C                     reserve_direntry@sector:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x2C
  1485  00008C                     	ds	1
  1486  00008D                     trace_path@clust:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x2D
  1490  00008D                     	ds	2
  1491  00008F                     trace_path@ds:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x2F
  1495  00008F                     	ds	1
  1496  000090                     reserve_direntry@n:
  1497                           	callstack 0
  1498  000090                     trace_path@dptr:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x30
  1502  000090                     	ds	1
  1503  000091                     reserve_direntry@dptr:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x31
  1507  000091                     	ds	2
  1508  000093                     reserve_direntry@c:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0x33
  1512  000093                     	ds	1
  1513  000094                     reserve_direntry@clust:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x34
  1517  000094                     	ds	2
  1518  000096                     reserve_direntry@fs:
  1519                           	callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x36
  1522  000096                     	ds	2
  1523  000098                     f_write@res:
  1524                           	callstack 0
  1525  000098                     f_open@fp:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x38
  1529  000098                     	ds	1
  1530  000099                     f_write@wbuff:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x39
  1534  000099                     	ds	1
  1535  00009A                     f_open@path:
  1536                           	callstack 0
  1537  00009A                     f_write@sect:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0x3A
  1541  00009A                     	ds	2
  1542  00009C                     f_open@mode:
  1543                           	callstack 0
  1544  00009C                     f_lseek@res:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x3C
  1548  00009C                     	ds	1
  1549  00009D                     ??_f_open:
  1550  00009D                     f_lseek@ifptr:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x3D
  1554  00009D                     	ds	1
  1555  00009E                     f_write@cc:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x3E
  1559  00009E                     	ds	2
  1560  0000A0                     f_write@clust:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x40
  1564  0000A0                     	ds	1
  1565  0000A1                     f_lseek@csize:
  1566                           	callstack 0
  1567  0000A1                     f_open@fn:
  1568                           	callstack 0
  1569                           
  1570                           ; 12 bytes @ 0x41
  1571  0000A1                     	ds	1
  1572  0000A2                     f_write@wcnt:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x42
  1576  0000A2                     	ds	2
  1577  0000A4                     ?_fputc:
  1578                           	callstack 0
  1579  0000A4                     fputc@chr:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x44
  1583  0000A4                     	ds	1
  1584  0000A5                     f_lseek@clust:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x45
  1588  0000A5                     	ds	1
  1589  0000A6                     fputc@fil:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x46
  1593  0000A6                     	ds	2
  1594  0000A8                     fputc@c:
  1595                           	callstack 0
  1596                           
  1597                           ; 1 bytes @ 0x48
  1598  0000A8                     	ds	1
  1599  0000A9                     fputc@bw:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x49
  1603  0000A9                     	ds	2
  1604  0000AB                     ?_fputs:
  1605                           	callstack 0
  1606  0000AB                     fputs@str:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x4B
  1610  0000AB                     	ds	2
  1611  0000AD                     f_open@rs:
  1612                           	callstack 0
  1613  0000AD                     fputs@fil:
  1614                           	callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x4D
  1617  0000AD                     	ds	2
  1618  0000AF                     fputs@n:
  1619                           	callstack 0
  1620  0000AF                     f_open@dw:
  1621                           	callstack 0
  1622                           
  1623                           ; 4 bytes @ 0x4F
  1624  0000AF                     	ds	2
  1625  0000B1                     ?_fprintf:
  1626                           	callstack 0
  1627  0000B1                     fprintf@fil:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x51
  1631  0000B1                     	ds	2
  1632  0000B3                     f_open@res:
  1633                           	callstack 0
  1634  0000B3                     fprintf@str:
  1635                           	callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x53
  1638  0000B3                     	ds	1
  1639  0000B4                     f_open@dir:
  1640                           	callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x54
  1643  0000B4                     	ds	2
  1644  0000B6                     f_open@dj:
  1645                           	callstack 0
  1646                           
  1647                           ; 14 bytes @ 0x56
  1648  0000B6                     	ds	5
  1649  0000BB                     ??_fprintf:
  1650                           
  1651                           ; 1 bytes @ 0x5B
  1652  0000BB                     	ds	2
  1653  0000BD                     fprintf@s:
  1654                           	callstack 0
  1655                           
  1656                           ; 16 bytes @ 0x5D
  1657  0000BD                     	ds	16
  1658  0000CD                     fprintf@res:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x6D
  1662  0000CD                     	ds	2
  1663  0000CF                     _fprintf$2225:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x6F
  1667  0000CF                     	ds	2
  1668  0000D1                     fprintf@w:
  1669                           	callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x71
  1672  0000D1                     	ds	2
  1673  0000D3                     fprintf@f:
  1674                           	callstack 0
  1675                           
  1676                           ; 1 bytes @ 0x73
  1677  0000D3                     	ds	1
  1678  0000D4                     fprintf@r:
  1679                           	callstack 0
  1680                           
  1681                           ; 1 bytes @ 0x74
  1682  0000D4                     	ds	1
  1683  0000D5                     fprintf@val:
  1684                           	callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x75
  1687  0000D5                     	ds	4
  1688  0000D9                     fprintf@arp:
  1689                           	callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x79
  1692  0000D9                     	ds	1
  1693  0000DA                     fprintf@cc:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x7A
  1697  0000DA                     	ds	2
  1698  0000DC                     fprintf@i:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x7C
  1702  0000DC                     	ds	2
  1703  0000DE                     fprintf@c:
  1704                           	callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x7E
  1707  0000DE                     	ds	1
  1708  0000DF                     ??_disparo_gravacao:
  1709                           
  1710                           ; 1 bytes @ 0x7F
  1711  0000DF                     	ds	5
  1712  0000E4                     ??_escalonador:
  1713                           
  1714                           ; 1 bytes @ 0x84
  1715  0000E4                     	ds	2
  1716  0000E6                     escalonador@cont:
  1717                           	callstack 0
  1718                           
  1719                           ; 1 bytes @ 0x86
  1720  0000E6                     	ds	1
  1721                           
  1722                           	psect	cstackCOMRAM
  1723  000001                     __pcstackCOMRAM:
  1724                           	callstack 0
  1725  000001                     tratamento_uart@received_char:
  1726                           	callstack 0
  1727  000001                     i2write_timer_zero@timer0:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x0
  1731  000001                     	ds	2
  1732  000003                     ??_isr:
  1733  000003                     
  1734                           ; 1 bytes @ 0x2
  1735  000003                     	ds	6
  1736  000009                     isr@cont:
  1737                           	callstack 0
  1738                           
  1739                           ; 1 bytes @ 0x8
  1740  000009                     	ds	1
  1741  00000A                     ??_dummy_clocks:
  1742  00000A                     ??_isdigit:
  1743  00000A                     ?_latitude:
  1744                           	callstack 0
  1745  00000A                     ?_longitude:
  1746                           	callstack 0
  1747  00000A                     ?_rawhora:
  1748                           	callstack 0
  1749  00000A                     ?_rawdata:
  1750                           	callstack 0
  1751  00000A                     ?_fix:
  1752                           	callstack 0
  1753  00000A                     ?_Speed:
  1754                           	callstack 0
  1755  00000A                     ?_strlen:
  1756                           	callstack 0
  1757  00000A                     ?_memcmp:
  1758                           	callstack 0
  1759  00000A                     ?_gps_segundos:
  1760                           	callstack 0
  1761  00000A                     ?_gps_minutos:
  1762                           	callstack 0
  1763  00000A                     ?_gps_hora:
  1764                           	callstack 0
  1765  00000A                     ?_gps_dia:
  1766                           	callstack 0
  1767  00000A                     ?_gps_mes:
  1768                           	callstack 0
  1769  00000A                     ?_gps_ano:
  1770                           	callstack 0
  1771  00000A                     ?___wmul:
  1772                           	callstack 0
  1773  00000A                     ?___lwdiv:
  1774                           	callstack 0
  1775  00000A                     ?___lwmod:
  1776                           	callstack 0
  1777  00000A                     ?___ftpack:
  1778                           	callstack 0
  1779  00000A                     ?___lmul:
  1780                           	callstack 0
  1781  00000A                     ?___lldiv:
  1782                           	callstack 0
  1783  00000A                     ?___aldiv:
  1784                           	callstack 0
  1785  00000A                     ?___llmod:
  1786                           	callstack 0
  1787  00000A                     disk_ioctl@cmd:
  1788                           	callstack 0
  1789  00000A                     delay@contador_ext:
  1790                           	callstack 0
  1791  00000A                     get_gpstime@index:
  1792                           	callstack 0
  1793  00000A                     response@buff:
  1794                           	callstack 0
  1795  00000A                     recebe_dado_gps@flag_recebe:
  1796                           	callstack 0
  1797  00000A                     verifica_plausibilidade_long@posicao:
  1798                           	callstack 0
  1799  00000A                     verifica_plausibilidade_lat@posicao:
  1800                           	callstack 0
  1801  00000A                     write_timer_zero@timer0:
  1802                           	callstack 0
  1803  00000A                     data_nome@p_buff:
  1804                           	callstack 0
  1805  00000A                     hora_nome@p_buff:
  1806                           	callstack 0
  1807  00000A                     f_mount@fs:
  1808                           	callstack 0
  1809  00000A                     ___wmul@multiplier:
  1810                           	callstack 0
  1811  00000A                     ___lwdiv@dividend:
  1812                           	callstack 0
  1813  00000A                     ___lwmod@dividend:
  1814                           	callstack 0
  1815  00000A                     memcmp@s1:
  1816                           	callstack 0
  1817  00000A                     memcpy@d1:
  1818                           	callstack 0
  1819  00000A                     memset@p1:
  1820                           	callstack 0
  1821  00000A                     strcat@to:
  1822                           	callstack 0
  1823  00000A                     strlen@s:
  1824                           	callstack 0
  1825  00000A                     ___ftpack@arg:
  1826                           	callstack 0
  1827  00000A                     wait_ready@timeout:
  1828                           	callstack 0
  1829  00000A                     ___lmul@multiplier:
  1830                           	callstack 0
  1831  00000A                     ___lldiv@dividend:
  1832                           	callstack 0
  1833  00000A                     ___aldiv@dividend:
  1834                           	callstack 0
  1835  00000A                     ___llmod@dividend:
  1836                           	callstack 0
  1837                           
  1838                           ; 4 bytes @ 0x9
  1839  00000A                     	ds	1
  1840  00000B                     sdc_disk_status@pdrv:
  1841                           	callstack 0
  1842  00000B                     delay@contador_int:
  1843                           	callstack 0
  1844  00000B                     get_latitude@index_lat:
  1845                           	callstack 0
  1846  00000B                     get_longitude@index_long:
  1847                           	callstack 0
  1848  00000B                     get_rawdate@index_date:
  1849                           	callstack 0
  1850  00000B                     get_rawspeed@index_speed:
  1851                           	callstack 0
  1852  00000B                     escreve_SPI@dado:
  1853                           	callstack 0
  1854  00000B                     recebe_dado_gps@timeout:
  1855                           	callstack 0
  1856  00000B                     _isdigit$3273:
  1857                           	callstack 0
  1858  00000B                     disk_ioctl@buff:
  1859                           	callstack 0
  1860                           
  1861                           ; 2 bytes @ 0xA
  1862  00000B                     	ds	1
  1863  00000C                     ??_gps_segundos:
  1864  00000C                     ??_gps_minutos:
  1865  00000C                     ??_gps_hora:
  1866  00000C                     ??_gps_dia:
  1867  00000C                     ??_gps_mes:
  1868  00000C                     ??_gps_ano:
  1869  00000C                     escreve_cmd_lcd@comando:
  1870                           	callstack 0
  1871  00000C                     endereco_cursor_lcd@endereco:
  1872                           	callstack 0
  1873  00000C                     escreve_caractere_lcd@data:
  1874                           	callstack 0
  1875  00000C                     get_latitude@index:
  1876                           	callstack 0
  1877  00000C                     get_longitude@index:
  1878                           	callstack 0
  1879  00000C                     get_rawdate@index:
  1880                           	callstack 0
  1881  00000C                     get_rawspeed@index:
  1882                           	callstack 0
  1883  00000C                     dummy_clocks@n:
  1884                           	callstack 0
  1885  00000C                     data_nome@i:
  1886                           	callstack 0
  1887  00000C                     hora_nome@i:
  1888                           	callstack 0
  1889  00000C                     f_mount@drv:
  1890                           	callstack 0
  1891  00000C                     isdigit@c:
  1892                           	callstack 0
  1893  00000C                     ___wmul@multiplicand:
  1894                           	callstack 0
  1895  00000C                     ___lwdiv@divisor:
  1896                           	callstack 0
  1897  00000C                     ___lwmod@divisor:
  1898                           	callstack 0
  1899  00000C                     memcmp@s2:
  1900                           	callstack 0
  1901  00000C                     memcpy@s1:
  1902                           	callstack 0
  1903  00000C                     memset@c:
  1904                           	callstack 0
  1905  00000C                     strcat@from:
  1906                           	callstack 0
  1907  00000C                     strcpy@to:
  1908                           	callstack 0
  1909  00000C                     strlen@cp:
  1910                           	callstack 0
  1911                           
  1912                           ; 2 bytes @ 0xB
  1913  00000C                     	ds	1
  1914  00000D                     ??_init_lcd:
  1915  00000D                     disk_ioctl@pdrv:
  1916                           	callstack 0
  1917  00000D                     posicao_cursor_lcd@coluna:
  1918                           	callstack 0
  1919  00000D                     ___ftpack@exp:
  1920                           	callstack 0
  1921  00000D                     escreve_frase_ram_lcd@buffer:
  1922                           	callstack 0
  1923  00000D                     dummy_clocks@i:
  1924                           	callstack 0
  1925                           
  1926                           ; 2 bytes @ 0xC
  1927  00000D                     	ds	1
  1928  00000E                     ?_get_fattime:
  1929                           	callstack 0
  1930  00000E                     disk_status@pdrv:
  1931                           	callstack 0
  1932  00000E                     disk_ioctl@res:
  1933                           	callstack 0
  1934  00000E                     posicao_cursor_lcd@linha:
  1935                           	callstack 0
  1936  00000E                     wait_ready@res:
  1937                           	callstack 0
  1938  00000E                     ___ftpack@sign:
  1939                           	callstack 0
  1940  00000E                     ___lwdiv@counter:
  1941                           	callstack 0
  1942  00000E                     ___lwmod@counter:
  1943                           	callstack 0
  1944  00000E                     ___wmul@product:
  1945                           	callstack 0
  1946  00000E                     memcmp@n:
  1947                           	callstack 0
  1948  00000E                     memcpy@n:
  1949                           	callstack 0
  1950  00000E                     memset@n:
  1951                           	callstack 0
  1952  00000E                     strcat@cp:
  1953                           	callstack 0
  1954  00000E                     strcpy@from:
  1955                           	callstack 0
  1956  00000E                     ___lmul@multiplicand:
  1957                           	callstack 0
  1958  00000E                     ___lldiv@divisor:
  1959                           	callstack 0
  1960  00000E                     ___aldiv@divisor:
  1961                           	callstack 0
  1962  00000E                     ___llmod@divisor:
  1963                           	callstack 0
  1964                           
  1965                           ; 4 bytes @ 0xD
  1966  00000E                     	ds	1
  1967  00000F                     ??___ftpack:
  1968  00000F                     disk_status@stat:
  1969                           	callstack 0
  1970  00000F                     posicao_cursor_lcd@endereco:
  1971                           	callstack 0
  1972  00000F                     ___lwdiv@quotient:
  1973                           	callstack 0
  1974  00000F                     command@arg:
  1975                           	callstack 0
  1976                           
  1977                           ; 4 bytes @ 0xE
  1978  00000F                     	ds	1
  1979  000010                     ??_memcmp:
  1980  000010                     ??_mensagem_inicial:
  1981  000010                     ?_atoi:
  1982                           	callstack 0
  1983  000010                     memcpy@tmp:
  1984                           	callstack 0
  1985  000010                     monta_sd@dado:
  1986                           	callstack 0
  1987  000010                     validate@fs:
  1988                           	callstack 0
  1989  000010                     memset@p:
  1990                           	callstack 0
  1991  000010                     strcpy@cp:
  1992                           	callstack 0
  1993  000010                     atoi@s:
  1994                           	callstack 0
  1995                           
  1996                           ; 3 bytes @ 0xF
  1997  000010                     	ds	1
  1998  000011                     get_fix@index_fix:
  1999                           	callstack 0
  2000  000011                     utoa@buf:
  2001                           	callstack 0
  2002  000011                     memcpy@d:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x10
  2006  000011                     	ds	1
  2007  000012                     ??_get_fattime:
  2008  000012                     get_fix@index:
  2009                           	callstack 0
  2010  000012                     make_dirfile@path:
  2011                           	callstack 0
  2012  000012                     ___aldiv@counter:
  2013                           	callstack 0
  2014  000012                     ___llmod@counter:
  2015                           	callstack 0
  2016  000012                     validate@id:
  2017                           	callstack 0
  2018  000012                     ___lmul@product:
  2019                           	callstack 0
  2020  000012                     ___lldiv@quotient:
  2021                           	callstack 0
  2022  000012                     mensagem_inicial@msg_linha_um:
  2023                           	callstack 0
  2024                           
  2025                           ; 17 bytes @ 0x11
  2026  000012                     	ds	1
  2027  000013                     ??_atoi:
  2028  000013                     command@CRC:
  2029                           	callstack 0
  2030  000013                     monta_sd@index:
  2031                           	callstack 0
  2032  000013                     make_dirfile@dirname:
  2033                           	callstack 0
  2034  000013                     ___aldiv@sign:
  2035                           	callstack 0
  2036  000013                     utoa@val:
  2037                           	callstack 0
  2038  000013                     memcpy@s:
  2039                           	callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x12
  2042  000013                     	ds	1
  2043  000014                     ??_make_dirfile:
  2044  000014                     ??_validate:
  2045  000014                     command@CMD:
  2046                           	callstack 0
  2047  000014                     monta_sd@i:
  2048                           	callstack 0
  2049  000014                     ___aldiv@quotient:
  2050                           	callstack 0
  2051                           
  2052                           ; 4 bytes @ 0x13
  2053  000014                     	ds	1
  2054  000015                     command@argument:
  2055                           	callstack 0
  2056  000015                     atoi@sign:
  2057                           	callstack 0
  2058  000015                     utoa@base:
  2059                           	callstack 0
  2060                           
  2061                           ; 2 bytes @ 0x14
  2062  000015                     	ds	1
  2063  000016                     ?_atol:
  2064                           	callstack 0
  2065  000016                     ?_clust2sect:
  2066                           	callstack 0
  2067  000016                     ___lldiv@counter:
  2068                           	callstack 0
  2069  000016                     sdc_disk_read@p_buff:
  2070                           	callstack 0
  2071  000016                     sdc_disk_write@p_buff:
  2072                           	callstack 0
  2073  000016                     clust2sect@clust:
  2074                           	callstack 0
  2075  000016                     _make_dirfile$1732:
  2076                           	callstack 0
  2077  000016                     atoi@a:
  2078                           	callstack 0
  2079  000016                     atol@s:
  2080                           	callstack 0
  2081                           
  2082                           ; 2 bytes @ 0x15
  2083  000016                     	ds	1
  2084  000017                     ultoa@buf:
  2085                           	callstack 0
  2086  000017                     utoa@v:
  2087                           	callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x16
  2090  000017                     	ds	1
  2091  000018                     ?___awtoft:
  2092                           	callstack 0
  2093  000018                     make_dirfile@b:
  2094                           	callstack 0
  2095  000018                     sdc_reset@count_nosd:
  2096                           	callstack 0
  2097  000018                     ___awtoft@c:
  2098                           	callstack 0
  2099  000018                     sdc_disk_read@sector:
  2100                           	callstack 0
  2101  000018                     sdc_disk_write@sector:
  2102                           	callstack 0
  2103  000018                     configura_baudrate_uart@baudrate:
  2104                           	callstack 0
  2105  000018                     ultoa@val:
  2106                           	callstack 0
  2107                           
  2108                           ; 4 bytes @ 0x17
  2109  000018                     	ds	1
  2110  000019                     make_dirfile@t:
  2111                           	callstack 0
  2112  000019                     utoa@c:
  2113                           	callstack 0
  2114                           
  2115                           ; 1 bytes @ 0x18
  2116  000019                     	ds	1
  2117  00001A                     ??_atol:
  2118  00001A                     ??_clust2sect:
  2119  00001A                     make_dirfile@a:
  2120                           	callstack 0
  2121  00001A                     sdc_reset@count:
  2122                           	callstack 0
  2123  00001A                     itoa@buf:
  2124                           	callstack 0
  2125                           
  2126                           ; 2 bytes @ 0x19
  2127  00001A                     	ds	1
  2128  00001B                     make_dirfile@n:
  2129                           	callstack 0
  2130  00001B                     ___awtoft@sign:
  2131                           	callstack 0
  2132                           
  2133                           ; 1 bytes @ 0x1A
  2134  00001B                     	ds	1
  2135  00001C                     ??_configura_baudrate_uart:
  2136  00001C                     ?___ftmul:
  2137                           	callstack 0
  2138  00001C                     sdc_reset@buff:
  2139                           	callstack 0
  2140  00001C                     sdc_disk_read@count:
  2141                           	callstack 0
  2142  00001C                     sdc_disk_write@count:
  2143                           	callstack 0
  2144  00001C                     make_dirfile@c:
  2145                           	callstack 0
  2146  00001C                     itoa@val:
  2147                           	callstack 0
  2148  00001C                     ultoa@base:
  2149                           	callstack 0
  2150  00001C                     ___ftmul@f1:
  2151                           	callstack 0
  2152                           
  2153                           ; 3 bytes @ 0x1B
  2154  00001C                     	ds	1
  2155  00001D                     ??_sdc_disk_initialize:
  2156  00001D                     ??_sdc_disk_read:
  2157  00001D                     ??_sdc_disk_write:
  2158                           
  2159                           ; 1 bytes @ 0x1C
  2160  00001D                     	ds	1
  2161  00001E                     atol@sign:
  2162                           	callstack 0
  2163  00001E                     itoa@base:
  2164                           	callstack 0
  2165  00001E                     ultoa@v:
  2166                           	callstack 0
  2167                           
  2168                           ; 4 bytes @ 0x1D
  2169  00001E                     	ds	1
  2170  00001F                     clust2sect@fs:
  2171                           	callstack 0
  2172  00001F                     ___ftmul@f2:
  2173                           	callstack 0
  2174  00001F                     atol@a:
  2175                           	callstack 0
  2176                           
  2177                           ; 4 bytes @ 0x1E
  2178  00001F                     	ds	1
  2179  000020                     sdc_disk_initialize@stat:
  2180                           	callstack 0
  2181                           
  2182                           ; 1 bytes @ 0x1F
  2183  000020                     	ds	1
  2184  000021                     sdc_disk_initialize@count1:
  2185                           	callstack 0
  2186                           
  2187                           ; 2 bytes @ 0x20
  2188  000021                     	ds	1
  2189  000022                     ??___ftmul:
  2190  000022                     ultoa@c:
  2191                           	callstack 0
  2192  000022                     sdc_disk_read@start_add:
  2193                           	callstack 0
  2194                           
  2195                           ; 4 bytes @ 0x21
  2196  000022                     	ds	1
  2197  000023                     atol@c:
  2198                           	callstack 0
  2199  000023                     ltoa@buf:
  2200                           	callstack 0
  2201  000023                     sdc_disk_initialize@crc_number:
  2202                           	callstack 0
  2203  000023                     sdc_disk_write@count1:
  2204                           	callstack 0
  2205  000023                     mensagem_inicial@msg_dois:
  2206                           	callstack 0
  2207                           
  2208                           ; 17 bytes @ 0x22
  2209  000023                     	ds	1
  2210  000024                     ?_convert_to_int_point_lat:
  2211                           	callstack 0
  2212  000024                     ?_convert_to_int:
  2213                           	callstack 0
  2214  000024                     ?_convert_to_int_point_long:
  2215                           	callstack 0
  2216  000024                     configura_baudrate_uart@x:
  2217                           	callstack 0
  2218  000024                     convert_to_int@p_buff:
  2219                           	callstack 0
  2220  000024                     ltoa@val:
  2221                           	callstack 0
  2222                           
  2223                           ; 4 bytes @ 0x23
  2224  000024                     	ds	1
  2225  000025                     sdc_disk_initialize@buff_i:
  2226                           	callstack 0
  2227  000025                     sdc_disk_write@res:
  2228                           	callstack 0
  2229  000025                     ___ftmul@exp:
  2230                           	callstack 0
  2231                           
  2232                           ; 1 bytes @ 0x24
  2233  000025                     	ds	1
  2234  000026                     sdc_disk_initialize@ocr:
  2235                           	callstack 0
  2236  000026                     sdc_disk_read@length:
  2237                           	callstack 0
  2238  000026                     sdc_disk_write@j:
  2239                           	callstack 0
  2240  000026                     ___ftmul@f3_as_product:
  2241                           	callstack 0
  2242                           
  2243                           ; 3 bytes @ 0x25
  2244  000026                     	ds	1
  2245  000027                     sdc_disk_initialize@count2:
  2246                           	callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x26
  2249  000027                     	ds	1
  2250  000028                     sdc_disk_read@buff:
  2251                           	callstack 0
  2252  000028                     sdc_disk_write@buff:
  2253                           	callstack 0
  2254  000028                     ltoa@base:
  2255                           	callstack 0
  2256  000028                     convert_to_int_point_lat@convert_str_lat:
  2257                           	callstack 0
  2258  000028                     convert_to_int_point_long@convert_str_long:
  2259                           	callstack 0
  2260                           
  2261                           ; 10 bytes @ 0x27
  2262  000028                     	ds	1
  2263  000029                     sdc_disk_initialize@buff:
  2264                           	callstack 0
  2265  000029                     ___ftmul@cntr:
  2266                           	callstack 0
  2267  000029                     disk_read@buff:
  2268                           	callstack 0
  2269  000029                     disk_write@buff:
  2270                           	callstack 0
  2271                           
  2272                           ; 2 bytes @ 0x28
  2273  000029                     	ds	1
  2274  00002A                     disk_initialize@pdrv:
  2275                           	callstack 0
  2276  00002A                     ___ftmul@sign:
  2277                           	callstack 0
  2278                           
  2279                           ; 1 bytes @ 0x29
  2280  00002A                     	ds	1
  2281  00002B                     ?___fttol:
  2282                           	callstack 0
  2283  00002B                     disk_initialize@stat:
  2284                           	callstack 0
  2285  00002B                     ___fttol@f1:
  2286                           	callstack 0
  2287  00002B                     disk_read@sector:
  2288                           	callstack 0
  2289  00002B                     disk_write@sector:
  2290                           	callstack 0
  2291  00002B                     escreve_inteiro_lcd@valor:
  2292                           	callstack 0
  2293                           
  2294                           ; 4 bytes @ 0x2A
  2295  00002B                     	ds	4
  2296  00002F                     ??___fttol:
  2297  00002F                     disk_read@count:
  2298                           	callstack 0
  2299  00002F                     disk_write@count:
  2300                           	callstack 0
  2301  00002F                     escreve_inteiro_lcd@texto:
  2302                           	callstack 0
  2303                           
  2304                           ; 7 bytes @ 0x2E
  2305  00002F                     	ds	1
  2306  000030                     ??_disk_read:
  2307  000030                     ??_disk_write:
  2308                           
  2309                           ; 1 bytes @ 0x2F
  2310  000030                     	ds	1
  2311  000031                     disk_read@pdrv:
  2312                           	callstack 0
  2313  000031                     disk_write@pdrv:
  2314                           	callstack 0
  2315                           
  2316                           ; 1 bytes @ 0x30
  2317  000031                     	ds	1
  2318  000032                     convert_to_int_point_long@j:
  2319                           	callstack 0
  2320  000032                     disk_read@result:
  2321                           	callstack 0
  2322  000032                     disk_write@result:
  2323                           	callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x31
  2326  000032                     	ds	1
  2327  000033                     convert_to_int_point_lat@j:
  2328                           	callstack 0
  2329  000033                     convert_to_int_point_long@i:
  2330                           	callstack 0
  2331                           
  2332                           ; 1 bytes @ 0x32
  2333  000033                     	ds	1
  2334  000034                     disk_read@res:
  2335                           	callstack 0
  2336  000034                     disk_write@res:
  2337                           	callstack 0
  2338  000034                     convert_to_int_point_lat@i:
  2339                           	callstack 0
  2340  000034                     ___fttol@sign1:
  2341                           	callstack 0
  2342                           
  2343                           ; 1 bytes @ 0x33
  2344  000034                     	ds	1
  2345  000035                     diferenca@index:
  2346                           	callstack 0
  2347  000035                     move_window@sector:
  2348                           	callstack 0
  2349  000035                     check_fs@sect:
  2350                           	callstack 0
  2351  000035                     ___fttol@lval:
  2352                           	callstack 0
  2353                           
  2354                           ; 4 bytes @ 0x34
  2355  000035                     	ds	1
  2356  000036                     ??_troca_de_tela:
  2357  000036                     diferenca@valor_lat:
  2358                           	callstack 0
  2359                           
  2360                           ; 4 bytes @ 0x35
  2361  000036                     	ds	2
  2362  000038                     get_fattime@f_time:
  2363                           	callstack 0
  2364                           
  2365                           ; 10 bytes @ 0x37
  2366  000038                     	ds	1
  2367  000039                     ??_move_window:
  2368  000039                     ___fttol@exp1:
  2369                           	callstack 0
  2370                           
  2371                           ; 1 bytes @ 0x38
  2372  000039                     	ds	1
  2373  00003A                     ??_verifica_dados_operacionais:
  2374  00003A                     diferenca@valor_long:
  2375                           	callstack 0
  2376                           
  2377                           ; 4 bytes @ 0x39
  2378  00003A                     	ds	1
  2379  00003B                     check_fs@fs:
  2380                           	callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x3A
  2383  00003B                     	ds	2
  2384  00003D                     auto_mount@path:
  2385                           	callstack 0
  2386                           
  2387                           ; 1 bytes @ 0x3C
  2388  00003D                     	ds	1
  2389  00003E                     auto_mount@chk_wp:
  2390                           	callstack 0
  2391  00003E                     armazena_ltlo@buffer:
  2392                           	callstack 0
  2393                           
  2394                           ; 1 bytes @ 0x3D
  2395  00003E                     	ds	1
  2396  00003F                     armazena_ltlo@index:
  2397                           	callstack 0
  2398                           
  2399                           ; 1 bytes @ 0x3E
  2400  00003F                     	ds	1
  2401  000040                     armazena_ltlo@j:
  2402                           	callstack 0
  2403                           
  2404                           ; 1 bytes @ 0x3F
  2405  000040                     	ds	1
  2406  000041                     armazena_ltlo@i:
  2407                           	callstack 0
  2408                           
  2409                           ; 1 bytes @ 0x40
  2410  000041                     	ds	1
  2411  000042                     
  2412                           ; 1 bytes @ 0x41
  2413  000042                     	ds	1
  2414  000043                     ??_verifica_fence:
  2415  000043                     move_window@n:
  2416                           	callstack 0
  2417                           
  2418                           ; 1 bytes @ 0x42
  2419  000043                     	ds	1
  2420  000044                     move_window@wsect:
  2421                           	callstack 0
  2422                           
  2423                           ; 4 bytes @ 0x43
  2424  000044                     	ds	4
  2425  000048                     move_window@fs:
  2426                           	callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x47
  2429  000048                     	ds	2
  2430  00004A                     ?_get_cluster:
  2431                           	callstack 0
  2432  00004A                     sync@fs:
  2433                           	callstack 0
  2434  00004A                     get_cluster@clust:
  2435                           	callstack 0
  2436                           
  2437                           ; 2 bytes @ 0x49
  2438  00004A                     	ds	2
  2439  00004C                     ??_fputs:
  2440  00004C                     next_dir_entry@dj:
  2441                           	callstack 0
  2442  00004C                     f_close@res:
  2443                           	callstack 0
  2444                           
  2445                           ; 1 bytes @ 0x4B
  2446  00004C                     	ds	1
  2447  00004D                     
  2448                           ; 1 bytes @ 0x4C
  2449 ;;
  2450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2451 ;;
  2452 ;; *************** function _main *****************
  2453 ;; Defined at:
  2454 ;;		line 224 in file "main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels required when called:   18
  2474 ;; This function calls:
  2475 ;;		_escalonador
  2476 ;;		_gps
  2477 ;;		_inicializa_tarefas
  2478 ;;		_inicializa_uart
  2479 ;;		_init_hardware
  2480 ;;		_init_lcd
  2481 ;;		_mensagem_inicial
  2482 ;; This function is called by:
  2483 ;;		Startup code after reset
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text0
  2488  005806                     __ptext0:
  2489                           	callstack 0
  2490  005806                     _main:
  2491                           	callstack 13
  2492                           
  2493                           ;main.c: 226: init_hardware();
  2494                           
  2495                           ;incstack = 0
  2496  005806  EC0B  F02E         	call	_init_hardware	;wreg free
  2497                           
  2498                           ;main.c: 227: T0CONbits.TMR0ON = 0;
  2499  00580A  9ED5               	bcf	213,7,c	;volatile
  2500                           
  2501                           ;main.c: 228: init_lcd();
  2502  00580C  EC3F  F023         	call	_init_lcd	;wreg free
  2503                           
  2504                           ;main.c: 229: mensagem_inicial();
  2505  005810  EC8E  F023         	call	_mensagem_inicial	;wreg free
  2506                           
  2507                           ;main.c: 230: inicializa_tarefas();
  2508  005814  EC99  F029         	call	_inicializa_tarefas	;wreg free
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;main.c: 231: inicializa_uart();
  2512  005818  EC22  F02D         	call	_inicializa_uart	;wreg free
  2513                           
  2514                           ;main.c: 233: T0CONbits.TMR0ON = 1;
  2515  00581C  8ED5               	bsf	213,7,c	;volatile
  2516  00581E                     l13753:
  2517                           
  2518                           ;main.c: 235: {;main.c: 237: if ((sinaliza_int_timer == 1) && (3))
  2519  00581E  0100               	movlb	0	; () banked
  2520  005820  05FC               	decf	_sinaliza_int_timer& (0+255),w,b
  2521  005822  A4D8               	btfss	status,2,c
  2522  005824  D004               	goto	l13759
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;main.c: 238: {;main.c: 239: sinaliza_int_timer = 0;
  2526  005826  0E00               	movlw	0
  2527  005828  6FFC               	movwf	_sinaliza_int_timer& (0+255),b
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;main.c: 240: escalonador();
  2531  00582A  EC48  F022         	call	_escalonador	;wreg free
  2532  00582E                     l13759:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 241: };main.c: 242: gps();
  2536  00582E  ECF1  F02D         	call	_gps	;wreg free
  2537  005832  D7F5               	goto	l13753
  2538  005834                     __end_of_main:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _mensagem_inicial *****************
  2542 ;; Defined at:
  2543 ;;		line 251 in file "main.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2548 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0
  2559 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2560 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2561 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2562 ;;Total ram usage:       36 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    5
  2565 ;; This function calls:
  2566 ;;		_escreve_cmd_lcd
  2567 ;;		_escreve_frase_ram_lcd
  2568 ;;		_posicao_cursor_lcd
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text1
  2575  00471C                     __ptext1:
  2576                           	callstack 0
  2577  00471C                     _mensagem_inicial:
  2578                           	callstack 25
  2579                           
  2580                           ;main.c: 253: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2581                           
  2582                           ;incstack = 0
  2583  00471C  0E12               	movlw	low mensagem_inicial@F3687
  2584  00471E  6EF6               	movwf	tblptrl,c
  2585  004720                     	if	1	;There is more than 1 active tblptr byte
  2586  004720  0E61               	movlw	high mensagem_inicial@F3687
  2587  004722  6EF7               	movwf	tblptrh,c
  2588  004724                     	endif
  2589  004724                     	if	1	;There are 3 active tblptr bytes
  2590  004724  0E00               	movlw	low (mensagem_inicial@F3687 shr (0+16))
  2591  004726  6EF8               	movwf	tblptru,c
  2592  004728                     	endif
  2593  004728  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2594  00472C  0E10               	movlw	16
  2595  00472E                     u16550:
  2596  00472E  0009               	tblrd		*+
  2597  004730  CFF5 FFDE          	movff	tablat,postinc2
  2598  004734  06E8               	decf	wreg,f,c
  2599  004736  E2FB               	bc	u16550
  2600                           
  2601                           ;main.c: 254: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2602  004738  0E01               	movlw	low mensagem_inicial@F3689
  2603  00473A  6EF6               	movwf	tblptrl,c
  2604  00473C                     	if	1	;There is more than 1 active tblptr byte
  2605  00473C  0E61               	movlw	high mensagem_inicial@F3689
  2606  00473E  6EF7               	movwf	tblptrh,c
  2607  004740                     	endif
  2608  004740                     	if	1	;There are 3 active tblptr bytes
  2609  004740  0E00               	movlw	low (mensagem_inicial@F3689 shr (0+16))
  2610  004742  6EF8               	movwf	tblptru,c
  2611  004744                     	endif
  2612  004744  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2613  004748  0E10               	movlw	16
  2614  00474A                     u16560:
  2615  00474A  0009               	tblrd		*+
  2616  00474C  CFF5 FFDE          	movff	tablat,postinc2
  2617  004750  06E8               	decf	wreg,f,c
  2618  004752  E2FB               	bc	u16560
  2619                           
  2620                           ;main.c: 256: posicao_cursor_lcd(1,0);
  2621  004754  0E00               	movlw	0
  2622  004756  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2623  004758  0E01               	movlw	1
  2624  00475A  EC64  F027         	call	_posicao_cursor_lcd
  2625                           
  2626                           ;main.c: 257: escreve_frase_ram_lcd(msg_linha_um);
  2627  00475E  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2628  004760  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2629  004762  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2630  004764  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  2631                           
  2632                           ;main.c: 259: posicao_cursor_lcd(2,0);
  2633  004768  0E00               	movlw	0
  2634  00476A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2635  00476C  0E02               	movlw	2
  2636  00476E  EC64  F027         	call	_posicao_cursor_lcd
  2637                           
  2638                           ;main.c: 260: escreve_frase_ram_lcd(msg_dois);
  2639  004772  0E23               	movlw	low mensagem_inicial@msg_dois
  2640  004774  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2641  004776  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2642  004778  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  2643                           
  2644                           ;main.c: 261: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2645  00477C  0E3D               	movlw	61
  2646  00477E  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2647  004780  0EE1               	movlw	225
  2648  004782  6E10               	movwf	??_mensagem_inicial^0,c
  2649  004784  0E40               	movlw	64
  2650  004786                     u16727:
  2651  004786  2EE8               	decfsz	wreg,f,c
  2652  004788  D7FE               	bra	u16727
  2653  00478A  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2654  00478C  D7FC               	bra	u16727
  2655  00478E  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2656  004790  D7FA               	bra	u16727
  2657                           
  2658                           ;main.c: 262: escreve_cmd_lcd(0b00000001);
  2659  004792  0E01               	movlw	1
  2660  004794  EC69  F024         	call	_escreve_cmd_lcd
  2661                           
  2662                           ;main.c: 263: posicao_cursor_lcd(1,0);
  2663  004798  0E00               	movlw	0
  2664  00479A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2665  00479C  0E01               	movlw	1
  2666  00479E  EC64  F027         	call	_posicao_cursor_lcd
  2667                           
  2668                           ;main.c: 264: escreve_frase_ram_lcd("AGUARDE...");
  2669  0047A2  0ED5               	movlw	low STR_19
  2670  0047A4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2671  0047A6  0E61               	movlw	high STR_19
  2672  0047A8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2673  0047AA  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  2674  0047AE  0012               	return		;funcret
  2675  0047B0                     __end_of_mensagem_inicial:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _init_lcd *****************
  2679 ;; Defined at:
  2680 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2696 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2697 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		_delay
  2703 ;;		_escreve_cmd_lcd
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text2
  2710  00467E                     __ptext2:
  2711                           	callstack 0
  2712  00467E                     _init_lcd:
  2713                           	callstack 26
  2714                           
  2715                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2716                           
  2717                           ;incstack = 0
  2718  00467E  9495               	bcf	149,2,c	;volatile
  2719                           
  2720                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2721  004680  9295               	bcf	149,1,c	;volatile
  2722                           
  2723                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2724  004682  9095               	bcf	149,0,c	;volatile
  2725                           
  2726                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2727  004684  9895               	bcf	149,4,c	;volatile
  2728                           
  2729                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2730  004686  9A95               	bcf	149,5,c	;volatile
  2731                           
  2732                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2733  004688  9C95               	bcf	149,6,c	;volatile
  2734                           
  2735                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2736  00468A  9E95               	bcf	149,7,c	;volatile
  2737                           
  2738                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2739  00468C  9483               	bcf	131,2,c	;volatile
  2740                           
  2741                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2742  00468E  9283               	bcf	131,1,c	;volatile
  2743                           
  2744                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2745  004690  9083               	bcf	131,0,c	;volatile
  2746                           
  2747                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2748  004692  9E83               	bcf	131,7,c	;volatile
  2749                           
  2750                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2751  004694  9C83               	bcf	131,6,c	;volatile
  2752                           
  2753                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2754  004696  8A83               	bsf	131,5,c	;volatile
  2755                           
  2756                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2757  004698  8883               	bsf	131,4,c	;volatile
  2758                           
  2759                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2760  00469A  0EEA               	movlw	234
  2761  00469C  6E0D               	movwf	??_init_lcd^0,c
  2762  00469E  0EC3               	movlw	195
  2763  0046A0                     u16737:
  2764  0046A0  2EE8               	decfsz	wreg,f,c
  2765  0046A2  D7FE               	bra	u16737
  2766  0046A4  2E0D               	decfsz	??_init_lcd^0,f,c
  2767  0046A6  D7FC               	bra	u16737
  2768  0046A8  F000               	nop	
  2769                           
  2770                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2771  0046AA  8083               	bsf	131,0,c	;volatile
  2772                           
  2773                           ;display_lcd.c: 108: delay();
  2774  0046AC  ECB8  F02D         	call	_delay	;wreg free
  2775                           
  2776                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2777  0046B0  9083               	bcf	131,0,c	;volatile
  2778                           
  2779                           ;display_lcd.c: 110: delay();
  2780  0046B2  ECB8  F02D         	call	_delay	;wreg free
  2781                           
  2782                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2783  0046B6  0E4E               	movlw	78
  2784  0046B8  6E0D               	movwf	??_init_lcd^0,c
  2785  0046BA  0EEB               	movlw	235
  2786  0046BC                     u16747:
  2787  0046BC  2EE8               	decfsz	wreg,f,c
  2788  0046BE  D7FE               	bra	u16747
  2789  0046C0  2E0D               	decfsz	??_init_lcd^0,f,c
  2790  0046C2  D7FC               	bra	u16747
  2791  0046C4  F000               	nop	
  2792                           
  2793                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2794  0046C6  8083               	bsf	131,0,c	;volatile
  2795                           
  2796                           ;display_lcd.c: 119: delay();
  2797  0046C8  ECB8  F02D         	call	_delay	;wreg free
  2798                           
  2799                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2800  0046CC  9083               	bcf	131,0,c	;volatile
  2801                           
  2802                           ;display_lcd.c: 121: delay();
  2803  0046CE  ECB8  F02D         	call	_delay	;wreg free
  2804                           
  2805                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2806  0046D2  0E4E               	movlw	78
  2807  0046D4  6E0D               	movwf	??_init_lcd^0,c
  2808  0046D6  0EEB               	movlw	235
  2809  0046D8                     u16757:
  2810  0046D8  2EE8               	decfsz	wreg,f,c
  2811  0046DA  D7FE               	bra	u16757
  2812  0046DC  2E0D               	decfsz	??_init_lcd^0,f,c
  2813  0046DE  D7FC               	bra	u16757
  2814  0046E0  F000               	nop	
  2815                           
  2816                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2817  0046E2  8083               	bsf	131,0,c	;volatile
  2818                           
  2819                           ;display_lcd.c: 130: delay();
  2820  0046E4  ECB8  F02D         	call	_delay	;wreg free
  2821                           
  2822                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2823  0046E8  9083               	bcf	131,0,c	;volatile
  2824                           
  2825                           ;display_lcd.c: 132: delay();
  2826  0046EA  ECB8  F02D         	call	_delay	;wreg free
  2827                           
  2828                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2829  0046EE  9E83               	bcf	131,7,c	;volatile
  2830                           
  2831                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2832  0046F0  9C83               	bcf	131,6,c	;volatile
  2833                           
  2834                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2835  0046F2  8A83               	bsf	131,5,c	;volatile
  2836                           
  2837                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2838  0046F4  9883               	bcf	131,4,c	;volatile
  2839                           
  2840                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2841  0046F6  8083               	bsf	131,0,c	;volatile
  2842                           
  2843                           ;display_lcd.c: 143: delay();
  2844  0046F8  ECB8  F02D         	call	_delay	;wreg free
  2845                           
  2846                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2847  0046FC  9083               	bcf	131,0,c	;volatile
  2848                           
  2849                           ;display_lcd.c: 145: delay();
  2850  0046FE  ECB8  F02D         	call	_delay	;wreg free
  2851                           
  2852                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2853  004702  0E28               	movlw	40
  2854  004704  EC69  F024         	call	_escreve_cmd_lcd
  2855                           
  2856                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2857  004708  0E06               	movlw	6
  2858  00470A  EC69  F024         	call	_escreve_cmd_lcd
  2859                           
  2860                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2861  00470E  0E0E               	movlw	14
  2862  004710  EC69  F024         	call	_escreve_cmd_lcd
  2863                           
  2864                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2865  004714  0E01               	movlw	1
  2866  004716  EC69  F024         	call	_escreve_cmd_lcd
  2867  00471A  0012               	return		;funcret
  2868  00471C                     __end_of_init_lcd:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _init_hardware *****************
  2872 ;; Defined at:
  2873 ;;		line 52 in file "bibliotecas/hardware.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    4
  2894 ;; This function calls:
  2895 ;;		_config_timer_dois
  2896 ;;		_config_timer_zero
  2897 ;;		_init_interrupt
  2898 ;;		_init_oscilador
  2899 ;;		_init_ports
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text3
  2906  005C16                     __ptext3:
  2907                           	callstack 0
  2908  005C16                     _init_hardware:
  2909                           	callstack 26
  2910                           
  2911                           ;hardware.c: 55: init_oscilador();
  2912                           
  2913                           ;incstack = 0
  2914  005C16  EC92  F02E         	call	_init_oscilador	;wreg free
  2915                           
  2916                           ;hardware.c: 58: init_ports();
  2917  005C1A  ECD6  F02D         	call	_init_ports	;wreg free
  2918                           
  2919                           ;hardware.c: 61: config_timer_zero();
  2920  005C1E  ECE4  F02D         	call	_config_timer_zero	;wreg free
  2921                           
  2922                           ;hardware.c: 64: config_timer_dois();
  2923  005C22  EC51  F02E         	call	_config_timer_dois	;wreg free
  2924                           
  2925                           ;hardware.c: 67: init_interrupt();
  2926  005C26  EC16  F02E         	call	_init_interrupt	;wreg free
  2927  005C2A  0012               	return		;funcret
  2928  005C2C                     __end_of_init_hardware:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _init_ports *****************
  2932 ;; Defined at:
  2933 ;;		line 151 in file "bibliotecas/hardware.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    2
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_init_hardware
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text4
  2962  005BAC                     __ptext4:
  2963                           	callstack 0
  2964  005BAC                     _init_ports:
  2965                           	callstack 27
  2966                           
  2967                           ;hardware.c: 153: ADCON1 = 0X0F;
  2968                           
  2969                           ;incstack = 0
  2970  005BAC  0E0F               	movlw	15
  2971  005BAE  6EC1               	movwf	193,c	;volatile
  2972                           
  2973                           ;hardware.c: 154: TRISB = 0b00000001;
  2974  005BB0  0E01               	movlw	1
  2975  005BB2  6E93               	movwf	147,c	;volatile
  2976                           
  2977                           ;hardware.c: 155: LATB = 0xFF;
  2978  005BB4  688A               	setf	138,c	;volatile
  2979                           
  2980                           ;hardware.c: 156: TRISD = 0x00;
  2981  005BB6  0E00               	movlw	0
  2982  005BB8  6E95               	movwf	149,c	;volatile
  2983                           
  2984                           ;hardware.c: 157: TRISA = 0b00000111;
  2985  005BBA  0E07               	movlw	7
  2986  005BBC  6E92               	movwf	146,c	;volatile
  2987                           
  2988                           ;hardware.c: 158: TRISC = 0x01111111;
  2989  005BBE  0E11               	movlw	17
  2990  005BC0  6E94               	movwf	148,c	;volatile
  2991                           
  2992                           ;hardware.c: 159: TRISE = 0b00000111;
  2993  005BC2  0E07               	movlw	7
  2994  005BC4  6E96               	movwf	150,c	;volatile
  2995  005BC6  0012               	return		;funcret
  2996  005BC8                     __end_of_init_ports:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _init_oscilador *****************
  3000 ;; Defined at:
  3001 ;;		line 169 in file "bibliotecas/hardware.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		None
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    2
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_init_hardware
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text5
  3030  005D24                     __ptext5:
  3031                           	callstack 0
  3032  005D24                     _init_oscilador:
  3033                           	callstack 27
  3034                           
  3035                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3036                           
  3037                           ;incstack = 0
  3038  005D24  88D3               	bsf	211,4,c	;volatile
  3039                           
  3040                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3041  005D26  8AD3               	bsf	211,5,c	;volatile
  3042                           
  3043                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3044  005D28  8CD3               	bsf	211,6,c	;volatile
  3045  005D2A  0012               	return		;funcret
  3046  005D2C                     __end_of_init_oscilador:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _init_interrupt *****************
  3050 ;; Defined at:
  3051 ;;		line 94 in file "bibliotecas/hardware.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    2
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_init_hardware
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text6
  3080  005C2C                     __ptext6:
  3081                           	callstack 0
  3082  005C2C                     _init_interrupt:
  3083                           	callstack 27
  3084                           
  3085                           ;hardware.c: 96: INTCON = 0b10110000;
  3086                           
  3087                           ;incstack = 0
  3088  005C2C  0EB0               	movlw	176
  3089  005C2E  6EF2               	movwf	242,c	;volatile
  3090                           
  3091                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3092  005C30  0E00               	movlw	0
  3093  005C32  6EF1               	movwf	241,c	;volatile
  3094                           
  3095                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3096  005C34  0E00               	movlw	0
  3097  005C36  6EF0               	movwf	240,c	;volatile
  3098                           
  3099                           ;hardware.c: 100: PIE1 = 0b00101000;
  3100  005C38  0E28               	movlw	40
  3101  005C3A  6E9D               	movwf	157,c	;volatile
  3102  005C3C  0012               	return		;funcret
  3103  005C3E                     __end_of_init_interrupt:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _config_timer_zero *****************
  3107 ;; Defined at:
  3108 ;;		line 79 in file "bibliotecas/hardware.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    3
  3129 ;; This function calls:
  3130 ;;		_write_timer_zero
  3131 ;; This function is called by:
  3132 ;;		_init_hardware
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text7
  3137  005BC8                     __ptext7:
  3138                           	callstack 0
  3139  005BC8                     _config_timer_zero:
  3140                           	callstack 26
  3141                           
  3142                           ;hardware.c: 81: T0CON = 0b11000101;
  3143                           
  3144                           ;incstack = 0
  3145  005BC8  0EC5               	movlw	197
  3146  005BCA  6ED5               	movwf	213,c	;volatile
  3147                           
  3148                           ;hardware.c: 82: SPPCON = 0b00000000;
  3149  005BCC  0E00               	movlw	0
  3150  005BCE  6E65               	movwf	101,c	;volatile
  3151                           
  3152                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3153  005BD0  0E00               	movlw	0
  3154  005BD2  6E63               	movwf	99,c	;volatile
  3155                           
  3156                           ;hardware.c: 84: write_timer_zero(0x45);
  3157  005BD4  0E00               	movlw	0
  3158  005BD6  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3159  005BD8  0E45               	movlw	69
  3160  005BDA  6E0A               	movwf	write_timer_zero@timer0^0,c
  3161  005BDC  EC6A  F02E         	call	_write_timer_zero	;wreg free
  3162  005BE0  0012               	return		;funcret
  3163  005BE2                     __end_of_config_timer_zero:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _write_timer_zero *****************
  3167 ;; Defined at:
  3168 ;;		line 134 in file "bibliotecas/hardware.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  timer0          2    9[COMRAM] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		None
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         2       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    2
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_config_timer_zero
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text8
  3197  005CD4                     __ptext8:
  3198                           	callstack 0
  3199  005CD4                     _write_timer_zero:
  3200                           	callstack 26
  3201                           
  3202                           ;hardware.c: 142: TMR0 = timer0;
  3203                           
  3204                           ;incstack = 0
  3205  005CD4  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3206  005CD8  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3207  005CDC  0012               	return		;funcret
  3208  005CDE                     __end_of_write_timer_zero:
  3209                           	callstack 0
  3210                           
  3211 ;; *************** function _config_timer_dois *****************
  3212 ;; Defined at:
  3213 ;;		line 198 in file "bibliotecas/hardware.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    2
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_init_hardware
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text9
  3242  005CA2                     __ptext9:
  3243                           	callstack 0
  3244  005CA2                     _config_timer_dois:
  3245                           	callstack 27
  3246                           
  3247                           ;hardware.c: 200: T2CON = 0b00000100;
  3248                           
  3249                           ;incstack = 0
  3250  005CA2  0E04               	movlw	4
  3251  005CA4  6ECA               	movwf	202,c	;volatile
  3252                           
  3253                           ;hardware.c: 201: TMR2 = 0;
  3254  005CA6  0E00               	movlw	0
  3255  005CA8  6ECC               	movwf	204,c	;volatile
  3256                           
  3257                           ;hardware.c: 202: PR2 = 0x01;
  3258  005CAA  0E01               	movlw	1
  3259  005CAC  6ECB               	movwf	203,c	;volatile
  3260  005CAE  0012               	return		;funcret
  3261  005CB0                     __end_of_config_timer_dois:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _inicializa_tarefas *****************
  3265 ;; Defined at:
  3266 ;;		line 174 in file "main.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 3F/1
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    2
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text10
  3295  005332                     __ptext10:
  3296                           	callstack 0
  3297  005332                     _inicializa_tarefas:
  3298                           	callstack 28
  3299                           
  3300                           ;main.c: 177: p_tarefas[0] = verifica_dados_operacionais;
  3301                           
  3302                           ;incstack = 0
  3303  005332  0E86               	movlw	low _verifica_dados_operacionais
  3304  005334  0101               	movlb	1	; () banked
  3305  005336  6F30               	movwf	_p_tarefas& (0+255),b
  3306  005338  0E2F               	movlw	high _verifica_dados_operacionais
  3307  00533A  6F31               	movwf	(_p_tarefas+1)& (0+255),b
  3308                           
  3309                           ;main.c: 178: p_tarefas[1] = disparo_gravacao;
  3310  00533C  0E3C               	movlw	low _disparo_gravacao
  3311  00533E  6F32               	movwf	(_p_tarefas+2)& (0+255),b
  3312  005340  0E26               	movlw	high _disparo_gravacao
  3313  005342  6F33               	movwf	(_p_tarefas+3)& (0+255),b
  3314                           
  3315                           ;main.c: 179: p_tarefas[2] = troca_de_tela;
  3316  005344  0E5C               	movlw	low _troca_de_tela
  3317  005346  6F34               	movwf	(_p_tarefas+4)& (0+255),b
  3318  005348  0E21               	movlw	high _troca_de_tela
  3319  00534A  6F35               	movwf	(_p_tarefas+5)& (0+255),b
  3320                           
  3321                           ; BSR set to: 1
  3322                           ;main.c: 183: tempo_backup[0] = 500;
  3323  00534C  0E01               	movlw	1
  3324  00534E  6F2B               	movwf	(_tempo_backup+1)& (0+255),b
  3325  005350  0EF4               	movlw	244
  3326  005352  6F2A               	movwf	_tempo_backup& (0+255),b
  3327                           
  3328                           ; BSR set to: 1
  3329                           ;main.c: 184: tempo_backup[1] = 1000;
  3330  005354  0E03               	movlw	3
  3331  005356  6F2D               	movwf	(_tempo_backup+3)& (0+255),b
  3332  005358  0EE8               	movlw	232
  3333  00535A  6F2C               	movwf	(_tempo_backup+2)& (0+255),b
  3334                           
  3335                           ; BSR set to: 1
  3336                           ;main.c: 185: tempo_backup[2] = 5000;
  3337  00535C  0E13               	movlw	19
  3338  00535E  6F2F               	movwf	(_tempo_backup+5)& (0+255),b
  3339  005360  0E88               	movlw	136
  3340  005362  6F2E               	movwf	(_tempo_backup+4)& (0+255),b
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;main.c: 188: tempo_tarefa[0] = 500;
  3344  005364  0E01               	movlw	1
  3345  005366  6F25               	movwf	(_tempo_tarefa+1)& (0+255),b
  3346  005368  0EF4               	movlw	244
  3347  00536A  6F24               	movwf	_tempo_tarefa& (0+255),b
  3348                           
  3349                           ; BSR set to: 1
  3350                           ;main.c: 189: tempo_tarefa[1] = 1000;
  3351  00536C  0E03               	movlw	3
  3352  00536E  6F27               	movwf	(_tempo_tarefa+3)& (0+255),b
  3353  005370  0EE8               	movlw	232
  3354  005372  6F26               	movwf	(_tempo_tarefa+2)& (0+255),b
  3355                           
  3356                           ; BSR set to: 1
  3357                           ;main.c: 190: tempo_tarefa[2] = 5000;
  3358  005374  0E13               	movlw	19
  3359  005376  6F29               	movwf	(_tempo_tarefa+5)& (0+255),b
  3360  005378  0E88               	movlw	136
  3361  00537A  6F28               	movwf	(_tempo_tarefa+4)& (0+255),b
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;main.c: 192: tarefa_em_execucao = 0;
  3365  00537C  0E00               	movlw	0
  3366  00537E  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3367                           
  3368                           ; BSR set to: 1
  3369  005380  0012               	return		;funcret
  3370  005382                     __end_of_inicializa_tarefas:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _gps *****************
  3374 ;; Defined at:
  3375 ;;		line 117 in file "bibliotecas/GPS.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 3F/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    6
  3396 ;; This function calls:
  3397 ;;		_get_fix
  3398 ;;		_get_gpstime
  3399 ;;		_get_latitude
  3400 ;;		_get_longitude
  3401 ;;		_get_rawdate
  3402 ;;		_get_rawspeed
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text11
  3409  005BE2                     __ptext11:
  3410                           	callstack 0
  3411  005BE2                     _gps:
  3412                           	callstack 24
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;GPS.c: 120: get_gpstime();
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;incstack = 0
  3419  005BE2  EC74  F02C         	call	_get_gpstime	;wreg free
  3420                           
  3421                           ;GPS.c: 121: get_latitude();
  3422  005BE6  EC1A  F028         	call	_get_latitude	;wreg free
  3423                           
  3424                           ;GPS.c: 122: get_longitude();
  3425  005BEA  ECEE  F027         	call	_get_longitude	;wreg free
  3426                           
  3427                           ;GPS.c: 123: get_rawdate();
  3428  005BEE  EC1A  F02B         	call	_get_rawdate	;wreg free
  3429                           
  3430                           ;GPS.c: 124: get_rawspeed();
  3431  005BF2  ECFA  F02A         	call	_get_rawspeed	;wreg free
  3432                           
  3433                           ;GPS.c: 125: get_fix();
  3434  005BF6  ECF5  F028         	call	_get_fix	;wreg free
  3435  005BFA  0012               	return		;funcret
  3436  005BFC                     __end_of_gps:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _get_rawspeed *****************
  3440 ;; Defined at:
  3441 ;;		line 325 in file "bibliotecas/GPS.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  index           1   11[COMRAM] unsigned char 
  3446 ;;  index_speed     1   10[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 3F/1
  3453 ;;		On exit  : 3F/1
  3454 ;;		Unchanged: 3F/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:        3 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_gps
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text12
  3471  0055F4                     __ptext12:
  3472                           	callstack 0
  3473  0055F4                     _get_rawspeed:
  3474                           	callstack 27
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;GPS.c: 327: unsigned char index_speed, index;;GPS.c: 329: index_speed = 0;
  3478                           
  3479                           ;incstack = 0
  3480  0055F4  0E00               	movlw	0
  3481  0055F6  6E0B               	movwf	get_rawspeed@index_speed^0,c
  3482                           
  3483                           ;GPS.c: 331: for(index = 39; rmc_buffer[index] != ','; index++)
  3484  0055F8  0E27               	movlw	39
  3485  0055FA  6E0C               	movwf	get_rawspeed@index^0,c
  3486  0055FC  D010               	goto	l9573
  3487  0055FE                     l9567:
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;GPS.c: 332: {;GPS.c: 333: rawSpeed[index_speed] = rmc_buffer[index];
  3491  0055FE  0E50               	movlw	low _rmc_buffer
  3492  005600  240C               	addwf	get_rawspeed@index^0,w,c
  3493  005602  6ED9               	movwf	fsr2l,c
  3494  005604  6ADA               	clrf	fsr2h,c
  3495  005606  0E03               	movlw	high _rmc_buffer
  3496  005608  22DA               	addwfc	fsr2h,f,c
  3497  00560A  0E79               	movlw	low _rawSpeed
  3498  00560C  240B               	addwf	get_rawspeed@index_speed^0,w,c
  3499  00560E  6EE1               	movwf	fsr1l,c
  3500  005610  6AE2               	clrf	fsr1h,c
  3501  005612  0E02               	movlw	high _rawSpeed
  3502  005614  22E2               	addwfc	fsr1h,f,c
  3503  005616  CFDF FFE7          	movff	indf2,indf1
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;GPS.c: 334: index_speed++;
  3507  00561A  2A0B               	incf	get_rawspeed@index_speed^0,f,c
  3508                           
  3509                           ; BSR set to: 1
  3510  00561C  2A0C               	incf	get_rawspeed@index^0,f,c
  3511  00561E                     l9573:
  3512                           
  3513                           ; BSR set to: 1
  3514  00561E  0E50               	movlw	low _rmc_buffer
  3515  005620  240C               	addwf	get_rawspeed@index^0,w,c
  3516  005622  6ED9               	movwf	fsr2l,c
  3517  005624  6ADA               	clrf	fsr2h,c
  3518  005626  0E03               	movlw	high _rmc_buffer
  3519  005628  22DA               	addwfc	fsr2h,f,c
  3520  00562A  0E2C               	movlw	44
  3521  00562C  18DE               	xorwf	postinc2,w,c
  3522  00562E  B4D8               	btfsc	status,2,c
  3523  005630  0012               	return	
  3524  005632  D7E5               	goto	l9567
  3525  005634                     __end_of_get_rawspeed:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _get_rawdate *****************
  3529 ;; Defined at:
  3530 ;;		line 310 in file "bibliotecas/GPS.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  index           1   11[COMRAM] unsigned char 
  3535 ;;  index_date      1   10[COMRAM] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 3F/1
  3542 ;;		On exit  : 3F/1
  3543 ;;		Unchanged: 3F/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        3 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    2
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_gps
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text13
  3560  005634                     __ptext13:
  3561                           	callstack 0
  3562  005634                     _get_rawdate:
  3563                           	callstack 27
  3564                           
  3565                           ; BSR set to: 1
  3566                           ;GPS.c: 312: unsigned char index_date, index;;GPS.c: 314: index_date = 0;
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;incstack = 0
  3570  005634  0E00               	movlw	0
  3571  005636  6E0B               	movwf	get_rawdate@index_date^0,c
  3572                           
  3573                           ;GPS.c: 316: for(index = 46; rmc_buffer[index] != ','; index++)
  3574  005638  0E2E               	movlw	46
  3575  00563A  6E0C               	movwf	get_rawdate@index^0,c
  3576  00563C  D010               	goto	l9563
  3577  00563E                     l9557:
  3578                           
  3579                           ; BSR set to: 1
  3580                           ;GPS.c: 317: {;GPS.c: 318: rawDate[index_date] = rmc_buffer[index];
  3581  00563E  0E50               	movlw	low _rmc_buffer
  3582  005640  240C               	addwf	get_rawdate@index^0,w,c
  3583  005642  6ED9               	movwf	fsr2l,c
  3584  005644  6ADA               	clrf	fsr2h,c
  3585  005646  0E03               	movlw	high _rmc_buffer
  3586  005648  22DA               	addwfc	fsr2h,f,c
  3587  00564A  0EE2               	movlw	low _rawDate
  3588  00564C  240B               	addwf	get_rawdate@index_date^0,w,c
  3589  00564E  6EE1               	movwf	fsr1l,c
  3590  005650  6AE2               	clrf	fsr1h,c
  3591  005652  0E01               	movlw	high _rawDate
  3592  005654  22E2               	addwfc	fsr1h,f,c
  3593  005656  CFDF FFE7          	movff	indf2,indf1
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;GPS.c: 319: index_date++;
  3597  00565A  2A0B               	incf	get_rawdate@index_date^0,f,c
  3598                           
  3599                           ; BSR set to: 1
  3600  00565C  2A0C               	incf	get_rawdate@index^0,f,c
  3601  00565E                     l9563:
  3602                           
  3603                           ; BSR set to: 1
  3604  00565E  0E50               	movlw	low _rmc_buffer
  3605  005660  240C               	addwf	get_rawdate@index^0,w,c
  3606  005662  6ED9               	movwf	fsr2l,c
  3607  005664  6ADA               	clrf	fsr2h,c
  3608  005666  0E03               	movlw	high _rmc_buffer
  3609  005668  22DA               	addwfc	fsr2h,f,c
  3610  00566A  0E2C               	movlw	44
  3611  00566C  18DE               	xorwf	postinc2,w,c
  3612  00566E  B4D8               	btfsc	status,2,c
  3613  005670  0012               	return	
  3614  005672  D7E5               	goto	l9557
  3615  005674                     __end_of_get_rawdate:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _get_longitude *****************
  3619 ;; Defined at:
  3620 ;;		line 288 in file "bibliotecas/GPS.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  index           1   11[COMRAM] unsigned char 
  3625 ;;  index_long      1   10[COMRAM] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 3F/1
  3632 ;;		On exit  : 3F/1
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0
  3636 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3637 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3638 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3639 ;;Total ram usage:        3 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_gps
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text14
  3650  004FDC                     __ptext14:
  3651                           	callstack 0
  3652  004FDC                     _get_longitude:
  3653                           	callstack 27
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;GPS.c: 290: unsigned char index_long, index;;GPS.c: 292: index_long = 1;
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;incstack = 0
  3660  004FDC  0E01               	movlw	1
  3661  004FDE  6E0B               	movwf	get_longitude@index_long^0,c
  3662                           
  3663                           ;GPS.c: 294: for(index = 23; gga_buffer[index] != ','; index++)
  3664  004FE0  0E17               	movlw	23
  3665  004FE2  6E0C               	movwf	get_longitude@index^0,c
  3666  004FE4  D010               	goto	l9547
  3667  004FE6                     l9541:
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;GPS.c: 295: {;GPS.c: 296: rawLongitude[index_long] = gga_buffer[index];
  3671  004FE6  0E00               	movlw	low _gga_buffer
  3672  004FE8  240C               	addwf	get_longitude@index^0,w,c
  3673  004FEA  6ED9               	movwf	fsr2l,c
  3674  004FEC  6ADA               	clrf	fsr2h,c
  3675  004FEE  0E03               	movlw	high _gga_buffer
  3676  004FF0  22DA               	addwfc	fsr2h,f,c
  3677  004FF2  0E9D               	movlw	low _rawLongitude
  3678  004FF4  240B               	addwf	get_longitude@index_long^0,w,c
  3679  004FF6  6EE1               	movwf	fsr1l,c
  3680  004FF8  6AE2               	clrf	fsr1h,c
  3681  004FFA  0E01               	movlw	high _rawLongitude
  3682  004FFC  22E2               	addwfc	fsr1h,f,c
  3683  004FFE  CFDF FFE7          	movff	indf2,indf1
  3684                           
  3685                           ; BSR set to: 1
  3686                           ;GPS.c: 297: index_long++;
  3687  005002  2A0B               	incf	get_longitude@index_long^0,f,c
  3688                           
  3689                           ; BSR set to: 1
  3690  005004  2A0C               	incf	get_longitude@index^0,f,c
  3691  005006                     l9547:
  3692                           
  3693                           ; BSR set to: 1
  3694  005006  0E00               	movlw	low _gga_buffer
  3695  005008  240C               	addwf	get_longitude@index^0,w,c
  3696  00500A  6ED9               	movwf	fsr2l,c
  3697  00500C  6ADA               	clrf	fsr2h,c
  3698  00500E  0E03               	movlw	high _gga_buffer
  3699  005010  22DA               	addwfc	fsr2h,f,c
  3700  005012  0E2C               	movlw	44
  3701  005014  18DE               	xorwf	postinc2,w,c
  3702  005016  A4D8               	btfss	status,2,c
  3703  005018  D7E6               	goto	l9541
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;GPS.c: 298: };GPS.c: 299: if(gga_buffer[32] == 'E')
  3707  00501A  0E45               	movlw	69
  3708  00501C  0103               	movlb	3	; () banked
  3709  00501E  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  3710  005020  A4D8               	btfss	status,2,c
  3711  005022  D004               	goto	l9553
  3712                           
  3713                           ; BSR set to: 3
  3714                           ;GPS.c: 300: {;GPS.c: 301: rawLongitude[0] = '0';
  3715  005024  0E30               	movlw	48
  3716  005026  0101               	movlb	1	; () banked
  3717  005028  6F9D               	movwf	_rawLongitude& (0+255),b
  3718                           
  3719                           ;GPS.c: 302: }
  3720  00502A  0012               	return	
  3721  00502C                     l9553:
  3722                           
  3723                           ; BSR set to: 3
  3724                           ;GPS.c: 303: else;GPS.c: 304: {;GPS.c: 305: rawLongitude[0] = '-';
  3725  00502C  0E2D               	movlw	45
  3726  00502E  0101               	movlb	1	; () banked
  3727  005030  6F9D               	movwf	_rawLongitude& (0+255),b
  3728                           
  3729                           ; BSR set to: 1
  3730  005032  0012               	return		;funcret
  3731  005034                     __end_of_get_longitude:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _get_latitude *****************
  3735 ;; Defined at:
  3736 ;;		line 264 in file "bibliotecas/GPS.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  time_buffer    15    0        unsigned char [15]
  3741 ;;  index           1   11[COMRAM] unsigned char 
  3742 ;;  index_lat       1   10[COMRAM] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3747 ;; Tracked objects:
  3748 ;;		On entry : 3F/0
  3749 ;;		On exit  : 3F/1
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        3 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    2
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_gps
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text15
  3767  005034                     __ptext15:
  3768                           	callstack 0
  3769  005034                     _get_latitude:
  3770                           	callstack 27
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;GPS.c: 266: unsigned char index_lat, index;;GPS.c: 267: unsigned char time_buffer[15];;
      +                          GPS.c: 269: index_lat = 1;
  3774                           
  3775                           ; BSR set to: 1
  3776                           ;incstack = 0
  3777  005034  0E01               	movlw	1
  3778  005036  6E0B               	movwf	get_latitude@index_lat^0,c
  3779                           
  3780                           ;GPS.c: 271: for(index = 10; gga_buffer[index] != ','; index++)
  3781  005038  0E0A               	movlw	10
  3782  00503A  6E0C               	movwf	get_latitude@index^0,c
  3783  00503C  D010               	goto	l9531
  3784  00503E                     l9525:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;GPS.c: 272: {;GPS.c: 273: rawLatitude[index_lat] = gga_buffer[index];
  3788  00503E  0E00               	movlw	low _gga_buffer
  3789  005040  240C               	addwf	get_latitude@index^0,w,c
  3790  005042  6ED9               	movwf	fsr2l,c
  3791  005044  6ADA               	clrf	fsr2h,c
  3792  005046  0E03               	movlw	high _gga_buffer
  3793  005048  22DA               	addwfc	fsr2h,f,c
  3794  00504A  0EB6               	movlw	low _rawLatitude
  3795  00504C  240B               	addwf	get_latitude@index_lat^0,w,c
  3796  00504E  6EE1               	movwf	fsr1l,c
  3797  005050  6AE2               	clrf	fsr1h,c
  3798  005052  0E01               	movlw	high _rawLatitude
  3799  005054  22E2               	addwfc	fsr1h,f,c
  3800  005056  CFDF FFE7          	movff	indf2,indf1
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;GPS.c: 274: index_lat++;
  3804  00505A  2A0B               	incf	get_latitude@index_lat^0,f,c
  3805                           
  3806                           ; BSR set to: 0
  3807  00505C  2A0C               	incf	get_latitude@index^0,f,c
  3808  00505E                     l9531:
  3809                           
  3810                           ; BSR set to: 0
  3811  00505E  0E00               	movlw	low _gga_buffer
  3812  005060  240C               	addwf	get_latitude@index^0,w,c
  3813  005062  6ED9               	movwf	fsr2l,c
  3814  005064  6ADA               	clrf	fsr2h,c
  3815  005066  0E03               	movlw	high _gga_buffer
  3816  005068  22DA               	addwfc	fsr2h,f,c
  3817  00506A  0E2C               	movlw	44
  3818  00506C  18DE               	xorwf	postinc2,w,c
  3819  00506E  A4D8               	btfss	status,2,c
  3820  005070  D7E6               	goto	l9525
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;GPS.c: 275: };GPS.c: 276: if(gga_buffer[21] == 'N')
  3824  005072  0E4E               	movlw	78
  3825  005074  0103               	movlb	3	; () banked
  3826  005076  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  3827  005078  A4D8               	btfss	status,2,c
  3828  00507A  D004               	goto	l9537
  3829                           
  3830                           ; BSR set to: 3
  3831                           ;GPS.c: 277: {;GPS.c: 278: rawLatitude[0] = '0';
  3832  00507C  0E30               	movlw	48
  3833  00507E  0101               	movlb	1	; () banked
  3834  005080  6FB6               	movwf	_rawLatitude& (0+255),b
  3835                           
  3836                           ;GPS.c: 279: }
  3837  005082  0012               	return	
  3838  005084                     l9537:
  3839                           
  3840                           ; BSR set to: 3
  3841                           ;GPS.c: 280: else;GPS.c: 281: {;GPS.c: 282: rawLatitude[0] = '-';
  3842  005084  0E2D               	movlw	45
  3843  005086  0101               	movlb	1	; () banked
  3844  005088  6FB6               	movwf	_rawLatitude& (0+255),b
  3845                           
  3846                           ; BSR set to: 1
  3847  00508A  0012               	return		;funcret
  3848  00508C                     __end_of_get_latitude:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _get_gpstime *****************
  3852 ;; Defined at:
  3853 ;;		line 249 in file "bibliotecas/GPS.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  time_buffer    15    0        unsigned char [15]
  3858 ;;  index           1    9[COMRAM] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 3F/0
  3865 ;;		On exit  : 3F/0
  3866 ;;		Unchanged: 3F/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0
  3869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:        1 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_gps
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text16
  3883  0058E8                     __ptext16:
  3884                           	callstack 0
  3885  0058E8                     _get_gpstime:
  3886                           	callstack 27
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;GPS.c: 251: unsigned char index;;GPS.c: 252: unsigned char time_buffer[15];;GPS.c: 256:
      +                           for(index = 0; index<6; index++)
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;incstack = 0
  3893  0058E8  0E00               	movlw	0
  3894  0058EA  6E0A               	movwf	get_gpstime@index^0,c
  3895  0058EC                     l9517:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;GPS.c: 257: {;GPS.c: 258: rawTime[index] = gga_buffer[index];
  3899  0058EC  0E00               	movlw	low _gga_buffer
  3900  0058EE  240A               	addwf	get_gpstime@index^0,w,c
  3901  0058F0  6ED9               	movwf	fsr2l,c
  3902  0058F2  6ADA               	clrf	fsr2h,c
  3903  0058F4  0E03               	movlw	high _gga_buffer
  3904  0058F6  22DA               	addwfc	fsr2h,f,c
  3905  0058F8  0EC9               	movlw	low _rawTime
  3906  0058FA  240A               	addwf	get_gpstime@index^0,w,c
  3907  0058FC  6EE1               	movwf	fsr1l,c
  3908  0058FE  6AE2               	clrf	fsr1h,c
  3909  005900  0E01               	movlw	high _rawTime
  3910  005902  22E2               	addwfc	fsr1h,f,c
  3911  005904  CFDF FFE7          	movff	indf2,indf1
  3912                           
  3913                           ; BSR set to: 0
  3914  005908  2A0A               	incf	get_gpstime@index^0,f,c
  3915                           
  3916                           ; BSR set to: 0
  3917  00590A  0E05               	movlw	5
  3918  00590C  640A               	cpfsgt	get_gpstime@index^0,c
  3919  00590E  D7EE               	goto	l9517
  3920  005910  0012               	return	
  3921  005912                     __end_of_get_gpstime:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _get_fix *****************
  3925 ;; Defined at:
  3926 ;;		line 339 in file "bibliotecas/GPS.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  index           1   17[COMRAM] unsigned char 
  3931 ;;  index_fix       1   16[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 3F/1
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3944 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:        3 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    5
  3948 ;; This function calls:
  3949 ;;		_escreve_caractere_lcd
  3950 ;;		_posicao_cursor_lcd
  3951 ;; This function is called by:
  3952 ;;		_gps
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text17
  3957  0051EA                     __ptext17:
  3958                           	callstack 0
  3959  0051EA                     _get_fix:
  3960                           	callstack 24
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;GPS.c: 341: unsigned char index_fix, index;;GPS.c: 343: index_fix = 0;
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  0051EA  0E00               	movlw	0
  3968  0051EC  6E11               	movwf	get_fix@index_fix^0,c
  3969                           
  3970                           ;GPS.c: 345: for(index = 37; gga_buffer[index] != ','; index++)
  3971  0051EE  0E25               	movlw	37
  3972  0051F0  6E12               	movwf	get_fix@index^0,c
  3973  0051F2  D010               	goto	l13169
  3974  0051F4                     l13163:
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;GPS.c: 346: {;GPS.c: 347: rawFix[index_fix] = gga_buffer[index];
  3978  0051F4  0E00               	movlw	low _gga_buffer
  3979  0051F6  2412               	addwf	get_fix@index^0,w,c
  3980  0051F8  6ED9               	movwf	fsr2l,c
  3981  0051FA  6ADA               	clrf	fsr2h,c
  3982  0051FC  0E03               	movlw	high _gga_buffer
  3983  0051FE  22DA               	addwfc	fsr2h,f,c
  3984  005200  0EE8               	movlw	low _rawFix
  3985  005202  2411               	addwf	get_fix@index_fix^0,w,c
  3986  005204  6EE1               	movwf	fsr1l,c
  3987  005206  6AE2               	clrf	fsr1h,c
  3988  005208  0E01               	movlw	high _rawFix
  3989  00520A  22E2               	addwfc	fsr1h,f,c
  3990  00520C  CFDF FFE7          	movff	indf2,indf1
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;GPS.c: 348: index_fix++;
  3994  005210  2A11               	incf	get_fix@index_fix^0,f,c
  3995                           
  3996                           ; BSR set to: 1
  3997  005212  2A12               	incf	get_fix@index^0,f,c
  3998  005214                     l13169:
  3999                           
  4000                           ; BSR set to: 1
  4001  005214  0E00               	movlw	low _gga_buffer
  4002  005216  2412               	addwf	get_fix@index^0,w,c
  4003  005218  6ED9               	movwf	fsr2l,c
  4004  00521A  6ADA               	clrf	fsr2h,c
  4005  00521C  0E03               	movlw	high _gga_buffer
  4006  00521E  22DA               	addwfc	fsr2h,f,c
  4007  005220  0E2C               	movlw	44
  4008  005222  18DE               	xorwf	postinc2,w,c
  4009  005224  A4D8               	btfss	status,2,c
  4010  005226  D7E6               	goto	l13163
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;GPS.c: 349: };GPS.c: 350: posicao_cursor_lcd(2,0);
  4014  005228  0E00               	movlw	0
  4015  00522A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4016  00522C  0E02               	movlw	2
  4017  00522E  EC64  F027         	call	_posicao_cursor_lcd
  4018                           
  4019                           ;GPS.c: 351: escreve_caractere_lcd(rawFix[0]);
  4020  005232  0101               	movlb	1	; () banked
  4021  005234  51E8               	movf	_rawFix& (0+255),w,b
  4022  005236  EC28  F026         	call	_escreve_caractere_lcd
  4023  00523A  0012               	return		;funcret
  4024  00523C                     __end_of_get_fix:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _escalonador *****************
  4028 ;; Defined at:
  4029 ;;		line 203 in file "main.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  cont            1  134[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 3F/0
  4040 ;;		On exit  : 3F/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0
  4044 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4045 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4046 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4047 ;;Total ram usage:        3 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:   17
  4050 ;; This function calls:
  4051 ;;		_disparo_gravacao
  4052 ;;		_troca_de_tela
  4053 ;;		_verifica_dados_operacionais
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text18
  4060  004490                     __ptext18:
  4061                           	callstack 0
  4062  004490                     _escalonador:
  4063                           	callstack 13
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;main.c: 205: unsigned char cont;;main.c: 206: for(cont = 0; cont<3;cont++)
  4067                           
  4068                           ;incstack = 0
  4069  004490  0E00               	movlw	0
  4070  004492  6FE6               	movwf	escalonador@cont& (0+255),b
  4071  004494                     l13723:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;main.c: 207: {;main.c: 208: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  4075  004494  51E6               	movf	escalonador@cont& (0+255),w,b
  4076  004496  0D02               	mullw	2
  4077  004498  0E30               	movlw	low _p_tarefas
  4078  00449A  24F3               	addwf	243,w,c
  4079  00449C  6ED9               	movwf	fsr2l,c
  4080  00449E  0E01               	movlw	high _p_tarefas
  4081  0044A0  20F4               	addwfc	prodh,w,c
  4082  0044A2  6EDA               	movwf	fsr2h,c
  4083  0044A4  50DE               	movf	postinc2,w,c
  4084  0044A6  10DE               	iorwf	postinc2,w,c
  4085  0044A8  B4D8               	btfsc	status,2,c
  4086  0044AA  D042               	goto	l13735
  4087                           
  4088                           ; BSR set to: 0
  4089  0044AC  51E6               	movf	escalonador@cont& (0+255),w,b
  4090  0044AE  0D02               	mullw	2
  4091  0044B0  0E24               	movlw	low _tempo_tarefa
  4092  0044B2  24F3               	addwf	243,w,c
  4093  0044B4  6ED9               	movwf	fsr2l,c
  4094  0044B6  0E01               	movlw	high _tempo_tarefa
  4095  0044B8  20F4               	addwfc	prodh,w,c
  4096  0044BA  6EDA               	movwf	fsr2h,c
  4097  0044BC  50DE               	movf	postinc2,w,c
  4098  0044BE  10DE               	iorwf	postinc2,w,c
  4099  0044C0  A4D8               	btfss	status,2,c
  4100  0044C2  D036               	goto	l13735
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;main.c: 209: {;main.c: 210: tarefa_em_execucao = 1;
  4104  0044C4  0E01               	movlw	1
  4105  0044C6  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  4106                           
  4107                           ;main.c: 211: timeout_tarefa = 65000;
  4108  0044C8  0EFD               	movlw	253
  4109  0044CA  0101               	movlb	1	; () banked
  4110  0044CC  6F6D               	movwf	(_timeout_tarefa+1)& (0+255),b
  4111  0044CE  0EE8               	movlw	232
  4112  0044D0  6F6C               	movwf	_timeout_tarefa& (0+255),b
  4113                           
  4114                           ; BSR set to: 1
  4115                           ;main.c: 212: p_tarefas[cont]();
  4116  0044D2  0100               	movlb	0	; () banked
  4117  0044D4  51E6               	movf	escalonador@cont& (0+255),w,b
  4118  0044D6  0D02               	mullw	2
  4119  0044D8  0E30               	movlw	low _p_tarefas
  4120  0044DA  24F3               	addwf	243,w,c
  4121  0044DC  6ED9               	movwf	fsr2l,c
  4122  0044DE  0E01               	movlw	high _p_tarefas
  4123  0044E0  20F4               	addwfc	prodh,w,c
  4124  0044E2  6EDA               	movwf	fsr2h,c
  4125  0044E4  CFDE F0E4          	movff	postinc2,??_escalonador
  4126  0044E8  CFDD F0E5          	movff	postdec2,??_escalonador+1
  4127  0044EC  D801               	call	u16698
  4128  0044EE  D009               	goto	u16699
  4129  0044F0                     u16698:
  4130  0044F0  0005               	push	
  4131  0044F2  6EFA               	movwf	pclath,c
  4132  0044F4  51E4               	movf	??_escalonador& (0+255),w,b
  4133  0044F6  6EFD               	movwf	tosl,c
  4134  0044F8  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  4135  0044FA  6EFE               	movwf	tosh,c
  4136  0044FC  6AFF               	clrf	tosu,c
  4137  0044FE  50FA               	movf	pclath,w,c
  4138  004500  0012               	return		;indir
  4139  004502                     u16699:
  4140                           
  4141                           ;main.c: 213: tarefa_em_execucao = 0;
  4142  004502  0E00               	movlw	0
  4143  004504  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  4144                           
  4145                           ;main.c: 214: tempo_tarefa[cont] = tempo_backup[cont];
  4146  004506  0100               	movlb	0	; () banked
  4147  004508  51E6               	movf	escalonador@cont& (0+255),w,b
  4148  00450A  0D02               	mullw	2
  4149  00450C  0E2A               	movlw	low _tempo_backup
  4150  00450E  24F3               	addwf	243,w,c
  4151  004510  6ED9               	movwf	fsr2l,c
  4152  004512  0E01               	movlw	high _tempo_backup
  4153  004514  20F4               	addwfc	prodh,w,c
  4154  004516  6EDA               	movwf	fsr2h,c
  4155  004518  51E6               	movf	escalonador@cont& (0+255),w,b
  4156  00451A  0D02               	mullw	2
  4157  00451C  0E24               	movlw	low _tempo_tarefa
  4158  00451E  24F3               	addwf	243,w,c
  4159  004520  6EE1               	movwf	fsr1l,c
  4160  004522  0E01               	movlw	high _tempo_tarefa
  4161  004524  20F4               	addwfc	prodh,w,c
  4162  004526  6EE2               	movwf	fsr1h,c
  4163  004528  CFDE FFE6          	movff	postinc2,postinc1
  4164  00452C  CFDD FFE5          	movff	postdec2,postdec1
  4165  004530                     l13735:
  4166                           
  4167                           ; BSR set to: 0
  4168  004530  2BE6               	incf	escalonador@cont& (0+255),f,b
  4169                           
  4170                           ; BSR set to: 0
  4171  004532  0E02               	movlw	2
  4172  004534  65E6               	cpfsgt	escalonador@cont& (0+255),b
  4173  004536  D7AE               	goto	l13723
  4174  004538  0012               	return	
  4175  00453A                     __end_of_escalonador:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _troca_de_tela *****************
  4179 ;; Defined at:
  4180 ;;		line 413 in file "main.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 3F/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4198 ;;Total ram usage:        1 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    6
  4201 ;; This function calls:
  4202 ;;		_escreve_cmd_lcd
  4203 ;;		_escreve_frase_ram_lcd
  4204 ;;		_escreve_inteiro_lcd
  4205 ;;		_fix
  4206 ;;		_mostra_dados_display
  4207 ;;		_posicao_cursor_lcd
  4208 ;;		_recebe_dado_gps
  4209 ;; This function is called by:
  4210 ;;		_inicializa_tarefas
  4211 ;;		_escalonador
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text19
  4216  00215C                     __ptext19:
  4217                           	callstack 0
  4218  00215C                     _troca_de_tela:
  4219                           	callstack 23
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;main.c: 415: static unsigned char state = 0;;main.c: 416: static unsigned char last_sta
      +                          te = 0;;main.c: 418: if(!PORTEbits.RE0 || (state == 1 ))
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;incstack = 0
  4226  00215C  A084               	btfss	132,0,c	;volatile
  4227  00215E  D003               	goto	u16190
  4228                           
  4229                           ; BSR set to: 0
  4230  002160  0450               	decf	troca_de_tela@state^0,w,c
  4231  002162  A4D8               	btfss	status,2,c
  4232  002164  D0D9               	goto	l13335
  4233  002166                     u16190:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;main.c: 419: {;main.c: 421: if(!time_atualizacao)
  4237  002166  0101               	movlb	1	; () banked
  4238  002168  5166               	movf	_time_atualizacao& (0+255),w,b
  4239  00216A  1167               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  4240  00216C  A4D8               	btfss	status,2,c
  4241  00216E  D05C               	goto	l13295
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;main.c: 422: {;main.c: 423: if(!fence_flag[2].point)
  4245  002170  B152               	btfsc	(_fence_flag+2)& (0+255),0,b
  4246  002172  D00C               	goto	l13275
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;main.c: 424: {;main.c: 425: posicao_cursor_lcd(1,8);
  4250  002174  0E08               	movlw	8
  4251  002176  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4252  002178  0E01               	movlw	1
  4253  00217A  EC64  F027         	call	_posicao_cursor_lcd
  4254                           
  4255                           ;main.c: 426: escreve_frase_ram_lcd("DENTRO");
  4256  00217E  0E51               	movlw	low STR_21
  4257  002180  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4258  002182  0E62               	movlw	high STR_21
  4259  002184  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4260  002186  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4261                           
  4262                           ;main.c: 427: }
  4263  00218A  D03C               	goto	l13289
  4264  00218C                     l13275:
  4265                           
  4266                           ; BSR set to: 1
  4267                           ;main.c: 428: else;main.c: 429: {;main.c: 430: posicao_cursor_lcd(1,8);
  4268  00218C  0E08               	movlw	8
  4269  00218E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4270  002190  0E01               	movlw	1
  4271  002192  EC64  F027         	call	_posicao_cursor_lcd
  4272                           
  4273                           ;main.c: 431: escreve_frase_ram_lcd("FORA");
  4274  002196  0E63               	movlw	low STR_23
  4275  002198  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4276  00219A  0E62               	movlw	high STR_23
  4277  00219C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4278  00219E  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4279                           
  4280                           ;main.c: 432: posicao_cursor_lcd(1,13);
  4281  0021A2  0E0D               	movlw	13
  4282  0021A4  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4283  0021A6  0E01               	movlw	1
  4284  0021A8  EC64  F027         	call	_posicao_cursor_lcd
  4285                           
  4286                           ;main.c: 433: escreve_inteiro_lcd(fence_flag[0].point);
  4287  0021AC  0101               	movlb	1	; () banked
  4288  0021AE  A150               	btfss	_fence_flag& (0+255),0,b
  4289  0021B0  D003               	goto	u16220
  4290  0021B2  6A36               	clrf	??_troca_de_tela^0,c
  4291  0021B4  2A36               	incf	??_troca_de_tela^0,f,c
  4292  0021B6  D001               	goto	u16228
  4293  0021B8                     u16220:
  4294  0021B8  6A36               	clrf	??_troca_de_tela^0,c
  4295  0021BA                     u16228:
  4296  0021BA  5036               	movf	??_troca_de_tela^0,w,c
  4297  0021BC  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  4298  0021BE  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  4299  0021C0  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  4300  0021C2  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  4301  0021C4  EC5A  F02B         	call	_escreve_inteiro_lcd	;wreg free
  4302                           
  4303                           ;main.c: 434: posicao_cursor_lcd(1,14);
  4304  0021C8  0E0E               	movlw	14
  4305  0021CA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4306  0021CC  0E01               	movlw	1
  4307  0021CE  EC64  F027         	call	_posicao_cursor_lcd
  4308                           
  4309                           ;main.c: 435: escreve_frase_ram_lcd("|");
  4310  0021D2  0E7C               	movlw	low STR_24
  4311  0021D4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4312  0021D6  0E62               	movlw	high STR_24
  4313  0021D8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4314  0021DA  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4315                           
  4316                           ;main.c: 436: posicao_cursor_lcd(1,15);
  4317  0021DE  0E0F               	movlw	15
  4318  0021E0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4319  0021E2  0E01               	movlw	1
  4320  0021E4  EC64  F027         	call	_posicao_cursor_lcd
  4321                           
  4322                           ;main.c: 437: escreve_inteiro_lcd(fence_flag[1].point);
  4323  0021E8  0101               	movlb	1	; () banked
  4324  0021EA  A151               	btfss	(_fence_flag+1)& (0+255),0,b
  4325  0021EC  D003               	goto	u16230
  4326  0021EE  6A36               	clrf	??_troca_de_tela^0,c
  4327  0021F0  2A36               	incf	??_troca_de_tela^0,f,c
  4328  0021F2  D001               	goto	u16238
  4329  0021F4                     u16230:
  4330  0021F4  6A36               	clrf	??_troca_de_tela^0,c
  4331  0021F6                     u16238:
  4332  0021F6  5036               	movf	??_troca_de_tela^0,w,c
  4333  0021F8  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  4334  0021FA  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  4335  0021FC  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  4336  0021FE  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  4337  002200  EC5A  F02B         	call	_escreve_inteiro_lcd	;wreg free
  4338  002204                     l13289:
  4339                           
  4340                           ;main.c: 438: };main.c: 440: posicao_cursor_lcd(2,8);
  4341  002204  0E08               	movlw	8
  4342  002206  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4343  002208  0E02               	movlw	2
  4344  00220A  EC64  F027         	call	_posicao_cursor_lcd
  4345                           
  4346                           ;main.c: 441: escreve_frase_ram_lcd(fix());
  4347  00220E  EC88  F02E         	call	_fix	;wreg free
  4348  002212  C00A  F00D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  4349  002216  C00B  F00E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  4350  00221A  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4351                           
  4352                           ;main.c: 442: time_atualizacao = 10000;
  4353  00221E  0E27               	movlw	39
  4354  002220  0101               	movlb	1	; () banked
  4355  002222  6F67               	movwf	(_time_atualizacao+1)& (0+255),b
  4356  002224  0E10               	movlw	16
  4357  002226  6F66               	movwf	_time_atualizacao& (0+255),b
  4358  002228                     l13295:
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;main.c: 443: };main.c: 445: if(last_state != 1)
  4362  002228  044F               	decf	troca_de_tela@last_state^0,w,c
  4363  00222A  B4D8               	btfsc	status,2,c
  4364  00222C  D073               	goto	l13333
  4365                           
  4366                           ; BSR set to: 1
  4367                           ;main.c: 446: {;main.c: 447: state = 1;
  4368  00222E  0E01               	movlw	1
  4369  002230  6E50               	movwf	troca_de_tela@state^0,c
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;main.c: 448: escreve_cmd_lcd(0b00000001);
  4373  002232  0E01               	movlw	1
  4374  002234  EC69  F024         	call	_escreve_cmd_lcd
  4375                           
  4376                           ;main.c: 449: posicao_cursor_lcd(1,0);
  4377  002238  0E00               	movlw	0
  4378  00223A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4379  00223C  0E01               	movlw	1
  4380  00223E  EC64  F027         	call	_posicao_cursor_lcd
  4381                           
  4382                           ;main.c: 450: escreve_frase_ram_lcd("FENCE:");
  4383  002242  0E4A               	movlw	low STR_25
  4384  002244  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4385  002246  0E62               	movlw	high STR_25
  4386  002248  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4387  00224A  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4388                           
  4389                           ;main.c: 452: if(!fence_flag[2].point)
  4390  00224E  0101               	movlb	1	; () banked
  4391  002250  B152               	btfsc	(_fence_flag+2)& (0+255),0,b
  4392  002252  D00C               	goto	l13311
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;main.c: 453: {;main.c: 454: posicao_cursor_lcd(1,8);
  4396  002254  0E08               	movlw	8
  4397  002256  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4398  002258  0E01               	movlw	1
  4399  00225A  EC64  F027         	call	_posicao_cursor_lcd
  4400                           
  4401                           ;main.c: 455: escreve_frase_ram_lcd("DENTRO");
  4402  00225E  0E51               	movlw	low STR_21
  4403  002260  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4404  002262  0E62               	movlw	high STR_21
  4405  002264  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4406  002266  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4407                           
  4408                           ;main.c: 456: }
  4409  00226A  D03C               	goto	l13325
  4410  00226C                     l13311:
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;main.c: 457: else;main.c: 458: {;main.c: 459: posicao_cursor_lcd(1,8);
  4414  00226C  0E08               	movlw	8
  4415  00226E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4416  002270  0E01               	movlw	1
  4417  002272  EC64  F027         	call	_posicao_cursor_lcd
  4418                           
  4419                           ;main.c: 460: escreve_frase_ram_lcd("FORA");
  4420  002276  0E63               	movlw	low STR_23
  4421  002278  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4422  00227A  0E62               	movlw	high STR_23
  4423  00227C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4424  00227E  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4425                           
  4426                           ;main.c: 461: posicao_cursor_lcd(1,13);
  4427  002282  0E0D               	movlw	13
  4428  002284  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4429  002286  0E01               	movlw	1
  4430  002288  EC64  F027         	call	_posicao_cursor_lcd
  4431                           
  4432                           ;main.c: 462: escreve_inteiro_lcd(fence_flag[0].point);
  4433  00228C  0101               	movlb	1	; () banked
  4434  00228E  A150               	btfss	_fence_flag& (0+255),0,b
  4435  002290  D003               	goto	u16260
  4436  002292  6A36               	clrf	??_troca_de_tela^0,c
  4437  002294  2A36               	incf	??_troca_de_tela^0,f,c
  4438  002296  D001               	goto	u16268
  4439  002298                     u16260:
  4440  002298  6A36               	clrf	??_troca_de_tela^0,c
  4441  00229A                     u16268:
  4442  00229A  5036               	movf	??_troca_de_tela^0,w,c
  4443  00229C  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  4444  00229E  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  4445  0022A0  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  4446  0022A2  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  4447  0022A4  EC5A  F02B         	call	_escreve_inteiro_lcd	;wreg free
  4448                           
  4449                           ;main.c: 463: posicao_cursor_lcd(1,14);
  4450  0022A8  0E0E               	movlw	14
  4451  0022AA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4452  0022AC  0E01               	movlw	1
  4453  0022AE  EC64  F027         	call	_posicao_cursor_lcd
  4454                           
  4455                           ;main.c: 464: escreve_frase_ram_lcd("|");
  4456  0022B2  0E7C               	movlw	low STR_24
  4457  0022B4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4458  0022B6  0E62               	movlw	high STR_24
  4459  0022B8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4460  0022BA  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4461                           
  4462                           ;main.c: 465: posicao_cursor_lcd(1,15);
  4463  0022BE  0E0F               	movlw	15
  4464  0022C0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4465  0022C2  0E01               	movlw	1
  4466  0022C4  EC64  F027         	call	_posicao_cursor_lcd
  4467                           
  4468                           ;main.c: 466: escreve_inteiro_lcd(fence_flag[1].point);
  4469  0022C8  0101               	movlb	1	; () banked
  4470  0022CA  A151               	btfss	(_fence_flag+1)& (0+255),0,b
  4471  0022CC  D003               	goto	u16270
  4472  0022CE  6A36               	clrf	??_troca_de_tela^0,c
  4473  0022D0  2A36               	incf	??_troca_de_tela^0,f,c
  4474  0022D2  D001               	goto	u16278
  4475  0022D4                     u16270:
  4476  0022D4  6A36               	clrf	??_troca_de_tela^0,c
  4477  0022D6                     u16278:
  4478  0022D6  5036               	movf	??_troca_de_tela^0,w,c
  4479  0022D8  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  4480  0022DA  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  4481  0022DC  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  4482  0022DE  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  4483  0022E0  EC5A  F02B         	call	_escreve_inteiro_lcd	;wreg free
  4484  0022E4                     l13325:
  4485                           
  4486                           ;main.c: 467: };main.c: 469: posicao_cursor_lcd(2,0);
  4487  0022E4  0E00               	movlw	0
  4488  0022E6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4489  0022E8  0E02               	movlw	2
  4490  0022EA  EC64  F027         	call	_posicao_cursor_lcd
  4491                           
  4492                           ;main.c: 470: escreve_frase_ram_lcd("FIX:");
  4493  0022EE  0E5E               	movlw	low STR_29
  4494  0022F0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4495  0022F2  0E62               	movlw	high STR_29
  4496  0022F4  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4497  0022F6  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4498                           
  4499                           ;main.c: 471: posicao_cursor_lcd(2,8);
  4500  0022FA  0E08               	movlw	8
  4501  0022FC  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4502  0022FE  0E02               	movlw	2
  4503  002300  EC64  F027         	call	_posicao_cursor_lcd
  4504                           
  4505                           ;main.c: 472: escreve_frase_ram_lcd(fix());
  4506  002304  EC88  F02E         	call	_fix	;wreg free
  4507  002308  C00A  F00D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  4508  00230C  C00B  F00E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  4509  002310  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4510  002314                     l13333:
  4511                           
  4512                           ;main.c: 473: };main.c: 474: last_state = 1;
  4513  002314  0E01               	movlw	1
  4514  002316  6E4F               	movwf	troca_de_tela@last_state^0,c
  4515  002318                     l13335:
  4516                           
  4517                           ;main.c: 476: };main.c: 486: if(!PORTEbits.RE1 || (state == 2))
  4518  002318  A284               	btfss	132,1,c	;volatile
  4519  00231A  D004               	goto	u16290
  4520  00231C  0E02               	movlw	2
  4521  00231E  1850               	xorwf	troca_de_tela@state^0,w,c
  4522  002320  A4D8               	btfss	status,2,c
  4523  002322  D033               	goto	l13367
  4524  002324                     u16290:
  4525                           
  4526                           ;main.c: 487: {;main.c: 488: if(!time_atualizacao)
  4527  002324  0101               	movlb	1	; () banked
  4528  002326  5166               	movf	_time_atualizacao& (0+255),w,b
  4529  002328  1167               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  4530  00232A  A4D8               	btfss	status,2,c
  4531  00232C  D009               	goto	l13347
  4532                           
  4533                           ; BSR set to: 1
  4534                           ;main.c: 489: {;main.c: 490: recebe_dado_gps();
  4535  00232E  EC88  F02D         	call	_recebe_dado_gps	;wreg free
  4536                           
  4537                           ;main.c: 491: mostra_dados_display();
  4538  002332  EC31  F02C         	call	_mostra_dados_display	;wreg free
  4539                           
  4540                           ;main.c: 492: time_atualizacao = 2000;
  4541  002336  0E07               	movlw	7
  4542  002338  0101               	movlb	1	; () banked
  4543  00233A  6F67               	movwf	(_time_atualizacao+1)& (0+255),b
  4544  00233C  0ED0               	movlw	208
  4545  00233E  6F66               	movwf	_time_atualizacao& (0+255),b
  4546  002340                     l13347:
  4547                           
  4548                           ; BSR set to: 1
  4549                           ;main.c: 493: };main.c: 496: if(last_state != 2)
  4550  002340  0E02               	movlw	2
  4551  002342  184F               	xorwf	troca_de_tela@last_state^0,w,c
  4552  002344  B4D8               	btfsc	status,2,c
  4553  002346  D01F               	goto	l13365
  4554                           
  4555                           ; BSR set to: 1
  4556                           ;main.c: 497: {;main.c: 498: state = 2;
  4557  002348  0E02               	movlw	2
  4558  00234A  6E50               	movwf	troca_de_tela@state^0,c
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;main.c: 499: escreve_cmd_lcd(0b00000001);
  4562  00234C  0E01               	movlw	1
  4563  00234E  EC69  F024         	call	_escreve_cmd_lcd
  4564                           
  4565                           ;main.c: 500: posicao_cursor_lcd(1,0);
  4566  002352  0E00               	movlw	0
  4567  002354  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4568  002356  0E01               	movlw	1
  4569  002358  EC64  F027         	call	_posicao_cursor_lcd
  4570                           
  4571                           ;main.c: 501: escreve_frase_ram_lcd("lt:");
  4572  00235C  0E71               	movlw	low STR_30
  4573  00235E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4574  002360  0E62               	movlw	high STR_30
  4575  002362  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4576  002364  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4577                           
  4578                           ;main.c: 502: posicao_cursor_lcd(2,0);
  4579  002368  0E00               	movlw	0
  4580  00236A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4581  00236C  0E02               	movlw	2
  4582  00236E  EC64  F027         	call	_posicao_cursor_lcd
  4583                           
  4584                           ;main.c: 503: escreve_frase_ram_lcd("lo:");
  4585  002372  0E6D               	movlw	low STR_31
  4586  002374  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4587  002376  0E62               	movlw	high STR_31
  4588  002378  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4589  00237A  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4590                           
  4591                           ;main.c: 504: recebe_dado_gps();
  4592  00237E  EC88  F02D         	call	_recebe_dado_gps	;wreg free
  4593                           
  4594                           ;main.c: 505: mostra_dados_display();
  4595  002382  EC31  F02C         	call	_mostra_dados_display	;wreg free
  4596  002386                     l13365:
  4597                           
  4598                           ;main.c: 506: };main.c: 507: last_state = 2;
  4599  002386  0E02               	movlw	2
  4600  002388  6E4F               	movwf	troca_de_tela@last_state^0,c
  4601  00238A                     l13367:
  4602                           
  4603                           ;main.c: 508: };main.c: 513: if(!state)
  4604  00238A  5050               	movf	troca_de_tela@state^0,w,c
  4605  00238C  A4D8               	btfss	status,2,c
  4606  00238E  0012               	return	
  4607                           
  4608                           ;main.c: 514: {;main.c: 515: if(last_state != 4)
  4609  002390  0E04               	movlw	4
  4610  002392  184F               	xorwf	troca_de_tela@last_state^0,w,c
  4611  002394  B4D8               	btfsc	status,2,c
  4612  002396  D019               	goto	l13377
  4613                           
  4614                           ;main.c: 516: {;main.c: 517: escreve_cmd_lcd(0b00000001);
  4615  002398  0E01               	movlw	1
  4616  00239A  EC69  F024         	call	_escreve_cmd_lcd
  4617                           
  4618                           ;main.c: 518: posicao_cursor_lcd(1,0);
  4619  00239E  0E00               	movlw	0
  4620  0023A0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4621  0023A2  0E01               	movlw	1
  4622  0023A4  EC64  F027         	call	_posicao_cursor_lcd
  4623                           
  4624                           ;main.c: 519: escreve_frase_ram_lcd("B1:FENCE");
  4625  0023A8  0E29               	movlw	low STR_32
  4626  0023AA  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4627  0023AC  0E62               	movlw	high STR_32
  4628  0023AE  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4629  0023B0  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4630                           
  4631                           ;main.c: 520: posicao_cursor_lcd(2,0);
  4632  0023B4  0E00               	movlw	0
  4633  0023B6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4634  0023B8  0E02               	movlw	2
  4635  0023BA  EC64  F027         	call	_posicao_cursor_lcd
  4636                           
  4637                           ;main.c: 521: escreve_frase_ram_lcd("B2:LTLO");
  4638  0023BE  0E3B               	movlw	low STR_33
  4639  0023C0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  4640  0023C2  0E62               	movlw	high STR_33
  4641  0023C4  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  4642  0023C6  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4643  0023CA                     l13377:
  4644                           
  4645                           ;main.c: 523: };main.c: 524: last_state = 4;
  4646  0023CA  0E04               	movlw	4
  4647  0023CC  6E4F               	movwf	troca_de_tela@last_state^0,c
  4648  0023CE  0012               	return		;funcret
  4649  0023D0                     __end_of_troca_de_tela:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _disparo_gravacao *****************
  4653 ;; Defined at:
  4654 ;;		line 350 in file "main.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4659 ;;  index_max       2   16[BANK2 ] unsigned int 
  4660 ;;  v_max           2   14[BANK2 ] unsigned int 
  4661 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4662 ;;		 -> rawFix(2), 
  4663 ;;  i               1   18[BANK2 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 3F/0
  4670 ;;		On exit  : 3F/1
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4675 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4676 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4677 ;;Total ram usage:       24 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:   16
  4680 ;; This function calls:
  4681 ;;		___wmul
  4682 ;;		_atoi
  4683 ;;		_dados_gps_to_sd
  4684 ;;		_escreve_inteiro_lcd
  4685 ;;		_fix
  4686 ;;		_grava_sd
  4687 ;;		_itoa
  4688 ;;		_monta_sd
  4689 ;;		_posicao_cursor_lcd
  4690 ;;		_recebe_dado_gps
  4691 ;;		_verifica_fence
  4692 ;; This function is called by:
  4693 ;;		_inicializa_tarefas
  4694 ;;		_escalonador
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text20
  4699  00263C                     __ptext20:
  4700                           	callstack 0
  4701  00263C                     _disparo_gravacao:
  4702                           	callstack 13
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;main.c: 355: unsigned char *velocidade[6];;main.c: 357: v_max = atoi(dados_vel[0]);
  4706                           
  4707                           ; BSR set to: 0
  4708                           
  4709                           ;incstack = 0
  4710  00263C  C11E  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4711  002640  C11F  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4712  002644  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4713  002646  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4714  00264A  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4715  00264E  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4716  002652  EC34  F019         	call	_atoi	;wreg free
  4717  002656  C010  F2ED         	movff	?_atoi,disparo_gravacao@v_max
  4718  00265A  C011  F2EE         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4719                           
  4720                           ;main.c: 358: index_max = 0;
  4721  00265E  0E00               	movlw	0
  4722  002660  0102               	movlb	2	; () banked
  4723  002662  6FF0               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4724  002664  0E00               	movlw	0
  4725  002666  6FEF               	movwf	disparo_gravacao@index_max& (0+255),b
  4726                           
  4727                           ; BSR set to: 2
  4728                           ;main.c: 359: if(!time_sd)
  4729  002668  0101               	movlb	1	; () banked
  4730  00266A  516A               	movf	_time_sd& (0+255),w,b
  4731  00266C  116B               	iorwf	(_time_sd+1)& (0+255),w,b
  4732  00266E  A4D8               	btfss	status,2,c
  4733  002670  0012               	return	
  4734                           
  4735                           ; BSR set to: 1
  4736                           ;main.c: 360: {;main.c: 361: verifica_fence();
  4737  002672  EC93  F027         	call	_verifica_fence	;wreg free
  4738                           
  4739                           ;main.c: 362: fix_gps = fix();
  4740  002676  EC88  F02E         	call	_fix	;wreg free
  4741  00267A  C00A  F2EB         	movff	?_fix,disparo_gravacao@fix_gps
  4742  00267E  C00B  F2EC         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4743                           
  4744                           ;main.c: 363: fix_gps[0] = '1';
  4745  002682  C2EB  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4746  002686  C2EC  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4747  00268A  0E31               	movlw	49
  4748  00268C  6EDF               	movwf	indf2,c
  4749                           
  4750                           ;main.c: 364: if(fix_gps[0] == '1')
  4751  00268E  C2EB  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4752  002692  C2EC  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4753  002696  0E31               	movlw	49
  4754  002698  18DE               	xorwf	postinc2,w,c
  4755  00269A  A4D8               	btfss	status,2,c
  4756  00269C  D0DC               	goto	l13695
  4757                           
  4758                           ;main.c: 365: {;main.c: 366: if(v_max> 50)
  4759  00269E  0102               	movlb	2	; () banked
  4760  0026A0  51EE               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4761  0026A2  E104               	bnz	u16640
  4762  0026A4  0E33               	movlw	51
  4763  0026A6  5DED               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4764  0026A8  A0D8               	btfss	status,0,c
  4765  0026AA  D0C2               	goto	l13687
  4766  0026AC                     u16640:
  4767                           
  4768                           ; BSR set to: 2
  4769                           ;main.c: 367: {;main.c: 368: for(i=1; i<3; i++)
  4770  0026AC  0E01               	movlw	1
  4771  0026AE  6FF1               	movwf	disparo_gravacao@i& (0+255),b
  4772  0026B0                     l13665:
  4773                           
  4774                           ; BSR set to: 2
  4775                           ;main.c: 369: {;main.c: 370: if(v_max < atoi(dados_vel[i]))
  4776  0026B0  51F1               	movf	disparo_gravacao@i& (0+255),w,b
  4777  0026B2  0D02               	mullw	2
  4778  0026B4  0E1E               	movlw	low _dados_vel
  4779  0026B6  24F3               	addwf	243,w,c
  4780  0026B8  6ED9               	movwf	fsr2l,c
  4781  0026BA  0E01               	movlw	high _dados_vel
  4782  0026BC  20F4               	addwfc	prodh,w,c
  4783  0026BE  6EDA               	movwf	fsr2h,c
  4784  0026C0  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4785  0026C4  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4786  0026C8  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4787  0026CC  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4788  0026D0  0100               	movlb	0	; () banked
  4789  0026D2  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4790  0026D4  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4791  0026D8  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4792  0026DC  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4793  0026E0  EC34  F019         	call	_atoi	;wreg free
  4794  0026E4  5010               	movf	?_atoi^0,w,c
  4795  0026E6  0102               	movlb	2	; () banked
  4796  0026E8  5DED               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4797  0026EA  5011               	movf	(?_atoi+1)^0,w,c
  4798  0026EC  59EE               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4799  0026EE  B0D8               	btfsc	status,0,c
  4800  0026F0  D022               	goto	l13671
  4801                           
  4802                           ; BSR set to: 2
  4803                           ;main.c: 371: {;main.c: 372: v_max = atoi(dados_vel[i]);
  4804  0026F2  51F1               	movf	disparo_gravacao@i& (0+255),w,b
  4805  0026F4  0D02               	mullw	2
  4806  0026F6  0E1E               	movlw	low _dados_vel
  4807  0026F8  24F3               	addwf	243,w,c
  4808  0026FA  6ED9               	movwf	fsr2l,c
  4809  0026FC  0E01               	movlw	high _dados_vel
  4810  0026FE  20F4               	addwfc	prodh,w,c
  4811  002700  6EDA               	movwf	fsr2h,c
  4812  002702  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4813  002706  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4814  00270A  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4815  00270E  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4816  002712  0100               	movlb	0	; () banked
  4817  002714  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4818  002716  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4819  00271A  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4820  00271E  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4821  002722  EC34  F019         	call	_atoi	;wreg free
  4822  002726  C010  F2ED         	movff	?_atoi,disparo_gravacao@v_max
  4823  00272A  C011  F2EE         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4824                           
  4825                           ;main.c: 373: index_max = i;
  4826  00272E  C2F1  F2EF         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4827  002732  0102               	movlb	2	; () banked
  4828  002734  6BF0               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4829  002736                     l13671:
  4830                           
  4831                           ; BSR set to: 2
  4832  002736  2BF1               	incf	disparo_gravacao@i& (0+255),f,b
  4833                           
  4834                           ; BSR set to: 2
  4835  002738  0E02               	movlw	2
  4836  00273A  65F1               	cpfsgt	disparo_gravacao@i& (0+255),b
  4837  00273C  D7B9               	goto	l13665
  4838                           
  4839                           ; BSR set to: 2
  4840                           ;main.c: 374: };main.c: 376: };main.c: 378: monta_sd(0, dados_hora[index_max]);
  4841  00273E  C2EF  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4842  002742  C2F0  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4843  002746  0E00               	movlw	0
  4844  002748  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4845  00274A  0E06               	movlw	6
  4846  00274C  6E0C               	movwf	___wmul@multiplicand^0,c
  4847  00274E  ECDA  F02C         	call	___wmul	;wreg free
  4848  002752  0ECD               	movlw	low _dados_hora
  4849  002754  240A               	addwf	?___wmul^0,w,c
  4850  002756  6E10               	movwf	monta_sd@dado^0,c
  4851  002758  0E02               	movlw	high _dados_hora
  4852  00275A  200B               	addwfc	(?___wmul+1)^0,w,c
  4853  00275C  6E11               	movwf	(monta_sd@dado+1)^0,c
  4854  00275E  0E00               	movlw	0
  4855  002760  ECBF  F007         	call	_monta_sd
  4856                           
  4857                           ;main.c: 379: monta_sd(1, dados_data[index_max]);
  4858  002764  C2EF  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4859  002768  C2F0  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4860  00276C  0E00               	movlw	0
  4861  00276E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4862  002770  0E06               	movlw	6
  4863  002772  6E0C               	movwf	___wmul@multiplicand^0,c
  4864  002774  ECDA  F02C         	call	___wmul	;wreg free
  4865  002778  0EBB               	movlw	low _dados_data
  4866  00277A  240A               	addwf	?___wmul^0,w,c
  4867  00277C  6E10               	movwf	monta_sd@dado^0,c
  4868  00277E  0E02               	movlw	high _dados_data
  4869  002780  200B               	addwfc	(?___wmul+1)^0,w,c
  4870  002782  6E11               	movwf	(monta_sd@dado+1)^0,c
  4871  002784  0E01               	movlw	1
  4872  002786  ECBF  F007         	call	_monta_sd
  4873                           
  4874                           ;main.c: 380: monta_sd(2, dados_lat[index_max]);
  4875  00278A  C2EF  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4876  00278E  C2F0  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4877  002792  0E00               	movlw	0
  4878  002794  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4879  002796  0E0B               	movlw	11
  4880  002798  6E0C               	movwf	___wmul@multiplicand^0,c
  4881  00279A  ECDA  F02C         	call	___wmul	;wreg free
  4882  00279E  0E9A               	movlw	low _dados_lat
  4883  0027A0  240A               	addwf	?___wmul^0,w,c
  4884  0027A2  6E10               	movwf	monta_sd@dado^0,c
  4885  0027A4  0E02               	movlw	high _dados_lat
  4886  0027A6  200B               	addwfc	(?___wmul+1)^0,w,c
  4887  0027A8  6E11               	movwf	(monta_sd@dado+1)^0,c
  4888  0027AA  0E02               	movlw	2
  4889  0027AC  ECBF  F007         	call	_monta_sd
  4890                           
  4891                           ;main.c: 381: monta_sd(3, dados_long[index_max]);
  4892  0027B0  C2EF  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4893  0027B4  C2F0  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4894  0027B8  0E00               	movlw	0
  4895  0027BA  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4896  0027BC  0E0C               	movlw	12
  4897  0027BE  6E0C               	movwf	___wmul@multiplicand^0,c
  4898  0027C0  ECDA  F02C         	call	___wmul	;wreg free
  4899  0027C4  0E96               	movlw	low _dados_long
  4900  0027C6  240A               	addwf	?___wmul^0,w,c
  4901  0027C8  6E10               	movwf	monta_sd@dado^0,c
  4902  0027CA  0E03               	movlw	high _dados_long
  4903  0027CC  200B               	addwfc	(?___wmul+1)^0,w,c
  4904  0027CE  6E11               	movwf	(monta_sd@dado+1)^0,c
  4905  0027D0  0E03               	movlw	3
  4906  0027D2  ECBF  F007         	call	_monta_sd
  4907                           
  4908                           ;main.c: 382: itoa(velocidade, dados_vel[index_max], 10);
  4909  0027D6  0EDF               	movlw	low disparo_gravacao@velocidade
  4910  0027D8  6E1A               	movwf	itoa@buf^0,c
  4911  0027DA  0E02               	movlw	high disparo_gravacao@velocidade
  4912  0027DC  6E1B               	movwf	(itoa@buf+1)^0,c
  4913  0027DE  90D8               	bcf	status,0,c
  4914  0027E0  0102               	movlb	2	; () banked
  4915  0027E2  35EF               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4916  0027E4  6ED9               	movwf	fsr2l,c
  4917  0027E6  35F0               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4918  0027E8  6EDA               	movwf	fsr2h,c
  4919  0027EA  0E1E               	movlw	low _dados_vel
  4920  0027EC  26D9               	addwf	fsr2l,f,c
  4921  0027EE  0E01               	movlw	high _dados_vel
  4922  0027F0  22DA               	addwfc	fsr2h,f,c
  4923  0027F2  CFDE F01C          	movff	postinc2,itoa@val
  4924  0027F6  CFDD F01D          	movff	postdec2,itoa@val+1
  4925  0027FA  0E00               	movlw	0
  4926  0027FC  6E1F               	movwf	(itoa@base+1)^0,c
  4927  0027FE  0E0A               	movlw	10
  4928  002800  6E1E               	movwf	itoa@base^0,c
  4929  002802  EC97  F02B         	call	_itoa	;wreg free
  4930                           
  4931                           ;main.c: 383: monta_sd(7, velocidade);
  4932  002806  0EDF               	movlw	low disparo_gravacao@velocidade
  4933  002808  6E10               	movwf	monta_sd@dado^0,c
  4934  00280A  0E02               	movlw	high disparo_gravacao@velocidade
  4935  00280C  6E11               	movwf	(monta_sd@dado+1)^0,c
  4936  00280E  0E07               	movlw	7
  4937  002810  ECBF  F007         	call	_monta_sd
  4938                           
  4939                           ;main.c: 385: dados_vel[0] = 50;
  4940  002814  0E00               	movlw	0
  4941  002816  0101               	movlb	1	; () banked
  4942  002818  6F1F               	movwf	(_dados_vel+1)& (0+255),b
  4943  00281A  0E32               	movlw	50
  4944  00281C  6F1E               	movwf	_dados_vel& (0+255),b
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;main.c: 386: dados_vel[1] = 50;
  4948  00281E  0E00               	movlw	0
  4949  002820  6F21               	movwf	(_dados_vel+3)& (0+255),b
  4950  002822  0E32               	movlw	50
  4951  002824  6F20               	movwf	(_dados_vel+2)& (0+255),b
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;main.c: 387: dados_vel[2] = 50;
  4955  002826  0E00               	movlw	0
  4956  002828  6F23               	movwf	(_dados_vel+5)& (0+255),b
  4957  00282A  0E32               	movlw	50
  4958  00282C  6F22               	movwf	(_dados_vel+4)& (0+255),b
  4959                           
  4960                           ;main.c: 388: }
  4961  00282E  D011               	goto	l13693
  4962  002830                     l13687:
  4963                           
  4964                           ; BSR set to: 2
  4965                           ;main.c: 389: else;main.c: 390: {;main.c: 391: dados_vel[0] = 50;
  4966  002830  0E00               	movlw	0
  4967  002832  0101               	movlb	1	; () banked
  4968  002834  6F1F               	movwf	(_dados_vel+1)& (0+255),b
  4969  002836  0E32               	movlw	50
  4970  002838  6F1E               	movwf	_dados_vel& (0+255),b
  4971                           
  4972                           ;main.c: 392: dados_vel[1] = 50;
  4973  00283A  0E00               	movlw	0
  4974  00283C  6F21               	movwf	(_dados_vel+3)& (0+255),b
  4975  00283E  0E32               	movlw	50
  4976  002840  6F20               	movwf	(_dados_vel+2)& (0+255),b
  4977                           
  4978                           ;main.c: 393: dados_vel[2] = 50;
  4979  002842  0E00               	movlw	0
  4980  002844  6F23               	movwf	(_dados_vel+5)& (0+255),b
  4981  002846  0E32               	movlw	50
  4982  002848  6F22               	movwf	(_dados_vel+4)& (0+255),b
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;main.c: 394: recebe_dado_gps();
  4986  00284A  EC88  F02D         	call	_recebe_dado_gps	;wreg free
  4987                           
  4988                           ;main.c: 395: dados_gps_to_sd();
  4989  00284E  EC32  F027         	call	_dados_gps_to_sd	;wreg free
  4990  002852                     l13693:
  4991                           
  4992                           ;main.c: 396: };main.c: 397: grava_sd();
  4993  002852  ECFE  F02D         	call	_grava_sd	;wreg free
  4994  002856                     l13695:
  4995                           
  4996                           ;main.c: 398: };main.c: 399: posicao_cursor_lcd(1,0);
  4997  002856  0E00               	movlw	0
  4998  002858  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  4999  00285A  0E01               	movlw	1
  5000  00285C  EC64  F027         	call	_posicao_cursor_lcd
  5001                           
  5002                           ;main.c: 400: escreve_inteiro_lcd(v_max);
  5003  002860  C2ED  F02B         	movff	disparo_gravacao@v_max,escreve_inteiro_lcd@valor
  5004  002864  C2EE  F02C         	movff	disparo_gravacao@v_max+1,escreve_inteiro_lcd@valor+1
  5005  002868  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  5006  00286A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  5007  00286C  EC5A  F02B         	call	_escreve_inteiro_lcd	;wreg free
  5008                           
  5009                           ;main.c: 401: time_sd = 1000;
  5010  002870  0E03               	movlw	3
  5011  002872  0101               	movlb	1	; () banked
  5012  002874  6F6B               	movwf	(_time_sd+1)& (0+255),b
  5013  002876  0EE8               	movlw	232
  5014  002878  6F6A               	movwf	_time_sd& (0+255),b
  5015                           
  5016                           ; BSR set to: 1
  5017  00287A  0012               	return		;funcret
  5018  00287C                     __end_of_disparo_gravacao:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _verifica_dados_operacionais *****************
  5022 ;; Defined at:
  5023 ;;		line 309 in file "main.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 3F/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5039 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5040 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5041 ;;Total ram usage:        6 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    4
  5044 ;; This function calls:
  5045 ;;		_Speed
  5046 ;;		___awtoft
  5047 ;;		___ftmul
  5048 ;;		___fttol
  5049 ;;		_atoi
  5050 ;;		_latitude
  5051 ;;		_longitude
  5052 ;;		_rawdata
  5053 ;;		_rawhora
  5054 ;;		_strcpy
  5055 ;; This function is called by:
  5056 ;;		_inicializa_tarefas
  5057 ;;		_escalonador
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text21
  5062  002F86                     __ptext21:
  5063                           	callstack 0
  5064  002F86                     _verifica_dados_operacionais:
  5065                           	callstack 25
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;main.c: 311: static unsigned char dado[6];;main.c: 312: static unsigned char contador_a
      +                          tual =0;;main.c: 313: static unsigned char contador_anterior =0;;main.c: 314: static uns
      +                          igned long int velocidade_media;;main.c: 315: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 316: static unsigned char *velocidade_atual;;main.c: 319: if(contador_a
      +                          tual >=3)
  5069                           
  5070                           ; BSR set to: 1
  5071                           ;incstack = 0
  5072  002F86  0E02               	movlw	2
  5073  002F88  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  5074  002F8A  D004               	goto	l13179
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;main.c: 320: {;main.c: 321: contador_atual = 0;
  5078  002F8C  0E00               	movlw	0
  5079  002F8E  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;main.c: 322: contador_anterior = contador_atual;
  5083  002F90  0E00               	movlw	0
  5084  002F92  6FFB               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  5085  002F94                     l13179:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 323: };main.c: 325: velocidade_atual = Speed();
  5089  002F94  EC83  F02E         	call	_Speed	;wreg free
  5090  002F98  C00A  F160         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  5091  002F9C  C00B  F161         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;main.c: 326: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  5095  002FA0  0E0E               	movlw	14
  5096  002FA2  6E1F               	movwf	___ftmul@f2^0,c
  5097  002FA4  0EED               	movlw	237
  5098  002FA6  6E20               	movwf	(___ftmul@f2+1)^0,c
  5099  002FA8  0E3F               	movlw	63
  5100  002FAA  6E21               	movwf	(___ftmul@f2+2)^0,c
  5101  002FAC  C160  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  5102  002FB0  C161  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  5103  002FB4  5010               	movf	atoi@s^0,w,c
  5104  002FB6  1011               	iorwf	(atoi@s+1)^0,w,c
  5105  002FB8  A4D8               	btfss	status,2,c
  5106  002FBA  0E20               	movlw	32
  5107  002FBC  6E12               	movwf	(atoi@s+2)^0,c
  5108  002FBE  EC34  F019         	call	_atoi	;wreg free
  5109  002FC2  C010  F018         	movff	?_atoi,___awtoft@c
  5110  002FC6  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  5111  002FCA  ECB4  F02B         	call	___awtoft	;wreg free
  5112  002FCE  C018  F01C         	movff	?___awtoft,___ftmul@f1
  5113  002FD2  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  5114  002FD6  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  5115  002FDA  EC9F  F01E         	call	___ftmul	;wreg free
  5116  002FDE  C01C  F02B         	movff	?___ftmul,___fttol@f1
  5117  002FE2  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  5118  002FE6  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  5119  002FEA  EC03  F020         	call	___fttol	;wreg free
  5120  002FEE  C02B  F148         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  5121  002FF2  C02C  F149         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  5122  002FF6  C02D  F14A         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  5123  002FFA  C02E  F14B         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  5124                           
  5125                           ;main.c: 327: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  5126  002FFE  0101               	movlb	1	; () banked
  5127  003000  5122               	movf	(_dados_vel+4)& (0+255),w,b
  5128  003002  6E3A               	movwf	??_verifica_dados_operacionais^0,c
  5129  003004  5123               	movf	(_dados_vel+5)& (0+255),w,b
  5130  003006  6E3B               	movwf	(??_verifica_dados_operacionais+1)^0,c
  5131  003008  6A3C               	clrf	(??_verifica_dados_operacionais+2)^0,c
  5132  00300A  6A3D               	clrf	(??_verifica_dados_operacionais+3)^0,c
  5133  00300C  5148               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  5134  00300E  5C3A               	subwf	??_verifica_dados_operacionais^0,w,c
  5135  003010  5149               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  5136  003012  583B               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  5137  003014  514A               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  5138  003016  583C               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  5139  003018  514B               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  5140  00301A  583D               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  5141  00301C  B0D8               	btfsc	status,0,c
  5142  00301E  0012               	return	
  5143                           
  5144                           ; BSR set to: 1
  5145  003020  0E03               	movlw	3
  5146  003022  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  5147  003024  0012               	return	
  5148                           
  5149                           ; BSR set to: 1
  5150                           ;main.c: 328: {;main.c: 329: if(velocidade_atual_int > dados_vel[contador_anterior])
  5151  003026  0100               	movlb	0	; () banked
  5152  003028  51FB               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  5153  00302A  0D02               	mullw	2
  5154  00302C  0E1E               	movlw	low _dados_vel
  5155  00302E  24F3               	addwf	243,w,c
  5156  003030  6ED9               	movwf	fsr2l,c
  5157  003032  0E01               	movlw	high _dados_vel
  5158  003034  20F4               	addwfc	prodh,w,c
  5159  003036  6EDA               	movwf	fsr2h,c
  5160  003038  CFDE F03A          	movff	postinc2,??_verifica_dados_operacionais
  5161  00303C  CFDD F03B          	movff	postdec2,??_verifica_dados_operacionais+1
  5162  003040  503A               	movf	??_verifica_dados_operacionais^0,w,c
  5163  003042  6E3C               	movwf	(??_verifica_dados_operacionais+2)^0,c
  5164  003044  503B               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  5165  003046  6E3D               	movwf	(??_verifica_dados_operacionais+3)^0,c
  5166  003048  6A3E               	clrf	(??_verifica_dados_operacionais+4)^0,c
  5167  00304A  6A3F               	clrf	(??_verifica_dados_operacionais+5)^0,c
  5168  00304C  0101               	movlb	1	; () banked
  5169  00304E  5148               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  5170  003050  5C3C               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  5171  003052  5149               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  5172  003054  583D               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  5173  003056  514A               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  5174  003058  583E               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  5175  00305A  514B               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  5176  00305C  583F               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  5177  00305E  B0D8               	btfsc	status,0,c
  5178  003060  D04C               	goto	l13199
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;main.c: 330: {;main.c: 331: dados_vel[contador_atual] = velocidade_atual_int;
  5182  003062  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  5183  003064  0D02               	mullw	2
  5184  003066  0E1E               	movlw	low _dados_vel
  5185  003068  24F3               	addwf	243,w,c
  5186  00306A  6ED9               	movwf	fsr2l,c
  5187  00306C  0E01               	movlw	high _dados_vel
  5188  00306E  20F4               	addwfc	prodh,w,c
  5189  003070  6EDA               	movwf	fsr2h,c
  5190  003072  C148  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  5191  003076  C149  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  5192                           
  5193                           ; BSR set to: 1
  5194                           ;main.c: 332: strcpy(dados_lat[contador_atual], latitude());
  5195  00307A  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  5196  00307C  0D0B               	mullw	11
  5197  00307E  0E9A               	movlw	low _dados_lat
  5198  003080  24F3               	addwf	243,w,c
  5199  003082  6E0C               	movwf	strcpy@to^0,c
  5200  003084  0E02               	movlw	high _dados_lat
  5201  003086  20F4               	addwfc	prodh,w,c
  5202  003088  6E0D               	movwf	(strcpy@to+1)^0,c
  5203  00308A  EC7E  F02E         	call	_latitude	;wreg free
  5204  00308E  C00A  F00E         	movff	?_latitude,strcpy@from
  5205  003092  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  5206  003096  EC1A  F02C         	call	_strcpy	;wreg free
  5207                           
  5208                           ;main.c: 333: strcpy(dados_long[contador_atual], longitude());
  5209  00309A  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  5210  00309C  0D0C               	mullw	12
  5211  00309E  0E96               	movlw	low _dados_long
  5212  0030A0  24F3               	addwf	243,w,c
  5213  0030A2  6E0C               	movwf	strcpy@to^0,c
  5214  0030A4  0E03               	movlw	high _dados_long
  5215  0030A6  20F4               	addwfc	prodh,w,c
  5216  0030A8  6E0D               	movwf	(strcpy@to+1)^0,c
  5217  0030AA  EC79  F02E         	call	_longitude	;wreg free
  5218  0030AE  C00A  F00E         	movff	?_longitude,strcpy@from
  5219  0030B2  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  5220  0030B6  EC1A  F02C         	call	_strcpy	;wreg free
  5221                           
  5222                           ;main.c: 334: strcpy(dados_hora[contador_atual], rawhora());
  5223  0030BA  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  5224  0030BC  0D06               	mullw	6
  5225  0030BE  0ECD               	movlw	low _dados_hora
  5226  0030C0  24F3               	addwf	243,w,c
  5227  0030C2  6E0C               	movwf	strcpy@to^0,c
  5228  0030C4  0E02               	movlw	high _dados_hora
  5229  0030C6  20F4               	addwfc	prodh,w,c
  5230  0030C8  6E0D               	movwf	(strcpy@to+1)^0,c
  5231  0030CA  EC6F  F02E         	call	_rawhora	;wreg free
  5232  0030CE  C00A  F00E         	movff	?_rawhora,strcpy@from
  5233  0030D2  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  5234  0030D6  EC1A  F02C         	call	_strcpy	;wreg free
  5235                           
  5236                           ;main.c: 335: strcpy(dados_data[contador_atual], rawdata());
  5237  0030DA  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  5238  0030DC  0D06               	mullw	6
  5239  0030DE  0EBB               	movlw	low _dados_data
  5240  0030E0  24F3               	addwf	243,w,c
  5241  0030E2  6E0C               	movwf	strcpy@to^0,c
  5242  0030E4  0E02               	movlw	high _dados_data
  5243  0030E6  20F4               	addwfc	prodh,w,c
  5244  0030E8  6E0D               	movwf	(strcpy@to+1)^0,c
  5245  0030EA  EC74  F02E         	call	_rawdata	;wreg free
  5246  0030EE  C00A  F00E         	movff	?_rawdata,strcpy@from
  5247  0030F2  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  5248  0030F6  EC1A  F02C         	call	_strcpy	;wreg free
  5249  0030FA                     l13199:
  5250                           
  5251                           ;main.c: 336: };main.c: 337: contador_anterior = contador_atual;
  5252  0030FA  C051  F0FB         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  5253                           
  5254                           ;main.c: 338: contador_atual++;
  5255  0030FE  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  5256  003100  0012               	return		;funcret
  5257  003102                     __end_of_verifica_dados_operacionais:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _strcpy *****************
  5261 ;; Defined at:
  5262 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  to              2   11[COMRAM] PTR unsigned char 
  5265 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  5266 ;;  from            2   13[COMRAM] PTR const unsigned char 
  5267 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  cp              2   15[COMRAM] PTR unsigned char 
  5270 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2   11[COMRAM] PTR unsigned char 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/1
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5280 ;;      Params:         4       0       0       0       0       0       0       0       0
  5281 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5283 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    2
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_verifica_dados_operacionais
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text22
  5295  005834                     __ptext22:
  5296                           	callstack 0
  5297  005834                     _strcpy:
  5298                           	callstack 26
  5299                           
  5300                           ;incstack = 0
  5301  005834  C00C  F010         	movff	strcpy@to,strcpy@cp
  5302  005838  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  5303  00583C  D004               	goto	l13145
  5304  00583E                     l13143:
  5305  00583E  4A10               	infsnz	strcpy@cp^0,f,c
  5306  005840  2A11               	incf	(strcpy@cp+1)^0,f,c
  5307  005842  4A0E               	infsnz	strcpy@from^0,f,c
  5308  005844  2A0F               	incf	(strcpy@from+1)^0,f,c
  5309  005846                     l13145:
  5310  005846  C00E  FFD9         	movff	strcpy@from,fsr2l
  5311  00584A  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  5312  00584E  C010  FFE1         	movff	strcpy@cp,fsr1l
  5313  005852  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  5314  005856  CFDF FFE7          	movff	indf2,indf1
  5315  00585A  50E7               	movf	indf1,w,c
  5316  00585C  B4D8               	btfsc	status,2,c
  5317  00585E  0012               	return	
  5318  005860  D7EE               	goto	l13143
  5319  005862                     __end_of_strcpy:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _rawhora *****************
  5323 ;; Defined at:
  5324 ;;		line 683 in file "bibliotecas/GPS.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2    9[COMRAM] PTR unsigned char 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/1
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5338 ;;      Params:         2       0       0       0       0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5341 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5342 ;;Total ram usage:        2 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_verifica_dados_operacionais
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text23
  5353  005CDE                     __ptext23:
  5354                           	callstack 0
  5355  005CDE                     _rawhora:
  5356                           	callstack 26
  5357                           
  5358                           ;GPS.c: 685: return rawTime;
  5359                           
  5360                           ;incstack = 0
  5361  005CDE  0EC9               	movlw	low _rawTime
  5362  005CE0  6E0A               	movwf	?_rawhora^0,c
  5363  005CE2  0E01               	movlw	high _rawTime
  5364  005CE4  6E0B               	movwf	(?_rawhora+1)^0,c
  5365  005CE6  0012               	return		;funcret
  5366  005CE8                     __end_of_rawhora:
  5367                           	callstack 0
  5368                           
  5369 ;; *************** function _rawdata *****************
  5370 ;; Defined at:
  5371 ;;		line 688 in file "bibliotecas/GPS.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  2    9[COMRAM] PTR unsigned char 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/1
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5385 ;;      Params:         2       0       0       0       0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5388 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5389 ;;Total ram usage:        2 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    2
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_verifica_dados_operacionais
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text24
  5400  005CE8                     __ptext24:
  5401                           	callstack 0
  5402  005CE8                     _rawdata:
  5403                           	callstack 26
  5404                           
  5405                           ;GPS.c: 690: return rawDate;
  5406                           
  5407                           ;incstack = 0
  5408  005CE8  0EE2               	movlw	low _rawDate
  5409  005CEA  6E0A               	movwf	?_rawdata^0,c
  5410  005CEC  0E01               	movlw	high _rawDate
  5411  005CEE  6E0B               	movwf	(?_rawdata+1)^0,c
  5412  005CF0  0012               	return		;funcret
  5413  005CF2                     __end_of_rawdata:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _longitude *****************
  5417 ;; Defined at:
  5418 ;;		line 678 in file "bibliotecas/GPS.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  2    9[COMRAM] PTR unsigned char 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/1
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5432 ;;      Params:         2       0       0       0       0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5435 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5436 ;;Total ram usage:        2 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    2
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_verifica_dados_operacionais
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text25
  5447  005CF2                     __ptext25:
  5448                           	callstack 0
  5449  005CF2                     _longitude:
  5450                           	callstack 26
  5451                           
  5452                           ;GPS.c: 680: return rawLongitude;
  5453                           
  5454                           ;incstack = 0
  5455  005CF2  0E9D               	movlw	low _rawLongitude
  5456  005CF4  6E0A               	movwf	?_longitude^0,c
  5457  005CF6  0E01               	movlw	high _rawLongitude
  5458  005CF8  6E0B               	movwf	(?_longitude+1)^0,c
  5459  005CFA  0012               	return		;funcret
  5460  005CFC                     __end_of_longitude:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _latitude *****************
  5464 ;; Defined at:
  5465 ;;		line 673 in file "bibliotecas/GPS.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2    9[COMRAM] PTR unsigned char 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 3F/1
  5476 ;;		On exit  : 3F/1
  5477 ;;		Unchanged: 3F/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5479 ;;      Params:         2       0       0       0       0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5482 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        2 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    2
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_verifica_dados_operacionais
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text26
  5494  005CFC                     __ptext26:
  5495                           	callstack 0
  5496  005CFC                     _latitude:
  5497                           	callstack 26
  5498                           
  5499                           ; BSR set to: 1
  5500                           ;GPS.c: 675: return rawLatitude;
  5501                           
  5502                           ;incstack = 0
  5503  005CFC  0EB6               	movlw	low _rawLatitude
  5504  005CFE  6E0A               	movwf	?_latitude^0,c
  5505  005D00  0E01               	movlw	high _rawLatitude
  5506  005D02  6E0B               	movwf	(?_latitude+1)^0,c
  5507                           
  5508                           ; BSR set to: 1
  5509  005D04  0012               	return		;funcret
  5510  005D06                     __end_of_latitude:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function ___fttol *****************
  5514 ;; Defined at:
  5515 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  f1              3   42[COMRAM] float 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  lval            4   52[COMRAM] unsigned long 
  5520 ;;  exp1            1   56[COMRAM] unsigned char 
  5521 ;;  sign1           1   51[COMRAM] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  4   42[COMRAM] long 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5531 ;;      Params:         4       0       0       0       0       0       0       0       0
  5532 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5533 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5534 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5535 ;;Total ram usage:       15 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    2
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_verifica_dados_operacionais
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text27
  5546  004006                     __ptext27:
  5547                           	callstack 0
  5548  004006                     ___fttol:
  5549                           	callstack 26
  5550                           
  5551                           ; BSR set to: 1
  5552                           ;incstack = 0
  5553  004006  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  5554  00400A  6A30               	clrf	(??___fttol+1)^0,c
  5555  00400C  6A31               	clrf	(??___fttol+2)^0,c
  5556  00400E  342C               	rlcf	(___fttol@f1+1)^0,w,c
  5557  004010  362F               	rlcf	??___fttol^0,f,c
  5558  004012  E301               	bnc	u10461
  5559  004014  8030               	bsf	(??___fttol+1)^0,0,c
  5560  004016                     u10461:
  5561  004016  502F               	movf	??___fttol^0,w,c
  5562  004018  6E39               	movwf	___fttol@exp1^0,c
  5563  00401A  5039               	movf	___fttol@exp1^0,w,c
  5564  00401C  A4D8               	btfss	status,2,c
  5565  00401E  D009               	goto	l9471
  5566  004020                     u10470:
  5567  004020  0E00               	movlw	0
  5568  004022  6E2B               	movwf	?___fttol^0,c
  5569  004024  0E00               	movlw	0
  5570  004026  6E2C               	movwf	(?___fttol+1)^0,c
  5571  004028  0E00               	movlw	0
  5572  00402A  6E2D               	movwf	(?___fttol+2)^0,c
  5573  00402C  0E00               	movlw	0
  5574  00402E  6E2E               	movwf	(?___fttol+3)^0,c
  5575  004030  0012               	return	
  5576  004032                     l9471:
  5577  004032  0E17               	movlw	23
  5578  004034  6E2F               	movwf	??___fttol^0,c
  5579  004036  C02B  F030         	movff	___fttol@f1,??___fttol+1
  5580  00403A  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  5581  00403E  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  5582  004042  282F               	incf	??___fttol^0,w,c
  5583  004044  6E33               	movwf	(??___fttol+4)^0,c
  5584  004046  D004               	goto	u10480
  5585  004048                     u10485:
  5586  004048  90D8               	bcf	status,0,c
  5587  00404A  3232               	rrcf	(??___fttol+3)^0,f,c
  5588  00404C  3231               	rrcf	(??___fttol+2)^0,f,c
  5589  00404E  3230               	rrcf	(??___fttol+1)^0,f,c
  5590  004050                     u10480:
  5591  004050  2E33               	decfsz	(??___fttol+4)^0,f,c
  5592  004052  D7FA               	goto	u10485
  5593  004054  5030               	movf	(??___fttol+1)^0,w,c
  5594  004056  6E34               	movwf	___fttol@sign1^0,c
  5595  004058  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  5596  00405A  0EFF               	movlw	255
  5597  00405C  162B               	andwf	___fttol@f1^0,f,c
  5598  00405E  0EFF               	movlw	255
  5599  004060  162C               	andwf	(___fttol@f1+1)^0,f,c
  5600  004062  0E00               	movlw	0
  5601  004064  162D               	andwf	(___fttol@f1+2)^0,f,c
  5602  004066  502B               	movf	___fttol@f1^0,w,c
  5603  004068  6E35               	movwf	___fttol@lval^0,c
  5604  00406A  502C               	movf	(___fttol@f1+1)^0,w,c
  5605  00406C  6E36               	movwf	(___fttol@lval+1)^0,c
  5606  00406E  502D               	movf	(___fttol@f1+2)^0,w,c
  5607  004070  6E37               	movwf	(___fttol@lval+2)^0,c
  5608  004072  6A38               	clrf	(___fttol@lval+3)^0,c
  5609  004074  0E8E               	movlw	142
  5610  004076  5E39               	subwf	___fttol@exp1^0,f,c
  5611  004078  AE39               	btfss	___fttol@exp1^0,7,c
  5612  00407A  D00D               	goto	l9493
  5613  00407C  5039               	movf	___fttol@exp1^0,w,c
  5614  00407E  0A80               	xorlw	128
  5615  004080  0F8F               	addlw	143
  5616  004082  A0D8               	btfss	status,0,c
  5617  004084  D7CD               	goto	u10470
  5618  004086                     l9489:
  5619  004086  90D8               	bcf	status,0,c
  5620  004088  3238               	rrcf	(___fttol@lval+3)^0,f,c
  5621  00408A  3237               	rrcf	(___fttol@lval+2)^0,f,c
  5622  00408C  3236               	rrcf	(___fttol@lval+1)^0,f,c
  5623  00408E  3235               	rrcf	___fttol@lval^0,f,c
  5624  004090  3E39               	incfsz	___fttol@exp1^0,f,c
  5625  004092  D7F9               	goto	l9489
  5626  004094  D00D               	goto	u10520
  5627  004096                     l9493:
  5628  004096  0E17               	movlw	23
  5629  004098  6439               	cpfsgt	___fttol@exp1^0,c
  5630  00409A  D007               	goto	l9501
  5631  00409C  D7C1               	goto	u10470
  5632  00409E                     l9499:
  5633  00409E  90D8               	bcf	status,0,c
  5634  0040A0  3635               	rlcf	___fttol@lval^0,f,c
  5635  0040A2  3636               	rlcf	(___fttol@lval+1)^0,f,c
  5636  0040A4  3637               	rlcf	(___fttol@lval+2)^0,f,c
  5637  0040A6  3638               	rlcf	(___fttol@lval+3)^0,f,c
  5638  0040A8  0639               	decf	___fttol@exp1^0,f,c
  5639  0040AA                     l9501:
  5640  0040AA  5039               	movf	___fttol@exp1^0,w,c
  5641  0040AC  A4D8               	btfss	status,2,c
  5642  0040AE  D7F7               	goto	l9499
  5643  0040B0                     u10520:
  5644  0040B0  5034               	movf	___fttol@sign1^0,w,c
  5645  0040B2  B4D8               	btfsc	status,2,c
  5646  0040B4  D008               	goto	l9507
  5647  0040B6  1E38               	comf	(___fttol@lval+3)^0,f,c
  5648  0040B8  1E37               	comf	(___fttol@lval+2)^0,f,c
  5649  0040BA  1E36               	comf	(___fttol@lval+1)^0,f,c
  5650  0040BC  6C35               	negf	___fttol@lval^0,c
  5651  0040BE  0E00               	movlw	0
  5652  0040C0  2236               	addwfc	(___fttol@lval+1)^0,f,c
  5653  0040C2  2237               	addwfc	(___fttol@lval+2)^0,f,c
  5654  0040C4  2238               	addwfc	(___fttol@lval+3)^0,f,c
  5655  0040C6                     l9507:
  5656  0040C6  C035  F02B         	movff	___fttol@lval,?___fttol
  5657  0040CA  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  5658  0040CE  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  5659  0040D2  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  5660  0040D6  0012               	return		;funcret
  5661  0040D8                     __end_of___fttol:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function ___ftmul *****************
  5665 ;; Defined at:
  5666 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  f1              3   27[COMRAM] float 
  5669 ;;  f2              3   30[COMRAM] float 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  5672 ;;  sign            1   41[COMRAM] unsigned char 
  5673 ;;  cntr            1   40[COMRAM] unsigned char 
  5674 ;;  exp             1   36[COMRAM] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  3   27[COMRAM] float 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5684 ;;      Params:         6       0       0       0       0       0       0       0       0
  5685 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5686 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5687 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5688 ;;Total ram usage:       15 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    3
  5691 ;; This function calls:
  5692 ;;		___ftpack
  5693 ;; This function is called by:
  5694 ;;		_verifica_dados_operacionais
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text28
  5699  003D3E                     __ptext28:
  5700                           	callstack 0
  5701  003D3E                     ___ftmul:
  5702                           	callstack 25
  5703                           
  5704                           ;incstack = 0
  5705  003D3E  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5706  003D42  6A23               	clrf	(??___ftmul+1)^0,c
  5707  003D44  6A24               	clrf	(??___ftmul+2)^0,c
  5708  003D46  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5709  003D48  3622               	rlcf	??___ftmul^0,f,c
  5710  003D4A  E301               	bnc	u10391
  5711  003D4C  8023               	bsf	(??___ftmul+1)^0,0,c
  5712  003D4E                     u10391:
  5713  003D4E  5022               	movf	??___ftmul^0,w,c
  5714  003D50  6E25               	movwf	___ftmul@exp^0,c
  5715  003D52  5025               	movf	___ftmul@exp^0,w,c
  5716  003D54  A4D8               	btfss	status,2,c
  5717  003D56  D007               	goto	l9411
  5718  003D58  0E00               	movlw	0
  5719  003D5A  6E1C               	movwf	?___ftmul^0,c
  5720  003D5C  0E00               	movlw	0
  5721  003D5E  6E1D               	movwf	(?___ftmul+1)^0,c
  5722  003D60  0E00               	movlw	0
  5723  003D62  6E1E               	movwf	(?___ftmul+2)^0,c
  5724  003D64  0012               	return	
  5725  003D66                     l9411:
  5726  003D66  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5727  003D6A  6A23               	clrf	(??___ftmul+1)^0,c
  5728  003D6C  6A24               	clrf	(??___ftmul+2)^0,c
  5729  003D6E  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5730  003D70  3622               	rlcf	??___ftmul^0,f,c
  5731  003D72  E301               	bnc	u10411
  5732  003D74  8023               	bsf	(??___ftmul+1)^0,0,c
  5733  003D76                     u10411:
  5734  003D76  5022               	movf	??___ftmul^0,w,c
  5735  003D78  6E2A               	movwf	___ftmul@sign^0,c
  5736  003D7A  502A               	movf	___ftmul@sign^0,w,c
  5737  003D7C  A4D8               	btfss	status,2,c
  5738  003D7E  D007               	goto	l9417
  5739  003D80  0E00               	movlw	0
  5740  003D82  6E1C               	movwf	?___ftmul^0,c
  5741  003D84  0E00               	movlw	0
  5742  003D86  6E1D               	movwf	(?___ftmul+1)^0,c
  5743  003D88  0E00               	movlw	0
  5744  003D8A  6E1E               	movwf	(?___ftmul+2)^0,c
  5745  003D8C  0012               	return	
  5746  003D8E                     l9417:
  5747  003D8E  502A               	movf	___ftmul@sign^0,w,c
  5748  003D90  0F7B               	addlw	123
  5749  003D92  2625               	addwf	___ftmul@exp^0,f,c
  5750  003D94  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5751  003D98  5021               	movf	(___ftmul@f2+2)^0,w,c
  5752  003D9A  1A2A               	xorwf	___ftmul@sign^0,f,c
  5753  003D9C  0E80               	movlw	128
  5754  003D9E  162A               	andwf	___ftmul@sign^0,f,c
  5755  003DA0  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5756  003DA2  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5757  003DA4  0EFF               	movlw	255
  5758  003DA6  161F               	andwf	___ftmul@f2^0,f,c
  5759  003DA8  0EFF               	movlw	255
  5760  003DAA  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5761  003DAC  0E00               	movlw	0
  5762  003DAE  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5763  003DB0  0E00               	movlw	0
  5764  003DB2  6E26               	movwf	___ftmul@f3_as_product^0,c
  5765  003DB4  0E00               	movlw	0
  5766  003DB6  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5767  003DB8  0E00               	movlw	0
  5768  003DBA  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5769  003DBC  0E07               	movlw	7
  5770  003DBE  6E29               	movwf	___ftmul@cntr^0,c
  5771  003DC0                     l9431:
  5772  003DC0  A01C               	btfss	___ftmul@f1^0,0,c
  5773  003DC2  D006               	goto	l9435
  5774  003DC4  501F               	movf	___ftmul@f2^0,w,c
  5775  003DC6  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5776  003DC8  5020               	movf	(___ftmul@f2+1)^0,w,c
  5777  003DCA  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5778  003DCC  5021               	movf	(___ftmul@f2+2)^0,w,c
  5779  003DCE  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5780  003DD0                     l9435:
  5781  003DD0  90D8               	bcf	status,0,c
  5782  003DD2  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5783  003DD4  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5784  003DD6  321C               	rrcf	___ftmul@f1^0,f,c
  5785  003DD8  90D8               	bcf	status,0,c
  5786  003DDA  361F               	rlcf	___ftmul@f2^0,f,c
  5787  003DDC  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5788  003DDE  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5789  003DE0  2E29               	decfsz	___ftmul@cntr^0,f,c
  5790  003DE2  D7EE               	goto	l9431
  5791  003DE4  0E09               	movlw	9
  5792  003DE6  6E29               	movwf	___ftmul@cntr^0,c
  5793  003DE8                     l9441:
  5794  003DE8  A01C               	btfss	___ftmul@f1^0,0,c
  5795  003DEA  D006               	goto	l9445
  5796  003DEC  501F               	movf	___ftmul@f2^0,w,c
  5797  003DEE  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5798  003DF0  5020               	movf	(___ftmul@f2+1)^0,w,c
  5799  003DF2  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5800  003DF4  5021               	movf	(___ftmul@f2+2)^0,w,c
  5801  003DF6  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5802  003DF8                     l9445:
  5803  003DF8  90D8               	bcf	status,0,c
  5804  003DFA  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5805  003DFC  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5806  003DFE  321C               	rrcf	___ftmul@f1^0,f,c
  5807  003E00  90D8               	bcf	status,0,c
  5808  003E02  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5809  003E04  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5810  003E06  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5811  003E08  2E29               	decfsz	___ftmul@cntr^0,f,c
  5812  003E0A  D7EE               	goto	l9441
  5813  003E0C  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5814  003E10  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5815  003E14  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5816  003E18  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5817  003E1C  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5818  003E20  ECF1  F021         	call	___ftpack	;wreg free
  5819  003E24  C00A  F01C         	movff	?___ftpack,?___ftmul
  5820  003E28  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5821  003E2C  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5822  003E30  0012               	return		;funcret
  5823  003E32                     __end_of___ftmul:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function ___awtoft *****************
  5827 ;; Defined at:
  5828 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  c               2   23[COMRAM] int 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  sign            1   26[COMRAM] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  3   23[COMRAM] float 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5842 ;;      Params:         3       0       0       0       0       0       0       0       0
  5843 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5845 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:        4 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    3
  5849 ;; This function calls:
  5850 ;;		___ftpack
  5851 ;; This function is called by:
  5852 ;;		_verifica_dados_operacionais
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text29
  5857  005768                     __ptext29:
  5858                           	callstack 0
  5859  005768                     ___awtoft:
  5860                           	callstack 25
  5861                           
  5862                           ;incstack = 0
  5863  005768  0E00               	movlw	0
  5864  00576A  6E1B               	movwf	___awtoft@sign^0,c
  5865  00576C  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5866  00576E  D006               	goto	l9461
  5867  005770  6C18               	negf	___awtoft@c^0,c
  5868  005772  1E19               	comf	(___awtoft@c+1)^0,f,c
  5869  005774  B0D8               	btfsc	status,0,c
  5870  005776  2A19               	incf	(___awtoft@c+1)^0,f,c
  5871  005778  0E01               	movlw	1
  5872  00577A  6E1B               	movwf	___awtoft@sign^0,c
  5873  00577C                     l9461:
  5874  00577C  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5875  005780  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5876  005784  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5877  005786  0E8E               	movlw	142
  5878  005788  6E0D               	movwf	___ftpack@exp^0,c
  5879  00578A  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5880  00578E  ECF1  F021         	call	___ftpack	;wreg free
  5881  005792  C00A  F018         	movff	?___ftpack,?___awtoft
  5882  005796  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5883  00579A  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5884  00579E  0012               	return		;funcret
  5885  0057A0                     __end_of___awtoft:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function ___ftpack *****************
  5889 ;; Defined at:
  5890 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  arg             3    9[COMRAM] unsigned um
  5893 ;;  exp             1   12[COMRAM] unsigned char 
  5894 ;;  sign            1   13[COMRAM] unsigned char 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  3    9[COMRAM] float 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5906 ;;      Params:         5       0       0       0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5908 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5909 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5910 ;;Total ram usage:        8 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    2
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		___awtoft
  5917 ;;		___ftmul
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text30
  5922  0043E2                     __ptext30:
  5923                           	callstack 0
  5924  0043E2                     ___ftpack:
  5925                           	callstack 25
  5926                           
  5927                           ;incstack = 0
  5928  0043E2  500D               	movf	___ftpack@exp^0,w,c
  5929  0043E4  B4D8               	btfsc	status,2,c
  5930  0043E6  D005               	goto	u10010
  5931  0043E8  500A               	movf	___ftpack@arg^0,w,c
  5932  0043EA  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5933  0043EC  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5934  0043EE  A4D8               	btfss	status,2,c
  5935  0043F0  D00C               	goto	l9187
  5936  0043F2                     u10010:
  5937  0043F2  0E00               	movlw	0
  5938  0043F4  6E0A               	movwf	?___ftpack^0,c
  5939  0043F6  0E00               	movlw	0
  5940  0043F8  6E0B               	movwf	(?___ftpack+1)^0,c
  5941  0043FA  0E00               	movlw	0
  5942  0043FC  6E0C               	movwf	(?___ftpack+2)^0,c
  5943  0043FE  0012               	return	
  5944  004400                     l9185:
  5945  004400  2A0D               	incf	___ftpack@exp^0,f,c
  5946  004402  90D8               	bcf	status,0,c
  5947  004404  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5948  004406  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5949  004408  320A               	rrcf	___ftpack@arg^0,f,c
  5950  00440A                     l9187:
  5951  00440A  0E00               	movlw	0
  5952  00440C  140A               	andwf	___ftpack@arg^0,w,c
  5953  00440E  6E0F               	movwf	??___ftpack^0,c
  5954  004410  0E00               	movlw	0
  5955  004412  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5956  004414  6E10               	movwf	(??___ftpack+1)^0,c
  5957  004416  0EFE               	movlw	254
  5958  004418  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5959  00441A  6E11               	movwf	(??___ftpack+2)^0,c
  5960  00441C  500F               	movf	??___ftpack^0,w,c
  5961  00441E  1010               	iorwf	(??___ftpack+1)^0,w,c
  5962  004420  1011               	iorwf	(??___ftpack+2)^0,w,c
  5963  004422  B4D8               	btfsc	status,2,c
  5964  004424  D00C               	goto	l9193
  5965  004426  D7EC               	goto	l9185
  5966  004428                     l9189:
  5967  004428  2A0D               	incf	___ftpack@exp^0,f,c
  5968  00442A  0E01               	movlw	1
  5969  00442C  260A               	addwf	___ftpack@arg^0,f,c
  5970  00442E  0E00               	movlw	0
  5971  004430  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5972  004432  0E00               	movlw	0
  5973  004434  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5974  004436  90D8               	bcf	status,0,c
  5975  004438  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5976  00443A  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5977  00443C  320A               	rrcf	___ftpack@arg^0,f,c
  5978  00443E                     l9193:
  5979  00443E  0E00               	movlw	0
  5980  004440  140A               	andwf	___ftpack@arg^0,w,c
  5981  004442  6E0F               	movwf	??___ftpack^0,c
  5982  004444  0E00               	movlw	0
  5983  004446  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5984  004448  6E10               	movwf	(??___ftpack+1)^0,c
  5985  00444A  0EFF               	movlw	255
  5986  00444C  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5987  00444E  6E11               	movwf	(??___ftpack+2)^0,c
  5988  004450  500F               	movf	??___ftpack^0,w,c
  5989  004452  1010               	iorwf	(??___ftpack+1)^0,w,c
  5990  004454  1011               	iorwf	(??___ftpack+2)^0,w,c
  5991  004456  B4D8               	btfsc	status,2,c
  5992  004458  D006               	goto	l9197
  5993  00445A  D7E6               	goto	l9189
  5994  00445C                     l9195:
  5995  00445C  060D               	decf	___ftpack@exp^0,f,c
  5996  00445E  90D8               	bcf	status,0,c
  5997  004460  360A               	rlcf	___ftpack@arg^0,f,c
  5998  004462  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5999  004464  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  6000  004466                     l9197:
  6001  004466  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  6002  004468  D003               	goto	u10050
  6003  00446A  0E02               	movlw	2
  6004  00446C  600D               	cpfslt	___ftpack@exp^0,c
  6005  00446E  D7F6               	goto	l9195
  6006  004470                     u10050:
  6007  004470  A00D               	btfss	___ftpack@exp^0,0,c
  6008  004472  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  6009  004474  90D8               	bcf	status,0,c
  6010  004476  320D               	rrcf	___ftpack@exp^0,f,c
  6011  004478  500D               	movf	___ftpack@exp^0,w,c
  6012  00447A  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  6013  00447C  500E               	movf	___ftpack@sign^0,w,c
  6014  00447E  A4D8               	btfss	status,2,c
  6015  004480  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  6016  004482  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  6017  004486  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  6018  00448A  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  6019  00448E  0012               	return		;funcret
  6020  004490                     __end_of___ftpack:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function _Speed *****************
  6024 ;; Defined at:
  6025 ;;		line 700 in file "bibliotecas/GPS.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  2    9[COMRAM] PTR unsigned char 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 3F/0
  6036 ;;		On exit  : 3F/0
  6037 ;;		Unchanged: 3F/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6039 ;;      Params:         2       0       0       0       0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6043 ;;Total ram usage:        2 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    2
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_verifica_dados_operacionais
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text31
  6054  005D06                     __ptext31:
  6055                           	callstack 0
  6056  005D06                     _Speed:
  6057                           	callstack 26
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;GPS.c: 702: return rawSpeed;
  6061                           
  6062                           ;incstack = 0
  6063  005D06  0E79               	movlw	low _rawSpeed
  6064  005D08  6E0A               	movwf	?_Speed^0,c
  6065  005D0A  0E02               	movlw	high _rawSpeed
  6066  005D0C  6E0B               	movwf	(?_Speed+1)^0,c
  6067                           
  6068                           ; BSR set to: 0
  6069  005D0E  0012               	return		;funcret
  6070  005D10                     __end_of_Speed:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _mostra_dados_display *****************
  6074 ;; Defined at:
  6075 ;;		line 706 in file "bibliotecas/GPS.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/1
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    5
  6096 ;; This function calls:
  6097 ;;		_escreve_frase_ram_lcd
  6098 ;;		_posicao_cursor_lcd
  6099 ;; This function is called by:
  6100 ;;		_troca_de_tela
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text32
  6105  005862                     __ptext32:
  6106                           	callstack 0
  6107  005862                     _mostra_dados_display:
  6108                           	callstack 23
  6109                           
  6110                           ;GPS.c: 708: posicao_cursor_lcd(1,4);
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;incstack = 0
  6114  005862  0E04               	movlw	4
  6115  005864  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  6116  005866  0E01               	movlw	1
  6117  005868  EC64  F027         	call	_posicao_cursor_lcd
  6118                           
  6119                           ;GPS.c: 709: escreve_frase_ram_lcd(rawLatitude);
  6120  00586C  0EB6               	movlw	low _rawLatitude
  6121  00586E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  6122  005870  0E01               	movlw	high _rawLatitude
  6123  005872  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  6124  005874  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  6125                           
  6126                           ;GPS.c: 710: posicao_cursor_lcd(2,4);
  6127  005878  0E04               	movlw	4
  6128  00587A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  6129  00587C  0E02               	movlw	2
  6130  00587E  EC64  F027         	call	_posicao_cursor_lcd
  6131                           
  6132                           ;GPS.c: 711: escreve_frase_ram_lcd(rawLongitude);
  6133  005882  0E9D               	movlw	low _rawLongitude
  6134  005884  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  6135  005886  0E01               	movlw	high _rawLongitude
  6136  005888  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  6137  00588A  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
  6138  00588E  0012               	return		;funcret
  6139  005890                     __end_of_mostra_dados_display:
  6140                           	callstack 0
  6141                           
  6142 ;; *************** function _escreve_cmd_lcd *****************
  6143 ;; Defined at:
  6144 ;;		line 162 in file "bibliotecas/display_lcd.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  comando         1    wreg     unsigned char 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  comando         1   11[COMRAM] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0, cstack
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0
  6159 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6161 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6162 ;;Total ram usage:        1 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:    3
  6165 ;; This function calls:
  6166 ;;		_delay
  6167 ;; This function is called by:
  6168 ;;		_init_lcd
  6169 ;;		_mensagem_inicial
  6170 ;;		_troca_de_tela
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text33
  6175  0048D2                     __ptext33:
  6176                           	callstack 0
  6177  0048D2                     _escreve_cmd_lcd:
  6178                           	callstack 26
  6179                           
  6180                           ;incstack = 0
  6181                           ;escreve_cmd_lcd@comando stored from wreg
  6182  0048D2  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  6183                           
  6184                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  6185  0048D4  9483               	bcf	131,2,c	;volatile
  6186                           
  6187                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  6188  0048D6  9283               	bcf	131,1,c	;volatile
  6189                           
  6190                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  6191  0048D8  9083               	bcf	131,0,c	;volatile
  6192                           
  6193                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  6194  0048DA  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  6195  0048DC  D002               	goto	l191
  6196  0048DE  8883               	bsf	131,4,c	;volatile
  6197  0048E0  D001               	goto	l13027
  6198  0048E2                     l191:
  6199                           
  6200                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  6201  0048E2  9883               	bcf	131,4,c	;volatile
  6202  0048E4                     l13027:
  6203                           
  6204                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  6205  0048E4  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  6206  0048E6  D002               	goto	l193
  6207  0048E8  8A83               	bsf	131,5,c	;volatile
  6208  0048EA  D001               	goto	l13031
  6209  0048EC                     l193:
  6210                           
  6211                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  6212  0048EC  9A83               	bcf	131,5,c	;volatile
  6213  0048EE                     l13031:
  6214                           
  6215                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  6216  0048EE  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  6217  0048F0  D002               	goto	l195
  6218  0048F2  8C83               	bsf	131,6,c	;volatile
  6219  0048F4  D001               	goto	l13035
  6220  0048F6                     l195:
  6221                           
  6222                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  6223  0048F6  9C83               	bcf	131,6,c	;volatile
  6224  0048F8                     l13035:
  6225                           
  6226                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  6227  0048F8  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  6228  0048FA  D002               	goto	l197
  6229  0048FC  8E83               	bsf	131,7,c	;volatile
  6230  0048FE  D001               	goto	l198
  6231  004900                     l197:
  6232                           
  6233                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  6234  004900  9E83               	bcf	131,7,c	;volatile
  6235  004902                     l198:
  6236                           
  6237                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  6238  004902  8083               	bsf	131,0,c	;volatile
  6239                           
  6240                           ;display_lcd.c: 181: delay();
  6241  004904  ECB8  F02D         	call	_delay	;wreg free
  6242                           
  6243                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  6244  004908  9083               	bcf	131,0,c	;volatile
  6245                           
  6246                           ;display_lcd.c: 183: delay();
  6247  00490A  ECB8  F02D         	call	_delay	;wreg free
  6248                           
  6249                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  6250  00490E  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  6251  004910  D002               	goto	l199
  6252  004912  8883               	bsf	131,4,c	;volatile
  6253  004914  D001               	goto	l200
  6254  004916                     l199:
  6255                           
  6256                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  6257  004916  9883               	bcf	131,4,c	;volatile
  6258  004918                     l200:
  6259                           
  6260                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  6261  004918  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  6262  00491A  D002               	goto	l201
  6263  00491C  8A83               	bsf	131,5,c	;volatile
  6264  00491E  D001               	goto	l202
  6265  004920                     l201:
  6266                           
  6267                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  6268  004920  9A83               	bcf	131,5,c	;volatile
  6269  004922                     l202:
  6270                           
  6271                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  6272  004922  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  6273  004924  D002               	goto	l203
  6274  004926  8C83               	bsf	131,6,c	;volatile
  6275  004928  D001               	goto	l204
  6276  00492A                     l203:
  6277                           
  6278                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  6279  00492A  9C83               	bcf	131,6,c	;volatile
  6280  00492C                     l204:
  6281                           
  6282                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  6283  00492C  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  6284  00492E  D002               	goto	l205
  6285  004930  8E83               	bsf	131,7,c	;volatile
  6286  004932  D001               	goto	l206
  6287  004934                     l205:
  6288                           
  6289                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  6290  004934  9E83               	bcf	131,7,c	;volatile
  6291  004936                     l206:
  6292                           
  6293                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  6294  004936  8083               	bsf	131,0,c	;volatile
  6295                           
  6296                           ;display_lcd.c: 197: delay();
  6297  004938  ECB8  F02D         	call	_delay	;wreg free
  6298                           
  6299                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  6300  00493C  9083               	bcf	131,0,c	;volatile
  6301                           
  6302                           ;display_lcd.c: 199: delay();
  6303  00493E  ECB8  F02D         	call	_delay	;wreg free
  6304                           
  6305                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  6306  004942  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  6307  004944  B4D8               	btfsc	status,2,c
  6308  004946  D008               	goto	u15900
  6309  004948  0E02               	movlw	2
  6310  00494A  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6311  00494C  B4D8               	btfsc	status,2,c
  6312  00494E  D004               	goto	u15900
  6313  004950  0E03               	movlw	3
  6314  004952  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6315  004954  A4D8               	btfss	status,2,c
  6316  004956  0012               	return	
  6317  004958                     u15900:
  6318                           
  6319                           ;display_lcd.c: 205: { delay(); }
  6320  004958  ECB8  F02D         	call	_delay	;wreg free
  6321  00495C  0012               	return		;funcret
  6322  00495E                     __end_of_escreve_cmd_lcd:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _verifica_fence *****************
  6326 ;; Defined at:
  6327 ;;		line 276 in file "main.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 3F/1
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6343 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6344 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6345 ;;Total ram usage:        1 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    8
  6348 ;; This function calls:
  6349 ;;		_latitude_to_convert
  6350 ;;		_longitude_to_convert
  6351 ;;		_monta_sd
  6352 ;;		_recebe_dado_gps
  6353 ;;		_verifica_plausibilidade_lat
  6354 ;;		_verifica_plausibilidade_long
  6355 ;; This function is called by:
  6356 ;;		_disparo_gravacao
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text34
  6361  004F26                     __ptext34:
  6362                           	callstack 0
  6363  004F26                     _verifica_fence:
  6364                           	callstack 20
  6365                           
  6366                           ; BSR set to: 1
  6367                           ;main.c: 279: recebe_dado_gps();
  6368                           
  6369                           ;incstack = 0
  6370  004F26  EC88  F02D         	call	_recebe_dado_gps	;wreg free
  6371                           
  6372                           ;main.c: 280: longitude_to_convert();
  6373  004F2A  EC73  F025         	call	_longitude_to_convert	;wreg free
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;main.c: 281: latitude_to_convert();
  6377  004F2E  ECEC  F025         	call	_latitude_to_convert	;wreg free
  6378                           
  6379                           ;main.c: 282: fence_flag[0].point = verifica_plausibilidade_long();
  6380  004F32  EC00  F027         	call	_verifica_plausibilidade_long	;wreg free
  6381  004F36  6E43               	movwf	??_verifica_fence^0,c
  6382  004F38  0101               	movlb	1	; () banked
  6383  004F3A  5150               	movf	_fence_flag& (0+255),w,b
  6384  004F3C  1843               	xorwf	??_verifica_fence^0,w,c
  6385  004F3E  0BFE               	andlw	-2
  6386  004F40  1843               	xorwf	??_verifica_fence^0,w,c
  6387  004F42  6F50               	movwf	_fence_flag& (0+255),b
  6388                           
  6389                           ;main.c: 283: fence_flag[1].point = verifica_plausibilidade_lat();
  6390  004F44  ECB0  F025         	call	_verifica_plausibilidade_lat	;wreg free
  6391  004F48  6E43               	movwf	??_verifica_fence^0,c
  6392  004F4A  0101               	movlb	1	; () banked
  6393  004F4C  5151               	movf	(_fence_flag+1)& (0+255),w,b
  6394  004F4E  1843               	xorwf	??_verifica_fence^0,w,c
  6395  004F50  0BFE               	andlw	-2
  6396  004F52  1843               	xorwf	??_verifica_fence^0,w,c
  6397  004F54  6F51               	movwf	(_fence_flag+1)& (0+255),b
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;main.c: 288: if(fence_flag[0].point || fence_flag[1].point)
  6401  004F56  B150               	btfsc	_fence_flag& (0+255),0,b
  6402  004F58  D002               	goto	u15940
  6403                           
  6404                           ; BSR set to: 1
  6405  004F5A  A151               	btfss	(_fence_flag+1)& (0+255),0,b
  6406  004F5C  D009               	goto	l1580
  6407  004F5E                     u15940:
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;main.c: 289: {;main.c: 290: fence_flag[2].point = 1;
  6411  004F5E  8152               	bsf	(_fence_flag+2)& (0+255),0,b
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;main.c: 291: monta_sd(4, "FORA  ");
  6415  004F60  0E43               	movlw	low STR_20
  6416  004F62  6E10               	movwf	monta_sd@dado^0,c
  6417  004F64  0E62               	movlw	high STR_20
  6418  004F66  6E11               	movwf	(monta_sd@dado+1)^0,c
  6419  004F68  0E04               	movlw	4
  6420  004F6A  ECBF  F007         	call	_monta_sd
  6421                           
  6422                           ;main.c: 292: }
  6423  004F6E  0012               	return	
  6424  004F70                     l1580:
  6425                           
  6426                           ; BSR set to: 1
  6427                           ;main.c: 293: else;main.c: 294: {;main.c: 295: fence_flag[2].point = 0;
  6428  004F70  9152               	bcf	(_fence_flag+2)& (0+255),0,b
  6429                           
  6430                           ; BSR set to: 1
  6431                           ;main.c: 296: monta_sd(4, "DENTRO");
  6432  004F72  0E51               	movlw	low STR_21
  6433  004F74  6E10               	movwf	monta_sd@dado^0,c
  6434  004F76  0E62               	movlw	high STR_21
  6435  004F78  6E11               	movwf	(monta_sd@dado+1)^0,c
  6436  004F7A  0E04               	movlw	4
  6437  004F7C  ECBF  F007         	call	_monta_sd
  6438  004F80  0012               	return		;funcret
  6439  004F82                     __end_of_verifica_fence:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _verifica_plausibilidade_long *****************
  6443 ;; Defined at:
  6444 ;;		line 311 in file "bibliotecas/fence.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  posicao         1    9[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      unsigned char 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 3F/0
  6455 ;;		On exit  : 3F/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0
  6459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6461 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6462 ;;Total ram usage:        1 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    3
  6465 ;; This function calls:
  6466 ;;		_posicao_long
  6467 ;; This function is called by:
  6468 ;;		_verifica_fence
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text35
  6473  004E00                     __ptext35:
  6474                           	callstack 0
  6475  004E00                     _verifica_plausibilidade_long:
  6476                           	callstack 24
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;fence.c: 313: char posicao = posicao_long();
  6480                           
  6481                           ;incstack = 0
  6482  004E00  EC96  F02E         	call	_posicao_long	;wreg free
  6483  004E04  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6484                           
  6485                           ;fence.c: 314: switch(posicao)
  6486  004E06  D029               	goto	l12925
  6487  004E08                     l12875:
  6488                           
  6489                           ; BSR set to: 1
  6490                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6491  004E08  0100               	movlb	0	; () banked
  6492  004E0A  BFEE               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6493  004E0C  D00B               	goto	l12885
  6494                           
  6495                           ; BSR set to: 0
  6496  004E0E  BFF6               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6497  004E10  D007               	goto	u15600
  6498  004E12  51F6               	movf	(_poligono_ext+15)& (0+255),w,b
  6499  004E14  11F5               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6500  004E16  11F4               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6501  004E18  E105               	bnz	l12885
  6502  004E1A  05F3               	decf	(_poligono_ext+12)& (0+255),w,b
  6503  004E1C  B0D8               	btfsc	status,0,c
  6504  004E1E  D002               	goto	l12885
  6505  004E20                     u15600:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;fence.c: 320: {;fence.c: 321: return 0;
  6509  004E20  0E00               	movlw	0
  6510  004E22  0012               	return	
  6511  004E24                     l12885:
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6515  004E24  51EB               	movf	(_poligono_ext+4)& (0+255),w,b
  6516  004E26  11EC               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6517  004E28  11ED               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6518  004E2A  11EE               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6519  004E2C  B4D8               	btfsc	status,2,c
  6520  004E2E  D7F8               	goto	u15600
  6521                           
  6522                           ; BSR set to: 0
  6523  004E30  51F3               	movf	(_poligono_ext+12)& (0+255),w,b
  6524  004E32  11F4               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6525  004E34  11F5               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6526  004E36  11F6               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6527  004E38  B4D8               	btfsc	status,2,c
  6528  004E3A  D7F2               	goto	u15600
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6532  004E3C  0E01               	movlw	1
  6533  004E3E  0012               	return	
  6534  004E40                     l12899:
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6538  004E40  0100               	movlb	0	; () banked
  6539  004E42  BFEE               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6540  004E44  D007               	goto	u15630
  6541  004E46  51EE               	movf	(_poligono_ext+7)& (0+255),w,b
  6542  004E48  11ED               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6543  004E4A  11EC               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6544  004E4C  E1EB               	bnz	l12885
  6545  004E4E  05EB               	decf	(_poligono_ext+4)& (0+255),w,b
  6546  004E50  B0D8               	btfsc	status,0,c
  6547  004E52  D7E8               	goto	l12885
  6548  004E54                     u15630:
  6549                           
  6550                           ; BSR set to: 0
  6551  004E54  AFF6               	btfss	(_poligono_ext+15)& (0+255),7,b
  6552  004E56  D7E4               	goto	u15600
  6553  004E58  D7E5               	goto	l12885
  6554  004E5A                     l12925:
  6555                           
  6556                           ; BSR set to: 1
  6557  004E5A  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6558                           
  6559                           ; Switch size 1, requested type "simple"
  6560                           ; Number of cases is 1, Range of values is 45 to 45
  6561                           ; switch strategies available:
  6562                           ; Name         Instructions Cycles
  6563                           ; simple_byte            4     3 (average)
  6564                           ;	Chosen strategy is simple_byte
  6565  004E5C  0A2D               	xorlw	45	; case 45
  6566  004E5E  B4D8               	btfsc	status,2,c
  6567  004E60  D7D3               	goto	l12875
  6568  004E62  D7EE               	goto	l12899
  6569  004E64                     __end_of_verifica_plausibilidade_long:
  6570                           	callstack 0
  6571                           
  6572 ;; *************** function _posicao_long *****************
  6573 ;; Defined at:
  6574 ;;		line 661 in file "bibliotecas/GPS.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      unsigned char 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2
  6583 ;; Tracked objects:
  6584 ;;		On entry : 3F/0
  6585 ;;		On exit  : 3F/1
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6592 ;;Total ram usage:        0 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    2
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_verifica_plausibilidade_long
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text36
  6603  005D2C                     __ptext36:
  6604                           	callstack 0
  6605  005D2C                     _posicao_long:
  6606                           	callstack 24
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;GPS.c: 664: return rawLongitude[0];
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;incstack = 0
  6613  005D2C  0101               	movlb	1	; () banked
  6614  005D2E  519D               	movf	_rawLongitude& (0+255),w,b
  6615                           
  6616                           ; BSR set to: 1
  6617  005D30  0012               	return		;funcret
  6618  005D32                     __end_of_posicao_long:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _verifica_plausibilidade_lat *****************
  6622 ;; Defined at:
  6623 ;;		line 365 in file "bibliotecas/fence.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  posicao         1    9[COMRAM] unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      unsigned char 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 3F/1
  6634 ;;		On exit  : 3F/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0
  6638 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6640 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6641 ;;Total ram usage:        1 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    3
  6644 ;; This function calls:
  6645 ;;		_posicao_lat
  6646 ;; This function is called by:
  6647 ;;		_verifica_fence
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text37
  6652  004B60                     __ptext37:
  6653                           	callstack 0
  6654  004B60                     _verifica_plausibilidade_lat:
  6655                           	callstack 24
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;fence.c: 367: char posicao = posicao_lat();
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;incstack = 0
  6662  004B60  EC99  F02E         	call	_posicao_lat	;wreg free
  6663  004B64  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6664                           
  6665                           ;fence.c: 368: switch(posicao)
  6666  004B66  D033               	goto	l12989
  6667  004B68                     l12929:
  6668                           
  6669                           ; BSR set to: 1
  6670                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  6671  004B68  0100               	movlb	0	; () banked
  6672  004B6A  BFEA               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6673  004B6C  D007               	goto	u15670
  6674  004B6E  51EA               	movf	(_poligono_ext+3)& (0+255),w,b
  6675  004B70  11E9               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6676  004B72  11E8               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6677  004B74  E107               	bnz	l12939
  6678  004B76  05E7               	decf	_poligono_ext& (0+255),w,b
  6679  004B78  B0D8               	btfsc	status,0,c
  6680  004B7A  D004               	goto	l12939
  6681  004B7C                     u15670:
  6682                           
  6683                           ; BSR set to: 0
  6684  004B7C  BFF2               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6685  004B7E  D002               	goto	l12939
  6686  004B80                     u15680:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;fence.c: 374: {;fence.c: 375: return 0;
  6690  004B80  0E00               	movlw	0
  6691  004B82  0012               	return	
  6692  004B84                     l12939:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  6696  004B84  51E7               	movf	_poligono_ext& (0+255),w,b
  6697  004B86  11E8               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6698  004B88  11E9               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6699  004B8A  11EA               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6700  004B8C  B4D8               	btfsc	status,2,c
  6701  004B8E  D7F8               	goto	u15680
  6702                           
  6703                           ; BSR set to: 0
  6704  004B90  51EF               	movf	(_poligono_ext+8)& (0+255),w,b
  6705  004B92  11F0               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6706  004B94  11F1               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6707  004B96  11F2               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6708  004B98  B4D8               	btfsc	status,2,c
  6709  004B9A  D7F2               	goto	u15680
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  6713  004B9C  0E01               	movlw	1
  6714  004B9E  0012               	return	
  6715  004BA0                     l12953:
  6716                           
  6717                           ; BSR set to: 1
  6718                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6719  004BA0  0100               	movlb	0	; () banked
  6720  004BA2  BFEA               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6721  004BA4  D009               	goto	l12963
  6722                           
  6723                           ; BSR set to: 0
  6724  004BA6  BFF2               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6725  004BA8  D7EB               	goto	u15680
  6726  004BAA  51F2               	movf	(_poligono_ext+11)& (0+255),w,b
  6727  004BAC  11F1               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6728  004BAE  11F0               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6729  004BB0  E103               	bnz	l12963
  6730  004BB2  05EF               	decf	(_poligono_ext+8)& (0+255),w,b
  6731  004BB4  A0D8               	btfss	status,0,c
  6732  004BB6  D7E4               	goto	u15680
  6733  004BB8                     l12963:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  6737  004BB8  BFEA               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6738                           
  6739                           ; BSR set to: 0
  6740  004BBA  BFF2               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6741  004BBC  D7E1               	goto	u15680
  6742  004BBE  51F2               	movf	(_poligono_ext+11)& (0+255),w,b
  6743  004BC0  11F1               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6744  004BC2  11F0               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6745  004BC4  E1DF               	bnz	l12939
  6746  004BC6  05EF               	decf	(_poligono_ext+8)& (0+255),w,b
  6747  004BC8  A0D8               	btfss	status,0,c
  6748  004BCA  D7DA               	goto	u15680
  6749  004BCC  D7DB               	goto	l12939
  6750  004BCE                     l12989:
  6751                           
  6752                           ; BSR set to: 1
  6753  004BCE  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6754                           
  6755                           ; Switch size 1, requested type "simple"
  6756                           ; Number of cases is 1, Range of values is 45 to 45
  6757                           ; switch strategies available:
  6758                           ; Name         Instructions Cycles
  6759                           ; simple_byte            4     3 (average)
  6760                           ;	Chosen strategy is simple_byte
  6761  004BD0  0A2D               	xorlw	45	; case 45
  6762  004BD2  B4D8               	btfsc	status,2,c
  6763  004BD4  D7C9               	goto	l12929
  6764  004BD6  D7E4               	goto	l12953
  6765  004BD8                     __end_of_verifica_plausibilidade_lat:
  6766                           	callstack 0
  6767                           
  6768 ;; *************** function _posicao_lat *****************
  6769 ;; Defined at:
  6770 ;;		line 667 in file "bibliotecas/GPS.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      unsigned char 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2
  6779 ;; Tracked objects:
  6780 ;;		On entry : 3F/1
  6781 ;;		On exit  : 3F/1
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    2
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_verifica_plausibilidade_lat
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text38
  6799  005D32                     __ptext38:
  6800                           	callstack 0
  6801  005D32                     _posicao_lat:
  6802                           	callstack 24
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;GPS.c: 670: return rawLatitude[0];
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;incstack = 0
  6809  005D32  51B6               	movf	_rawLatitude& (0+255),w,b
  6810                           
  6811                           ; BSR set to: 1
  6812  005D34  0012               	return		;funcret
  6813  005D36                     __end_of_posicao_lat:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function _recebe_dado_gps *****************
  6817 ;; Defined at:
  6818 ;;		line 555 in file "main.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  timeout         1   10[COMRAM] unsigned char 
  6823 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/1
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0
  6834 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6836 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6837 ;;Total ram usage:        2 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    3
  6840 ;; This function calls:
  6841 ;;		_verifica_recep_gps
  6842 ;; This function is called by:
  6843 ;;		_verifica_fence
  6844 ;;		_disparo_gravacao
  6845 ;;		_troca_de_tela
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text39
  6850  005B10                     __ptext39:
  6851                           	callstack 0
  6852  005B10                     _recebe_dado_gps:
  6853                           	callstack 25
  6854                           
  6855                           ;main.c: 557: unsigned char flag_recebe = 0;
  6856                           
  6857                           ; BSR set to: 1
  6858                           ;incstack = 0
  6859  005B10  0E00               	movlw	0
  6860  005B12  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6861                           
  6862                           ;main.c: 558: unsigned char timeout = 10;
  6863  005B14  0E0A               	movlw	10
  6864  005B16  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6865                           
  6866                           ;main.c: 559: while(!flag_recebe && timeout>0)
  6867  005B18  D004               	goto	l12869
  6868  005B1A                     l12865:
  6869                           
  6870                           ;main.c: 560: {;main.c: 561: flag_recebe = verifica_recep_gps();
  6871  005B1A  ECB3  F02C         	call	_verifica_recep_gps	;wreg free
  6872  005B1E  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6873                           
  6874                           ; BSR set to: 1
  6875                           ;main.c: 562: timeout--;
  6876  005B20  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6877  005B22                     l12869:
  6878  005B22  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6879  005B24  A4D8               	btfss	status,2,c
  6880  005B26  0012               	return	
  6881  005B28  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6882  005B2A  B4D8               	btfsc	status,2,c
  6883  005B2C  0012               	return	
  6884  005B2E  D7F5               	goto	l12865
  6885  005B30                     __end_of_recebe_dado_gps:
  6886                           	callstack 0
  6887                           
  6888 ;; *************** function _verifica_recep_gps *****************
  6889 ;; Defined at:
  6890 ;;		line 735 in file "bibliotecas/GPS.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      unsigned char 
  6897 ;; Registers used:
  6898 ;;		wreg
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/1
  6901 ;;		On exit  : 3F/1
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6907 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6908 ;;Total ram usage:        0 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    2
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_recebe_dado_gps
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text40
  6919  005966                     __ptext40:
  6920                           	callstack 0
  6921  005966                     _verifica_recep_gps:
  6922                           	callstack 25
  6923                           
  6924                           ;GPS.c: 737: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6925                           
  6926                           ;incstack = 0
  6927  005966  0101               	movlb	1	; () banked
  6928  005968  B142               	btfsc	_gps_flag& (0+255),0,b
  6929                           
  6930                           ; BSR set to: 1
  6931  00596A  A143               	btfss	(_gps_flag+1)& (0+255),0,b
  6932  00596C  D00E               	goto	l12099
  6933                           
  6934                           ; BSR set to: 1
  6935  00596E  B144               	btfsc	(_gps_flag+2)& (0+255),0,b
  6936                           
  6937                           ; BSR set to: 1
  6938  005970  A145               	btfss	(_gps_flag+3)& (0+255),0,b
  6939  005972  D00B               	goto	l12099
  6940                           
  6941                           ; BSR set to: 1
  6942  005974  B146               	btfsc	(_gps_flag+4)& (0+255),0,b
  6943                           
  6944                           ; BSR set to: 1
  6945  005976  A147               	btfss	(_gps_flag+5)& (0+255),0,b
  6946  005978  D008               	goto	l12099
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;GPS.c: 738: {;GPS.c: 739: gps_flag[0].flag = 0;
  6950  00597A  9142               	bcf	_gps_flag& (0+255),0,b
  6951                           
  6952                           ;GPS.c: 740: gps_flag[1].flag = 0;
  6953  00597C  9143               	bcf	(_gps_flag+1)& (0+255),0,b
  6954                           
  6955                           ;GPS.c: 741: gps_flag[2].flag = 0;
  6956  00597E  9144               	bcf	(_gps_flag+2)& (0+255),0,b
  6957                           
  6958                           ;GPS.c: 742: gps_flag[3].flag = 0;
  6959  005980  9145               	bcf	(_gps_flag+3)& (0+255),0,b
  6960                           
  6961                           ;GPS.c: 743: gps_flag[4].flag = 0;
  6962  005982  9146               	bcf	(_gps_flag+4)& (0+255),0,b
  6963                           
  6964                           ;GPS.c: 744: gps_flag[5].flag = 0;
  6965  005984  9147               	bcf	(_gps_flag+5)& (0+255),0,b
  6966                           
  6967                           ; BSR set to: 1
  6968                           ;GPS.c: 745: return 1;
  6969  005986  0E01               	movlw	1
  6970  005988  0012               	return	
  6971  00598A                     l12099:
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;GPS.c: 747: else;GPS.c: 748: {;GPS.c: 750: return 0;
  6975  00598A  0E00               	movlw	0
  6976                           
  6977                           ; BSR set to: 1
  6978  00598C  0012               	return		;funcret
  6979  00598E                     __end_of_verifica_recep_gps:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _longitude_to_convert *****************
  6983 ;; Defined at:
  6984 ;;		line 642 in file "bibliotecas/GPS.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6989 ;;  i               1   12[BANK0 ] unsigned char 
  6990 ;;  j               1   11[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/1
  6997 ;;		On exit  : 3F/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0
  7001 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7003 ;;      Totals:         1      13       0       0       0       0       0       0       0
  7004 ;;Total ram usage:       14 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    7
  7007 ;; This function calls:
  7008 ;;		_armazena_ltlo
  7009 ;; This function is called by:
  7010 ;;		_verifica_fence
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text41
  7015  004AE6                     __ptext41:
  7016                           	callstack 0
  7017  004AE6                     _longitude_to_convert:
  7018                           	callstack 20
  7019                           
  7020                           ;GPS.c: 644: unsigned char i,j;;GPS.c: 645: unsigned char longitude[11];;GPS.c: 648: j =
      +                           0;
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;incstack = 0
  7024  004AE6  0E00               	movlw	0
  7025  004AE8  0100               	movlb	0	; () banked
  7026  004AEA  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  7027                           
  7028                           ;GPS.c: 649: for(i=0; i<12; i++)
  7029  004AEC  0E00               	movlw	0
  7030  004AEE  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  7031  004AF0                     l12645:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;GPS.c: 650: {;GPS.c: 651: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  7035  004AF0  0E9D               	movlw	low _rawLongitude
  7036  004AF2  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  7037  004AF4  6ED9               	movwf	fsr2l,c
  7038  004AF6  6ADA               	clrf	fsr2h,c
  7039  004AF8  0E01               	movlw	high _rawLongitude
  7040  004AFA  22DA               	addwfc	fsr2h,f,c
  7041  004AFC  50DF               	movf	indf2,w,c
  7042  004AFE  B4D8               	btfsc	status,2,c
  7043  004B00  D024               	goto	l12657
  7044                           
  7045                           ; BSR set to: 0
  7046  004B02  0E9D               	movlw	low _rawLongitude
  7047  004B04  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  7048  004B06  6ED9               	movwf	fsr2l,c
  7049  004B08  6ADA               	clrf	fsr2h,c
  7050  004B0A  0E01               	movlw	high _rawLongitude
  7051  004B0C  22DA               	addwfc	fsr2h,f,c
  7052  004B0E  0E2D               	movlw	45
  7053  004B10  18DE               	xorwf	postinc2,w,c
  7054  004B12  B4D8               	btfsc	status,2,c
  7055  004B14  D01A               	goto	l12657
  7056                           
  7057                           ; BSR set to: 0
  7058  004B16  0E9D               	movlw	low _rawLongitude
  7059  004B18  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  7060  004B1A  6ED9               	movwf	fsr2l,c
  7061  004B1C  6ADA               	clrf	fsr2h,c
  7062  004B1E  0E01               	movlw	high _rawLongitude
  7063  004B20  22DA               	addwfc	fsr2h,f,c
  7064  004B22  0E2E               	movlw	46
  7065  004B24  18DE               	xorwf	postinc2,w,c
  7066  004B26  B4D8               	btfsc	status,2,c
  7067  004B28  D010               	goto	l12657
  7068                           
  7069                           ; BSR set to: 0
  7070  004B2A  0E0A               	movlw	10
  7071  004B2C  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  7072  004B2E  D00D               	goto	l12657
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;GPS.c: 652: {;GPS.c: 654: longitude[j] = rawLongitude[i];
  7076  004B30  0E9D               	movlw	low _rawLongitude
  7077  004B32  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  7078  004B34  6ED9               	movwf	fsr2l,c
  7079  004B36  6ADA               	clrf	fsr2h,c
  7080  004B38  0E01               	movlw	high _rawLongitude
  7081  004B3A  22DA               	addwfc	fsr2h,f,c
  7082  004B3C  516B               	movf	longitude_to_convert@j& (0+255),w,b
  7083  004B3E  0F60               	addlw	low longitude_to_convert@longitude
  7084  004B40  6EE1               	movwf	fsr1l,c
  7085  004B42  6AE2               	clrf	fsr1h,c
  7086  004B44  CFDF FFE7          	movff	indf2,indf1
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;GPS.c: 655: j++;
  7090  004B48  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  7091  004B4A                     l12657:
  7092                           
  7093                           ; BSR set to: 0
  7094  004B4A  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  7095                           
  7096                           ; BSR set to: 0
  7097  004B4C  0E0B               	movlw	11
  7098  004B4E  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  7099  004B50  D7CF               	goto	l12645
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;GPS.c: 656: };GPS.c: 657: };GPS.c: 658: armazena_ltlo(longitude, 0);
  7103  004B52  0E60               	movlw	low longitude_to_convert@longitude
  7104  004B54  6E3E               	movwf	armazena_ltlo@buffer^0,c
  7105  004B56  0E00               	movlw	0
  7106  004B58  6E3F               	movwf	armazena_ltlo@index^0,c
  7107  004B5A  ECAF  F024         	call	_armazena_ltlo	;wreg free
  7108                           
  7109                           ; BSR set to: 0
  7110  004B5E  0012               	return		;funcret
  7111  004B60                     __end_of_longitude_to_convert:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function _latitude_to_convert *****************
  7115 ;; Defined at:
  7116 ;;		line 617 in file "bibliotecas/GPS.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  7121 ;;  i               1   10[BANK0 ] unsigned char 
  7122 ;;  j               1    9[BANK0 ] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      void 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 3F/0
  7129 ;;		On exit  : 3F/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0
  7133 ;;      Locals:         0      11       0       0       0       0       0       0       0
  7134 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7135 ;;      Totals:         1      11       0       0       0       0       0       0       0
  7136 ;;Total ram usage:       12 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    7
  7139 ;; This function calls:
  7140 ;;		_armazena_ltlo
  7141 ;; This function is called by:
  7142 ;;		_verifica_fence
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text42
  7147  004BD8                     __ptext42:
  7148                           	callstack 0
  7149  004BD8                     _latitude_to_convert:
  7150                           	callstack 20
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;GPS.c: 619: unsigned char i,j;;GPS.c: 620: unsigned char latitude[9];;GPS.c: 623: j = 0
      +                          ;
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;incstack = 0
  7157  004BD8  0E00               	movlw	0
  7158  004BDA  6F69               	movwf	latitude_to_convert@j& (0+255),b
  7159                           
  7160                           ;GPS.c: 624: for(i=0; i<12; i++)
  7161  004BDC  0E00               	movlw	0
  7162  004BDE  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  7163  004BE0                     l12621:
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;GPS.c: 625: {;GPS.c: 626: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  7167  004BE0  0EB6               	movlw	low _rawLatitude
  7168  004BE2  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  7169  004BE4  6ED9               	movwf	fsr2l,c
  7170  004BE6  6ADA               	clrf	fsr2h,c
  7171  004BE8  0E01               	movlw	high _rawLatitude
  7172  004BEA  22DA               	addwfc	fsr2h,f,c
  7173  004BEC  50DF               	movf	indf2,w,c
  7174  004BEE  B4D8               	btfsc	status,2,c
  7175  004BF0  D024               	goto	l12633
  7176                           
  7177                           ; BSR set to: 0
  7178  004BF2  0EB6               	movlw	low _rawLatitude
  7179  004BF4  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  7180  004BF6  6ED9               	movwf	fsr2l,c
  7181  004BF8  6ADA               	clrf	fsr2h,c
  7182  004BFA  0E01               	movlw	high _rawLatitude
  7183  004BFC  22DA               	addwfc	fsr2h,f,c
  7184  004BFE  0E2D               	movlw	45
  7185  004C00  18DE               	xorwf	postinc2,w,c
  7186  004C02  B4D8               	btfsc	status,2,c
  7187  004C04  D01A               	goto	l12633
  7188                           
  7189                           ; BSR set to: 0
  7190  004C06  0EB6               	movlw	low _rawLatitude
  7191  004C08  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  7192  004C0A  6ED9               	movwf	fsr2l,c
  7193  004C0C  6ADA               	clrf	fsr2h,c
  7194  004C0E  0E01               	movlw	high _rawLatitude
  7195  004C10  22DA               	addwfc	fsr2h,f,c
  7196  004C12  0E2E               	movlw	46
  7197  004C14  18DE               	xorwf	postinc2,w,c
  7198  004C16  B4D8               	btfsc	status,2,c
  7199  004C18  D010               	goto	l12633
  7200                           
  7201                           ; BSR set to: 0
  7202  004C1A  0E09               	movlw	9
  7203  004C1C  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  7204  004C1E  D00D               	goto	l12633
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;GPS.c: 627: {;GPS.c: 628: latitude[j] = rawLatitude[i];
  7208  004C20  0EB6               	movlw	low _rawLatitude
  7209  004C22  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  7210  004C24  6ED9               	movwf	fsr2l,c
  7211  004C26  6ADA               	clrf	fsr2h,c
  7212  004C28  0E01               	movlw	high _rawLatitude
  7213  004C2A  22DA               	addwfc	fsr2h,f,c
  7214  004C2C  5169               	movf	latitude_to_convert@j& (0+255),w,b
  7215  004C2E  0F60               	addlw	low latitude_to_convert@latitude
  7216  004C30  6EE1               	movwf	fsr1l,c
  7217  004C32  6AE2               	clrf	fsr1h,c
  7218  004C34  CFDF FFE7          	movff	indf2,indf1
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;GPS.c: 629: j++;
  7222  004C38  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  7223  004C3A                     l12633:
  7224                           
  7225                           ; BSR set to: 0
  7226  004C3A  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  7227                           
  7228                           ; BSR set to: 0
  7229  004C3C  0E0B               	movlw	11
  7230  004C3E  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  7231  004C40  D7CF               	goto	l12621
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;GPS.c: 630: };GPS.c: 631: };GPS.c: 632: armazena_ltlo(latitude, 1);
  7235  004C42  0E60               	movlw	low latitude_to_convert@latitude
  7236  004C44  6E3E               	movwf	armazena_ltlo@buffer^0,c
  7237  004C46  0E01               	movlw	1
  7238  004C48  6E3F               	movwf	armazena_ltlo@index^0,c
  7239  004C4A  ECAF  F024         	call	_armazena_ltlo	;wreg free
  7240                           
  7241                           ; BSR set to: 0
  7242  004C4E  0012               	return		;funcret
  7243  004C50                     __end_of_latitude_to_convert:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _armazena_ltlo *****************
  7247 ;; Defined at:
  7248 ;;		line 64 in file "bibliotecas/fence.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  7251 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  7252 ;;  index           1   62[COMRAM] unsigned char 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  i               1   64[COMRAM] unsigned char 
  7255 ;;  j               1   63[COMRAM] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 3F/0
  7262 ;;		On exit  : 3F/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7265 ;;      Params:         2       0       0       0       0       0       0       0       0
  7266 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7268 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7269 ;;Total ram usage:        4 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    6
  7272 ;; This function calls:
  7273 ;;		_diferenca
  7274 ;; This function is called by:
  7275 ;;		_latitude_to_convert
  7276 ;;		_longitude_to_convert
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text43
  7281  00495E                     __ptext43:
  7282                           	callstack 0
  7283  00495E                     _armazena_ltlo:
  7284                           	callstack 20
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;incstack = 0
  7291  00495E  D038               	goto	l12067
  7292  004960                     l12029:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;fence.c: 75: j = 0;
  7296  004960  0E00               	movlw	0
  7297  004962  6E40               	movwf	armazena_ltlo@j^0,c
  7298                           
  7299                           ;fence.c: 76: for(i=0; i<10; i++)
  7300  004964  0E00               	movlw	0
  7301  004966  6E41               	movwf	armazena_ltlo@i^0,c
  7302  004968                     l12035:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  7306  004968  503E               	movf	armazena_ltlo@buffer^0,w,c
  7307  00496A  6ED9               	movwf	fsr2l,c
  7308  00496C  6ADA               	clrf	fsr2h,c
  7309  00496E  50DF               	movf	indf2,w,c
  7310  004970  B4D8               	btfsc	status,2,c
  7311  004972  D00C               	goto	l12041
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  7315  004974  503E               	movf	armazena_ltlo@buffer^0,w,c
  7316  004976  6ED9               	movwf	fsr2l,c
  7317  004978  6ADA               	clrf	fsr2h,c
  7318  00497A  0E00               	movlw	low _dado
  7319  00497C  2440               	addwf	armazena_ltlo@j^0,w,c
  7320  00497E  6EE1               	movwf	fsr1l,c
  7321  004980  6AE2               	clrf	fsr1h,c
  7322  004982  0E01               	movlw	high _dado
  7323  004984  22E2               	addwfc	fsr1h,f,c
  7324  004986  CFDF FFE7          	movff	indf2,indf1
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;fence.c: 82: j++;
  7328  00498A  2A40               	incf	armazena_ltlo@j^0,f,c
  7329  00498C                     l12041:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;fence.c: 83: };fence.c: 85: buffer++;
  7333  00498C  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  7334                           
  7335                           ; BSR set to: 0
  7336  00498E  2A41               	incf	armazena_ltlo@i^0,f,c
  7337                           
  7338                           ; BSR set to: 0
  7339  004990  0E09               	movlw	9
  7340  004992  6441               	cpfsgt	armazena_ltlo@i^0,c
  7341  004994  D7E9               	goto	l12035
  7342  004996  D021               	goto	l12069
  7343  004998                     l12047:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;fence.c: 91: j = 0;
  7347  004998  0E00               	movlw	0
  7348  00499A  6E40               	movwf	armazena_ltlo@j^0,c
  7349                           
  7350                           ;fence.c: 92: for(i=0; i<11; i++)
  7351  00499C  0E00               	movlw	0
  7352  00499E  6E41               	movwf	armazena_ltlo@i^0,c
  7353  0049A0                     l12053:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  7357  0049A0  503E               	movf	armazena_ltlo@buffer^0,w,c
  7358  0049A2  6ED9               	movwf	fsr2l,c
  7359  0049A4  6ADA               	clrf	fsr2h,c
  7360  0049A6  50DF               	movf	indf2,w,c
  7361  0049A8  B4D8               	btfsc	status,2,c
  7362  0049AA  D00C               	goto	l12059
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  7366  0049AC  503E               	movf	armazena_ltlo@buffer^0,w,c
  7367  0049AE  6ED9               	movwf	fsr2l,c
  7368  0049B0  6ADA               	clrf	fsr2h,c
  7369  0049B2  0E00               	movlw	low _dado
  7370  0049B4  2440               	addwf	armazena_ltlo@j^0,w,c
  7371  0049B6  6EE1               	movwf	fsr1l,c
  7372  0049B8  6AE2               	clrf	fsr1h,c
  7373  0049BA  0E01               	movlw	high _dado
  7374  0049BC  22E2               	addwfc	fsr1h,f,c
  7375  0049BE  CFDF FFE7          	movff	indf2,indf1
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;fence.c: 98: j++;
  7379  0049C2  2A40               	incf	armazena_ltlo@j^0,f,c
  7380  0049C4                     l12059:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;fence.c: 99: };fence.c: 101: buffer++;
  7384  0049C4  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  7385                           
  7386                           ; BSR set to: 0
  7387  0049C6  2A41               	incf	armazena_ltlo@i^0,f,c
  7388                           
  7389                           ; BSR set to: 0
  7390  0049C8  0E0A               	movlw	10
  7391  0049CA  6441               	cpfsgt	armazena_ltlo@i^0,c
  7392  0049CC  D7E9               	goto	l12053
  7393  0049CE  D005               	goto	l12069
  7394  0049D0                     l12067:
  7395                           
  7396                           ; BSR set to: 0
  7397  0049D0  503F               	movf	armazena_ltlo@index^0,w,c
  7398                           
  7399                           ; Switch size 1, requested type "simple"
  7400                           ; Number of cases is 1, Range of values is 1 to 1
  7401                           ; switch strategies available:
  7402                           ; Name         Instructions Cycles
  7403                           ; simple_byte            4     3 (average)
  7404                           ;	Chosen strategy is simple_byte
  7405  0049D2  0A01               	xorlw	1	; case 1
  7406  0049D4  B4D8               	btfsc	status,2,c
  7407  0049D6  D7C4               	goto	l12029
  7408  0049D8  D7DF               	goto	l12047
  7409  0049DA                     l12069:
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;fence.c: 108: diferenca(index);
  7413  0049DA  503F               	movf	armazena_ltlo@index^0,w,c
  7414  0049DC  EC6C  F020         	call	_diferenca
  7415                           
  7416                           ; BSR set to: 0
  7417  0049E0  0012               	return		;funcret
  7418  0049E2                     __end_of_armazena_ltlo:
  7419                           	callstack 0
  7420                           
  7421 ;; *************** function _diferenca *****************
  7422 ;; Defined at:
  7423 ;;		line 145 in file "bibliotecas/fence.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  index           1    wreg     unsigned char 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  index           1   52[COMRAM] unsigned char 
  7428 ;;  valor_long      4   57[COMRAM] unsigned long 
  7429 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 3F/0
  7436 ;;		On exit  : 3F/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7439 ;;      Params:         0       0       0       0       0       0       0       0       0
  7440 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7442 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7443 ;;Total ram usage:        9 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    5
  7446 ;; This function calls:
  7447 ;;		_convert_to_int
  7448 ;;		_convert_to_int_point_lat
  7449 ;;		_convert_to_int_point_long
  7450 ;; This function is called by:
  7451 ;;		_armazena_ltlo
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text44
  7456  0040D8                     __ptext44:
  7457                           	callstack 0
  7458  0040D8                     _diferenca:
  7459                           	callstack 20
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;incstack = 0
  7463                           ;diferenca@index stored from wreg
  7464  0040D8  6E35               	movwf	diferenca@index^0,c
  7465                           
  7466                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7467  0040DA  D062               	goto	l11965
  7468  0040DC                     l11951:
  7469                           
  7470                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7471  0040DC  EC72  F028         	call	_convert_to_int_point_lat	;wreg free
  7472  0040E0  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7473  0040E4  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7474  0040E8  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7475  0040EC  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7476                           
  7477                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7478  0040F0  0E4F               	movlw	low _fence_diff_lat
  7479  0040F2  6E24               	movwf	convert_to_int@p_buff^0,c
  7480  0040F4  0E61               	movlw	high _fence_diff_lat
  7481  0040F6  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7482  0040F8  EC11  F02D         	call	_convert_to_int	;wreg free
  7483  0040FC  5036               	movf	diferenca@valor_lat^0,w,c
  7484  0040FE  5C24               	subwf	?_convert_to_int^0,w,c
  7485  004100  0100               	movlb	0	; () banked
  7486  004102  6FE7               	movwf	_poligono_ext& (0+255),b
  7487  004104  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7488  004106  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7489  004108  6FE8               	movwf	(_poligono_ext+1)& (0+255),b
  7490  00410A  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7491  00410C  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7492  00410E  6FE9               	movwf	(_poligono_ext+2)& (0+255),b
  7493  004110  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7494  004112  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7495  004114  6FEA               	movwf	(_poligono_ext+3)& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7499  004116  0E63               	movlw	low (_fence_diff_lat+20)
  7500  004118  6E24               	movwf	convert_to_int@p_buff^0,c
  7501  00411A  0E61               	movlw	high (_fence_diff_lat+20)
  7502  00411C  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7503  00411E  EC11  F02D         	call	_convert_to_int	;wreg free
  7504  004122  5036               	movf	diferenca@valor_lat^0,w,c
  7505  004124  5C24               	subwf	?_convert_to_int^0,w,c
  7506  004126  0100               	movlb	0	; () banked
  7507  004128  6FEF               	movwf	(_poligono_ext+8)& (0+255),b
  7508  00412A  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7509  00412C  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7510  00412E  6FF0               	movwf	(_poligono_ext+9)& (0+255),b
  7511  004130  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7512  004132  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7513  004134  6FF1               	movwf	(_poligono_ext+10)& (0+255),b
  7514  004136  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7515  004138  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7516  00413A  6FF2               	movwf	(_poligono_ext+11)& (0+255),b
  7517                           
  7518                           ;fence.c: 157: break;
  7519  00413C  0012               	return	
  7520  00413E                     l11957:
  7521                           
  7522                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7523  00413E  EC46  F028         	call	_convert_to_int_point_long	;wreg free
  7524  004142  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7525  004146  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7526  00414A  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7527  00414E  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7528                           
  7529                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7530  004152  0E23               	movlw	low _fence_diff_long
  7531  004154  6E24               	movwf	convert_to_int@p_buff^0,c
  7532  004156  0E61               	movlw	high _fence_diff_long
  7533  004158  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7534  00415A  EC11  F02D         	call	_convert_to_int	;wreg free
  7535  00415E  503A               	movf	diferenca@valor_long^0,w,c
  7536  004160  5C24               	subwf	?_convert_to_int^0,w,c
  7537  004162  0100               	movlb	0	; () banked
  7538  004164  6FEB               	movwf	(_poligono_ext+4)& (0+255),b
  7539  004166  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7540  004168  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7541  00416A  6FEC               	movwf	(_poligono_ext+5)& (0+255),b
  7542  00416C  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7543  00416E  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7544  004170  6FED               	movwf	(_poligono_ext+6)& (0+255),b
  7545  004172  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7546  004174  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7547  004176  6FEE               	movwf	(_poligono_ext+7)& (0+255),b
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7551  004178  0E39               	movlw	low (_fence_diff_long+22)
  7552  00417A  6E24               	movwf	convert_to_int@p_buff^0,c
  7553  00417C  0E61               	movlw	high (_fence_diff_long+22)
  7554  00417E  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7555  004180  EC11  F02D         	call	_convert_to_int	;wreg free
  7556  004184  503A               	movf	diferenca@valor_long^0,w,c
  7557  004186  5C24               	subwf	?_convert_to_int^0,w,c
  7558  004188  0100               	movlb	0	; () banked
  7559  00418A  6FF3               	movwf	(_poligono_ext+12)& (0+255),b
  7560  00418C  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7561  00418E  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7562  004190  6FF4               	movwf	(_poligono_ext+13)& (0+255),b
  7563  004192  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7564  004194  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7565  004196  6FF5               	movwf	(_poligono_ext+14)& (0+255),b
  7566  004198  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7567  00419A  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7568  00419C  6FF6               	movwf	(_poligono_ext+15)& (0+255),b
  7569                           
  7570                           ;fence.c: 165: break;
  7571  00419E  0012               	return	
  7572  0041A0                     l11965:
  7573  0041A0  5035               	movf	diferenca@index^0,w,c
  7574                           
  7575                           ; Switch size 1, requested type "simple"
  7576                           ; Number of cases is 1, Range of values is 1 to 1
  7577                           ; switch strategies available:
  7578                           ; Name         Instructions Cycles
  7579                           ; simple_byte            4     3 (average)
  7580                           ;	Chosen strategy is simple_byte
  7581  0041A2  0A01               	xorlw	1	; case 1
  7582  0041A4  B4D8               	btfsc	status,2,c
  7583  0041A6  D79A               	goto	l11951
  7584  0041A8  D7CA               	goto	l11957
  7585  0041AA                     __end_of_diferenca:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _convert_to_int_point_long *****************
  7589 ;; Defined at:
  7590 ;;		line 455 in file "bibliotecas/fence.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;		None
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7595 ;;  p               3    0        PTR unsigned char 
  7596 ;;  i               1   50[COMRAM] unsigned char 
  7597 ;;  j               1   49[COMRAM] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   35[COMRAM] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7607 ;;      Params:         4       0       0       0       0       0       0       0       0
  7608 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7610 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7611 ;;Total ram usage:       16 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    4
  7614 ;; This function calls:
  7615 ;;		_atol
  7616 ;; This function is called by:
  7617 ;;		_diferenca
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text45
  7622  00508C                     __ptext45:
  7623                           	callstack 0
  7624  00508C                     _convert_to_int_point_long:
  7625                           	callstack 20
  7626                           
  7627                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;incstack = 0
  7631  00508C  0E00               	movlw	0
  7632  00508E  6E32               	movwf	convert_to_int_point_long@j^0,c
  7633                           
  7634                           ;fence.c: 463: for(i=0; i<10;i++)
  7635  005090  0E00               	movlw	0
  7636  005092  6E33               	movwf	convert_to_int_point_long@i^0,c
  7637  005094                     l11569:
  7638                           
  7639                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  7640  005094  0E00               	movlw	low _dado
  7641  005096  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7642  005098  6ED9               	movwf	fsr2l,c
  7643  00509A  6ADA               	clrf	fsr2h,c
  7644  00509C  0E01               	movlw	high _dado
  7645  00509E  22DA               	addwfc	fsr2h,f,c
  7646  0050A0  50DF               	movf	indf2,w,c
  7647  0050A2  B4D8               	btfsc	status,2,c
  7648  0050A4  D00D               	goto	l11575
  7649                           
  7650                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  7651  0050A6  0E00               	movlw	low _dado
  7652  0050A8  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7653  0050AA  6ED9               	movwf	fsr2l,c
  7654  0050AC  6ADA               	clrf	fsr2h,c
  7655  0050AE  0E01               	movlw	high _dado
  7656  0050B0  22DA               	addwfc	fsr2h,f,c
  7657  0050B2  5032               	movf	convert_to_int_point_long@j^0,w,c
  7658  0050B4  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7659  0050B6  6EE1               	movwf	fsr1l,c
  7660  0050B8  6AE2               	clrf	fsr1h,c
  7661  0050BA  CFDF FFE7          	movff	indf2,indf1
  7662                           
  7663                           ;fence.c: 469: j++;
  7664  0050BE  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7665  0050C0                     l11575:
  7666  0050C0  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7667  0050C2  0E09               	movlw	9
  7668  0050C4  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7669  0050C6  D7E6               	goto	l11569
  7670                           
  7671                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  7672  0050C8  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7673  0050CA  6E16               	movwf	atol@s^0,c
  7674  0050CC  6A17               	clrf	(atol@s+1)^0,c
  7675  0050CE  EC75  F01C         	call	_atol	;wreg free
  7676  0050D2  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7677  0050D6  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7678  0050DA  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7679  0050DE  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7680  0050E2  0012               	return		;funcret
  7681  0050E4                     __end_of_convert_to_int_point_long:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _convert_to_int_point_lat *****************
  7685 ;; Defined at:
  7686 ;;		line 428 in file "bibliotecas/fence.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7691 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7692 ;;		 -> NULL(0), 
  7693 ;;  i               1   51[COMRAM] unsigned char 
  7694 ;;  j               1   50[COMRAM] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  4   35[COMRAM] long 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7704 ;;      Params:         4       0       0       0       0       0       0       0       0
  7705 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7707 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7708 ;;Total ram usage:       17 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    4
  7711 ;; This function calls:
  7712 ;;		_atol
  7713 ;; This function is called by:
  7714 ;;		_diferenca
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text46
  7719  0050E4                     __ptext46:
  7720                           	callstack 0
  7721  0050E4                     _convert_to_int_point_lat:
  7722                           	callstack 20
  7723                           
  7724                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  7725                           
  7726                           ;incstack = 0
  7727  0050E4  0E00               	movlw	0
  7728  0050E6  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7729                           
  7730                           ;fence.c: 436: for(i=0; i<10;i++)
  7731  0050E8  0E00               	movlw	0
  7732  0050EA  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7733  0050EC                     l11543:
  7734                           
  7735                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  7736  0050EC  0E00               	movlw	low _dado
  7737  0050EE  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7738  0050F0  6ED9               	movwf	fsr2l,c
  7739  0050F2  6ADA               	clrf	fsr2h,c
  7740  0050F4  0E01               	movlw	high _dado
  7741  0050F6  22DA               	addwfc	fsr2h,f,c
  7742  0050F8  50DF               	movf	indf2,w,c
  7743  0050FA  B4D8               	btfsc	status,2,c
  7744  0050FC  D00D               	goto	l11549
  7745                           
  7746                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  7747  0050FE  0E00               	movlw	low _dado
  7748  005100  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7749  005102  6ED9               	movwf	fsr2l,c
  7750  005104  6ADA               	clrf	fsr2h,c
  7751  005106  0E01               	movlw	high _dado
  7752  005108  22DA               	addwfc	fsr2h,f,c
  7753  00510A  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7754  00510C  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7755  00510E  6EE1               	movwf	fsr1l,c
  7756  005110  6AE2               	clrf	fsr1h,c
  7757  005112  CFDF FFE7          	movff	indf2,indf1
  7758                           
  7759                           ;fence.c: 442: j++;
  7760  005116  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7761  005118                     l11549:
  7762  005118  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7763  00511A  0E09               	movlw	9
  7764  00511C  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7765  00511E  D7E6               	goto	l11543
  7766                           
  7767                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  7768  005120  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7769  005122  6E16               	movwf	atol@s^0,c
  7770  005124  6A17               	clrf	(atol@s+1)^0,c
  7771  005126  EC75  F01C         	call	_atol	;wreg free
  7772  00512A  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7773  00512E  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7774  005132  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7775  005136  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7776  00513A  0012               	return		;funcret
  7777  00513C                     __end_of_convert_to_int_point_lat:
  7778                           	callstack 0
  7779                           
  7780 ;; *************** function _convert_to_int *****************
  7781 ;; Defined at:
  7782 ;;		line 420 in file "bibliotecas/fence.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7785 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  4   35[COMRAM] long 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7797 ;;      Params:         4       0       0       0       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7800 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7801 ;;Total ram usage:        4 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    4
  7804 ;; This function calls:
  7805 ;;		_atol
  7806 ;; This function is called by:
  7807 ;;		_diferenca
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text47
  7812  005A22                     __ptext47:
  7813                           	callstack 0
  7814  005A22                     _convert_to_int:
  7815                           	callstack 20
  7816                           
  7817                           ;fence.c: 423: p_buff++;
  7818                           
  7819                           ;incstack = 0
  7820  005A22  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7821  005A24  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7822                           
  7823                           ;fence.c: 424: return atol(p_buff);
  7824  005A26  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7825  005A2A  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7826  005A2E  EC75  F01C         	call	_atol	;wreg free
  7827  005A32  C016  F024         	movff	?_atol,?_convert_to_int
  7828  005A36  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7829  005A3A  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7830  005A3E  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7831  005A42  0012               	return		;funcret
  7832  005A44                     __end_of_convert_to_int:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _atol *****************
  7836 ;; Defined at:
  7837 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7840 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  a               4   30[COMRAM] long 
  7843 ;;  c               1   34[COMRAM] unsigned char 
  7844 ;;  sign            1   29[COMRAM] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  4   21[COMRAM] long 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7854 ;;      Params:         4       0       0       0       0       0       0       0       0
  7855 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7857 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7858 ;;Total ram usage:       14 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    3
  7861 ;; This function calls:
  7862 ;;		___lmul
  7863 ;;		_isdigit
  7864 ;; This function is called by:
  7865 ;;		_convert_to_int
  7866 ;;		_convert_to_int_point_lat
  7867 ;;		_convert_to_int_point_long
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text48
  7872  0038EA                     __ptext48:
  7873                           	callstack 0
  7874  0038EA                     _atol:
  7875                           	callstack 20
  7876                           
  7877                           ;incstack = 0
  7878  0038EA  C016  FFF6         	movff	atol@s,tblptrl
  7879  0038EE  C017  FFF7         	movff	atol@s+1,tblptrh
  7880  0038F2  6AF8               	clrf	tblptru,c
  7881  0038F4  0E07               	movlw	(high __ramtop+-1)
  7882  0038F6  64F7               	cpfsgt	tblptrh,c
  7883  0038F8  D003               	bra	u12857
  7884  0038FA  0008               	tblrd		*
  7885  0038FC  50F5               	movf	tablat,w,c
  7886  0038FE  D005               	bra	u12850
  7887  003900                     u12857:
  7888  003900  CFF6 FFE1          	movff	tblptrl,fsr1l
  7889  003904  CFF7 FFE2          	movff	tblptrh,fsr1h
  7890  003908  50E7               	movf	indf1,w,c
  7891  00390A                     u12850:
  7892  00390A  6E23               	movwf	atol@c^0,c
  7893  00390C  4A16               	infsnz	atol@s^0,f,c
  7894  00390E  2A17               	incf	(atol@s+1)^0,f,c
  7895  003910  0E20               	movlw	32
  7896  003912  1823               	xorwf	atol@c^0,w,c
  7897  003914  B4D8               	btfsc	status,2,c
  7898  003916  D7E9               	goto	_atol
  7899  003918  0E09               	movlw	9
  7900  00391A  1823               	xorwf	atol@c^0,w,c
  7901  00391C  B4D8               	btfsc	status,2,c
  7902  00391E  D7E5               	goto	_atol
  7903  003920  0E00               	movlw	0
  7904  003922  6E1F               	movwf	atol@a^0,c
  7905  003924  0E00               	movlw	0
  7906  003926  6E20               	movwf	(atol@a+1)^0,c
  7907  003928  0E00               	movlw	0
  7908  00392A  6E21               	movwf	(atol@a+2)^0,c
  7909  00392C  0E00               	movlw	0
  7910  00392E  6E22               	movwf	(atol@a+3)^0,c
  7911  003930  0E00               	movlw	0
  7912  003932  6E1E               	movwf	atol@sign^0,c
  7913  003934  0E2D               	movlw	45
  7914  003936  1823               	xorwf	atol@c^0,w,c
  7915  003938  A4D8               	btfss	status,2,c
  7916  00393A  D015               	goto	l11273
  7917  00393C  2A1E               	incf	atol@sign^0,f,c
  7918  00393E                     l11269:
  7919  00393E  C016  FFF6         	movff	atol@s,tblptrl
  7920  003942  C017  FFF7         	movff	atol@s+1,tblptrh
  7921  003946  6AF8               	clrf	tblptru,c
  7922  003948  0E07               	movlw	(high __ramtop+-1)
  7923  00394A  64F7               	cpfsgt	tblptrh,c
  7924  00394C  D003               	bra	u12897
  7925  00394E  0008               	tblrd		*
  7926  003950  50F5               	movf	tablat,w,c
  7927  003952  D005               	bra	u12890
  7928  003954                     u12897:
  7929  003954  CFF6 FFE1          	movff	tblptrl,fsr1l
  7930  003958  CFF7 FFE2          	movff	tblptrh,fsr1h
  7931  00395C  50E7               	movf	indf1,w,c
  7932  00395E                     u12890:
  7933  00395E  6E23               	movwf	atol@c^0,c
  7934  003960  4A16               	infsnz	atol@s^0,f,c
  7935  003962  2A17               	incf	(atol@s+1)^0,f,c
  7936  003964  D028               	goto	l11285
  7937  003966                     l11273:
  7938  003966  0E2B               	movlw	43
  7939  003968  1823               	xorwf	atol@c^0,w,c
  7940  00396A  B4D8               	btfsc	status,2,c
  7941  00396C  D7E8               	goto	l11269
  7942  00396E  D023               	goto	l11285
  7943  003970                     l11279:
  7944  003970  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7945  003974  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7946  003978  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7947  00397C  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7948  003980  0E0A               	movlw	10
  7949  003982  6E0E               	movwf	___lmul@multiplicand^0,c
  7950  003984  0E00               	movlw	0
  7951  003986  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7952  003988  0E00               	movlw	0
  7953  00398A  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7954  00398C  0E00               	movlw	0
  7955  00398E  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7956  003990  ECCA  F028         	call	___lmul	;wreg free
  7957  003994  C023  F01A         	movff	atol@c,??_atol
  7958  003998  0ED0               	movlw	208
  7959  00399A  261A               	addwf	??_atol^0,f,c
  7960  00399C  501A               	movf	??_atol^0,w,c
  7961  00399E  240A               	addwf	?___lmul^0,w,c
  7962  0039A0  6E1F               	movwf	atol@a^0,c
  7963  0039A2  0E00               	movlw	0
  7964  0039A4  200B               	addwfc	(?___lmul+1)^0,w,c
  7965  0039A6  6E20               	movwf	(atol@a+1)^0,c
  7966  0039A8  0E00               	movlw	0
  7967  0039AA  200C               	addwfc	(?___lmul+2)^0,w,c
  7968  0039AC  6E21               	movwf	(atol@a+2)^0,c
  7969  0039AE  0E00               	movlw	0
  7970  0039B0  200D               	addwfc	(?___lmul+3)^0,w,c
  7971  0039B2  6E22               	movwf	(atol@a+3)^0,c
  7972  0039B4  D7C4               	goto	l11269
  7973  0039B6                     l11285:
  7974  0039B6  5023               	movf	atol@c^0,w,c
  7975  0039B8  ECC7  F02D         	call	_isdigit
  7976  0039BC  B0D8               	btfsc	status,0,c
  7977  0039BE  D7D8               	goto	l11279
  7978  0039C0  501E               	movf	atol@sign^0,w,c
  7979  0039C2  B4D8               	btfsc	status,2,c
  7980  0039C4  D01A               	goto	l2443
  7981  0039C6  C01F  F01A         	movff	atol@a,??_atol
  7982  0039CA  C020  F01B         	movff	atol@a+1,??_atol+1
  7983  0039CE  C021  F01C         	movff	atol@a+2,??_atol+2
  7984  0039D2  C022  F01D         	movff	atol@a+3,??_atol+3
  7985  0039D6  1E1A               	comf	??_atol^0,f,c
  7986  0039D8  1E1B               	comf	(??_atol+1)^0,f,c
  7987  0039DA  1E1C               	comf	(??_atol+2)^0,f,c
  7988  0039DC  1E1D               	comf	(??_atol+3)^0,f,c
  7989  0039DE  2A1A               	incf	??_atol^0,f,c
  7990  0039E0  0E00               	movlw	0
  7991  0039E2  221B               	addwfc	(??_atol+1)^0,f,c
  7992  0039E4  221C               	addwfc	(??_atol+2)^0,f,c
  7993  0039E6  221D               	addwfc	(??_atol+3)^0,f,c
  7994  0039E8  C01A  F016         	movff	??_atol,?_atol
  7995  0039EC  C01B  F017         	movff	??_atol+1,?_atol+1
  7996  0039F0  C01C  F018         	movff	??_atol+2,?_atol+2
  7997  0039F4  C01D  F019         	movff	??_atol+3,?_atol+3
  7998  0039F8  0012               	return	
  7999  0039FA                     l2443:
  8000  0039FA  C01F  F016         	movff	atol@a,?_atol
  8001  0039FE  C020  F017         	movff	atol@a+1,?_atol+1
  8002  003A02  C021  F018         	movff	atol@a+2,?_atol+2
  8003  003A06  C022  F019         	movff	atol@a+3,?_atol+3
  8004  003A0A  0012               	return		;funcret
  8005  003A0C                     __end_of_atol:
  8006                           	callstack 0
  8007                           
  8008 ;; *************** function _itoa *****************
  8009 ;; Defined at:
  8010 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  buf             2   25[COMRAM] PTR unsigned char 
  8013 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  8014 ;;  val             2   27[COMRAM] int 
  8015 ;;  base            2   29[COMRAM] int 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  cp              2    0        PTR unsigned char 
  8018 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2   25[COMRAM] PTR unsigned char 
  8021 ;; Registers used:
  8022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 3F/2
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8028 ;;      Params:         6       0       0       0       0       0       0       0       0
  8029 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8031 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8032 ;;Total ram usage:        8 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    4
  8035 ;; This function calls:
  8036 ;;		_utoa
  8037 ;; This function is called by:
  8038 ;;		_disparo_gravacao
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text49
  8043  00572E                     __ptext49:
  8044                           	callstack 0
  8045  00572E                     _itoa:
  8046                           	callstack 24
  8047                           
  8048                           ; BSR set to: 2
  8049                           
  8050                           ;incstack = 0
  8051  00572E  AE1D               	btfss	(itoa@val+1)^0,7,c
  8052  005730  D00C               	goto	l13637
  8053                           
  8054                           ; BSR set to: 2
  8055  005732  C01A  FFD9         	movff	itoa@buf,fsr2l
  8056  005736  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  8057  00573A  0E2D               	movlw	45
  8058  00573C  6EDF               	movwf	indf2,c
  8059                           
  8060                           ; BSR set to: 2
  8061  00573E  4A1A               	infsnz	itoa@buf^0,f,c
  8062  005740  2A1B               	incf	(itoa@buf+1)^0,f,c
  8063                           
  8064                           ; BSR set to: 2
  8065  005742  6C1C               	negf	itoa@val^0,c
  8066  005744  1E1D               	comf	(itoa@val+1)^0,f,c
  8067  005746  B0D8               	btfsc	status,0,c
  8068  005748  2A1D               	incf	(itoa@val+1)^0,f,c
  8069  00574A                     l13637:
  8070                           
  8071                           ; BSR set to: 2
  8072  00574A  C01A  F011         	movff	itoa@buf,utoa@buf
  8073  00574E  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  8074  005752  C01C  F013         	movff	itoa@val,utoa@val
  8075  005756  C01D  F014         	movff	itoa@val+1,utoa@val+1
  8076  00575A  C01E  F015         	movff	itoa@base,utoa@base
  8077  00575E  C01F  F016         	movff	itoa@base+1,utoa@base+1
  8078  005762  EC9D  F022         	call	_utoa	;wreg free
  8079  005766  0012               	return		;funcret
  8080  005768                     __end_of_itoa:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function _utoa *****************
  8084 ;; Defined at:
  8085 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  buf             2   16[COMRAM] PTR unsigned char 
  8088 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  8089 ;;  val             2   18[COMRAM] unsigned int 
  8090 ;;  base            2   20[COMRAM] int 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  v               2   22[COMRAM] unsigned int 
  8093 ;;  c               1   24[COMRAM] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2   16[COMRAM] PTR unsigned char 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 3F/2
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8103 ;;      Params:         6       0       0       0       0       0       0       0       0
  8104 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8106 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8107 ;;Total ram usage:        9 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    3
  8110 ;; This function calls:
  8111 ;;		___lwdiv
  8112 ;;		___lwmod
  8113 ;; This function is called by:
  8114 ;;		_itoa
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           	psect	text50
  8119  00453A                     __ptext50:
  8120                           	callstack 0
  8121  00453A                     _utoa:
  8122                           	callstack 24
  8123                           
  8124                           ; BSR set to: 2
  8125                           
  8126                           ;incstack = 0
  8127  00453A  C013  F017         	movff	utoa@val,utoa@v
  8128  00453E  C014  F018         	movff	utoa@val+1,utoa@v+1
  8129  004542                     l13601:
  8130  004542  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  8131  004546  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  8132  00454A  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  8133  00454E  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  8134  004552  EC1E  F029         	call	___lwdiv	;wreg free
  8135  004556  C00A  F017         	movff	?___lwdiv,utoa@v
  8136  00455A  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  8137  00455E  4A11               	infsnz	utoa@buf^0,f,c
  8138  004560  2A12               	incf	(utoa@buf+1)^0,f,c
  8139  004562  5017               	movf	utoa@v^0,w,c
  8140  004564  1018               	iorwf	(utoa@v+1)^0,w,c
  8141  004566  A4D8               	btfss	status,2,c
  8142  004568  D7EC               	goto	l13601
  8143  00456A  C011  FFD9         	movff	utoa@buf,fsr2l
  8144  00456E  C012  FFDA         	movff	utoa@buf+1,fsr2h
  8145  004572  0E00               	movlw	0
  8146  004574  6EDF               	movwf	indf2,c
  8147  004576  0611               	decf	utoa@buf^0,f,c
  8148  004578  A0D8               	btfss	status,0,c
  8149  00457A  0612               	decf	(utoa@buf+1)^0,f,c
  8150  00457C                     l13611:
  8151  00457C  C013  F00A         	movff	utoa@val,___lwmod@dividend
  8152  004580  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  8153  004584  C015  F00C         	movff	utoa@base,___lwmod@divisor
  8154  004588  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  8155  00458C  EC97  F02A         	call	___lwmod	;wreg free
  8156  004590  500A               	movf	?___lwmod^0,w,c
  8157  004592  6E19               	movwf	utoa@c^0,c
  8158  004594  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  8159  004598  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  8160  00459C  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  8161  0045A0  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  8162  0045A4  EC1E  F029         	call	___lwdiv	;wreg free
  8163  0045A8  C00A  F013         	movff	?___lwdiv,utoa@val
  8164  0045AC  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  8165  0045B0  0E09               	movlw	9
  8166  0045B2  6419               	cpfsgt	utoa@c^0,c
  8167  0045B4  D002               	goto	l2461
  8168  0045B6  0E07               	movlw	7
  8169  0045B8  2619               	addwf	utoa@c^0,f,c
  8170  0045BA                     l2461:
  8171  0045BA  0E30               	movlw	48
  8172  0045BC  2619               	addwf	utoa@c^0,f,c
  8173  0045BE  C011  FFD9         	movff	utoa@buf,fsr2l
  8174  0045C2  C012  FFDA         	movff	utoa@buf+1,fsr2h
  8175  0045C6  C019  FFDF         	movff	utoa@c,indf2
  8176  0045CA  0611               	decf	utoa@buf^0,f,c
  8177  0045CC  A0D8               	btfss	status,0,c
  8178  0045CE  0612               	decf	(utoa@buf+1)^0,f,c
  8179  0045D0  5013               	movf	utoa@val^0,w,c
  8180  0045D2  1014               	iorwf	(utoa@val+1)^0,w,c
  8181  0045D4  A4D8               	btfss	status,2,c
  8182  0045D6  D7D2               	goto	l13611
  8183                           
  8184                           ;	Return value of _utoa is never used
  8185  0045D8  4A11               	infsnz	utoa@buf^0,f,c
  8186  0045DA  2A12               	incf	(utoa@buf+1)^0,f,c
  8187  0045DC  0012               	return		;funcret
  8188  0045DE                     __end_of_utoa:
  8189                           	callstack 0
  8190                           
  8191 ;; *************** function ___lwmod *****************
  8192 ;; Defined at:
  8193 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  dividend        2    9[COMRAM] unsigned int 
  8196 ;;  divisor         2   11[COMRAM] unsigned int 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  counter         1   13[COMRAM] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  2    9[COMRAM] unsigned int 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/2
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0
  8209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8211 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8212 ;;Total ram usage:        5 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    2
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_utoa
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text51
  8223  00552E                     __ptext51:
  8224                           	callstack 0
  8225  00552E                     ___lwmod:
  8226                           	callstack 24
  8227                           
  8228                           ;incstack = 0
  8229  00552E  500C               	movf	___lwmod@divisor^0,w,c
  8230  005530  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  8231  005532  B4D8               	btfsc	status,2,c
  8232  005534  D018               	goto	l2241
  8233  005536  0E01               	movlw	1
  8234  005538  6E0E               	movwf	___lwmod@counter^0,c
  8235  00553A  D004               	goto	l12567
  8236  00553C                     l12565:
  8237  00553C  90D8               	bcf	status,0,c
  8238  00553E  360C               	rlcf	___lwmod@divisor^0,f,c
  8239  005540  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  8240  005542  2A0E               	incf	___lwmod@counter^0,f,c
  8241  005544                     l12567:
  8242  005544  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  8243  005546  D7FA               	goto	l12565
  8244  005548                     u15040:
  8245  005548  500C               	movf	___lwmod@divisor^0,w,c
  8246  00554A  5C0A               	subwf	___lwmod@dividend^0,w,c
  8247  00554C  500D               	movf	(___lwmod@divisor+1)^0,w,c
  8248  00554E  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  8249  005550  A0D8               	btfss	status,0,c
  8250  005552  D004               	goto	l12573
  8251  005554  500C               	movf	___lwmod@divisor^0,w,c
  8252  005556  5E0A               	subwf	___lwmod@dividend^0,f,c
  8253  005558  500D               	movf	(___lwmod@divisor+1)^0,w,c
  8254  00555A  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  8255  00555C                     l12573:
  8256  00555C  90D8               	bcf	status,0,c
  8257  00555E  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  8258  005560  320C               	rrcf	___lwmod@divisor^0,f,c
  8259  005562  2E0E               	decfsz	___lwmod@counter^0,f,c
  8260  005564  D7F1               	goto	u15040
  8261  005566                     l2241:
  8262  005566  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  8263  00556A  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  8264  00556E  0012               	return		;funcret
  8265  005570                     __end_of___lwmod:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function ___lwdiv *****************
  8269 ;; Defined at:
  8270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  dividend        2    9[COMRAM] unsigned int 
  8273 ;;  divisor         2   11[COMRAM] unsigned int 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  quotient        2   14[COMRAM] unsigned int 
  8276 ;;  counter         1   13[COMRAM] unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  2    9[COMRAM] unsigned int 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/2
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8286 ;;      Params:         4       0       0       0       0       0       0       0       0
  8287 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8289 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8290 ;;Total ram usage:        7 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; Hardware stack levels required when called:    2
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_utoa
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text52
  8301  00523C                     __ptext52:
  8302                           	callstack 0
  8303  00523C                     ___lwdiv:
  8304                           	callstack 24
  8305                           
  8306                           ;incstack = 0
  8307  00523C  0E00               	movlw	0
  8308  00523E  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  8309  005240  0E00               	movlw	0
  8310  005242  6E0F               	movwf	___lwdiv@quotient^0,c
  8311  005244  500C               	movf	___lwdiv@divisor^0,w,c
  8312  005246  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8313  005248  B4D8               	btfsc	status,2,c
  8314  00524A  D01C               	goto	l2231
  8315  00524C  0E01               	movlw	1
  8316  00524E  6E0E               	movwf	___lwdiv@counter^0,c
  8317  005250  D004               	goto	l12547
  8318  005252                     l12545:
  8319  005252  90D8               	bcf	status,0,c
  8320  005254  360C               	rlcf	___lwdiv@divisor^0,f,c
  8321  005256  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8322  005258  2A0E               	incf	___lwdiv@counter^0,f,c
  8323  00525A                     l12547:
  8324  00525A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  8325  00525C  D7FA               	goto	l12545
  8326  00525E                     u15010:
  8327  00525E  90D8               	bcf	status,0,c
  8328  005260  360F               	rlcf	___lwdiv@quotient^0,f,c
  8329  005262  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8330  005264  500C               	movf	___lwdiv@divisor^0,w,c
  8331  005266  5C0A               	subwf	___lwdiv@dividend^0,w,c
  8332  005268  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  8333  00526A  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8334  00526C  A0D8               	btfss	status,0,c
  8335  00526E  D005               	goto	l12557
  8336  005270  500C               	movf	___lwdiv@divisor^0,w,c
  8337  005272  5E0A               	subwf	___lwdiv@dividend^0,f,c
  8338  005274  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  8339  005276  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8340  005278  800F               	bsf	___lwdiv@quotient^0,0,c
  8341  00527A                     l12557:
  8342  00527A  90D8               	bcf	status,0,c
  8343  00527C  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8344  00527E  320C               	rrcf	___lwdiv@divisor^0,f,c
  8345  005280  2E0E               	decfsz	___lwdiv@counter^0,f,c
  8346  005282  D7ED               	goto	u15010
  8347  005284                     l2231:
  8348  005284  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  8349  005288  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8350  00528C  0012               	return		;funcret
  8351  00528E                     __end_of___lwdiv:
  8352                           	callstack 0
  8353                           
  8354 ;; *************** function _grava_sd *****************
  8355 ;; Defined at:
  8356 ;;		line 536 in file "main.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/1
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8370 ;;      Params:         0       0       0       0       0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8374 ;;Total ram usage:        0 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:   15
  8377 ;; This function calls:
  8378 ;;		_desliga_SPI
  8379 ;;		_desliga_uart
  8380 ;;		_escrita_sdcard
  8381 ;;		_inicializa_SPI
  8382 ;;		_inicializa_uart
  8383 ;; This function is called by:
  8384 ;;		_disparo_gravacao
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text53
  8389  005BFC                     __ptext53:
  8390                           	callstack 0
  8391  005BFC                     _grava_sd:
  8392                           	callstack 13
  8393                           
  8394                           ;main.c: 538: PORTBbits.RB3 = 0;
  8395                           
  8396                           ;incstack = 0
  8397  005BFC  9681               	bcf	129,3,c	;volatile
  8398                           
  8399                           ;main.c: 539: desliga_uart();
  8400  005BFE  EC1F  F02E         	call	_desliga_uart	;wreg free
  8401                           
  8402                           ;main.c: 540: inicializa_SPI();
  8403  005C02  EC98  F02D         	call	_inicializa_SPI	;wreg free
  8404                           
  8405                           ;main.c: 541: escrita_sdcard();
  8406  005C06  EC3C  F01B         	call	_escrita_sdcard	;wreg free
  8407                           
  8408                           ;main.c: 542: desliga_SPI();
  8409  005C0A  EC41  F02E         	call	_desliga_SPI	;wreg free
  8410                           
  8411                           ;main.c: 543: inicializa_uart();
  8412  005C0E  EC22  F02D         	call	_inicializa_uart	;wreg free
  8413                           
  8414                           ;main.c: 544: PORTBbits.RB3 = 1;
  8415  005C12  8681               	bsf	129,3,c	;volatile
  8416  005C14  0012               	return		;funcret
  8417  005C16                     __end_of_grava_sd:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _inicializa_uart *****************
  8421 ;; Defined at:
  8422 ;;		line 206 in file "bibliotecas/uart.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/1
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8439 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8440 ;;Total ram usage:        0 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    4
  8443 ;; This function calls:
  8444 ;;		_configura_baudrate_uart
  8445 ;; This function is called by:
  8446 ;;		_main
  8447 ;;		_grava_sd
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text54
  8452  005A44                     __ptext54:
  8453                           	callstack 0
  8454  005A44                     _inicializa_uart:
  8455                           	callstack 26
  8456                           
  8457                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8458                           
  8459                           ;incstack = 0
  8460  005A44  9C94               	bcf	148,6,c	;volatile
  8461                           
  8462                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8463  005A46  9E94               	bcf	148,7,c	;volatile
  8464                           
  8465                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8466  005A48  0E80               	movlw	128
  8467  005A4A  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8468  005A4C  0E25               	movlw	37
  8469  005A4E  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8470  005A50  0E00               	movlw	0
  8471  005A52  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8472  005A54  0E00               	movlw	0
  8473  005A56  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8474  005A58  EC1B  F01E         	call	_configura_baudrate_uart	;wreg free
  8475                           
  8476                           ;uart.c: 213: TXSTA = 0x20;
  8477  005A5C  0E20               	movlw	32
  8478  005A5E  6EAC               	movwf	172,c	;volatile
  8479                           
  8480                           ;uart.c: 214: RCSTA = 0x90;
  8481  005A60  0E90               	movlw	144
  8482  005A62  6EAB               	movwf	171,c	;volatile
  8483  005A64  0012               	return		;funcret
  8484  005A66                     __end_of_inicializa_uart:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _configura_baudrate_uart *****************
  8488 ;; Defined at:
  8489 ;;		line 50 in file "bibliotecas/uart.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  baudrate        4   23[COMRAM] const long 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  x               2   35[COMRAM] unsigned int 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      unsigned char 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/1
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8503 ;;      Params:         4       0       0       0       0       0       0       0       0
  8504 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8505 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8506 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8507 ;;Total ram usage:       14 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    3
  8510 ;; This function calls:
  8511 ;;		___aldiv
  8512 ;; This function is called by:
  8513 ;;		_inicializa_uart
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text55
  8518  003C36                     __ptext55:
  8519                           	callstack 0
  8520  003C36                     _configura_baudrate_uart:
  8521                           	callstack 26
  8522                           
  8523                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8524                           
  8525                           ;incstack = 0
  8526  003C36  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8527  003C3A  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8528  003C3E  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8529  003C42  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8530  003C46  0E06               	movlw	6
  8531  003C48                     u14945:
  8532  003C48  90D8               	bcf	status,0,c
  8533  003C4A  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8534  003C4C  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8535  003C4E  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8536  003C50  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8537  003C52  2EE8               	decfsz	wreg,f,c
  8538  003C54  D7F9               	goto	u14945
  8539  003C56  501C               	movf	??_configura_baudrate_uart^0,w,c
  8540  003C58  0800               	sublw	0
  8541  003C5A  6E0A               	movwf	___aldiv@dividend^0,c
  8542  003C5C  0E6C               	movlw	108
  8543  003C5E  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8544  003C60  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8545  003C62  0EDC               	movlw	220
  8546  003C64  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8547  003C66  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8548  003C68  0E02               	movlw	2
  8549  003C6A  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8550  003C6C  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8551  003C6E  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8552  003C72  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8553  003C76  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8554  003C7A  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8555  003C7E  0E06               	movlw	6
  8556  003C80                     u14955:
  8557  003C80  90D8               	bcf	status,0,c
  8558  003C82  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8559  003C84  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8560  003C86  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8561  003C88  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8562  003C8A  2EE8               	decfsz	wreg,f,c
  8563  003C8C  D7F9               	goto	u14955
  8564  003C8E  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8565  003C92  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8566  003C96  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8567  003C9A  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8568  003C9E  ECD5  F020         	call	___aldiv	;wreg free
  8569  003CA2  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8570  003CA6  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8571                           
  8572                           ;uart.c: 55: if(x > 255)
  8573  003CAA  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8574  003CAC  A0D8               	btfss	status,0,c
  8575  003CAE  D03B               	goto	l12535
  8576                           
  8577                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8578  003CB0  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8579  003CB4  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8580  003CB8  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8581  003CBC  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8582  003CC0  0E04               	movlw	4
  8583  003CC2                     u14975:
  8584  003CC2  90D8               	bcf	status,0,c
  8585  003CC4  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8586  003CC6  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8587  003CC8  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8588  003CCA  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8589  003CCC  2EE8               	decfsz	wreg,f,c
  8590  003CCE  D7F9               	goto	u14975
  8591  003CD0  501C               	movf	??_configura_baudrate_uart^0,w,c
  8592  003CD2  0800               	sublw	0
  8593  003CD4  6E0A               	movwf	___aldiv@dividend^0,c
  8594  003CD6  0E6C               	movlw	108
  8595  003CD8  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8596  003CDA  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8597  003CDC  0EDC               	movlw	220
  8598  003CDE  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8599  003CE0  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8600  003CE2  0E02               	movlw	2
  8601  003CE4  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8602  003CE6  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8603  003CE8  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8604  003CEC  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8605  003CF0  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8606  003CF4  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8607  003CF8  0E04               	movlw	4
  8608  003CFA                     u14985:
  8609  003CFA  90D8               	bcf	status,0,c
  8610  003CFC  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8611  003CFE  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8612  003D00  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8613  003D02  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8614  003D04  2EE8               	decfsz	wreg,f,c
  8615  003D06  D7F9               	goto	u14985
  8616  003D08  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8617  003D0C  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8618  003D10  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8619  003D14  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8620  003D18  ECD5  F020         	call	___aldiv	;wreg free
  8621  003D1C  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8622  003D20  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8623                           
  8624                           ;uart.c: 58: BRGH = 1;
  8625  003D24  84AC               	bsf	4012,2,c	;volatile
  8626  003D26                     l12535:
  8627                           
  8628                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8629  003D26  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8630  003D28  B0D8               	btfsc	status,0,c
  8631  003D2A  0012               	return	
  8632                           
  8633                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8634  003D2C  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8635                           
  8636                           ;uart.c: 63: SYNC = 0;
  8637  003D30  98AC               	bcf	4012,4,c	;volatile
  8638                           
  8639                           ;uart.c: 64: SPEN = 1;
  8640  003D32  8EAB               	bsf	4011,7,c	;volatile
  8641                           
  8642                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8643  003D34  8E94               	bsf	148,7,c	;volatile
  8644                           
  8645                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8646  003D36  9C94               	bcf	148,6,c	;volatile
  8647                           
  8648                           ;uart.c: 67: CREN = 1;
  8649  003D38  88AB               	bsf	4011,4,c	;volatile
  8650                           
  8651                           ;uart.c: 68: TXEN = 1;
  8652  003D3A  8AAC               	bsf	4012,5,c	;volatile
  8653                           
  8654                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8655  003D3C  0012               	return		;funcret
  8656  003D3E                     __end_of_configura_baudrate_uart:
  8657                           	callstack 0
  8658                           
  8659 ;; *************** function ___aldiv *****************
  8660 ;; Defined at:
  8661 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  dividend        4    9[COMRAM] long 
  8664 ;;  divisor         4   13[COMRAM] long 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  quotient        4   19[COMRAM] long 
  8667 ;;  sign            1   18[COMRAM] unsigned char 
  8668 ;;  counter         1   17[COMRAM] unsigned char 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  4    9[COMRAM] long 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/1
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8678 ;;      Params:         8       0       0       0       0       0       0       0       0
  8679 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8681 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8682 ;;Total ram usage:       14 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    2
  8685 ;; This function calls:
  8686 ;;		Nothing
  8687 ;; This function is called by:
  8688 ;;		_configura_baudrate_uart
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text56
  8693  0041AA                     __ptext56:
  8694                           	callstack 0
  8695  0041AA                     ___aldiv:
  8696                           	callstack 26
  8697                           
  8698                           ;incstack = 0
  8699  0041AA  0E00               	movlw	0
  8700  0041AC  6E13               	movwf	___aldiv@sign^0,c
  8701  0041AE  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8702  0041B0  D00A               	goto	l11975
  8703  0041B2  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8704  0041B4  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8705  0041B6  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8706  0041B8  6C0E               	negf	___aldiv@divisor^0,c
  8707  0041BA  0E00               	movlw	0
  8708  0041BC  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8709  0041BE  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8710  0041C0  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8711  0041C2  0E01               	movlw	1
  8712  0041C4  6E13               	movwf	___aldiv@sign^0,c
  8713  0041C6                     l11975:
  8714  0041C6  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8715  0041C8  D00A               	goto	l11981
  8716  0041CA  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8717  0041CC  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8718  0041CE  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8719  0041D0  6C0A               	negf	___aldiv@dividend^0,c
  8720  0041D2  0E00               	movlw	0
  8721  0041D4  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8722  0041D6  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8723  0041D8  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8724  0041DA  0E01               	movlw	1
  8725  0041DC  1A13               	xorwf	___aldiv@sign^0,f,c
  8726  0041DE                     l11981:
  8727  0041DE  0E00               	movlw	0
  8728  0041E0  6E14               	movwf	___aldiv@quotient^0,c
  8729  0041E2  0E00               	movlw	0
  8730  0041E4  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8731  0041E6  0E00               	movlw	0
  8732  0041E8  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8733  0041EA  0E00               	movlw	0
  8734  0041EC  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8735  0041EE  500E               	movf	___aldiv@divisor^0,w,c
  8736  0041F0  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8737  0041F2  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8738  0041F4  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8739  0041F6  B4D8               	btfsc	status,2,c
  8740  0041F8  D02A               	goto	l12003
  8741  0041FA  0E01               	movlw	1
  8742  0041FC  6E12               	movwf	___aldiv@counter^0,c
  8743  0041FE  D006               	goto	l11989
  8744  004200                     l11987:
  8745  004200  90D8               	bcf	status,0,c
  8746  004202  360E               	rlcf	___aldiv@divisor^0,f,c
  8747  004204  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8748  004206  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8749  004208  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8750  00420A  2A12               	incf	___aldiv@counter^0,f,c
  8751  00420C                     l11989:
  8752  00420C  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8753  00420E  D7F8               	goto	l11987
  8754  004210                     u14050:
  8755  004210  90D8               	bcf	status,0,c
  8756  004212  3614               	rlcf	___aldiv@quotient^0,f,c
  8757  004214  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8758  004216  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8759  004218  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8760  00421A  500E               	movf	___aldiv@divisor^0,w,c
  8761  00421C  5C0A               	subwf	___aldiv@dividend^0,w,c
  8762  00421E  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8763  004220  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8764  004222  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8765  004224  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8766  004226  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8767  004228  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8768  00422A  A0D8               	btfss	status,0,c
  8769  00422C  D009               	goto	l11999
  8770  00422E  500E               	movf	___aldiv@divisor^0,w,c
  8771  004230  5E0A               	subwf	___aldiv@dividend^0,f,c
  8772  004232  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8773  004234  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8774  004236  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8775  004238  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8776  00423A  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8777  00423C  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8778  00423E  8014               	bsf	___aldiv@quotient^0,0,c
  8779  004240                     l11999:
  8780  004240  90D8               	bcf	status,0,c
  8781  004242  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8782  004244  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8783  004246  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8784  004248  320E               	rrcf	___aldiv@divisor^0,f,c
  8785  00424A  2E12               	decfsz	___aldiv@counter^0,f,c
  8786  00424C  D7E1               	goto	u14050
  8787  00424E                     l12003:
  8788  00424E  5013               	movf	___aldiv@sign^0,w,c
  8789  004250  B4D8               	btfsc	status,2,c
  8790  004252  D008               	goto	l12007
  8791  004254  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8792  004256  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8793  004258  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8794  00425A  6C14               	negf	___aldiv@quotient^0,c
  8795  00425C  0E00               	movlw	0
  8796  00425E  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8797  004260  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8798  004262  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8799  004264                     l12007:
  8800  004264  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8801  004268  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8802  00426C  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8803  004270  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8804  004274  0012               	return		;funcret
  8805  004276                     __end_of___aldiv:
  8806                           	callstack 0
  8807                           
  8808 ;; *************** function _inicializa_SPI *****************
  8809 ;; Defined at:
  8810 ;;		line 48 in file "bibliotecas/SPI.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;		None
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/1
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8824 ;;      Params:         0       0       0       0       0       0       0       0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8827 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8828 ;;Total ram usage:        0 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:    2
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_grava_sd
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text57
  8839  005B30                     __ptext57:
  8840                           	callstack 0
  8841  005B30                     _inicializa_SPI:
  8842                           	callstack 25
  8843                           
  8844                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8845                           
  8846                           ;incstack = 0
  8847  005B30  9293               	bcf	147,1,c	;volatile
  8848                           
  8849                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8850  005B32  9A93               	bcf	147,5,c	;volatile
  8851                           
  8852                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8853  005B34  8093               	bsf	147,0,c	;volatile
  8854                           
  8855                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8856  005B36  9E94               	bcf	148,7,c	;volatile
  8857                           
  8858                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8859  005B38  8A8A               	bsf	138,5,c	;volatile
  8860                           
  8861                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8862  005B3A  0E3F               	movlw	63
  8863  005B3C  16C7               	andwf	199,f,c	;volatile
  8864                           
  8865                           ;SPI.c: 57: SSPCON1 = 0x00;
  8866  005B3E  0E00               	movlw	0
  8867  005B40  6EC6               	movwf	198,c	;volatile
  8868                           
  8869                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8870  005B42  9EC7               	bcf	199,7,c	;volatile
  8871                           
  8872                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8873  005B44  8CC7               	bsf	199,6,c	;volatile
  8874                           
  8875                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8876  005B46  98C6               	bcf	198,4,c	;volatile
  8877                           
  8878                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8879  005B48  0E03               	movlw	3
  8880  005B4A  6EC6               	movwf	198,c	;volatile
  8881                           
  8882                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8883  005B4C  8AC6               	bsf	198,5,c	;volatile
  8884  005B4E  0012               	return		;funcret
  8885  005B50                     __end_of_inicializa_SPI:
  8886                           	callstack 0
  8887                           
  8888 ;; *************** function _escrita_sdcard *****************
  8889 ;; Defined at:
  8890 ;;		line 208 in file "bibliotecas/SDCard.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  fix_gps         3    0        PTR unsigned char 
  8895 ;;  bw              2    0        unsigned short 
  8896 ;;  j               1    0        unsigned char 
  8897 ;;  i               1    0        unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/1
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8911 ;;Total ram usage:        0 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:   14
  8914 ;; This function calls:
  8915 ;;		_data_nome
  8916 ;;		_f_close
  8917 ;;		_f_lseek
  8918 ;;		_f_mount
  8919 ;;		_f_open
  8920 ;;		_fprintf
  8921 ;;		_hora_nome
  8922 ;;		_strcat
  8923 ;; This function is called by:
  8924 ;;		_grava_sd
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text58
  8929  003678                     __ptext58:
  8930                           	callstack 0
  8931  003678                     _escrita_sdcard:
  8932                           	callstack 13
  8933                           
  8934                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 216: f_mount(0,&fs);
  8935                           
  8936                           ;incstack = 0
  8937  003678  0EBA               	movlw	low _fs
  8938  00367A  6E0A               	movwf	f_mount@fs^0,c
  8939  00367C  0E03               	movlw	high _fs
  8940  00367E  6E0B               	movwf	(f_mount@fs+1)^0,c
  8941  003680  0E00               	movlw	0
  8942  003682  ECE7  F029         	call	_f_mount
  8943                           
  8944                           ;SDCard.c: 217: if(!f_fix)
  8945  003686  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8946  003688  A4D8               	btfss	status,2,c
  8947  00368A  D021               	goto	l12831
  8948                           
  8949                           ;SDCard.c: 218: {;SDCard.c: 219: if(data[0] != ' ' && hora[0] != ' ')
  8950  00368C  0E20               	movlw	32
  8951  00368E  0101               	movlb	1	; () banked
  8952  003690  19D0               	xorwf	_data& (0+255),w,b
  8953  003692  B4D8               	btfsc	status,2,c
  8954  003694  D01C               	goto	l12831
  8955                           
  8956                           ; BSR set to: 1
  8957  003696  0E20               	movlw	32
  8958  003698  19C2               	xorwf	_hora& (0+255),w,b
  8959  00369A  B4D8               	btfsc	status,2,c
  8960  00369C  D018               	goto	l12831
  8961                           
  8962                           ; BSR set to: 1
  8963                           ;SDCard.c: 220: {;SDCard.c: 221: data_nome(data);
  8964  00369E  0ED0               	movlw	low _data
  8965  0036A0  6E0A               	movwf	data_nome@p_buff^0,c
  8966  0036A2  0E01               	movlw	high _data
  8967  0036A4  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8968  0036A6  EC9E  F02C         	call	_data_nome	;wreg free
  8969                           
  8970                           ;SDCard.c: 222: hora_nome(hora);
  8971  0036AA  0EC2               	movlw	low _hora
  8972  0036AC  6E0A               	movwf	hora_nome@p_buff^0,c
  8973  0036AE  0E01               	movlw	high _hora
  8974  0036B0  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8975  0036B2  EC89  F02C         	call	_hora_nome	;wreg free
  8976                           
  8977                           ; BSR set to: 1
  8978                           ;SDCard.c: 224: strcat(filename, ".tlm");
  8979  0036B6  0E65               	movlw	low _filename
  8980  0036B8  6E0A               	movwf	strcat@to^0,c
  8981  0036BA  0E02               	movlw	high _filename
  8982  0036BC  6E0B               	movwf	(strcat@to+1)^0,c
  8983  0036BE  0E68               	movlw	low STR_11
  8984  0036C0  6E0C               	movwf	strcat@from^0,c
  8985  0036C2  0E62               	movlw	high STR_11
  8986  0036C4  6E0D               	movwf	(strcat@from+1)^0,c
  8987  0036C6  EC2F  F02A         	call	_strcat	;wreg free
  8988                           
  8989                           ; BSR set to: 1
  8990                           ;SDCard.c: 225: f_fix = 1;
  8991  0036CA  0E01               	movlw	1
  8992  0036CC  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8993  0036CE                     l12831:
  8994                           
  8995                           ;SDCard.c: 226: };SDCard.c: 227: };SDCard.c: 229: if(f_fix)
  8996  0036CE  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8997  0036D0  B4D8               	btfsc	status,2,c
  8998  0036D2  0012               	return	
  8999                           
  9000                           ;SDCard.c: 230: {;SDCard.c: 231: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  9001  0036D4  0E81               	movlw	low _fil
  9002  0036D6  0100               	movlb	0	; () banked
  9003  0036D8  6F98               	movwf	f_open@fp& (0+255),b
  9004  0036DA  0E01               	movlw	high _fil
  9005  0036DC  6F99               	movwf	(f_open@fp+1)& (0+255),b
  9006  0036DE  0E65               	movlw	low _filename
  9007  0036E0  6F9A               	movwf	f_open@path& (0+255),b
  9008  0036E2  0E02               	movlw	high _filename
  9009  0036E4  6F9B               	movwf	(f_open@path+1)& (0+255),b
  9010  0036E6  0E02               	movlw	2
  9011  0036E8  6F9C               	movwf	f_open@mode& (0+255),b
  9012  0036EA  EC20  F00B         	call	_f_open	;wreg free
  9013  0036EE  0900               	iorlw	0
  9014  0036F0  A4D8               	btfss	status,2,c
  9015  0036F2  D052               	goto	l12845
  9016                           
  9017                           ;SDCard.c: 232: {;SDCard.c: 234: f_lseek(&fil, ((&fil)->fsize));
  9018  0036F4  0E81               	movlw	low _fil
  9019  0036F6  0100               	movlb	0	; () banked
  9020  0036F8  6F86               	movwf	f_lseek@fp& (0+255),b
  9021  0036FA  0E01               	movlw	high _fil
  9022  0036FC  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  9023  0036FE  C18B  F088         	movff	_fil+10,f_lseek@ofs
  9024  003702  C18C  F089         	movff	_fil+11,f_lseek@ofs+1
  9025  003706  C18D  F08A         	movff	_fil+12,f_lseek@ofs+2
  9026  00370A  C18E  F08B         	movff	_fil+13,f_lseek@ofs+3
  9027  00370E  EC79  F005         	call	_f_lseek	;wreg free
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;SDCard.c: 235: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  9031  003712  0E81               	movlw	low _fil
  9032  003714  6FB1               	movwf	fprintf@fil& (0+255),b
  9033  003716  0E01               	movlw	high _fil
  9034  003718  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  9035  00371A  0E9C               	movlw	low STR_12
  9036  00371C  6FB3               	movwf	fprintf@str& (0+255),b
  9037  00371E  0E61               	movlw	high STR_12
  9038  003720  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  9039  003722  0ED6               	movlw	low _vel
  9040  003724  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  9041  003726  0E01               	movlw	high _vel
  9042  003728  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  9043  00372A  0EAA               	movlw	low _lt
  9044  00372C  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  9045  00372E  0E01               	movlw	high _lt
  9046  003730  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  9047  003732  0E8D               	movlw	low _lo
  9048  003734  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  9049  003736  0E02               	movlw	high _lo
  9050  003738  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  9051  00373A  EC79  F009         	call	_fprintf	;wreg free
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;SDCard.c: 237: fprintf(&fil, "r0;c0;k0;");
  9055  00373E  0E81               	movlw	low _fil
  9056  003740  6FB1               	movwf	fprintf@fil& (0+255),b
  9057  003742  0E01               	movlw	high _fil
  9058  003744  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  9059  003746  0E01               	movlw	low STR_13
  9060  003748  6FB3               	movwf	fprintf@str& (0+255),b
  9061  00374A  0E62               	movlw	high STR_13
  9062  00374C  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  9063  00374E  EC79  F009         	call	_fprintf	;wreg free
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;SDCard.c: 238: fprintf(&fil, "h%s;dN/A;\n", hora);
  9067  003752  0E81               	movlw	low _fil
  9068  003754  6FB1               	movwf	fprintf@fil& (0+255),b
  9069  003756  0E01               	movlw	high _fil
  9070  003758  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  9071  00375A  0EE0               	movlw	low STR_14
  9072  00375C  6FB3               	movwf	fprintf@str& (0+255),b
  9073  00375E  0E61               	movlw	high STR_14
  9074  003760  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  9075  003762  0EC2               	movlw	low _hora
  9076  003764  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  9077  003766  0E01               	movlw	high _hora
  9078  003768  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  9079  00376A  EC79  F009         	call	_fprintf	;wreg free
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;SDCard.c: 239: fprintf(&fil, "f%s;\n", fence);
  9083  00376E  0E81               	movlw	low _fil
  9084  003770  6FB1               	movwf	fprintf@fil& (0+255),b
  9085  003772  0E01               	movlw	high _fil
  9086  003774  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  9087  003776  0E58               	movlw	low STR_15
  9088  003778  6FB3               	movwf	fprintf@str& (0+255),b
  9089  00377A  0E62               	movlw	high STR_15
  9090  00377C  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  9091  00377E  0EDC               	movlw	low _fence
  9092  003780  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  9093  003782  0E01               	movlw	high _fence
  9094  003784  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  9095  003786  EC79  F009         	call	_fprintf	;wreg free
  9096                           
  9097                           ;SDCard.c: 242: f_close(&fil);
  9098  00378A  0E81               	movlw	low _fil
  9099  00378C  6F69               	movwf	f_close@fp& (0+255),b
  9100  00378E  0E01               	movlw	high _fil
  9101  003790  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  9102  003792  EC5E  F02C         	call	_f_close	;wreg free
  9103                           
  9104                           ;SDCard.c: 243: }
  9105  003796  0012               	return	
  9106  003798                     l12845:
  9107                           
  9108                           ;SDCard.c: 244: else;SDCard.c: 245: {;SDCard.c: 246: f_open(&fil, filename, 0x08 );
  9109  003798  0E81               	movlw	low _fil
  9110  00379A  0100               	movlb	0	; () banked
  9111  00379C  6F98               	movwf	f_open@fp& (0+255),b
  9112  00379E  0E01               	movlw	high _fil
  9113  0037A0  6F99               	movwf	(f_open@fp+1)& (0+255),b
  9114  0037A2  0E65               	movlw	low _filename
  9115  0037A4  6F9A               	movwf	f_open@path& (0+255),b
  9116  0037A6  0E02               	movlw	high _filename
  9117  0037A8  6F9B               	movwf	(f_open@path+1)& (0+255),b
  9118  0037AA  0E08               	movlw	8
  9119  0037AC  6F9C               	movwf	f_open@mode& (0+255),b
  9120  0037AE  EC20  F00B         	call	_f_open	;wreg free
  9121                           
  9122                           ;SDCard.c: 247: f_close(&fil);
  9123  0037B2  0E81               	movlw	low _fil
  9124  0037B4  0100               	movlb	0	; () banked
  9125  0037B6  6F69               	movwf	f_close@fp& (0+255),b
  9126  0037B8  0E01               	movlw	high _fil
  9127  0037BA  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  9128  0037BC  EC5E  F02C         	call	_f_close	;wreg free
  9129  0037C0  0012               	return		;funcret
  9130  0037C2                     __end_of_escrita_sdcard:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function _strcat *****************
  9134 ;; Defined at:
  9135 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  to              2    9[COMRAM] PTR unsigned char 
  9138 ;;		 -> filename(20), 
  9139 ;;  from            2   11[COMRAM] PTR const unsigned char 
  9140 ;;		 -> STR_11(5), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  cp              2   13[COMRAM] PTR unsigned char 
  9143 ;;		 -> filename(20), 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2    9[COMRAM] PTR unsigned char 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9148 ;; Tracked objects:
  9149 ;;		On entry : 3F/1
  9150 ;;		On exit  : 3F/1
  9151 ;;		Unchanged: 3F/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9153 ;;      Params:         4       0       0       0       0       0       0       0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9156 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9157 ;;Total ram usage:        6 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    2
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_escrita_sdcard
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text59
  9168  00545E                     __ptext59:
  9169                           	callstack 0
  9170  00545E                     _strcat:
  9171                           	callstack 24
  9172                           
  9173                           ; BSR set to: 1
  9174                           
  9175                           ;incstack = 0
  9176  00545E  C00A  F00E         	movff	strcat@to,strcat@cp
  9177  005462  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  9178  005466  D002               	goto	l12275
  9179  005468                     l12273:
  9180                           
  9181                           ; BSR set to: 1
  9182  005468  4A0E               	infsnz	strcat@cp^0,f,c
  9183  00546A  2A0F               	incf	(strcat@cp+1)^0,f,c
  9184  00546C                     l12275:
  9185                           
  9186                           ; BSR set to: 1
  9187  00546C  C00E  FFD9         	movff	strcat@cp,fsr2l
  9188  005470  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  9189  005474  50DF               	movf	indf2,w,c
  9190  005476  B4D8               	btfsc	status,2,c
  9191  005478  D005               	goto	l12279
  9192  00547A  D7F6               	goto	l12273
  9193  00547C                     l12277:
  9194                           
  9195                           ; BSR set to: 1
  9196  00547C  4A0E               	infsnz	strcat@cp^0,f,c
  9197  00547E  2A0F               	incf	(strcat@cp+1)^0,f,c
  9198  005480  4A0C               	infsnz	strcat@from^0,f,c
  9199  005482  2A0D               	incf	(strcat@from+1)^0,f,c
  9200  005484                     l12279:
  9201                           
  9202                           ; BSR set to: 1
  9203  005484  C00C  FFF6         	movff	strcat@from,tblptrl
  9204  005488  C00D  FFF7         	movff	strcat@from+1,tblptrh
  9205  00548C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9206  00548C  6AF8               	clrf	tblptru,c
  9207  00548E                     	endif
  9208  00548E                     	if	0	;tblptru may be non-zero
  9209  00548E                     	endif
  9210  00548E  C00E  FFD9         	movff	strcat@cp,fsr2l
  9211  005492  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  9212  005496  0008               	tblrd		*
  9213  005498  CFF5 FFDF          	movff	tablat,indf2
  9214  00549C  50DF               	movf	indf2,w,c
  9215  00549E  B4D8               	btfsc	status,2,c
  9216  0054A0  0012               	return	
  9217  0054A2  D7EC               	goto	l12277
  9218  0054A4                     __end_of_strcat:
  9219                           	callstack 0
  9220                           
  9221 ;; *************** function _hora_nome *****************
  9222 ;; Defined at:
  9223 ;;		line 420 in file "bibliotecas/SDCard.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  9226 ;;		 -> hora(7), 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  i               1   11[COMRAM] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 3F/1
  9235 ;;		On exit  : 3F/1
  9236 ;;		Unchanged: 3F/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9238 ;;      Params:         2       0       0       0       0       0       0       0       0
  9239 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9241 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9242 ;;Total ram usage:        3 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; Hardware stack levels required when called:    2
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_escrita_sdcard
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text60
  9253  005912                     __ptext60:
  9254                           	callstack 0
  9255  005912                     _hora_nome:
  9256                           	callstack 24
  9257                           
  9258                           ; BSR set to: 1
  9259                           ;SDCard.c: 422: unsigned char i;;SDCard.c: 423: for(i=4; i<8;i++)
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;incstack = 0
  9263  005912  0E04               	movlw	4
  9264  005914  6E0C               	movwf	hora_nome@i^0,c
  9265  005916                     l12263:
  9266                           
  9267                           ; BSR set to: 1
  9268                           ;SDCard.c: 424: {;SDCard.c: 425: filename[i] = *p_buff;
  9269  005916  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  9270  00591A  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  9271  00591E  0E65               	movlw	low _filename
  9272  005920  240C               	addwf	hora_nome@i^0,w,c
  9273  005922  6EE1               	movwf	fsr1l,c
  9274  005924  6AE2               	clrf	fsr1h,c
  9275  005926  0E02               	movlw	high _filename
  9276  005928  22E2               	addwfc	fsr1h,f,c
  9277  00592A  CFDF FFE7          	movff	indf2,indf1
  9278                           
  9279                           ; BSR set to: 1
  9280                           ;SDCard.c: 426: p_buff++;
  9281  00592E  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  9282  005930  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  9283                           
  9284                           ; BSR set to: 1
  9285  005932  2A0C               	incf	hora_nome@i^0,f,c
  9286                           
  9287                           ; BSR set to: 1
  9288  005934  0E07               	movlw	7
  9289  005936  640C               	cpfsgt	hora_nome@i^0,c
  9290  005938  D7EE               	goto	l12263
  9291  00593A  0012               	return	
  9292  00593C                     __end_of_hora_nome:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _fprintf *****************
  9296 ;; Defined at:
  9297 ;;		line 1816 in file "bibliotecas/tff.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9300 ;;		 -> fil(28), 
  9301 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9302 ;;		 -> STR_15(6), STR_14(11), STR_13(10), STR_12(15), 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  s              16   93[BANK0 ] unsigned char [16]
  9305 ;;  val             4  117[BANK0 ] unsigned long 
  9306 ;;  i               2  124[BANK0 ] int 
  9307 ;;  cc              2  122[BANK0 ] int 
  9308 ;;  w               2  113[BANK0 ] int 
  9309 ;;  res             2  109[BANK0 ] int 
  9310 ;;  c               1  126[BANK0 ] unsigned char 
  9311 ;;  arp             1  121[BANK0 ] PTR void [1]
  9312 ;;		 -> ?_fprintf(2), 
  9313 ;;  r               1  116[BANK0 ] unsigned char 
  9314 ;;  f               1  115[BANK0 ] unsigned char 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  2   81[BANK0 ] int 
  9317 ;; Registers used:
  9318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 3F/0
  9321 ;;		On exit  : 3F/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9324 ;;      Params:         0      10       0       0       0       0       0       0       0
  9325 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9326 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9327 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9328 ;;Total ram usage:       46 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:   13
  9331 ;; This function calls:
  9332 ;;		___lldiv
  9333 ;;		___llmod
  9334 ;;		___wmul
  9335 ;;		_fputc
  9336 ;;		_fputs
  9337 ;; This function is called by:
  9338 ;;		_escrita_sdcard
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text61
  9343  0012F2                     __ptext61:
  9344                           	callstack 0
  9345  0012F2                     _fprintf:
  9346                           	callstack 13
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9350                           
  9351                           ; BSR set to: 1
  9352                           ;incstack = 0
  9353  0012F2  0EB5               	movlw	low (?_fprintf+4)
  9354  0012F4  6FD9               	movwf	fprintf@arp& (0+255),b
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9358  0012F6  0E00               	movlw	0
  9359  0012F8  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9360  0012FA  0E00               	movlw	0
  9361  0012FC  6FCD               	movwf	fprintf@res& (0+255),b
  9362  0012FE  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9363  001302  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9364  001306                     l12365:
  9365                           
  9366                           ; BSR set to: 0
  9367  001306  29DA               	incf	fprintf@cc& (0+255),w,b
  9368  001308  E103               	bnz	l12369
  9369  00130A  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9370  00130C  B4D8               	btfsc	status,2,c
  9371  00130E  0012               	return	
  9372  001310                     l12369:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;tff.c: 1832: c = *str++;
  9376  001310  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9377  001314  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9378  001318                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9379  001318  6AF8               	clrf	tblptru,c
  9380  00131A                     	endif
  9381  00131A                     	if	0	;tblptru may be non-zero
  9382  00131A                     	endif
  9383  00131A  0008               	tblrd		*
  9384  00131C  CFF5 F0DE          	movff	tablat,fprintf@c
  9385                           
  9386                           ; BSR set to: 0
  9387  001320  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9388  001322  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;tff.c: 1833: if (c == 0) break;
  9392  001324  51DE               	movf	fprintf@c& (0+255),w,b
  9393  001326  B4D8               	btfsc	status,2,c
  9394  001328  0012               	return	
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;tff.c: 1834: if (c != '%') {
  9398  00132A  0E25               	movlw	37
  9399  00132C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9400  00132E  B4D8               	btfsc	status,2,c
  9401  001330  D017               	goto	l12385
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;tff.c: 1835: cc = fputc(c, fil);
  9405  001332  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9406  001336  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9407  001338  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9408  00133C  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9409  001340  EC3A  F02B         	call	_fputc	;wreg free
  9410  001344  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9411  001348  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9415  00134C  29DA               	incf	fprintf@cc& (0+255),w,b
  9416  00134E  E103               	bnz	u14680
  9417  001350  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9418  001352  B4D8               	btfsc	status,2,c
  9419  001354  D170               	goto	l12509
  9420  001356                     u14680:
  9421                           
  9422                           ; BSR set to: 0
  9423  001356  0E00               	movlw	0
  9424  001358  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9425  00135A  0E01               	movlw	1
  9426  00135C  6FDA               	movwf	fprintf@cc& (0+255),b
  9427  00135E  D16B               	goto	l12509
  9428  001360                     l12385:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9432  001360  0E00               	movlw	0
  9433  001362  6FD3               	movwf	fprintf@f& (0+255),b
  9434  001364  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9435  001368  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;tff.c: 1840: c = *str++;
  9439  00136A  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9440  00136E  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9441  001372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9442  001372  6AF8               	clrf	tblptru,c
  9443  001374                     	endif
  9444  001374                     	if	0	;tblptru may be non-zero
  9445  001374                     	endif
  9446  001374  0008               	tblrd		*
  9447  001376  CFF5 F0DE          	movff	tablat,fprintf@c
  9448                           
  9449                           ; BSR set to: 0
  9450  00137A  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9451  00137C  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;tff.c: 1841: if (c == '0') {
  9455  00137E  0E30               	movlw	48
  9456  001380  19DE               	xorwf	fprintf@c& (0+255),w,b
  9457  001382  A4D8               	btfss	status,2,c
  9458  001384  D023               	goto	l12405
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;tff.c: 1842: f = 1; c = *str++;
  9462  001386  0E01               	movlw	1
  9463  001388  6FD3               	movwf	fprintf@f& (0+255),b
  9464  00138A                     l12395:
  9465                           
  9466                           ; BSR set to: 0
  9467  00138A  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9468  00138E  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9469  001392                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9470  001392  6AF8               	clrf	tblptru,c
  9471  001394                     	endif
  9472  001394                     	if	0	;tblptru may be non-zero
  9473  001394                     	endif
  9474  001394  0008               	tblrd		*
  9475  001396  CFF5 F0DE          	movff	tablat,fprintf@c
  9476                           
  9477                           ; BSR set to: 0
  9478  00139A  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9479  00139C  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9480  00139E  D016               	goto	l12405
  9481  0013A0                     l12399:
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9485  0013A0  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9486  0013A4  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9487  0013A8  0E00               	movlw	0
  9488  0013AA  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9489  0013AC  0E0A               	movlw	10
  9490  0013AE  6E0C               	movwf	___wmul@multiplicand^0,c
  9491  0013B0  ECDA  F02C         	call	___wmul	;wreg free
  9492  0013B4  0100               	movlb	0	; () banked
  9493  0013B6  51DE               	movf	fprintf@c& (0+255),w,b
  9494  0013B8  260A               	addwf	?___wmul^0,f,c
  9495  0013BA  0E00               	movlw	0
  9496  0013BC  220B               	addwfc	(?___wmul+1)^0,f,c
  9497  0013BE  0ED0               	movlw	208
  9498  0013C0  240A               	addwf	?___wmul^0,w,c
  9499  0013C2  6FD1               	movwf	fprintf@w& (0+255),b
  9500  0013C4  0EFF               	movlw	255
  9501  0013C6  200B               	addwfc	(?___wmul+1)^0,w,c
  9502  0013C8  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9503  0013CA  D7DF               	goto	l12395
  9504  0013CC                     l12405:
  9505                           
  9506                           ; BSR set to: 0
  9507  0013CC  0E2F               	movlw	47
  9508  0013CE  65DE               	cpfsgt	fprintf@c& (0+255),b
  9509  0013D0  D003               	goto	u14710
  9510                           
  9511                           ; BSR set to: 0
  9512  0013D2  0E39               	movlw	57
  9513  0013D4  65DE               	cpfsgt	fprintf@c& (0+255),b
  9514  0013D6  D7E4               	goto	l12399
  9515  0013D8                     u14710:
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9519  0013D8  0E6C               	movlw	108
  9520  0013DA  19DE               	xorwf	fprintf@c& (0+255),w,b
  9521  0013DC  A4D8               	btfss	status,2,c
  9522  0013DE  D00B               	goto	l12417
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;tff.c: 1849: f |= 2; c = *str++;
  9526  0013E0  83D3               	bsf	fprintf@f& (0+255),1,b
  9527                           
  9528                           ; BSR set to: 0
  9529  0013E2  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9530  0013E6  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9531  0013EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9532  0013EA  6AF8               	clrf	tblptru,c
  9533  0013EC                     	endif
  9534  0013EC                     	if	0	;tblptru may be non-zero
  9535  0013EC                     	endif
  9536  0013EC  0008               	tblrd		*
  9537  0013EE  CFF5 F0DE          	movff	tablat,fprintf@c
  9538                           
  9539                           ; BSR set to: 0
  9540  0013F2  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9541  0013F4  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9542  0013F6                     l12417:
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9546  0013F6  0E73               	movlw	115
  9547  0013F8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9548  0013FA  A4D8               	btfss	status,2,c
  9549  0013FC  D014               	goto	l12423
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9553  0013FE  51D9               	movf	fprintf@arp& (0+255),w,b
  9554  001400  6ED9               	movwf	fsr2l,c
  9555  001402  6ADA               	clrf	fsr2h,c
  9556  001404  CFDE F0AB          	movff	postinc2,fputs@str
  9557  001408  CFDD F0AC          	movff	postdec2,fputs@str+1
  9558  00140C  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9559  001410  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9560  001414  EC9E  F028         	call	_fputs	;wreg free
  9561  001418  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9562  00141C  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9563                           
  9564                           ; BSR set to: 0
  9565  001420  0E02               	movlw	2
  9566  001422  27D9               	addwf	fprintf@arp& (0+255),f,b
  9567                           
  9568                           ;tff.c: 1853: continue;
  9569  001424  D108               	goto	l12509
  9570  001426                     l12423:
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9574  001426  0E63               	movlw	99
  9575  001428  19DE               	xorwf	fprintf@c& (0+255),w,b
  9576  00142A  A4D8               	btfss	status,2,c
  9577  00142C  D01B               	goto	l12433
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9581  00142E  51D9               	movf	fprintf@arp& (0+255),w,b
  9582  001430  6ED9               	movwf	fsr2l,c
  9583  001432  6ADA               	clrf	fsr2h,c
  9584  001434  50DF               	movf	indf2,w,c
  9585  001436  6FBB               	movwf	??_fprintf& (0+255),b
  9586  001438  51BB               	movf	??_fprintf& (0+255),w,b
  9587  00143A  6FA4               	movwf	fputc@chr& (0+255),b
  9588  00143C  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9589  00143E  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9590  001442  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9591  001446  EC3A  F02B         	call	_fputc	;wreg free
  9592  00144A  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9593  00144E  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9594                           
  9595                           ; BSR set to: 0
  9596  001452  0E02               	movlw	2
  9597  001454  27D9               	addwf	fprintf@arp& (0+255),f,b
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9601  001456  29DA               	incf	fprintf@cc& (0+255),w,b
  9602  001458  E104               	bnz	u14750
  9603  00145A  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9604  00145C  A4D8               	btfss	status,2,c
  9605  00145E  D77B               	goto	u14680
  9606  001460  D0EA               	goto	l12509
  9607  001462                     u14750:
  9608  001462  D779               	goto	u14680
  9609  001464                     l12433:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9613  001464  0E00               	movlw	0
  9614  001466  6FD4               	movwf	fprintf@r& (0+255),b
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;tff.c: 1861: if (c == 'd') r = 10;
  9618  001468  0E64               	movlw	100
  9619  00146A  19DE               	xorwf	fprintf@c& (0+255),w,b
  9620  00146C  A4D8               	btfss	status,2,c
  9621  00146E  D002               	goto	l12439
  9622                           
  9623                           ; BSR set to: 0
  9624  001470  0E0A               	movlw	10
  9625  001472  6FD4               	movwf	fprintf@r& (0+255),b
  9626  001474                     l12439:
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;tff.c: 1862: if (c == 'u') r = 10;
  9630  001474  0E75               	movlw	117
  9631  001476  19DE               	xorwf	fprintf@c& (0+255),w,b
  9632  001478  A4D8               	btfss	status,2,c
  9633  00147A  D002               	goto	l12443
  9634                           
  9635                           ; BSR set to: 0
  9636  00147C  0E0A               	movlw	10
  9637  00147E  6FD4               	movwf	fprintf@r& (0+255),b
  9638  001480                     l12443:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;tff.c: 1863: if (c == 'X') r = 16;
  9642  001480  0E58               	movlw	88
  9643  001482  19DE               	xorwf	fprintf@c& (0+255),w,b
  9644  001484  A4D8               	btfss	status,2,c
  9645  001486  D002               	goto	l1283
  9646                           
  9647                           ; BSR set to: 0
  9648  001488  0E10               	movlw	16
  9649  00148A  6FD4               	movwf	fprintf@r& (0+255),b
  9650  00148C                     l1283:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;tff.c: 1864: if (r == 0) break;
  9654  00148C  51D4               	movf	fprintf@r& (0+255),w,b
  9655  00148E  B4D8               	btfsc	status,2,c
  9656  001490  0012               	return	
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;tff.c: 1865: if (f & 2) {
  9660  001492  A3D3               	btfss	fprintf@f& (0+255),1,b
  9661  001494  D00D               	goto	l12453
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9665  001496  51D9               	movf	fprintf@arp& (0+255),w,b
  9666  001498  6ED9               	movwf	fsr2l,c
  9667  00149A  6ADA               	clrf	fsr2h,c
  9668  00149C  CFDE F0D5          	movff	postinc2,fprintf@val
  9669  0014A0  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9670  0014A4  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9671  0014A8  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9672                           
  9673                           ; BSR set to: 0
  9674  0014AC  0E04               	movlw	4
  9675  0014AE  D01F               	goto	L1
  9676  0014B0                     l12453:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9680  0014B0  0E64               	movlw	100
  9681  0014B2  19DE               	xorwf	fprintf@c& (0+255),w,b
  9682  0014B4  B4D8               	btfsc	status,2,c
  9683  0014B6  D00E               	goto	l12459
  9684                           
  9685                           ; BSR set to: 0
  9686  0014B8  51D9               	movf	fprintf@arp& (0+255),w,b
  9687  0014BA  6ED9               	movwf	fsr2l,c
  9688  0014BC  6ADA               	clrf	fsr2h,c
  9689  0014BE  CFDE F0BB          	movff	postinc2,??_fprintf
  9690  0014C2  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9691  0014C6  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9692  0014CA  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9693  0014CE  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9694  0014D0  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9695  0014D2  D00C               	goto	l12461
  9696  0014D4                     l12459:
  9697                           
  9698                           ; BSR set to: 0
  9699  0014D4  51D9               	movf	fprintf@arp& (0+255),w,b
  9700  0014D6  6ED9               	movwf	fsr2l,c
  9701  0014D8  6ADA               	clrf	fsr2h,c
  9702  0014DA  CFDE F0D5          	movff	postinc2,fprintf@val
  9703  0014DE  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9704  0014E2  0E00               	movlw	0
  9705  0014E4  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9706  0014E6  0EFF               	movlw	-1
  9707  0014E8  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9708  0014EA  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9709  0014EC                     l12461:
  9710                           
  9711                           ; BSR set to: 0
  9712  0014EC  0E02               	movlw	2
  9713  0014EE                     L1:
  9714  0014EE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9718  0014F0  0E64               	movlw	100
  9719  0014F2  19DE               	xorwf	fprintf@c& (0+255),w,b
  9720  0014F4  A4D8               	btfss	status,2,c
  9721  0014F6  D00E               	goto	l12471
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;tff.c: 1872: if (val >= 0x80000000) {
  9725  0014F8  0E80               	movlw	128
  9726  0014FA  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9727  0014FC  A0D8               	btfss	status,0,c
  9728  0014FE  D00A               	goto	l12471
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;tff.c: 1873: val = 0 - val;
  9732  001500  6DD5               	negf	fprintf@val& (0+255),b
  9733  001502  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9734  001504  B0D8               	btfsc	status,0,c
  9735  001506  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9736  001508  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9737  00150A  B0D8               	btfsc	status,0,c
  9738  00150C  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9739  00150E  0E00               	movlw	0
  9740  001510  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;tff.c: 1874: f |= 4;
  9744  001512  85D3               	bsf	fprintf@f& (0+255),2,b
  9745  001514                     l12471:
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9749  001514  0E00               	movlw	0
  9750  001516  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9751  001518  0E0F               	movlw	15
  9752  00151A  6FDC               	movwf	fprintf@i& (0+255),b
  9753                           
  9754                           ; BSR set to: 0
  9755  00151C  0E00               	movlw	0
  9756  00151E  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9757  001520                     l12475:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9761  001520  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
  9762  001524  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
  9763  001528  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
  9764  00152C  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
  9765  001530  51D4               	movf	fprintf@r& (0+255),w,b
  9766  001532  6E0E               	movwf	___llmod@divisor^0,c
  9767  001534  6A0F               	clrf	(___llmod@divisor+1)^0,c
  9768  001536  6A10               	clrf	(___llmod@divisor+2)^0,c
  9769  001538  6A11               	clrf	(___llmod@divisor+3)^0,c
  9770  00153A  ECCD  F026         	call	___llmod	;wreg free
  9771  00153E  500A               	movf	?___llmod^0,w,c
  9772  001540  0F30               	addlw	48
  9773  001542  0100               	movlb	0	; () banked
  9774  001544  6FDE               	movwf	fprintf@c& (0+255),b
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;tff.c: 1880: if (c > '9') c += 7;
  9778  001546  0E39               	movlw	57
  9779  001548  65DE               	cpfsgt	fprintf@c& (0+255),b
  9780  00154A  D002               	goto	l12481
  9781                           
  9782                           ; BSR set to: 0
  9783  00154C  0E07               	movlw	7
  9784  00154E  27DE               	addwf	fprintf@c& (0+255),f,b
  9785  001550                     l12481:
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;tff.c: 1881: s[--i] = c;
  9789  001550  07DC               	decf	fprintf@i& (0+255),f,b
  9790  001552  A0D8               	btfss	status,0,c
  9791  001554  07DD               	decf	(fprintf@i+1)& (0+255),f,b
  9792  001556  51DC               	movf	fprintf@i& (0+255),w,b
  9793  001558  0FBD               	addlw	low fprintf@s
  9794  00155A  6ED9               	movwf	fsr2l,c
  9795  00155C  6ADA               	clrf	fsr2h,c
  9796  00155E  C0DE  FFDF         	movff	fprintf@c,indf2
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;tff.c: 1882: val /= r;
  9800  001562  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
  9801  001566  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
  9802  00156A  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
  9803  00156E  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
  9804  001572  51D4               	movf	fprintf@r& (0+255),w,b
  9805  001574  6E0E               	movwf	___lldiv@divisor^0,c
  9806  001576  6A0F               	clrf	(___lldiv@divisor+1)^0,c
  9807  001578  6A10               	clrf	(___lldiv@divisor+2)^0,c
  9808  00157A  6A11               	clrf	(___lldiv@divisor+3)^0,c
  9809  00157C  EC32  F025         	call	___lldiv	;wreg free
  9810  001580  C00A  F0D5         	movff	?___lldiv,fprintf@val
  9811  001584  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
  9812  001588  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
  9813  00158C  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
  9814                           
  9815                           ;tff.c: 1883: } while (i && val);
  9816  001590  0100               	movlb	0	; () banked
  9817  001592  51DC               	movf	fprintf@i& (0+255),w,b
  9818  001594  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
  9819  001596  B4D8               	btfsc	status,2,c
  9820  001598  D006               	goto	u14860
  9821                           
  9822                           ; BSR set to: 0
  9823  00159A  51D5               	movf	fprintf@val& (0+255),w,b
  9824  00159C  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
  9825  00159E  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
  9826  0015A0  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
  9827  0015A2  A4D8               	btfss	status,2,c
  9828  0015A4  D7BD               	goto	l12475
  9829  0015A6                     u14860:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
  9833  0015A6  51DC               	movf	fprintf@i& (0+255),w,b
  9834  0015A8  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
  9835  0015AA  A4D8               	btfss	status,2,c
  9836                           
  9837                           ; BSR set to: 0
  9838  0015AC  A5D3               	btfss	fprintf@f& (0+255),2,b
  9839  0015AE  D009               	goto	l12495
  9840                           
  9841                           ; BSR set to: 0
  9842  0015B0  07DC               	decf	fprintf@i& (0+255),f,b
  9843  0015B2  A0D8               	btfss	status,0,c
  9844  0015B4  07DD               	decf	(fprintf@i+1)& (0+255),f,b
  9845  0015B6  51DC               	movf	fprintf@i& (0+255),w,b
  9846  0015B8  0FBD               	addlw	low fprintf@s
  9847  0015BA  6ED9               	movwf	fsr2l,c
  9848  0015BC  6ADA               	clrf	fsr2h,c
  9849  0015BE  0E2D               	movlw	45
  9850  0015C0  6EDF               	movwf	indf2,c
  9851  0015C2                     l12495:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
  9855  0015C2  51D1               	movf	fprintf@w& (0+255),w,b
  9856  0015C4  080F               	sublw	15
  9857  0015C6  6FD1               	movwf	fprintf@w& (0+255),b
  9858  0015C8  51D2               	movf	(fprintf@w+1)& (0+255),w,b
  9859  0015CA  A0D8               	btfss	status,0,c
  9860  0015CC  2AE8               	incf	wreg,f,c
  9861  0015CE  0800               	sublw	0
  9862  0015D0  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9863                           
  9864                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  9865  0015D2  D013               	goto	l12503
  9866  0015D4                     l1300:
  9867                           
  9868                           ; BSR set to: 0
  9869  0015D4  B1D3               	btfsc	fprintf@f& (0+255),0,b
  9870  0015D6  D004               	goto	l12499
  9871                           
  9872                           ; BSR set to: 0
  9873  0015D8  0E00               	movlw	0
  9874  0015DA  6FD0               	movwf	(_fprintf$2225+1)& (0+255),b
  9875  0015DC  0E20               	movlw	32
  9876  0015DE  D003               	goto	L2
  9877  0015E0                     l12499:
  9878                           
  9879                           ; BSR set to: 0
  9880  0015E0  0E00               	movlw	0
  9881  0015E2  6FD0               	movwf	(_fprintf$2225+1)& (0+255),b
  9882  0015E4  0E30               	movlw	48
  9883  0015E6                     L2:
  9884  0015E6  6FCF               	movwf	_fprintf$2225& (0+255),b
  9885                           
  9886                           ; BSR set to: 0
  9887  0015E8  07DC               	decf	fprintf@i& (0+255),f,b
  9888  0015EA  A0D8               	btfss	status,0,c
  9889  0015EC  07DD               	decf	(fprintf@i+1)& (0+255),f,b
  9890  0015EE  51DC               	movf	fprintf@i& (0+255),w,b
  9891  0015F0  0FBD               	addlw	low fprintf@s
  9892  0015F2  6ED9               	movwf	fsr2l,c
  9893  0015F4  6ADA               	clrf	fsr2h,c
  9894  0015F6  C0CF  FFDF         	movff	_fprintf$2225,indf2
  9895  0015FA                     l12503:
  9896                           
  9897                           ; BSR set to: 0
  9898  0015FA  51DC               	movf	fprintf@i& (0+255),w,b
  9899  0015FC  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
  9900  0015FE  B4D8               	btfsc	status,2,c
  9901  001600  D00A               	goto	u14910
  9902                           
  9903                           ; BSR set to: 0
  9904  001602  51DC               	movf	fprintf@i& (0+255),w,b
  9905  001604  5DD1               	subwf	fprintf@w& (0+255),w,b
  9906  001606  51D2               	movf	(fprintf@w+1)& (0+255),w,b
  9907  001608  0A80               	xorlw	128
  9908  00160A  6FBB               	movwf	??_fprintf& (0+255),b
  9909  00160C  51DD               	movf	(fprintf@i+1)& (0+255),w,b
  9910  00160E  0A80               	xorlw	128
  9911  001610  59BB               	subwfb	??_fprintf& (0+255),w,b
  9912  001612  A0D8               	btfss	status,0,c
  9913  001614  D7DF               	goto	l1300
  9914  001616                     u14910:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;tff.c: 1887: cc = fputs(&s[i], fil);
  9918  001616  51DC               	movf	fprintf@i& (0+255),w,b
  9919  001618  0FBD               	addlw	low fprintf@s
  9920  00161A  6FBB               	movwf	??_fprintf& (0+255),b
  9921  00161C  C0BB  F0AB         	movff	??_fprintf,fputs@str
  9922  001620  6BAC               	clrf	(fputs@str+1)& (0+255),b
  9923  001622  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9924  001626  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9925  00162A  EC9E  F028         	call	_fputs	;wreg free
  9926  00162E  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9927  001632  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9928  001636                     l12509:
  9929                           
  9930                           ; BSR set to: 0
  9931  001636  51DA               	movf	fprintf@cc& (0+255),w,b
  9932  001638  27CD               	addwf	fprintf@res& (0+255),f,b
  9933  00163A  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
  9934  00163C  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
  9935  00163E  D663               	goto	l12365
  9936  001640                     __end_of_fprintf:
  9937                           	callstack 0
  9938                           
  9939 ;; *************** function _fputs *****************
  9940 ;; Defined at:
  9941 ;;		line 1796 in file "bibliotecas/tff.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  str             2   75[BANK0 ] PTR const unsigned char 
  9944 ;;		 -> fprintf@s(16), ?_fprintf(2), fence(6), lo(13), 
  9945 ;;		 -> lt(12), vel(6), hora(7), 
  9946 ;;  fil             2   77[BANK0 ] PTR struct _FIL
  9947 ;;		 -> fil(28), 
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  n               2   79[BANK0 ] int 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  2   75[BANK0 ] int 
  9952 ;; Registers used:
  9953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 3F/0
  9956 ;;		On exit  : 3F/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9959 ;;      Params:         0       4       0       0       0       0       0       0       0
  9960 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9961 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9962 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9963 ;;Total ram usage:        7 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:   12
  9966 ;; This function calls:
  9967 ;;		_fputc
  9968 ;; This function is called by:
  9969 ;;		_fprintf
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           	psect	text62
  9974  00513C                     __ptext62:
  9975                           	callstack 0
  9976  00513C                     _fputs:
  9977                           	callstack 13
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;incstack = 0
  9984  00513C  0E00               	movlw	0
  9985  00513E  6FB0               	movwf	(fputs@n+1)& (0+255),b
  9986  005140  0E00               	movlw	0
  9987  005142  6FAF               	movwf	fputs@n& (0+255),b
  9988  005144  D01B               	goto	l11947
  9989  005146                     l11941:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
  9993  005146  C0AB  FFD9         	movff	fputs@str,fsr2l
  9994  00514A  C0AC  FFDA         	movff	fputs@str+1,fsr2h
  9995  00514E  50DF               	movf	indf2,w,c
  9996  005150  6E4C               	movwf	??_fputs^0,c
  9997  005152  504C               	movf	??_fputs^0,w,c
  9998  005154  6FA4               	movwf	fputc@chr& (0+255),b
  9999  005156  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10000  005158  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10001  00515C  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10002  005160  EC3A  F02B         	call	_fputc	;wreg free
 10003  005164  29A4               	incf	?_fputc& (0+255),w,b
 10004  005166  E106               	bnz	l11945
 10005  005168  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10006  00516A  A4D8               	btfss	status,2,c
 10007  00516C  D003               	goto	l11945
 10008                           
 10009                           ; BSR set to: 0
 10010  00516E  69AB               	setf	?_fputs& (0+255),b
 10011  005170  69AC               	setf	(?_fputs+1)& (0+255),b
 10012  005172  0012               	return	
 10013  005174                     l11945:
 10014                           
 10015                           ; BSR set to: 0
 10016  005174  4BAB               	infsnz	fputs@str& (0+255),f,b
 10017  005176  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10018  005178  4BAF               	infsnz	fputs@n& (0+255),f,b
 10019  00517A  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10020  00517C                     l11947:
 10021                           
 10022                           ; BSR set to: 0
 10023  00517C  C0AB  FFD9         	movff	fputs@str,fsr2l
 10024  005180  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10025  005184  50DF               	movf	indf2,w,c
 10026  005186  A4D8               	btfss	status,2,c
 10027  005188  D7DE               	goto	l11941
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;tff.c: 1806: };tff.c: 1807: return n;
 10031  00518A  C0AF  F0AB         	movff	fputs@n,?_fputs
 10032  00518E  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10033                           
 10034                           ; BSR set to: 0
 10035  005192  0012               	return		;funcret
 10036  005194                     __end_of_fputs:
 10037                           	callstack 0
 10038                           
 10039 ;; *************** function _fputc *****************
 10040 ;; Defined at:
 10041 ;;		line 1769 in file "bibliotecas/tff.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  chr             2   68[BANK0 ] int 
 10044 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10045 ;;		 -> fil(28), 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  bw              2   73[BANK0 ] unsigned int 
 10048 ;;  c               1   72[BANK0 ] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  2   68[BANK0 ] int 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 3F/0
 10055 ;;		On exit  : 3F/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10058 ;;      Params:         0       4       0       0       0       0       0       0       0
 10059 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10061 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10062 ;;Total ram usage:        7 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:   11
 10065 ;; This function calls:
 10066 ;;		_f_write
 10067 ;; This function is called by:
 10068 ;;		_fputs
 10069 ;;		_fprintf
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text63
 10074  005674                     __ptext63:
 10075                           	callstack 0
 10076  005674                     _fputc:
 10077                           	callstack 13
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;incstack = 0
 10084  005674  51A6               	movf	fputc@fil& (0+255),w,b
 10085  005676  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10086  005678  A4D8               	btfss	status,2,c
 10087  00567A  D005               	goto	l1250
 10088  00567C                     u13350:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;tff.c: 1783: return chr;
 10092  00567C  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10093  005680  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10094  005684  0012               	return	
 10095  005686                     l1250:
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10099  005686  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10103  00568A  C0A6  F086         	movff	fputc@fil,f_write@fp
 10104  00568E  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10105  005692  0EA8               	movlw	low fputc@c
 10106  005694  6F88               	movwf	f_write@buff& (0+255),b
 10107  005696  0E00               	movlw	0
 10108  005698  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10109  00569A  0E01               	movlw	1
 10110  00569C  6F89               	movwf	f_write@btw& (0+255),b
 10111  00569E  0EA9               	movlw	low fputc@bw
 10112  0056A0  6F8B               	movwf	f_write@bw& (0+255),b
 10113  0056A2  EC09  F000         	call	_f_write	;wreg free
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;tff.c: 1787: return bw ? chr : -1;
 10117  0056A6  51A9               	movf	fputc@bw& (0+255),w,b
 10118  0056A8  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10119  0056AA  A4D8               	btfss	status,2,c
 10120  0056AC  D7E7               	goto	u13350
 10121                           
 10122                           ; BSR set to: 0
 10123  0056AE  69A4               	setf	?_fputc& (0+255),b
 10124  0056B0  69A5               	setf	(?_fputc+1)& (0+255),b
 10125                           
 10126                           ; BSR set to: 0
 10127  0056B2  0012               	return		;funcret
 10128  0056B4                     __end_of_fputc:
 10129                           	callstack 0
 10130                           
 10131 ;; *************** function _f_write *****************
 10132 ;; Defined at:
 10133 ;;		line 999 in file "bibliotecas/tff.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10136 ;;		 -> fil(28), 
 10137 ;;  buff            1   40[BANK0 ] PTR const void 
 10138 ;;		 -> fputc@c(1), 
 10139 ;;  btw             2   41[BANK0 ] unsigned int 
 10140 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10141 ;;		 -> fputc@bw(2), 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  sect            4   58[BANK0 ] unsigned long 
 10144 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10145 ;;  clust           2   64[BANK0 ] unsigned short 
 10146 ;;  cc              2   62[BANK0 ] unsigned int 
 10147 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10148 ;;		 -> fputc@c(1), 
 10149 ;;  res             1   56[BANK0 ] enum E155
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      enum E155
 10152 ;; Registers used:
 10153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 3F/0
 10156 ;;		On exit  : 3F/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10159 ;;      Params:         0       6       0       0       0       0       0       0       0
 10160 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10161 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10162 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10163 ;;Total ram usage:       30 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:   10
 10166 ;; This function calls:
 10167 ;;		_clust2sect
 10168 ;;		_create_chain
 10169 ;;		_disk_write
 10170 ;;		_memcpy
 10171 ;;		_move_window
 10172 ;;		_validate
 10173 ;; This function is called by:
 10174 ;;		_fputc
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text64
 10179  000012                     __ptext64:
 10180                           	callstack 0
 10181  000012                     _f_write:
 10182                           	callstack 13
 10183                           
 10184                           ; BSR set to: 0
 10185                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;incstack = 0
 10189  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;tff.c: 1013: *bw = 0;
 10193  000016  518B               	movf	f_write@bw& (0+255),w,b
 10194  000018  6ED9               	movwf	fsr2l,c
 10195  00001A  6ADA               	clrf	fsr2h,c
 10196  00001C  0E00               	movlw	0
 10197  00001E  6EDE               	movwf	postinc2,c
 10198  000020  0E00               	movlw	0
 10199  000022  6EDD               	movwf	postdec2,c
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10203  000024  EE20 F004          	lfsr	2,4
 10204  000028  5186               	movf	f_write@fp& (0+255),w,b
 10205  00002A  26D9               	addwf	fsr2l,f,c
 10206  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10207  00002E  22DA               	addwfc	fsr2h,f,c
 10208  000030  CFDE F010          	movff	postinc2,validate@fs
 10209  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10210  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10211  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10212  000040  CFDE F012          	movff	postinc2,validate@id
 10213  000044  CFDD F013          	movff	postdec2,validate@id+1
 10214  000048  EC0B  F02A         	call	_validate	;wreg free
 10215  00004C  0100               	movlb	0	; () banked
 10216  00004E  6F98               	movwf	f_write@res& (0+255),b
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;tff.c: 1015: if (res != FR_OK) return res;
 10220  000050  5198               	movf	f_write@res& (0+255),w,b
 10221  000052  A4D8               	btfss	status,2,c
 10222  000054  0012               	return	
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10226  000056  EE20 F002          	lfsr	2,2
 10227  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10228  00005C  26D9               	addwf	fsr2l,f,c
 10229  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10230  000060  22DA               	addwfc	fsr2h,f,c
 10231  000062  BEDF               	btfsc	indf2,7,c
 10232  000064  0012               	return	
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10236  000066  EE20 F002          	lfsr	2,2
 10237  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10238  00006C  26D9               	addwf	fsr2l,f,c
 10239  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10240  000070  22DA               	addwfc	fsr2h,f,c
 10241  000072  A2DF               	btfss	indf2,1,c
 10242  000074  0012               	return	
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10246  000076  EE20 F00A          	lfsr	2,10
 10247  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10248  00007C  26D9               	addwf	fsr2l,f,c
 10249  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10250  000080  22DA               	addwfc	fsr2h,f,c
 10251  000082  EE10 F00A          	lfsr	1,10
 10252  000086  5186               	movf	f_write@fp& (0+255),w,b
 10253  000088  26E1               	addwf	fsr1l,f,c
 10254  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10255  00008C  22E2               	addwfc	fsr1h,f,c
 10256  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10257  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10258  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10259  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10260  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10261  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10262  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10263  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10264  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10265  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10266  0000AA  0E00               	movlw	0
 10267  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10268  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10269  0000B0  0E00               	movlw	0
 10270  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10271  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10272  0000B6  50DE               	movf	postinc2,w,c
 10273  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10274  0000BA  50DE               	movf	postinc2,w,c
 10275  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10276  0000BE  50DE               	movf	postinc2,w,c
 10277  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10278  0000C2  50DE               	movf	postinc2,w,c
 10279  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10280  0000C6  A0D8               	btfss	status,0,c
 10281  0000C8  0012               	return	
 10282  0000CA  D22D               	goto	l11241
 10283  0000CC                     l11165:
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10287  0000CC  EE20 F006          	lfsr	2,6
 10288  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10289  0000D2  26D9               	addwf	fsr2l,f,c
 10290  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10291  0000D6  22DA               	addwfc	fsr2h,f,c
 10292  0000D8  0EFF               	movlw	255
 10293  0000DA  14DE               	andwf	postinc2,w,c
 10294  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10295  0000DE  0E01               	movlw	1
 10296  0000E0  14DE               	andwf	postinc2,w,c
 10297  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10298  0000E4  0E00               	movlw	0
 10299  0000E6  14DE               	andwf	postinc2,w,c
 10300  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10301  0000EA  0E00               	movlw	0
 10302  0000EC  14DE               	andwf	postinc2,w,c
 10303  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10304  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10305  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10306  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10307  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10308  0000F8  A4D8               	btfss	status,2,c
 10309  0000FA  D15E               	goto	l11217
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10313  0000FC  EE20 F004          	lfsr	2,4
 10314  000100  5186               	movf	f_write@fp& (0+255),w,b
 10315  000102  26D9               	addwf	fsr2l,f,c
 10316  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10317  000106  22DA               	addwfc	fsr2h,f,c
 10318  000108  EE10 F01D          	lfsr	1,29
 10319  00010C  50DE               	movf	postinc2,w,c
 10320  00010E  26E1               	addwf	fsr1l,f,c
 10321  000110  50DD               	movf	postdec2,w,c
 10322  000112  22E2               	addwfc	fsr1h,f,c
 10323  000114  EE20 F003          	lfsr	2,3
 10324  000118  5186               	movf	f_write@fp& (0+255),w,b
 10325  00011A  26D9               	addwf	fsr2l,f,c
 10326  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10327  00011E  22DA               	addwfc	fsr2h,f,c
 10328  000120  50E6               	movf	postinc1,w,c
 10329  000122  5CDE               	subwf	postinc2,w,c
 10330  000124  A0D8               	btfss	status,0,c
 10331  000126  D06B               	goto	l11189
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;tff.c: 1024: if (fp->fptr == 0) {
 10335  000128  EE20 F006          	lfsr	2,6
 10336  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10337  00012E  26D9               	addwf	fsr2l,f,c
 10338  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10339  000132  22DA               	addwfc	fsr2h,f,c
 10340  000134  50DE               	movf	postinc2,w,c
 10341  000136  10DE               	iorwf	postinc2,w,c
 10342  000138  10DE               	iorwf	postinc2,w,c
 10343  00013A  10DE               	iorwf	postinc2,w,c
 10344  00013C  A4D8               	btfss	status,2,c
 10345  00013E  D023               	goto	l11177
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;tff.c: 1025: clust = fp->org_clust;
 10349  000140  EE20 F00E          	lfsr	2,14
 10350  000144  5186               	movf	f_write@fp& (0+255),w,b
 10351  000146  26D9               	addwf	fsr2l,f,c
 10352  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10353  00014A  22DA               	addwfc	fsr2h,f,c
 10354  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10355  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;tff.c: 1026: if (clust == 0)
 10359  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10360  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10361  000158  A4D8               	btfss	status,2,c
 10362  00015A  D025               	goto	l11179
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10366  00015C  0E00               	movlw	0
 10367  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10368  000160  0E00               	movlw	0
 10369  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10370  000164  ECF8  F016         	call	_create_chain	;wreg free
 10371  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10372  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10373  000170  EE20 F00E          	lfsr	2,14
 10374  000174  5186               	movf	f_write@fp& (0+255),w,b
 10375  000176  26D9               	addwf	fsr2l,f,c
 10376  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10377  00017A  22DA               	addwfc	fsr2h,f,c
 10378  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10379  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10380  000184  D010               	goto	l11179
 10381  000186                     l11177:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10385  000186  EE20 F010          	lfsr	2,16
 10386  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10387  00018C  26D9               	addwf	fsr2l,f,c
 10388  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10389  000190  22DA               	addwfc	fsr2h,f,c
 10390  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10391  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10392  00019A  ECF8  F016         	call	_create_chain	;wreg free
 10393  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10394  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10395  0001A6                     l11179:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10399  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10400  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10401  0001AA  B4D8               	btfsc	status,2,c
 10402  0001AC  D1C0               	goto	u12830
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10406  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10407  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10408  0001B2  B4D8               	btfsc	status,2,c
 10409  0001B4  D1EF               	goto	l11251
 10410                           
 10411                           ; BSR set to: 0
 10412  0001B6  EE20 F004          	lfsr	2,4
 10413  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10414  0001BC  26D9               	addwf	fsr2l,f,c
 10415  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10416  0001C0  22DA               	addwfc	fsr2h,f,c
 10417  0001C2  EE10 F016          	lfsr	1,22
 10418  0001C6  50DE               	movf	postinc2,w,c
 10419  0001C8  26E1               	addwf	fsr1l,f,c
 10420  0001CA  50DD               	movf	postdec2,w,c
 10421  0001CC  22E2               	addwfc	fsr1h,f,c
 10422  0001CE  50E6               	movf	postinc1,w,c
 10423  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10424  0001D2  50E6               	movf	postinc1,w,c
 10425  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10426  0001D6  B0D8               	btfsc	status,0,c
 10427  0001D8  D1DD               	goto	l11251
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;tff.c: 1033: fp->curr_clust = clust;
 10431  0001DA  EE20 F010          	lfsr	2,16
 10432  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10433  0001E0  26D9               	addwf	fsr2l,f,c
 10434  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10435  0001E4  22DA               	addwfc	fsr2h,f,c
 10436  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10437  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10438                           
 10439                           ;tff.c: 1034: fp->csect = 0;
 10440  0001EE  EE20 F003          	lfsr	2,3
 10441  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10442  0001F4  26D9               	addwf	fsr2l,f,c
 10443  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10444  0001F8  22DA               	addwfc	fsr2h,f,c
 10445  0001FA  0E00               	movlw	0
 10446  0001FC  6EDF               	movwf	indf2,c
 10447  0001FE                     l11189:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10451  0001FE  EE20 F010          	lfsr	2,16
 10452  000202  5186               	movf	f_write@fp& (0+255),w,b
 10453  000204  26D9               	addwf	fsr2l,f,c
 10454  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10455  000208  22DA               	addwfc	fsr2h,f,c
 10456  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10457  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10458  000212  EC98  F021         	call	_clust2sect	;wreg free
 10459  000216  0100               	movlb	0	; () banked
 10460  000218  EE20 F003          	lfsr	2,3
 10461  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10462  00021E  26D9               	addwf	fsr2l,f,c
 10463  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10464  000222  22DA               	addwfc	fsr2h,f,c
 10465  000224  50DF               	movf	indf2,w,c
 10466  000226  6F8C               	movwf	??_f_write& (0+255),b
 10467  000228  518C               	movf	??_f_write& (0+255),w,b
 10468  00022A  2416               	addwf	?_clust2sect^0,w,c
 10469  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10470  00022E  0E00               	movlw	0
 10471  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10472  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10473  000234  0E00               	movlw	0
 10474  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10475  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10476  00023A  0E00               	movlw	0
 10477  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10478  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;tff.c: 1037: cc = btw / 512U;
 10482  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10483  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10484  000248  0E09               	movlw	9
 10485  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10486  00024C                     u12745:
 10487  00024C  90D8               	bcf	status,0,c
 10488  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10489  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10490  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10491  000254  D7FB               	goto	u12745
 10492  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10493  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;tff.c: 1038: if (cc) {
 10497  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10498  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10499  000262  B4D8               	btfsc	status,2,c
 10500  000264  D06A               	goto	l11207
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10504  000266  EE20 F003          	lfsr	2,3
 10505  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10506  00026C  26D9               	addwf	fsr2l,f,c
 10507  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10508  000270  22DA               	addwfc	fsr2h,f,c
 10509  000272  50DF               	movf	indf2,w,c
 10510  000274  6F8C               	movwf	??_f_write& (0+255),b
 10511  000276  518C               	movf	??_f_write& (0+255),w,b
 10512  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10513  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10514  00027C  0E00               	movlw	0
 10515  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10516  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10517  000282  EE20 F004          	lfsr	2,4
 10518  000286  5186               	movf	f_write@fp& (0+255),w,b
 10519  000288  26D9               	addwf	fsr2l,f,c
 10520  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10521  00028C  22DA               	addwfc	fsr2h,f,c
 10522  00028E  EE10 F01D          	lfsr	1,29
 10523  000292  50DE               	movf	postinc2,w,c
 10524  000294  26E1               	addwf	fsr1l,f,c
 10525  000296  50DD               	movf	postdec2,w,c
 10526  000298  22E2               	addwfc	fsr1h,f,c
 10527  00029A  50E7               	movf	indf1,w,c
 10528  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10529  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10530  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10531  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10532  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10533  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10534  0002A8  B0D8               	btfsc	status,0,c
 10535  0002AA  D01C               	goto	l11199
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10539  0002AC  EE20 F004          	lfsr	2,4
 10540  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10541  0002B2  26D9               	addwf	fsr2l,f,c
 10542  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10543  0002B6  22DA               	addwfc	fsr2h,f,c
 10544  0002B8  EE10 F01D          	lfsr	1,29
 10545  0002BC  50DE               	movf	postinc2,w,c
 10546  0002BE  26E1               	addwf	fsr1l,f,c
 10547  0002C0  50DD               	movf	postdec2,w,c
 10548  0002C2  22E2               	addwfc	fsr1h,f,c
 10549  0002C4  50E7               	movf	indf1,w,c
 10550  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10551  0002C8  EE20 F003          	lfsr	2,3
 10552  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10553  0002CE  26D9               	addwf	fsr2l,f,c
 10554  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10555  0002D2  22DA               	addwfc	fsr2h,f,c
 10556  0002D4  50DF               	movf	indf2,w,c
 10557  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10558  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10559  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10560  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10561  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10562  0002E0  A0D8               	btfss	status,0,c
 10563  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10564  0002E4                     l11199:
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10568  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10569  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10570  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10571  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10572  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10573  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10574  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10575  0002FE  0E00               	movlw	0
 10576  000300  ECC1  F029         	call	_disk_write
 10577  000304  0900               	iorlw	0
 10578  000306  A4D8               	btfss	status,2,c
 10579  000308  D145               	goto	l11251
 10580                           
 10581                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10582  00030A  0100               	movlb	0	; () banked
 10583  00030C  EE20 F003          	lfsr	2,3
 10584  000310  5186               	movf	f_write@fp& (0+255),w,b
 10585  000312  26D9               	addwf	fsr2l,f,c
 10586  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10587  000316  22DA               	addwfc	fsr2h,f,c
 10588  000318  519E               	movf	f_write@cc& (0+255),w,b
 10589  00031A  26DF               	addwf	indf2,f,c
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;tff.c: 1044: wcnt = 512U * cc;
 10593  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10594  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10595  000324  0E09               	movlw	9
 10596  000326                     u12785:
 10597  000326  90D8               	bcf	status,0,c
 10598  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10599  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10600  00032C  2EE8               	decfsz	wreg,f,c
 10601  00032E  D7FB               	goto	u12785
 10602  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10603  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10604                           
 10605                           ;tff.c: 1045: continue;
 10606  000338  D0DC               	goto	l11233
 10607  00033A                     l11207:
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10611  00033A  EE20 F00A          	lfsr	2,10
 10612  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10613  000340  26D9               	addwf	fsr2l,f,c
 10614  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10615  000344  22DA               	addwfc	fsr2h,f,c
 10616  000346  EE10 F006          	lfsr	1,6
 10617  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10618  00034C  26E1               	addwf	fsr1l,f,c
 10619  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10620  000350  22E2               	addwfc	fsr1h,f,c
 10621  000352  50DE               	movf	postinc2,w,c
 10622  000354  5CE6               	subwf	postinc1,w,c
 10623  000356  50DE               	movf	postinc2,w,c
 10624  000358  58E6               	subwfb	postinc1,w,c
 10625  00035A  50DE               	movf	postinc2,w,c
 10626  00035C  58E6               	subwfb	postinc1,w,c
 10627  00035E  50DE               	movf	postinc2,w,c
 10628  000360  58E6               	subwfb	postinc1,w,c
 10629  000362  A0D8               	btfss	status,0,c
 10630  000364  D022               	goto	l11215
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10634  000366  0E00               	movlw	0
 10635  000368  6E35               	movwf	move_window@sector^0,c
 10636  00036A  0E00               	movlw	0
 10637  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10638  00036E  0E00               	movlw	0
 10639  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10640  000372  0E00               	movlw	0
 10641  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10642  000376  EC52  F015         	call	_move_window	;wreg free
 10643  00037A  0900               	iorlw	0
 10644  00037C  B4D8               	btfsc	status,2,c
 10645  00037E  D10A               	goto	l11251
 10646                           
 10647                           ;tff.c: 1049: fp->fs->winsect = sect;
 10648  000380  0100               	movlb	0	; () banked
 10649  000382  EE20 F004          	lfsr	2,4
 10650  000386  5186               	movf	f_write@fp& (0+255),w,b
 10651  000388  26D9               	addwf	fsr2l,f,c
 10652  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10653  00038C  22DA               	addwfc	fsr2h,f,c
 10654  00038E  EE10 F004          	lfsr	1,4
 10655  000392  50DE               	movf	postinc2,w,c
 10656  000394  26E1               	addwf	fsr1l,f,c
 10657  000396  50DD               	movf	postdec2,w,c
 10658  000398  22E2               	addwfc	fsr1h,f,c
 10659  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10660  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10661  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10662  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10663  0003AA                     l11215:
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10667  0003AA  EE20 F003          	lfsr	2,3
 10668  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10669  0003B0  26D9               	addwf	fsr2l,f,c
 10670  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10671  0003B4  22DA               	addwfc	fsr2h,f,c
 10672  0003B6  2ADF               	incf	indf2,f,c
 10673  0003B8                     l11217:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10677  0003B8  EE20 F010          	lfsr	2,16
 10678  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10679  0003BE  26D9               	addwf	fsr2l,f,c
 10680  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10681  0003C2  22DA               	addwfc	fsr2h,f,c
 10682  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10683  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10684  0003CC  EC98  F021         	call	_clust2sect	;wreg free
 10685  0003D0  0100               	movlb	0	; () banked
 10686  0003D2  EE20 F003          	lfsr	2,3
 10687  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10688  0003D8  26D9               	addwf	fsr2l,f,c
 10689  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10690  0003DC  22DA               	addwfc	fsr2h,f,c
 10691  0003DE  50DF               	movf	indf2,w,c
 10692  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10693  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10694  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10695  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10696  0003E8  0E00               	movlw	0
 10697  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10698  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10699  0003EE  0E00               	movlw	0
 10700  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10701  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10702  0003F4  0E00               	movlw	0
 10703  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10704  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10705  0003FA  0EFF               	movlw	255
 10706  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10707  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10708  000400  0EFF               	movlw	255
 10709  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10710  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10711  000406  0EFF               	movlw	255
 10712  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10713  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10714  00040C  0EFF               	movlw	255
 10715  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10716  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10720  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10721  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10722  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10723  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10724  000422  EC52  F015         	call	_move_window	;wreg free
 10725  000426  0900               	iorlw	0
 10726  000428  B4D8               	btfsc	status,2,c
 10727  00042A  D0B4               	goto	l11251
 10728                           
 10729                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10730  00042C  0EFF               	movlw	255
 10731  00042E  0100               	movlb	0	; () banked
 10732  000430  6F8C               	movwf	??_f_write& (0+255),b
 10733  000432  0E01               	movlw	1
 10734  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10735  000436  EE20 F006          	lfsr	2,6
 10736  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10737  00043C  26D9               	addwf	fsr2l,f,c
 10738  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10739  000440  22DA               	addwfc	fsr2h,f,c
 10740  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10741  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10742  00044A  518C               	movf	??_f_write& (0+255),w,b
 10743  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10744  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10745  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10746  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10747  000454  0800               	sublw	0
 10748  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10749  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10750  00045A  A0D8               	btfss	status,0,c
 10751  00045C  2AE8               	incf	wreg,f,c
 10752  00045E  0802               	sublw	2
 10753  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10754                           
 10755                           ; BSR set to: 0
 10756                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10757  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10758  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10759  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10760  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10761  00046A  B0D8               	btfsc	status,0,c
 10762  00046C  D004               	goto	l11229
 10763                           
 10764                           ; BSR set to: 0
 10765  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 10766  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 10767  000476                     l11229:
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 10771  000476  0EFF               	movlw	255
 10772  000478  6F8C               	movwf	??_f_write& (0+255),b
 10773  00047A  0E01               	movlw	1
 10774  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10775  00047E  EE20 F006          	lfsr	2,6
 10776  000482  5186               	movf	f_write@fp& (0+255),w,b
 10777  000484  26D9               	addwf	fsr2l,f,c
 10778  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10779  000488  22DA               	addwfc	fsr2h,f,c
 10780  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 10781  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 10782  000492  518C               	movf	??_f_write& (0+255),w,b
 10783  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10784  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 10785  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10786  00049A  EE20 F004          	lfsr	2,4
 10787  00049E  5186               	movf	f_write@fp& (0+255),w,b
 10788  0004A0  26D9               	addwf	fsr2l,f,c
 10789  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10790  0004A4  22DA               	addwfc	fsr2h,f,c
 10791  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 10792  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 10793  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 10794  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 10795  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 10796  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 10797  0004B6  0E20               	movlw	32
 10798  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10799  0004BA  6E0A               	movwf	memcpy@d1^0,c
 10800  0004BC  0E00               	movlw	0
 10801  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10802  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 10803  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 10804  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 10805  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 10806  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 10807  0004D0  EC75  F02A         	call	_memcpy	;wreg free
 10808                           
 10809                           ;tff.c: 1058: fp->fs->winflag = 1;
 10810  0004D4  0100               	movlb	0	; () banked
 10811  0004D6  EE20 F004          	lfsr	2,4
 10812  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 10813  0004DC  26D9               	addwf	fsr2l,f,c
 10814  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10815  0004E0  22DA               	addwfc	fsr2h,f,c
 10816  0004E2  EE10 F01F          	lfsr	1,31
 10817  0004E6  50DE               	movf	postinc2,w,c
 10818  0004E8  26E1               	addwf	fsr1l,f,c
 10819  0004EA  50DD               	movf	postdec2,w,c
 10820  0004EC  22E2               	addwfc	fsr1h,f,c
 10821  0004EE  0E01               	movlw	1
 10822  0004F0  6EE7               	movwf	indf1,c
 10823  0004F2                     l11233:
 10824                           
 10825                           ; BSR set to: 0
 10826  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 10827  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 10828                           
 10829                           ; BSR set to: 0
 10830  0004F6  EE20 F006          	lfsr	2,6
 10831  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 10832  0004FC  26D9               	addwf	fsr2l,f,c
 10833  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10834  000500  22DA               	addwfc	fsr2h,f,c
 10835  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 10836  000504  26DE               	addwf	postinc2,f,c
 10837  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10838  000508  22DE               	addwfc	postinc2,f,c
 10839  00050A  0E00               	movlw	0
 10840  00050C  22DE               	addwfc	postinc2,f,c
 10841  00050E  22DE               	addwfc	postinc2,f,c
 10842                           
 10843                           ; BSR set to: 0
 10844  000510  518B               	movf	f_write@bw& (0+255),w,b
 10845  000512  6ED9               	movwf	fsr2l,c
 10846  000514  6ADA               	clrf	fsr2h,c
 10847  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 10848  000518  26DE               	addwf	postinc2,f,c
 10849  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10850  00051C  22DD               	addwfc	postdec2,f,c
 10851                           
 10852                           ; BSR set to: 0
 10853  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 10854  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 10855  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10856  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 10857  000526                     l11241:
 10858                           
 10859                           ; BSR set to: 0
 10860  000526  5189               	movf	f_write@btw& (0+255),w,b
 10861  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 10862  00052A  A4D8               	btfss	status,2,c
 10863  00052C  D5CF               	goto	l11165
 10864  00052E                     u12830:
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 10868  00052E  EE20 F006          	lfsr	2,6
 10869  000532  5186               	movf	f_write@fp& (0+255),w,b
 10870  000534  26D9               	addwf	fsr2l,f,c
 10871  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10872  000538  22DA               	addwfc	fsr2h,f,c
 10873  00053A  EE10 F00A          	lfsr	1,10
 10874  00053E  5186               	movf	f_write@fp& (0+255),w,b
 10875  000540  26E1               	addwf	fsr1l,f,c
 10876  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10877  000544  22E2               	addwfc	fsr1h,f,c
 10878  000546  50DE               	movf	postinc2,w,c
 10879  000548  5CE6               	subwf	postinc1,w,c
 10880  00054A  50DE               	movf	postinc2,w,c
 10881  00054C  58E6               	subwfb	postinc1,w,c
 10882  00054E  50DE               	movf	postinc2,w,c
 10883  000550  58E6               	subwfb	postinc1,w,c
 10884  000552  50DE               	movf	postinc2,w,c
 10885  000554  58E6               	subwfb	postinc1,w,c
 10886  000556  B0D8               	btfsc	status,0,c
 10887  000558  D014               	goto	l11247
 10888                           
 10889                           ; BSR set to: 0
 10890  00055A  EE20 F006          	lfsr	2,6
 10891  00055E  5186               	movf	f_write@fp& (0+255),w,b
 10892  000560  26D9               	addwf	fsr2l,f,c
 10893  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10894  000564  22DA               	addwfc	fsr2h,f,c
 10895  000566  EE10 F00A          	lfsr	1,10
 10896  00056A  5186               	movf	f_write@fp& (0+255),w,b
 10897  00056C  26E1               	addwf	fsr1l,f,c
 10898  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10899  000570  22E2               	addwfc	fsr1h,f,c
 10900  000572  CFDE FFE6          	movff	postinc2,postinc1
 10901  000576  CFDE FFE6          	movff	postinc2,postinc1
 10902  00057A  CFDE FFE6          	movff	postinc2,postinc1
 10903  00057E  CFDE FFE6          	movff	postinc2,postinc1
 10904  000582                     l11247:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;tff.c: 1062: fp->flag |= 0x20;
 10908  000582  EE20 F002          	lfsr	2,2
 10909  000586  5186               	movf	f_write@fp& (0+255),w,b
 10910  000588  26D9               	addwf	fsr2l,f,c
 10911  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10912  00058C  22DA               	addwfc	fsr2h,f,c
 10913  00058E  0E00               	movlw	0
 10914  000590  8ADB               	bsf	plusw2,5,c
 10915  000592  0012               	return	
 10916  000594                     l11251:
 10917                           
 10918                           ;tff.c: 1066: fp->flag |= 0x80;
 10919  000594  0100               	movlb	0	; () banked
 10920  000596  EE20 F002          	lfsr	2,2
 10921  00059A  5186               	movf	f_write@fp& (0+255),w,b
 10922  00059C  26D9               	addwf	fsr2l,f,c
 10923  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10924  0005A0  22DA               	addwfc	fsr2h,f,c
 10925  0005A2  0E00               	movlw	0
 10926  0005A4  8EDB               	bsf	plusw2,7,c
 10927                           
 10928                           ; BSR set to: 0
 10929  0005A6  0012               	return		;funcret
 10930  0005A8                     __end_of_f_write:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _f_open *****************
 10934 ;; Defined at:
 10935 ;;		line 833 in file "bibliotecas/tff.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 10938 ;;		 -> fil(28), 
 10939 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 10940 ;;		 -> STR_16(13), filename(20), 
 10941 ;;  mode            1   60[BANK0 ] unsigned char 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  dw              4   79[BANK0 ] unsigned long 
 10944 ;;  rs              2   77[BANK0 ] unsigned short 
 10945 ;;  dj             14   86[BANK0 ] struct _DIR_E
 10946 ;;  fn             12   65[BANK0 ] unsigned char [12]
 10947 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 10948 ;;		 -> NULL(0), fs(544), 
 10949 ;;  res             1   83[BANK0 ] enum E155
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      enum E3231
 10952 ;; Registers used:
 10953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 3F/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10959 ;;      Params:         0       5       0       0       0       0       0       0       0
 10960 ;;      Locals:         0      35       0       0       0       0       0       0       0
 10961 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10962 ;;      Totals:         0      44       0       0       0       0       0       0       0
 10963 ;;Total ram usage:       44 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:   11
 10966 ;; This function calls:
 10967 ;;		_auto_mount
 10968 ;;		_get_fattime
 10969 ;;		_memcpy
 10970 ;;		_memset
 10971 ;;		_move_window
 10972 ;;		_remove_chain
 10973 ;;		_reserve_direntry
 10974 ;;		_trace_path
 10975 ;; This function is called by:
 10976 ;;		_escrita_sdcard
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text65
 10981  001640                     __ptext65:
 10982                           	callstack 0
 10983  001640                     _f_open:
 10984                           	callstack 15
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;incstack = 0
 10991  001640  EE20 F004          	lfsr	2,4
 10992  001644  5198               	movf	f_open@fp& (0+255),w,b
 10993  001646  26D9               	addwf	fsr2l,f,c
 10994  001648  5199               	movf	(f_open@fp+1)& (0+255),w,b
 10995  00164A  22DA               	addwfc	fsr2h,f,c
 10996  00164C  0E00               	movlw	0
 10997  00164E  6EDE               	movwf	postinc2,c
 10998  001650  0E00               	movlw	0
 10999  001652  6EDD               	movwf	postdec2,c
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11003  001654  0E1F               	movlw	31
 11004  001656  179C               	andwf	f_open@mode& (0+255),f,b
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11008  001658  0E9A               	movlw	low f_open@path
 11009  00165A  6E3D               	movwf	auto_mount@path^0,c
 11010  00165C  519C               	movf	f_open@mode& (0+255),w,b
 11011  00165E  0B1E               	andlw	30
 11012  001660  6E3E               	movwf	auto_mount@chk_wp^0,c
 11013  001662  ECD4  F002         	call	_auto_mount	;wreg free
 11014  001666  0100               	movlb	0	; () banked
 11015  001668  6FB3               	movwf	f_open@res& (0+255),b
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;tff.c: 853: if (res != FR_OK) return res;
 11019  00166A  51B3               	movf	f_open@res& (0+255),w,b
 11020  00166C  B4D8               	btfsc	status,2,c
 11021  00166E  D002               	goto	l12135
 11022  001670                     u14240:
 11023                           
 11024                           ; BSR set to: 0
 11025  001670  51B3               	movf	f_open@res& (0+255),w,b
 11026  001672  0012               	return	
 11027  001674                     l12135:
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11031  001674  0EB6               	movlw	low f_open@dj
 11032  001676  6F7E               	movwf	trace_path@dj& (0+255),b
 11033  001678  0EA1               	movlw	low f_open@fn
 11034  00167A  6F7F               	movwf	trace_path@fn& (0+255),b
 11035  00167C  C09A  F080         	movff	f_open@path,trace_path@path
 11036  001680  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11037  001684  0EB4               	movlw	low f_open@dir
 11038  001686  6F82               	movwf	trace_path@dir& (0+255),b
 11039  001688  EC31  F00E         	call	_trace_path	;wreg free
 11040  00168C  0100               	movlb	0	; () banked
 11041  00168E  6FB3               	movwf	f_open@res& (0+255),b
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11045  001690  C09C  F09D         	movff	f_open@mode,??_f_open
 11046  001694  0E1C               	movlw	28
 11047  001696  179D               	andwf	??_f_open& (0+255),f,b
 11048  001698  B4D8               	btfsc	status,2,c
 11049  00169A  D0E0               	goto	l12197
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11053  00169C  51B3               	movf	f_open@res& (0+255),w,b
 11054  00169E  B4D8               	btfsc	status,2,c
 11055  0016A0  D035               	goto	l1108
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11059  0016A2  0E02               	movlw	2
 11060  0016A4  19B3               	xorwf	f_open@res& (0+255),w,b
 11061  0016A6  A4D8               	btfss	status,2,c
 11062  0016A8  D7E3               	goto	u14240
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11066  0016AA  0EB6               	movlw	low f_open@dj
 11067  0016AC  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11068  0016AE  0EB4               	movlw	low f_open@dir
 11069  0016B0  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11070  0016B2  EC71  F00F         	call	_reserve_direntry	;wreg free
 11071  0016B6  0100               	movlb	0	; () banked
 11072  0016B8  6FB3               	movwf	f_open@res& (0+255),b
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;tff.c: 864: if (res != FR_OK) return res;
 11076  0016BA  51B3               	movf	f_open@res& (0+255),w,b
 11077  0016BC  A4D8               	btfss	status,2,c
 11078  0016BE  D7D8               	goto	u14240
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;tff.c: 865: memset(dir, 0, 32);
 11082  0016C0  C0B4  F00A         	movff	f_open@dir,memset@p1
 11083  0016C4  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11084  0016C8  0E00               	movlw	0
 11085  0016CA  6E0D               	movwf	(memset@c+1)^0,c
 11086  0016CC  0E00               	movlw	0
 11087  0016CE  6E0C               	movwf	memset@c^0,c
 11088  0016D0  0E00               	movlw	0
 11089  0016D2  6E0F               	movwf	(memset@n+1)^0,c
 11090  0016D4  0E20               	movlw	32
 11091  0016D6  6E0E               	movwf	memset@n^0,c
 11092  0016D8  EC48  F02C         	call	_memset	;wreg free
 11093                           
 11094                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11095  0016DC  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11096  0016E0  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11097  0016E4  0EA1               	movlw	low f_open@fn
 11098  0016E6  6E0C               	movwf	memcpy@s1^0,c
 11099  0016E8  6A0D               	clrf	(memcpy@s1+1)^0,c
 11100  0016EA  0E00               	movlw	0
 11101  0016EC  6E0F               	movwf	(memcpy@n+1)^0,c
 11102  0016EE  0E0B               	movlw	11
 11103  0016F0  6E0E               	movwf	memcpy@n^0,c
 11104  0016F2  EC75  F02A         	call	_memcpy	;wreg free
 11105                           
 11106                           ;tff.c: 867: dir[12] = fn[11];
 11107  0016F6  0100               	movlb	0	; () banked
 11108  0016F8  EE20 F00C          	lfsr	2,12
 11109  0016FC  51B4               	movf	f_open@dir& (0+255),w,b
 11110  0016FE  26D9               	addwf	fsr2l,f,c
 11111  001700  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11112  001702  22DA               	addwfc	fsr2h,f,c
 11113  001704  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;tff.c: 868: mode |= 0x08;
 11117  001708  879C               	bsf	f_open@mode& (0+255),3,b
 11118                           
 11119                           ;tff.c: 869: }
 11120  00170A  D07B               	goto	l12185
 11121  00170C                     l1108:
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11125  00170C  A59C               	btfss	f_open@mode& (0+255),2,b
 11126  00170E  D002               	goto	l12165
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;tff.c: 872: return FR_EXIST;
 11130  001710  0E07               	movlw	7
 11131  001712  0012               	return	
 11132  001714                     l12165:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11136  001714  51B4               	movf	f_open@dir& (0+255),w,b
 11137  001716  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11138  001718  B4D8               	btfsc	status,2,c
 11139  00171A  D00C               	goto	u14310
 11140                           
 11141                           ; BSR set to: 0
 11142  00171C  EE20 F00B          	lfsr	2,11
 11143  001720  51B4               	movf	f_open@dir& (0+255),w,b
 11144  001722  26D9               	addwf	fsr2l,f,c
 11145  001724  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11146  001726  22DA               	addwfc	fsr2h,f,c
 11147  001728  50DF               	movf	indf2,w,c
 11148  00172A  6F9D               	movwf	??_f_open& (0+255),b
 11149  00172C  0E11               	movlw	17
 11150  00172E  179D               	andwf	??_f_open& (0+255),f,b
 11151  001730  B4D8               	btfsc	status,2,c
 11152  001732  D002               	goto	l1113
 11153  001734                     u14310:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;tff.c: 874: return FR_DENIED;
 11157  001734  0E06               	movlw	6
 11158  001736  0012               	return	
 11159  001738                     l1113:
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;tff.c: 875: if (mode & 0x08) {
 11163  001738  A79C               	btfss	f_open@mode& (0+255),3,b
 11164  00173A  D063               	goto	l12185
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11168  00173C  EE20 F01A          	lfsr	2,26
 11169  001740  51B4               	movf	f_open@dir& (0+255),w,b
 11170  001742  26D9               	addwf	fsr2l,f,c
 11171  001744  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11172  001746  22DA               	addwfc	fsr2h,f,c
 11173  001748  CFDE F0AD          	movff	postinc2,f_open@rs
 11174  00174C  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11175                           
 11176                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11177  001750  EE20 F01A          	lfsr	2,26
 11178  001754  51B4               	movf	f_open@dir& (0+255),w,b
 11179  001756  26D9               	addwf	fsr2l,f,c
 11180  001758  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11181  00175A  22DA               	addwfc	fsr2h,f,c
 11182  00175C  0E00               	movlw	0
 11183  00175E  6EDE               	movwf	postinc2,c
 11184  001760  0E00               	movlw	0
 11185  001762  6EDD               	movwf	postdec2,c
 11186                           
 11187                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11188  001764  EE20 F01C          	lfsr	2,28
 11189  001768  51B4               	movf	f_open@dir& (0+255),w,b
 11190  00176A  26D9               	addwf	fsr2l,f,c
 11191  00176C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11192  00176E  22DA               	addwfc	fsr2h,f,c
 11193  001770  6ADE               	clrf	postinc2,c
 11194  001772  6ADE               	clrf	postinc2,c
 11195  001774  6ADE               	clrf	postinc2,c
 11196  001776  6ADD               	clrf	postdec2,c
 11197                           
 11198                           ;tff.c: 884: dj.fs->winflag = 1;
 11199  001778  EE20 F01F          	lfsr	2,31
 11200  00177C  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11201  00177E  26D9               	addwf	fsr2l,f,c
 11202  001780  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11203  001782  22DA               	addwfc	fsr2h,f,c
 11204  001784  0E01               	movlw	1
 11205  001786  6EDF               	movwf	indf2,c
 11206                           
 11207                           ;tff.c: 885: dw = dj.fs->winsect;
 11208  001788  EE20 F004          	lfsr	2,4
 11209  00178C  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11210  00178E  26D9               	addwf	fsr2l,f,c
 11211  001790  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11212  001792  22DA               	addwfc	fsr2h,f,c
 11213  001794  CFDE F0AF          	movff	postinc2,f_open@dw
 11214  001798  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11215  00179C  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11216  0017A0  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11220  0017A4  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11221  0017A8  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11222  0017AC  ECEF  F022         	call	_remove_chain	;wreg free
 11223  0017B0  0900               	iorlw	0
 11224  0017B2  B4D8               	btfsc	status,2,c
 11225  0017B4  D00D               	goto	u14340
 11226  0017B6  C0AF  F035         	movff	f_open@dw,move_window@sector
 11227  0017BA  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11228  0017BE  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11229  0017C2  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11230  0017C6  EC52  F015         	call	_move_window	;wreg free
 11231  0017CA  0900               	iorlw	0
 11232  0017CC  A4D8               	btfss	status,2,c
 11233  0017CE  D002               	goto	l12183
 11234  0017D0                     u14340:
 11235                           
 11236                           ;tff.c: 887: return FR_RW_ERROR;
 11237  0017D0  0E08               	movlw	8
 11238  0017D2  0012               	return	
 11239  0017D4                     l12183:
 11240                           
 11241                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11242  0017D4  0EFF               	movlw	255
 11243  0017D6  0100               	movlb	0	; () banked
 11244  0017D8  6F9D               	movwf	??_f_open& (0+255),b
 11245  0017DA  0EFF               	movlw	255
 11246  0017DC  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11247  0017DE  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11248  0017E2  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11249  0017E6  519D               	movf	??_f_open& (0+255),w,b
 11250  0017E8  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11251  0017EA  519E               	movf	(??_f_open+1)& (0+255),w,b
 11252  0017EC  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11253  0017EE  EE20 F018          	lfsr	2,24
 11254  0017F2  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11255  0017F4  26D9               	addwf	fsr2l,f,c
 11256  0017F6  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11257  0017F8  22DA               	addwfc	fsr2h,f,c
 11258  0017FA  C09F  FFDE         	movff	??_f_open+2,postinc2
 11259  0017FE  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11260  001802                     l12185:
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11264  001802  A79C               	btfss	f_open@mode& (0+255),3,b
 11265  001804  D046               	goto	l12217
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;tff.c: 892: dir[11] = 0;
 11269  001806  EE20 F00B          	lfsr	2,11
 11270  00180A  51B4               	movf	f_open@dir& (0+255),w,b
 11271  00180C  26D9               	addwf	fsr2l,f,c
 11272  00180E  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11273  001810  22DA               	addwfc	fsr2h,f,c
 11274  001812  0E00               	movlw	0
 11275  001814  6EDF               	movwf	indf2,c
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;tff.c: 893: dw = get_fattime();
 11279  001816  EC92  F01A         	call	_get_fattime	;wreg free
 11280  00181A  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11281  00181E  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11282  001822  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11283  001826  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11284                           
 11285                           ; BSR set to: 1
 11286                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11287  00182A  0100               	movlb	0	; () banked
 11288  00182C  EE20 F00E          	lfsr	2,14
 11289  001830  51B4               	movf	f_open@dir& (0+255),w,b
 11290  001832  26D9               	addwf	fsr2l,f,c
 11291  001834  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11292  001836  22DA               	addwfc	fsr2h,f,c
 11293  001838  C0AF  FFDE         	movff	f_open@dw,postinc2
 11294  00183C  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11295  001840  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11296  001844  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;tff.c: 895: dj.fs->winflag = 1;
 11300  001848  EE20 F01F          	lfsr	2,31
 11301  00184C  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11302  00184E  26D9               	addwf	fsr2l,f,c
 11303  001850  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11304  001852  22DA               	addwfc	fsr2h,f,c
 11305  001854  0E01               	movlw	1
 11306  001856  6EDF               	movwf	indf2,c
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;tff.c: 896: mode |= 0x20;
 11310  001858  8B9C               	bsf	f_open@mode& (0+255),5,b
 11311  00185A  D01B               	goto	l12217
 11312  00185C                     l12197:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11316  00185C  51B3               	movf	f_open@res& (0+255),w,b
 11317  00185E  A4D8               	btfss	status,2,c
 11318  001860  D707               	goto	u14240
 11319                           
 11320                           ; BSR set to: 0
 11321                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11322  001862  51B4               	movf	f_open@dir& (0+255),w,b
 11323  001864  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11324  001866  B4D8               	btfsc	status,2,c
 11325  001868  D008               	goto	u14380
 11326                           
 11327                           ; BSR set to: 0
 11328  00186A  EE20 F00B          	lfsr	2,11
 11329  00186E  51B4               	movf	f_open@dir& (0+255),w,b
 11330  001870  26D9               	addwf	fsr2l,f,c
 11331  001872  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11332  001874  22DA               	addwfc	fsr2h,f,c
 11333  001876  A8DF               	btfss	indf2,4,c
 11334  001878  D002               	goto	l1123
 11335  00187A                     u14380:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;tff.c: 904: return FR_NO_FILE;
 11339  00187A  0E02               	movlw	2
 11340  00187C  0012               	return	
 11341  00187E                     l1123:
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11345  00187E  A39C               	btfss	f_open@mode& (0+255),1,b
 11346  001880  D008               	goto	l12217
 11347                           
 11348                           ; BSR set to: 0
 11349  001882  EE20 F00B          	lfsr	2,11
 11350  001886  51B4               	movf	f_open@dir& (0+255),w,b
 11351  001888  26D9               	addwf	fsr2l,f,c
 11352  00188A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11353  00188C  22DA               	addwfc	fsr2h,f,c
 11354  00188E  B0DF               	btfsc	indf2,0,c
 11355  001890  D751               	goto	u14310
 11356  001892                     l12217:
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11360  001892  EE20 F004          	lfsr	2,4
 11361  001896  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11362  001898  26D9               	addwf	fsr2l,f,c
 11363  00189A  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11364  00189C  22DA               	addwfc	fsr2h,f,c
 11365  00189E  EE10 F016          	lfsr	1,22
 11366  0018A2  5198               	movf	f_open@fp& (0+255),w,b
 11367  0018A4  26E1               	addwf	fsr1l,f,c
 11368  0018A6  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11369  0018A8  22E2               	addwfc	fsr1h,f,c
 11370  0018AA  CFDE FFE6          	movff	postinc2,postinc1
 11371  0018AE  CFDE FFE6          	movff	postinc2,postinc1
 11372  0018B2  CFDE FFE6          	movff	postinc2,postinc1
 11373  0018B6  CFDE FFE6          	movff	postinc2,postinc1
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;tff.c: 910: fp->dir_ptr = dir;
 11377  0018BA  EE20 F01A          	lfsr	2,26
 11378  0018BE  5198               	movf	f_open@fp& (0+255),w,b
 11379  0018C0  26D9               	addwf	fsr2l,f,c
 11380  0018C2  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11381  0018C4  22DA               	addwfc	fsr2h,f,c
 11382  0018C6  C0B4  FFDE         	movff	f_open@dir,postinc2
 11383  0018CA  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;tff.c: 912: fp->flag = mode;
 11387  0018CE  EE20 F002          	lfsr	2,2
 11388  0018D2  5198               	movf	f_open@fp& (0+255),w,b
 11389  0018D4  26D9               	addwf	fsr2l,f,c
 11390  0018D6  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11391  0018D8  22DA               	addwfc	fsr2h,f,c
 11392  0018DA  C09C  FFDF         	movff	f_open@mode,indf2
 11393                           
 11394                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11395  0018DE  EE20 F01A          	lfsr	2,26
 11396  0018E2  51B4               	movf	f_open@dir& (0+255),w,b
 11397  0018E4  26D9               	addwf	fsr2l,f,c
 11398  0018E6  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11399  0018E8  22DA               	addwfc	fsr2h,f,c
 11400  0018EA  EE10 F00E          	lfsr	1,14
 11401  0018EE  5198               	movf	f_open@fp& (0+255),w,b
 11402  0018F0  26E1               	addwf	fsr1l,f,c
 11403  0018F2  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11404  0018F4  22E2               	addwfc	fsr1h,f,c
 11405  0018F6  CFDE FFE6          	movff	postinc2,postinc1
 11406  0018FA  CFDD FFE5          	movff	postdec2,postdec1
 11407                           
 11408                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11409  0018FE  EE20 F01C          	lfsr	2,28
 11410  001902  51B4               	movf	f_open@dir& (0+255),w,b
 11411  001904  26D9               	addwf	fsr2l,f,c
 11412  001906  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11413  001908  22DA               	addwfc	fsr2h,f,c
 11414  00190A  EE10 F00A          	lfsr	1,10
 11415  00190E  5198               	movf	f_open@fp& (0+255),w,b
 11416  001910  26E1               	addwf	fsr1l,f,c
 11417  001912  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11418  001914  22E2               	addwfc	fsr1h,f,c
 11419  001916  CFDE FFE6          	movff	postinc2,postinc1
 11420  00191A  CFDE FFE6          	movff	postinc2,postinc1
 11421  00191E  CFDE FFE6          	movff	postinc2,postinc1
 11422  001922  CFDE FFE6          	movff	postinc2,postinc1
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11426  001926  EE20 F006          	lfsr	2,6
 11427  00192A  5198               	movf	f_open@fp& (0+255),w,b
 11428  00192C  26D9               	addwf	fsr2l,f,c
 11429  00192E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11430  001930  22DA               	addwfc	fsr2h,f,c
 11431  001932  6ADE               	clrf	postinc2,c
 11432  001934  6ADE               	clrf	postinc2,c
 11433  001936  6ADE               	clrf	postinc2,c
 11434  001938  6ADD               	clrf	postdec2,c
 11435                           
 11436                           ; BSR set to: 0
 11437  00193A  EE20 F003          	lfsr	2,3
 11438  00193E  5198               	movf	f_open@fp& (0+255),w,b
 11439  001940  26D9               	addwf	fsr2l,f,c
 11440  001942  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11441  001944  22DA               	addwfc	fsr2h,f,c
 11442  001946  0EFF               	movlw	255
 11443  001948  6EDF               	movwf	indf2,c
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11447  00194A  EE20 F004          	lfsr	2,4
 11448  00194E  5198               	movf	f_open@fp& (0+255),w,b
 11449  001950  26D9               	addwf	fsr2l,f,c
 11450  001952  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11451  001954  22DA               	addwfc	fsr2h,f,c
 11452  001956  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11453  00195A  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11454                           
 11455                           ; BSR set to: 0
 11456  00195E  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11457  001962  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11458  001966  C098  FFE1         	movff	f_open@fp,fsr1l
 11459  00196A  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11460  00196E  CFDE FFE6          	movff	postinc2,postinc1
 11461  001972  CFDD FFE5          	movff	postdec2,postdec1
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;tff.c: 922: return FR_OK;
 11465  001976  0E00               	movlw	0
 11466  001978  0012               	return		;funcret
 11467  00197A                     __end_of_f_open:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function _trace_path *****************
 11471 ;; Defined at:
 11472 ;;		line 502 in file "bibliotecas/tff.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11475 ;;		 -> f_open@dj(14), 
 11476 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11477 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11478 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11479 ;;		 -> STR_16(13), filename(20), 
 11480 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11481 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11484 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11485 ;;  clust           2   45[BANK0 ] unsigned short 
 11486 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11487 ;;		 -> NULL(0), fs(544), 
 11488 ;;  ds              1   47[BANK0 ] unsigned char 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      enum E155
 11491 ;; Registers used:
 11492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 3F/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11498 ;;      Params:         0       5       0       0       0       0       0       0       0
 11499 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11500 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11501 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11502 ;;Total ram usage:       20 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:   10
 11505 ;; This function calls:
 11506 ;;		_clust2sect
 11507 ;;		_make_dirfile
 11508 ;;		_memcmp
 11509 ;;		_move_window
 11510 ;;		_next_dir_entry
 11511 ;; This function is called by:
 11512 ;;		_f_open
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text66
 11517  001C62                     __ptext66:
 11518                           	callstack 0
 11519  001C62                     _trace_path:
 11520                           	callstack 15
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;tff.c: 512: FATFS *fs = FatFs;
 11524                           
 11525                           ;incstack = 0
 11526  001C62  C04D  F08B         	movff	_FatFs,trace_path@fs
 11527  001C66  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;tff.c: 515: dj->fs = fs;
 11531  001C6A  517E               	movf	trace_path@dj& (0+255),w,b
 11532  001C6C  6ED9               	movwf	fsr2l,c
 11533  001C6E  6ADA               	clrf	fsr2h,c
 11534  001C70  0E04               	movlw	4
 11535  001C72  26D9               	addwf	fsr2l,f,c
 11536  001C74  C08B  FFDE         	movff	trace_path@fs,postinc2
 11537  001C78  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;tff.c: 516: clust = fs->dirbase;
 11541  001C7C  EE20 F00C          	lfsr	2,12
 11542  001C80  518B               	movf	trace_path@fs& (0+255),w,b
 11543  001C82  26D9               	addwf	fsr2l,f,c
 11544  001C84  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11545  001C86  22DA               	addwfc	fsr2h,f,c
 11546  001C88  CFDE F08D          	movff	postinc2,trace_path@clust
 11547  001C8C  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11551  001C90  517E               	movf	trace_path@dj& (0+255),w,b
 11552  001C92  6ED9               	movwf	fsr2l,c
 11553  001C94  6ADA               	clrf	fsr2h,c
 11554  001C96  0E06               	movlw	6
 11555  001C98  26D9               	addwf	fsr2l,f,c
 11556  001C9A  0E00               	movlw	0
 11557  001C9C  6EDE               	movwf	postinc2,c
 11558  001C9E  0E00               	movlw	0
 11559  001CA0  6EDD               	movwf	postdec2,c
 11560  001CA2  517E               	movf	trace_path@dj& (0+255),w,b
 11561  001CA4  6EE1               	movwf	fsr1l,c
 11562  001CA6  6AE2               	clrf	fsr1h,c
 11563  001CA8  0E08               	movlw	8
 11564  001CAA  26E1               	addwf	fsr1l,f,c
 11565  001CAC  CFDE FFE6          	movff	postinc2,postinc1
 11566  001CB0  CFDD FFE5          	movff	postdec2,postdec1
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;tff.c: 525: dj->sect = clust;
 11570  001CB4  518D               	movf	trace_path@clust& (0+255),w,b
 11571  001CB6  6F83               	movwf	??_trace_path& (0+255),b
 11572  001CB8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11573  001CBA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11574  001CBC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11575  001CBE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11576  001CC0  517E               	movf	trace_path@dj& (0+255),w,b
 11577  001CC2  6ED9               	movwf	fsr2l,c
 11578  001CC4  6ADA               	clrf	fsr2h,c
 11579  001CC6  0E0A               	movlw	10
 11580  001CC8  26D9               	addwf	fsr2l,f,c
 11581  001CCA  C083  FFDE         	movff	??_trace_path,postinc2
 11582  001CCE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11583  001CD2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11584  001CD6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11588  001CDA  517E               	movf	trace_path@dj& (0+255),w,b
 11589  001CDC  6ED9               	movwf	fsr2l,c
 11590  001CDE  6ADA               	clrf	fsr2h,c
 11591  001CE0  0E02               	movlw	2
 11592  001CE2  26D9               	addwf	fsr2l,f,c
 11593  001CE4  0E00               	movlw	0
 11594  001CE6  6EDE               	movwf	postinc2,c
 11595  001CE8  0E00               	movlw	0
 11596  001CEA  6EDD               	movwf	postdec2,c
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;tff.c: 529: if (*path == '\0') {
 11600  001CEC  C080  FFF6         	movff	trace_path@path,tblptrl
 11601  001CF0  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11602  001CF4  6AF8               	clrf	tblptru,c
 11603  001CF6  0E07               	movlw	(high __ramtop+-1)
 11604  001CF8  64F7               	cpfsgt	tblptrh,c
 11605  001CFA  D003               	bra	u13497
 11606  001CFC  0008               	tblrd		*
 11607  001CFE  50F5               	movf	tablat,w,c
 11608  001D00  D005               	bra	u13490
 11609  001D02                     u13497:
 11610  001D02  CFF6 FFE1          	movff	tblptrl,fsr1l
 11611  001D06  CFF7 FFE2          	movff	tblptrh,fsr1h
 11612  001D0A  50E7               	movf	indf1,w,c
 11613  001D0C                     u13490:
 11614  001D0C  0900               	iorlw	0
 11615  001D0E  A4D8               	btfss	status,2,c
 11616  001D10  D00A               	goto	l11655
 11617                           
 11618                           ;tff.c: 530: *dir = (0); return FR_OK;
 11619  001D12  0100               	movlb	0	; () banked
 11620  001D14  5182               	movf	trace_path@dir& (0+255),w,b
 11621  001D16  6ED9               	movwf	fsr2l,c
 11622  001D18  6ADA               	clrf	fsr2h,c
 11623  001D1A  0E00               	movlw	0
 11624  001D1C  6EDE               	movwf	postinc2,c
 11625  001D1E  0E00               	movlw	0
 11626  001D20  6EDD               	movwf	postdec2,c
 11627  001D22                     l11651:
 11628                           
 11629                           ; BSR set to: 0
 11630  001D22  0E00               	movlw	0
 11631  001D24  0012               	return	
 11632  001D26                     l11655:
 11633                           
 11634                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11635  001D26  0E80               	movlw	low trace_path@path
 11636  001D28  6E12               	movwf	make_dirfile@path^0,c
 11637  001D2A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11638  001D2E  ECE5  F019         	call	_make_dirfile	;wreg free
 11639  001D32  0100               	movlb	0	; () banked
 11640  001D34  6F8F               	movwf	trace_path@ds& (0+255),b
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11644  001D36  058F               	decf	trace_path@ds& (0+255),w,b
 11645  001D38  A4D8               	btfss	status,2,c
 11646  001D3A  D002               	goto	l11663
 11647                           
 11648                           ; BSR set to: 0
 11649  001D3C  0E04               	movlw	4
 11650  001D3E  0012               	return	
 11651  001D40                     l11663:
 11652                           
 11653                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11654  001D40  0100               	movlb	0	; () banked
 11655  001D42  517E               	movf	trace_path@dj& (0+255),w,b
 11656  001D44  6ED9               	movwf	fsr2l,c
 11657  001D46  6ADA               	clrf	fsr2h,c
 11658  001D48  0E0A               	movlw	10
 11659  001D4A  26D9               	addwf	fsr2l,f,c
 11660  001D4C  CFDE F035          	movff	postinc2,move_window@sector
 11661  001D50  CFDE F036          	movff	postinc2,move_window@sector+1
 11662  001D54  CFDE F037          	movff	postinc2,move_window@sector+2
 11663  001D58  CFDE F038          	movff	postinc2,move_window@sector+3
 11664  001D5C  EC52  F015         	call	_move_window	;wreg free
 11665  001D60  0900               	iorlw	0
 11666  001D62  A4D8               	btfss	status,2,c
 11667  001D64  D002               	goto	l11669
 11668  001D66  0E08               	movlw	8
 11669  001D68  0012               	return	
 11670  001D6A                     l11669:
 11671                           
 11672                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 11673  001D6A  0100               	movlb	0	; () banked
 11674  001D6C  517E               	movf	trace_path@dj& (0+255),w,b
 11675  001D6E  6ED9               	movwf	fsr2l,c
 11676  001D70  6ADA               	clrf	fsr2h,c
 11677  001D72  0E02               	movlw	2
 11678  001D74  26D9               	addwf	fsr2l,f,c
 11679  001D76  CFDE F083          	movff	postinc2,??_trace_path
 11680  001D7A  CFDD F084          	movff	postdec2,??_trace_path+1
 11681  001D7E  0E0F               	movlw	15
 11682  001D80  1783               	andwf	??_trace_path& (0+255),f,b
 11683  001D82  0E00               	movlw	0
 11684  001D84  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 11685  001D86  0E05               	movlw	5
 11686  001D88                     u13535:
 11687  001D88  90D8               	bcf	status,0,c
 11688  001D8A  3783               	rlcf	??_trace_path& (0+255),f,b
 11689  001D8C  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 11690  001D8E  2EE8               	decfsz	wreg,f,c
 11691  001D90  D7FB               	goto	u13535
 11692  001D92  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 11693  001D96  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 11694  001D9A  5183               	movf	??_trace_path& (0+255),w,b
 11695  001D9C  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 11696  001D9E  5184               	movf	(??_trace_path+1)& (0+255),w,b
 11697  001DA0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 11698  001DA2  0E20               	movlw	32
 11699  001DA4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 11700  001DA6  6F90               	movwf	trace_path@dptr& (0+255),b
 11701  001DA8  0E00               	movlw	0
 11702  001DAA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 11703  001DAC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;tff.c: 539: if (dptr[0] == 0)
 11707  001DAE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 11708  001DB2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 11709  001DB6  50DF               	movf	indf2,w,c
 11710  001DB8  A4D8               	btfss	status,2,c
 11711  001DBA  D00D               	goto	l11681
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 11715  001DBC  518F               	movf	trace_path@ds& (0+255),w,b
 11716  001DBE  B4D8               	btfsc	status,2,c
 11717  001DC0  D004               	goto	l11677
 11718                           
 11719                           ; BSR set to: 0
 11720  001DC2  0E00               	movlw	0
 11721  001DC4  6F88               	movwf	(_trace_path$1779+1)& (0+255),b
 11722  001DC6  0E03               	movlw	3
 11723  001DC8  D003               	goto	L3
 11724  001DCA                     l11677:
 11725                           
 11726                           ; BSR set to: 0
 11727  001DCA  0E00               	movlw	0
 11728  001DCC  6F88               	movwf	(_trace_path$1779+1)& (0+255),b
 11729  001DCE  0E02               	movlw	2
 11730  001DD0                     L3:
 11731  001DD0  6F87               	movwf	_trace_path$1779& (0+255),b
 11732                           
 11733                           ; BSR set to: 0
 11734  001DD2  5187               	movf	_trace_path$1779& (0+255),w,b
 11735  001DD4  0012               	return	
 11736  001DD6                     l11681:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 11740  001DD6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 11741  001DDA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 11742  001DDE  0EE5               	movlw	229
 11743  001DE0  18DE               	xorwf	postinc2,w,c
 11744  001DE2  B4D8               	btfsc	status,2,c
 11745  001DE4  D019               	goto	l11689
 11746                           
 11747                           ; BSR set to: 0
 11748  001DE6  EE20 F00B          	lfsr	2,11
 11749  001DEA  5190               	movf	trace_path@dptr& (0+255),w,b
 11750  001DEC  26D9               	addwf	fsr2l,f,c
 11751  001DEE  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 11752  001DF0  22DA               	addwfc	fsr2h,f,c
 11753  001DF2  B6DF               	btfsc	indf2,3,c
 11754  001DF4  D011               	goto	l11689
 11755                           
 11756                           ; BSR set to: 0
 11757  001DF6  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 11758  001DFA  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 11759  001DFE  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 11760  001E02  6A0D               	clrf	(memcmp@s2+1)^0,c
 11761  001E04  0E00               	movlw	0
 11762  001E06  6E0F               	movwf	(memcmp@n+1)^0,c
 11763  001E08  0E0B               	movlw	11
 11764  001E0A  6E0E               	movwf	memcmp@n^0,c
 11765  001E0C  ECD8  F023         	call	_memcmp	;wreg free
 11766  001E10  500A               	movf	?_memcmp^0,w,c
 11767  001E12  100B               	iorwf	(?_memcmp+1)^0,w,c
 11768  001E14  B4D8               	btfsc	status,2,c
 11769  001E16  D015               	goto	l11699
 11770  001E18                     l11689:
 11771                           
 11772                           ;tff.c: 544: if (!next_dir_entry(dj))
 11773  001E18  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 11774  001E1C  EC81  F018         	call	_next_dir_entry	;wreg free
 11775  001E20  0900               	iorlw	0
 11776  001E22  A4D8               	btfss	status,2,c
 11777  001E24  D78D               	goto	l11663
 11778                           
 11779                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 11780  001E26  0100               	movlb	0	; () banked
 11781  001E28  518F               	movf	trace_path@ds& (0+255),w,b
 11782  001E2A  B4D8               	btfsc	status,2,c
 11783  001E2C  D004               	goto	l11695
 11784                           
 11785                           ; BSR set to: 0
 11786  001E2E  0E00               	movlw	0
 11787  001E30  6F8A               	movwf	(_trace_path$1781+1)& (0+255),b
 11788  001E32  0E03               	movlw	3
 11789  001E34  D003               	goto	L4
 11790  001E36                     l11695:
 11791                           
 11792                           ; BSR set to: 0
 11793  001E36  0E00               	movlw	0
 11794  001E38  6F8A               	movwf	(_trace_path$1781+1)& (0+255),b
 11795  001E3A  0E02               	movlw	2
 11796  001E3C                     L4:
 11797  001E3C  6F89               	movwf	_trace_path$1781& (0+255),b
 11798                           
 11799                           ; BSR set to: 0
 11800  001E3E  5189               	movf	_trace_path$1781& (0+255),w,b
 11801  001E40  0012               	return	
 11802  001E42                     l11699:
 11803                           
 11804                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 11805  001E42  0100               	movlb	0	; () banked
 11806  001E44  518F               	movf	trace_path@ds& (0+255),w,b
 11807  001E46  A4D8               	btfss	status,2,c
 11808  001E48  D008               	goto	l11707
 11809                           
 11810                           ; BSR set to: 0
 11811  001E4A  5182               	movf	trace_path@dir& (0+255),w,b
 11812  001E4C  6ED9               	movwf	fsr2l,c
 11813  001E4E  6ADA               	clrf	fsr2h,c
 11814  001E50  C090  FFDE         	movff	trace_path@dptr,postinc2
 11815  001E54  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 11816  001E58  D764               	goto	l11651
 11817  001E5A                     l11707:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 11821  001E5A  EE20 F00B          	lfsr	2,11
 11822  001E5E  5190               	movf	trace_path@dptr& (0+255),w,b
 11823  001E60  26D9               	addwf	fsr2l,f,c
 11824  001E62  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 11825  001E64  22DA               	addwfc	fsr2h,f,c
 11826  001E66  B8DF               	btfsc	indf2,4,c
 11827  001E68  D002               	goto	l11713
 11828                           
 11829                           ; BSR set to: 0
 11830  001E6A  0E03               	movlw	3
 11831  001E6C  0012               	return	
 11832  001E6E                     l11713:
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 11836  001E6E  EE20 F01A          	lfsr	2,26
 11837  001E72  5190               	movf	trace_path@dptr& (0+255),w,b
 11838  001E74  26D9               	addwf	fsr2l,f,c
 11839  001E76  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 11840  001E78  22DA               	addwfc	fsr2h,f,c
 11841  001E7A  CFDE F08D          	movff	postinc2,trace_path@clust
 11842  001E7E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 11846  001E82  517E               	movf	trace_path@dj& (0+255),w,b
 11847  001E84  6ED9               	movwf	fsr2l,c
 11848  001E86  6ADA               	clrf	fsr2h,c
 11849  001E88  0E06               	movlw	6
 11850  001E8A  26D9               	addwf	fsr2l,f,c
 11851  001E8C  C08D  FFDE         	movff	trace_path@clust,postinc2
 11852  001E90  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 11853  001E94  517E               	movf	trace_path@dj& (0+255),w,b
 11854  001E96  6EE1               	movwf	fsr1l,c
 11855  001E98  6AE2               	clrf	fsr1h,c
 11856  001E9A  0E08               	movlw	8
 11857  001E9C  26E1               	addwf	fsr1l,f,c
 11858  001E9E  CFDE FFE6          	movff	postinc2,postinc1
 11859  001EA2  CFDD FFE5          	movff	postdec2,postdec1
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;tff.c: 555: dj->sect = clust2sect(clust);
 11863  001EA6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 11864  001EAA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 11865  001EAE  EC98  F021         	call	_clust2sect	;wreg free
 11866  001EB2  0100               	movlb	0	; () banked
 11867  001EB4  517E               	movf	trace_path@dj& (0+255),w,b
 11868  001EB6  6ED9               	movwf	fsr2l,c
 11869  001EB8  6ADA               	clrf	fsr2h,c
 11870  001EBA  0E0A               	movlw	10
 11871  001EBC  26D9               	addwf	fsr2l,f,c
 11872  001EBE  C016  FFDE         	movff	?_clust2sect,postinc2
 11873  001EC2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 11874  001EC6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 11875  001ECA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;tff.c: 556: dj->index = 2;
 11879  001ECE  517E               	movf	trace_path@dj& (0+255),w,b
 11880  001ED0  6ED9               	movwf	fsr2l,c
 11881  001ED2  6ADA               	clrf	fsr2h,c
 11882  001ED4  0E02               	movlw	2
 11883  001ED6  26D9               	addwf	fsr2l,f,c
 11884  001ED8  0E02               	movlw	2
 11885  001EDA  6EDE               	movwf	postinc2,c
 11886  001EDC  0E00               	movlw	0
 11887  001EDE  6EDD               	movwf	postdec2,c
 11888                           
 11889                           ;tff.c: 557: }
 11890  001EE0  D722               	goto	l11655
 11891  001EE2                     __end_of_trace_path:
 11892                           	callstack 0
 11893                           
 11894 ;; *************** function _make_dirfile *****************
 11895 ;; Defined at:
 11896 ;;		line 439 in file "bibliotecas/tff.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 11899 ;;		 -> trace_path@path(2), 
 11900 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 11901 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;  c               1   27[COMRAM] unsigned char 
 11904 ;;  n               1   26[COMRAM] unsigned char 
 11905 ;;  a               1   25[COMRAM] unsigned char 
 11906 ;;  t               1   24[COMRAM] unsigned char 
 11907 ;;  b               1   23[COMRAM] unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      unsigned char 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11917 ;;      Params:         2       0       0       0       0       0       0       0       0
 11918 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11919 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11920 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11921 ;;Total ram usage:       11 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:    3
 11924 ;; This function calls:
 11925 ;;		_memset
 11926 ;; This function is called by:
 11927 ;;		_trace_path
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text67
 11932  0033CA                     __ptext67:
 11933                           	callstack 0
 11934  0033CA                     _make_dirfile:
 11935                           	callstack 21
 11936                           
 11937                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 11938                           
 11939                           ;incstack = 0
 11940  0033CA  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 11941  0033CE  6A0B               	clrf	(memset@p1+1)^0,c
 11942  0033D0  0E00               	movlw	0
 11943  0033D2  6E0D               	movwf	(memset@c+1)^0,c
 11944  0033D4  0E20               	movlw	32
 11945  0033D6  6E0C               	movwf	memset@c^0,c
 11946  0033D8  0E00               	movlw	0
 11947  0033DA  6E0F               	movwf	(memset@n+1)^0,c
 11948  0033DC  0E0B               	movlw	11
 11949  0033DE  6E0E               	movwf	memset@n^0,c
 11950  0033E0  EC48  F02C         	call	_memset	;wreg free
 11951                           
 11952                           ;tff.c: 448: a = 0; b = 0x18;
 11953  0033E4  0E00               	movlw	0
 11954  0033E6  6E1A               	movwf	make_dirfile@a^0,c
 11955  0033E8  0E18               	movlw	24
 11956  0033EA  6E18               	movwf	make_dirfile@b^0,c
 11957                           
 11958                           ;tff.c: 449: n = 0; t = 8;
 11959  0033EC  0E00               	movlw	0
 11960  0033EE  6E1B               	movwf	make_dirfile@n^0,c
 11961  0033F0  0E08               	movlw	8
 11962  0033F2  6E19               	movwf	make_dirfile@t^0,c
 11963  0033F4                     l11383:
 11964                           
 11965                           ;tff.c: 451: c = *(*path)++;
 11966  0033F4  5012               	movf	make_dirfile@path^0,w,c
 11967  0033F6  6ED9               	movwf	fsr2l,c
 11968  0033F8  6ADA               	clrf	fsr2h,c
 11969  0033FA  CFDF F014          	movff	indf2,??_make_dirfile
 11970  0033FE  0E01               	movlw	1
 11971  003400  26DE               	addwf	postinc2,f,c
 11972  003402  CFDF F015          	movff	indf2,??_make_dirfile+1
 11973  003406  0E00               	movlw	0
 11974  003408  22DD               	addwfc	postdec2,f,c
 11975  00340A  C014  FFF6         	movff	??_make_dirfile,tblptrl
 11976  00340E  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 11977  003412  6AF8               	clrf	tblptru,c
 11978  003414  0E07               	movlw	(high __ramtop+-1)
 11979  003416  64F7               	cpfsgt	tblptrh,c
 11980  003418  D003               	bra	u13027
 11981  00341A  0008               	tblrd		*
 11982  00341C  50F5               	movf	tablat,w,c
 11983  00341E  D005               	bra	u13020
 11984  003420                     u13027:
 11985  003420  CFF6 FFE1          	movff	tblptrl,fsr1l
 11986  003424  CFF7 FFE2          	movff	tblptrh,fsr1h
 11987  003428  50E7               	movf	indf1,w,c
 11988  00342A                     u13020:
 11989  00342A  6E1C               	movwf	make_dirfile@c^0,c
 11990                           
 11991                           ;tff.c: 452: if (c == '\0' || c == '/') {
 11992  00342C  501C               	movf	make_dirfile@c^0,w,c
 11993  00342E  B4D8               	btfsc	status,2,c
 11994  003430  D004               	goto	u13040
 11995  003432  0E2F               	movlw	47
 11996  003434  181C               	xorwf	make_dirfile@c^0,w,c
 11997  003436  A4D8               	btfss	status,2,c
 11998  003438  D012               	goto	l11403
 11999  00343A                     u13040:
 12000                           
 12001                           ;tff.c: 453: if (n == 0) break;
 12002  00343A  501B               	movf	make_dirfile@n^0,w,c
 12003  00343C  B4D8               	btfsc	status,2,c
 12004  00343E  D070               	goto	l11491
 12005  003440  501A               	movf	make_dirfile@a^0,w,c
 12006  003442  1418               	andwf	make_dirfile@b^0,w,c
 12007  003444  6E14               	movwf	??_make_dirfile^0,c
 12008  003446  5014               	movf	??_make_dirfile^0,w,c
 12009  003448  6E16               	movwf	_make_dirfile$1732^0,c
 12010  00344A  6A17               	clrf	(_make_dirfile$1732+1)^0,c
 12011  00344C  5013               	movf	make_dirfile@dirname^0,w,c
 12012  00344E  6ED9               	movwf	fsr2l,c
 12013  003450  6ADA               	clrf	fsr2h,c
 12014  003452  0E0B               	movlw	11
 12015  003454  26D9               	addwf	fsr2l,f,c
 12016  003456  C016  FFDF         	movff	_make_dirfile$1732,indf2
 12017                           
 12018                           ;tff.c: 455: return c;
 12019  00345A  501C               	movf	make_dirfile@c^0,w,c
 12020  00345C  0012               	return	
 12021  00345E                     l11403:
 12022                           
 12023                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12024  00345E  0E20               	movlw	32
 12025  003460  641C               	cpfsgt	make_dirfile@c^0,c
 12026  003462  D05E               	goto	l11491
 12027  003464  0E7F               	movlw	127
 12028  003466  181C               	xorwf	make_dirfile@c^0,w,c
 12029  003468  B4D8               	btfsc	status,2,c
 12030  00346A  D05A               	goto	l11491
 12031                           
 12032                           ;tff.c: 458: if (c == '.') {
 12033  00346C  0E2E               	movlw	46
 12034  00346E  181C               	xorwf	make_dirfile@c^0,w,c
 12035  003470  A4D8               	btfss	status,2,c
 12036  003472  D00C               	goto	l11433
 12037                           
 12038                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12039  003474  B01A               	btfsc	make_dirfile@a^0,0,c
 12040  003476  D054               	goto	l11491
 12041  003478  501B               	movf	make_dirfile@n^0,w,c
 12042  00347A  B4D8               	btfsc	status,2,c
 12043  00347C  D051               	goto	l11491
 12044  00347E  0E09               	movlw	9
 12045  003480  601B               	cpfslt	make_dirfile@n^0,c
 12046  003482  D04E               	goto	l11491
 12047                           
 12048                           ;tff.c: 460: n = 8; t = 11; continue;
 12049  003484  0E08               	movlw	8
 12050  003486  6E1B               	movwf	make_dirfile@n^0,c
 12051  003488  0E0B               	movlw	11
 12052  00348A  D7B3               	goto	L5
 12053  00348C                     l11433:
 12054                           
 12055                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12056  00348C  0E22               	movlw	34
 12057  00348E  181C               	xorwf	make_dirfile@c^0,w,c
 12058  003490  B4D8               	btfsc	status,2,c
 12059  003492  D046               	goto	l11491
 12060                           
 12061                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12062  003494  0E2A               	movlw	42
 12063  003496  601C               	cpfslt	make_dirfile@c^0,c
 12064  003498  D001               	goto	l11441
 12065  00349A  D035               	goto	l996
 12066  00349C                     l11441:
 12067                           
 12068                           ;tff.c: 473: if (c <= ',') break;
 12069  00349C  0E2D               	movlw	45
 12070  00349E  601C               	cpfslt	make_dirfile@c^0,c
 12071  0034A0  D001               	goto	l11445
 12072  0034A2  D03E               	goto	l11491
 12073  0034A4                     l11445:
 12074                           
 12075                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12076  0034A4  0E3A               	movlw	58
 12077  0034A6  601C               	cpfslt	make_dirfile@c^0,c
 12078  0034A8  D001               	goto	l11449
 12079  0034AA  D02D               	goto	l996
 12080  0034AC                     l11449:
 12081                           
 12082                           ;tff.c: 475: if (c <= '?') break;
 12083  0034AC  0E40               	movlw	64
 12084  0034AE  601C               	cpfslt	make_dirfile@c^0,c
 12085  0034B0  D001               	goto	l999
 12086  0034B2  D036               	goto	l11491
 12087  0034B4                     l999:
 12088                           
 12089                           ;tff.c: 476: if (!(a & 1)) {
 12090  0034B4  B01A               	btfsc	make_dirfile@a^0,0,c
 12091  0034B6  D027               	goto	l996
 12092                           
 12093                           ;tff.c: 477: if (c == '|') break;
 12094  0034B8  0E7C               	movlw	124
 12095  0034BA  181C               	xorwf	make_dirfile@c^0,w,c
 12096  0034BC  B4D8               	btfsc	status,2,c
 12097  0034BE  D030               	goto	l11491
 12098                           
 12099                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12100  0034C0  0E5A               	movlw	90
 12101  0034C2  641C               	cpfsgt	make_dirfile@c^0,c
 12102  0034C4  D004               	goto	l11463
 12103  0034C6  0E5E               	movlw	94
 12104  0034C8  601C               	cpfslt	make_dirfile@c^0,c
 12105  0034CA  D001               	goto	l11463
 12106  0034CC  D029               	goto	l11491
 12107  0034CE                     l11463:
 12108  0034CE  0E40               	movlw	64
 12109  0034D0  641C               	cpfsgt	make_dirfile@c^0,c
 12110  0034D2  D00A               	goto	l11473
 12111  0034D4  0E5B               	movlw	91
 12112  0034D6  601C               	cpfslt	make_dirfile@c^0,c
 12113  0034D8  D007               	goto	l11473
 12114                           
 12115                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12116  0034DA  0E08               	movlw	8
 12117  0034DC  1819               	xorwf	make_dirfile@t^0,w,c
 12118  0034DE  A4D8               	btfss	status,2,c
 12119  0034E0  D002               	goto	l11471
 12120  0034E2  9618               	bcf	make_dirfile@b^0,3,c
 12121  0034E4  D001               	goto	l11473
 12122  0034E6                     l11471:
 12123  0034E6  9818               	bcf	make_dirfile@b^0,4,c
 12124  0034E8                     l11473:
 12125                           
 12126                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12127  0034E8  0E60               	movlw	96
 12128  0034EA  641C               	cpfsgt	make_dirfile@c^0,c
 12129  0034EC  D00C               	goto	l996
 12130  0034EE  0E7B               	movlw	123
 12131  0034F0  601C               	cpfslt	make_dirfile@c^0,c
 12132  0034F2  D009               	goto	l996
 12133                           
 12134                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12135  0034F4  0E20               	movlw	32
 12136  0034F6  5E1C               	subwf	make_dirfile@c^0,f,c
 12137  0034F8  0E08               	movlw	8
 12138  0034FA  1819               	xorwf	make_dirfile@t^0,w,c
 12139  0034FC  A4D8               	btfss	status,2,c
 12140  0034FE  D002               	goto	l11481
 12141  003500  861A               	bsf	make_dirfile@a^0,3,c
 12142  003502  D001               	goto	l996
 12143  003504                     l11481:
 12144  003504  881A               	bsf	make_dirfile@a^0,4,c
 12145  003506                     l996:
 12146                           
 12147                           ;tff.c: 487: a &= 0xFE;
 12148  003506  901A               	bcf	make_dirfile@a^0,0,c
 12149                           
 12150                           ;tff.c: 489: if (n >= t) break;
 12151  003508  5019               	movf	make_dirfile@t^0,w,c
 12152  00350A  5C1B               	subwf	make_dirfile@n^0,w,c
 12153  00350C  B0D8               	btfsc	status,0,c
 12154  00350E  D008               	goto	l11491
 12155                           
 12156                           ;tff.c: 490: dirname[n++] = c;
 12157  003510  5013               	movf	make_dirfile@dirname^0,w,c
 12158  003512  241B               	addwf	make_dirfile@n^0,w,c
 12159  003514  6ED9               	movwf	fsr2l,c
 12160  003516  6ADA               	clrf	fsr2h,c
 12161  003518  C01C  FFDF         	movff	make_dirfile@c,indf2
 12162  00351C  2A1B               	incf	make_dirfile@n^0,f,c
 12163  00351E  D76A               	goto	l11383
 12164  003520                     l11491:
 12165                           
 12166                           ;tff.c: 492: return 1;
 12167  003520  0E01               	movlw	1
 12168  003522  0012               	return		;funcret
 12169  003524                     __end_of_make_dirfile:
 12170                           	callstack 0
 12171                           
 12172 ;; *************** function _reserve_direntry *****************
 12173 ;; Defined at:
 12174 ;;		line 568 in file "bibliotecas/tff.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12177 ;;		 -> f_open@dj(14), 
 12178 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12179 ;;		 -> f_open@dir(2), 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  sector          4   44[BANK0 ] unsigned long 
 12182 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12183 ;;		 -> NULL(0), fs(544), 
 12184 ;;  clust           2   52[BANK0 ] unsigned short 
 12185 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12186 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12187 ;;  c               1   51[BANK0 ] unsigned char 
 12188 ;;  n               1   48[BANK0 ] unsigned char 
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      enum E155
 12191 ;; Registers used:
 12192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 3F/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12198 ;;      Params:         0       2       0       0       0       0       0       0       0
 12199 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12201 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12202 ;;Total ram usage:       18 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:   10
 12205 ;; This function calls:
 12206 ;;		_clust2sect
 12207 ;;		_create_chain
 12208 ;;		_disk_write
 12209 ;;		_memset
 12210 ;;		_move_window
 12211 ;;		_next_dir_entry
 12212 ;; This function is called by:
 12213 ;;		_f_open
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text68
 12218  001EE2                     __ptext68:
 12219                           	callstack 0
 12220  001EE2                     _reserve_direntry:
 12221                           	callstack 15
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12225                           
 12226                           ;incstack = 0
 12227  001EE2  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12228  001EE4  6ED9               	movwf	fsr2l,c
 12229  001EE6  6ADA               	clrf	fsr2h,c
 12230  001EE8  0E04               	movlw	4
 12231  001EEA  26D9               	addwf	fsr2l,f,c
 12232  001EEC  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12233  001EF0  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12234                           
 12235                           ;tff.c: 580: clust = dj->sclust;
 12236  001EF4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12237  001EF6  6ED9               	movwf	fsr2l,c
 12238  001EF8  6ADA               	clrf	fsr2h,c
 12239  001EFA  0E06               	movlw	6
 12240  001EFC  26D9               	addwf	fsr2l,f,c
 12241  001EFE  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12242  001F02  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;tff.c: 581: if (clust != 0) {
 12246  001F06  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12247  001F08  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12248  001F0A  B4D8               	btfsc	status,2,c
 12249  001F0C  D01E               	goto	l11729
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;tff.c: 582: dj->clust = clust;
 12253  001F0E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12254  001F10  6ED9               	movwf	fsr2l,c
 12255  001F12  6ADA               	clrf	fsr2h,c
 12256  001F14  0E08               	movlw	8
 12257  001F16  26D9               	addwf	fsr2l,f,c
 12258  001F18  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12259  001F1C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12263  001F20  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12264  001F24  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12265  001F28  EC98  F021         	call	_clust2sect	;wreg free
 12266  001F2C  0100               	movlb	0	; () banked
 12267  001F2E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12268  001F30  6ED9               	movwf	fsr2l,c
 12269  001F32  6ADA               	clrf	fsr2h,c
 12270  001F34  0E0A               	movlw	10
 12271  001F36  26D9               	addwf	fsr2l,f,c
 12272  001F38  C016  FFDE         	movff	?_clust2sect,postinc2
 12273  001F3C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12274  001F40  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12275  001F44  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12276                           
 12277                           ;tff.c: 584: } else {
 12278  001F48  D013               	goto	l11731
 12279  001F4A                     l11729:
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;tff.c: 585: dj->sect = fs->dirbase;
 12283  001F4A  EE20 F00C          	lfsr	2,12
 12284  001F4E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12285  001F50  26D9               	addwf	fsr2l,f,c
 12286  001F52  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12287  001F54  22DA               	addwfc	fsr2h,f,c
 12288  001F56  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12289  001F58  6EE1               	movwf	fsr1l,c
 12290  001F5A  6AE2               	clrf	fsr1h,c
 12291  001F5C  0E0A               	movlw	10
 12292  001F5E  26E1               	addwf	fsr1l,f,c
 12293  001F60  CFDE FFE6          	movff	postinc2,postinc1
 12294  001F64  CFDE FFE6          	movff	postinc2,postinc1
 12295  001F68  CFDE FFE6          	movff	postinc2,postinc1
 12296  001F6C  CFDE FFE6          	movff	postinc2,postinc1
 12297  001F70                     l11731:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12301  001F70  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12302  001F72  6ED9               	movwf	fsr2l,c
 12303  001F74  6ADA               	clrf	fsr2h,c
 12304  001F76  0E02               	movlw	2
 12305  001F78  26D9               	addwf	fsr2l,f,c
 12306  001F7A  0E00               	movlw	0
 12307  001F7C  6EDE               	movwf	postinc2,c
 12308  001F7E  0E00               	movlw	0
 12309  001F80  6EDD               	movwf	postdec2,c
 12310  001F82                     l11733:
 12311                           
 12312                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12313  001F82  0100               	movlb	0	; () banked
 12314  001F84  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12315  001F86  6ED9               	movwf	fsr2l,c
 12316  001F88  6ADA               	clrf	fsr2h,c
 12317  001F8A  0E0A               	movlw	10
 12318  001F8C  26D9               	addwf	fsr2l,f,c
 12319  001F8E  CFDE F035          	movff	postinc2,move_window@sector
 12320  001F92  CFDE F036          	movff	postinc2,move_window@sector+1
 12321  001F96  CFDE F037          	movff	postinc2,move_window@sector+2
 12322  001F9A  CFDE F038          	movff	postinc2,move_window@sector+3
 12323  001F9E  EC52  F015         	call	_move_window	;wreg free
 12324  001FA2  0900               	iorlw	0
 12325  001FA4  A4D8               	btfss	status,2,c
 12326  001FA6  D002               	goto	l11739
 12327  001FA8                     u13640:
 12328  001FA8  0E08               	movlw	8
 12329  001FAA  0012               	return	
 12330  001FAC                     l11739:
 12331                           
 12332                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12333  001FAC  0100               	movlb	0	; () banked
 12334  001FAE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12335  001FB0  6ED9               	movwf	fsr2l,c
 12336  001FB2  6ADA               	clrf	fsr2h,c
 12337  001FB4  0E02               	movlw	2
 12338  001FB6  26D9               	addwf	fsr2l,f,c
 12339  001FB8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12340  001FBC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12341  001FC0  0E0F               	movlw	15
 12342  001FC2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12343  001FC4  0E00               	movlw	0
 12344  001FC6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12345  001FC8  0E05               	movlw	5
 12346  001FCA                     u13655:
 12347  001FCA  90D8               	bcf	status,0,c
 12348  001FCC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12349  001FCE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12350  001FD0  2EE8               	decfsz	wreg,f,c
 12351  001FD2  D7FB               	goto	u13655
 12352  001FD4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12353  001FD8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12354  001FDC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12355  001FDE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12356  001FE0  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12357  001FE2  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12358  001FE4  0E20               	movlw	32
 12359  001FE6  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12360  001FE8  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12361  001FEA  0E00               	movlw	0
 12362  001FEC  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12363  001FEE  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;tff.c: 592: c = dptr[0];
 12367  001FF0  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12368  001FF4  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12369  001FF8  50DF               	movf	indf2,w,c
 12370  001FFA  6F93               	movwf	reserve_direntry@c& (0+255),b
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12374  001FFC  5193               	movf	reserve_direntry@c& (0+255),w,b
 12375  001FFE  B4D8               	btfsc	status,2,c
 12376  002000  D004               	goto	u13670
 12377                           
 12378                           ; BSR set to: 0
 12379  002002  0EE5               	movlw	229
 12380  002004  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12381  002006  A4D8               	btfss	status,2,c
 12382  002008  D009               	goto	l11753
 12383  00200A                     u13670:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12387  00200A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12388  00200C  6ED9               	movwf	fsr2l,c
 12389  00200E  6ADA               	clrf	fsr2h,c
 12390  002010  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12391  002014  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12392  002018                     l11749:
 12393                           
 12394                           ; BSR set to: 0
 12395  002018  0E00               	movlw	0
 12396  00201A  0012               	return	
 12397  00201C                     l11753:
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12401  00201C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12402  002020  EC81  F018         	call	_next_dir_entry	;wreg free
 12403  002024  0900               	iorlw	0
 12404  002026  A4D8               	btfss	status,2,c
 12405  002028  D7AC               	goto	l11733
 12406                           
 12407                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12408  00202A  0100               	movlb	0	; () banked
 12409  00202C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12410  00202E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12411  002030  B4D8               	btfsc	status,2,c
 12412  002032  D013               	goto	u13700
 12413                           
 12414                           ; BSR set to: 0
 12415  002034  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12416  002036  6ED9               	movwf	fsr2l,c
 12417  002038  6ADA               	clrf	fsr2h,c
 12418  00203A  0E08               	movlw	8
 12419  00203C  26D9               	addwf	fsr2l,f,c
 12420  00203E  CFDE F078          	movff	postinc2,create_chain@clust
 12421  002042  CFDD F079          	movff	postdec2,create_chain@clust+1
 12422  002046  ECF8  F016         	call	_create_chain	;wreg free
 12423  00204A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12424  00204E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12425  002052  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12426  002054  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12427  002056  A4D8               	btfss	status,2,c
 12428  002058  D002               	goto	l11763
 12429  00205A                     u13700:
 12430                           
 12431                           ; BSR set to: 0
 12432  00205A  0E06               	movlw	6
 12433  00205C  0012               	return	
 12434  00205E                     l11763:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12438  00205E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12439  002060  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12440  002062  B4D8               	btfsc	status,2,c
 12441  002064  D7A1               	goto	u13640
 12442                           
 12443                           ; BSR set to: 0
 12444  002066  0E00               	movlw	0
 12445  002068  6E35               	movwf	move_window@sector^0,c
 12446  00206A  0E00               	movlw	0
 12447  00206C  6E36               	movwf	(move_window@sector+1)^0,c
 12448  00206E  0E00               	movlw	0
 12449  002070  6E37               	movwf	(move_window@sector+2)^0,c
 12450  002072  0E00               	movlw	0
 12451  002074  6E38               	movwf	(move_window@sector+3)^0,c
 12452  002076  EC52  F015         	call	_move_window	;wreg free
 12453  00207A  0900               	iorlw	0
 12454  00207C  B4D8               	btfsc	status,2,c
 12455  00207E  D794               	goto	u13640
 12456                           
 12457                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12458  002080  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12459  002084  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12460  002088  EC98  F021         	call	_clust2sect	;wreg free
 12461  00208C  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12462  002090  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12463  002094  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12464  002098  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12465  00209C  0100               	movlb	0	; () banked
 12466  00209E  EE20 F004          	lfsr	2,4
 12467  0020A2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12468  0020A4  26D9               	addwf	fsr2l,f,c
 12469  0020A6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12470  0020A8  22DA               	addwfc	fsr2h,f,c
 12471  0020AA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12472  0020AE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12473  0020B2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12474  0020B6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12475                           
 12476                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12477  0020BA  0E20               	movlw	32
 12478  0020BC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12479  0020BE  6E0A               	movwf	memset@p1^0,c
 12480  0020C0  0E00               	movlw	0
 12481  0020C2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12482  0020C4  6E0B               	movwf	(memset@p1+1)^0,c
 12483  0020C6  0E00               	movlw	0
 12484  0020C8  6E0D               	movwf	(memset@c+1)^0,c
 12485  0020CA  0E00               	movlw	0
 12486  0020CC  6E0C               	movwf	memset@c^0,c
 12487  0020CE  0E02               	movlw	2
 12488  0020D0  6E0F               	movwf	(memset@n+1)^0,c
 12489  0020D2  0E00               	movlw	0
 12490  0020D4  6E0E               	movwf	memset@n^0,c
 12491  0020D6  EC48  F02C         	call	_memset	;wreg free
 12492                           
 12493                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12494  0020DA  0100               	movlb	0	; () banked
 12495  0020DC  EE20 F01D          	lfsr	2,29
 12496  0020E0  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12497  0020E2  26D9               	addwf	fsr2l,f,c
 12498  0020E4  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12499  0020E6  22DA               	addwfc	fsr2h,f,c
 12500  0020E8  50DF               	movf	indf2,w,c
 12501  0020EA  6F90               	movwf	reserve_direntry@n& (0+255),b
 12502  0020EC  D01E               	goto	l11785
 12503  0020EE                     l11775:
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12507  0020EE  0E20               	movlw	32
 12508  0020F0  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12509  0020F2  6E29               	movwf	disk_write@buff^0,c
 12510  0020F4  0E00               	movlw	0
 12511  0020F6  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12512  0020F8  6E2A               	movwf	(disk_write@buff+1)^0,c
 12513  0020FA  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12514  0020FE  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12515  002102  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12516  002106  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12517  00210A  0E01               	movlw	1
 12518  00210C  6E2F               	movwf	disk_write@count^0,c
 12519  00210E  0E00               	movlw	0
 12520  002110  ECC1  F029         	call	_disk_write
 12521  002114  0900               	iorlw	0
 12522  002116  A4D8               	btfss	status,2,c
 12523  002118  D747               	goto	u13640
 12524                           
 12525                           ;tff.c: 608: sector++;
 12526  00211A  0E01               	movlw	1
 12527  00211C  0100               	movlb	0	; () banked
 12528  00211E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12529  002120  0E00               	movlw	0
 12530  002122  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12531  002124  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12532  002126  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12533                           
 12534                           ; BSR set to: 0
 12535  002128  0790               	decf	reserve_direntry@n& (0+255),f,b
 12536  00212A                     l11785:
 12537                           
 12538                           ; BSR set to: 0
 12539  00212A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12540  00212C  A4D8               	btfss	status,2,c
 12541  00212E  D7DF               	goto	l11775
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12545  002130  EE20 F01F          	lfsr	2,31
 12546  002134  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12547  002136  26D9               	addwf	fsr2l,f,c
 12548  002138  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12549  00213A  22DA               	addwfc	fsr2h,f,c
 12550  00213C  0E01               	movlw	1
 12551  00213E  6EDF               	movwf	indf2,c
 12552                           
 12553                           ;tff.c: 611: *dir = fs->win;
 12554  002140  0E20               	movlw	32
 12555  002142  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12556  002144  6F88               	movwf	??_reserve_direntry& (0+255),b
 12557  002146  0E00               	movlw	0
 12558  002148  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12559  00214A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12560  00214C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12561  00214E  6ED9               	movwf	fsr2l,c
 12562  002150  6ADA               	clrf	fsr2h,c
 12563  002152  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12564  002156  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12565  00215A  D75E               	goto	l11749
 12566  00215C                     __end_of_reserve_direntry:
 12567                           	callstack 0
 12568                           
 12569 ;; *************** function _next_dir_entry *****************
 12570 ;; Defined at:
 12571 ;;		line 359 in file "bibliotecas/tff.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12574 ;;		 -> f_open@dj(14), 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  idx             2   28[BANK0 ] unsigned short 
 12577 ;;  clust           2   26[BANK0 ] unsigned short 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      enum E105
 12580 ;; Registers used:
 12581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12587 ;;      Params:         1       0       0       0       0       0       0       0       0
 12588 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12589 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12590 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12591 ;;Total ram usage:       12 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    9
 12594 ;; This function calls:
 12595 ;;		_clust2sect
 12596 ;;		_get_cluster
 12597 ;; This function is called by:
 12598 ;;		_trace_path
 12599 ;;		_reserve_direntry
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text69
 12604  003102                     __ptext69:
 12605                           	callstack 0
 12606  003102                     _next_dir_entry:
 12607                           	callstack 15
 12608                           
 12609                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12610                           
 12611                           ;incstack = 0
 12612  003102  504C               	movf	next_dir_entry@dj^0,w,c
 12613  003104  6ED9               	movwf	fsr2l,c
 12614  003106  6ADA               	clrf	fsr2h,c
 12615  003108  0E02               	movlw	2
 12616  00310A  26D9               	addwf	fsr2l,f,c
 12617  00310C  CFDE F073          	movff	postinc2,??_next_dir_entry
 12618  003110  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12619  003114  0E01               	movlw	1
 12620  003116  0100               	movlb	0	; () banked
 12621  003118  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12622  00311A  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12623  00311C  0E00               	movlw	0
 12624  00311E  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12625  003120  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;tff.c: 368: if ((idx & 15) == 0) {
 12629  003122  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12630  003126  0E0F               	movlw	15
 12631  003128  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12632  00312A  A4D8               	btfss	status,2,c
 12633  00312C  D092               	goto	l11367
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;tff.c: 369: dj->sect++;
 12637  00312E  504C               	movf	next_dir_entry@dj^0,w,c
 12638  003130  6ED9               	movwf	fsr2l,c
 12639  003132  6ADA               	clrf	fsr2h,c
 12640  003134  0E0A               	movlw	10
 12641  003136  26D9               	addwf	fsr2l,f,c
 12642  003138  2ADE               	incf	postinc2,f,c
 12643  00313A  0E00               	movlw	0
 12644  00313C  22DE               	addwfc	postinc2,f,c
 12645  00313E  22DE               	addwfc	postinc2,f,c
 12646  003140  22DE               	addwfc	postinc2,f,c
 12647                           
 12648                           ;tff.c: 370: if (dj->clust == 0) {
 12649  003142  504C               	movf	next_dir_entry@dj^0,w,c
 12650  003144  6ED9               	movwf	fsr2l,c
 12651  003146  6ADA               	clrf	fsr2h,c
 12652  003148  0E08               	movlw	8
 12653  00314A  26D9               	addwf	fsr2l,f,c
 12654  00314C  50DE               	movf	postinc2,w,c
 12655  00314E  10DE               	iorwf	postinc2,w,c
 12656  003150  A4D8               	btfss	status,2,c
 12657  003152  D013               	goto	l11351
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12661  003154  504C               	movf	next_dir_entry@dj^0,w,c
 12662  003156  6ED9               	movwf	fsr2l,c
 12663  003158  6ADA               	clrf	fsr2h,c
 12664  00315A  0E04               	movlw	4
 12665  00315C  26D9               	addwf	fsr2l,f,c
 12666  00315E  EE10 F002          	lfsr	1,2
 12667  003162  50DE               	movf	postinc2,w,c
 12668  003164  26E1               	addwf	fsr1l,f,c
 12669  003166  50DD               	movf	postdec2,w,c
 12670  003168  22E2               	addwfc	fsr1h,f,c
 12671  00316A  50E6               	movf	postinc1,w,c
 12672  00316C  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 12673  00316E  50E6               	movf	postinc1,w,c
 12674  003170  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 12675  003172  A0D8               	btfss	status,0,c
 12676  003174  D06E               	goto	l11367
 12677  003176                     u12970:
 12678                           
 12679                           ; BSR set to: 0
 12680  003176  0E00               	movlw	0
 12681  003178  0012               	return	
 12682  00317A                     l11351:
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 12686  00317A  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12687  00317E  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 12688  003182  0E04               	movlw	4
 12689  003184  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 12690  003186                     u12985:
 12691  003186  90D8               	bcf	status,0,c
 12692  003188  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 12693  00318A  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 12694  00318C  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 12695  00318E  D7FB               	goto	u12985
 12696  003190  0EFF               	movlw	255
 12697  003192  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 12698  003194  0EFF               	movlw	255
 12699  003196  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 12700  003198  504C               	movf	next_dir_entry@dj^0,w,c
 12701  00319A  6ED9               	movwf	fsr2l,c
 12702  00319C  6ADA               	clrf	fsr2h,c
 12703  00319E  0E04               	movlw	4
 12704  0031A0  26D9               	addwf	fsr2l,f,c
 12705  0031A2  EE10 F01D          	lfsr	1,29
 12706  0031A6  50DE               	movf	postinc2,w,c
 12707  0031A8  26E1               	addwf	fsr1l,f,c
 12708  0031AA  50DD               	movf	postdec2,w,c
 12709  0031AC  22E2               	addwfc	fsr1h,f,c
 12710  0031AE  50E7               	movf	indf1,w,c
 12711  0031B0  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 12712  0031B2  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 12713  0031B4  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 12714  0031B6  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 12715  0031B8  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 12716  0031BA  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 12717  0031BC  5173               	movf	??_next_dir_entry& (0+255),w,b
 12718  0031BE  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 12719  0031C0  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 12720  0031C2  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 12721  0031C4  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 12722  0031C6  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 12723  0031C8  A4D8               	btfss	status,2,c
 12724  0031CA  D043               	goto	l11367
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;tff.c: 374: clust = get_cluster(dj->clust);
 12728  0031CC  504C               	movf	next_dir_entry@dj^0,w,c
 12729  0031CE  6ED9               	movwf	fsr2l,c
 12730  0031D0  6ADA               	clrf	fsr2h,c
 12731  0031D2  0E08               	movlw	8
 12732  0031D4  26D9               	addwf	fsr2l,f,c
 12733  0031D6  CFDE F04A          	movff	postinc2,get_cluster@clust
 12734  0031DA  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 12735  0031DE  EC3E  F014         	call	_get_cluster	;wreg free
 12736  0031E2  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 12737  0031E6  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 12738                           
 12739                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 12740  0031EA  0100               	movlb	0	; () banked
 12741  0031EC  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 12742  0031EE  E104               	bnz	u13000
 12743  0031F0  0E02               	movlw	2
 12744  0031F2  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 12745  0031F4  A0D8               	btfss	status,0,c
 12746  0031F6  D7BF               	goto	u12970
 12747  0031F8                     u13000:
 12748                           
 12749                           ; BSR set to: 0
 12750  0031F8  504C               	movf	next_dir_entry@dj^0,w,c
 12751  0031FA  6ED9               	movwf	fsr2l,c
 12752  0031FC  6ADA               	clrf	fsr2h,c
 12753  0031FE  0E04               	movlw	4
 12754  003200  26D9               	addwf	fsr2l,f,c
 12755  003202  EE10 F016          	lfsr	1,22
 12756  003206  50DE               	movf	postinc2,w,c
 12757  003208  26E1               	addwf	fsr1l,f,c
 12758  00320A  50DD               	movf	postdec2,w,c
 12759  00320C  22E2               	addwfc	fsr1h,f,c
 12760  00320E  50E6               	movf	postinc1,w,c
 12761  003210  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 12762  003212  50E6               	movf	postinc1,w,c
 12763  003214  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 12764  003216  B0D8               	btfsc	status,0,c
 12765  003218  D7AE               	goto	u12970
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;tff.c: 377: dj->clust = clust;
 12769  00321A  504C               	movf	next_dir_entry@dj^0,w,c
 12770  00321C  6ED9               	movwf	fsr2l,c
 12771  00321E  6ADA               	clrf	fsr2h,c
 12772  003220  0E08               	movlw	8
 12773  003222  26D9               	addwf	fsr2l,f,c
 12774  003224  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 12775  003228  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;tff.c: 378: dj->sect = clust2sect(clust);
 12779  00322C  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 12780  003230  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 12781  003234  EC98  F021         	call	_clust2sect	;wreg free
 12782  003238  504C               	movf	next_dir_entry@dj^0,w,c
 12783  00323A  6ED9               	movwf	fsr2l,c
 12784  00323C  6ADA               	clrf	fsr2h,c
 12785  00323E  0E0A               	movlw	10
 12786  003240  26D9               	addwf	fsr2l,f,c
 12787  003242  C016  FFDE         	movff	?_clust2sect,postinc2
 12788  003246  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12789  00324A  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12790  00324E  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12791  003252                     l11367:
 12792                           
 12793                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 12794  003252  504C               	movf	next_dir_entry@dj^0,w,c
 12795  003254  6ED9               	movwf	fsr2l,c
 12796  003256  6ADA               	clrf	fsr2h,c
 12797  003258  0E02               	movlw	2
 12798  00325A  26D9               	addwf	fsr2l,f,c
 12799  00325C  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 12800  003260  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 12801                           
 12802                           ;tff.c: 383: return TRUE;
 12803  003264  0E01               	movlw	1
 12804  003266  0012               	return		;funcret
 12805  003268                     __end_of_next_dir_entry:
 12806                           	callstack 0
 12807                           
 12808 ;; *************** function _clust2sect *****************
 12809 ;; Defined at:
 12810 ;;		line 339 in file "bibliotecas/tff.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  clust           2   21[COMRAM] unsigned short 
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 12815 ;;		 -> NULL(0), fs(544), 
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  4   21[COMRAM] unsigned long 
 12818 ;; Registers used:
 12819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12825 ;;      Params:         4       0       0       0       0       0       0       0       0
 12826 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12827 ;;      Temps:          5       0       0       0       0       0       0       0       0
 12828 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12829 ;;Total ram usage:       11 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    3
 12832 ;; This function calls:
 12833 ;;		___lmul
 12834 ;; This function is called by:
 12835 ;;		_next_dir_entry
 12836 ;;		_trace_path
 12837 ;;		_reserve_direntry
 12838 ;;		_f_write
 12839 ;;		_f_read
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           	psect	text70
 12844  004330                     __ptext70:
 12845                           	callstack 0
 12846  004330                     _clust2sect:
 12847                           	callstack 19
 12848                           
 12849                           ;tff.c: 343: FATFS *fs = FatFs;
 12850                           
 12851                           ;incstack = 0
 12852  004330  C04D  F01F         	movff	_FatFs,clust2sect@fs
 12853  004334  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 12854                           
 12855                           ;tff.c: 346: clust -= 2;
 12856  004338  0E02               	movlw	2
 12857  00433A  5E16               	subwf	clust2sect@clust^0,f,c
 12858  00433C  0E00               	movlw	0
 12859  00433E  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 12860                           
 12861                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 12862  004340  0EFE               	movlw	254
 12863  004342  6E1A               	movwf	??_clust2sect^0,c
 12864  004344  0EFF               	movlw	255
 12865  004346  6E1B               	movwf	(??_clust2sect+1)^0,c
 12866  004348  EE20 F016          	lfsr	2,22
 12867  00434C  501F               	movf	clust2sect@fs^0,w,c
 12868  00434E  26D9               	addwf	fsr2l,f,c
 12869  004350  5020               	movf	(clust2sect@fs+1)^0,w,c
 12870  004352  22DA               	addwfc	fsr2h,f,c
 12871  004354  CFDE F01C          	movff	postinc2,??_clust2sect+2
 12872  004358  CFDD F01D          	movff	postdec2,??_clust2sect+3
 12873  00435C  501A               	movf	??_clust2sect^0,w,c
 12874  00435E  261C               	addwf	(??_clust2sect+2)^0,f,c
 12875  004360  501B               	movf	(??_clust2sect+1)^0,w,c
 12876  004362  221D               	addwfc	(??_clust2sect+3)^0,f,c
 12877  004364  501C               	movf	(??_clust2sect+2)^0,w,c
 12878  004366  5C16               	subwf	clust2sect@clust^0,w,c
 12879  004368  501D               	movf	(??_clust2sect+3)^0,w,c
 12880  00436A  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 12881  00436C  A0D8               	btfss	status,0,c
 12882  00436E  D009               	goto	l10873
 12883  004370  0E00               	movlw	0
 12884  004372  6E16               	movwf	?_clust2sect^0,c
 12885  004374  0E00               	movlw	0
 12886  004376  6E17               	movwf	(?_clust2sect+1)^0,c
 12887  004378  0E00               	movlw	0
 12888  00437A  6E18               	movwf	(?_clust2sect+2)^0,c
 12889  00437C  0E00               	movlw	0
 12890  00437E  6E19               	movwf	(?_clust2sect+3)^0,c
 12891  004380  0012               	return	
 12892  004382                     l10873:
 12893                           
 12894                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 12895  004382  EE20 F010          	lfsr	2,16
 12896  004386  501F               	movf	clust2sect@fs^0,w,c
 12897  004388  26D9               	addwf	fsr2l,f,c
 12898  00438A  5020               	movf	(clust2sect@fs+1)^0,w,c
 12899  00438C  22DA               	addwfc	fsr2h,f,c
 12900  00438E  CFDE F01A          	movff	postinc2,??_clust2sect
 12901  004392  CFDE F01B          	movff	postinc2,??_clust2sect+1
 12902  004396  CFDE F01C          	movff	postinc2,??_clust2sect+2
 12903  00439A  CFDE F01D          	movff	postinc2,??_clust2sect+3
 12904  00439E  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 12905  0043A2  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 12906  0043A6  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 12907  0043A8  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 12908  0043AA  EE20 F01D          	lfsr	2,29
 12909  0043AE  501F               	movf	clust2sect@fs^0,w,c
 12910  0043B0  26D9               	addwf	fsr2l,f,c
 12911  0043B2  5020               	movf	(clust2sect@fs+1)^0,w,c
 12912  0043B4  22DA               	addwfc	fsr2h,f,c
 12913  0043B6  50DF               	movf	indf2,w,c
 12914  0043B8  6E1E               	movwf	(??_clust2sect+4)^0,c
 12915  0043BA  501E               	movf	(??_clust2sect+4)^0,w,c
 12916  0043BC  6E0E               	movwf	___lmul@multiplicand^0,c
 12917  0043BE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 12918  0043C0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 12919  0043C2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 12920  0043C4  ECCA  F028         	call	___lmul	;wreg free
 12921  0043C8  501A               	movf	??_clust2sect^0,w,c
 12922  0043CA  240A               	addwf	?___lmul^0,w,c
 12923  0043CC  6E16               	movwf	?_clust2sect^0,c
 12924  0043CE  501B               	movf	(??_clust2sect+1)^0,w,c
 12925  0043D0  200B               	addwfc	(?___lmul+1)^0,w,c
 12926  0043D2  6E17               	movwf	(?_clust2sect+1)^0,c
 12927  0043D4  501C               	movf	(??_clust2sect+2)^0,w,c
 12928  0043D6  200C               	addwfc	(?___lmul+2)^0,w,c
 12929  0043D8  6E18               	movwf	(?_clust2sect+2)^0,c
 12930  0043DA  501D               	movf	(??_clust2sect+3)^0,w,c
 12931  0043DC  200D               	addwfc	(?___lmul+3)^0,w,c
 12932  0043DE  6E19               	movwf	(?_clust2sect+3)^0,c
 12933  0043E0  0012               	return		;funcret
 12934  0043E2                     __end_of_clust2sect:
 12935                           	callstack 0
 12936                           
 12937 ;; *************** function _remove_chain *****************
 12938 ;; Defined at:
 12939 ;;		line 250 in file "bibliotecas/tff.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  clust           2   24[BANK0 ] unsigned short 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 12944 ;;		 -> NULL(0), fs(544), 
 12945 ;;  nxt             2   28[BANK0 ] unsigned short 
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      enum E105
 12948 ;; Registers used:
 12949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 3F/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12955 ;;      Params:         0       2       0       0       0       0       0       0       0
 12956 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12957 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12958 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12959 ;;Total ram usage:        8 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    9
 12962 ;; This function calls:
 12963 ;;		_get_cluster
 12964 ;;		_put_cluster
 12965 ;; This function is called by:
 12966 ;;		_f_open
 12967 ;; This function uses a non-reentrant model
 12968 ;;
 12969                           
 12970                           	psect	text71
 12971  0045DE                     __ptext71:
 12972                           	callstack 0
 12973  0045DE                     _remove_chain:
 12974                           	callstack 16
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 12978                           
 12979                           ;incstack = 0
 12980  0045DE  C04D  F07E         	movff	_FatFs,remove_chain@fs
 12981  0045E2  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 12982                           
 12983                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 12984  0045E6  D037               	goto	l11627
 12985  0045E8                     l11607:
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;tff.c: 259: nxt = get_cluster(clust);
 12989  0045E8  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 12990  0045EC  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 12991  0045F0  EC3E  F014         	call	_get_cluster	;wreg free
 12992  0045F4  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 12993  0045F8  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 12994                           
 12995                           ;tff.c: 260: if (nxt == 1) return FALSE;
 12996  0045FC  0100               	movlb	0	; () banked
 12997  0045FE  057C               	decf	remove_chain@nxt& (0+255),w,b
 12998  004600  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 12999  004602  A4D8               	btfss	status,2,c
 13000  004604  D002               	goto	l11615
 13001  004606                     u13440:
 13002  004606  0E00               	movlw	0
 13003  004608  0012               	return	
 13004  00460A                     l11615:
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13008  00460A  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13009  00460E  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13010  004612  0E00               	movlw	0
 13011  004614  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13012  004616  0E00               	movlw	0
 13013  004618  6F62               	movwf	put_cluster@val& (0+255),b
 13014  00461A  ECE8  F011         	call	_put_cluster	;wreg free
 13015  00461E  0900               	iorlw	0
 13016  004620  B4D8               	btfsc	status,2,c
 13017  004622  D7F1               	goto	u13440
 13018                           
 13019                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13020  004624  0100               	movlb	0	; () banked
 13021  004626  EE20 F01A          	lfsr	2,26
 13022  00462A  517E               	movf	remove_chain@fs& (0+255),w,b
 13023  00462C  26D9               	addwf	fsr2l,f,c
 13024  00462E  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13025  004630  22DA               	addwfc	fsr2h,f,c
 13026  004632  28DE               	incf	postinc2,w,c
 13027  004634  E103               	bnz	u13460
 13028  004636  28DE               	incf	postinc2,w,c
 13029  004638  B4D8               	btfsc	status,2,c
 13030  00463A  D009               	goto	l11625
 13031  00463C                     u13460:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;tff.c: 263: fs->free_clust++;
 13035  00463C  EE20 F01A          	lfsr	2,26
 13036  004640  517E               	movf	remove_chain@fs& (0+255),w,b
 13037  004642  26D9               	addwf	fsr2l,f,c
 13038  004644  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13039  004646  22DA               	addwfc	fsr2h,f,c
 13040  004648  2ADE               	incf	postinc2,f,c
 13041  00464A  0E00               	movlw	0
 13042  00464C  22DD               	addwfc	postdec2,f,c
 13043  00464E                     l11625:
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13047  00464E  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13048  004652  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13049  004656                     l11627:
 13050                           
 13051                           ; BSR set to: 0
 13052  004656  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13053  004658  E104               	bnz	u13470
 13054  00465A  0E02               	movlw	2
 13055  00465C  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13056  00465E  A0D8               	btfss	status,0,c
 13057  004660  D00C               	goto	u13480
 13058  004662                     u13470:
 13059                           
 13060                           ; BSR set to: 0
 13061  004662  EE20 F016          	lfsr	2,22
 13062  004666  517E               	movf	remove_chain@fs& (0+255),w,b
 13063  004668  26D9               	addwf	fsr2l,f,c
 13064  00466A  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13065  00466C  22DA               	addwfc	fsr2h,f,c
 13066  00466E  50DE               	movf	postinc2,w,c
 13067  004670  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13068  004672  50DE               	movf	postinc2,w,c
 13069  004674  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13070  004676  A0D8               	btfss	status,0,c
 13071  004678  D7B7               	goto	l11607
 13072  00467A                     u13480:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13076  00467A  0E01               	movlw	1
 13077  00467C  0012               	return		;funcret
 13078  00467E                     __end_of_remove_chain:
 13079                           	callstack 0
 13080                           
 13081 ;; *************** function _memcpy *****************
 13082 ;; Defined at:
 13083 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  d1              2    9[COMRAM] PTR void 
 13086 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13087 ;;  s1              2   11[COMRAM] PTR const void 
 13088 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13089 ;;		 -> fs(544), 
 13090 ;;  n               2   13[COMRAM] unsigned int 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13093 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13094 ;;		 -> fs(544), 
 13095 ;;  d               2   16[COMRAM] PTR unsigned char 
 13096 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13097 ;;  tmp             1   15[COMRAM] unsigned char 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  2    9[COMRAM] PTR void 
 13100 ;; Registers used:
 13101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13107 ;;      Params:         6       0       0       0       0       0       0       0       0
 13108 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13110 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13111 ;;Total ram usage:       11 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    2
 13114 ;; This function calls:
 13115 ;;		Nothing
 13116 ;; This function is called by:
 13117 ;;		_f_open
 13118 ;;		_f_write
 13119 ;;		_f_read
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text72
 13124  0054EA                     __ptext72:
 13125                           	callstack 0
 13126  0054EA                     _memcpy:
 13127                           	callstack 20
 13128                           
 13129                           ;incstack = 0
 13130  0054EA  C00C  F013         	movff	memcpy@s1,memcpy@s
 13131  0054EE  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13132  0054F2  C00A  F011         	movff	memcpy@d1,memcpy@d
 13133  0054F6  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13134  0054FA  D010               	goto	l10907
 13135  0054FC                     l10899:
 13136  0054FC  C013  FFD9         	movff	memcpy@s,fsr2l
 13137  005500  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13138  005504  50DF               	movf	indf2,w,c
 13139  005506  6E10               	movwf	memcpy@tmp^0,c
 13140  005508  4A13               	infsnz	memcpy@s^0,f,c
 13141  00550A  2A14               	incf	(memcpy@s+1)^0,f,c
 13142  00550C  C011  FFD9         	movff	memcpy@d,fsr2l
 13143  005510  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13144  005514  C010  FFDF         	movff	memcpy@tmp,indf2
 13145  005518  4A11               	infsnz	memcpy@d^0,f,c
 13146  00551A  2A12               	incf	(memcpy@d+1)^0,f,c
 13147  00551C                     l10907:
 13148  00551C  060E               	decf	memcpy@n^0,f,c
 13149  00551E  A0D8               	btfss	status,0,c
 13150  005520  060F               	decf	(memcpy@n+1)^0,f,c
 13151  005522  280E               	incf	memcpy@n^0,w,c
 13152  005524  E1EB               	bnz	l10899
 13153  005526  280F               	incf	(memcpy@n+1)^0,w,c
 13154  005528  B4D8               	btfsc	status,2,c
 13155  00552A  0012               	return	
 13156  00552C  D7E7               	goto	l10899
 13157  00552E                     __end_of_memcpy:
 13158                           	callstack 0
 13159                           
 13160 ;; *************** function _auto_mount *****************
 13161 ;; Defined at:
 13162 ;;		line 652 in file "bibliotecas/tff.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13165 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13166 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13169 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13170 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13171 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13172 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13173 ;;		 -> NULL(0), fs(544), 
 13174 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13175 ;;		 -> STR_16(13), filename(20), 
 13176 ;;  stat            1   37[BANK0 ] unsigned char 
 13177 ;;  fmt             1   36[BANK0 ] unsigned char 
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      enum E155
 13180 ;; Registers used:
 13181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : 3F/0
 13184 ;;		On exit  : 3E/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13187 ;;      Params:         2       0       0       0       0       0       0       0       0
 13188 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13189 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13190 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13191 ;;Total ram usage:       46 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:    8
 13194 ;; This function calls:
 13195 ;;		___lldiv
 13196 ;;		___lmul
 13197 ;;		_check_fs
 13198 ;;		_disk_initialize
 13199 ;;		_disk_status
 13200 ;;		_memset
 13201 ;; This function is called by:
 13202 ;;		_f_open
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text73
 13207  0005A8                     __ptext73:
 13208                           	callstack 0
 13209  0005A8                     _auto_mount:
 13210                           	callstack 17
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13214                           
 13215                           ;incstack = 0
 13216  0005A8  503D               	movf	auto_mount@path^0,w,c
 13217  0005AA  6ED9               	movwf	fsr2l,c
 13218  0005AC  6ADA               	clrf	fsr2h,c
 13219  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13220  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13221                           
 13222                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13223  0005B6  D003               	goto	l11797
 13224  0005B8                     l11795:
 13225  0005B8  0100               	movlb	0	; () banked
 13226  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13227  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13228  0005BE                     l11797:
 13229                           
 13230                           ; BSR set to: 0
 13231  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13232  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13233  0005C6  6AF8               	clrf	tblptru,c
 13234  0005C8  0E07               	movlw	(high __ramtop+-1)
 13235  0005CA  64F7               	cpfsgt	tblptrh,c
 13236  0005CC  D003               	bra	u13757
 13237  0005CE  0008               	tblrd		*
 13238  0005D0  50F5               	movf	tablat,w,c
 13239  0005D2  D005               	bra	u13750
 13240  0005D4                     u13757:
 13241  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13242  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13243  0005DC  50E7               	movf	indf1,w,c
 13244  0005DE                     u13750:
 13245  0005DE  0A20               	xorlw	32
 13246  0005E0  B4D8               	btfsc	status,2,c
 13247  0005E2  D7EA               	goto	l11795
 13248                           
 13249                           ;tff.c: 665: if (*p == '/') p++;
 13250  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13251  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13252  0005EC  6AF8               	clrf	tblptru,c
 13253  0005EE  0E07               	movlw	(high __ramtop+-1)
 13254  0005F0  64F7               	cpfsgt	tblptrh,c
 13255  0005F2  D003               	bra	u13777
 13256  0005F4  0008               	tblrd		*
 13257  0005F6  50F5               	movf	tablat,w,c
 13258  0005F8  D005               	bra	u13770
 13259  0005FA                     u13777:
 13260  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13261  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13262  000602  50E7               	movf	indf1,w,c
 13263  000604                     u13770:
 13264  000604  0A2F               	xorlw	47
 13265  000606  A4D8               	btfss	status,2,c
 13266  000608  D003               	goto	l11803
 13267  00060A  0100               	movlb	0	; () banked
 13268  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13269  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13270  000610                     l11803:
 13271                           
 13272                           ;tff.c: 666: *path = p;
 13273  000610  503D               	movf	auto_mount@path^0,w,c
 13274  000612  6ED9               	movwf	fsr2l,c
 13275  000614  6ADA               	clrf	fsr2h,c
 13276  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13277  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13278                           
 13279                           ;tff.c: 669: fs = FatFs;
 13280  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13281  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13282                           
 13283                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13284  000626  0100               	movlb	0	; () banked
 13285  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13286  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13287  00062C  A4D8               	btfss	status,2,c
 13288  00062E  D002               	goto	l11813
 13289                           
 13290                           ; BSR set to: 0
 13291  000630  0E0A               	movlw	10
 13292  000632  0012               	return	
 13293  000634                     l11813:
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;tff.c: 672: if (fs->fs_type) {
 13297  000634  EE20 F01C          	lfsr	2,28
 13298  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13299  00063A  26D9               	addwf	fsr2l,f,c
 13300  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13301  00063E  22DA               	addwfc	fsr2h,f,c
 13302  000640  50DF               	movf	indf2,w,c
 13303  000642  B4D8               	btfsc	status,2,c
 13304  000644  D00F               	goto	l11831
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;tff.c: 673: stat = disk_status(0);
 13308  000646  0E00               	movlw	0
 13309  000648  ECEB  F02B         	call	_disk_status
 13310  00064C  0100               	movlb	0	; () banked
 13311  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;tff.c: 674: if (!(stat & 0x01)) {
 13315  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13316  000652  D008               	goto	l11831
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13320  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13321  000656  A4D8               	btfss	status,2,c
 13322                           
 13323                           ; BSR set to: 0
 13324  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13325  00065A  D002               	goto	l11827
 13326  00065C                     u13830:
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13330  00065C  0E09               	movlw	9
 13331  00065E  0012               	return	
 13332  000660                     l11827:
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;tff.c: 679: return FR_OK;
 13336  000660  0E00               	movlw	0
 13337  000662  0012               	return	
 13338  000664                     l11831:
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13342  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13343  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13344  00066C  0E00               	movlw	0
 13345  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13346  000670  0E00               	movlw	0
 13347  000672  6E0C               	movwf	memset@c^0,c
 13348  000674  0E02               	movlw	2
 13349  000676  6E0F               	movwf	(memset@n+1)^0,c
 13350  000678  0E20               	movlw	32
 13351  00067A  6E0E               	movwf	memset@n^0,c
 13352  00067C  EC48  F02C         	call	_memset	;wreg free
 13353                           
 13354                           ;tff.c: 686: stat = disk_initialize(0);
 13355  000680  0E00               	movlw	0
 13356  000682  ECC7  F02C         	call	_disk_initialize
 13357  000686  0100               	movlb	0	; () banked
 13358  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;tff.c: 687: if (stat & 0x01)
 13362  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13363  00068C  D002               	goto	l11841
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;tff.c: 688: return FR_NOT_READY;
 13367  00068E  0E01               	movlw	1
 13368  000690  0012               	return	
 13369  000692                     l11841:
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13373  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13374  000694  B4D8               	btfsc	status,2,c
 13375  000696  D002               	goto	l11849
 13376                           
 13377                           ; BSR set to: 0
 13378  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13379  00069A  D7E0               	goto	u13830
 13380  00069C                     l11849:
 13381                           
 13382                           ; BSR set to: 0
 13383                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13384  00069C  0E00               	movlw	0
 13385  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13386  0006A0  0E00               	movlw	0
 13387  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13388  0006A4  0E00               	movlw	0
 13389  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13390  0006A8  0E00               	movlw	0
 13391  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13392  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13393  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13394  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13395  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13396  0006BC  ECF1  F024         	call	_check_fs	;wreg free
 13397  0006C0  0100               	movlb	0	; () banked
 13398  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;tff.c: 697: if (fmt == 1) {
 13402  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13403  0006C6  A4D8               	btfss	status,2,c
 13404  0006C8  D023               	goto	l11859
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;tff.c: 699: if (fs->win[446+4]) {
 13408  0006CA  EE21 F0E2          	lfsr	2,482
 13409  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13410  0006D0  26D9               	addwf	fsr2l,f,c
 13411  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13412  0006D4  22DA               	addwfc	fsr2h,f,c
 13413  0006D6  50DF               	movf	indf2,w,c
 13414  0006D8  B4D8               	btfsc	status,2,c
 13415  0006DA  D01A               	goto	l11859
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13419  0006DC  EE21 F0E6          	lfsr	2,486
 13420  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13421  0006E2  26D9               	addwf	fsr2l,f,c
 13422  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13423  0006E6  22DA               	addwfc	fsr2h,f,c
 13424  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13425  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13426  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13427  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;tff.c: 701: fmt = check_fs(bootsect);
 13431  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13432  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13433  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13434  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13435  000708  ECF1  F024         	call	_check_fs	;wreg free
 13436  00070C  0100               	movlb	0	; () banked
 13437  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13438  000710                     l11859:
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13442  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13443  000712  A4D8               	btfss	status,2,c
 13444  000714  D00C               	goto	u13900
 13445                           
 13446                           ; BSR set to: 0
 13447  000716  EE20 F02B          	lfsr	2,43
 13448  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13449  00071C  26D9               	addwf	fsr2l,f,c
 13450  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13451  000720  22DA               	addwfc	fsr2h,f,c
 13452  000722  50DE               	movf	postinc2,w,c
 13453  000724  E104               	bnz	u13900
 13454  000726  0E02               	movlw	2
 13455  000728  18DE               	xorwf	postinc2,w,c
 13456  00072A  B4D8               	btfsc	status,2,c
 13457  00072C  D002               	goto	l11867
 13458  00072E                     u13900:
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13462  00072E  0E0B               	movlw	11
 13463  000730  0012               	return	
 13464  000732                     l11867:
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13468  000732  EE20 F036          	lfsr	2,54
 13469  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13470  000738  26D9               	addwf	fsr2l,f,c
 13471  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13472  00073C  22DA               	addwfc	fsr2h,f,c
 13473  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13474  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13475  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13476  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13477  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13478  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13482  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13483  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13484  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13485  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13486  00075A  A4D8               	btfss	status,2,c
 13487  00075C  D00E               	goto	l1083
 13488                           
 13489                           ; BSR set to: 0
 13490  00075E  EE20 F044          	lfsr	2,68
 13491  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13492  000764  26D9               	addwf	fsr2l,f,c
 13493  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13494  000768  22DA               	addwfc	fsr2h,f,c
 13495  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13496  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13497  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13498  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13499  00077A                     l1083:
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13503  00077A  EE20 F014          	lfsr	2,20
 13504  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13505  000780  26D9               	addwf	fsr2l,f,c
 13506  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13507  000784  22DA               	addwfc	fsr2h,f,c
 13508  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13509  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13513  00078E  EE20 F030          	lfsr	2,48
 13514  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13515  000794  26D9               	addwf	fsr2l,f,c
 13516  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13517  000798  22DA               	addwfc	fsr2h,f,c
 13518  00079A  EE10 F01E          	lfsr	1,30
 13519  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13520  0007A0  26E1               	addwf	fsr1l,f,c
 13521  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13522  0007A4  22E2               	addwfc	fsr1h,f,c
 13523  0007A6  CFDF FFE7          	movff	indf2,indf1
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;tff.c: 712: fatsize *= fs->n_fats;
 13527  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13528  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13529  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13530  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13531  0007BA  EE20 F01E          	lfsr	2,30
 13532  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13533  0007C0  26D9               	addwf	fsr2l,f,c
 13534  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13535  0007C4  22DA               	addwfc	fsr2h,f,c
 13536  0007C6  50DF               	movf	indf2,w,c
 13537  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13538  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13539  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13540  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13541  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13542  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13543  0007D4  ECCA  F028         	call	___lmul	;wreg free
 13544  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13545  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13546  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13547  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13548                           
 13549                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13550  0007E8  0100               	movlb	0	; () banked
 13551  0007EA  EE20 F02E          	lfsr	2,46
 13552  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13553  0007F0  26D9               	addwf	fsr2l,f,c
 13554  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13555  0007F4  22DA               	addwfc	fsr2h,f,c
 13556  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13557  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13558  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13559  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13560  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13561  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13562  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13563  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13564  00080A  0E00               	movlw	0
 13565  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13566  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13567  000810  0E00               	movlw	0
 13568  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13569  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13570  000816  EE20 F008          	lfsr	2,8
 13571  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13572  00081C  26D9               	addwf	fsr2l,f,c
 13573  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13574  000820  22DA               	addwfc	fsr2h,f,c
 13575  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13576  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13577  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13578  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;tff.c: 714: fs->csize = fs->win[13];
 13582  000832  EE20 F02D          	lfsr	2,45
 13583  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13584  000838  26D9               	addwf	fsr2l,f,c
 13585  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13586  00083C  22DA               	addwfc	fsr2h,f,c
 13587  00083E  EE10 F01D          	lfsr	1,29
 13588  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13589  000844  26E1               	addwf	fsr1l,f,c
 13590  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13591  000848  22E2               	addwfc	fsr1h,f,c
 13592  00084A  CFDF FFE7          	movff	indf2,indf1
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13596  00084E  EE20 F031          	lfsr	2,49
 13597  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13598  000854  26D9               	addwf	fsr2l,f,c
 13599  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13600  000858  22DA               	addwfc	fsr2h,f,c
 13601  00085A  EE10 F002          	lfsr	1,2
 13602  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13603  000860  26E1               	addwf	fsr1l,f,c
 13604  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13605  000864  22E2               	addwfc	fsr1h,f,c
 13606  000866  CFDE FFE6          	movff	postinc2,postinc1
 13607  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13611  00086E  EE20 F033          	lfsr	2,51
 13612  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13613  000874  26D9               	addwf	fsr2l,f,c
 13614  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13615  000878  22DA               	addwfc	fsr2h,f,c
 13616  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13617  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13618  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13619  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13620  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13621  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13625  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13626  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13627  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13628  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13629  000896  A4D8               	btfss	status,2,c
 13630  000898  D00E               	goto	l11889
 13631                           
 13632                           ; BSR set to: 0
 13633  00089A  EE20 F040          	lfsr	2,64
 13634  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13635  0008A0  26D9               	addwf	fsr2l,f,c
 13636  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13637  0008A4  22DA               	addwfc	fsr2h,f,c
 13638  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13639  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13640  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13641  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13642  0008B6                     l11889:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13646  0008B6  EE20 F002          	lfsr	2,2
 13647  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13648  0008BC  26D9               	addwf	fsr2l,f,c
 13649  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13650  0008C0  22DA               	addwfc	fsr2h,f,c
 13651  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13652  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13653  0008CA  0E04               	movlw	4
 13654  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13655  0008CE                     u13935:
 13656  0008CE  90D8               	bcf	status,0,c
 13657  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13658  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13659  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13660  0008D6  D7FB               	goto	u13935
 13661  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13662  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13663  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13664  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13665  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13666  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13667  0008E4  EE20 F02E          	lfsr	2,46
 13668  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 13669  0008EA  26D9               	addwf	fsr2l,f,c
 13670  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13671  0008EE  22DA               	addwfc	fsr2h,f,c
 13672  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 13673  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 13674  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 13675  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 13676  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 13677  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 13678  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 13679  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 13680  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 13681  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 13682  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 13683  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 13684  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 13685  00090E  0E00               	movlw	0
 13686  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 13687  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 13688  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 13689  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13690  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 13691  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 13692  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13693  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 13694  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 13695  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13696  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 13697  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 13698  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13699  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 13700  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 13701  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 13702  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 13703  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 13704  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 13705  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 13706  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 13707  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 13708  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 13709  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 13710  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 13711  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 13712  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 13713  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13714  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 13715  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 13716  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 13717  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 13718  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 13719  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 13720  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 13721  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 13722  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 13723  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 13724  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 13725  00095E  EE20 F01D          	lfsr	2,29
 13726  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 13727  000964  26D9               	addwf	fsr2l,f,c
 13728  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13729  000968  22DA               	addwfc	fsr2h,f,c
 13730  00096A  50DF               	movf	indf2,w,c
 13731  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 13732  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 13733  000970  6E0E               	movwf	___lldiv@divisor^0,c
 13734  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 13735  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 13736  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 13737  000978  EC32  F025         	call	___lldiv	;wreg free
 13738  00097C  0E02               	movlw	2
 13739  00097E  240A               	addwf	?___lldiv^0,w,c
 13740  000980  0100               	movlb	0	; () banked
 13741  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 13742  000984  0E00               	movlw	0
 13743  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 13744  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 13745  00098A  0E00               	movlw	0
 13746  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 13747  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 13748  000990  0E00               	movlw	0
 13749  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 13750  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 13751  000996  EE20 F016          	lfsr	2,22
 13752  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 13753  00099C  26D9               	addwf	fsr2l,f,c
 13754  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13755  0009A0  22DA               	addwfc	fsr2h,f,c
 13756  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 13757  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;tff.c: 722: fmt = 1;
 13761  0009AA  0E01               	movlw	1
 13762  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 13766  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 13767  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 13768  0009B2  E106               	bnz	u13940
 13769  0009B4  0EF7               	movlw	247
 13770  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 13771  0009B8  0E0F               	movlw	15
 13772  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 13773  0009BC  A0D8               	btfss	status,0,c
 13774  0009BE  D002               	goto	l11897
 13775  0009C0                     u13940:
 13776                           
 13777                           ; BSR set to: 0
 13778  0009C0  0E02               	movlw	2
 13779  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13780  0009C4                     l11897:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 13784  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 13785  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 13786  0009C8  E107               	bnz	u13950
 13787  0009CA  0EF7               	movlw	247
 13788  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 13789  0009CE  0EFF               	movlw	255
 13790  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 13791  0009D2  B0D8               	btfsc	status,0,c
 13792  0009D4  D6AC               	goto	u13900
 13793  0009D6  D001               	goto	l11903
 13794  0009D8                     u13950:
 13795  0009D8  D6AA               	goto	u13900
 13796  0009DA                     l11903:
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 13800  0009DA  EE20 F008          	lfsr	2,8
 13801  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 13802  0009E0  26D9               	addwf	fsr2l,f,c
 13803  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13804  0009E4  22DA               	addwfc	fsr2h,f,c
 13805  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 13806  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 13807  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 13808  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 13809  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13810  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 13811  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13812  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13813  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 13814  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13815  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13816  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 13817  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 13818  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13819  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 13820  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 13821  000A0E  EE20 F00C          	lfsr	2,12
 13822  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 13823  000A14  26D9               	addwf	fsr2l,f,c
 13824  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13825  000A18  22DA               	addwfc	fsr2h,f,c
 13826  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13827  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13828  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 13829  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 13830                           
 13831                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 13832  000A2A  EE20 F008          	lfsr	2,8
 13833  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 13834  000A30  26D9               	addwf	fsr2l,f,c
 13835  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13836  000A34  22DA               	addwfc	fsr2h,f,c
 13837  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 13838  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 13839  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 13840  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 13841  000A46  EE20 F002          	lfsr	2,2
 13842  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 13843  000A4C  26D9               	addwf	fsr2l,f,c
 13844  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13845  000A50  22DA               	addwfc	fsr2h,f,c
 13846  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 13847  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 13848  000A5A  0E04               	movlw	4
 13849  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 13850  000A5E                     u13965:
 13851  000A5E  90D8               	bcf	status,0,c
 13852  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 13853  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 13854  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 13855  000A66  D7FB               	goto	u13965
 13856  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 13857  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 13858  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 13859  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 13860  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 13861  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 13862  000A74  0E00               	movlw	0
 13863  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 13864  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 13865  000A7A  0E00               	movlw	0
 13866  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 13867  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 13868  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13869  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 13870  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 13871  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 13872  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 13873  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 13874  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 13875  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 13876  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 13877  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 13878  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 13879  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 13880  000A98  EE20 F010          	lfsr	2,16
 13881  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 13882  000A9E  26D9               	addwf	fsr2l,f,c
 13883  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13884  000AA2  22DA               	addwfc	fsr2h,f,c
 13885  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 13886  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 13887  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 13888  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 13889                           
 13890                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 13891  000AB4  EE20 F01A          	lfsr	2,26
 13892  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 13893  000ABA  26D9               	addwf	fsr2l,f,c
 13894  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13895  000ABE  22DA               	addwfc	fsr2h,f,c
 13896  000AC0  0EFF               	movlw	255
 13897  000AC2  6EDE               	movwf	postinc2,c
 13898  000AC4  0EFF               	movlw	255
 13899  000AC6  6EDD               	movwf	postdec2,c
 13900                           
 13901                           ;tff.c: 754: fs->fs_type = fmt;
 13902  000AC8  EE20 F01C          	lfsr	2,28
 13903  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 13904  000ACE  26D9               	addwf	fsr2l,f,c
 13905  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13906  000AD2  22DA               	addwfc	fsr2h,f,c
 13907  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;tff.c: 755: fs->id = ++fsid;
 13911  000AD8  0101               	movlb	1	; () banked
 13912  000ADA  4B6E               	infsnz	_fsid& (0+255),f,b
 13913  000ADC  2B6F               	incf	(_fsid+1)& (0+255),f,b
 13914  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 13915  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 13916  000AE6  C16E  FFDE         	movff	_fsid,postinc2
 13917  000AEA  C16F  FFDD         	movff	_fsid+1,postdec2
 13918                           
 13919                           ;tff.c: 756: return FR_OK;
 13920  000AEE  0E00               	movlw	0
 13921  000AF0  0012               	return		;funcret
 13922  000AF2                     __end_of_auto_mount:
 13923                           	callstack 0
 13924                           
 13925 ;; *************** function _memset *****************
 13926 ;; Defined at:
 13927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  p1              2    9[COMRAM] PTR void 
 13930 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 13931 ;;  c               2   11[COMRAM] int 
 13932 ;;  n               2   13[COMRAM] unsigned int 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  p               2   15[COMRAM] PTR unsigned char 
 13935 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  2    9[COMRAM] PTR void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13945 ;;      Params:         6       0       0       0       0       0       0       0       0
 13946 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13949 ;;Total ram usage:        8 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    2
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_make_dirfile
 13956 ;;		_reserve_direntry
 13957 ;;		_auto_mount
 13958 ;;		_f_open
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           	psect	text74
 13963  005890                     __ptext74:
 13964                           	callstack 0
 13965  005890                     _memset:
 13966                           	callstack 21
 13967                           
 13968                           ;incstack = 0
 13969  005890  C00A  F010         	movff	memset@p1,memset@p
 13970  005894  C00B  F011         	movff	memset@p1+1,memset@p+1
 13971  005898  D008               	goto	l11125
 13972  00589A                     l11121:
 13973  00589A  C010  FFD9         	movff	memset@p,fsr2l
 13974  00589E  C011  FFDA         	movff	memset@p+1,fsr2h
 13975  0058A2  C00C  FFDF         	movff	memset@c,indf2
 13976  0058A6  4A10               	infsnz	memset@p^0,f,c
 13977  0058A8  2A11               	incf	(memset@p+1)^0,f,c
 13978  0058AA                     l11125:
 13979  0058AA  060E               	decf	memset@n^0,f,c
 13980  0058AC  A0D8               	btfss	status,0,c
 13981  0058AE  060F               	decf	(memset@n+1)^0,f,c
 13982  0058B0  280E               	incf	memset@n^0,w,c
 13983  0058B2  E1F3               	bnz	l11121
 13984  0058B4  280F               	incf	(memset@n+1)^0,w,c
 13985  0058B6  B4D8               	btfsc	status,2,c
 13986  0058B8  0012               	return	
 13987  0058BA  D7EF               	goto	l11121
 13988  0058BC                     __end_of_memset:
 13989                           	callstack 0
 13990                           
 13991 ;; *************** function _disk_initialize *****************
 13992 ;; Defined at:
 13993 ;;		line 59 in file "bibliotecas/diskio.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;  pdrv            1    wreg     unsigned char 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  pdrv            1   41[COMRAM] unsigned char 
 13998 ;;  result          2    0        int 
 13999 ;;  stat            1   42[COMRAM] unsigned char 
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  1    wreg      unsigned char 
 14002 ;; Registers used:
 14003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0
 14010 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14012 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14013 ;;Total ram usage:        2 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    7
 14016 ;; This function calls:
 14017 ;;		_sdc_disk_initialize
 14018 ;; This function is called by:
 14019 ;;		_auto_mount
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text75
 14024  00598E                     __ptext75:
 14025                           	callstack 0
 14026  00598E                     _disk_initialize:
 14027                           	callstack 17
 14028                           
 14029                           ;incstack = 0
 14030                           ;disk_initialize@pdrv stored from wreg
 14031  00598E  6E2A               	movwf	disk_initialize@pdrv^0,c
 14032                           
 14033                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14034  005990  D005               	goto	l11313
 14035  005992                     l11295:
 14036                           
 14037                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14038  005992  ECBD  F00C         	call	_sdc_disk_initialize	;wreg free
 14039  005996  6E2B               	movwf	disk_initialize@stat^0,c
 14040  005998                     l11297:
 14041                           
 14042                           ;diskio.c: 72: return stat;
 14043  005998  502B               	movf	disk_initialize@stat^0,w,c
 14044  00599A  0012               	return	
 14045  00599C                     l11313:
 14046  00599C  502A               	movf	disk_initialize@pdrv^0,w,c
 14047                           
 14048                           ; Switch size 1, requested type "simple"
 14049                           ; Number of cases is 3, Range of values is 0 to 2
 14050                           ; switch strategies available:
 14051                           ; Name         Instructions Cycles
 14052                           ; simple_byte           10     6 (average)
 14053                           ;	Chosen strategy is simple_byte
 14054  00599E  0A00               	xorlw	0	; case 0
 14055  0059A0  B4D8               	btfsc	status,2,c
 14056  0059A2  D7F7               	goto	l11295
 14057  0059A4  0A01               	xorlw	1	; case 1
 14058  0059A6  B4D8               	btfsc	status,2,c
 14059  0059A8  D7F4               	goto	l11295
 14060  0059AA  0A03               	xorlw	3	; case 2
 14061  0059AC  B4D8               	btfsc	status,2,c
 14062  0059AE  D7F4               	goto	l11297
 14063                           
 14064                           ;diskio.c: 88: return 0x01;
 14065  0059B0  0E01               	movlw	1
 14066  0059B2  0012               	return		;funcret
 14067  0059B4                     __end_of_disk_initialize:
 14068                           	callstack 0
 14069                           
 14070 ;; *************** function _sdc_disk_initialize *****************
 14071 ;; Defined at:
 14072 ;;		line 275 in file "bibliotecas/diskio.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;		None
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;  count2          2   38[COMRAM] int 
 14077 ;;  crc_number      2   34[COMRAM] int 
 14078 ;;  count1          2   32[COMRAM] int 
 14079 ;;  i               2    0        int 
 14080 ;;  buff            1   40[COMRAM] unsigned char 
 14081 ;;  ocr             1   37[COMRAM] unsigned char 
 14082 ;;  buff_i          1   36[COMRAM] unsigned char 
 14083 ;;  stat            1   31[COMRAM] unsigned char 
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  1    wreg      unsigned char 
 14086 ;; Registers used:
 14087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0
 14094 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14095 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14096 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14097 ;;Total ram usage:       13 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    6
 14100 ;; This function calls:
 14101 ;;		_command
 14102 ;;		_dummy_clocks
 14103 ;;		_escreve_frase_ram_lcd
 14104 ;;		_posicao_cursor_lcd
 14105 ;;		_proceed
 14106 ;;		_response
 14107 ;;		_sdc_reset
 14108 ;; This function is called by:
 14109 ;;		_disk_initialize
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text76
 14114  00197A                     __ptext76:
 14115                           	callstack 0
 14116  00197A                     _sdc_disk_initialize:
 14117                           	callstack 17
 14118                           
 14119                           ;incstack = 0
 14120  00197A  0E00               	movlw	0
 14121  00197C  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14122  00197E  0E00               	movlw	0
 14123  001980  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14124  001982  0E00               	movlw	0
 14125  001984  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14126  001986  0E00               	movlw	0
 14127  001988  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14128                           
 14129                           ;diskio.c: 280: BYTE buff = 0;
 14130  00198A  0E00               	movlw	0
 14131  00198C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14132                           
 14133                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14134  00198E  0E10               	movlw	16
 14135  001990  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14136  001992  0E94               	movlw	148
 14137  001994                     u16767:
 14138  001994  2EE8               	decfsz	wreg,f,c
 14139  001996  D7FE               	bra	u16767
 14140  001998  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14141  00199A  D7FC               	bra	u16767
 14142  00199C  D000               	nop2	
 14143                           
 14144                           ;diskio.c: 284: dummy_clocks(100);
 14145  00199E  0E64               	movlw	100
 14146  0019A0  EC79  F02B         	call	_dummy_clocks
 14147                           
 14148                           ;diskio.c: 287: sdc_reset();
 14149  0019A4  EC21  F024         	call	_sdc_reset	;wreg free
 14150                           
 14151                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14152  0019A8  0EAA               	movlw	170
 14153  0019AA  6E0F               	movwf	command@arg^0,c
 14154  0019AC  0E01               	movlw	1
 14155  0019AE  6E10               	movwf	(command@arg+1)^0,c
 14156  0019B0  0E00               	movlw	0
 14157  0019B2  6E11               	movwf	(command@arg+2)^0,c
 14158  0019B4  0E00               	movlw	0
 14159  0019B6  6E12               	movwf	(command@arg+3)^0,c
 14160  0019B8  0E87               	movlw	135
 14161  0019BA  6E13               	movwf	command@CRC^0,c
 14162  0019BC  0E48               	movlw	72
 14163  0019BE  ECC1  F027         	call	_command
 14164                           
 14165                           ;diskio.c: 289: proceed();
 14166  0019C2  EC5E  F02E         	call	_proceed	;wreg free
 14167  0019C6                     l10933:
 14168                           
 14169                           ;diskio.c: 291: buff_i = response();
 14170  0019C6  EC58  F02E         	call	_response	;wreg free
 14171  0019CA  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14172                           
 14173                           ;diskio.c: 292: if(buff_i == 1)
 14174  0019CC  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14175  0019CE  A4D8               	btfss	status,2,c
 14176  0019D0  D004               	goto	l10939
 14177                           
 14178                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14179  0019D2  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14180  0019D4  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14181  0019D6  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14182                           
 14183                           ;diskio.c: 295: }
 14184  0019D8  D006               	goto	l10943
 14185  0019DA                     l10939:
 14186                           
 14187                           ;diskio.c: 296: else if(buff_i==0xAA)
 14188  0019DA  0EAA               	movlw	170
 14189  0019DC  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14190  0019DE  A4D8               	btfss	status,2,c
 14191  0019E0  D002               	goto	l10943
 14192                           
 14193                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14194  0019E2  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14195  0019E4  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14196  0019E6                     l10943:
 14197                           
 14198                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14199  0019E6  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14200  0019E8  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14201                           
 14202                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14203  0019EA  0EAA               	movlw	170
 14204  0019EC  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14205  0019EE  E103               	bnz	u12370
 14206  0019F0  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14207  0019F2  B4D8               	btfsc	status,2,c
 14208  0019F4  D008               	goto	u12380
 14209  0019F6                     u12370:
 14210  0019F6  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14211  0019F8  D7E6               	goto	l10933
 14212  0019FA  0EE8               	movlw	232
 14213  0019FC  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14214  0019FE  0E03               	movlw	3
 14215  001A00  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14216  001A02  A0D8               	btfss	status,0,c
 14217  001A04  D7E0               	goto	l10933
 14218  001A06                     u12380:
 14219                           
 14220                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14221  001A06  0EAA               	movlw	170
 14222  001A08  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14223  001A0A  E102               	bnz	u12391
 14224  001A0C  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14225  001A0E  A4D8               	btfss	status,2,c
 14226  001A10                     u12391:
 14227  001A10  D099               	goto	l11021
 14228  001A12                     u12390:
 14229                           
 14230                           ;diskio.c: 310: count2 = 0;
 14231                           
 14232                           ;diskio.c: 309: do{
 14233  001A12  0E00               	movlw	0
 14234  001A14  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14235  001A16  0E00               	movlw	0
 14236  001A18  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14237  001A1A                     
 14238                           ;diskio.c: 319: dummy_clocks(10);
 14239  001A1A  0E0A               	movlw	10
 14240  001A1C  EC79  F02B         	call	_dummy_clocks
 14241                           
 14242                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14243  001A20  0E00               	movlw	0
 14244  001A22  6E0F               	movwf	command@arg^0,c
 14245  001A24  0E00               	movlw	0
 14246  001A26  6E10               	movwf	(command@arg+1)^0,c
 14247  001A28  0E00               	movlw	0
 14248  001A2A  6E11               	movwf	(command@arg+2)^0,c
 14249  001A2C  0E00               	movlw	0
 14250  001A2E  6E12               	movwf	(command@arg+3)^0,c
 14251  001A30  0E00               	movlw	0
 14252  001A32  6E13               	movwf	command@CRC^0,c
 14253  001A34  0E77               	movlw	119
 14254  001A36  ECC1  F027         	call	_command
 14255                           
 14256                           ;diskio.c: 323: proceed();
 14257  001A3A  EC5E  F02E         	call	_proceed	;wreg free
 14258  001A3E                     l10963:
 14259                           
 14260                           ;diskio.c: 325: buff = response();
 14261  001A3E  EC58  F02E         	call	_response	;wreg free
 14262  001A42  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14263                           
 14264                           ;diskio.c: 326: count2++;
 14265  001A44  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14266  001A46  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14267                           
 14268                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14269  001A48  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14270  001A4A  B4D8               	btfsc	status,2,c
 14271  001A4C  D008               	goto	u12410
 14272  001A4E  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14273  001A50  D7F6               	goto	l10963
 14274  001A52  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14275  001A54  E104               	bnz	u12410
 14276  001A56  0E0A               	movlw	10
 14277  001A58  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14278  001A5A  A0D8               	btfss	status,0,c
 14279  001A5C  D7F0               	goto	l10963
 14280  001A5E                     u12410:
 14281                           
 14282                           ;diskio.c: 328: count2 = 0;
 14283  001A5E  0E00               	movlw	0
 14284  001A60  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14285  001A62  0E00               	movlw	0
 14286  001A64  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14287                           
 14288                           ;diskio.c: 332: dummy_clocks(10);
 14289  001A66  0E0A               	movlw	10
 14290  001A68  EC79  F02B         	call	_dummy_clocks
 14291                           
 14292                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14293  001A6C  0E00               	movlw	0
 14294  001A6E  6E0F               	movwf	command@arg^0,c
 14295  001A70  0E00               	movlw	0
 14296  001A72  6E10               	movwf	(command@arg+1)^0,c
 14297  001A74  0E00               	movlw	0
 14298  001A76  6E11               	movwf	(command@arg+2)^0,c
 14299  001A78  0E40               	movlw	64
 14300  001A7A  6E12               	movwf	(command@arg+3)^0,c
 14301  001A7C  0E00               	movlw	0
 14302  001A7E  6E13               	movwf	command@CRC^0,c
 14303  001A80  0E69               	movlw	105
 14304  001A82  ECC1  F027         	call	_command
 14305                           
 14306                           ;diskio.c: 334: proceed();
 14307  001A86  EC5E  F02E         	call	_proceed	;wreg free
 14308                           
 14309                           ;diskio.c: 335: buff = response();
 14310  001A8A  EC58  F02E         	call	_response	;wreg free
 14311  001A8E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14312                           
 14313                           ;diskio.c: 336: count2++;
 14314  001A90  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14315  001A92  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14316                           
 14317                           ;diskio.c: 337: }while(buff!=0X00);
 14318  001A94  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14319  001A96  A4D8               	btfss	status,2,c
 14320  001A98  D7C0               	goto	l10953
 14321                           
 14322                           ;diskio.c: 342: dummy_clocks(10);
 14323  001A9A  0E0A               	movlw	10
 14324  001A9C  EC79  F02B         	call	_dummy_clocks
 14325                           
 14326                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14327  001AA0  0E00               	movlw	0
 14328  001AA2  6E0F               	movwf	command@arg^0,c
 14329  001AA4  0E00               	movlw	0
 14330  001AA6  6E10               	movwf	(command@arg+1)^0,c
 14331  001AA8  0E00               	movlw	0
 14332  001AAA  6E11               	movwf	(command@arg+2)^0,c
 14333  001AAC  0E00               	movlw	0
 14334  001AAE  6E12               	movwf	(command@arg+3)^0,c
 14335  001AB0  0EFF               	movlw	255
 14336  001AB2  6E13               	movwf	command@CRC^0,c
 14337  001AB4  0E7A               	movlw	122
 14338  001AB6  ECC1  F027         	call	_command
 14339                           
 14340                           ;diskio.c: 344: proceed();
 14341  001ABA  EC5E  F02E         	call	_proceed	;wreg free
 14342  001ABE                     l10987:
 14343                           
 14344                           ;diskio.c: 346: buff = response();
 14345  001ABE  EC58  F02E         	call	_response	;wreg free
 14346  001AC2  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14347                           
 14348                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14349  001AC4  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14350  001AC6  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14351  001AC8  0B80               	andlw	128
 14352  001ACA  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14353                           
 14354                           ;diskio.c: 348: count2++;
 14355  001ACC  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14356  001ACE  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14357                           
 14358                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14359  001AD0  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14360  001AD2  B4D8               	btfsc	status,2,c
 14361  001AD4  D00B               	goto	u12450
 14362  001AD6  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14363  001AD8  B4D8               	btfsc	status,2,c
 14364  001ADA  D008               	goto	u12450
 14365  001ADC  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14366  001ADE  D7EF               	goto	l10987
 14367  001AE0  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14368  001AE2  E104               	bnz	u12450
 14369  001AE4  0E0A               	movlw	10
 14370  001AE6  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14371  001AE8  A0D8               	btfss	status,0,c
 14372  001AEA  D7E9               	goto	l10987
 14373  001AEC                     u12450:
 14374                           
 14375                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14376  001AEC  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14377  001AEE  B4D8               	btfsc	status,2,c
 14378  001AF0  D003               	goto	u12470
 14379  001AF2  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14380  001AF4  A4D8               	btfss	status,2,c
 14381  001AF6  D78D               	goto	u12390
 14382  001AF8                     u12470:
 14383                           
 14384                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14385  001AF8  0E10               	movlw	16
 14386  001AFA  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14387  001AFC  0E94               	movlw	148
 14388  001AFE                     u16777:
 14389  001AFE  2EE8               	decfsz	wreg,f,c
 14390  001B00  D7FE               	bra	u16777
 14391  001B02  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14392  001B04  D7FC               	bra	u16777
 14393  001B06  D000               	nop2	
 14394                           
 14395                           ;diskio.c: 356: stat = 0X00;
 14396  001B08  0E00               	movlw	0
 14397  001B0A  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14398                           
 14399                           ;diskio.c: 358: if(!ocr)
 14400  001B0C  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14401  001B0E  A4D8               	btfss	status,2,c
 14402  001B10  D0A6               	goto	u12570
 14403                           
 14404                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14405  001B12  0E0A               	movlw	10
 14406  001B14  EC79  F02B         	call	_dummy_clocks
 14407                           
 14408                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14409  001B18  0E00               	movlw	0
 14410  001B1A  6E0F               	movwf	command@arg^0,c
 14411  001B1C  0E02               	movlw	2
 14412  001B1E  6E10               	movwf	(command@arg+1)^0,c
 14413  001B20  0E00               	movlw	0
 14414  001B22  6E11               	movwf	(command@arg+2)^0,c
 14415  001B24  0E00               	movlw	0
 14416  001B26  6E12               	movwf	(command@arg+3)^0,c
 14417  001B28  0EFF               	movlw	255
 14418  001B2A  6E13               	movwf	command@CRC^0,c
 14419  001B2C  0E50               	movlw	80
 14420  001B2E  ECC1  F027         	call	_command
 14421                           
 14422                           ;diskio.c: 363: proceed();
 14423  001B32  EC5E  F02E         	call	_proceed	;wreg free
 14424  001B36                     
 14425                           ;diskio.c: 367: buff = response();
 14426  001B36  EC58  F02E         	call	_response	;wreg free
 14427  001B3A  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14428                           
 14429                           ;diskio.c: 368: }while(buff!=0X00);
 14430  001B3C  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14431  001B3E  B4D8               	btfsc	status,2,c
 14432  001B40  D08E               	goto	u12570
 14433  001B42  D7F9               	goto	l11015
 14434  001B44                     l11021:
 14435                           
 14436                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14437  001B44  0E00               	movlw	0
 14438  001B46  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14439  001B48  0E00               	movlw	0
 14440  001B4A  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14441                           
 14442                           ;diskio.c: 378: dummy_clocks(1);
 14443  001B4C  0E01               	movlw	1
 14444  001B4E  EC79  F02B         	call	_dummy_clocks
 14445                           
 14446                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14447  001B52  0E00               	movlw	0
 14448  001B54  6E0F               	movwf	command@arg^0,c
 14449  001B56  0E00               	movlw	0
 14450  001B58  6E10               	movwf	(command@arg+1)^0,c
 14451  001B5A  0E00               	movlw	0
 14452  001B5C  6E11               	movwf	(command@arg+2)^0,c
 14453  001B5E  0E00               	movlw	0
 14454  001B60  6E12               	movwf	(command@arg+3)^0,c
 14455  001B62  0EFF               	movlw	255
 14456  001B64  6E13               	movwf	command@CRC^0,c
 14457  001B66  0E69               	movlw	105
 14458  001B68  ECC1  F027         	call	_command
 14459                           
 14460                           ;diskio.c: 380: proceed();
 14461  001B6C  EC5E  F02E         	call	_proceed	;wreg free
 14462  001B70                     l11031:
 14463                           
 14464                           ;diskio.c: 382: buff = response();
 14465  001B70  EC58  F02E         	call	_response	;wreg free
 14466  001B74  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14467                           
 14468                           ;diskio.c: 383: count2++;
 14469  001B76  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14470  001B78  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14471                           
 14472                           ;diskio.c: 384: if(buff==0x00)
 14473  001B7A  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14474  001B7C  A4D8               	btfss	status,2,c
 14475  001B7E  D00B               	goto	l11041
 14476                           
 14477                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14478  001B80  0E00               	movlw	0
 14479  001B82  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14480  001B84  0E01               	movlw	1
 14481  001B86  EC64  F027         	call	_posicao_cursor_lcd
 14482                           
 14483                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14484  001B8A  0E1F               	movlw	low STR_3
 14485  001B8C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14486  001B8E  0E62               	movlw	high STR_3
 14487  001B90  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14488  001B92  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
 14489  001B96                     l11041:
 14490                           
 14491                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14492  001B96  0E10               	movlw	16
 14493  001B98  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14494  001B9A  0E94               	movlw	148
 14495  001B9C                     u16787:
 14496  001B9C  2EE8               	decfsz	wreg,f,c
 14497  001B9E  D7FE               	bra	u16787
 14498  001BA0  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14499  001BA2  D7FC               	bra	u16787
 14500  001BA4  D000               	nop2	
 14501                           
 14502                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14503  001BA6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14504  001BA8  B4D8               	btfsc	status,2,c
 14505  001BAA  D008               	goto	u12520
 14506  001BAC  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14507  001BAE  D7E0               	goto	l11031
 14508  001BB0  0E10               	movlw	16
 14509  001BB2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14510  001BB4  0E27               	movlw	39
 14511  001BB6  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14512  001BB8  A0D8               	btfss	status,0,c
 14513  001BBA  D7DA               	goto	l11031
 14514  001BBC                     u12520:
 14515                           
 14516                           ;diskio.c: 393: if(count2==10)
 14517  001BBC  0E0A               	movlw	10
 14518  001BBE  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14519  001BC0  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14520  001BC2  A4D8               	btfss	status,2,c
 14521  001BC4  D034               	goto	u12560
 14522                           
 14523                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14524  001BC6  0E00               	movlw	0
 14525  001BC8  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14526  001BCA  0E00               	movlw	0
 14527  001BCC  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14528                           
 14529                           ;diskio.c: 396: dummy_clocks(10);
 14530  001BCE  0E0A               	movlw	10
 14531  001BD0  EC79  F02B         	call	_dummy_clocks
 14532                           
 14533                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14534  001BD4  0E00               	movlw	0
 14535  001BD6  6E0F               	movwf	command@arg^0,c
 14536  001BD8  0E00               	movlw	0
 14537  001BDA  6E10               	movwf	(command@arg+1)^0,c
 14538  001BDC  0E00               	movlw	0
 14539  001BDE  6E11               	movwf	(command@arg+2)^0,c
 14540  001BE0  0E00               	movlw	0
 14541  001BE2  6E12               	movwf	(command@arg+3)^0,c
 14542  001BE4  0EFF               	movlw	255
 14543  001BE6  6E13               	movwf	command@CRC^0,c
 14544  001BE8  0E41               	movlw	65
 14545  001BEA  ECC1  F027         	call	_command
 14546                           
 14547                           ;diskio.c: 398: proceed();
 14548  001BEE  EC5E  F02E         	call	_proceed	;wreg free
 14549  001BF2                     l11057:
 14550                           
 14551                           ;diskio.c: 400: buff = response();
 14552  001BF2  EC58  F02E         	call	_response	;wreg free
 14553  001BF6  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14554                           
 14555                           ;diskio.c: 401: count2++;
 14556  001BF8  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14557  001BFA  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14558                           
 14559                           ;diskio.c: 402: if(buff==0x00)
 14560  001BFC  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14561  001BFE  A4D8               	btfss	status,2,c
 14562  001C00  D00B               	goto	l11067
 14563                           
 14564                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14565  001C02  0E00               	movlw	0
 14566  001C04  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14567  001C06  0E01               	movlw	1
 14568  001C08  EC64  F027         	call	_posicao_cursor_lcd
 14569                           
 14570                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14571  001C0C  0EEB               	movlw	low STR_4
 14572  001C0E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14573  001C10  0E61               	movlw	high STR_4
 14574  001C12  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14575  001C14  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
 14576  001C18                     l11067:
 14577                           
 14578                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14579  001C18  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14580  001C1A  B4D8               	btfsc	status,2,c
 14581  001C1C  D008               	goto	u12560
 14582  001C1E  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14583  001C20  D7E8               	goto	l11057
 14584  001C22  0E10               	movlw	16
 14585  001C24  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14586  001C26  0E27               	movlw	39
 14587  001C28  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14588  001C2A  A0D8               	btfss	status,0,c
 14589  001C2C  D7E2               	goto	l11057
 14590  001C2E                     u12560:
 14591                           
 14592                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14593  001C2E  0E0A               	movlw	10
 14594  001C30  EC79  F02B         	call	_dummy_clocks
 14595                           
 14596                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14597  001C34  0E00               	movlw	0
 14598  001C36  6E0F               	movwf	command@arg^0,c
 14599  001C38  0E02               	movlw	2
 14600  001C3A  6E10               	movwf	(command@arg+1)^0,c
 14601  001C3C  0E00               	movlw	0
 14602  001C3E  6E11               	movwf	(command@arg+2)^0,c
 14603  001C40  0E00               	movlw	0
 14604  001C42  6E12               	movwf	(command@arg+3)^0,c
 14605  001C44  0EFF               	movlw	255
 14606  001C46  6E13               	movwf	command@CRC^0,c
 14607  001C48  0E50               	movlw	80
 14608  001C4A  ECC1  F027         	call	_command
 14609                           
 14610                           ;diskio.c: 414: proceed();
 14611  001C4E  EC5E  F02E         	call	_proceed	;wreg free
 14612  001C52                     
 14613                           ;diskio.c: 418: buff = response();
 14614  001C52  EC58  F02E         	call	_response	;wreg free
 14615  001C56  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14616                           
 14617                           ;diskio.c: 419: }while(buff!=0X00);
 14618  001C58  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14619  001C5A  A4D8               	btfss	status,2,c
 14620  001C5C  D7FA               	goto	l11075
 14621  001C5E                     u12570:
 14622                           
 14623                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14624  001C5E  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14625  001C60  0012               	return		;funcret
 14626  001C62                     __end_of_sdc_disk_initialize:
 14627                           	callstack 0
 14628                           
 14629 ;; *************** function _sdc_reset *****************
 14630 ;; Defined at:
 14631 ;;		line 238 in file "bibliotecas/diskio.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;		None
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  teste          10    0        unsigned char [10]
 14636 ;;  count           2   25[COMRAM] int 
 14637 ;;  count_nosd      2   23[COMRAM] int 
 14638 ;;  i               2    0        int 
 14639 ;;  receive         2    0        unsigned int 
 14640 ;;  buff            1   27[COMRAM] unsigned char 
 14641 ;;  stat            1    0        unsigned char 
 14642 ;; Return value:  Size  Location     Type
 14643 ;;                  1    wreg      void 
 14644 ;; Registers used:
 14645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14646 ;; Tracked objects:
 14647 ;;		On entry : 0/0
 14648 ;;		On exit  : 0/0
 14649 ;;		Unchanged: 0/0
 14650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14651 ;;      Params:         0       0       0       0       0       0       0       0       0
 14652 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14654 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14655 ;;Total ram usage:        7 bytes
 14656 ;; Hardware stack levels used:    1
 14657 ;; Hardware stack levels required when called:    5
 14658 ;; This function calls:
 14659 ;;		_command
 14660 ;;		_escreve_frase_ram_lcd
 14661 ;;		_posicao_cursor_lcd
 14662 ;;		_proceed
 14663 ;;		_response
 14664 ;; This function is called by:
 14665 ;;		_sdc_disk_initialize
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669                           	psect	text77
 14670  004842                     __ptext77:
 14671                           	callstack 0
 14672  004842                     _sdc_reset:
 14673                           	callstack 17
 14674                           
 14675                           ;incstack = 0
 14676  004842  0E00               	movlw	0
 14677  004844  6E1B               	movwf	(sdc_reset@count+1)^0,c
 14678  004846  0E00               	movlw	0
 14679  004848  6E1A               	movwf	sdc_reset@count^0,c
 14680  00484A  0E00               	movlw	0
 14681  00484C  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 14682  00484E  0E00               	movlw	0
 14683  004850  6E18               	movwf	sdc_reset@count_nosd^0,c
 14684  004852                     l10763:
 14685                           
 14686                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 14687  004852  0E00               	movlw	0
 14688  004854  6E0F               	movwf	command@arg^0,c
 14689  004856  0E00               	movlw	0
 14690  004858  6E10               	movwf	(command@arg+1)^0,c
 14691  00485A  0E00               	movlw	0
 14692  00485C  6E11               	movwf	(command@arg+2)^0,c
 14693  00485E  0E00               	movlw	0
 14694  004860  6E12               	movwf	(command@arg+3)^0,c
 14695  004862  0E95               	movlw	149
 14696  004864  6E13               	movwf	command@CRC^0,c
 14697  004866  0E40               	movlw	64
 14698  004868  ECC1  F027         	call	_command
 14699                           
 14700                           ;diskio.c: 249: proceed();
 14701  00486C  EC5E  F02E         	call	_proceed	;wreg free
 14702  004870                     l10767:
 14703                           
 14704                           ;diskio.c: 251: buff = response();
 14705  004870  EC58  F02E         	call	_response	;wreg free
 14706  004874  6E1C               	movwf	sdc_reset@buff^0,c
 14707                           
 14708                           ;diskio.c: 252: count++;
 14709  004876  4A1A               	infsnz	sdc_reset@count^0,f,c
 14710  004878  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 14711                           
 14712                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 14713  00487A  041C               	decf	sdc_reset@buff^0,w,c
 14714  00487C  B4D8               	btfsc	status,2,c
 14715  00487E  D008               	goto	u12100
 14716  004880  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 14717  004882  D7F6               	goto	l10767
 14718  004884  501B               	movf	(sdc_reset@count+1)^0,w,c
 14719  004886  E104               	bnz	u12100
 14720  004888  0E0A               	movlw	10
 14721  00488A  5C1A               	subwf	sdc_reset@count^0,w,c
 14722  00488C  A0D8               	btfss	status,0,c
 14723  00488E  D7F0               	goto	l10767
 14724  004890                     u12100:
 14725                           
 14726                           ;diskio.c: 254: count = 0;
 14727  004890  0E00               	movlw	0
 14728  004892  6E1B               	movwf	(sdc_reset@count+1)^0,c
 14729  004894  0E00               	movlw	0
 14730  004896  6E1A               	movwf	sdc_reset@count^0,c
 14731                           
 14732                           ;diskio.c: 255: if(buff != 0x01)
 14733  004898  041C               	decf	sdc_reset@buff^0,w,c
 14734  00489A  B4D8               	btfsc	status,2,c
 14735  00489C  D016               	goto	l10785
 14736                           
 14737                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 14738  00489E  0E00               	movlw	0
 14739  0048A0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14740  0048A2  0E01               	movlw	1
 14741  0048A4  EC64  F027         	call	_posicao_cursor_lcd
 14742                           
 14743                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 14744  0048A8  0EF6               	movlw	low STR_1
 14745  0048AA  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14746  0048AC  0E61               	movlw	high STR_1
 14747  0048AE  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14748  0048B0  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
 14749                           
 14750                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 14751  0048B4  0E00               	movlw	0
 14752  0048B6  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14753  0048B8  0E02               	movlw	2
 14754  0048BA  EC64  F027         	call	_posicao_cursor_lcd
 14755                           
 14756                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 14757  0048BE  0E8C               	movlw	low STR_2
 14758  0048C0  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14759  0048C2  0E61               	movlw	high STR_2
 14760  0048C4  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14761  0048C6  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
 14762  0048CA                     l10785:
 14763                           
 14764                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 14765  0048CA  041C               	decf	sdc_reset@buff^0,w,c
 14766  0048CC  B4D8               	btfsc	status,2,c
 14767  0048CE  0012               	return	
 14768  0048D0  D7C0               	goto	l10763
 14769  0048D2                     __end_of_sdc_reset:
 14770                           	callstack 0
 14771                           
 14772 ;; *************** function _posicao_cursor_lcd *****************
 14773 ;; Defined at:
 14774 ;;		line 271 in file "bibliotecas/display_lcd.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  linha           1    wreg     unsigned char 
 14777 ;;  coluna          1   12[COMRAM] unsigned char 
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;  linha           1   13[COMRAM] unsigned char 
 14780 ;;  endereco        1   14[COMRAM] unsigned char 
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		wreg, status,2, status,0, cstack
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14790 ;;      Params:         1       0       0       0       0       0       0       0       0
 14791 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14793 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14794 ;;Total ram usage:        3 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; Hardware stack levels required when called:    4
 14797 ;; This function calls:
 14798 ;;		_endereco_cursor_lcd
 14799 ;; This function is called by:
 14800 ;;		_sdc_reset
 14801 ;;		_sdc_disk_initialize
 14802 ;;		_get_fix
 14803 ;;		_mostra_dados_display
 14804 ;;		_mensagem_inicial
 14805 ;;		_disparo_gravacao
 14806 ;;		_troca_de_tela
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text78
 14811  004EC8                     __ptext78:
 14812                           	callstack 0
 14813  004EC8                     _posicao_cursor_lcd:
 14814                           	callstack 25
 14815                           
 14816                           ;incstack = 0
 14817                           ;posicao_cursor_lcd@linha stored from wreg
 14818  004EC8  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 14819                           
 14820                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 14821  004ECA  0E11               	movlw	17
 14822  004ECC  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 14823  004ECE  0012               	return	
 14824  004ED0  D01B               	goto	l10627
 14825  004ED2                     l232:
 14826                           
 14827                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 14828  004ED2  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 14829                           
 14830                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 14831  004ED6  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 14832  004ED8  EC98  F026         	call	_endereco_cursor_lcd
 14833                           
 14834                           ;display_lcd.c: 284: break;
 14835  004EDC  D022               	goto	l10629
 14836  004EDE                     l10611:
 14837                           
 14838                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 14839  004EDE  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 14840  004EE0  0F40               	addlw	64
 14841  004EE2  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 14842                           
 14843                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 14844  004EE4  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 14845  004EE6  EC98  F026         	call	_endereco_cursor_lcd
 14846                           
 14847                           ;display_lcd.c: 289: break;
 14848  004EEA  D01B               	goto	l10629
 14849  004EEC                     l10615:
 14850                           
 14851                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 14852  004EEC  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 14853  004EEE  0F14               	addlw	20
 14854  004EF0  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 14855                           
 14856                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 14857  004EF2  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 14858  004EF4  EC98  F026         	call	_endereco_cursor_lcd
 14859                           
 14860                           ;display_lcd.c: 294: break;
 14861  004EF8  D014               	goto	l10629
 14862  004EFA                     l10619:
 14863                           
 14864                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 14865  004EFA  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 14866  004EFC  0F54               	addlw	84
 14867  004EFE  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 14868                           
 14869                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 14870  004F00  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 14871  004F02  EC98  F026         	call	_endereco_cursor_lcd
 14872                           
 14873                           ;display_lcd.c: 303: break;
 14874                           
 14875                           ;display_lcd.c: 299: break;
 14876  004F06  D00D               	goto	l10629
 14877  004F08                     l10627:
 14878  004F08  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 14879                           
 14880                           ; Switch size 1, requested type "simple"
 14881                           ; Number of cases is 4, Range of values is 1 to 4
 14882                           ; switch strategies available:
 14883                           ; Name         Instructions Cycles
 14884                           ; simple_byte           13     7 (average)
 14885                           ;	Chosen strategy is simple_byte
 14886  004F0A  0A01               	xorlw	1	; case 1
 14887  004F0C  B4D8               	btfsc	status,2,c
 14888  004F0E  D7E1               	goto	l232
 14889  004F10  0A03               	xorlw	3	; case 2
 14890  004F12  B4D8               	btfsc	status,2,c
 14891  004F14  D7E4               	goto	l10611
 14892  004F16  0A01               	xorlw	1	; case 3
 14893  004F18  B4D8               	btfsc	status,2,c
 14894  004F1A  D7E8               	goto	l10615
 14895  004F1C  0A07               	xorlw	7	; case 4
 14896  004F1E  B4D8               	btfsc	status,2,c
 14897  004F20  D7EC               	goto	l10619
 14898  004F22                     l10629:
 14899                           
 14900                           ;display_lcd.c: 306: coluna++;
 14901  004F22  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 14902                           
 14903                           ;display_lcd.c: 307: }
 14904  004F24  0012               	return	
 14905  004F26                     __end_of_posicao_cursor_lcd:
 14906                           	callstack 0
 14907                           
 14908 ;; *************** function _endereco_cursor_lcd *****************
 14909 ;; Defined at:
 14910 ;;		line 218 in file "bibliotecas/display_lcd.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  endereco        1    wreg     unsigned char 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;  endereco        1   11[COMRAM] unsigned char 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      void 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0
 14925 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14927 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14928 ;;Total ram usage:        1 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    3
 14931 ;; This function calls:
 14932 ;;		_delay
 14933 ;; This function is called by:
 14934 ;;		_posicao_cursor_lcd
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text79
 14939  004D30                     __ptext79:
 14940                           	callstack 0
 14941  004D30                     _endereco_cursor_lcd:
 14942                           	callstack 25
 14943                           
 14944                           ;incstack = 0
 14945                           ;endereco_cursor_lcd@endereco stored from wreg
 14946  004D30  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 14947                           
 14948                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 14949  004D32  9483               	bcf	131,2,c	;volatile
 14950                           
 14951                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 14952  004D34  9283               	bcf	131,1,c	;volatile
 14953                           
 14954                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 14955  004D36  9083               	bcf	131,0,c	;volatile
 14956                           
 14957                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 14958  004D38  8E83               	bsf	131,7,c	;volatile
 14959                           
 14960                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 14961  004D3A  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 14962  004D3C  D002               	goto	l213
 14963  004D3E  8883               	bsf	131,4,c	;volatile
 14964  004D40  D001               	goto	l10465
 14965  004D42                     l213:
 14966                           
 14967                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 14968  004D42  9883               	bcf	131,4,c	;volatile
 14969  004D44                     l10465:
 14970                           
 14971                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 14972  004D44  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 14973  004D46  D002               	goto	l215
 14974  004D48  8A83               	bsf	131,5,c	;volatile
 14975  004D4A  D001               	goto	l10469
 14976  004D4C                     l215:
 14977                           
 14978                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 14979  004D4C  9A83               	bcf	131,5,c	;volatile
 14980  004D4E                     l10469:
 14981                           
 14982                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 14983  004D4E  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 14984  004D50  D002               	goto	l217
 14985  004D52  8C83               	bsf	131,6,c	;volatile
 14986  004D54  D001               	goto	l218
 14987  004D56                     l217:
 14988                           
 14989                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 14990  004D56  9C83               	bcf	131,6,c	;volatile
 14991  004D58                     l218:
 14992                           
 14993                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 14994  004D58  8083               	bsf	131,0,c	;volatile
 14995                           
 14996                           ;display_lcd.c: 236: delay();
 14997  004D5A  ECB8  F02D         	call	_delay	;wreg free
 14998                           
 14999                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15000  004D5E  9083               	bcf	131,0,c	;volatile
 15001                           
 15002                           ;display_lcd.c: 238: delay();
 15003  004D60  ECB8  F02D         	call	_delay	;wreg free
 15004                           
 15005                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15006  004D64  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15007  004D66  D002               	goto	l219
 15008  004D68  8883               	bsf	131,4,c	;volatile
 15009  004D6A  D001               	goto	l220
 15010  004D6C                     l219:
 15011                           
 15012                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15013  004D6C  9883               	bcf	131,4,c	;volatile
 15014  004D6E                     l220:
 15015                           
 15016                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15017  004D6E  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15018  004D70  D002               	goto	l221
 15019  004D72  8A83               	bsf	131,5,c	;volatile
 15020  004D74  D001               	goto	l222
 15021  004D76                     l221:
 15022                           
 15023                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15024  004D76  9A83               	bcf	131,5,c	;volatile
 15025  004D78                     l222:
 15026                           
 15027                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15028  004D78  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15029  004D7A  D002               	goto	l223
 15030  004D7C  8C83               	bsf	131,6,c	;volatile
 15031  004D7E  D001               	goto	l224
 15032  004D80                     l223:
 15033                           
 15034                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15035  004D80  9C83               	bcf	131,6,c	;volatile
 15036  004D82                     l224:
 15037                           
 15038                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15039  004D82  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15040  004D84  D002               	goto	l225
 15041  004D86  8E83               	bsf	131,7,c	;volatile
 15042  004D88  D001               	goto	l226
 15043  004D8A                     l225:
 15044                           
 15045                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15046  004D8A  9E83               	bcf	131,7,c	;volatile
 15047  004D8C                     l226:
 15048                           
 15049                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15050  004D8C  8083               	bsf	131,0,c	;volatile
 15051                           
 15052                           ;display_lcd.c: 252: delay();
 15053  004D8E  ECB8  F02D         	call	_delay	;wreg free
 15054                           
 15055                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15056  004D92  9083               	bcf	131,0,c	;volatile
 15057                           
 15058                           ;display_lcd.c: 254: delay();
 15059  004D94  ECB8  F02D         	call	_delay	;wreg free
 15060  004D98  0012               	return		;funcret
 15061  004D9A                     __end_of_endereco_cursor_lcd:
 15062                           	callstack 0
 15063                           
 15064 ;; *************** function _check_fs *****************
 15065 ;; Defined at:
 15066 ;;		line 624 in file "bibliotecas/tff.c"
 15067 ;; Parameters:    Size  Location     Type
 15068 ;;  sect            4   52[COMRAM] unsigned long 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15071 ;;		 -> NULL(0), fs(544), 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      unsigned char 
 15074 ;; Registers used:
 15075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 3F/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15081 ;;      Params:         4       0       0       0       0       0       0       0       0
 15082 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15083 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15084 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15085 ;;Total ram usage:        8 bytes
 15086 ;; Hardware stack levels used:    1
 15087 ;; Hardware stack levels required when called:    7
 15088 ;; This function calls:
 15089 ;;		_disk_read
 15090 ;;		_memcmp
 15091 ;; This function is called by:
 15092 ;;		_auto_mount
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text80
 15097  0049E2                     __ptext80:
 15098                           	callstack 0
 15099  0049E2                     _check_fs:
 15100                           	callstack 17
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;tff.c: 628: FATFS *fs = FatFs;
 15104                           
 15105                           ;incstack = 0
 15106  0049E2  C04D  F03B         	movff	_FatFs,check_fs@fs
 15107  0049E6  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15108                           
 15109                           ; BSR set to: 0
 15110                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15111  0049EA  0E20               	movlw	32
 15112  0049EC  243B               	addwf	check_fs@fs^0,w,c
 15113  0049EE  6E29               	movwf	disk_read@buff^0,c
 15114  0049F0  0E00               	movlw	0
 15115  0049F2  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15116  0049F4  6E2A               	movwf	(disk_read@buff+1)^0,c
 15117  0049F6  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15118  0049FA  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15119  0049FE  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15120  004A02  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15121  004A06  0E01               	movlw	1
 15122  004A08  6E2F               	movwf	disk_read@count^0,c
 15123  004A0A  0E00               	movlw	0
 15124  004A0C  EC61  F026         	call	_disk_read
 15125  004A10  0900               	iorlw	0
 15126  004A12  B4D8               	btfsc	status,2,c
 15127  004A14  D002               	goto	l11503
 15128  004A16                     u13280:
 15129  004A16                     l11499:
 15130                           
 15131                           ;tff.c: 631: return 2;
 15132  004A16  0E02               	movlw	2
 15133  004A18  0012               	return	
 15134  004A1A                     l11503:
 15135                           
 15136                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15137  004A1A  EE22 F01E          	lfsr	2,542
 15138  004A1E  503B               	movf	check_fs@fs^0,w,c
 15139  004A20  26D9               	addwf	fsr2l,f,c
 15140  004A22  503C               	movf	(check_fs@fs+1)^0,w,c
 15141  004A24  22DA               	addwfc	fsr2h,f,c
 15142  004A26  0E55               	movlw	85
 15143  004A28  18DE               	xorwf	postinc2,w,c
 15144  004A2A  E1F5               	bnz	l11499
 15145  004A2C  0EAA               	movlw	170
 15146  004A2E  18DE               	xorwf	postinc2,w,c
 15147  004A30  A4D8               	btfss	status,2,c
 15148  004A32  D7F1               	goto	u13280
 15149                           
 15150                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15151  004A34  0E56               	movlw	86
 15152  004A36  243B               	addwf	check_fs@fs^0,w,c
 15153  004A38  6E0A               	movwf	memcmp@s1^0,c
 15154  004A3A  0E00               	movlw	0
 15155  004A3C  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15156  004A3E  6E0B               	movwf	(memcmp@s1+1)^0,c
 15157  004A40  0E75               	movlw	low STR_17
 15158  004A42  6E0C               	movwf	memcmp@s2^0,c
 15159  004A44  0E62               	movlw	high STR_17
 15160  004A46  6E0D               	movwf	(memcmp@s2+1)^0,c
 15161  004A48  0E00               	movlw	0
 15162  004A4A  6E0F               	movwf	(memcmp@n+1)^0,c
 15163  004A4C  0E03               	movlw	3
 15164  004A4E  6E0E               	movwf	memcmp@n^0,c
 15165  004A50  ECD8  F023         	call	_memcmp	;wreg free
 15166  004A54  500A               	movf	?_memcmp^0,w,c
 15167  004A56  100B               	iorwf	(?_memcmp+1)^0,w,c
 15168  004A58  A4D8               	btfss	status,2,c
 15169  004A5A  D002               	goto	l11515
 15170                           
 15171                           ;tff.c: 636: return 0;
 15172  004A5C  0E00               	movlw	0
 15173  004A5E  0012               	return	
 15174  004A60                     l11515:
 15175                           
 15176                           ;tff.c: 641: return 1;
 15177  004A60  0E01               	movlw	1
 15178  004A62  0012               	return		;funcret
 15179  004A64                     __end_of_check_fs:
 15180                           	callstack 0
 15181                           
 15182 ;; *************** function _memcmp *****************
 15183 ;; Defined at:
 15184 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;  s1              2    9[COMRAM] PTR const void 
 15187 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15188 ;;  s2              2   11[COMRAM] PTR const void 
 15189 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15190 ;;  n               2   13[COMRAM] unsigned int 
 15191 ;; Auto vars:     Size  Location     Type
 15192 ;;		None
 15193 ;; Return value:  Size  Location     Type
 15194 ;;                  2    9[COMRAM] int 
 15195 ;; Registers used:
 15196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15197 ;; Tracked objects:
 15198 ;;		On entry : 0/0
 15199 ;;		On exit  : 0/0
 15200 ;;		Unchanged: 0/0
 15201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15202 ;;      Params:         6       0       0       0       0       0       0       0       0
 15203 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15204 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15205 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15206 ;;Total ram usage:        8 bytes
 15207 ;; Hardware stack levels used:    1
 15208 ;; Hardware stack levels required when called:    2
 15209 ;; This function calls:
 15210 ;;		Nothing
 15211 ;; This function is called by:
 15212 ;;		_trace_path
 15213 ;;		_check_fs
 15214 ;; This function uses a non-reentrant model
 15215 ;;
 15216                           
 15217                           	psect	text81
 15218  0047B0                     __ptext81:
 15219                           	callstack 0
 15220  0047B0                     _memcmp:
 15221                           	callstack 22
 15222                           
 15223                           ;incstack = 0
 15224  0047B0  D03B               	goto	l11137
 15225  0047B2                     l11129:
 15226  0047B2  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15227  0047B6  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15228  0047BA  50DF               	movf	indf2,w,c
 15229  0047BC  6E10               	movwf	??_memcmp^0,c
 15230  0047BE  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15231  0047C2  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15232  0047C6  6AF8               	clrf	tblptru,c
 15233  0047C8  0E07               	movlw	(high __ramtop+-1)
 15234  0047CA  64F7               	cpfsgt	tblptrh,c
 15235  0047CC  D003               	bra	u12597
 15236  0047CE  0008               	tblrd		*
 15237  0047D0  50F5               	movf	tablat,w,c
 15238  0047D2  D005               	bra	u12590
 15239  0047D4                     u12597:
 15240  0047D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 15241  0047D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 15242  0047DC  50E7               	movf	indf1,w,c
 15243  0047DE                     u12590:
 15244  0047DE  1810               	xorwf	??_memcmp^0,w,c
 15245  0047E0  B4D8               	btfsc	status,2,c
 15246  0047E2  D01E               	goto	l11135
 15247  0047E4  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15248  0047E8  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15249  0047EC  50DF               	movf	indf2,w,c
 15250  0047EE  6E10               	movwf	??_memcmp^0,c
 15251  0047F0  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15252  0047F4  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15253  0047F8  6AF8               	clrf	tblptru,c
 15254  0047FA  0E07               	movlw	(high __ramtop+-1)
 15255  0047FC  64F7               	cpfsgt	tblptrh,c
 15256  0047FE  D003               	bra	u12617
 15257  004800  0008               	tblrd		*
 15258  004802  50F5               	movf	tablat,w,c
 15259  004804  D005               	bra	u12610
 15260  004806                     u12617:
 15261  004806  CFF6 FFE1          	movff	tblptrl,fsr1l
 15262  00480A  CFF7 FFE2          	movff	tblptrh,fsr1h
 15263  00480E  50E7               	movf	indf1,w,c
 15264  004810                     u12610:
 15265  004810  6E11               	movwf	(??_memcmp+1)^0,c
 15266  004812  5011               	movf	(??_memcmp+1)^0,w,c
 15267  004814  5C10               	subwf	??_memcmp^0,w,c
 15268  004816  6E0A               	movwf	?_memcmp^0,c
 15269  004818  6A0B               	clrf	(?_memcmp+1)^0,c
 15270  00481A  A0D8               	btfss	status,0,c
 15271  00481C  060B               	decf	(?_memcmp+1)^0,f,c
 15272  00481E  0012               	return	
 15273  004820                     l11135:
 15274  004820  4A0A               	infsnz	memcmp@s1^0,f,c
 15275  004822  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15276  004824  4A0C               	infsnz	memcmp@s2^0,f,c
 15277  004826  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15278  004828                     l11137:
 15279  004828  060E               	decf	memcmp@n^0,f,c
 15280  00482A  A0D8               	btfss	status,0,c
 15281  00482C  060F               	decf	(memcmp@n+1)^0,f,c
 15282  00482E  280E               	incf	memcmp@n^0,w,c
 15283  004830  E1C0               	bnz	l11129
 15284  004832  280F               	incf	(memcmp@n+1)^0,w,c
 15285  004834  A4D8               	btfss	status,2,c
 15286  004836  D7BD               	goto	l11129
 15287  004838  0E00               	movlw	0
 15288  00483A  6E0B               	movwf	(?_memcmp+1)^0,c
 15289  00483C  0E00               	movlw	0
 15290  00483E  6E0A               	movwf	?_memcmp^0,c
 15291  004840  0012               	return		;funcret
 15292  004842                     __end_of_memcmp:
 15293                           	callstack 0
 15294                           
 15295 ;; *************** function ___lmul *****************
 15296 ;; Defined at:
 15297 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  multiplier      4    9[COMRAM] unsigned long 
 15300 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  product         4   17[COMRAM] unsigned long 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  4    9[COMRAM] unsigned long 
 15305 ;; Registers used:
 15306 ;;		wreg, status,2, status,0
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15312 ;;      Params:         8       0       0       0       0       0       0       0       0
 15313 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15315 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15316 ;;Total ram usage:       12 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:    2
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_clust2sect
 15323 ;;		_auto_mount
 15324 ;;		_atol
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text82
 15329  005194                     __ptext82:
 15330                           	callstack 0
 15331  005194                     ___lmul:
 15332                           	callstack 20
 15333                           
 15334                           ;incstack = 0
 15335  005194  0E00               	movlw	0
 15336  005196  6E12               	movwf	___lmul@product^0,c
 15337  005198  0E00               	movlw	0
 15338  00519A  6E13               	movwf	(___lmul@product+1)^0,c
 15339  00519C  0E00               	movlw	0
 15340  00519E  6E14               	movwf	(___lmul@product+2)^0,c
 15341  0051A0  0E00               	movlw	0
 15342  0051A2  6E15               	movwf	(___lmul@product+3)^0,c
 15343  0051A4                     l10753:
 15344  0051A4  A00A               	btfss	___lmul@multiplier^0,0,c
 15345  0051A6  D008               	goto	l10757
 15346  0051A8  500E               	movf	___lmul@multiplicand^0,w,c
 15347  0051AA  2612               	addwf	___lmul@product^0,f,c
 15348  0051AC  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 15349  0051AE  2213               	addwfc	(___lmul@product+1)^0,f,c
 15350  0051B0  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 15351  0051B2  2214               	addwfc	(___lmul@product+2)^0,f,c
 15352  0051B4  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 15353  0051B6  2215               	addwfc	(___lmul@product+3)^0,f,c
 15354  0051B8                     l10757:
 15355  0051B8  90D8               	bcf	status,0,c
 15356  0051BA  360E               	rlcf	___lmul@multiplicand^0,f,c
 15357  0051BC  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 15358  0051BE  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 15359  0051C0  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 15360  0051C2  90D8               	bcf	status,0,c
 15361  0051C4  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 15362  0051C6  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 15363  0051C8  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 15364  0051CA  320A               	rrcf	___lmul@multiplier^0,f,c
 15365  0051CC  500A               	movf	___lmul@multiplier^0,w,c
 15366  0051CE  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 15367  0051D0  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 15368  0051D2  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 15369  0051D4  A4D8               	btfss	status,2,c
 15370  0051D6  D7E6               	goto	l10753
 15371  0051D8  C012  F00A         	movff	___lmul@product,?___lmul
 15372  0051DC  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 15373  0051E0  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 15374  0051E4  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 15375  0051E8  0012               	return		;funcret
 15376  0051EA                     __end_of___lmul:
 15377                           	callstack 0
 15378                           
 15379 ;; *************** function _f_mount *****************
 15380 ;; Defined at:
 15381 ;;		line 794 in file "bibliotecas/tff.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;  drv             1    wreg     unsigned char 
 15384 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 15385 ;;		 -> fs(544), 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  drv             1   11[COMRAM] unsigned char 
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  1    wreg      enum E3231
 15390 ;; Registers used:
 15391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/1
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15397 ;;      Params:         2       0       0       0       0       0       0       0       0
 15398 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15399 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15400 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15401 ;;Total ram usage:        3 bytes
 15402 ;; Hardware stack levels used:    1
 15403 ;; Hardware stack levels required when called:    2
 15404 ;; This function calls:
 15405 ;;		Nothing
 15406 ;; This function is called by:
 15407 ;;		_escrita_sdcard
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text83
 15412  0053CE                     __ptext83:
 15413                           	callstack 0
 15414  0053CE                     _f_mount:
 15415                           	callstack 24
 15416                           
 15417                           ;incstack = 0
 15418                           ;f_mount@drv stored from wreg
 15419  0053CE  6E0C               	movwf	f_mount@drv^0,c
 15420                           
 15421                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 15422  0053D0  500C               	movf	f_mount@drv^0,w,c
 15423  0053D2  B4D8               	btfsc	status,2,c
 15424  0053D4  D002               	goto	l12109
 15425  0053D6  0E05               	movlw	5
 15426  0053D8  0012               	return	
 15427  0053DA                     l12109:
 15428                           
 15429                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 15430  0053DA  504D               	movf	_FatFs^0,w,c
 15431  0053DC  104E               	iorwf	(_FatFs+1)^0,w,c
 15432  0053DE  B4D8               	btfsc	status,2,c
 15433  0053E0  D008               	goto	l12113
 15434  0053E2  EE20 F01C          	lfsr	2,28
 15435  0053E6  504D               	movf	_FatFs^0,w,c
 15436  0053E8  26D9               	addwf	fsr2l,f,c
 15437  0053EA  504E               	movf	(_FatFs+1)^0,w,c
 15438  0053EC  22DA               	addwfc	fsr2h,f,c
 15439  0053EE  0E00               	movlw	0
 15440  0053F0  6EDF               	movwf	indf2,c
 15441  0053F2                     l12113:
 15442                           
 15443                           ;tff.c: 803: FatFs = fs;
 15444  0053F2  C00A  F04D         	movff	f_mount@fs,_FatFs
 15445  0053F6  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 15446                           
 15447                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 15448  0053FA  500A               	movf	f_mount@fs^0,w,c
 15449  0053FC  100B               	iorwf	(f_mount@fs+1)^0,w,c
 15450  0053FE  B4D8               	btfsc	status,2,c
 15451  005400  D008               	goto	l12119
 15452  005402  EE20 F01C          	lfsr	2,28
 15453  005406  500A               	movf	f_mount@fs^0,w,c
 15454  005408  26D9               	addwf	fsr2l,f,c
 15455  00540A  500B               	movf	(f_mount@fs+1)^0,w,c
 15456  00540C  22DA               	addwfc	fsr2h,f,c
 15457  00540E  0E00               	movlw	0
 15458  005410  6EDF               	movwf	indf2,c
 15459  005412                     l12119:
 15460                           
 15461                           ;tff.c: 806: return FR_OK;
 15462  005412  0E00               	movlw	0
 15463  005414  0012               	return		;funcret
 15464  005416                     __end_of_f_mount:
 15465                           	callstack 0
 15466                           
 15467 ;; *************** function _f_lseek *****************
 15468 ;; Defined at:
 15469 ;;		line 1140 in file "bibliotecas/tff.c"
 15470 ;; Parameters:    Size  Location     Type
 15471 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 15472 ;;		 -> fil(28), 
 15473 ;;  ofs             4   40[BANK0 ] unsigned long 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;  csize           4   65[BANK0 ] unsigned long 
 15476 ;;  ifptr           4   61[BANK0 ] unsigned long 
 15477 ;;  clust           2   69[BANK0 ] unsigned short 
 15478 ;;  res             1   60[BANK0 ] enum E155
 15479 ;; Return value:  Size  Location     Type
 15480 ;;                  1    wreg      enum E3231
 15481 ;; Registers used:
 15482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15483 ;; Tracked objects:
 15484 ;;		On entry : 3F/0
 15485 ;;		On exit  : 3F/0
 15486 ;;		Unchanged: 0/0
 15487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15488 ;;      Params:         0       6       0       0       0       0       0       0       0
 15489 ;;      Locals:         0      11       0       0       0       0       0       0       0
 15490 ;;      Temps:          0      16       0       0       0       0       0       0       0
 15491 ;;      Totals:         0      33       0       0       0       0       0       0       0
 15492 ;;Total ram usage:       33 bytes
 15493 ;; Hardware stack levels used:    1
 15494 ;; Hardware stack levels required when called:   10
 15495 ;; This function calls:
 15496 ;;		___lldiv
 15497 ;;		_create_chain
 15498 ;;		_get_cluster
 15499 ;;		_validate
 15500 ;; This function is called by:
 15501 ;;		_escrita_sdcard
 15502 ;; This function uses a non-reentrant model
 15503 ;;
 15504                           
 15505                           	psect	text84
 15506  000AF2                     __ptext84:
 15507                           	callstack 0
 15508  000AF2                     _f_lseek:
 15509                           	callstack 16
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 15513                           
 15514                           ;incstack = 0
 15515  000AF2  EE20 F004          	lfsr	2,4
 15516  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 15517  000AF8  26D9               	addwf	fsr2l,f,c
 15518  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15519  000AFC  22DA               	addwfc	fsr2h,f,c
 15520  000AFE  CFDE F010          	movff	postinc2,validate@fs
 15521  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 15522  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 15523  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 15524  000B0E  CFDE F012          	movff	postinc2,validate@id
 15525  000B12  CFDD F013          	movff	postdec2,validate@id+1
 15526  000B16  EC0B  F02A         	call	_validate	;wreg free
 15527  000B1A  0100               	movlb	0	; () banked
 15528  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 15529                           
 15530                           ; BSR set to: 0
 15531                           ;tff.c: 1151: if (res != FR_OK) return res;
 15532  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 15533  000B20  A4D8               	btfss	status,2,c
 15534  000B22  0012               	return	
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 15538  000B24  EE20 F002          	lfsr	2,2
 15539  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 15540  000B2A  26D9               	addwf	fsr2l,f,c
 15541  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15542  000B2E  22DA               	addwfc	fsr2h,f,c
 15543  000B30  BEDF               	btfsc	indf2,7,c
 15544  000B32  0012               	return	
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 15548  000B34  EE20 F00A          	lfsr	2,10
 15549  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 15550  000B3A  26D9               	addwf	fsr2l,f,c
 15551  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15552  000B3E  22DA               	addwfc	fsr2h,f,c
 15553  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 15554  000B42  5CDE               	subwf	postinc2,w,c
 15555  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15556  000B46  58DE               	subwfb	postinc2,w,c
 15557  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15558  000B4A  58DE               	subwfb	postinc2,w,c
 15559  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15560  000B4E  58DE               	subwfb	postinc2,w,c
 15561  000B50  B0D8               	btfsc	status,0,c
 15562  000B52  D016               	goto	l1197
 15563                           
 15564                           ; BSR set to: 0
 15565  000B54  EE20 F002          	lfsr	2,2
 15566  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 15567  000B5A  26D9               	addwf	fsr2l,f,c
 15568  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15569  000B5E  22DA               	addwfc	fsr2h,f,c
 15570  000B60  B2DF               	btfsc	indf2,1,c
 15571  000B62  D00E               	goto	l1197
 15572                           
 15573                           ; BSR set to: 0
 15574  000B64  EE20 F00A          	lfsr	2,10
 15575  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 15576  000B6A  26D9               	addwf	fsr2l,f,c
 15577  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15578  000B6E  22DA               	addwfc	fsr2h,f,c
 15579  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 15580  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 15581  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 15582  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 15583  000B80                     l1197:
 15584                           
 15585                           ; BSR set to: 0
 15586                           ;tff.c: 1159: ifptr = fp->fptr;
 15587  000B80  EE20 F006          	lfsr	2,6
 15588  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 15589  000B86  26D9               	addwf	fsr2l,f,c
 15590  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15591  000B8A  22DA               	addwfc	fsr2h,f,c
 15592  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 15593  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 15594  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 15595  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 15596                           
 15597                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 15598  000B9C  EE20 F006          	lfsr	2,6
 15599  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 15600  000BA2  26D9               	addwf	fsr2l,f,c
 15601  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15602  000BA6  22DA               	addwfc	fsr2h,f,c
 15603  000BA8  6ADE               	clrf	postinc2,c
 15604  000BAA  6ADE               	clrf	postinc2,c
 15605  000BAC  6ADE               	clrf	postinc2,c
 15606  000BAE  6ADD               	clrf	postdec2,c
 15607  000BB0  EE20 F003          	lfsr	2,3
 15608  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 15609  000BB6  26D9               	addwf	fsr2l,f,c
 15610  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15611  000BBA  22DA               	addwfc	fsr2h,f,c
 15612  000BBC  0EFF               	movlw	255
 15613  000BBE  6EDF               	movwf	indf2,c
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;tff.c: 1161: if (ofs > 0) {
 15617  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 15618  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 15619  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 15620  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 15621  000BC8  B4D8               	btfsc	status,2,c
 15622  000BCA  D19D               	goto	l12349
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 15626  000BCC  EE20 F004          	lfsr	2,4
 15627  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 15628  000BD2  26D9               	addwf	fsr2l,f,c
 15629  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15630  000BD6  22DA               	addwfc	fsr2h,f,c
 15631  000BD8  EE10 F01D          	lfsr	1,29
 15632  000BDC  50DE               	movf	postinc2,w,c
 15633  000BDE  26E1               	addwf	fsr1l,f,c
 15634  000BE0  50DD               	movf	postdec2,w,c
 15635  000BE2  22E2               	addwfc	fsr1h,f,c
 15636  000BE4  50E7               	movf	indf1,w,c
 15637  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 15638  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 15639  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 15640  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 15641  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 15642  000BF2  0E09               	movlw	9
 15643  000BF4                     u14515:
 15644  000BF4  90D8               	bcf	status,0,c
 15645  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 15646  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 15647  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 15648  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 15649  000BFE  2EE8               	decfsz	wreg,f,c
 15650  000C00  D7F9               	goto	u14515
 15651  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 15652  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 15653  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 15654  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 15658  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 15659  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 15660  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 15661  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 15662  000C1A  B4D8               	btfsc	status,2,c
 15663  000C1C  D093               	goto	l12307
 15664                           
 15665                           ; BSR set to: 0
 15666  000C1E  0EFF               	movlw	255
 15667  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 15668  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 15669  000C24  0EFF               	movlw	255
 15670  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 15671  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 15672  000C2A  0EFF               	movlw	255
 15673  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 15674  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 15675  000C30  0EFF               	movlw	255
 15676  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 15677  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 15678  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 15679  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 15680  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 15681  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 15682  000C46  EC32  F025         	call	___lldiv	;wreg free
 15683  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 15684  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 15685  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 15686  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 15687  000C5A  0EFF               	movlw	255
 15688  000C5C  0100               	movlb	0	; () banked
 15689  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 15690  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 15691  000C62  0EFF               	movlw	255
 15692  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 15693  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 15694  000C68  0EFF               	movlw	255
 15695  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 15696  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 15697  000C6E  0EFF               	movlw	255
 15698  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 15699  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 15700  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 15701  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 15702  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 15703  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 15704  000C84  EC32  F025         	call	___lldiv	;wreg free
 15705  000C88  500A               	movf	?___lldiv^0,w,c
 15706  000C8A  0100               	movlb	0	; () banked
 15707  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 15708  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 15709  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 15710  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 15711  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 15712  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 15713  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 15714  000C9A  A0D8               	btfss	status,0,c
 15715  000C9C  D053               	goto	l12307
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 15719  000C9E  0EFF               	movlw	255
 15720  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 15721  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 15722  000CA4  0EFF               	movlw	255
 15723  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 15724  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 15725  000CAA  0EFF               	movlw	255
 15726  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 15727  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 15728  000CB0  0EFF               	movlw	255
 15729  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 15730  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 15731  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 15732  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 15733  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 15734  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 15735  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 15736  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 15737  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 15738  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 15739  000CC6  0EFF               	movlw	255
 15740  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 15741  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 15742  000CCC  0EFF               	movlw	255
 15743  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 15744  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 15745  000CD2  0EFF               	movlw	255
 15746  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 15747  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 15748  000CD8  0EFF               	movlw	255
 15749  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 15750  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 15751  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 15752  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 15753  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 15754  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 15755  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 15756  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 15757  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 15758  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 15759  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 15760  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 15761  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 15762  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 15763  000CF6  EE20 F006          	lfsr	2,6
 15764  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 15765  000CFC  26D9               	addwf	fsr2l,f,c
 15766  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15767  000D00  22DA               	addwfc	fsr2h,f,c
 15768  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 15769  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 15770  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 15771  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 15772                           
 15773                           ;tff.c: 1166: ofs -= fp->fptr;
 15774  000D12  EE20 F006          	lfsr	2,6
 15775  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 15776  000D18  26D9               	addwf	fsr2l,f,c
 15777  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15778  000D1C  22DA               	addwfc	fsr2h,f,c
 15779  000D1E  50DE               	movf	postinc2,w,c
 15780  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 15781  000D22  50DE               	movf	postinc2,w,c
 15782  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 15783  000D26  50DE               	movf	postinc2,w,c
 15784  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 15785  000D2A  50DD               	movf	postdec2,w,c
 15786  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 15787                           
 15788                           ;tff.c: 1167: clust = fp->curr_clust;
 15789  000D2E  EE20 F010          	lfsr	2,16
 15790  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 15791  000D34  26D9               	addwf	fsr2l,f,c
 15792  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15793  000D38  22DA               	addwfc	fsr2h,f,c
 15794  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 15795  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 15796                           
 15797                           ;tff.c: 1168: } else {
 15798  000D42  D030               	goto	l12319
 15799  000D44                     l12307:
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;tff.c: 1169: clust = fp->org_clust;
 15803  000D44  EE20 F00E          	lfsr	2,14
 15804  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 15805  000D4A  26D9               	addwf	fsr2l,f,c
 15806  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15807  000D4E  22DA               	addwfc	fsr2h,f,c
 15808  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 15809  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 15810                           
 15811                           ; BSR set to: 0
 15812                           ;tff.c: 1171: if (clust == 0) {
 15813  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 15814  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15815  000D5C  A4D8               	btfss	status,2,c
 15816  000D5E  D018               	goto	l1201
 15817                           
 15818                           ; BSR set to: 0
 15819                           ;tff.c: 1172: clust = create_chain(0);
 15820  000D60  0E00               	movlw	0
 15821  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 15822  000D64  0E00               	movlw	0
 15823  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 15824  000D68  ECF8  F016         	call	_create_chain	;wreg free
 15825  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 15826  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 15830  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 15831  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15832  000D78  B4D8               	btfsc	status,2,c
 15833  000D7A  D0F8               	goto	l12357
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;tff.c: 1174: fp->org_clust = clust;
 15837  000D7C  EE20 F00E          	lfsr	2,14
 15838  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 15839  000D82  26D9               	addwf	fsr2l,f,c
 15840  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15841  000D86  22DA               	addwfc	fsr2h,f,c
 15842  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 15843  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 15844  000D90                     l1201:
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 15848  000D90  EE20 F010          	lfsr	2,16
 15849  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 15850  000D96  26D9               	addwf	fsr2l,f,c
 15851  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15852  000D9A  22DA               	addwfc	fsr2h,f,c
 15853  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 15854  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 15855  000DA4                     l12319:
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 15859  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 15860  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15861  000DA8  A4D8               	btfss	status,2,c
 15862  000DAA  D063               	goto	l12341
 15863  000DAC  D0AC               	goto	l12349
 15864  000DAE                     l12323:
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;tff.c: 1182: if (fp->flag & 0x02) {
 15868  000DAE  EE20 F002          	lfsr	2,2
 15869  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 15870  000DB4  26D9               	addwf	fsr2l,f,c
 15871  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15872  000DB8  22DA               	addwfc	fsr2h,f,c
 15873  000DBA  A2DF               	btfss	indf2,1,c
 15874  000DBC  D017               	goto	l12331
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;tff.c: 1183: clust = create_chain(clust);
 15878  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 15879  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 15880  000DC6  ECF8  F016         	call	_create_chain	;wreg free
 15881  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 15882  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 15883                           
 15884                           ; BSR set to: 0
 15885                           ;tff.c: 1184: if (clust == 0) {
 15886  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 15887  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 15888  000DD6  A4D8               	btfss	status,2,c
 15889  000DD8  D013               	goto	l12333
 15890                           
 15891                           ; BSR set to: 0
 15892                           ;tff.c: 1185: ofs = csize; break;
 15893  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 15894  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 15895  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 15896  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 15897  000DEA  D04D               	goto	u14610
 15898  000DEC                     l12331:
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;tff.c: 1189: clust = get_cluster(clust);
 15902  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 15903  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 15904  000DF4  EC3E  F014         	call	_get_cluster	;wreg free
 15905  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 15906  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 15907  000E00                     l12333:
 15908                           
 15909                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 15910  000E00  0100               	movlb	0	; () banked
 15911  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 15912  000E04  E104               	bnz	u14590
 15913  000E06  0E02               	movlw	2
 15914  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 15915  000E0A  A0D8               	btfss	status,0,c
 15916  000E0C  D0AF               	goto	l12357
 15917  000E0E                     u14590:
 15918                           
 15919                           ; BSR set to: 0
 15920  000E0E  EE20 F004          	lfsr	2,4
 15921  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 15922  000E14  26D9               	addwf	fsr2l,f,c
 15923  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15924  000E18  22DA               	addwfc	fsr2h,f,c
 15925  000E1A  EE10 F016          	lfsr	1,22
 15926  000E1E  50DE               	movf	postinc2,w,c
 15927  000E20  26E1               	addwf	fsr1l,f,c
 15928  000E22  50DD               	movf	postdec2,w,c
 15929  000E24  22E2               	addwfc	fsr1h,f,c
 15930  000E26  50E6               	movf	postinc1,w,c
 15931  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 15932  000E2A  50E6               	movf	postinc1,w,c
 15933  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 15934  000E2E  B0D8               	btfsc	status,0,c
 15935  000E30  D09D               	goto	l12357
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;tff.c: 1191: fp->curr_clust = clust;
 15939  000E32  EE20 F010          	lfsr	2,16
 15940  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 15941  000E38  26D9               	addwf	fsr2l,f,c
 15942  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15943  000E3C  22DA               	addwfc	fsr2h,f,c
 15944  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 15945  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 15946                           
 15947                           ;tff.c: 1192: fp->fptr += csize;
 15948  000E46  EE20 F006          	lfsr	2,6
 15949  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 15950  000E4C  26D9               	addwf	fsr2l,f,c
 15951  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15952  000E50  22DA               	addwfc	fsr2h,f,c
 15953  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 15954  000E54  26DE               	addwf	postinc2,f,c
 15955  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 15956  000E58  22DE               	addwfc	postinc2,f,c
 15957  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 15958  000E5C  22DE               	addwfc	postinc2,f,c
 15959  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 15960  000E60  22DE               	addwfc	postinc2,f,c
 15961                           
 15962                           ; BSR set to: 0
 15963                           ;tff.c: 1193: ofs -= csize;
 15964  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 15965  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 15966  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 15967  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 15968  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 15969  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 15970  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 15971  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 15972  000E72                     l12341:
 15973                           
 15974                           ; BSR set to: 0
 15975  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 15976  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 15977  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15978  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 15979  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15980  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 15981  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15982  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 15983  000E82  A0D8               	btfss	status,0,c
 15984  000E84  D794               	goto	l12323
 15985  000E86                     u14610:
 15986                           
 15987                           ; BSR set to: 0
 15988                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 15989  000E86  EE20 F006          	lfsr	2,6
 15990  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 15991  000E8C  26D9               	addwf	fsr2l,f,c
 15992  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 15993  000E90  22DA               	addwfc	fsr2h,f,c
 15994  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 15995  000E94  26DE               	addwf	postinc2,f,c
 15996  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15997  000E98  22DE               	addwfc	postinc2,f,c
 15998  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15999  000E9C  22DE               	addwfc	postinc2,f,c
 16000  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16001  000EA0  22DE               	addwfc	postinc2,f,c
 16002                           
 16003                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16004  000EA2  EE20 F003          	lfsr	2,3
 16005  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16006  000EA8  26D9               	addwf	fsr2l,f,c
 16007  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16008  000EAC  22DA               	addwfc	fsr2h,f,c
 16009  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16010  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16011  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16012  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16013  000EBE  0E0A               	movlw	10
 16014  000EC0  D005               	goto	u14620
 16015  000EC2                     u14625:
 16016  000EC2  90D8               	bcf	status,0,c
 16017  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16018  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16019  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16020  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16021  000ECC                     u14620:
 16022  000ECC  2EE8               	decfsz	wreg,f,c
 16023  000ECE  D7F9               	goto	u14625
 16024  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16025  000ED2  6EDF               	movwf	indf2,c
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16029  000ED4  0EFF               	movlw	255
 16030  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16031  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16032  000EDA  0E01               	movlw	1
 16033  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16034  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16035  000EE0  0E00               	movlw	0
 16036  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16037  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16038  000EE6  0E00               	movlw	0
 16039  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16040  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16041  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16042  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16043  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16044  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16045  000EF4  B4D8               	btfsc	status,2,c
 16046  000EF6  D007               	goto	l12349
 16047                           
 16048                           ; BSR set to: 0
 16049  000EF8  EE20 F003          	lfsr	2,3
 16050  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16051  000EFE  26D9               	addwf	fsr2l,f,c
 16052  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16053  000F02  22DA               	addwfc	fsr2h,f,c
 16054  000F04  2ADF               	incf	indf2,f,c
 16055  000F06                     l12349:
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16059  000F06  EE20 F006          	lfsr	2,6
 16060  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16061  000F0C  26D9               	addwf	fsr2l,f,c
 16062  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16063  000F10  22DA               	addwfc	fsr2h,f,c
 16064  000F12  EE10 F00A          	lfsr	1,10
 16065  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16066  000F18  26E1               	addwf	fsr1l,f,c
 16067  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16068  000F1C  22E2               	addwfc	fsr1h,f,c
 16069  000F1E  50DE               	movf	postinc2,w,c
 16070  000F20  5CE6               	subwf	postinc1,w,c
 16071  000F22  50DE               	movf	postinc2,w,c
 16072  000F24  58E6               	subwfb	postinc1,w,c
 16073  000F26  50DE               	movf	postinc2,w,c
 16074  000F28  58E6               	subwfb	postinc1,w,c
 16075  000F2A  50DE               	movf	postinc2,w,c
 16076  000F2C  58E6               	subwfb	postinc1,w,c
 16077  000F2E  B0D8               	btfsc	status,0,c
 16078  000F30  0012               	return	
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16082  000F32  EE20 F006          	lfsr	2,6
 16083  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16084  000F38  26D9               	addwf	fsr2l,f,c
 16085  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16086  000F3C  22DA               	addwfc	fsr2h,f,c
 16087  000F3E  EE10 F00A          	lfsr	1,10
 16088  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16089  000F44  26E1               	addwf	fsr1l,f,c
 16090  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16091  000F48  22E2               	addwfc	fsr1h,f,c
 16092  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16093  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16094  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16095  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;tff.c: 1204: fp->flag |= 0x20;
 16099  000F5A  EE20 F002          	lfsr	2,2
 16100  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16101  000F60  26D9               	addwf	fsr2l,f,c
 16102  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16103  000F64  22DA               	addwfc	fsr2h,f,c
 16104  000F66  0E00               	movlw	0
 16105  000F68  8ADB               	bsf	plusw2,5,c
 16106  000F6A  0012               	return	
 16107  000F6C                     l12357:
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;tff.c: 1211: fp->flag |= 0x80;
 16111  000F6C  EE20 F002          	lfsr	2,2
 16112  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16113  000F72  26D9               	addwf	fsr2l,f,c
 16114  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16115  000F76  22DA               	addwfc	fsr2h,f,c
 16116  000F78  0E00               	movlw	0
 16117  000F7A  8EDB               	bsf	plusw2,7,c
 16118                           
 16119                           ; BSR set to: 0
 16120  000F7C  0012               	return		;funcret
 16121  000F7E                     __end_of_f_lseek:
 16122                           	callstack 0
 16123                           
 16124 ;; *************** function _create_chain *****************
 16125 ;; Defined at:
 16126 ;;		line 283 in file "bibliotecas/tff.c"
 16127 ;; Parameters:    Size  Location     Type
 16128 ;;  clust           2   24[BANK0 ] unsigned short 
 16129 ;; Auto vars:     Size  Location     Type
 16130 ;;  ncl             2   36[BANK0 ] unsigned short 
 16131 ;;  scl             2   34[BANK0 ] unsigned short 
 16132 ;;  cstat           2   32[BANK0 ] unsigned short 
 16133 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16134 ;;		 -> NULL(0), fs(544), 
 16135 ;;  mcl             2   28[BANK0 ] unsigned short 
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  2   24[BANK0 ] unsigned short 
 16138 ;; Registers used:
 16139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16140 ;; Tracked objects:
 16141 ;;		On entry : 3F/0
 16142 ;;		On exit  : 3F/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16145 ;;      Params:         0       2       0       0       0       0       0       0       0
 16146 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16147 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16148 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16149 ;;Total ram usage:       14 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    9
 16152 ;; This function calls:
 16153 ;;		_get_cluster
 16154 ;;		_put_cluster
 16155 ;; This function is called by:
 16156 ;;		_reserve_direntry
 16157 ;;		_f_write
 16158 ;;		_f_lseek
 16159 ;; This function uses a non-reentrant model
 16160 ;;
 16161                           
 16162                           	psect	text85
 16163  002DF0                     __ptext85:
 16164                           	callstack 0
 16165  002DF0                     _create_chain:
 16166                           	callstack 13
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;incstack = 0
 16173  002DF0  C04D  F07E         	movff	_FatFs,create_chain@fs
 16174  002DF4  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;tff.c: 291: mcl = fs->max_clust;
 16178  002DF8  EE20 F016          	lfsr	2,22
 16179  002DFC  517E               	movf	create_chain@fs& (0+255),w,b
 16180  002DFE  26D9               	addwf	fsr2l,f,c
 16181  002E00  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16182  002E02  22DA               	addwfc	fsr2h,f,c
 16183  002E04  CFDE F07C          	movff	postinc2,create_chain@mcl
 16184  002E08  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;tff.c: 292: if (clust == 0) {
 16188  002E0C  5178               	movf	create_chain@clust& (0+255),w,b
 16189  002E0E  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16190  002E10  A4D8               	btfss	status,2,c
 16191  002E12  D01B               	goto	l10801
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;tff.c: 293: scl = fs->last_clust;
 16195  002E14  EE20 F018          	lfsr	2,24
 16196  002E18  517E               	movf	create_chain@fs& (0+255),w,b
 16197  002E1A  26D9               	addwf	fsr2l,f,c
 16198  002E1C  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16199  002E1E  22DA               	addwfc	fsr2h,f,c
 16200  002E20  CFDE F082          	movff	postinc2,create_chain@scl
 16201  002E24  CFDD F083          	movff	postdec2,create_chain@scl+1
 16202                           
 16203                           ; BSR set to: 0
 16204                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16205  002E28  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16206  002E2A  E104               	bnz	u12140
 16207  002E2C  0E02               	movlw	2
 16208  002E2E  5D82               	subwf	create_chain@scl& (0+255),w,b
 16209  002E30  A0D8               	btfss	status,0,c
 16210  002E32  D006               	goto	u12150
 16211  002E34                     u12140:
 16212                           
 16213                           ; BSR set to: 0
 16214  002E34  517C               	movf	create_chain@mcl& (0+255),w,b
 16215  002E36  5D82               	subwf	create_chain@scl& (0+255),w,b
 16216  002E38  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16217  002E3A  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16218  002E3C  A0D8               	btfss	status,0,c
 16219  002E3E  D02B               	goto	l922
 16220  002E40                     u12150:
 16221                           
 16222                           ; BSR set to: 0
 16223  002E40  0E00               	movlw	0
 16224  002E42  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16225  002E44  0E01               	movlw	1
 16226  002E46  6F82               	movwf	create_chain@scl& (0+255),b
 16227  002E48  D026               	goto	l922
 16228  002E4A                     l10801:
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16232  002E4A  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16233  002E4E  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16234  002E52  EC3E  F014         	call	_get_cluster	;wreg free
 16235  002E56  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16236  002E5A  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16237                           
 16238                           ;tff.c: 298: if (cstat < 2) return 1;
 16239  002E5E  0100               	movlb	0	; () banked
 16240  002E60  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16241  002E62  E10A               	bnz	l10809
 16242  002E64  0E02               	movlw	2
 16243  002E66  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16244  002E68  B0D8               	btfsc	status,0,c
 16245  002E6A  D006               	goto	l10809
 16246  002E6C                     u12160:
 16247  002E6C  0E00               	movlw	0
 16248  002E6E  0100               	movlb	0	; () banked
 16249  002E70  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16250  002E72  0E01               	movlw	1
 16251  002E74  6F78               	movwf	?_create_chain& (0+255),b
 16252  002E76  0012               	return	
 16253  002E78                     l10809:
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16257  002E78  517C               	movf	create_chain@mcl& (0+255),w,b
 16258  002E7A  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16259  002E7C  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16260  002E7E  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16261  002E80  B0D8               	btfsc	status,0,c
 16262  002E82  D005               	goto	l925
 16263                           
 16264                           ; BSR set to: 0
 16265  002E84  C080  F078         	movff	create_chain@cstat,?_create_chain
 16266  002E88  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16267  002E8C  0012               	return	
 16268  002E8E                     l925:
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;tff.c: 300: scl = clust;
 16272  002E8E  C078  F082         	movff	create_chain@clust,create_chain@scl
 16273  002E92  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16274  002E96                     l922:
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16278  002E96  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16279  002E9A  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16280  002E9E                     l10813:
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;tff.c: 305: ncl++;
 16284  002E9E  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16285  002EA0  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;tff.c: 306: if (ncl >= mcl) {
 16289  002EA2  517C               	movf	create_chain@mcl& (0+255),w,b
 16290  002EA4  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16291  002EA6  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16292  002EA8  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16293  002EAA  A0D8               	btfss	status,0,c
 16294  002EAC  D00F               	goto	l10825
 16295                           
 16296                           ; BSR set to: 0
 16297                           ;tff.c: 307: ncl = 2;
 16298  002EAE  0E00               	movlw	0
 16299  002EB0  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16300  002EB2  0E02               	movlw	2
 16301  002EB4  6F84               	movwf	create_chain@ncl& (0+255),b
 16302                           
 16303                           ; BSR set to: 0
 16304                           ;tff.c: 308: if (ncl > scl) return 0;
 16305  002EB6  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16306  002EB8  E109               	bnz	l10825
 16307  002EBA  0E02               	movlw	2
 16308  002EBC  5D82               	subwf	create_chain@scl& (0+255),w,b
 16309  002EBE  B0D8               	btfsc	status,0,c
 16310  002EC0  D005               	goto	l10825
 16311  002EC2                     u12190:
 16312                           
 16313                           ; BSR set to: 0
 16314  002EC2  0E00               	movlw	0
 16315  002EC4  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16316  002EC6  0E00               	movlw	0
 16317  002EC8  6F78               	movwf	?_create_chain& (0+255),b
 16318  002ECA  0012               	return	
 16319  002ECC                     l10825:
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16323  002ECC  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16324  002ED0  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16325  002ED4  EC3E  F014         	call	_get_cluster	;wreg free
 16326  002ED8  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16327  002EDC  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16328                           
 16329                           ;tff.c: 311: if (cstat == 0) break;
 16330  002EE0  0100               	movlb	0	; () banked
 16331  002EE2  5180               	movf	create_chain@cstat& (0+255),w,b
 16332  002EE4  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16333  002EE6  B4D8               	btfsc	status,2,c
 16334  002EE8  D00C               	goto	l10843
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;tff.c: 312: if (cstat == 1) return 1;
 16338  002EEA  0580               	decf	create_chain@cstat& (0+255),w,b
 16339  002EEC  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16340  002EEE  B4D8               	btfsc	status,2,c
 16341  002EF0  D7BD               	goto	u12160
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;tff.c: 313: if (ncl == scl) return 0;
 16345  002EF2  5182               	movf	create_chain@scl& (0+255),w,b
 16346  002EF4  1984               	xorwf	create_chain@ncl& (0+255),w,b
 16347  002EF6  E1D3               	bnz	l10813
 16348  002EF8  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16349  002EFA  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 16350  002EFC  B4D8               	btfsc	status,2,c
 16351  002EFE  D7E1               	goto	u12190
 16352  002F00  D7CE               	goto	l10813
 16353  002F02                     l10843:
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 16357  002F02  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 16358  002F06  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 16359  002F0A  0EFF               	movlw	255
 16360  002F0C  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 16361  002F0E  6962               	setf	put_cluster@val& (0+255),b
 16362  002F10  ECE8  F011         	call	_put_cluster	;wreg free
 16363  002F14  0900               	iorlw	0
 16364  002F16  B4D8               	btfsc	status,2,c
 16365  002F18  D7A9               	goto	u12160
 16366                           
 16367                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 16368  002F1A  0100               	movlb	0	; () banked
 16369  002F1C  5178               	movf	create_chain@clust& (0+255),w,b
 16370  002F1E  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16371  002F20  B4D8               	btfsc	status,2,c
 16372  002F22  D00D               	goto	l10857
 16373                           
 16374                           ; BSR set to: 0
 16375  002F24  C078  F060         	movff	create_chain@clust,put_cluster@clust
 16376  002F28  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 16377  002F2C  C084  F062         	movff	create_chain@ncl,put_cluster@val
 16378  002F30  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 16379  002F34  ECE8  F011         	call	_put_cluster	;wreg free
 16380  002F38  0900               	iorlw	0
 16381  002F3A  B4D8               	btfsc	status,2,c
 16382  002F3C  D797               	goto	u12160
 16383  002F3E                     l10857:
 16384                           
 16385                           ;tff.c: 319: fs->last_clust = ncl;
 16386  002F3E  0100               	movlb	0	; () banked
 16387  002F40  EE20 F018          	lfsr	2,24
 16388  002F44  517E               	movf	create_chain@fs& (0+255),w,b
 16389  002F46  26D9               	addwf	fsr2l,f,c
 16390  002F48  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16391  002F4A  22DA               	addwfc	fsr2h,f,c
 16392  002F4C  C084  FFDE         	movff	create_chain@ncl,postinc2
 16393  002F50  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 16394                           
 16395                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 16396  002F54  EE20 F01A          	lfsr	2,26
 16397  002F58  517E               	movf	create_chain@fs& (0+255),w,b
 16398  002F5A  26D9               	addwf	fsr2l,f,c
 16399  002F5C  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16400  002F5E  22DA               	addwfc	fsr2h,f,c
 16401  002F60  28DE               	incf	postinc2,w,c
 16402  002F62  E103               	bnz	u12260
 16403  002F64  28DE               	incf	postinc2,w,c
 16404  002F66  B4D8               	btfsc	status,2,c
 16405  002F68  D009               	goto	l10861
 16406  002F6A                     u12260:
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;tff.c: 321: fs->free_clust--;
 16410  002F6A  EE20 F01A          	lfsr	2,26
 16411  002F6E  517E               	movf	create_chain@fs& (0+255),w,b
 16412  002F70  26D9               	addwf	fsr2l,f,c
 16413  002F72  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16414  002F74  22DA               	addwfc	fsr2h,f,c
 16415  002F76  06DE               	decf	postinc2,f,c
 16416  002F78  0E00               	movlw	0
 16417  002F7A  5ADD               	subwfb	postdec2,f,c
 16418  002F7C                     l10861:
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;tff.c: 325: };tff.c: 327: return ncl;
 16422  002F7C  C084  F078         	movff	create_chain@ncl,?_create_chain
 16423  002F80  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 16424                           
 16425                           ; BSR set to: 0
 16426  002F84  0012               	return		;funcret
 16427  002F86                     __end_of_create_chain:
 16428                           	callstack 0
 16429                           
 16430 ;; *************** function _put_cluster *****************
 16431 ;; Defined at:
 16432 ;;		line 198 in file "bibliotecas/tff.c"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;  clust           2    0[BANK0 ] unsigned short 
 16435 ;;  val             2    2[BANK0 ] unsigned short 
 16436 ;; Auto vars:     Size  Location     Type
 16437 ;;  fatsect         4   14[BANK0 ] unsigned long 
 16438 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 16439 ;;		 -> NULL(0), fs(544), 
 16440 ;;  p               2   20[BANK0 ] PTR unsigned char 
 16441 ;;		 -> fs.win(512), NULL(0), fs(544), 
 16442 ;;  bc              2   18[BANK0 ] unsigned short 
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      enum E105
 16445 ;; Registers used:
 16446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16447 ;; Tracked objects:
 16448 ;;		On entry : 3F/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16452 ;;      Params:         0       4       0       0       0       0       0       0       0
 16453 ;;      Locals:         0      14       0       0       0       0       0       0       0
 16454 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16455 ;;      Totals:         0      24       0       0       0       0       0       0       0
 16456 ;;Total ram usage:       24 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; Hardware stack levels required when called:    8
 16459 ;; This function calls:
 16460 ;;		___wmul
 16461 ;;		_move_window
 16462 ;; This function is called by:
 16463 ;;		_remove_chain
 16464 ;;		_create_chain
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text86
 16469  0023D0                     __ptext86:
 16470                           	callstack 0
 16471  0023D0                     _put_cluster:
 16472                           	callstack 13
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;incstack = 0
 16479  0023D0  C04D  F076         	movff	_FatFs,put_cluster@fs
 16480  0023D4  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;tff.c: 209: fatsect = fs->fatbase;
 16484  0023D8  EE20 F008          	lfsr	2,8
 16485  0023DC  5176               	movf	put_cluster@fs& (0+255),w,b
 16486  0023DE  26D9               	addwf	fsr2l,f,c
 16487  0023E0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 16488  0023E2  22DA               	addwfc	fsr2h,f,c
 16489  0023E4  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 16490  0023E8  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 16491  0023EC  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 16492  0023F0  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 16493                           
 16494                           ;tff.c: 210: switch (fs->fs_type) {
 16495  0023F4  D10B               	goto	l10743
 16496  0023F6                     l10691:
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 16500  0023F6  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 16501  0023FA  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 16502  0023FE  0E00               	movlw	0
 16503  002400  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 16504  002402  0E03               	movlw	3
 16505  002404  6E0C               	movwf	___wmul@multiplicand^0,c
 16506  002406  ECDA  F02C         	call	___wmul	;wreg free
 16507  00240A  90D8               	bcf	status,0,c
 16508  00240C  300B               	rrcf	(?___wmul+1)^0,w,c
 16509  00240E  0100               	movlb	0	; () banked
 16510  002410  6F64               	movwf	??_put_cluster& (0+255),b
 16511  002412  300A               	rrcf	?___wmul^0,w,c
 16512  002414  6F72               	movwf	put_cluster@bc& (0+255),b
 16513  002416  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 16517  00241A  C072  F064         	movff	put_cluster@bc,??_put_cluster
 16518  00241E  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 16519  002422  0E09               	movlw	9
 16520  002424  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 16521  002426                     u11995:
 16522  002426  90D8               	bcf	status,0,c
 16523  002428  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 16524  00242A  3364               	rrcf	??_put_cluster& (0+255),f,b
 16525  00242C  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 16526  00242E  D7FB               	goto	u11995
 16527  002430  5164               	movf	??_put_cluster& (0+255),w,b
 16528  002432  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 16529  002434  6E35               	movwf	move_window@sector^0,c
 16530  002436  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16531  002438  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 16532  00243A  6E36               	movwf	(move_window@sector+1)^0,c
 16533  00243C  0E00               	movlw	0
 16534  00243E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 16535  002440  6E37               	movwf	(move_window@sector+2)^0,c
 16536  002442  0E00               	movlw	0
 16537  002444  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 16538  002446  6E38               	movwf	(move_window@sector+3)^0,c
 16539  002448  EC52  F015         	call	_move_window	;wreg free
 16540  00244C  0900               	iorlw	0
 16541  00244E  A4D8               	btfss	status,2,c
 16542  002450  D002               	goto	l10699
 16543  002452                     u12000:
 16544  002452  0E00               	movlw	0
 16545  002454  0012               	return	
 16546  002456                     l10699:
 16547                           
 16548                           ;tff.c: 214: p = &fs->win[bc % 512U];
 16549  002456  0EFF               	movlw	255
 16550  002458  0100               	movlb	0	; () banked
 16551  00245A  6F64               	movwf	??_put_cluster& (0+255),b
 16552  00245C  0E01               	movlw	1
 16553  00245E  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 16554  002460  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 16555  002464  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 16556  002468  5164               	movf	??_put_cluster& (0+255),w,b
 16557  00246A  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 16558  00246C  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16559  00246E  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 16560  002470  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 16561  002474  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 16562  002478  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 16563  00247A  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 16564  00247C  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 16565  00247E  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 16566  002480  0E20               	movlw	32
 16567  002482  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 16568  002484  6F74               	movwf	put_cluster@p& (0+255),b
 16569  002486  0E00               	movlw	0
 16570  002488  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 16571  00248A  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 16575  00248C  B160               	btfsc	put_cluster@clust& (0+255),0,b
 16576  00248E  D004               	goto	l10705
 16577                           
 16578                           ; BSR set to: 0
 16579  002490  C062  F06A         	movff	put_cluster@val,_put_cluster$1622
 16580  002494  6B6B               	clrf	(_put_cluster$1622+1)& (0+255),b
 16581  002496  D01A               	goto	l10707
 16582  002498                     l10705:
 16583                           
 16584                           ; BSR set to: 0
 16585  002498  5162               	movf	put_cluster@val& (0+255),w,b
 16586  00249A  6F64               	movwf	??_put_cluster& (0+255),b
 16587  00249C  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 16588  00249E  3B64               	swapf	??_put_cluster& (0+255),f,b
 16589  0024A0  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 16590  0024A2  0EF0               	movlw	240
 16591  0024A4  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 16592  0024A6  5164               	movf	??_put_cluster& (0+255),w,b
 16593  0024A8  0B0F               	andlw	15
 16594  0024AA  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 16595  0024AC  0EF0               	movlw	240
 16596  0024AE  1764               	andwf	??_put_cluster& (0+255),f,b
 16597  0024B0  C074  FFD9         	movff	put_cluster@p,fsr2l
 16598  0024B4  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 16599  0024B8  50DF               	movf	indf2,w,c
 16600  0024BA  0B0F               	andlw	15
 16601  0024BC  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 16602  0024BE  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 16603  0024C0  5164               	movf	??_put_cluster& (0+255),w,b
 16604  0024C2  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 16605  0024C4  6F6A               	movwf	_put_cluster$1622& (0+255),b
 16606  0024C6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16607  0024C8  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 16608  0024CA  6F6B               	movwf	(_put_cluster$1622+1)& (0+255),b
 16609  0024CC                     l10707:
 16610                           
 16611                           ; BSR set to: 0
 16612  0024CC  C074  FFD9         	movff	put_cluster@p,fsr2l
 16613  0024D0  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 16614  0024D4  C06A  FFDF         	movff	_put_cluster$1622,indf2
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;tff.c: 216: bc++;
 16618  0024D8  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 16619  0024DA  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 16620                           
 16621                           ; BSR set to: 0
 16622                           ;tff.c: 217: fs->winflag = 1;
 16623  0024DC  EE20 F01F          	lfsr	2,31
 16624  0024E0  5176               	movf	put_cluster@fs& (0+255),w,b
 16625  0024E2  26D9               	addwf	fsr2l,f,c
 16626  0024E4  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 16627  0024E6  22DA               	addwfc	fsr2h,f,c
 16628  0024E8  0E01               	movlw	1
 16629  0024EA  6EDF               	movwf	indf2,c
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 16633  0024EC  C072  F064         	movff	put_cluster@bc,??_put_cluster
 16634  0024F0  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 16635  0024F4  0E09               	movlw	9
 16636  0024F6  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 16637  0024F8                     u12025:
 16638  0024F8  90D8               	bcf	status,0,c
 16639  0024FA  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 16640  0024FC  3364               	rrcf	??_put_cluster& (0+255),f,b
 16641  0024FE  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 16642  002500  D7FB               	goto	u12025
 16643  002502  5164               	movf	??_put_cluster& (0+255),w,b
 16644  002504  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 16645  002506  6E35               	movwf	move_window@sector^0,c
 16646  002508  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16647  00250A  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 16648  00250C  6E36               	movwf	(move_window@sector+1)^0,c
 16649  00250E  0E00               	movlw	0
 16650  002510  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 16651  002512  6E37               	movwf	(move_window@sector+2)^0,c
 16652  002514  0E00               	movlw	0
 16653  002516  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 16654  002518  6E38               	movwf	(move_window@sector+3)^0,c
 16655  00251A  EC52  F015         	call	_move_window	;wreg free
 16656  00251E  0900               	iorlw	0
 16657  002520  B4D8               	btfsc	status,2,c
 16658  002522  D797               	goto	u12000
 16659                           
 16660                           ;tff.c: 219: p = &fs->win[bc % 512U];
 16661  002524  0EFF               	movlw	255
 16662  002526  0100               	movlb	0	; () banked
 16663  002528  6F64               	movwf	??_put_cluster& (0+255),b
 16664  00252A  0E01               	movlw	1
 16665  00252C  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 16666  00252E  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 16667  002532  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 16668  002536  5164               	movf	??_put_cluster& (0+255),w,b
 16669  002538  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 16670  00253A  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16671  00253C  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 16672  00253E  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 16673  002542  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 16674  002546  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 16675  002548  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 16676  00254A  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 16677  00254C  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 16678  00254E  0E20               	movlw	32
 16679  002550  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 16680  002552  6F74               	movwf	put_cluster@p& (0+255),b
 16681  002554  0E00               	movlw	0
 16682  002556  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 16683  002558  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 16684                           
 16685                           ; BSR set to: 0
 16686                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 16687  00255A  B160               	btfsc	put_cluster@clust& (0+255),0,b
 16688  00255C  D00E               	goto	l10725
 16689                           
 16690                           ; BSR set to: 0
 16691  00255E  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 16692  002562  0E0F               	movlw	15
 16693  002564  1764               	andwf	??_put_cluster& (0+255),f,b
 16694  002566  C074  FFD9         	movff	put_cluster@p,fsr2l
 16695  00256A  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 16696  00256E  50DF               	movf	indf2,w,c
 16697  002570  0BF0               	andlw	240
 16698  002572  1164               	iorwf	??_put_cluster& (0+255),w,b
 16699  002574  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 16700  002576  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16701  002578  D00C               	goto	L6
 16702  00257A                     l10725:
 16703                           
 16704                           ; BSR set to: 0
 16705  00257A  C062  F064         	movff	put_cluster@val,??_put_cluster
 16706  00257E  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 16707  002582  0E04               	movlw	4
 16708  002584  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 16709  002586                     u12055:
 16710  002586  90D8               	bcf	status,0,c
 16711  002588  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 16712  00258A  3364               	rrcf	??_put_cluster& (0+255),f,b
 16713  00258C  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 16714  00258E  D7FB               	goto	u12055
 16715  002590  5164               	movf	??_put_cluster& (0+255),w,b
 16716  002592                     L6:
 16717  002592  6F6C               	movwf	_put_cluster$1623& (0+255),b
 16718  002594  6B6D               	clrf	(_put_cluster$1623+1)& (0+255),b
 16719                           
 16720                           ; BSR set to: 0
 16721  002596  C074  FFD9         	movff	put_cluster@p,fsr2l
 16722  00259A  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 16723  00259E  C06C  FFDF         	movff	_put_cluster$1623,indf2
 16724                           
 16725                           ;tff.c: 221: break;
 16726  0025A2  D042               	goto	l10745
 16727  0025A4                     l10729:
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 16731  0025A4  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 16732  0025A6  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 16733  0025A8  6E35               	movwf	move_window@sector^0,c
 16734  0025AA  0E00               	movlw	0
 16735  0025AC  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 16736  0025AE  6E36               	movwf	(move_window@sector+1)^0,c
 16737  0025B0  0E00               	movlw	0
 16738  0025B2  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 16739  0025B4  6E37               	movwf	(move_window@sector+2)^0,c
 16740  0025B6  0E00               	movlw	0
 16741  0025B8  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 16742  0025BA  6E38               	movwf	(move_window@sector+3)^0,c
 16743  0025BC  EC52  F015         	call	_move_window	;wreg free
 16744  0025C0  0900               	iorlw	0
 16745  0025C2  B4D8               	btfsc	status,2,c
 16746  0025C4  D746               	goto	u12000
 16747                           
 16748                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 16749  0025C6  0EFF               	movlw	255
 16750  0025C8  0100               	movlb	0	; () banked
 16751  0025CA  6F64               	movwf	??_put_cluster& (0+255),b
 16752  0025CC  0E01               	movlw	1
 16753  0025CE  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 16754  0025D0  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 16755  0025D4  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 16756  0025D8  90D8               	bcf	status,0,c
 16757  0025DA  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 16758  0025DC  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 16759  0025DE  5164               	movf	??_put_cluster& (0+255),w,b
 16760  0025E0  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 16761  0025E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 16762  0025E4  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 16763  0025E6  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 16764  0025EA  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 16765  0025EE  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 16766  0025F0  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 16767  0025F2  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 16768  0025F4  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 16769  0025F6  0E20               	movlw	32
 16770  0025F8  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 16771  0025FA  6ED9               	movwf	fsr2l,c
 16772  0025FC  0E00               	movlw	0
 16773  0025FE  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 16774  002600  6EDA               	movwf	fsr2h,c
 16775  002602  C062  FFDE         	movff	put_cluster@val,postinc2
 16776  002606  C063  FFDD         	movff	put_cluster@val+1,postdec2
 16777                           
 16778                           ;tff.c: 226: break;
 16779  00260A  D00E               	goto	l10745
 16780  00260C                     l10743:
 16781                           
 16782                           ; BSR set to: 0
 16783  00260C  EE20 F01C          	lfsr	2,28
 16784  002610  5176               	movf	put_cluster@fs& (0+255),w,b
 16785  002612  26D9               	addwf	fsr2l,f,c
 16786  002614  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 16787  002616  22DA               	addwfc	fsr2h,f,c
 16788  002618  50DF               	movf	indf2,w,c
 16789                           
 16790                           ; Switch size 1, requested type "simple"
 16791                           ; Number of cases is 2, Range of values is 1 to 2
 16792                           ; switch strategies available:
 16793                           ; Name         Instructions Cycles
 16794                           ; simple_byte            7     4 (average)
 16795                           ;	Chosen strategy is simple_byte
 16796  00261A  0A01               	xorlw	1	; case 1
 16797  00261C  B4D8               	btfsc	status,2,c
 16798  00261E  D6EB               	goto	l10691
 16799  002620  0A03               	xorlw	3	; case 2
 16800  002622  B4D8               	btfsc	status,2,c
 16801  002624  D7BF               	goto	l10729
 16802  002626  D715               	goto	u12000
 16803  002628                     l10745:
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;tff.c: 236: fs->winflag = 1;
 16807  002628  EE20 F01F          	lfsr	2,31
 16808  00262C  5176               	movf	put_cluster@fs& (0+255),w,b
 16809  00262E  26D9               	addwf	fsr2l,f,c
 16810  002630  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 16811  002632  22DA               	addwfc	fsr2h,f,c
 16812  002634  0E01               	movlw	1
 16813  002636  6EDF               	movwf	indf2,c
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;tff.c: 237: return TRUE;
 16817  002638  0E01               	movlw	1
 16818  00263A  0012               	return		;funcret
 16819  00263C                     __end_of_put_cluster:
 16820                           	callstack 0
 16821                           
 16822 ;; *************** function _get_cluster *****************
 16823 ;; Defined at:
 16824 ;;		line 155 in file "bibliotecas/tff.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;  clust           2   73[COMRAM] unsigned short 
 16827 ;; Auto vars:     Size  Location     Type
 16828 ;;  fatsect         4   11[BANK0 ] unsigned long 
 16829 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 16830 ;;		 -> NULL(0), fs(544), 
 16831 ;;  bc              2   15[BANK0 ] unsigned short 
 16832 ;;  wc              2    9[BANK0 ] unsigned short 
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  2   73[COMRAM] unsigned short 
 16835 ;; Registers used:
 16836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16837 ;; Tracked objects:
 16838 ;;		On entry : 3F/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16842 ;;      Params:         2       0       0       0       0       0       0       0       0
 16843 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16844 ;;      Temps:          0       9       0       0       0       0       0       0       0
 16845 ;;      Totals:         2      19       0       0       0       0       0       0       0
 16846 ;;Total ram usage:       21 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    8
 16849 ;; This function calls:
 16850 ;;		___wmul
 16851 ;;		_move_window
 16852 ;; This function is called by:
 16853 ;;		_remove_chain
 16854 ;;		_create_chain
 16855 ;;		_next_dir_entry
 16856 ;;		_f_lseek
 16857 ;;		_f_read
 16858 ;; This function uses a non-reentrant model
 16859 ;;
 16860                           
 16861                           	psect	text87
 16862  00287C                     __ptext87:
 16863                           	callstack 0
 16864  00287C                     _get_cluster:
 16865                           	callstack 13
 16866                           
 16867                           ; BSR set to: 0
 16868                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 16869                           
 16870                           ;incstack = 0
 16871  00287C  C04D  F071         	movff	_FatFs,get_cluster@fs
 16872  002880  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 16873                           
 16874                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 16875  002884  504B               	movf	(get_cluster@clust+1)^0,w,c
 16876  002886  E104               	bnz	u11900
 16877  002888  0E02               	movlw	2
 16878  00288A  5C4A               	subwf	get_cluster@clust^0,w,c
 16879  00288C  A0D8               	btfss	status,0,c
 16880  00288E  D105               	goto	l10683
 16881  002890                     u11900:
 16882                           
 16883                           ; BSR set to: 0
 16884  002890  EE20 F016          	lfsr	2,22
 16885  002894  5171               	movf	get_cluster@fs& (0+255),w,b
 16886  002896  26D9               	addwf	fsr2l,f,c
 16887  002898  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 16888  00289A  22DA               	addwfc	fsr2h,f,c
 16889  00289C  50DE               	movf	postinc2,w,c
 16890  00289E  5C4A               	subwf	get_cluster@clust^0,w,c
 16891  0028A0  50DE               	movf	postinc2,w,c
 16892  0028A2  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 16893  0028A4  B0D8               	btfsc	status,0,c
 16894  0028A6  D0F9               	goto	l10683
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;tff.c: 165: fatsect = fs->fatbase;
 16898  0028A8  EE20 F008          	lfsr	2,8
 16899  0028AC  5171               	movf	get_cluster@fs& (0+255),w,b
 16900  0028AE  26D9               	addwf	fsr2l,f,c
 16901  0028B0  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 16902  0028B2  22DA               	addwfc	fsr2h,f,c
 16903  0028B4  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 16904  0028B8  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 16905  0028BC  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 16906  0028C0  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 16907                           
 16908                           ;tff.c: 166: switch (fs->fs_type) {
 16909  0028C4  D0DD               	goto	l10681
 16910  0028C6                     l10647:
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 16914  0028C6  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 16915  0028CA  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 16916  0028CE  0E00               	movlw	0
 16917  0028D0  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 16918  0028D2  0E03               	movlw	3
 16919  0028D4  6E0C               	movwf	___wmul@multiplicand^0,c
 16920  0028D6  ECDA  F02C         	call	___wmul	;wreg free
 16921  0028DA  90D8               	bcf	status,0,c
 16922  0028DC  300B               	rrcf	(?___wmul+1)^0,w,c
 16923  0028DE  0100               	movlb	0	; () banked
 16924  0028E0  6F60               	movwf	??_get_cluster& (0+255),b
 16925  0028E2  300A               	rrcf	?___wmul^0,w,c
 16926  0028E4  6F6F               	movwf	get_cluster@bc& (0+255),b
 16927  0028E6  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 16931  0028EA  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 16932  0028EE  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 16933  0028F2  0E09               	movlw	9
 16934  0028F4  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 16935  0028F6                     u11925:
 16936  0028F6  90D8               	bcf	status,0,c
 16937  0028F8  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16938  0028FA  3360               	rrcf	??_get_cluster& (0+255),f,b
 16939  0028FC  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16940  0028FE  D7FB               	goto	u11925
 16941  002900  5160               	movf	??_get_cluster& (0+255),w,b
 16942  002902  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 16943  002904  6E35               	movwf	move_window@sector^0,c
 16944  002906  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 16945  002908  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16946  00290A  6E36               	movwf	(move_window@sector+1)^0,c
 16947  00290C  0E00               	movlw	0
 16948  00290E  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16949  002910  6E37               	movwf	(move_window@sector+2)^0,c
 16950  002912  0E00               	movlw	0
 16951  002914  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16952  002916  6E38               	movwf	(move_window@sector+3)^0,c
 16953  002918  EC52  F015         	call	_move_window	;wreg free
 16954  00291C  0900               	iorlw	0
 16955  00291E  B4D8               	btfsc	status,2,c
 16956  002920  D0BC               	goto	l10683
 16957                           
 16958                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 16959  002922  0EFF               	movlw	255
 16960  002924  0100               	movlb	0	; () banked
 16961  002926  6F60               	movwf	??_get_cluster& (0+255),b
 16962  002928  0E01               	movlw	1
 16963  00292A  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 16964  00292C  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 16965  002930  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 16966  002934  5160               	movf	??_get_cluster& (0+255),w,b
 16967  002936  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 16968  002938  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 16969  00293A  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 16970  00293C  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 16971  002940  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 16972  002944  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 16973  002946  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 16974  002948  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 16975  00294A  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16976  00294C  0E20               	movlw	32
 16977  00294E  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 16978  002950  6ED9               	movwf	fsr2l,c
 16979  002952  0E00               	movlw	0
 16980  002954  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16981  002956  6EDA               	movwf	fsr2h,c
 16982  002958  50DF               	movf	indf2,w,c
 16983  00295A  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 16984  00295C  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 16985  00295E  6F69               	movwf	get_cluster@wc& (0+255),b
 16986  002960  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 16987                           
 16988                           ; BSR set to: 0
 16989  002962  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 16990  002964  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 16994  002966  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 16995  00296A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 16996  00296E  0E09               	movlw	9
 16997  002970  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 16998  002972                     u11945:
 16999  002972  90D8               	bcf	status,0,c
 17000  002974  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17001  002976  3360               	rrcf	??_get_cluster& (0+255),f,b
 17002  002978  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17003  00297A  D7FB               	goto	u11945
 17004  00297C  5160               	movf	??_get_cluster& (0+255),w,b
 17005  00297E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17006  002980  6E35               	movwf	move_window@sector^0,c
 17007  002982  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17008  002984  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17009  002986  6E36               	movwf	(move_window@sector+1)^0,c
 17010  002988  0E00               	movlw	0
 17011  00298A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17012  00298C  6E37               	movwf	(move_window@sector+2)^0,c
 17013  00298E  0E00               	movlw	0
 17014  002990  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17015  002992  6E38               	movwf	(move_window@sector+3)^0,c
 17016  002994  EC52  F015         	call	_move_window	;wreg free
 17017  002998  0900               	iorlw	0
 17018  00299A  B4D8               	btfsc	status,2,c
 17019  00299C  D07E               	goto	l10683
 17020                           
 17021                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17022  00299E  0EFF               	movlw	255
 17023  0029A0  0100               	movlb	0	; () banked
 17024  0029A2  6F60               	movwf	??_get_cluster& (0+255),b
 17025  0029A4  0E01               	movlw	1
 17026  0029A6  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17027  0029A8  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17028  0029AC  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17029  0029B0  5160               	movf	??_get_cluster& (0+255),w,b
 17030  0029B2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17031  0029B4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17032  0029B6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17033  0029B8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17034  0029BC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17035  0029C0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17036  0029C2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17037  0029C4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17038  0029C6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17039  0029C8  0E20               	movlw	32
 17040  0029CA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17041  0029CC  6ED9               	movwf	fsr2l,c
 17042  0029CE  0E00               	movlw	0
 17043  0029D0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17044  0029D2  6EDA               	movwf	fsr2h,c
 17045  0029D4  50DF               	movf	indf2,w,c
 17046  0029D6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17047  0029D8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17048  0029DA  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17049  0029DC  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17050  0029DE  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17051  0029E0  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17052  0029E2  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17053  0029E4  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17057  0029E6  B04A               	btfsc	get_cluster@clust^0,0,c
 17058  0029E8  D007               	goto	l10667
 17059                           
 17060                           ; BSR set to: 0
 17061  0029EA  0EFF               	movlw	255
 17062  0029EC  1569               	andwf	get_cluster@wc& (0+255),w,b
 17063  0029EE  6E4A               	movwf	?_get_cluster^0,c
 17064  0029F0  0E0F               	movlw	15
 17065  0029F2  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17066  0029F4  6E4B               	movwf	(?_get_cluster+1)^0,c
 17067  0029F6  0012               	return	
 17068  0029F8                     l10667:
 17069                           
 17070                           ; BSR set to: 0
 17071  0029F8  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17072  0029FC  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17073  002A00  0E04               	movlw	4
 17074  002A02  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17075  002A04                     u11975:
 17076  002A04  90D8               	bcf	status,0,c
 17077  002A06  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17078  002A08  3360               	rrcf	??_get_cluster& (0+255),f,b
 17079  002A0A  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17080  002A0C  D7FB               	goto	u11975
 17081  002A0E  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17082  002A12  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17083  002A16  0012               	return	
 17084  002A18                     l10671:
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17088  002A18  504B               	movf	(get_cluster@clust+1)^0,w,c
 17089  002A1A  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17090  002A1C  6E35               	movwf	move_window@sector^0,c
 17091  002A1E  0E00               	movlw	0
 17092  002A20  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17093  002A22  6E36               	movwf	(move_window@sector+1)^0,c
 17094  002A24  0E00               	movlw	0
 17095  002A26  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17096  002A28  6E37               	movwf	(move_window@sector+2)^0,c
 17097  002A2A  0E00               	movlw	0
 17098  002A2C  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17099  002A2E  6E38               	movwf	(move_window@sector+3)^0,c
 17100  002A30  EC52  F015         	call	_move_window	;wreg free
 17101  002A34  0900               	iorlw	0
 17102  002A36  B4D8               	btfsc	status,2,c
 17103  002A38  D030               	goto	l10683
 17104                           
 17105                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17106  002A3A  0EFF               	movlw	255
 17107  002A3C  0100               	movlb	0	; () banked
 17108  002A3E  6F60               	movwf	??_get_cluster& (0+255),b
 17109  002A40  0E01               	movlw	1
 17110  002A42  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17111  002A44  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17112  002A48  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17113  002A4C  90D8               	bcf	status,0,c
 17114  002A4E  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17115  002A50  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17116  002A52  5160               	movf	??_get_cluster& (0+255),w,b
 17117  002A54  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17118  002A56  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17119  002A58  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17120  002A5A  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17121  002A5E  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17122  002A62  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17123  002A64  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17124  002A66  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17125  002A68  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17126  002A6A  0E20               	movlw	32
 17127  002A6C  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17128  002A6E  6ED9               	movwf	fsr2l,c
 17129  002A70  0E00               	movlw	0
 17130  002A72  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17131  002A74  6EDA               	movwf	fsr2h,c
 17132  002A76  CFDE F04A          	movff	postinc2,?_get_cluster
 17133  002A7A  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17134  002A7E  0012               	return	
 17135  002A80                     l10681:
 17136                           
 17137                           ; BSR set to: 0
 17138  002A80  EE20 F01C          	lfsr	2,28
 17139  002A84  5171               	movf	get_cluster@fs& (0+255),w,b
 17140  002A86  26D9               	addwf	fsr2l,f,c
 17141  002A88  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17142  002A8A  22DA               	addwfc	fsr2h,f,c
 17143  002A8C  50DF               	movf	indf2,w,c
 17144                           
 17145                           ; Switch size 1, requested type "simple"
 17146                           ; Number of cases is 2, Range of values is 1 to 2
 17147                           ; switch strategies available:
 17148                           ; Name         Instructions Cycles
 17149                           ; simple_byte            7     4 (average)
 17150                           ;	Chosen strategy is simple_byte
 17151  002A8E  0A01               	xorlw	1	; case 1
 17152  002A90  B4D8               	btfsc	status,2,c
 17153  002A92  D719               	goto	l10647
 17154  002A94  0A03               	xorlw	3	; case 2
 17155  002A96  B4D8               	btfsc	status,2,c
 17156  002A98  D7BF               	goto	l10671
 17157  002A9A                     l10683:
 17158                           
 17159                           ;tff.c: 184: };tff.c: 186: return 1;
 17160  002A9A  0E00               	movlw	0
 17161  002A9C  6E4B               	movwf	(?_get_cluster+1)^0,c
 17162  002A9E  0E01               	movlw	1
 17163  002AA0  6E4A               	movwf	?_get_cluster^0,c
 17164  002AA2  0012               	return		;funcret
 17165  002AA4                     __end_of_get_cluster:
 17166                           	callstack 0
 17167                           
 17168 ;; *************** function _f_close *****************
 17169 ;; Defined at:
 17170 ;;		line 1116 in file "bibliotecas/tff.c"
 17171 ;; Parameters:    Size  Location     Type
 17172 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17173 ;;		 -> fil(28), 
 17174 ;; Auto vars:     Size  Location     Type
 17175 ;;  res             1   75[COMRAM] enum E155
 17176 ;; Return value:  Size  Location     Type
 17177 ;;                  1    wreg      enum E3231
 17178 ;; Registers used:
 17179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17180 ;; Tracked objects:
 17181 ;;		On entry : 3F/0
 17182 ;;		On exit  : 0/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17185 ;;      Params:         0       2       0       0       0       0       0       0       0
 17186 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17188 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17189 ;;Total ram usage:        3 bytes
 17190 ;; Hardware stack levels used:    1
 17191 ;; Hardware stack levels required when called:   10
 17192 ;; This function calls:
 17193 ;;		_f_sync
 17194 ;; This function is called by:
 17195 ;;		_escrita_sdcard
 17196 ;; This function uses a non-reentrant model
 17197 ;;
 17198                           
 17199                           	psect	text88
 17200  0058BC                     __ptext88:
 17201                           	callstack 0
 17202  0058BC                     _f_close:
 17203                           	callstack 16
 17204                           
 17205                           ; BSR set to: 0
 17206                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17207                           
 17208                           ;incstack = 0
 17209  0058BC  C069  F060         	movff	f_close@fp,f_sync@fp
 17210  0058C0  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17211  0058C4  ECE1  F01B         	call	_f_sync	;wreg free
 17212  0058C8  6E4C               	movwf	f_close@res^0,c
 17213                           
 17214                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17215  0058CA  504C               	movf	f_close@res^0,w,c
 17216  0058CC  A4D8               	btfss	status,2,c
 17217  0058CE  0012               	return	
 17218  0058D0  0100               	movlb	0	; () banked
 17219  0058D2  EE20 F004          	lfsr	2,4
 17220  0058D6  5169               	movf	f_close@fp& (0+255),w,b
 17221  0058D8  26D9               	addwf	fsr2l,f,c
 17222  0058DA  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17223  0058DC  22DA               	addwfc	fsr2h,f,c
 17224  0058DE  0E00               	movlw	0
 17225  0058E0  6EDE               	movwf	postinc2,c
 17226  0058E2  0E00               	movlw	0
 17227  0058E4  6EDD               	movwf	postdec2,c
 17228  0058E6  0012               	return		;funcret
 17229  0058E8                     __end_of_f_close:
 17230                           	callstack 0
 17231                           
 17232 ;; *************** function _f_sync *****************
 17233 ;; Defined at:
 17234 ;;		line 1077 in file "bibliotecas/tff.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 17237 ;;		 -> fil(28), 
 17238 ;; Auto vars:     Size  Location     Type
 17239 ;;  tim             4    2[BANK0 ] unsigned long 
 17240 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 17241 ;;		 -> NULL(0), fs(544), 
 17242 ;;  res             1    6[BANK0 ] enum E155
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      enum E155
 17245 ;; Registers used:
 17246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 3F/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17252 ;;      Params:         0       2       0       0       0       0       0       0       0
 17253 ;;      Locals:         0       7       0       0       0       0       0       0       0
 17254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17255 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17256 ;;Total ram usage:        9 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    9
 17259 ;; This function calls:
 17260 ;;		_get_fattime
 17261 ;;		_move_window
 17262 ;;		_sync
 17263 ;;		_validate
 17264 ;; This function is called by:
 17265 ;;		_f_close
 17266 ;; This function uses a non-reentrant model
 17267 ;;
 17268                           
 17269                           	psect	text89
 17270  0037C2                     __ptext89:
 17271                           	callstack 0
 17272  0037C2                     _f_sync:
 17273                           	callstack 16
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 17277                           
 17278                           ;incstack = 0
 17279  0037C2  EE20 F004          	lfsr	2,4
 17280  0037C6  5160               	movf	f_sync@fp& (0+255),w,b
 17281  0037C8  26D9               	addwf	fsr2l,f,c
 17282  0037CA  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17283  0037CC  22DA               	addwfc	fsr2h,f,c
 17284  0037CE  CFDE F010          	movff	postinc2,validate@fs
 17285  0037D2  CFDD F011          	movff	postdec2,validate@fs+1
 17286  0037D6  C060  FFD9         	movff	f_sync@fp,fsr2l
 17287  0037DA  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 17288  0037DE  CFDE F012          	movff	postinc2,validate@id
 17289  0037E2  CFDD F013          	movff	postdec2,validate@id+1
 17290  0037E6  EC0B  F02A         	call	_validate	;wreg free
 17291  0037EA  0100               	movlb	0	; () banked
 17292  0037EC  6F66               	movwf	f_sync@res& (0+255),b
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;tff.c: 1087: if (res == FR_OK) {
 17296  0037EE  5166               	movf	f_sync@res& (0+255),w,b
 17297  0037F0  A4D8               	btfss	status,2,c
 17298  0037F2  D079               	goto	l11935
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;tff.c: 1088: if (fp->flag & 0x20) {
 17302  0037F4  EE20 F002          	lfsr	2,2
 17303  0037F8  5160               	movf	f_sync@fp& (0+255),w,b
 17304  0037FA  26D9               	addwf	fsr2l,f,c
 17305  0037FC  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17306  0037FE  22DA               	addwfc	fsr2h,f,c
 17307  003800  AADF               	btfss	indf2,5,c
 17308  003802  D071               	goto	l11935
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 17312  003804  EE20 F016          	lfsr	2,22
 17313  003808  5160               	movf	f_sync@fp& (0+255),w,b
 17314  00380A  26D9               	addwf	fsr2l,f,c
 17315  00380C  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17316  00380E  22DA               	addwfc	fsr2h,f,c
 17317  003810  CFDE F035          	movff	postinc2,move_window@sector
 17318  003814  CFDE F036          	movff	postinc2,move_window@sector+1
 17319  003818  CFDE F037          	movff	postinc2,move_window@sector+2
 17320  00381C  CFDE F038          	movff	postinc2,move_window@sector+3
 17321  003820  EC52  F015         	call	_move_window	;wreg free
 17322  003824  0900               	iorlw	0
 17323  003826  A4D8               	btfss	status,2,c
 17324  003828  D002               	goto	l11921
 17325                           
 17326                           ;tff.c: 1091: return FR_RW_ERROR;
 17327  00382A  0E08               	movlw	8
 17328  00382C  0012               	return	
 17329  00382E                     l11921:
 17330                           
 17331                           ;tff.c: 1092: dir = fp->dir_ptr;
 17332  00382E  0100               	movlb	0	; () banked
 17333  003830  EE20 F01A          	lfsr	2,26
 17334  003834  5160               	movf	f_sync@fp& (0+255),w,b
 17335  003836  26D9               	addwf	fsr2l,f,c
 17336  003838  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17337  00383A  22DA               	addwfc	fsr2h,f,c
 17338  00383C  CFDE F067          	movff	postinc2,f_sync@dir
 17339  003840  CFDD F068          	movff	postdec2,f_sync@dir+1
 17340                           
 17341                           ;tff.c: 1093: dir[11] |= 0x20;
 17342  003844  EE20 F00B          	lfsr	2,11
 17343  003848  5167               	movf	f_sync@dir& (0+255),w,b
 17344  00384A  26D9               	addwf	fsr2l,f,c
 17345  00384C  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 17346  00384E  22DA               	addwfc	fsr2h,f,c
 17347  003850  0E00               	movlw	0
 17348  003852  8ADB               	bsf	plusw2,5,c
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 17352  003854  EE20 F00A          	lfsr	2,10
 17353  003858  5160               	movf	f_sync@fp& (0+255),w,b
 17354  00385A  26D9               	addwf	fsr2l,f,c
 17355  00385C  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17356  00385E  22DA               	addwfc	fsr2h,f,c
 17357  003860  EE10 F01C          	lfsr	1,28
 17358  003864  5167               	movf	f_sync@dir& (0+255),w,b
 17359  003866  26E1               	addwf	fsr1l,f,c
 17360  003868  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 17361  00386A  22E2               	addwfc	fsr1h,f,c
 17362  00386C  CFDE FFE6          	movff	postinc2,postinc1
 17363  003870  CFDE FFE6          	movff	postinc2,postinc1
 17364  003874  CFDE FFE6          	movff	postinc2,postinc1
 17365  003878  CFDE FFE6          	movff	postinc2,postinc1
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 17369  00387C  EE20 F00E          	lfsr	2,14
 17370  003880  5160               	movf	f_sync@fp& (0+255),w,b
 17371  003882  26D9               	addwf	fsr2l,f,c
 17372  003884  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17373  003886  22DA               	addwfc	fsr2h,f,c
 17374  003888  EE10 F01A          	lfsr	1,26
 17375  00388C  5167               	movf	f_sync@dir& (0+255),w,b
 17376  00388E  26E1               	addwf	fsr1l,f,c
 17377  003890  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 17378  003892  22E2               	addwfc	fsr1h,f,c
 17379  003894  CFDE FFE6          	movff	postinc2,postinc1
 17380  003898  CFDD FFE5          	movff	postdec2,postdec1
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;tff.c: 1099: tim = get_fattime();
 17384  00389C  EC92  F01A         	call	_get_fattime	;wreg free
 17385  0038A0  C00E  F062         	movff	?_get_fattime,f_sync@tim
 17386  0038A4  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 17387  0038A8  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 17388  0038AC  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 17389                           
 17390                           ; BSR set to: 1
 17391                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 17392  0038B0  0100               	movlb	0	; () banked
 17393  0038B2  EE20 F016          	lfsr	2,22
 17394  0038B6  5167               	movf	f_sync@dir& (0+255),w,b
 17395  0038B8  26D9               	addwf	fsr2l,f,c
 17396  0038BA  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 17397  0038BC  22DA               	addwfc	fsr2h,f,c
 17398  0038BE  C062  FFDE         	movff	f_sync@tim,postinc2
 17399  0038C2  C063  FFDE         	movff	f_sync@tim+1,postinc2
 17400  0038C6  C064  FFDE         	movff	f_sync@tim+2,postinc2
 17401  0038CA  C065  FFDE         	movff	f_sync@tim+3,postinc2
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 17405  0038CE  EE20 F002          	lfsr	2,2
 17406  0038D2  5160               	movf	f_sync@fp& (0+255),w,b
 17407  0038D4  26D9               	addwf	fsr2l,f,c
 17408  0038D6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 17409  0038D8  22DA               	addwfc	fsr2h,f,c
 17410  0038DA  0EDF               	movlw	223
 17411  0038DC  16DF               	andwf	indf2,f,c
 17412                           
 17413                           ; BSR set to: 0
 17414                           ;tff.c: 1102: res = sync();
 17415  0038DE  EC47  F029         	call	_sync	;wreg free
 17416  0038E2  0100               	movlb	0	; () banked
 17417  0038E4  6F66               	movwf	f_sync@res& (0+255),b
 17418  0038E6                     l11935:
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 17422  0038E6  5166               	movf	f_sync@res& (0+255),w,b
 17423  0038E8  0012               	return		;funcret
 17424  0038EA                     __end_of_f_sync:
 17425                           	callstack 0
 17426                           
 17427 ;; *************** function _validate *****************
 17428 ;; Defined at:
 17429 ;;		line 767 in file "bibliotecas/tff.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 17432 ;;		 -> NULL(0), fs(544), 
 17433 ;;  id              2   17[COMRAM] unsigned short 
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      enum E155
 17438 ;; Registers used:
 17439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17440 ;; Tracked objects:
 17441 ;;		On entry : 3F/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17445 ;;      Params:         4       0       0       0       0       0       0       0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17447 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17448 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17449 ;;Total ram usage:        6 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; Hardware stack levels required when called:    4
 17452 ;; This function calls:
 17453 ;;		_disk_status
 17454 ;; This function is called by:
 17455 ;;		_f_write
 17456 ;;		_f_sync
 17457 ;;		_f_lseek
 17458 ;;		_f_read
 17459 ;; This function uses a non-reentrant model
 17460 ;;
 17461                           
 17462                           	psect	text90
 17463  005416                     __ptext90:
 17464                           	callstack 0
 17465  005416                     _validate:
 17466                           	callstack 18
 17467                           
 17468                           ; BSR set to: 0
 17469                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 17470                           
 17471                           ;incstack = 0
 17472  005416  5010               	movf	validate@fs^0,w,c
 17473  005418  1011               	iorwf	(validate@fs+1)^0,w,c
 17474  00541A  B4D8               	btfsc	status,2,c
 17475  00541C  D014               	goto	u12300
 17476                           
 17477                           ; BSR set to: 0
 17478  00541E  EE20 F01C          	lfsr	2,28
 17479  005422  5010               	movf	validate@fs^0,w,c
 17480  005424  26D9               	addwf	fsr2l,f,c
 17481  005426  5011               	movf	(validate@fs+1)^0,w,c
 17482  005428  22DA               	addwfc	fsr2h,f,c
 17483  00542A  50DF               	movf	indf2,w,c
 17484  00542C  B4D8               	btfsc	status,2,c
 17485  00542E  D00B               	goto	u12300
 17486                           
 17487                           ; BSR set to: 0
 17488  005430  C010  FFD9         	movff	validate@fs,fsr2l
 17489  005434  C011  FFDA         	movff	validate@fs+1,fsr2h
 17490  005438  5012               	movf	validate@id^0,w,c
 17491  00543A  18DE               	xorwf	postinc2,w,c
 17492  00543C  E104               	bnz	u12300
 17493  00543E  5013               	movf	(validate@id+1)^0,w,c
 17494  005440  18DE               	xorwf	postinc2,w,c
 17495  005442  B4D8               	btfsc	status,2,c
 17496  005444  D002               	goto	l10887
 17497  005446                     u12300:
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;tff.c: 773: return FR_INVALID_OBJECT;
 17501  005446  0E0C               	movlw	12
 17502  005448  0012               	return	
 17503  00544A                     l10887:
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;tff.c: 774: if (disk_status(0) & 0x01)
 17507  00544A  0E00               	movlw	0
 17508  00544C  ECEB  F02B         	call	_disk_status
 17509  005450  6E14               	movwf	??_validate^0,c
 17510  005452  A014               	btfss	??_validate^0,0,c
 17511  005454  D002               	goto	l10893
 17512                           
 17513                           ;tff.c: 775: return FR_NOT_READY;
 17514  005456  0E01               	movlw	1
 17515  005458  0012               	return	
 17516  00545A                     l10893:
 17517                           
 17518                           ;tff.c: 777: return FR_OK;
 17519  00545A  0E00               	movlw	0
 17520  00545C  0012               	return		;funcret
 17521  00545E                     __end_of_validate:
 17522                           	callstack 0
 17523                           
 17524 ;; *************** function _disk_status *****************
 17525 ;; Defined at:
 17526 ;;		line 27 in file "bibliotecas/diskio.c"
 17527 ;; Parameters:    Size  Location     Type
 17528 ;;  pdrv            1    wreg     unsigned char 
 17529 ;; Auto vars:     Size  Location     Type
 17530 ;;  pdrv            1   13[COMRAM] unsigned char 
 17531 ;;  result          2    0        int 
 17532 ;;  stat            1   14[COMRAM] unsigned char 
 17533 ;; Return value:  Size  Location     Type
 17534 ;;                  1    wreg      unsigned char 
 17535 ;; Registers used:
 17536 ;;		wreg, status,2, status,0, cstack
 17537 ;; Tracked objects:
 17538 ;;		On entry : 3F/0
 17539 ;;		On exit  : 0/0
 17540 ;;		Unchanged: 0/0
 17541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17542 ;;      Params:         0       0       0       0       0       0       0       0       0
 17543 ;;      Locals:         4       0       0       0       0       0       0       0       0
 17544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17545 ;;      Totals:         4       0       0       0       0       0       0       0       0
 17546 ;;Total ram usage:        4 bytes
 17547 ;; Hardware stack levels used:    1
 17548 ;; Hardware stack levels required when called:    3
 17549 ;; This function calls:
 17550 ;;		_sdc_disk_status
 17551 ;; This function is called by:
 17552 ;;		_auto_mount
 17553 ;;		_validate
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           	psect	text91
 17558  0057D6                     __ptext91:
 17559                           	callstack 0
 17560  0057D6                     _disk_status:
 17561                           	callstack 18
 17562                           
 17563                           ;incstack = 0
 17564                           ;disk_status@pdrv stored from wreg
 17565  0057D6  6E0E               	movwf	disk_status@pdrv^0,c
 17566                           
 17567                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 17568  0057D8  D00A               	goto	l10597
 17569  0057DA                     l10579:
 17570                           
 17571                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 17572  0057DA  500E               	movf	disk_status@pdrv^0,w,c
 17573  0057DC  EC31  F02E         	call	_sdc_disk_status
 17574  0057E0  6E0F               	movwf	disk_status@stat^0,c
 17575  0057E2                     l10581:
 17576                           
 17577                           ;diskio.c: 39: return stat;
 17578  0057E2  500F               	movf	disk_status@stat^0,w,c
 17579  0057E4  0012               	return	
 17580  0057E6                     l10585:
 17581  0057E6  500E               	movf	disk_status@pdrv^0,w,c
 17582  0057E8  EC31  F02E         	call	_sdc_disk_status
 17583  0057EC  D7FA               	goto	l10581
 17584  0057EE                     l10597:
 17585  0057EE  500E               	movf	disk_status@pdrv^0,w,c
 17586                           
 17587                           ; Switch size 1, requested type "simple"
 17588                           ; Number of cases is 3, Range of values is 0 to 2
 17589                           ; switch strategies available:
 17590                           ; Name         Instructions Cycles
 17591                           ; simple_byte           10     6 (average)
 17592                           ;	Chosen strategy is simple_byte
 17593  0057F0  0A00               	xorlw	0	; case 0
 17594  0057F2  B4D8               	btfsc	status,2,c
 17595  0057F4  D7F2               	goto	l10579
 17596  0057F6  0A01               	xorlw	1	; case 1
 17597  0057F8  B4D8               	btfsc	status,2,c
 17598  0057FA  D7F5               	goto	l10585
 17599  0057FC  0A03               	xorlw	3	; case 2
 17600  0057FE  B4D8               	btfsc	status,2,c
 17601  005800  D7F0               	goto	l10581
 17602                           
 17603                           ;diskio.c: 50: return 0x01;
 17604  005802  0E01               	movlw	1
 17605  005804  0012               	return		;funcret
 17606  005806                     __end_of_disk_status:
 17607                           	callstack 0
 17608                           
 17609 ;; *************** function _sdc_disk_status *****************
 17610 ;; Defined at:
 17611 ;;		line 588 in file "bibliotecas/diskio.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  pdrv            1    wreg     unsigned char 
 17614 ;; Auto vars:     Size  Location     Type
 17615 ;;  pdrv            1   10[COMRAM] unsigned char 
 17616 ;;  stat            1    0        unsigned char 
 17617 ;;  cont            1    0        unsigned char 
 17618 ;;  buff            1    0        unsigned char 
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      unsigned char 
 17621 ;; Registers used:
 17622 ;;		wreg, status,2
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17628 ;;      Params:         0       0       0       0       0       0       0       0       0
 17629 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17631 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17632 ;;Total ram usage:        2 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    2
 17635 ;; This function calls:
 17636 ;;		Nothing
 17637 ;; This function is called by:
 17638 ;;		_disk_status
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text92
 17643  005C62                     __ptext92:
 17644                           	callstack 0
 17645  005C62                     _sdc_disk_status:
 17646                           	callstack 18
 17647                           
 17648                           ;incstack = 0
 17649                           ;sdc_disk_status@pdrv stored from wreg
 17650  005C62  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 17651                           
 17652                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 17653  005C64  500B               	movf	sdc_disk_status@pdrv^0,w,c
 17654  005C66  B4D8               	btfsc	status,2,c
 17655  005C68  D002               	goto	l10455
 17656  005C6A  0E01               	movlw	1
 17657  005C6C  0012               	return	
 17658  005C6E                     l10455:
 17659                           
 17660                           ;diskio.c: 595: return FR_OK;
 17661  005C6E  0E00               	movlw	0
 17662  005C70  0012               	return		;funcret
 17663  005C72                     __end_of_sdc_disk_status:
 17664                           	callstack 0
 17665                           
 17666 ;; *************** function _sync *****************
 17667 ;; Defined at:
 17668 ;;		line 119 in file "bibliotecas/tff.c"
 17669 ;; Parameters:    Size  Location     Type
 17670 ;;		None
 17671 ;; Auto vars:     Size  Location     Type
 17672 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 17673 ;;		 -> NULL(0), fs(544), 
 17674 ;; Return value:  Size  Location     Type
 17675 ;;                  1    wreg      enum E155
 17676 ;; Registers used:
 17677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17678 ;; Tracked objects:
 17679 ;;		On entry : 3F/0
 17680 ;;		On exit  : 0/0
 17681 ;;		Unchanged: 0/0
 17682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17683 ;;      Params:         0       0       0       0       0       0       0       0       0
 17684 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17686 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17687 ;;Total ram usage:        2 bytes
 17688 ;; Hardware stack levels used:    1
 17689 ;; Hardware stack levels required when called:    8
 17690 ;; This function calls:
 17691 ;;		_disk_ioctl
 17692 ;;		_move_window
 17693 ;; This function is called by:
 17694 ;;		_f_sync
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           	psect	text93
 17699  00528E                     __ptext93:
 17700                           	callstack 0
 17701  00528E                     _sync:
 17702                           	callstack 16
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;tff.c: 121: FATFS *fs = FatFs;
 17706                           
 17707                           ;incstack = 0
 17708  00528E  C04D  F04A         	movff	_FatFs,sync@fs
 17709  005292  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 17710                           
 17711                           ; BSR set to: 0
 17712                           ;tff.c: 124: fs->winflag = 1;
 17713  005296  EE20 F01F          	lfsr	2,31
 17714  00529A  504A               	movf	sync@fs^0,w,c
 17715  00529C  26D9               	addwf	fsr2l,f,c
 17716  00529E  504B               	movf	(sync@fs+1)^0,w,c
 17717  0052A0  22DA               	addwfc	fsr2h,f,c
 17718  0052A2  0E01               	movlw	1
 17719  0052A4  6EDF               	movwf	indf2,c
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 17723  0052A6  0E00               	movlw	0
 17724  0052A8  6E35               	movwf	move_window@sector^0,c
 17725  0052AA  0E00               	movlw	0
 17726  0052AC  6E36               	movwf	(move_window@sector+1)^0,c
 17727  0052AE  0E00               	movlw	0
 17728  0052B0  6E37               	movwf	(move_window@sector+2)^0,c
 17729  0052B2  0E00               	movlw	0
 17730  0052B4  6E38               	movwf	(move_window@sector+3)^0,c
 17731  0052B6  EC52  F015         	call	_move_window	;wreg free
 17732  0052BA  0900               	iorlw	0
 17733  0052BC  A4D8               	btfss	status,2,c
 17734  0052BE  D002               	goto	l11329
 17735  0052C0                     u12930:
 17736  0052C0  0E08               	movlw	8
 17737  0052C2  0012               	return	
 17738  0052C4                     l11329:
 17739                           
 17740                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 17741  0052C4  0E00               	movlw	0
 17742  0052C6  6E0A               	movwf	disk_ioctl@cmd^0,c
 17743  0052C8  0E00               	movlw	0
 17744  0052CA  6E0B               	movwf	disk_ioctl@buff^0,c
 17745  0052CC  0E00               	movlw	0
 17746  0052CE  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 17747  0052D0  0E00               	movlw	0
 17748  0052D2  ECA8  F02D         	call	_disk_ioctl
 17749  0052D6  0900               	iorlw	0
 17750  0052D8  A4D8               	btfss	status,2,c
 17751  0052DA  D7F2               	goto	u12930
 17752                           
 17753                           ;tff.c: 143: return FR_OK;
 17754  0052DC  0E00               	movlw	0
 17755  0052DE  0012               	return		;funcret
 17756  0052E0                     __end_of_sync:
 17757                           	callstack 0
 17758                           
 17759 ;; *************** function _move_window *****************
 17760 ;; Defined at:
 17761 ;;		line 77 in file "bibliotecas/tff.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;  sector          4   52[COMRAM] unsigned long 
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;  n               1   66[COMRAM] unsigned char 
 17766 ;;  wsect           4   67[COMRAM] unsigned long 
 17767 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 17768 ;;		 -> NULL(0), fs(544), 
 17769 ;; Return value:  Size  Location     Type
 17770 ;;                  1    wreg      enum E105
 17771 ;; Registers used:
 17772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17773 ;; Tracked objects:
 17774 ;;		On entry : 0/0
 17775 ;;		On exit  : 0/0
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17778 ;;      Params:         4       0       0       0       0       0       0       0       0
 17779 ;;      Locals:         7       0       0       0       0       0       0       0       0
 17780 ;;      Temps:         10       0       0       0       0       0       0       0       0
 17781 ;;      Totals:        21       0       0       0       0       0       0       0       0
 17782 ;;Total ram usage:       21 bytes
 17783 ;; Hardware stack levels used:    1
 17784 ;; Hardware stack levels required when called:    7
 17785 ;; This function calls:
 17786 ;;		_disk_read
 17787 ;;		_disk_write
 17788 ;; This function is called by:
 17789 ;;		_sync
 17790 ;;		_get_cluster
 17791 ;;		_put_cluster
 17792 ;;		_trace_path
 17793 ;;		_reserve_direntry
 17794 ;;		_f_open
 17795 ;;		_f_write
 17796 ;;		_f_sync
 17797 ;;		_f_read
 17798 ;; This function uses a non-reentrant model
 17799 ;;
 17800                           
 17801                           	psect	text94
 17802  002AA4                     __ptext94:
 17803                           	callstack 0
 17804  002AA4                     _move_window:
 17805                           	callstack 15
 17806                           
 17807                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 17808                           
 17809                           ;incstack = 0
 17810  002AA4  C04D  F048         	movff	_FatFs,move_window@fs
 17811  002AA8  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 17812                           
 17813                           ;tff.c: 85: wsect = fs->winsect;
 17814  002AAC  EE20 F004          	lfsr	2,4
 17815  002AB0  5048               	movf	move_window@fs^0,w,c
 17816  002AB2  26D9               	addwf	fsr2l,f,c
 17817  002AB4  5049               	movf	(move_window@fs+1)^0,w,c
 17818  002AB6  22DA               	addwfc	fsr2h,f,c
 17819  002AB8  CFDE F044          	movff	postinc2,move_window@wsect
 17820  002ABC  CFDE F045          	movff	postinc2,move_window@wsect+1
 17821  002AC0  CFDE F046          	movff	postinc2,move_window@wsect+2
 17822  002AC4  CFDE F047          	movff	postinc2,move_window@wsect+3
 17823                           
 17824                           ;tff.c: 86: if (wsect != sector) {
 17825  002AC8  5035               	movf	move_window@sector^0,w,c
 17826  002ACA  1844               	xorwf	move_window@wsect^0,w,c
 17827  002ACC  E10A               	bnz	u11790
 17828  002ACE  5036               	movf	(move_window@sector+1)^0,w,c
 17829  002AD0  1845               	xorwf	(move_window@wsect+1)^0,w,c
 17830  002AD2  E107               	bnz	u11790
 17831  002AD4  5037               	movf	(move_window@sector+2)^0,w,c
 17832  002AD6  1846               	xorwf	(move_window@wsect+2)^0,w,c
 17833  002AD8  E104               	bnz	u11790
 17834  002ADA  5038               	movf	(move_window@sector+3)^0,w,c
 17835  002ADC  1847               	xorwf	(move_window@wsect+3)^0,w,c
 17836  002ADE  B4D8               	btfsc	status,2,c
 17837  002AE0  D0B4               	goto	l10567
 17838  002AE2                     u11790:
 17839                           
 17840                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 17841  002AE2  EE20 F01F          	lfsr	2,31
 17842  002AE6  5048               	movf	move_window@fs^0,w,c
 17843  002AE8  26D9               	addwf	fsr2l,f,c
 17844  002AEA  5049               	movf	(move_window@fs+1)^0,w,c
 17845  002AEC  22DA               	addwfc	fsr2h,f,c
 17846  002AEE  50DF               	movf	indf2,w,c
 17847  002AF0  B4D8               	btfsc	status,2,c
 17848  002AF2  D081               	goto	l10557
 17849                           
 17850                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 17851  002AF4  0E20               	movlw	32
 17852  002AF6  2448               	addwf	move_window@fs^0,w,c
 17853  002AF8  6E29               	movwf	disk_write@buff^0,c
 17854  002AFA  0E00               	movlw	0
 17855  002AFC  2049               	addwfc	(move_window@fs+1)^0,w,c
 17856  002AFE  6E2A               	movwf	(disk_write@buff+1)^0,c
 17857  002B00  C044  F02B         	movff	move_window@wsect,disk_write@sector
 17858  002B04  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 17859  002B08  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 17860  002B0C  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 17861  002B10  0E01               	movlw	1
 17862  002B12  6E2F               	movwf	disk_write@count^0,c
 17863  002B14  0E00               	movlw	0
 17864  002B16  ECC1  F029         	call	_disk_write
 17865  002B1A  0900               	iorlw	0
 17866  002B1C  B4D8               	btfsc	status,2,c
 17867  002B1E  D002               	goto	l10541
 17868  002B20                     u11810:
 17869                           
 17870                           ;tff.c: 91: return FALSE;
 17871  002B20  0E00               	movlw	0
 17872  002B22  0012               	return	
 17873  002B24                     l10541:
 17874                           
 17875                           ;tff.c: 92: fs->winflag = 0;
 17876  002B24  EE20 F01F          	lfsr	2,31
 17877  002B28  5048               	movf	move_window@fs^0,w,c
 17878  002B2A  26D9               	addwf	fsr2l,f,c
 17879  002B2C  5049               	movf	(move_window@fs+1)^0,w,c
 17880  002B2E  22DA               	addwfc	fsr2h,f,c
 17881  002B30  0E00               	movlw	0
 17882  002B32  6EDF               	movwf	indf2,c
 17883                           
 17884                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 17885  002B34  EE20 F008          	lfsr	2,8
 17886  002B38  5048               	movf	move_window@fs^0,w,c
 17887  002B3A  26D9               	addwf	fsr2l,f,c
 17888  002B3C  5049               	movf	(move_window@fs+1)^0,w,c
 17889  002B3E  22DA               	addwfc	fsr2h,f,c
 17890  002B40  CFDE F039          	movff	postinc2,??_move_window
 17891  002B44  CFDE F03A          	movff	postinc2,??_move_window+1
 17892  002B48  CFDE F03B          	movff	postinc2,??_move_window+2
 17893  002B4C  CFDE F03C          	movff	postinc2,??_move_window+3
 17894  002B50  EE20 F014          	lfsr	2,20
 17895  002B54  5048               	movf	move_window@fs^0,w,c
 17896  002B56  26D9               	addwf	fsr2l,f,c
 17897  002B58  5049               	movf	(move_window@fs+1)^0,w,c
 17898  002B5A  22DA               	addwfc	fsr2h,f,c
 17899  002B5C  CFDE F03D          	movff	postinc2,??_move_window+4
 17900  002B60  CFDD F03E          	movff	postdec2,??_move_window+5
 17901  002B64  503D               	movf	(??_move_window+4)^0,w,c
 17902  002B66  2439               	addwf	??_move_window^0,w,c
 17903  002B68  6E3F               	movwf	(??_move_window+6)^0,c
 17904  002B6A  503E               	movf	(??_move_window+5)^0,w,c
 17905  002B6C  203A               	addwfc	(??_move_window+1)^0,w,c
 17906  002B6E  6E40               	movwf	(??_move_window+7)^0,c
 17907  002B70  0E00               	movlw	0
 17908  002B72  203B               	addwfc	(??_move_window+2)^0,w,c
 17909  002B74  6E41               	movwf	(??_move_window+8)^0,c
 17910  002B76  0E00               	movlw	0
 17911  002B78  203C               	addwfc	(??_move_window+3)^0,w,c
 17912  002B7A  6E42               	movwf	(??_move_window+9)^0,c
 17913  002B7C  503F               	movf	(??_move_window+6)^0,w,c
 17914  002B7E  5C44               	subwf	move_window@wsect^0,w,c
 17915  002B80  5040               	movf	(??_move_window+7)^0,w,c
 17916  002B82  5845               	subwfb	(move_window@wsect+1)^0,w,c
 17917  002B84  5041               	movf	(??_move_window+8)^0,w,c
 17918  002B86  5846               	subwfb	(move_window@wsect+2)^0,w,c
 17919  002B88  5042               	movf	(??_move_window+9)^0,w,c
 17920  002B8A  5847               	subwfb	(move_window@wsect+3)^0,w,c
 17921  002B8C  B0D8               	btfsc	status,0,c
 17922  002B8E  D033               	goto	l10557
 17923                           
 17924                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 17925  002B90  EE20 F01E          	lfsr	2,30
 17926  002B94  5048               	movf	move_window@fs^0,w,c
 17927  002B96  26D9               	addwf	fsr2l,f,c
 17928  002B98  5049               	movf	(move_window@fs+1)^0,w,c
 17929  002B9A  22DA               	addwfc	fsr2h,f,c
 17930  002B9C  50DF               	movf	indf2,w,c
 17931  002B9E  6E43               	movwf	move_window@n^0,c
 17932  002BA0                     l10545:
 17933  002BA0  0E02               	movlw	2
 17934  002BA2  6043               	cpfslt	move_window@n^0,c
 17935  002BA4  D001               	goto	l10549
 17936  002BA6  D027               	goto	l10557
 17937  002BA8                     l10549:
 17938                           
 17939                           ;tff.c: 95: wsect += fs->sects_fat;
 17940  002BA8  EE20 F014          	lfsr	2,20
 17941  002BAC  5048               	movf	move_window@fs^0,w,c
 17942  002BAE  26D9               	addwf	fsr2l,f,c
 17943  002BB0  5049               	movf	(move_window@fs+1)^0,w,c
 17944  002BB2  22DA               	addwfc	fsr2h,f,c
 17945  002BB4  CFDE F039          	movff	postinc2,??_move_window
 17946  002BB8  CFDD F03A          	movff	postdec2,??_move_window+1
 17947  002BBC  5039               	movf	??_move_window^0,w,c
 17948  002BBE  2644               	addwf	move_window@wsect^0,f,c
 17949  002BC0  503A               	movf	(??_move_window+1)^0,w,c
 17950  002BC2  2245               	addwfc	(move_window@wsect+1)^0,f,c
 17951  002BC4  0E00               	movlw	0
 17952  002BC6  2246               	addwfc	(move_window@wsect+2)^0,f,c
 17953  002BC8  0E00               	movlw	0
 17954  002BCA  2247               	addwfc	(move_window@wsect+3)^0,f,c
 17955                           
 17956                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 17957  002BCC  0E20               	movlw	32
 17958  002BCE  2448               	addwf	move_window@fs^0,w,c
 17959  002BD0  6E29               	movwf	disk_write@buff^0,c
 17960  002BD2  0E00               	movlw	0
 17961  002BD4  2049               	addwfc	(move_window@fs+1)^0,w,c
 17962  002BD6  6E2A               	movwf	(disk_write@buff+1)^0,c
 17963  002BD8  C044  F02B         	movff	move_window@wsect,disk_write@sector
 17964  002BDC  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 17965  002BE0  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 17966  002BE4  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 17967  002BE8  0E01               	movlw	1
 17968  002BEA  6E2F               	movwf	disk_write@count^0,c
 17969  002BEC  0E00               	movlw	0
 17970  002BEE  ECC1  F029         	call	_disk_write
 17971  002BF2  0643               	decf	move_window@n^0,f,c
 17972  002BF4  D7D5               	goto	l10545
 17973  002BF6                     l10557:
 17974                           
 17975                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 17976  002BF6  5035               	movf	move_window@sector^0,w,c
 17977  002BF8  1036               	iorwf	(move_window@sector+1)^0,w,c
 17978  002BFA  1037               	iorwf	(move_window@sector+2)^0,w,c
 17979  002BFC  1038               	iorwf	(move_window@sector+3)^0,w,c
 17980  002BFE  B4D8               	btfsc	status,2,c
 17981  002C00  D024               	goto	l10567
 17982                           
 17983                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 17984  002C02  0E20               	movlw	32
 17985  002C04  2448               	addwf	move_window@fs^0,w,c
 17986  002C06  6E29               	movwf	disk_read@buff^0,c
 17987  002C08  0E00               	movlw	0
 17988  002C0A  2049               	addwfc	(move_window@fs+1)^0,w,c
 17989  002C0C  6E2A               	movwf	(disk_read@buff+1)^0,c
 17990  002C0E  C035  F02B         	movff	move_window@sector,disk_read@sector
 17991  002C12  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 17992  002C16  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 17993  002C1A  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 17994  002C1E  0E01               	movlw	1
 17995  002C20  6E2F               	movwf	disk_read@count^0,c
 17996  002C22  0E00               	movlw	0
 17997  002C24  EC61  F026         	call	_disk_read
 17998  002C28  0900               	iorlw	0
 17999  002C2A  A4D8               	btfss	status,2,c
 18000  002C2C  D779               	goto	u11810
 18001                           
 18002                           ;tff.c: 104: fs->winsect = sector;
 18003  002C2E  EE20 F004          	lfsr	2,4
 18004  002C32  5048               	movf	move_window@fs^0,w,c
 18005  002C34  26D9               	addwf	fsr2l,f,c
 18006  002C36  5049               	movf	(move_window@fs+1)^0,w,c
 18007  002C38  22DA               	addwfc	fsr2h,f,c
 18008  002C3A  C035  FFDE         	movff	move_window@sector,postinc2
 18009  002C3E  C036  FFDE         	movff	move_window@sector+1,postinc2
 18010  002C42  C037  FFDE         	movff	move_window@sector+2,postinc2
 18011  002C46  C038  FFDE         	movff	move_window@sector+3,postinc2
 18012  002C4A                     l10567:
 18013                           
 18014                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18015  002C4A  0E01               	movlw	1
 18016  002C4C  0012               	return		;funcret
 18017  002C4E                     __end_of_move_window:
 18018                           	callstack 0
 18019                           
 18020 ;; *************** function _disk_write *****************
 18021 ;; Defined at:
 18022 ;;		line 150 in file "bibliotecas/diskio.c"
 18023 ;; Parameters:    Size  Location     Type
 18024 ;;  pdrv            1    wreg     unsigned char 
 18025 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18026 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18027 ;;  sector          4   42[COMRAM] unsigned long 
 18028 ;;  count           1   46[COMRAM] unsigned char 
 18029 ;; Auto vars:     Size  Location     Type
 18030 ;;  pdrv            1   48[COMRAM] unsigned char 
 18031 ;;  result          2   49[COMRAM] int 
 18032 ;;  res             1   51[COMRAM] enum E25
 18033 ;; Return value:  Size  Location     Type
 18034 ;;                  1    wreg      enum E25
 18035 ;; Registers used:
 18036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18037 ;; Tracked objects:
 18038 ;;		On entry : 0/0
 18039 ;;		On exit  : 0/0
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18042 ;;      Params:         7       0       0       0       0       0       0       0       0
 18043 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18044 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18045 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18046 ;;Total ram usage:       12 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; Hardware stack levels required when called:    6
 18049 ;; This function calls:
 18050 ;;		_sdc_disk_write
 18051 ;; This function is called by:
 18052 ;;		_move_window
 18053 ;;		_reserve_direntry
 18054 ;;		_f_write
 18055 ;; This function uses a non-reentrant model
 18056 ;;
 18057                           
 18058                           	psect	text95
 18059  005382                     __ptext95:
 18060                           	callstack 0
 18061  005382                     _disk_write:
 18062                           	callstack 15
 18063                           
 18064                           ;incstack = 0
 18065                           ;disk_write@pdrv stored from wreg
 18066  005382  6E31               	movwf	disk_write@pdrv^0,c
 18067                           
 18068                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18069  005384  D018               	goto	l10421
 18070  005386                     l10399:
 18071                           
 18072                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18073  005386  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18074  00538A  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18075  00538E  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18076  005392  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18077  005396  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18078  00539A  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18079  00539E  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18080  0053A2  EC27  F016         	call	_sdc_disk_write	;wreg free
 18081  0053A6  6E30               	movwf	??_disk_write^0,c
 18082  0053A8  5030               	movf	??_disk_write^0,w,c
 18083  0053AA  6E32               	movwf	disk_write@result^0,c
 18084  0053AC  6A33               	clrf	(disk_write@result+1)^0,c
 18085                           
 18086                           ;diskio.c: 165: res = result;
 18087  0053AE  C032  F034         	movff	disk_write@result,disk_write@res
 18088  0053B2                     l10403:
 18089                           
 18090                           ;diskio.c: 168: return res;
 18091  0053B2  5034               	movf	disk_write@res^0,w,c
 18092  0053B4  0012               	return	
 18093  0053B6                     l10421:
 18094  0053B6  5031               	movf	disk_write@pdrv^0,w,c
 18095                           
 18096                           ; Switch size 1, requested type "simple"
 18097                           ; Number of cases is 3, Range of values is 0 to 2
 18098                           ; switch strategies available:
 18099                           ; Name         Instructions Cycles
 18100                           ; simple_byte           10     6 (average)
 18101                           ;	Chosen strategy is simple_byte
 18102  0053B8  0A00               	xorlw	0	; case 0
 18103  0053BA  B4D8               	btfsc	status,2,c
 18104  0053BC  D7E4               	goto	l10399
 18105  0053BE  0A01               	xorlw	1	; case 1
 18106  0053C0  B4D8               	btfsc	status,2,c
 18107  0053C2  D7E1               	goto	l10399
 18108  0053C4  0A03               	xorlw	3	; case 2
 18109  0053C6  B4D8               	btfsc	status,2,c
 18110  0053C8  D7F4               	goto	l10403
 18111                           
 18112                           ;diskio.c: 189: return RES_PARERR;
 18113  0053CA  0E04               	movlw	4
 18114  0053CC  0012               	return		;funcret
 18115  0053CE                     __end_of_disk_write:
 18116                           	callstack 0
 18117                           
 18118 ;; *************** function _sdc_disk_write *****************
 18119 ;; Defined at:
 18120 ;;		line 509 in file "bibliotecas/diskio.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18123 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18124 ;;  sector          4   23[COMRAM] unsigned long 
 18125 ;;  count           1   27[COMRAM] unsigned char 
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;  j               2   37[COMRAM] int 
 18128 ;;  count1          2   34[COMRAM] int 
 18129 ;;  i               2    0        int 
 18130 ;;  buff            1   39[COMRAM] unsigned char 
 18131 ;;  res             1   36[COMRAM] enum E25
 18132 ;; Return value:  Size  Location     Type
 18133 ;;                  1    wreg      enum E25
 18134 ;; Registers used:
 18135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18136 ;; Tracked objects:
 18137 ;;		On entry : 0/0
 18138 ;;		On exit  : 0/0
 18139 ;;		Unchanged: 0/0
 18140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18141 ;;      Params:         7       0       0       0       0       0       0       0       0
 18142 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18143 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18144 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18145 ;;Total ram usage:       19 bytes
 18146 ;; Hardware stack levels used:    1
 18147 ;; Hardware stack levels required when called:    5
 18148 ;; This function calls:
 18149 ;;		_command
 18150 ;;		_dummy_clocks
 18151 ;;		_escreve_SPI
 18152 ;;		_leitura_SPI
 18153 ;;		_proceed
 18154 ;;		_response
 18155 ;; This function is called by:
 18156 ;;		_disk_write
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           	psect	text96
 18161  002C4E                     __ptext96:
 18162                           	callstack 0
 18163  002C4E                     _sdc_disk_write:
 18164                           	callstack 15
 18165                           
 18166                           ;incstack = 0
 18167  002C4E  0E00               	movlw	0
 18168  002C50  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18169  002C52  0E00               	movlw	0
 18170  002C54  6E23               	movwf	sdc_disk_write@count1^0,c
 18171                           
 18172                           ;diskio.c: 515: if(count>1)
 18173  002C56  0E01               	movlw	1
 18174  002C58  641C               	cpfsgt	sdc_disk_write@count^0,c
 18175  002C5A  D065               	goto	l144
 18176                           
 18177                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18178  002C5C  9E8B               	bcf	139,7,c	;volatile
 18179                           
 18180                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18181  002C5E  9A8A               	bcf	138,5,c	;volatile
 18182                           
 18183                           ;diskio.c: 519: dummy_clocks(10);
 18184  002C60  0E0A               	movlw	10
 18185  002C62  EC79  F02B         	call	_dummy_clocks
 18186                           
 18187                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18188  002C66  501C               	movf	sdc_disk_write@count^0,w,c
 18189  002C68  6E0F               	movwf	command@arg^0,c
 18190  002C6A  6A10               	clrf	(command@arg+1)^0,c
 18191  002C6C  6A11               	clrf	(command@arg+2)^0,c
 18192  002C6E  6A12               	clrf	(command@arg+3)^0,c
 18193  002C70  0EFF               	movlw	255
 18194  002C72  6E13               	movwf	command@CRC^0,c
 18195  002C74  0E57               	movlw	87
 18196  002C76  ECC1  F027         	call	_command
 18197                           
 18198                           ;diskio.c: 521: proceed();
 18199  002C7A  EC5E  F02E         	call	_proceed	;wreg free
 18200  002C7E                     l10287:
 18201                           
 18202                           ;diskio.c: 523: buff = response();
 18203  002C7E  EC58  F02E         	call	_response	;wreg free
 18204  002C82  6E28               	movwf	sdc_disk_write@buff^0,c
 18205                           
 18206                           ;diskio.c: 524: }while(buff!=0X00);
 18207  002C84  5028               	movf	sdc_disk_write@buff^0,w,c
 18208  002C86  A4D8               	btfss	status,2,c
 18209  002C88  D7FA               	goto	l10287
 18210                           
 18211                           ;diskio.c: 526: dummy_clocks(10);
 18212  002C8A  0E0A               	movlw	10
 18213  002C8C  EC79  F02B         	call	_dummy_clocks
 18214                           
 18215                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18216  002C90  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18217  002C94  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18218  002C98  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18219  002C9C  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18220  002CA0  0E09               	movlw	9
 18221  002CA2                     u11545:
 18222  002CA2  90D8               	bcf	status,0,c
 18223  002CA4  361D               	rlcf	??_sdc_disk_write^0,f,c
 18224  002CA6  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18225  002CA8  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18226  002CAA  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18227  002CAC  2EE8               	decfsz	wreg,f,c
 18228  002CAE  D7F9               	goto	u11545
 18229  002CB0  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18230  002CB4  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 18231  002CB8  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 18232  002CBC  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 18233  002CC0  0EFF               	movlw	255
 18234  002CC2  6E13               	movwf	command@CRC^0,c
 18235  002CC4  0E59               	movlw	89
 18236  002CC6  ECC1  F027         	call	_command
 18237                           
 18238                           ;diskio.c: 528: proceed();
 18239  002CCA  EC5E  F02E         	call	_proceed	;wreg free
 18240  002CCE                     l10295:
 18241                           
 18242                           ;diskio.c: 530: buff = response();
 18243  002CCE  EC58  F02E         	call	_response	;wreg free
 18244  002CD2  6E28               	movwf	sdc_disk_write@buff^0,c
 18245                           
 18246                           ;diskio.c: 531: }while(buff!=0X00);
 18247  002CD4  5028               	movf	sdc_disk_write@buff^0,w,c
 18248  002CD6  A4D8               	btfss	status,2,c
 18249  002CD8  D7FA               	goto	l10295
 18250                           
 18251                           ;diskio.c: 533: dummy_clocks(1);
 18252  002CDA  0E01               	movlw	1
 18253  002CDC  EC79  F02B         	call	_dummy_clocks
 18254                           
 18255                           ;diskio.c: 534: escreve_SPI(0XFC);
 18256  002CE0  0EFC               	movlw	252
 18257  002CE2  EC39  F02E         	call	_escreve_SPI
 18258                           
 18259                           ;diskio.c: 535: for(j=0;j<512;j++)
 18260  002CE6  0E00               	movlw	0
 18261  002CE8  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 18262  002CEA  0E00               	movlw	0
 18263  002CEC  6E26               	movwf	sdc_disk_write@j^0,c
 18264  002CEE                     l10309:
 18265                           
 18266                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 18267  002CEE  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 18268  002CF2  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 18269  002CF6  50DF               	movf	indf2,w,c
 18270  002CF8  EC39  F02E         	call	_escreve_SPI
 18271                           
 18272                           ;diskio.c: 538: p_buff++;
 18273  002CFC  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 18274  002CFE  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 18275  002D00  4A26               	infsnz	sdc_disk_write@j^0,f,c
 18276  002D02  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 18277  002D04  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 18278  002D06  D7F3               	goto	l10309
 18279  002D08  0E02               	movlw	2
 18280  002D0A  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 18281  002D0C  A0D8               	btfss	status,0,c
 18282  002D0E  D7EF               	goto	l10309
 18283                           
 18284                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 18285  002D10  EC64  F02E         	call	_leitura_SPI	;wreg free
 18286                           
 18287                           ;diskio.c: 541: leitura_SPI();
 18288  002D14  EC64  F02E         	call	_leitura_SPI	;wreg free
 18289                           
 18290                           ;diskio.c: 543: dummy_clocks(1);
 18291  002D18  0E01               	movlw	1
 18292  002D1A  EC79  F02B         	call	_dummy_clocks
 18293                           
 18294                           ;diskio.c: 544: escreve_SPI(0XFD);
 18295  002D1E  0EFD               	movlw	253
 18296  002D20  EC39  F02E         	call	_escreve_SPI
 18297                           
 18298                           ;diskio.c: 546: }
 18299  002D24  D063               	goto	u11600
 18300  002D26                     l144:
 18301                           
 18302                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 18303  002D26  9E8B               	bcf	139,7,c	;volatile
 18304                           
 18305                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 18306  002D28  9A8A               	bcf	138,5,c	;volatile
 18307                           
 18308                           ;diskio.c: 551: dummy_clocks(10);
 18309  002D2A  0E0A               	movlw	10
 18310  002D2C  EC79  F02B         	call	_dummy_clocks
 18311                           
 18312                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 18313  002D30  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18314  002D34  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18315  002D38  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18316  002D3C  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18317  002D40  0E09               	movlw	9
 18318  002D42                     u11575:
 18319  002D42  90D8               	bcf	status,0,c
 18320  002D44  361D               	rlcf	??_sdc_disk_write^0,f,c
 18321  002D46  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18322  002D48  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18323  002D4A  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18324  002D4C  2EE8               	decfsz	wreg,f,c
 18325  002D4E  D7F9               	goto	u11575
 18326  002D50  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18327  002D54  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 18328  002D58  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 18329  002D5C  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 18330  002D60  0E00               	movlw	0
 18331  002D62  6E13               	movwf	command@CRC^0,c
 18332  002D64  0E58               	movlw	88
 18333  002D66  ECC1  F027         	call	_command
 18334                           
 18335                           ;diskio.c: 553: proceed();
 18336  002D6A  EC5E  F02E         	call	_proceed	;wreg free
 18337  002D6E                     l10327:
 18338                           
 18339                           ;diskio.c: 555: buff = response();
 18340  002D6E  EC58  F02E         	call	_response	;wreg free
 18341  002D72  6E28               	movwf	sdc_disk_write@buff^0,c
 18342                           
 18343                           ;diskio.c: 556: }while(buff!=0X00);
 18344  002D74  5028               	movf	sdc_disk_write@buff^0,w,c
 18345  002D76  A4D8               	btfss	status,2,c
 18346  002D78  D7FA               	goto	l10327
 18347                           
 18348                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 18349  002D7A  9A8A               	bcf	138,5,c	;volatile
 18350                           
 18351                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 18352  002D7C  9E8B               	bcf	139,7,c	;volatile
 18353                           
 18354                           ;diskio.c: 560: dummy_clocks(1);
 18355  002D7E  0E01               	movlw	1
 18356  002D80  EC79  F02B         	call	_dummy_clocks
 18357                           
 18358                           ;diskio.c: 561: escreve_SPI(0XFE);
 18359  002D84  0EFE               	movlw	254
 18360  002D86  EC39  F02E         	call	_escreve_SPI
 18361                           
 18362                           ;diskio.c: 562: for(j=0;j<512;j++)
 18363  002D8A  0E00               	movlw	0
 18364  002D8C  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 18365  002D8E  0E00               	movlw	0
 18366  002D90  6E26               	movwf	sdc_disk_write@j^0,c
 18367  002D92                     l10341:
 18368                           
 18369                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 18370  002D92  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 18371  002D96  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 18372  002D9A  50DF               	movf	indf2,w,c
 18373  002D9C  EC39  F02E         	call	_escreve_SPI
 18374                           
 18375                           ;diskio.c: 565: p_buff++;
 18376  002DA0  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 18377  002DA2  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 18378  002DA4  4A26               	infsnz	sdc_disk_write@j^0,f,c
 18379  002DA6  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 18380  002DA8  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 18381  002DAA  D7F3               	goto	l10341
 18382  002DAC  0E02               	movlw	2
 18383  002DAE  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 18384  002DB0  A0D8               	btfss	status,0,c
 18385  002DB2  D7EF               	goto	l10341
 18386                           
 18387                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 18388  002DB4  EC64  F02E         	call	_leitura_SPI	;wreg free
 18389                           
 18390                           ;diskio.c: 568: leitura_SPI();
 18391  002DB8  EC64  F02E         	call	_leitura_SPI	;wreg free
 18392                           
 18393                           ;diskio.c: 570: dummy_clocks(10);
 18394  002DBC  0E0A               	movlw	10
 18395  002DBE  EC79  F02B         	call	_dummy_clocks
 18396                           
 18397                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 18398  002DC2  0E00               	movlw	0
 18399  002DC4  6E0F               	movwf	command@arg^0,c
 18400  002DC6  0E00               	movlw	0
 18401  002DC8  6E10               	movwf	(command@arg+1)^0,c
 18402  002DCA  0E00               	movlw	0
 18403  002DCC  6E11               	movwf	(command@arg+2)^0,c
 18404  002DCE  0E00               	movlw	0
 18405  002DD0  6E12               	movwf	(command@arg+3)^0,c
 18406  002DD2  0E00               	movlw	0
 18407  002DD4  6E13               	movwf	command@CRC^0,c
 18408  002DD6  0E4D               	movlw	77
 18409  002DD8  ECC1  F027         	call	_command
 18410                           
 18411                           ;diskio.c: 572: proceed();
 18412  002DDC  EC5E  F02E         	call	_proceed	;wreg free
 18413  002DE0                     l10357:
 18414                           
 18415                           ;diskio.c: 574: buff = response();
 18416  002DE0  EC58  F02E         	call	_response	;wreg free
 18417  002DE4  6E28               	movwf	sdc_disk_write@buff^0,c
 18418                           
 18419                           ;diskio.c: 575: }while(buff!=0X00 );
 18420  002DE6  5028               	movf	sdc_disk_write@buff^0,w,c
 18421  002DE8  A4D8               	btfss	status,2,c
 18422  002DEA  D7FA               	goto	l10357
 18423  002DEC                     u11600:
 18424                           
 18425                           ;diskio.c: 576: };diskio.c: 577: return res;
 18426  002DEC  5025               	movf	sdc_disk_write@res^0,w,c
 18427  002DEE  0012               	return		;funcret
 18428  002DF0                     __end_of_sdc_disk_write:
 18429                           	callstack 0
 18430                           
 18431 ;; *************** function _disk_read *****************
 18432 ;; Defined at:
 18433 ;;		line 97 in file "bibliotecas/diskio.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  pdrv            1    wreg     unsigned char 
 18436 ;;  buff            2   40[COMRAM] PTR unsigned char 
 18437 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 18438 ;;  sector          4   42[COMRAM] unsigned long 
 18439 ;;  count           1   46[COMRAM] unsigned char 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  pdrv            1   48[COMRAM] unsigned char 
 18442 ;;  result          2   49[COMRAM] int 
 18443 ;;  res             1   51[COMRAM] enum E25
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  1    wreg      enum E25
 18446 ;; Registers used:
 18447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18453 ;;      Params:         7       0       0       0       0       0       0       0       0
 18454 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18455 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18456 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18457 ;;Total ram usage:       12 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:    6
 18460 ;; This function calls:
 18461 ;;		_sdc_disk_read
 18462 ;; This function is called by:
 18463 ;;		_move_window
 18464 ;;		_check_fs
 18465 ;;		_f_read
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text97
 18470  004CC2                     __ptext97:
 18471                           	callstack 0
 18472  004CC2                     _disk_read:
 18473                           	callstack 15
 18474                           
 18475                           ;incstack = 0
 18476                           ;disk_read@pdrv stored from wreg
 18477  004CC2  6E31               	movwf	disk_read@pdrv^0,c
 18478                           
 18479                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 18480  004CC4  D029               	goto	l10391
 18481  004CC6                     l10367:
 18482                           
 18483                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 18484  004CC6  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 18485  004CCA  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 18486  004CCE  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 18487  004CD2  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 18488  004CD6  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 18489  004CDA  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 18490  004CDE  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 18491  004CE2  EC06  F01D         	call	_sdc_disk_read	;wreg free
 18492  004CE6  6E30               	movwf	??_disk_read^0,c
 18493  004CE8  5030               	movf	??_disk_read^0,w,c
 18494  004CEA  6E32               	movwf	disk_read@result^0,c
 18495  004CEC  6A33               	clrf	(disk_read@result+1)^0,c
 18496                           
 18497                           ;diskio.c: 115: res = result;
 18498  004CEE  C032  F034         	movff	disk_read@result,disk_read@res
 18499  004CF2                     l10371:
 18500                           
 18501                           ;diskio.c: 117: return res;
 18502  004CF2  5034               	movf	disk_read@res^0,w,c
 18503  004CF4  0012               	return	
 18504  004CF6                     l10375:
 18505                           
 18506                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 18507  004CF6  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 18508  004CFA  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 18509  004CFE  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 18510  004D02  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 18511  004D06  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 18512  004D0A  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 18513  004D0E  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 18514  004D12  EC06  F01D         	call	_sdc_disk_read	;wreg free
 18515  004D16  D7E7               	goto	L7
 18516  004D18                     l10391:
 18517  004D18  5031               	movf	disk_read@pdrv^0,w,c
 18518                           
 18519                           ; Switch size 1, requested type "simple"
 18520                           ; Number of cases is 3, Range of values is 0 to 2
 18521                           ; switch strategies available:
 18522                           ; Name         Instructions Cycles
 18523                           ; simple_byte           10     6 (average)
 18524                           ;	Chosen strategy is simple_byte
 18525  004D1A  0A00               	xorlw	0	; case 0
 18526  004D1C  B4D8               	btfsc	status,2,c
 18527  004D1E  D7D3               	goto	l10367
 18528  004D20  0A01               	xorlw	1	; case 1
 18529  004D22  B4D8               	btfsc	status,2,c
 18530  004D24  D7E8               	goto	l10375
 18531  004D26  0A03               	xorlw	3	; case 2
 18532  004D28  B4D8               	btfsc	status,2,c
 18533  004D2A  D7E3               	goto	l10371
 18534                           
 18535                           ;diskio.c: 141: return RES_PARERR;
 18536  004D2C  0E04               	movlw	4
 18537  004D2E  0012               	return		;funcret
 18538  004D30                     __end_of_disk_read:
 18539                           	callstack 0
 18540                           
 18541 ;; *************** function _sdc_disk_read *****************
 18542 ;; Defined at:
 18543 ;;		line 439 in file "bibliotecas/diskio.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 18546 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 18547 ;;  sector          4   23[COMRAM] unsigned long 
 18548 ;;  count           1   27[COMRAM] unsigned char 
 18549 ;; Auto vars:     Size  Location     Type
 18550 ;;  start_add       4   33[COMRAM] unsigned long 
 18551 ;;  length          2   37[COMRAM] int 
 18552 ;;  count1          2    0        int 
 18553 ;;  i               2    0        int 
 18554 ;;  buff            1   39[COMRAM] unsigned char 
 18555 ;;  ptr             1    0        unsigned char 
 18556 ;;  res             1    0        enum E25
 18557 ;; Return value:  Size  Location     Type
 18558 ;;                  1    wreg      enum E25
 18559 ;; Registers used:
 18560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18561 ;; Tracked objects:
 18562 ;;		On entry : 0/0
 18563 ;;		On exit  : 0/0
 18564 ;;		Unchanged: 0/0
 18565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18566 ;;      Params:         7       0       0       0       0       0       0       0       0
 18567 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18568 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18569 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18570 ;;Total ram usage:       19 bytes
 18571 ;; Hardware stack levels used:    1
 18572 ;; Hardware stack levels required when called:    5
 18573 ;; This function calls:
 18574 ;;		_command
 18575 ;;		_dummy_clocks
 18576 ;;		_proceed
 18577 ;;		_response
 18578 ;; This function is called by:
 18579 ;;		_disk_read
 18580 ;; This function uses a non-reentrant model
 18581 ;;
 18582                           
 18583                           	psect	text98
 18584  003A0C                     __ptext98:
 18585                           	callstack 0
 18586  003A0C                     _sdc_disk_read:
 18587                           	callstack 15
 18588                           
 18589                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 18590                           
 18591                           ;incstack = 0
 18592  003A0C  0E0A               	movlw	10
 18593  003A0E  EC79  F02B         	call	_dummy_clocks
 18594                           
 18595                           ;diskio.c: 452: start_add = sector*512;
 18596  003A12  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 18597  003A16  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 18598  003A1A  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 18599  003A1E  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 18600  003A22  0E09               	movlw	9
 18601  003A24                     u11455:
 18602  003A24  90D8               	bcf	status,0,c
 18603  003A26  361D               	rlcf	??_sdc_disk_read^0,f,c
 18604  003A28  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 18605  003A2A  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 18606  003A2C  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 18607  003A2E  2EE8               	decfsz	wreg,f,c
 18608  003A30  D7F9               	goto	u11455
 18609  003A32  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 18610  003A36  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 18611  003A3A  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 18612  003A3E  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 18613                           
 18614                           ;diskio.c: 455: if(sector != 1)
 18615  003A42  0418               	decf	sdc_disk_read@sector^0,w,c
 18616  003A44  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 18617  003A46  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 18618  003A48  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 18619  003A4A  B4D8               	btfsc	status,2,c
 18620  003A4C  D01B               	goto	l10237
 18621                           
 18622                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 18623  003A4E  0E0A               	movlw	10
 18624  003A50  EC79  F02B         	call	_dummy_clocks
 18625                           
 18626                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 18627  003A54  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 18628  003A58  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 18629  003A5C  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 18630  003A60  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 18631  003A64  0E00               	movlw	0
 18632  003A66  6E13               	movwf	command@CRC^0,c
 18633  003A68  0E52               	movlw	82
 18634  003A6A  ECC1  F027         	call	_command
 18635                           
 18636                           ;diskio.c: 459: proceed();
 18637  003A6E  EC5E  F02E         	call	_proceed	;wreg free
 18638  003A72                     l10231:
 18639                           
 18640                           ;diskio.c: 461: buff = response();
 18641  003A72  EC58  F02E         	call	_response	;wreg free
 18642  003A76  6E28               	movwf	sdc_disk_read@buff^0,c
 18643                           
 18644                           ;diskio.c: 462: }while(buff!=0X00);
 18645  003A78  5028               	movf	sdc_disk_read@buff^0,w,c
 18646  003A7A  A4D8               	btfss	status,2,c
 18647  003A7C  D7FA               	goto	l10231
 18648  003A7E                     u11470:
 18649                           
 18650                           ;diskio.c: 463: proceed();
 18651  003A7E  EC5E  F02E         	call	_proceed	;wreg free
 18652                           
 18653                           ;diskio.c: 464: }
 18654  003A82  D01C               	goto	l10249
 18655  003A84                     l10237:
 18656                           
 18657                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 18658  003A84  0E0A               	movlw	10
 18659  003A86  EC79  F02B         	call	_dummy_clocks
 18660                           
 18661                           ;diskio.c: 468: command(0X51,sector ,0X00);
 18662  003A8A  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 18663  003A8E  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 18664  003A92  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 18665  003A96  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 18666  003A9A  0E00               	movlw	0
 18667  003A9C  6E13               	movwf	command@CRC^0,c
 18668  003A9E  0E51               	movlw	81
 18669  003AA0  ECC1  F027         	call	_command
 18670                           
 18671                           ;diskio.c: 469: proceed();
 18672  003AA4  EC5E  F02E         	call	_proceed	;wreg free
 18673  003AA8                     l10241:
 18674                           
 18675                           ;diskio.c: 471: buff = response();
 18676  003AA8  EC58  F02E         	call	_response	;wreg free
 18677  003AAC  6E28               	movwf	sdc_disk_read@buff^0,c
 18678                           
 18679                           ;diskio.c: 472: }while(buff!=0X00);
 18680  003AAE  5028               	movf	sdc_disk_read@buff^0,w,c
 18681  003AB0  B4D8               	btfsc	status,2,c
 18682  003AB2  D7E5               	goto	u11470
 18683  003AB4  D7F9               	goto	l10241
 18684  003AB6                     l10247:
 18685                           
 18686                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 18687  003AB6  EC58  F02E         	call	_response	;wreg free
 18688  003ABA  6E28               	movwf	sdc_disk_read@buff^0,c
 18689  003ABC                     l10249:
 18690  003ABC  0EFE               	movlw	254
 18691  003ABE  1828               	xorwf	sdc_disk_read@buff^0,w,c
 18692  003AC0  A4D8               	btfss	status,2,c
 18693  003AC2  D7F9               	goto	l10247
 18694                           
 18695                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 18696  003AC4  0E00               	movlw	0
 18697  003AC6  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 18698  003AC8  0E00               	movlw	0
 18699  003ACA  6E26               	movwf	sdc_disk_read@length^0,c
 18700                           
 18701                           ;diskio.c: 484: while ( length < 512 )
 18702  003ACC  D00B               	goto	l10257
 18703  003ACE                     l10253:
 18704                           
 18705                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 18706  003ACE  5026               	movf	sdc_disk_read@length^0,w,c
 18707  003AD0  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 18708  003AD2  6ED9               	movwf	fsr2l,c
 18709  003AD4  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 18710  003AD6  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 18711  003AD8  6EDA               	movwf	fsr2h,c
 18712  003ADA  EC58  F02E         	call	_response	;wreg free
 18713  003ADE  6EDF               	movwf	indf2,c
 18714                           
 18715                           ;diskio.c: 487: length++;
 18716  003AE0  4A26               	infsnz	sdc_disk_read@length^0,f,c
 18717  003AE2  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 18718  003AE4                     l10257:
 18719  003AE4  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 18720  003AE6  D7F3               	goto	l10253
 18721  003AE8  0E02               	movlw	2
 18722  003AEA  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 18723  003AEC  A0D8               	btfss	status,0,c
 18724  003AEE  D7EF               	goto	l10253
 18725                           
 18726                           ;diskio.c: 491: dummy_clocks(10);
 18727  003AF0  0E0A               	movlw	10
 18728  003AF2  EC79  F02B         	call	_dummy_clocks
 18729                           
 18730                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 18731  003AF6  0E00               	movlw	0
 18732  003AF8  6E0F               	movwf	command@arg^0,c
 18733  003AFA  0E00               	movlw	0
 18734  003AFC  6E10               	movwf	(command@arg+1)^0,c
 18735  003AFE  0E00               	movlw	0
 18736  003B00  6E11               	movwf	(command@arg+2)^0,c
 18737  003B02  0E00               	movlw	0
 18738  003B04  6E12               	movwf	(command@arg+3)^0,c
 18739  003B06  0E00               	movlw	0
 18740  003B08  6E13               	movwf	command@CRC^0,c
 18741  003B0A  0E4C               	movlw	76
 18742  003B0C  ECC1  F027         	call	_command
 18743                           
 18744                           ;diskio.c: 494: proceed();
 18745  003B10  EC5E  F02E         	call	_proceed	;wreg free
 18746  003B14                     l10267:
 18747                           
 18748                           ;diskio.c: 496: buff = response();
 18749  003B14  EC58  F02E         	call	_response	;wreg free
 18750  003B18  6E28               	movwf	sdc_disk_read@buff^0,c
 18751                           
 18752                           ;diskio.c: 497: }while(buff!=0xFF);
 18753  003B1A  2828               	incf	sdc_disk_read@buff^0,w,c
 18754  003B1C  A4D8               	btfss	status,2,c
 18755  003B1E  D7FA               	goto	l10267
 18756                           
 18757                           ;diskio.c: 500: return RES_OK;
 18758  003B20  0E00               	movlw	0
 18759  003B22  0012               	return		;funcret
 18760  003B24                     __end_of_sdc_disk_read:
 18761                           	callstack 0
 18762                           
 18763 ;; *************** function _response *****************
 18764 ;; Defined at:
 18765 ;;		line 61 in file "bibliotecas/SDCard.c"
 18766 ;; Parameters:    Size  Location     Type
 18767 ;;		None
 18768 ;; Auto vars:     Size  Location     Type
 18769 ;;  buff            1    9[COMRAM] unsigned char 
 18770 ;; Return value:  Size  Location     Type
 18771 ;;                  1    wreg      unsigned char 
 18772 ;; Registers used:
 18773 ;;		wreg, status,2, cstack
 18774 ;; Tracked objects:
 18775 ;;		On entry : 0/0
 18776 ;;		On exit  : 0/0
 18777 ;;		Unchanged: 0/0
 18778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18779 ;;      Params:         0       0       0       0       0       0       0       0       0
 18780 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18781 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18782 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18783 ;;Total ram usage:        1 bytes
 18784 ;; Hardware stack levels used:    1
 18785 ;; Hardware stack levels required when called:    3
 18786 ;; This function calls:
 18787 ;;		_leitura_SPI
 18788 ;; This function is called by:
 18789 ;;		_sdc_reset
 18790 ;;		_sdc_disk_initialize
 18791 ;;		_sdc_disk_read
 18792 ;;		_sdc_disk_write
 18793 ;; This function uses a non-reentrant model
 18794 ;;
 18795                           
 18796                           	psect	text99
 18797  005CB0                     __ptext99:
 18798                           	callstack 0
 18799  005CB0                     _response:
 18800                           	callstack 16
 18801                           
 18802                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 18803                           
 18804                           ;incstack = 0
 18805  005CB0  9A8A               	bcf	138,5,c	;volatile
 18806                           
 18807                           ;SDCard.c: 65: buff= leitura_SPI();
 18808  005CB2  EC64  F02E         	call	_leitura_SPI	;wreg free
 18809  005CB6  6E0A               	movwf	response@buff^0,c
 18810                           
 18811                           ;SDCard.c: 66: return buff;
 18812  005CB8  500A               	movf	response@buff^0,w,c
 18813  005CBA  0012               	return		;funcret
 18814  005CBC                     __end_of_response:
 18815                           	callstack 0
 18816                           
 18817 ;; *************** function _proceed *****************
 18818 ;; Defined at:
 18819 ;;		line 94 in file "bibliotecas/SDCard.c"
 18820 ;; Parameters:    Size  Location     Type
 18821 ;;		None
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;		None
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  1    wreg      void 
 18826 ;; Registers used:
 18827 ;;		wreg, cstack
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18833 ;;      Params:         0       0       0       0       0       0       0       0       0
 18834 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18835 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18836 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18837 ;;Total ram usage:        0 bytes
 18838 ;; Hardware stack levels used:    1
 18839 ;; Hardware stack levels required when called:    3
 18840 ;; This function calls:
 18841 ;;		_escreve_SPI
 18842 ;; This function is called by:
 18843 ;;		_sdc_reset
 18844 ;;		_sdc_disk_initialize
 18845 ;;		_sdc_disk_read
 18846 ;;		_sdc_disk_write
 18847 ;; This function uses a non-reentrant model
 18848 ;;
 18849                           
 18850                           	psect	text100
 18851  005CBC                     __ptext100:
 18852                           	callstack 0
 18853  005CBC                     _proceed:
 18854                           	callstack 16
 18855                           
 18856                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 18857                           
 18858                           ;incstack = 0
 18859  005CBC  9A8A               	bcf	138,5,c	;volatile
 18860                           
 18861                           ;SDCard.c: 97: escreve_SPI(0xFF);
 18862  005CBE  0EFF               	movlw	255
 18863  005CC0  EC39  F02E         	call	_escreve_SPI
 18864                           
 18865                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 18866  005CC4  8A8A               	bsf	138,5,c	;volatile
 18867  005CC6  0012               	return		;funcret
 18868  005CC8                     __end_of_proceed:
 18869                           	callstack 0
 18870                           
 18871 ;; *************** function _command *****************
 18872 ;; Defined at:
 18873 ;;		line 127 in file "bibliotecas/SDCard.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;  CMD             1    wreg     unsigned char 
 18876 ;;  arg             4   14[COMRAM] unsigned long 
 18877 ;;  CRC             1   18[COMRAM] unsigned char 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  CMD             1   19[COMRAM] unsigned char 
 18880 ;;  argument        1   20[COMRAM] unsigned char 
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      void 
 18883 ;; Registers used:
 18884 ;;		wreg, status,2, status,0, cstack
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 0/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18890 ;;      Params:         5       0       0       0       0       0       0       0       0
 18891 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18892 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18893 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18894 ;;Total ram usage:        7 bytes
 18895 ;; Hardware stack levels used:    1
 18896 ;; Hardware stack levels required when called:    4
 18897 ;; This function calls:
 18898 ;;		_dummy_clocks
 18899 ;;		_escreve_SPI
 18900 ;;		_wait_ready
 18901 ;; This function is called by:
 18902 ;;		_sdc_reset
 18903 ;;		_sdc_disk_initialize
 18904 ;;		_sdc_disk_read
 18905 ;;		_sdc_disk_write
 18906 ;; This function uses a non-reentrant model
 18907 ;;
 18908                           
 18909                           	psect	text101
 18910  004F82                     __ptext101:
 18911                           	callstack 0
 18912  004F82                     _command:
 18913                           	callstack 15
 18914                           
 18915                           ;incstack = 0
 18916                           ;command@CMD stored from wreg
 18917  004F82  6E14               	movwf	command@CMD^0,c
 18918                           
 18919                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 18920  004F84  ECD0  F02B         	call	_wait_ready	;wreg free
 18921  004F88  0AFF               	xorlw	255
 18922  004F8A  A4D8               	btfss	status,2,c
 18923  004F8C  D004               	goto	l708
 18924  004F8E  D008               	goto	u11440
 18925  004F90                     l10181:
 18926                           
 18927                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 18928  004F90  0E0A               	movlw	10
 18929  004F92  EC79  F02B         	call	_dummy_clocks
 18930  004F96                     l708:
 18931  004F96  ECD0  F02B         	call	_wait_ready	;wreg free
 18932  004F9A  0AFF               	xorlw	255
 18933  004F9C  A4D8               	btfss	status,2,c
 18934  004F9E  D7F8               	goto	l10181
 18935  004FA0                     u11440:
 18936                           
 18937                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 18938  004FA0  0EFF               	movlw	255
 18939  004FA2  EC39  F02E         	call	_escreve_SPI
 18940                           
 18941                           ;SDCard.c: 139: escreve_SPI(CMD);
 18942  004FA6  5014               	movf	command@CMD^0,w,c
 18943  004FA8  EC39  F02E         	call	_escreve_SPI
 18944                           
 18945                           ;SDCard.c: 140: argument = arg>>24;
 18946  004FAC  C012  F015         	movff	command@arg+3,command@argument
 18947                           
 18948                           ;SDCard.c: 141: escreve_SPI(argument);
 18949  004FB0  5015               	movf	command@argument^0,w,c
 18950  004FB2  EC39  F02E         	call	_escreve_SPI
 18951                           
 18952                           ;SDCard.c: 142: argument = arg>>16;
 18953  004FB6  C011  F015         	movff	command@arg+2,command@argument
 18954                           
 18955                           ;SDCard.c: 143: escreve_SPI(argument);
 18956  004FBA  5015               	movf	command@argument^0,w,c
 18957  004FBC  EC39  F02E         	call	_escreve_SPI
 18958                           
 18959                           ;SDCard.c: 144: argument = arg>>8;
 18960  004FC0  C010  F015         	movff	command@arg+1,command@argument
 18961                           
 18962                           ;SDCard.c: 145: escreve_SPI(argument);
 18963  004FC4  5015               	movf	command@argument^0,w,c
 18964  004FC6  EC39  F02E         	call	_escreve_SPI
 18965                           
 18966                           ;SDCard.c: 146: argument = arg;
 18967  004FCA  C00F  F015         	movff	command@arg,command@argument
 18968                           
 18969                           ;SDCard.c: 147: escreve_SPI(argument);
 18970  004FCE  5015               	movf	command@argument^0,w,c
 18971  004FD0  EC39  F02E         	call	_escreve_SPI
 18972                           
 18973                           ;SDCard.c: 148: escreve_SPI(CRC);
 18974  004FD4  5013               	movf	command@CRC^0,w,c
 18975  004FD6  EC39  F02E         	call	_escreve_SPI
 18976  004FDA  0012               	return		;funcret
 18977  004FDC                     __end_of_command:
 18978                           	callstack 0
 18979                           
 18980 ;; *************** function _wait_ready *****************
 18981 ;; Defined at:
 18982 ;;		line 107 in file "bibliotecas/SDCard.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;		None
 18985 ;; Auto vars:     Size  Location     Type
 18986 ;;  msg            10    0        unsigned char [10]
 18987 ;;  timeout         4    9[COMRAM] unsigned long 
 18988 ;;  res             1   13[COMRAM] unsigned char 
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      unsigned char 
 18991 ;; Registers used:
 18992 ;;		wreg, status,2, status,0, cstack
 18993 ;; Tracked objects:
 18994 ;;		On entry : 0/0
 18995 ;;		On exit  : 0/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18998 ;;      Params:         0       0       0       0       0       0       0       0       0
 18999 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19001 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19002 ;;Total ram usage:        5 bytes
 19003 ;; Hardware stack levels used:    1
 19004 ;; Hardware stack levels required when called:    3
 19005 ;; This function calls:
 19006 ;;		_leitura_SPI
 19007 ;; This function is called by:
 19008 ;;		_command
 19009 ;; This function uses a non-reentrant model
 19010 ;;
 19011                           
 19012                           	psect	text102
 19013  0057A0                     __ptext102:
 19014                           	callstack 0
 19015  0057A0                     _wait_ready:
 19016                           	callstack 15
 19017                           
 19018                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19019                           
 19020                           ;incstack = 0
 19021  0057A0  0EFF               	movlw	255
 19022  0057A2  6E0A               	movwf	wait_ready@timeout^0,c
 19023  0057A4  0E7F               	movlw	127
 19024  0057A6  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19025  0057A8  0E00               	movlw	0
 19026  0057AA  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19027  0057AC  0E00               	movlw	0
 19028  0057AE  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19029  0057B0                     l10167:
 19030                           
 19031                           ;SDCard.c: 114: res = leitura_SPI();
 19032  0057B0  EC64  F02E         	call	_leitura_SPI	;wreg free
 19033  0057B4  6E0E               	movwf	wait_ready@res^0,c
 19034                           
 19035                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19036  0057B6  280E               	incf	wait_ready@res^0,w,c
 19037  0057B8  B4D8               	btfsc	status,2,c
 19038  0057BA  D00B               	goto	u11420
 19039  0057BC  060A               	decf	wait_ready@timeout^0,f,c
 19040  0057BE  0E00               	movlw	0
 19041  0057C0  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19042  0057C2  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19043  0057C4  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19044  0057C6  500A               	movf	wait_ready@timeout^0,w,c
 19045  0057C8  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19046  0057CA  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19047  0057CC  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19048  0057CE  A4D8               	btfss	status,2,c
 19049  0057D0  D7EF               	goto	l10167
 19050  0057D2                     u11420:
 19051                           
 19052                           ;SDCard.c: 117: return res;
 19053  0057D2  500E               	movf	wait_ready@res^0,w,c
 19054  0057D4  0012               	return		;funcret
 19055  0057D6                     __end_of_wait_ready:
 19056                           	callstack 0
 19057                           
 19058 ;; *************** function _escreve_SPI *****************
 19059 ;; Defined at:
 19060 ;;		line 105 in file "bibliotecas/SPI.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;  dado            1    wreg     unsigned char 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  dado            1   10[COMRAM] unsigned char 
 19065 ;;  TempVar         1    0        unsigned char 
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  1    wreg      void 
 19068 ;; Registers used:
 19069 ;;		wreg
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19075 ;;      Params:         0       0       0       0       0       0       0       0       0
 19076 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19078 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19079 ;;Total ram usage:        2 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:    2
 19082 ;; This function calls:
 19083 ;;		Nothing
 19084 ;; This function is called by:
 19085 ;;		_sdc_disk_write
 19086 ;;		_proceed
 19087 ;;		_command
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091                           	psect	text103
 19092  005C72                     __ptext103:
 19093                           	callstack 0
 19094  005C72                     _escreve_SPI:
 19095                           	callstack 16
 19096                           
 19097                           ;incstack = 0
 19098                           ;escreve_SPI@dado stored from wreg
 19099  005C72  6E0B               	movwf	escreve_SPI@dado^0,c
 19100  005C74  50C9               	movf	201,w,c	;volatile
 19101                           
 19102                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19103  005C76  969E               	bcf	158,3,c	;volatile
 19104                           
 19105                           ;SPI.c: 111: SSPBUF = dado;
 19106  005C78  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19107  005C7C                     l815:
 19108  005C7C  B69E               	btfsc	158,3,c	;volatile
 19109  005C7E  0012               	return	
 19110  005C80  D7FD               	goto	l815
 19111  005C82                     __end_of_escreve_SPI:
 19112                           	callstack 0
 19113                           
 19114 ;; *************** function _dummy_clocks *****************
 19115 ;; Defined at:
 19116 ;;		line 76 in file "bibliotecas/SDCard.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;  n               1    wreg     unsigned char 
 19119 ;; Auto vars:     Size  Location     Type
 19120 ;;  n               1   11[COMRAM] unsigned char 
 19121 ;;  i               2   12[COMRAM] unsigned int 
 19122 ;; Return value:  Size  Location     Type
 19123 ;;                  1    wreg      void 
 19124 ;; Registers used:
 19125 ;;		wreg, status,2, status,0, cstack
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19131 ;;      Params:         0       0       0       0       0       0       0       0       0
 19132 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19133 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19134 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19135 ;;Total ram usage:        5 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; Hardware stack levels required when called:    3
 19138 ;; This function calls:
 19139 ;;		_leitura_SPI
 19140 ;; This function is called by:
 19141 ;;		_sdc_disk_initialize
 19142 ;;		_sdc_disk_read
 19143 ;;		_sdc_disk_write
 19144 ;;		_command
 19145 ;; This function uses a non-reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text104
 19149  0056F2                     __ptext104:
 19150                           	callstack 0
 19151  0056F2                     _dummy_clocks:
 19152                           	callstack 16
 19153                           
 19154                           ;incstack = 0
 19155                           ;dummy_clocks@n stored from wreg
 19156  0056F2  6E0C               	movwf	dummy_clocks@n^0,c
 19157                           
 19158                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19159  0056F4  0E10               	movlw	16
 19160  0056F6  6E0A               	movwf	??_dummy_clocks^0,c
 19161  0056F8  0E94               	movlw	148
 19162  0056FA                     u16797:
 19163  0056FA  2EE8               	decfsz	wreg,f,c
 19164  0056FC  D7FE               	bra	u16797
 19165  0056FE  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19166  005700  D7FC               	bra	u16797
 19167  005702  D000               	nop2	
 19168                           
 19169                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19170  005704  0E00               	movlw	0
 19171  005706  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19172  005708  0E00               	movlw	0
 19173  00570A  6E0D               	movwf	dummy_clocks@i^0,c
 19174  00570C  D006               	goto	l10159
 19175  00570E                     l692:
 19176                           
 19177                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19178  00570E  8A8A               	bsf	138,5,c	;volatile
 19179                           
 19180                           ;SDCard.c: 83: leitura_SPI();
 19181  005710  EC64  F02E         	call	_leitura_SPI	;wreg free
 19182                           
 19183                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19184  005714  9A8A               	bcf	138,5,c	;volatile
 19185  005716  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19186  005718  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19187  00571A                     l10159:
 19188  00571A  500C               	movf	dummy_clocks@n^0,w,c
 19189  00571C  6E0A               	movwf	??_dummy_clocks^0,c
 19190  00571E  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19191  005720  500A               	movf	??_dummy_clocks^0,w,c
 19192  005722  5C0D               	subwf	dummy_clocks@i^0,w,c
 19193  005724  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19194  005726  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19195  005728  B0D8               	btfsc	status,0,c
 19196  00572A  0012               	return	
 19197  00572C  D7F0               	goto	l692
 19198  00572E                     __end_of_dummy_clocks:
 19199                           	callstack 0
 19200                           
 19201 ;; *************** function _leitura_SPI *****************
 19202 ;; Defined at:
 19203 ;;		line 90 in file "bibliotecas/SPI.c"
 19204 ;; Parameters:    Size  Location     Type
 19205 ;;		None
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;		None
 19208 ;; Return value:  Size  Location     Type
 19209 ;;                  1    wreg      unsigned char 
 19210 ;; Registers used:
 19211 ;;		wreg, status,2
 19212 ;; Tracked objects:
 19213 ;;		On entry : 0/0
 19214 ;;		On exit  : 0/0
 19215 ;;		Unchanged: 0/0
 19216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19217 ;;      Params:         0       0       0       0       0       0       0       0       0
 19218 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19219 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19220 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19221 ;;Total ram usage:        0 bytes
 19222 ;; Hardware stack levels used:    1
 19223 ;; Hardware stack levels required when called:    2
 19224 ;; This function calls:
 19225 ;;		Nothing
 19226 ;; This function is called by:
 19227 ;;		_sdc_disk_write
 19228 ;;		_response
 19229 ;;		_dummy_clocks
 19230 ;;		_wait_ready
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           	psect	text105
 19235  005CC8                     __ptext105:
 19236                           	callstack 0
 19237  005CC8                     _leitura_SPI:
 19238                           	callstack 16
 19239                           
 19240                           ;SPI.c: 92: SSPBUF = 0xFF;
 19241                           
 19242                           ;incstack = 0
 19243  005CC8  68C9               	setf	201,c	;volatile
 19244                           
 19245                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 19246  005CCA  90C7               	bcf	199,0,c	;volatile
 19247  005CCC                     l809:
 19248  005CCC  A0C7               	btfss	199,0,c	;volatile
 19249  005CCE  D7FE               	goto	l809
 19250                           
 19251                           ;SPI.c: 95: return (SSPBUF);
 19252  005CD0  50C9               	movf	201,w,c	;volatile
 19253  005CD2  0012               	return		;funcret
 19254  005CD4                     __end_of_leitura_SPI:
 19255                           	callstack 0
 19256                           
 19257 ;; *************** function _disk_ioctl *****************
 19258 ;; Defined at:
 19259 ;;		line 198 in file "bibliotecas/diskio.c"
 19260 ;; Parameters:    Size  Location     Type
 19261 ;;  pdrv            1    wreg     unsigned char 
 19262 ;;  cmd             1    9[COMRAM] unsigned char 
 19263 ;;  buff            2   10[COMRAM] PTR void 
 19264 ;;		 -> NULL(0), 
 19265 ;; Auto vars:     Size  Location     Type
 19266 ;;  pdrv            1   12[COMRAM] unsigned char 
 19267 ;;  result          2    0        int 
 19268 ;;  res             1   13[COMRAM] enum E25
 19269 ;; Return value:  Size  Location     Type
 19270 ;;                  1    wreg      enum E25
 19271 ;; Registers used:
 19272 ;;		wreg, status,2, status,0
 19273 ;; Tracked objects:
 19274 ;;		On entry : 0/0
 19275 ;;		On exit  : 0/0
 19276 ;;		Unchanged: 0/0
 19277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19278 ;;      Params:         3       0       0       0       0       0       0       0       0
 19279 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19280 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19281 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19282 ;;Total ram usage:        5 bytes
 19283 ;; Hardware stack levels used:    1
 19284 ;; Hardware stack levels required when called:    2
 19285 ;; This function calls:
 19286 ;;		Nothing
 19287 ;; This function is called by:
 19288 ;;		_sync
 19289 ;; This function uses a non-reentrant model
 19290 ;;
 19291                           
 19292                           	psect	text106
 19293  005B50                     __ptext106:
 19294                           	callstack 0
 19295  005B50                     _disk_ioctl:
 19296                           	callstack 21
 19297                           
 19298                           ;incstack = 0
 19299                           ;disk_ioctl@pdrv stored from wreg
 19300  005B50  6E0D               	movwf	disk_ioctl@pdrv^0,c
 19301                           
 19302                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 19303  005B52  D002               	goto	l11089
 19304  005B54                     l68:
 19305                           
 19306                           ;diskio.c: 212: return res;
 19307  005B54  500E               	movf	disk_ioctl@res^0,w,c
 19308  005B56  0012               	return	
 19309  005B58                     l11089:
 19310  005B58  500D               	movf	disk_ioctl@pdrv^0,w,c
 19311                           
 19312                           ; Switch size 1, requested type "simple"
 19313                           ; Number of cases is 3, Range of values is 0 to 2
 19314                           ; switch strategies available:
 19315                           ; Name         Instructions Cycles
 19316                           ; simple_byte           10     6 (average)
 19317                           ;	Chosen strategy is simple_byte
 19318  005B5A  0A00               	xorlw	0	; case 0
 19319  005B5C  B4D8               	btfsc	status,2,c
 19320  005B5E  D7FA               	goto	l68
 19321  005B60  0A01               	xorlw	1	; case 1
 19322  005B62  B4D8               	btfsc	status,2,c
 19323  005B64  D7F7               	goto	l68
 19324  005B66  0A03               	xorlw	3	; case 2
 19325  005B68  B4D8               	btfsc	status,2,c
 19326  005B6A  D7F4               	goto	l68
 19327                           
 19328                           ;diskio.c: 227: return RES_PARERR;
 19329  005B6C  0E04               	movlw	4
 19330  005B6E  0012               	return		;funcret
 19331  005B70                     __end_of_disk_ioctl:
 19332                           	callstack 0
 19333                           
 19334 ;; *************** function _get_fattime *****************
 19335 ;; Defined at:
 19336 ;;		line 810 in file "bibliotecas/tff.c"
 19337 ;; Parameters:    Size  Location     Type
 19338 ;;		None
 19339 ;; Auto vars:     Size  Location     Type
 19340 ;;  f_time         10   55[COMRAM] struct .
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  4   13[COMRAM] unsigned long 
 19343 ;; Registers used:
 19344 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19345 ;; Tracked objects:
 19346 ;;		On entry : 3F/0
 19347 ;;		On exit  : 3F/1
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19350 ;;      Params:         4       0       0       0       0       0       0       0       0
 19351 ;;      Locals:        10       0       0       0       0       0       0       0       0
 19352 ;;      Temps:         38       0       0       0       0       0       0       0       0
 19353 ;;      Totals:        52       0       0       0       0       0       0       0       0
 19354 ;;Total ram usage:       52 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; Hardware stack levels required when called:    3
 19357 ;; This function calls:
 19358 ;;		_gps_ano
 19359 ;;		_gps_dia
 19360 ;;		_gps_hora
 19361 ;;		_gps_mes
 19362 ;;		_gps_minutos
 19363 ;;		_gps_segundos
 19364 ;; This function is called by:
 19365 ;;		_f_open
 19366 ;;		_f_sync
 19367 ;; This function uses a non-reentrant model
 19368 ;;
 19369                           
 19370                           	psect	text107
 19371  003524                     __ptext107:
 19372                           	callstack 0
 19373  003524                     _get_fattime:
 19374                           	callstack 22
 19375                           
 19376                           ; BSR set to: 0
 19377                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 19378                           
 19379                           ;incstack = 0
 19380  003524  ECFF  F02C         	call	_gps_hora	;wreg free
 19381  003528  0EFD               	movlw	253
 19382  00352A  240A               	addwf	?_gps_hora^0,w,c
 19383  00352C  6E38               	movwf	get_fattime@f_time^0,c
 19384  00352E  0EFF               	movlw	255
 19385  003530  200B               	addwfc	(?_gps_hora+1)^0,w,c
 19386  003532  6E39               	movwf	(get_fattime@f_time+1)^0,c
 19387                           
 19388                           ;tff.c: 815: f_time.min = gps_minutos();
 19389  003534  EC44  F02D         	call	_gps_minutos	;wreg free
 19390  003538  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 19391  00353C  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 19392                           
 19393                           ;tff.c: 816: f_time.seg = gps_segundos();
 19394  003540  EC33  F02D         	call	_gps_segundos	;wreg free
 19395  003544  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 19396  003548  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 19397                           
 19398                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 19399  00354C  EC77  F02D         	call	_gps_ano	;wreg free
 19400  003550  0ED0               	movlw	208
 19401  003552  240A               	addwf	?_gps_ano^0,w,c
 19402  003554  6E40               	movwf	(get_fattime@f_time+8)^0,c
 19403  003556  0E07               	movlw	7
 19404  003558  200B               	addwfc	(?_gps_ano+1)^0,w,c
 19405  00355A  6E41               	movwf	(get_fattime@f_time+9)^0,c
 19406                           
 19407                           ;tff.c: 818: f_time.mes = gps_mes();
 19408  00355C  EC55  F02D         	call	_gps_mes	;wreg free
 19409  003560  500A               	movf	?_gps_mes^0,w,c
 19410  003562  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 19411                           
 19412                           ;tff.c: 819: f_time.dia = gps_dia();
 19413  003564  EC66  F02D         	call	_gps_dia	;wreg free
 19414  003568  500A               	movf	?_gps_dia^0,w,c
 19415  00356A  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 19419  00356C  90D8               	bcf	status,0,c
 19420  00356E  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 19421  003570  6E13               	movwf	(??_get_fattime+1)^0,c
 19422  003572  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 19423  003574  6E12               	movwf	??_get_fattime^0,c
 19424  003576  503A               	movf	(get_fattime@f_time+2)^0,w,c
 19425  003578  6E14               	movwf	(??_get_fattime+2)^0,c
 19426  00357A  503B               	movf	(get_fattime@f_time+3)^0,w,c
 19427  00357C  6E15               	movwf	(??_get_fattime+3)^0,c
 19428  00357E  6A16               	clrf	(??_get_fattime+4)^0,c
 19429  003580  6A17               	clrf	(??_get_fattime+5)^0,c
 19430  003582  0E05               	movlw	5
 19431  003584                     u13315:
 19432  003584  90D8               	bcf	status,0,c
 19433  003586  3614               	rlcf	(??_get_fattime+2)^0,f,c
 19434  003588  3615               	rlcf	(??_get_fattime+3)^0,f,c
 19435  00358A  3616               	rlcf	(??_get_fattime+4)^0,f,c
 19436  00358C  3617               	rlcf	(??_get_fattime+5)^0,f,c
 19437  00358E  2EE8               	decfsz	wreg,f,c
 19438  003590  D7F9               	goto	u13315
 19439  003592  5038               	movf	get_fattime@f_time^0,w,c
 19440  003594  6E18               	movwf	(??_get_fattime+6)^0,c
 19441  003596  5039               	movf	(get_fattime@f_time+1)^0,w,c
 19442  003598  6E19               	movwf	(??_get_fattime+7)^0,c
 19443  00359A  6A1A               	clrf	(??_get_fattime+8)^0,c
 19444  00359C  6A1B               	clrf	(??_get_fattime+9)^0,c
 19445  00359E  0E0B               	movlw	11
 19446  0035A0                     u13325:
 19447  0035A0  90D8               	bcf	status,0,c
 19448  0035A2  3618               	rlcf	(??_get_fattime+6)^0,f,c
 19449  0035A4  3619               	rlcf	(??_get_fattime+7)^0,f,c
 19450  0035A6  361A               	rlcf	(??_get_fattime+8)^0,f,c
 19451  0035A8  361B               	rlcf	(??_get_fattime+9)^0,f,c
 19452  0035AA  2EE8               	decfsz	wreg,f,c
 19453  0035AC  D7F9               	goto	u13325
 19454  0035AE  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 19455  0035B2  6A1D               	clrf	(??_get_fattime+11)^0,c
 19456  0035B4  6A1E               	clrf	(??_get_fattime+12)^0,c
 19457  0035B6  6A1F               	clrf	(??_get_fattime+13)^0,c
 19458  0035B8  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 19459  0035BC  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 19460  0035C0  6A1D               	clrf	(??_get_fattime+11)^0,c
 19461  0035C2  6A1C               	clrf	(??_get_fattime+10)^0,c
 19462  0035C4  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 19463  0035C8  6A21               	clrf	(??_get_fattime+15)^0,c
 19464  0035CA  6A22               	clrf	(??_get_fattime+16)^0,c
 19465  0035CC  6A23               	clrf	(??_get_fattime+17)^0,c
 19466  0035CE  0E15               	movlw	21
 19467  0035D0                     u13335:
 19468  0035D0  90D8               	bcf	status,0,c
 19469  0035D2  3620               	rlcf	(??_get_fattime+14)^0,f,c
 19470  0035D4  3621               	rlcf	(??_get_fattime+15)^0,f,c
 19471  0035D6  3622               	rlcf	(??_get_fattime+16)^0,f,c
 19472  0035D8  3623               	rlcf	(??_get_fattime+17)^0,f,c
 19473  0035DA  2EE8               	decfsz	wreg,f,c
 19474  0035DC  D7F9               	goto	u13335
 19475  0035DE  0EC4               	movlw	196
 19476  0035E0  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 19477  0035E2  6E24               	movwf	(??_get_fattime+18)^0,c
 19478  0035E4  0EFF               	movlw	255
 19479  0035E6  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 19480  0035E8  6E25               	movwf	(??_get_fattime+19)^0,c
 19481  0035EA  6A26               	clrf	(??_get_fattime+20)^0,c
 19482  0035EC  6A27               	clrf	(??_get_fattime+21)^0,c
 19483  0035EE  0E19               	movlw	25
 19484  0035F0                     u13345:
 19485  0035F0  90D8               	bcf	status,0,c
 19486  0035F2  3624               	rlcf	(??_get_fattime+18)^0,f,c
 19487  0035F4  3625               	rlcf	(??_get_fattime+19)^0,f,c
 19488  0035F6  3626               	rlcf	(??_get_fattime+20)^0,f,c
 19489  0035F8  3627               	rlcf	(??_get_fattime+21)^0,f,c
 19490  0035FA  2EE8               	decfsz	wreg,f,c
 19491  0035FC  D7F9               	goto	u13345
 19492  0035FE  5020               	movf	(??_get_fattime+14)^0,w,c
 19493  003600  1024               	iorwf	(??_get_fattime+18)^0,w,c
 19494  003602  6E28               	movwf	(??_get_fattime+22)^0,c
 19495  003604  5021               	movf	(??_get_fattime+15)^0,w,c
 19496  003606  1025               	iorwf	(??_get_fattime+19)^0,w,c
 19497  003608  6E29               	movwf	(??_get_fattime+23)^0,c
 19498  00360A  5022               	movf	(??_get_fattime+16)^0,w,c
 19499  00360C  1026               	iorwf	(??_get_fattime+20)^0,w,c
 19500  00360E  6E2A               	movwf	(??_get_fattime+24)^0,c
 19501  003610  5023               	movf	(??_get_fattime+17)^0,w,c
 19502  003612  1027               	iorwf	(??_get_fattime+21)^0,w,c
 19503  003614  6E2B               	movwf	(??_get_fattime+25)^0,c
 19504  003616  501C               	movf	(??_get_fattime+10)^0,w,c
 19505  003618  1028               	iorwf	(??_get_fattime+22)^0,w,c
 19506  00361A  6E2C               	movwf	(??_get_fattime+26)^0,c
 19507  00361C  501D               	movf	(??_get_fattime+11)^0,w,c
 19508  00361E  1029               	iorwf	(??_get_fattime+23)^0,w,c
 19509  003620  6E2D               	movwf	(??_get_fattime+27)^0,c
 19510  003622  501E               	movf	(??_get_fattime+12)^0,w,c
 19511  003624  102A               	iorwf	(??_get_fattime+24)^0,w,c
 19512  003626  6E2E               	movwf	(??_get_fattime+28)^0,c
 19513  003628  501F               	movf	(??_get_fattime+13)^0,w,c
 19514  00362A  102B               	iorwf	(??_get_fattime+25)^0,w,c
 19515  00362C  6E2F               	movwf	(??_get_fattime+29)^0,c
 19516  00362E  5018               	movf	(??_get_fattime+6)^0,w,c
 19517  003630  102C               	iorwf	(??_get_fattime+26)^0,w,c
 19518  003632  6E30               	movwf	(??_get_fattime+30)^0,c
 19519  003634  5019               	movf	(??_get_fattime+7)^0,w,c
 19520  003636  102D               	iorwf	(??_get_fattime+27)^0,w,c
 19521  003638  6E31               	movwf	(??_get_fattime+31)^0,c
 19522  00363A  501A               	movf	(??_get_fattime+8)^0,w,c
 19523  00363C  102E               	iorwf	(??_get_fattime+28)^0,w,c
 19524  00363E  6E32               	movwf	(??_get_fattime+32)^0,c
 19525  003640  501B               	movf	(??_get_fattime+9)^0,w,c
 19526  003642  102F               	iorwf	(??_get_fattime+29)^0,w,c
 19527  003644  6E33               	movwf	(??_get_fattime+33)^0,c
 19528  003646  5014               	movf	(??_get_fattime+2)^0,w,c
 19529  003648  1030               	iorwf	(??_get_fattime+30)^0,w,c
 19530  00364A  6E34               	movwf	(??_get_fattime+34)^0,c
 19531  00364C  5015               	movf	(??_get_fattime+3)^0,w,c
 19532  00364E  1031               	iorwf	(??_get_fattime+31)^0,w,c
 19533  003650  6E35               	movwf	(??_get_fattime+35)^0,c
 19534  003652  5016               	movf	(??_get_fattime+4)^0,w,c
 19535  003654  1032               	iorwf	(??_get_fattime+32)^0,w,c
 19536  003656  6E36               	movwf	(??_get_fattime+36)^0,c
 19537  003658  5017               	movf	(??_get_fattime+5)^0,w,c
 19538  00365A  1033               	iorwf	(??_get_fattime+33)^0,w,c
 19539  00365C  6E37               	movwf	(??_get_fattime+37)^0,c
 19540  00365E  5012               	movf	??_get_fattime^0,w,c
 19541  003660  1034               	iorwf	(??_get_fattime+34)^0,w,c
 19542  003662  6E0E               	movwf	?_get_fattime^0,c
 19543  003664  5013               	movf	(??_get_fattime+1)^0,w,c
 19544  003666  1035               	iorwf	(??_get_fattime+35)^0,w,c
 19545  003668  6E0F               	movwf	(?_get_fattime+1)^0,c
 19546  00366A  0E00               	movlw	0
 19547  00366C  1036               	iorwf	(??_get_fattime+36)^0,w,c
 19548  00366E  6E10               	movwf	(?_get_fattime+2)^0,c
 19549  003670  0E00               	movlw	0
 19550  003672  1037               	iorwf	(??_get_fattime+37)^0,w,c
 19551  003674  6E11               	movwf	(?_get_fattime+3)^0,c
 19552                           
 19553                           ; BSR set to: 1
 19554  003676  0012               	return		;funcret
 19555  003678                     __end_of_get_fattime:
 19556                           	callstack 0
 19557                           
 19558 ;; *************** function _gps_segundos *****************
 19559 ;; Defined at:
 19560 ;;		line 545 in file "bibliotecas/GPS.c"
 19561 ;; Parameters:    Size  Location     Type
 19562 ;;		None
 19563 ;; Auto vars:     Size  Location     Type
 19564 ;;		None
 19565 ;; Return value:  Size  Location     Type
 19566 ;;                  2    9[COMRAM] unsigned int 
 19567 ;; Registers used:
 19568 ;;		wreg, status,2, status,0, prodl, prodh
 19569 ;; Tracked objects:
 19570 ;;		On entry : 3F/1
 19571 ;;		On exit  : 3F/1
 19572 ;;		Unchanged: 0/0
 19573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19574 ;;      Params:         2       0       0       0       0       0       0       0       0
 19575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19576 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19577 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19578 ;;Total ram usage:        4 bytes
 19579 ;; Hardware stack levels used:    1
 19580 ;; Hardware stack levels required when called:    2
 19581 ;; This function calls:
 19582 ;;		Nothing
 19583 ;; This function is called by:
 19584 ;;		_get_fattime
 19585 ;; This function uses a non-reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text108
 19589  005A66                     __ptext108:
 19590                           	callstack 0
 19591  005A66                     _gps_segundos:
 19592                           	callstack 22
 19593                           
 19594                           ; BSR set to: 1
 19595                           ;GPS.c: 547: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;incstack = 0
 19599  005A66  51CD               	movf	(_rawTime+4)& (0+255),w,b
 19600  005A68  0D0A               	mullw	10
 19601  005A6A  CFF3 F00C          	movff	prodl,??_gps_segundos
 19602  005A6E  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 19603  005A72  51CE               	movf	(_rawTime+5)& (0+255),w,b
 19604  005A74  260C               	addwf	??_gps_segundos^0,f,c
 19605  005A76  0E00               	movlw	0
 19606  005A78  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 19607  005A7A  0EF0               	movlw	240
 19608  005A7C  240C               	addwf	??_gps_segundos^0,w,c
 19609  005A7E  6E0A               	movwf	?_gps_segundos^0,c
 19610  005A80  0EFD               	movlw	253
 19611  005A82  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 19612  005A84  6E0B               	movwf	(?_gps_segundos+1)^0,c
 19613                           
 19614                           ; BSR set to: 1
 19615  005A86  0012               	return		;funcret
 19616  005A88                     __end_of_gps_segundos:
 19617                           	callstack 0
 19618                           
 19619 ;; *************** function _gps_minutos *****************
 19620 ;; Defined at:
 19621 ;;		line 556 in file "bibliotecas/GPS.c"
 19622 ;; Parameters:    Size  Location     Type
 19623 ;;		None
 19624 ;; Auto vars:     Size  Location     Type
 19625 ;;		None
 19626 ;; Return value:  Size  Location     Type
 19627 ;;                  2    9[COMRAM] unsigned int 
 19628 ;; Registers used:
 19629 ;;		wreg, status,2, status,0, prodl, prodh
 19630 ;; Tracked objects:
 19631 ;;		On entry : 3F/1
 19632 ;;		On exit  : 3F/1
 19633 ;;		Unchanged: 0/0
 19634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19635 ;;      Params:         2       0       0       0       0       0       0       0       0
 19636 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19637 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19638 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19639 ;;Total ram usage:        4 bytes
 19640 ;; Hardware stack levels used:    1
 19641 ;; Hardware stack levels required when called:    2
 19642 ;; This function calls:
 19643 ;;		Nothing
 19644 ;; This function is called by:
 19645 ;;		_get_fattime
 19646 ;; This function uses a non-reentrant model
 19647 ;;
 19648                           
 19649                           	psect	text109
 19650  005A88                     __ptext109:
 19651                           	callstack 0
 19652  005A88                     _gps_minutos:
 19653                           	callstack 22
 19654                           
 19655                           ; BSR set to: 1
 19656                           ;GPS.c: 558: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 19657                           
 19658                           ; BSR set to: 1
 19659                           ;incstack = 0
 19660  005A88  51CB               	movf	(_rawTime+2)& (0+255),w,b
 19661  005A8A  0D0A               	mullw	10
 19662  005A8C  CFF3 F00C          	movff	prodl,??_gps_minutos
 19663  005A90  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 19664  005A94  51CC               	movf	(_rawTime+3)& (0+255),w,b
 19665  005A96  260C               	addwf	??_gps_minutos^0,f,c
 19666  005A98  0E00               	movlw	0
 19667  005A9A  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 19668  005A9C  0EF0               	movlw	240
 19669  005A9E  240C               	addwf	??_gps_minutos^0,w,c
 19670  005AA0  6E0A               	movwf	?_gps_minutos^0,c
 19671  005AA2  0EFD               	movlw	253
 19672  005AA4  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 19673  005AA6  6E0B               	movwf	(?_gps_minutos+1)^0,c
 19674                           
 19675                           ; BSR set to: 1
 19676  005AA8  0012               	return		;funcret
 19677  005AAA                     __end_of_gps_minutos:
 19678                           	callstack 0
 19679                           
 19680 ;; *************** function _gps_mes *****************
 19681 ;; Defined at:
 19682 ;;		line 593 in file "bibliotecas/GPS.c"
 19683 ;; Parameters:    Size  Location     Type
 19684 ;;		None
 19685 ;; Auto vars:     Size  Location     Type
 19686 ;;		None
 19687 ;; Return value:  Size  Location     Type
 19688 ;;                  2    9[COMRAM] unsigned int 
 19689 ;; Registers used:
 19690 ;;		wreg, status,2, status,0, prodl, prodh
 19691 ;; Tracked objects:
 19692 ;;		On entry : 3F/1
 19693 ;;		On exit  : 3F/1
 19694 ;;		Unchanged: 0/0
 19695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19696 ;;      Params:         2       0       0       0       0       0       0       0       0
 19697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19698 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19699 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19700 ;;Total ram usage:        4 bytes
 19701 ;; Hardware stack levels used:    1
 19702 ;; Hardware stack levels required when called:    2
 19703 ;; This function calls:
 19704 ;;		Nothing
 19705 ;; This function is called by:
 19706 ;;		_get_fattime
 19707 ;; This function uses a non-reentrant model
 19708 ;;
 19709                           
 19710                           	psect	text110
 19711  005AAA                     __ptext110:
 19712                           	callstack 0
 19713  005AAA                     _gps_mes:
 19714                           	callstack 22
 19715                           
 19716                           ; BSR set to: 1
 19717                           ;GPS.c: 595: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 19718                           
 19719                           ; BSR set to: 1
 19720                           ;incstack = 0
 19721  005AAA  51E4               	movf	(_rawDate+2)& (0+255),w,b
 19722  005AAC  0D0A               	mullw	10
 19723  005AAE  CFF3 F00C          	movff	prodl,??_gps_mes
 19724  005AB2  CFF4 F00D          	movff	prodh,??_gps_mes+1
 19725  005AB6  51E5               	movf	(_rawDate+3)& (0+255),w,b
 19726  005AB8  260C               	addwf	??_gps_mes^0,f,c
 19727  005ABA  0E00               	movlw	0
 19728  005ABC  220D               	addwfc	(??_gps_mes+1)^0,f,c
 19729  005ABE  0EF0               	movlw	240
 19730  005AC0  240C               	addwf	??_gps_mes^0,w,c
 19731  005AC2  6E0A               	movwf	?_gps_mes^0,c
 19732  005AC4  0EFD               	movlw	253
 19733  005AC6  200D               	addwfc	(??_gps_mes+1)^0,w,c
 19734  005AC8  6E0B               	movwf	(?_gps_mes+1)^0,c
 19735                           
 19736                           ; BSR set to: 1
 19737  005ACA  0012               	return		;funcret
 19738  005ACC                     __end_of_gps_mes:
 19739                           	callstack 0
 19740                           
 19741 ;; *************** function _gps_hora *****************
 19742 ;; Defined at:
 19743 ;;		line 568 in file "bibliotecas/GPS.c"
 19744 ;; Parameters:    Size  Location     Type
 19745 ;;		None
 19746 ;; Auto vars:     Size  Location     Type
 19747 ;;		None
 19748 ;; Return value:  Size  Location     Type
 19749 ;;                  2    9[COMRAM] unsigned int 
 19750 ;; Registers used:
 19751 ;;		wreg, status,2, status,0, prodl, prodh
 19752 ;; Tracked objects:
 19753 ;;		On entry : 3F/0
 19754 ;;		On exit  : 3F/1
 19755 ;;		Unchanged: 0/0
 19756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19757 ;;      Params:         2       0       0       0       0       0       0       0       0
 19758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19759 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19760 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19761 ;;Total ram usage:        4 bytes
 19762 ;; Hardware stack levels used:    1
 19763 ;; Hardware stack levels required when called:    2
 19764 ;; This function calls:
 19765 ;;		Nothing
 19766 ;; This function is called by:
 19767 ;;		_get_fattime
 19768 ;; This function uses a non-reentrant model
 19769 ;;
 19770                           
 19771                           	psect	text111
 19772  0059FE                     __ptext111:
 19773                           	callstack 0
 19774  0059FE                     _gps_hora:
 19775                           	callstack 22
 19776                           
 19777                           ; BSR set to: 0
 19778                           ;GPS.c: 570: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 19779                           
 19780                           ; BSR set to: 1
 19781                           ;incstack = 0
 19782  0059FE  0101               	movlb	1	; () banked
 19783  005A00  51C9               	movf	_rawTime& (0+255),w,b
 19784  005A02  0D0A               	mullw	10
 19785  005A04  CFF3 F00C          	movff	prodl,??_gps_hora
 19786  005A08  CFF4 F00D          	movff	prodh,??_gps_hora+1
 19787  005A0C  51CA               	movf	(_rawTime+1)& (0+255),w,b
 19788  005A0E  260C               	addwf	??_gps_hora^0,f,c
 19789  005A10  0E00               	movlw	0
 19790  005A12  220D               	addwfc	(??_gps_hora+1)^0,f,c
 19791  005A14  0EF0               	movlw	240
 19792  005A16  240C               	addwf	??_gps_hora^0,w,c
 19793  005A18  6E0A               	movwf	?_gps_hora^0,c
 19794  005A1A  0EFD               	movlw	253
 19795  005A1C  200D               	addwfc	(??_gps_hora+1)^0,w,c
 19796  005A1E  6E0B               	movwf	(?_gps_hora+1)^0,c
 19797                           
 19798                           ; BSR set to: 1
 19799  005A20  0012               	return		;funcret
 19800  005A22                     __end_of_gps_hora:
 19801                           	callstack 0
 19802                           
 19803 ;; *************** function _gps_dia *****************
 19804 ;; Defined at:
 19805 ;;		line 580 in file "bibliotecas/GPS.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;		None
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  2    9[COMRAM] unsigned int 
 19812 ;; Registers used:
 19813 ;;		wreg, status,2, status,0, prodl, prodh
 19814 ;; Tracked objects:
 19815 ;;		On entry : 3F/1
 19816 ;;		On exit  : 3F/1
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19819 ;;      Params:         2       0       0       0       0       0       0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19821 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19822 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19823 ;;Total ram usage:        4 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:    2
 19826 ;; This function calls:
 19827 ;;		Nothing
 19828 ;; This function is called by:
 19829 ;;		_get_fattime
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           	psect	text112
 19834  005ACC                     __ptext112:
 19835                           	callstack 0
 19836  005ACC                     _gps_dia:
 19837                           	callstack 22
 19838                           
 19839                           ; BSR set to: 1
 19840                           ;GPS.c: 582: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 19841                           
 19842                           ; BSR set to: 1
 19843                           ;incstack = 0
 19844  005ACC  51E2               	movf	_rawDate& (0+255),w,b
 19845  005ACE  0D0A               	mullw	10
 19846  005AD0  CFF3 F00C          	movff	prodl,??_gps_dia
 19847  005AD4  CFF4 F00D          	movff	prodh,??_gps_dia+1
 19848  005AD8  51E3               	movf	(_rawDate+1)& (0+255),w,b
 19849  005ADA  260C               	addwf	??_gps_dia^0,f,c
 19850  005ADC  0E00               	movlw	0
 19851  005ADE  220D               	addwfc	(??_gps_dia+1)^0,f,c
 19852  005AE0  0EF0               	movlw	240
 19853  005AE2  240C               	addwf	??_gps_dia^0,w,c
 19854  005AE4  6E0A               	movwf	?_gps_dia^0,c
 19855  005AE6  0EFD               	movlw	253
 19856  005AE8  200D               	addwfc	(??_gps_dia+1)^0,w,c
 19857  005AEA  6E0B               	movwf	(?_gps_dia+1)^0,c
 19858                           
 19859                           ; BSR set to: 1
 19860  005AEC  0012               	return		;funcret
 19861  005AEE                     __end_of_gps_dia:
 19862                           	callstack 0
 19863                           
 19864 ;; *************** function _gps_ano *****************
 19865 ;; Defined at:
 19866 ;;		line 605 in file "bibliotecas/GPS.c"
 19867 ;; Parameters:    Size  Location     Type
 19868 ;;		None
 19869 ;; Auto vars:     Size  Location     Type
 19870 ;;		None
 19871 ;; Return value:  Size  Location     Type
 19872 ;;                  2    9[COMRAM] unsigned int 
 19873 ;; Registers used:
 19874 ;;		wreg, status,2, status,0, prodl, prodh
 19875 ;; Tracked objects:
 19876 ;;		On entry : 3F/1
 19877 ;;		On exit  : 3F/1
 19878 ;;		Unchanged: 0/0
 19879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19880 ;;      Params:         2       0       0       0       0       0       0       0       0
 19881 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19882 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19883 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19884 ;;Total ram usage:        4 bytes
 19885 ;; Hardware stack levels used:    1
 19886 ;; Hardware stack levels required when called:    2
 19887 ;; This function calls:
 19888 ;;		Nothing
 19889 ;; This function is called by:
 19890 ;;		_get_fattime
 19891 ;; This function uses a non-reentrant model
 19892 ;;
 19893                           
 19894                           	psect	text113
 19895  005AEE                     __ptext113:
 19896                           	callstack 0
 19897  005AEE                     _gps_ano:
 19898                           	callstack 22
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;GPS.c: 607: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 19902                           
 19903                           ; BSR set to: 1
 19904                           ;incstack = 0
 19905  005AEE  51E6               	movf	(_rawDate+4)& (0+255),w,b
 19906  005AF0  0D0A               	mullw	10
 19907  005AF2  CFF3 F00C          	movff	prodl,??_gps_ano
 19908  005AF6  CFF4 F00D          	movff	prodh,??_gps_ano+1
 19909  005AFA  51E7               	movf	(_rawDate+5)& (0+255),w,b
 19910  005AFC  260C               	addwf	??_gps_ano^0,f,c
 19911  005AFE  0E00               	movlw	0
 19912  005B00  220D               	addwfc	(??_gps_ano+1)^0,f,c
 19913  005B02  0EF0               	movlw	240
 19914  005B04  240C               	addwf	??_gps_ano^0,w,c
 19915  005B06  6E0A               	movwf	?_gps_ano^0,c
 19916  005B08  0EFD               	movlw	253
 19917  005B0A  200D               	addwfc	(??_gps_ano+1)^0,w,c
 19918  005B0C  6E0B               	movwf	(?_gps_ano+1)^0,c
 19919                           
 19920                           ; BSR set to: 1
 19921  005B0E  0012               	return		;funcret
 19922  005B10                     __end_of_gps_ano:
 19923                           	callstack 0
 19924                           
 19925 ;; *************** function _data_nome *****************
 19926 ;; Defined at:
 19927 ;;		line 402 in file "bibliotecas/SDCard.c"
 19928 ;; Parameters:    Size  Location     Type
 19929 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 19930 ;;		 -> data(6), 
 19931 ;; Auto vars:     Size  Location     Type
 19932 ;;  i               1   11[COMRAM] unsigned char 
 19933 ;; Return value:  Size  Location     Type
 19934 ;;                  1    wreg      void 
 19935 ;; Registers used:
 19936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19937 ;; Tracked objects:
 19938 ;;		On entry : 3F/1
 19939 ;;		On exit  : 3F/1
 19940 ;;		Unchanged: 3F/0
 19941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19942 ;;      Params:         2       0       0       0       0       0       0       0       0
 19943 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19944 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19945 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19946 ;;Total ram usage:        3 bytes
 19947 ;; Hardware stack levels used:    1
 19948 ;; Hardware stack levels required when called:    2
 19949 ;; This function calls:
 19950 ;;		Nothing
 19951 ;; This function is called by:
 19952 ;;		_escrita_sdcard
 19953 ;; This function uses a non-reentrant model
 19954 ;;
 19955                           
 19956                           	psect	text114
 19957  00593C                     __ptext114:
 19958                           	callstack 0
 19959  00593C                     _data_nome:
 19960                           	callstack 24
 19961                           
 19962                           ; BSR set to: 1
 19963                           ;SDCard.c: 404: unsigned char i;;SDCard.c: 405: for(i=0; i<4;i++)
 19964                           
 19965                           ; BSR set to: 1
 19966                           ;incstack = 0
 19967  00593C  0E00               	movlw	0
 19968  00593E  6E0C               	movwf	data_nome@i^0,c
 19969  005940                     l12249:
 19970                           
 19971                           ; BSR set to: 1
 19972                           ;SDCard.c: 406: {;SDCard.c: 407: filename[i] = *p_buff;
 19973  005940  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 19974  005944  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 19975  005948  0E65               	movlw	low _filename
 19976  00594A  240C               	addwf	data_nome@i^0,w,c
 19977  00594C  6EE1               	movwf	fsr1l,c
 19978  00594E  6AE2               	clrf	fsr1h,c
 19979  005950  0E02               	movlw	high _filename
 19980  005952  22E2               	addwfc	fsr1h,f,c
 19981  005954  CFDF FFE7          	movff	indf2,indf1
 19982                           
 19983                           ; BSR set to: 1
 19984                           ;SDCard.c: 408: p_buff++;
 19985  005958  4A0A               	infsnz	data_nome@p_buff^0,f,c
 19986  00595A  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 19987                           
 19988                           ; BSR set to: 1
 19989  00595C  2A0C               	incf	data_nome@i^0,f,c
 19990                           
 19991                           ; BSR set to: 1
 19992  00595E  0E03               	movlw	3
 19993  005960  640C               	cpfsgt	data_nome@i^0,c
 19994  005962  D7EE               	goto	l12249
 19995  005964  0012               	return	
 19996  005966                     __end_of_data_nome:
 19997                           	callstack 0
 19998                           
 19999 ;; *************** function _desliga_uart *****************
 20000 ;; Defined at:
 20001 ;;		line 223 in file "bibliotecas/uart.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;		None
 20004 ;; Auto vars:     Size  Location     Type
 20005 ;;		None
 20006 ;; Return value:  Size  Location     Type
 20007 ;;                  1    wreg      void 
 20008 ;; Registers used:
 20009 ;;		wreg, status,2
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/1
 20012 ;;		On exit  : 0/0
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0
 20016 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20018 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20019 ;;Total ram usage:        0 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; Hardware stack levels required when called:    2
 20022 ;; This function calls:
 20023 ;;		Nothing
 20024 ;; This function is called by:
 20025 ;;		_grava_sd
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           	psect	text115
 20030  005C3E                     __ptext115:
 20031                           	callstack 0
 20032  005C3E                     _desliga_uart:
 20033                           	callstack 25
 20034                           
 20035                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20036                           
 20037                           ; BSR set to: 1
 20038                           ;incstack = 0
 20039  005C3E  8C94               	bsf	148,6,c	;volatile
 20040                           
 20041                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20042  005C40  8E94               	bsf	148,7,c	;volatile
 20043                           
 20044                           ;uart.c: 230: TXSTA = 0x00;
 20045  005C42  0E00               	movlw	0
 20046  005C44  6EAC               	movwf	172,c	;volatile
 20047                           
 20048                           ;uart.c: 232: RCSTA = 0x00;
 20049  005C46  0E00               	movlw	0
 20050  005C48  6EAB               	movwf	171,c	;volatile
 20051                           
 20052                           ;uart.c: 233: RCREG = 0x00;
 20053  005C4A  0E00               	movlw	0
 20054  005C4C  6EAE               	movwf	174,c	;volatile
 20055  005C4E  0012               	return		;funcret
 20056  005C50                     __end_of_desliga_uart:
 20057                           	callstack 0
 20058                           
 20059 ;; *************** function _desliga_SPI *****************
 20060 ;; Defined at:
 20061 ;;		line 75 in file "bibliotecas/SPI.c"
 20062 ;; Parameters:    Size  Location     Type
 20063 ;;		None
 20064 ;; Auto vars:     Size  Location     Type
 20065 ;;		None
 20066 ;; Return value:  Size  Location     Type
 20067 ;;                  1    wreg      void 
 20068 ;; Registers used:
 20069 ;;		wreg, status,2
 20070 ;; Tracked objects:
 20071 ;;		On entry : 0/1
 20072 ;;		On exit  : 0/0
 20073 ;;		Unchanged: 0/0
 20074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20075 ;;      Params:         0       0       0       0       0       0       0       0       0
 20076 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20078 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20079 ;;Total ram usage:        0 bytes
 20080 ;; Hardware stack levels used:    1
 20081 ;; Hardware stack levels required when called:    2
 20082 ;; This function calls:
 20083 ;;		Nothing
 20084 ;; This function is called by:
 20085 ;;		_grava_sd
 20086 ;; This function uses a non-reentrant model
 20087 ;;
 20088                           
 20089                           	psect	text116
 20090  005C82                     __ptext116:
 20091                           	callstack 0
 20092  005C82                     _desliga_SPI:
 20093                           	callstack 25
 20094                           
 20095                           ;SPI.c: 77: SSPSTAT = 0x00;
 20096                           
 20097                           ;incstack = 0
 20098  005C82  0E00               	movlw	0
 20099  005C84  6EC7               	movwf	199,c	;volatile
 20100                           
 20101                           ;SPI.c: 78: SSPCON1 = 0x00;
 20102  005C86  0E00               	movlw	0
 20103  005C88  6EC6               	movwf	198,c	;volatile
 20104                           
 20105                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20106  005C8A  9AC6               	bcf	198,5,c	;volatile
 20107                           
 20108                           ;SPI.c: 80: SSPBUF = 0x00;
 20109  005C8C  0E00               	movlw	0
 20110  005C8E  6EC9               	movwf	201,c	;volatile
 20111  005C90  0012               	return		;funcret
 20112  005C92                     __end_of_desliga_SPI:
 20113                           	callstack 0
 20114                           
 20115 ;; *************** function _fix *****************
 20116 ;; Defined at:
 20117 ;;		line 694 in file "bibliotecas/GPS.c"
 20118 ;; Parameters:    Size  Location     Type
 20119 ;;		None
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;		None
 20122 ;; Return value:  Size  Location     Type
 20123 ;;                  2    9[COMRAM] PTR unsigned char 
 20124 ;; Registers used:
 20125 ;;		wreg, status,2, status,0
 20126 ;; Tracked objects:
 20127 ;;		On entry : 0/1
 20128 ;;		On exit  : 0/0
 20129 ;;		Unchanged: 0/0
 20130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20131 ;;      Params:         2       0       0       0       0       0       0       0       0
 20132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20134 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20135 ;;Total ram usage:        2 bytes
 20136 ;; Hardware stack levels used:    1
 20137 ;; Hardware stack levels required when called:    2
 20138 ;; This function calls:
 20139 ;;		Nothing
 20140 ;; This function is called by:
 20141 ;;		_disparo_gravacao
 20142 ;;		_troca_de_tela
 20143 ;; This function uses a non-reentrant model
 20144 ;;
 20145                           
 20146                           	psect	text117
 20147  005D10                     __ptext117:
 20148                           	callstack 0
 20149  005D10                     _fix:
 20150                           	callstack 26
 20151                           
 20152                           ;GPS.c: 696: return rawFix;
 20153                           
 20154                           ;incstack = 0
 20155  005D10  0EE8               	movlw	low _rawFix
 20156  005D12  6E0A               	movwf	?_fix^0,c
 20157  005D14  0E01               	movlw	high _rawFix
 20158  005D16  6E0B               	movwf	(?_fix+1)^0,c
 20159  005D18  0012               	return		;funcret
 20160  005D1A                     __end_of_fix:
 20161                           	callstack 0
 20162                           
 20163 ;; *************** function _escreve_inteiro_lcd *****************
 20164 ;; Defined at:
 20165 ;;		line 376 in file "bibliotecas/display_lcd.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;  valor           4   42[COMRAM] long 
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;  texto           7   46[COMRAM] unsigned char [7]
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  1    wreg      void 
 20172 ;; Registers used:
 20173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/1
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20179 ;;      Params:         4       0       0       0       0       0       0       0       0
 20180 ;;      Locals:         7       0       0       0       0       0       0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20182 ;;      Totals:        11       0       0       0       0       0       0       0       0
 20183 ;;Total ram usage:       11 bytes
 20184 ;; Hardware stack levels used:    1
 20185 ;; Hardware stack levels required when called:    5
 20186 ;; This function calls:
 20187 ;;		_escreve_frase_ram_lcd
 20188 ;;		_ltoa
 20189 ;; This function is called by:
 20190 ;;		_disparo_gravacao
 20191 ;;		_troca_de_tela
 20192 ;; This function uses a non-reentrant model
 20193 ;;
 20194                           
 20195                           	psect	text118
 20196  0056B4                     __ptext118:
 20197                           	callstack 0
 20198  0056B4                     _escreve_inteiro_lcd:
 20199                           	callstack 23
 20200                           
 20201                           ;display_lcd.c: 378: char texto[7] = "000000";
 20202                           
 20203                           ;incstack = 0
 20204  0056B4  EE21  F0F1         	lfsr	2,escreve_inteiro_lcd@F3223
 20205  0056B8  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
 20206  0056BC  0E06               	movlw	6
 20207  0056BE                     u15911:
 20208  0056BE  CFDB FFE3          	movff	plusw2,plusw1
 20209  0056C2  06E8               	decf	wreg,f,c
 20210  0056C4  E2FC               	bc	u15911
 20211                           
 20212                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
 20213  0056C6  0E2F               	movlw	low escreve_inteiro_lcd@texto
 20214  0056C8  6E23               	movwf	ltoa@buf^0,c
 20215  0056CA  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
 20216  0056CE  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
 20217  0056D2  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
 20218  0056D6  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
 20219  0056DA  0E00               	movlw	0
 20220  0056DC  6E29               	movwf	(ltoa@base+1)^0,c
 20221  0056DE  0E0A               	movlw	10
 20222  0056E0  6E28               	movwf	ltoa@base^0,c
 20223  0056E2  ECB8  F02A         	call	_ltoa	;wreg free
 20224                           
 20225                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
 20226  0056E6  0E2F               	movlw	low escreve_inteiro_lcd@texto
 20227  0056E8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 20228  0056EA  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
 20229  0056EC  EC70  F029         	call	_escreve_frase_ram_lcd	;wreg free
 20230  0056F0  0012               	return		;funcret
 20231  0056F2                     __end_of_escreve_inteiro_lcd:
 20232                           	callstack 0
 20233                           
 20234 ;; *************** function _ltoa *****************
 20235 ;; Defined at:
 20236 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;  buf             1   34[COMRAM] PTR unsigned char 
 20239 ;;		 -> escreve_inteiro_lcd@texto(7), 
 20240 ;;  val             4   35[COMRAM] long 
 20241 ;;  base            2   39[COMRAM] int 
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;  cp              1    0        PTR unsigned char 
 20244 ;;		 -> escreve_inteiro_lcd@texto(7), 
 20245 ;; Return value:  Size  Location     Type
 20246 ;;                  1    wreg      PTR unsigned char 
 20247 ;; Registers used:
 20248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20249 ;; Tracked objects:
 20250 ;;		On entry : 0/1
 20251 ;;		On exit  : 0/0
 20252 ;;		Unchanged: 0/0
 20253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20254 ;;      Params:         7       0       0       0       0       0       0       0       0
 20255 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20257 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20258 ;;Total ram usage:        8 bytes
 20259 ;; Hardware stack levels used:    1
 20260 ;; Hardware stack levels required when called:    4
 20261 ;; This function calls:
 20262 ;;		_ultoa
 20263 ;; This function is called by:
 20264 ;;		_escreve_inteiro_lcd
 20265 ;; This function uses a non-reentrant model
 20266 ;;
 20267                           
 20268                           	psect	text119
 20269  005570                     __ptext119:
 20270                           	callstack 0
 20271  005570                     _ltoa:
 20272                           	callstack 23
 20273                           
 20274                           ;incstack = 0
 20275  005570  AE27               	btfss	(ltoa@val+3)^0,7,c
 20276  005572  D00E               	goto	l12611
 20277  005574  5023               	movf	ltoa@buf^0,w,c
 20278  005576  6ED9               	movwf	fsr2l,c
 20279  005578  6ADA               	clrf	fsr2h,c
 20280  00557A  0E2D               	movlw	45
 20281  00557C  6EDF               	movwf	indf2,c
 20282  00557E  2A23               	incf	ltoa@buf^0,f,c
 20283  005580  1E27               	comf	(ltoa@val+3)^0,f,c
 20284  005582  1E26               	comf	(ltoa@val+2)^0,f,c
 20285  005584  1E25               	comf	(ltoa@val+1)^0,f,c
 20286  005586  6C24               	negf	ltoa@val^0,c
 20287  005588  0E00               	movlw	0
 20288  00558A  2225               	addwfc	(ltoa@val+1)^0,f,c
 20289  00558C  2226               	addwfc	(ltoa@val+2)^0,f,c
 20290  00558E  2227               	addwfc	(ltoa@val+3)^0,f,c
 20291  005590                     l12611:
 20292  005590  C023  F017         	movff	ltoa@buf,ultoa@buf
 20293  005594  C024  F018         	movff	ltoa@val,ultoa@val
 20294  005598  C025  F019         	movff	ltoa@val+1,ultoa@val+1
 20295  00559C  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
 20296  0055A0  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
 20297  0055A4  C028  F01C         	movff	ltoa@base,ultoa@base
 20298  0055A8  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
 20299  0055AC  EC8F  F01F         	call	_ultoa	;wreg free
 20300  0055B0  0012               	return		;funcret
 20301  0055B2                     __end_of_ltoa:
 20302                           	callstack 0
 20303                           
 20304 ;; *************** function _ultoa *****************
 20305 ;; Defined at:
 20306 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
 20307 ;; Parameters:    Size  Location     Type
 20308 ;;  buf             1   22[COMRAM] PTR unsigned char 
 20309 ;;		 -> escreve_inteiro_lcd@texto(7), 
 20310 ;;  val             4   23[COMRAM] unsigned long 
 20311 ;;  base            2   27[COMRAM] int 
 20312 ;; Auto vars:     Size  Location     Type
 20313 ;;  v               4   29[COMRAM] unsigned long 
 20314 ;;  c               1   33[COMRAM] unsigned char 
 20315 ;; Return value:  Size  Location     Type
 20316 ;;                  1    wreg      PTR unsigned char 
 20317 ;; Registers used:
 20318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/1
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20324 ;;      Params:         7       0       0       0       0       0       0       0       0
 20325 ;;      Locals:         5       0       0       0       0       0       0       0       0
 20326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20327 ;;      Totals:        12       0       0       0       0       0       0       0       0
 20328 ;;Total ram usage:       12 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; Hardware stack levels required when called:    3
 20331 ;; This function calls:
 20332 ;;		___lldiv
 20333 ;;		___llmod
 20334 ;; This function is called by:
 20335 ;;		_ltoa
 20336 ;; This function uses a non-reentrant model
 20337 ;;
 20338                           
 20339                           	psect	text120
 20340  003F1E                     __ptext120:
 20341                           	callstack 0
 20342  003F1E                     _ultoa:
 20343                           	callstack 23
 20344                           
 20345                           ;incstack = 0
 20346  003F1E  C018  F01E         	movff	ultoa@val,ultoa@v
 20347  003F22  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
 20348  003F26  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
 20349  003F2A  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
 20350  003F2E                     l12579:
 20351  003F2E  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
 20352  003F32  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
 20353  003F36  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
 20354  003F3A  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
 20355  003F3E  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
 20356  003F42  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
 20357  003F46  0E00               	movlw	0
 20358  003F48  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
 20359  003F4A  0EFF               	movlw	-1
 20360  003F4C  6E10               	movwf	(___lldiv@divisor+2)^0,c
 20361  003F4E  6E11               	movwf	(___lldiv@divisor+3)^0,c
 20362  003F50  EC32  F025         	call	___lldiv	;wreg free
 20363  003F54  C00A  F01E         	movff	?___lldiv,ultoa@v
 20364  003F58  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
 20365  003F5C  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
 20366  003F60  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
 20367  003F64  2A17               	incf	ultoa@buf^0,f,c
 20368  003F66  501E               	movf	ultoa@v^0,w,c
 20369  003F68  101F               	iorwf	(ultoa@v+1)^0,w,c
 20370  003F6A  1020               	iorwf	(ultoa@v+2)^0,w,c
 20371  003F6C  1021               	iorwf	(ultoa@v+3)^0,w,c
 20372  003F6E  A4D8               	btfss	status,2,c
 20373  003F70  D7DE               	goto	l12579
 20374  003F72  5017               	movf	ultoa@buf^0,w,c
 20375  003F74  6ED9               	movwf	fsr2l,c
 20376  003F76  6ADA               	clrf	fsr2h,c
 20377  003F78  0E00               	movlw	0
 20378  003F7A  6EDF               	movwf	indf2,c
 20379  003F7C  0617               	decf	ultoa@buf^0,f,c
 20380  003F7E                     l12589:
 20381  003F7E  C018  F00A         	movff	ultoa@val,___llmod@dividend
 20382  003F82  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
 20383  003F86  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
 20384  003F8A  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
 20385  003F8E  C01C  F00E         	movff	ultoa@base,___llmod@divisor
 20386  003F92  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
 20387  003F96  0E00               	movlw	0
 20388  003F98  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
 20389  003F9A  0EFF               	movlw	-1
 20390  003F9C  6E10               	movwf	(___llmod@divisor+2)^0,c
 20391  003F9E  6E11               	movwf	(___llmod@divisor+3)^0,c
 20392  003FA0  ECCD  F026         	call	___llmod	;wreg free
 20393  003FA4  500A               	movf	?___llmod^0,w,c
 20394  003FA6  6E22               	movwf	ultoa@c^0,c
 20395  003FA8  C018  F00A         	movff	ultoa@val,___lldiv@dividend
 20396  003FAC  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
 20397  003FB0  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
 20398  003FB4  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
 20399  003FB8  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
 20400  003FBC  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
 20401  003FC0  0E00               	movlw	0
 20402  003FC2  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
 20403  003FC4  0EFF               	movlw	-1
 20404  003FC6  6E10               	movwf	(___lldiv@divisor+2)^0,c
 20405  003FC8  6E11               	movwf	(___lldiv@divisor+3)^0,c
 20406  003FCA  EC32  F025         	call	___lldiv	;wreg free
 20407  003FCE  C00A  F018         	movff	?___lldiv,ultoa@val
 20408  003FD2  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
 20409  003FD6  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
 20410  003FDA  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
 20411  003FDE  0E09               	movlw	9
 20412  003FE0  6422               	cpfsgt	ultoa@c^0,c
 20413  003FE2  D002               	goto	l2475
 20414  003FE4  0E07               	movlw	7
 20415  003FE6  2622               	addwf	ultoa@c^0,f,c
 20416  003FE8                     l2475:
 20417  003FE8  0E30               	movlw	48
 20418  003FEA  2622               	addwf	ultoa@c^0,f,c
 20419  003FEC  5017               	movf	ultoa@buf^0,w,c
 20420  003FEE  6ED9               	movwf	fsr2l,c
 20421  003FF0  6ADA               	clrf	fsr2h,c
 20422  003FF2  C022  FFDF         	movff	ultoa@c,indf2
 20423  003FF6  0617               	decf	ultoa@buf^0,f,c
 20424  003FF8  5018               	movf	ultoa@val^0,w,c
 20425  003FFA  1019               	iorwf	(ultoa@val+1)^0,w,c
 20426  003FFC  101A               	iorwf	(ultoa@val+2)^0,w,c
 20427  003FFE  101B               	iorwf	(ultoa@val+3)^0,w,c
 20428  004000  B4D8               	btfsc	status,2,c
 20429  004002  0012               	return	
 20430  004004  D7BC               	goto	l12589
 20431  004006                     __end_of_ultoa:
 20432                           	callstack 0
 20433                           
 20434 ;; *************** function ___llmod *****************
 20435 ;; Defined at:
 20436 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 20437 ;; Parameters:    Size  Location     Type
 20438 ;;  dividend        4    9[COMRAM] unsigned long 
 20439 ;;  divisor         4   13[COMRAM] unsigned long 
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;  counter         1   17[COMRAM] unsigned char 
 20442 ;; Return value:  Size  Location     Type
 20443 ;;                  4    9[COMRAM] unsigned long 
 20444 ;; Registers used:
 20445 ;;		wreg, status,2, status,0
 20446 ;; Tracked objects:
 20447 ;;		On entry : 0/0
 20448 ;;		On exit  : 0/0
 20449 ;;		Unchanged: 0/0
 20450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20451 ;;      Params:         8       0       0       0       0       0       0       0       0
 20452 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20454 ;;      Totals:         9       0       0       0       0       0       0       0       0
 20455 ;;Total ram usage:        9 bytes
 20456 ;; Hardware stack levels used:    1
 20457 ;; Hardware stack levels required when called:    2
 20458 ;; This function calls:
 20459 ;;		Nothing
 20460 ;; This function is called by:
 20461 ;;		_fprintf
 20462 ;;		_ultoa
 20463 ;; This function uses a non-reentrant model
 20464 ;;
 20465                           
 20466                           	psect	text121
 20467  004D9A                     __ptext121:
 20468                           	callstack 0
 20469  004D9A                     ___llmod:
 20470                           	callstack 23
 20471                           
 20472                           ;incstack = 0
 20473  004D9A  500E               	movf	___llmod@divisor^0,w,c
 20474  004D9C  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 20475  004D9E  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 20476  004DA0  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 20477  004DA2  B4D8               	btfsc	status,2,c
 20478  004DA4  D024               	goto	l2160
 20479  004DA6  0E01               	movlw	1
 20480  004DA8  6E12               	movwf	___llmod@counter^0,c
 20481  004DAA  D006               	goto	l12017
 20482  004DAC                     l12015:
 20483  004DAC  90D8               	bcf	status,0,c
 20484  004DAE  360E               	rlcf	___llmod@divisor^0,f,c
 20485  004DB0  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 20486  004DB2  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 20487  004DB4  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 20488  004DB6  2A12               	incf	___llmod@counter^0,f,c
 20489  004DB8                     l12017:
 20490  004DB8  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 20491  004DBA  D7F8               	goto	l12015
 20492  004DBC                     u14090:
 20493  004DBC  500E               	movf	___llmod@divisor^0,w,c
 20494  004DBE  5C0A               	subwf	___llmod@dividend^0,w,c
 20495  004DC0  500F               	movf	(___llmod@divisor+1)^0,w,c
 20496  004DC2  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 20497  004DC4  5010               	movf	(___llmod@divisor+2)^0,w,c
 20498  004DC6  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 20499  004DC8  5011               	movf	(___llmod@divisor+3)^0,w,c
 20500  004DCA  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 20501  004DCC  A0D8               	btfss	status,0,c
 20502  004DCE  D008               	goto	l12023
 20503  004DD0  500E               	movf	___llmod@divisor^0,w,c
 20504  004DD2  5E0A               	subwf	___llmod@dividend^0,f,c
 20505  004DD4  500F               	movf	(___llmod@divisor+1)^0,w,c
 20506  004DD6  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 20507  004DD8  5010               	movf	(___llmod@divisor+2)^0,w,c
 20508  004DDA  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 20509  004DDC  5011               	movf	(___llmod@divisor+3)^0,w,c
 20510  004DDE  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 20511  004DE0                     l12023:
 20512  004DE0  90D8               	bcf	status,0,c
 20513  004DE2  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 20514  004DE4  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 20515  004DE6  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 20516  004DE8  320E               	rrcf	___llmod@divisor^0,f,c
 20517  004DEA  2E12               	decfsz	___llmod@counter^0,f,c
 20518  004DEC  D7E7               	goto	u14090
 20519  004DEE                     l2160:
 20520  004DEE  C00A  F00A         	movff	___llmod@dividend,?___llmod
 20521  004DF2  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 20522  004DF6  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 20523  004DFA  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 20524  004DFE  0012               	return		;funcret
 20525  004E00                     __end_of___llmod:
 20526                           	callstack 0
 20527                           
 20528 ;; *************** function ___lldiv *****************
 20529 ;; Defined at:
 20530 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 20531 ;; Parameters:    Size  Location     Type
 20532 ;;  dividend        4    9[COMRAM] unsigned long 
 20533 ;;  divisor         4   13[COMRAM] unsigned long 
 20534 ;; Auto vars:     Size  Location     Type
 20535 ;;  quotient        4   17[COMRAM] unsigned long 
 20536 ;;  counter         1   21[COMRAM] unsigned char 
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  4    9[COMRAM] unsigned long 
 20539 ;; Registers used:
 20540 ;;		wreg, status,2, status,0
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/0
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20546 ;;      Params:         8       0       0       0       0       0       0       0       0
 20547 ;;      Locals:         5       0       0       0       0       0       0       0       0
 20548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20549 ;;      Totals:        13       0       0       0       0       0       0       0       0
 20550 ;;Total ram usage:       13 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:    2
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_auto_mount
 20557 ;;		_f_lseek
 20558 ;;		_fprintf
 20559 ;;		_ultoa
 20560 ;; This function uses a non-reentrant model
 20561 ;;
 20562                           
 20563                           	psect	text122
 20564  004A64                     __ptext122:
 20565                           	callstack 0
 20566  004A64                     ___lldiv:
 20567                           	callstack 23
 20568                           
 20569                           ;incstack = 0
 20570  004A64  0E00               	movlw	0
 20571  004A66  6E12               	movwf	___lldiv@quotient^0,c
 20572  004A68  0E00               	movlw	0
 20573  004A6A  6E13               	movwf	(___lldiv@quotient+1)^0,c
 20574  004A6C  0E00               	movlw	0
 20575  004A6E  6E14               	movwf	(___lldiv@quotient+2)^0,c
 20576  004A70  0E00               	movlw	0
 20577  004A72  6E15               	movwf	(___lldiv@quotient+3)^0,c
 20578  004A74  500E               	movf	___lldiv@divisor^0,w,c
 20579  004A76  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 20580  004A78  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 20581  004A7A  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 20582  004A7C  B4D8               	btfsc	status,2,c
 20583  004A7E  D02A               	goto	l1779
 20584  004A80  0E01               	movlw	1
 20585  004A82  6E16               	movwf	___lldiv@counter^0,c
 20586  004A84  D006               	goto	l11591
 20587  004A86                     l11589:
 20588  004A86  90D8               	bcf	status,0,c
 20589  004A88  360E               	rlcf	___lldiv@divisor^0,f,c
 20590  004A8A  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 20591  004A8C  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 20592  004A8E  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 20593  004A90  2A16               	incf	___lldiv@counter^0,f,c
 20594  004A92                     l11591:
 20595  004A92  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 20596  004A94  D7F8               	goto	l11589
 20597  004A96                     u13420:
 20598  004A96  90D8               	bcf	status,0,c
 20599  004A98  3612               	rlcf	___lldiv@quotient^0,f,c
 20600  004A9A  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 20601  004A9C  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 20602  004A9E  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 20603  004AA0  500E               	movf	___lldiv@divisor^0,w,c
 20604  004AA2  5C0A               	subwf	___lldiv@dividend^0,w,c
 20605  004AA4  500F               	movf	(___lldiv@divisor+1)^0,w,c
 20606  004AA6  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 20607  004AA8  5010               	movf	(___lldiv@divisor+2)^0,w,c
 20608  004AAA  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 20609  004AAC  5011               	movf	(___lldiv@divisor+3)^0,w,c
 20610  004AAE  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 20611  004AB0  A0D8               	btfss	status,0,c
 20612  004AB2  D009               	goto	l11601
 20613  004AB4  500E               	movf	___lldiv@divisor^0,w,c
 20614  004AB6  5E0A               	subwf	___lldiv@dividend^0,f,c
 20615  004AB8  500F               	movf	(___lldiv@divisor+1)^0,w,c
 20616  004ABA  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 20617  004ABC  5010               	movf	(___lldiv@divisor+2)^0,w,c
 20618  004ABE  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 20619  004AC0  5011               	movf	(___lldiv@divisor+3)^0,w,c
 20620  004AC2  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 20621  004AC4  8012               	bsf	___lldiv@quotient^0,0,c
 20622  004AC6                     l11601:
 20623  004AC6  90D8               	bcf	status,0,c
 20624  004AC8  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 20625  004ACA  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 20626  004ACC  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 20627  004ACE  320E               	rrcf	___lldiv@divisor^0,f,c
 20628  004AD0  2E16               	decfsz	___lldiv@counter^0,f,c
 20629  004AD2  D7E1               	goto	u13420
 20630  004AD4                     l1779:
 20631  004AD4  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 20632  004AD8  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 20633  004ADC  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 20634  004AE0  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 20635  004AE4  0012               	return		;funcret
 20636  004AE6                     __end_of___lldiv:
 20637                           	callstack 0
 20638                           
 20639 ;; *************** function _escreve_frase_ram_lcd *****************
 20640 ;; Defined at:
 20641 ;;		line 445 in file "bibliotecas/display_lcd.c"
 20642 ;; Parameters:    Size  Location     Type
 20643 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 20644 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 20645 ;;		 -> STR_29(5), STR_28(2), STR_27(5), STR_26(7), 
 20646 ;;		 -> STR_25(7), STR_24(2), STR_23(5), STR_22(7), 
 20647 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 20648 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 20649 ;;		 -> STR_5(15), rawFix(2), rawLongitude(13), rawLatitude(12), 
 20650 ;;		 -> escreve_inteiro_lcd@texto(7), STR_4(11), STR_3(10), STR_2(16), 
 20651 ;;		 -> STR_1(11), 
 20652 ;; Auto vars:     Size  Location     Type
 20653 ;;		None
 20654 ;; Return value:  Size  Location     Type
 20655 ;;                  1    wreg      void 
 20656 ;; Registers used:
 20657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20658 ;; Tracked objects:
 20659 ;;		On entry : 0/0
 20660 ;;		On exit  : 0/0
 20661 ;;		Unchanged: 0/0
 20662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20663 ;;      Params:         2       0       0       0       0       0       0       0       0
 20664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20666 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20667 ;;Total ram usage:        2 bytes
 20668 ;; Hardware stack levels used:    1
 20669 ;; Hardware stack levels required when called:    4
 20670 ;; This function calls:
 20671 ;;		_escreve_caractere_lcd
 20672 ;; This function is called by:
 20673 ;;		_sdc_reset
 20674 ;;		_sdc_disk_initialize
 20675 ;;		_escreve_inteiro_lcd
 20676 ;;		_mostra_dados_display
 20677 ;;		_mensagem_inicial
 20678 ;;		_troca_de_tela
 20679 ;; This function uses a non-reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text123
 20683  0052E0                     __ptext123:
 20684                           	callstack 0
 20685  0052E0                     _escreve_frase_ram_lcd:
 20686                           	callstack 25
 20687                           
 20688                           ;display_lcd.c: 447: while(*buffer)
 20689                           
 20690                           ;incstack = 0
 20691  0052E0  D014               	goto	l10639
 20692  0052E2                     l10635:
 20693                           
 20694                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 20695  0052E2  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 20696  0052E6  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 20697  0052EA  6AF8               	clrf	tblptru,c
 20698  0052EC  0E07               	movlw	(high __ramtop+-1)
 20699  0052EE  64F7               	cpfsgt	tblptrh,c
 20700  0052F0  D003               	bra	u11877
 20701  0052F2  0008               	tblrd		*
 20702  0052F4  50F5               	movf	tablat,w,c
 20703  0052F6  D005               	bra	u11870
 20704  0052F8                     u11877:
 20705  0052F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 20706  0052FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 20707  005300  50E7               	movf	indf1,w,c
 20708  005302                     u11870:
 20709  005302  EC28  F026         	call	_escreve_caractere_lcd
 20710                           
 20711                           ;display_lcd.c: 450: buffer++;
 20712  005306  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 20713  005308  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 20714  00530A                     l10639:
 20715  00530A  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 20716  00530E  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 20717  005312  6AF8               	clrf	tblptru,c
 20718  005314  0E07               	movlw	(high __ramtop+-1)
 20719  005316  64F7               	cpfsgt	tblptrh,c
 20720  005318  D003               	bra	u11887
 20721  00531A  0008               	tblrd		*
 20722  00531C  50F5               	movf	tablat,w,c
 20723  00531E  D005               	bra	u11880
 20724  005320                     u11887:
 20725  005320  CFF6 FFE1          	movff	tblptrl,fsr1l
 20726  005324  CFF7 FFE2          	movff	tblptrh,fsr1h
 20727  005328  50E7               	movf	indf1,w,c
 20728  00532A                     u11880:
 20729  00532A  0900               	iorlw	0
 20730  00532C  B4D8               	btfsc	status,2,c
 20731  00532E  0012               	return	
 20732  005330  D7D8               	goto	l10635
 20733  005332                     __end_of_escreve_frase_ram_lcd:
 20734                           	callstack 0
 20735                           
 20736 ;; *************** function _escreve_caractere_lcd *****************
 20737 ;; Defined at:
 20738 ;;		line 323 in file "bibliotecas/display_lcd.c"
 20739 ;; Parameters:    Size  Location     Type
 20740 ;;  data            1    wreg     unsigned char 
 20741 ;; Auto vars:     Size  Location     Type
 20742 ;;  data            1   11[COMRAM] unsigned char 
 20743 ;; Return value:  Size  Location     Type
 20744 ;;                  1    wreg      void 
 20745 ;; Registers used:
 20746 ;;		wreg, status,2, status,0, cstack
 20747 ;; Tracked objects:
 20748 ;;		On entry : 0/1
 20749 ;;		On exit  : 0/0
 20750 ;;		Unchanged: 0/0
 20751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20752 ;;      Params:         0       0       0       0       0       0       0       0       0
 20753 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20755 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20756 ;;Total ram usage:        1 bytes
 20757 ;; Hardware stack levels used:    1
 20758 ;; Hardware stack levels required when called:    3
 20759 ;; This function calls:
 20760 ;;		_delay
 20761 ;; This function is called by:
 20762 ;;		_escreve_frase_ram_lcd
 20763 ;;		_get_fix
 20764 ;; This function uses a non-reentrant model
 20765 ;;
 20766                           
 20767                           	psect	text124
 20768  004C50                     __ptext124:
 20769                           	callstack 0
 20770  004C50                     _escreve_caractere_lcd:
 20771                           	callstack 25
 20772                           
 20773                           ;incstack = 0
 20774                           ;escreve_caractere_lcd@data stored from wreg
 20775  004C50  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 20776                           
 20777                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 20778  004C52  9483               	bcf	131,2,c	;volatile
 20779                           
 20780                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 20781  004C54  8283               	bsf	131,1,c	;volatile
 20782                           
 20783                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 20784  004C56  9083               	bcf	131,0,c	;volatile
 20785                           
 20786                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 20787  004C58  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 20788  004C5A  D002               	goto	l242
 20789  004C5C  8883               	bsf	131,4,c	;volatile
 20790  004C5E  D001               	goto	l10497
 20791  004C60                     l242:
 20792                           
 20793                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 20794  004C60  9883               	bcf	131,4,c	;volatile
 20795  004C62                     l10497:
 20796                           
 20797                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 20798  004C62  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 20799  004C64  D002               	goto	l244
 20800  004C66  8A83               	bsf	131,5,c	;volatile
 20801  004C68  D001               	goto	l10501
 20802  004C6A                     l244:
 20803                           
 20804                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 20805  004C6A  9A83               	bcf	131,5,c	;volatile
 20806  004C6C                     l10501:
 20807                           
 20808                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 20809  004C6C  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 20810  004C6E  D002               	goto	l246
 20811  004C70  8C83               	bsf	131,6,c	;volatile
 20812  004C72  D001               	goto	l10505
 20813  004C74                     l246:
 20814                           
 20815                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 20816  004C74  9C83               	bcf	131,6,c	;volatile
 20817  004C76                     l10505:
 20818                           
 20819                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 20820  004C76  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 20821  004C78  D002               	goto	l248
 20822  004C7A  8E83               	bsf	131,7,c	;volatile
 20823  004C7C  D001               	goto	l249
 20824  004C7E                     l248:
 20825                           
 20826                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 20827  004C7E  9E83               	bcf	131,7,c	;volatile
 20828  004C80                     l249:
 20829                           
 20830                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 20831  004C80  8083               	bsf	131,0,c	;volatile
 20832                           
 20833                           ;display_lcd.c: 342: delay();
 20834  004C82  ECB8  F02D         	call	_delay	;wreg free
 20835                           
 20836                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 20837  004C86  9083               	bcf	131,0,c	;volatile
 20838                           
 20839                           ;display_lcd.c: 344: delay();
 20840  004C88  ECB8  F02D         	call	_delay	;wreg free
 20841                           
 20842                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 20843  004C8C  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 20844  004C8E  D002               	goto	l250
 20845  004C90  8883               	bsf	131,4,c	;volatile
 20846  004C92  D001               	goto	l251
 20847  004C94                     l250:
 20848                           
 20849                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 20850  004C94  9883               	bcf	131,4,c	;volatile
 20851  004C96                     l251:
 20852                           
 20853                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 20854  004C96  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 20855  004C98  D002               	goto	l252
 20856  004C9A  8A83               	bsf	131,5,c	;volatile
 20857  004C9C  D001               	goto	l253
 20858  004C9E                     l252:
 20859                           
 20860                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 20861  004C9E  9A83               	bcf	131,5,c	;volatile
 20862  004CA0                     l253:
 20863                           
 20864                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 20865  004CA0  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 20866  004CA2  D002               	goto	l254
 20867  004CA4  8C83               	bsf	131,6,c	;volatile
 20868  004CA6  D001               	goto	l255
 20869  004CA8                     l254:
 20870                           
 20871                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 20872  004CA8  9C83               	bcf	131,6,c	;volatile
 20873  004CAA                     l255:
 20874                           
 20875                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 20876  004CAA  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 20877  004CAC  D002               	goto	l256
 20878  004CAE  8E83               	bsf	131,7,c	;volatile
 20879  004CB0  D001               	goto	l257
 20880  004CB2                     l256:
 20881                           
 20882                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 20883  004CB2  9E83               	bcf	131,7,c	;volatile
 20884  004CB4                     l257:
 20885                           
 20886                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 20887  004CB4  8083               	bsf	131,0,c	;volatile
 20888                           
 20889                           ;display_lcd.c: 359: delay();
 20890  004CB6  ECB8  F02D         	call	_delay	;wreg free
 20891                           
 20892                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 20893  004CBA  9083               	bcf	131,0,c	;volatile
 20894                           
 20895                           ;display_lcd.c: 361: delay();
 20896  004CBC  ECB8  F02D         	call	_delay	;wreg free
 20897  004CC0  0012               	return		;funcret
 20898  004CC2                     __end_of_escreve_caractere_lcd:
 20899                           	callstack 0
 20900                           
 20901 ;; *************** function _delay *****************
 20902 ;; Defined at:
 20903 ;;		line 45 in file "bibliotecas/display_lcd.c"
 20904 ;; Parameters:    Size  Location     Type
 20905 ;;		None
 20906 ;; Auto vars:     Size  Location     Type
 20907 ;;  contador_int    1   10[COMRAM] unsigned char 
 20908 ;;  contador_ext    1    9[COMRAM] unsigned char 
 20909 ;; Return value:  Size  Location     Type
 20910 ;;                  1    wreg      void 
 20911 ;; Registers used:
 20912 ;;		wreg, status,2, status,0
 20913 ;; Tracked objects:
 20914 ;;		On entry : 0/0
 20915 ;;		On exit  : 0/0
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20918 ;;      Params:         0       0       0       0       0       0       0       0       0
 20919 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20921 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20922 ;;Total ram usage:        2 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; Hardware stack levels required when called:    2
 20925 ;; This function calls:
 20926 ;;		Nothing
 20927 ;; This function is called by:
 20928 ;;		_init_lcd
 20929 ;;		_escreve_cmd_lcd
 20930 ;;		_endereco_cursor_lcd
 20931 ;;		_escreve_caractere_lcd
 20932 ;; This function uses a non-reentrant model
 20933 ;;
 20934                           
 20935                           	psect	text125
 20936  005B70                     __ptext125:
 20937                           	callstack 0
 20938  005B70                     _delay:
 20939                           	callstack 25
 20940                           
 20941                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 20942                           
 20943                           ;incstack = 0
 20944  005B70  0E00               	movlw	0
 20945  005B72  6E0A               	movwf	delay@contador_ext^0,c
 20946  005B74                     l181:
 20947                           
 20948                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 20949  005B74  F000               	nop	
 20950                           
 20951                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 20952  005B76  0E00               	movlw	0
 20953  005B78  6E0B               	movwf	delay@contador_int^0,c
 20954  005B7A                     l183:
 20955                           
 20956                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 20957  005B7A  F000               	nop	
 20958  005B7C  2A0B               	incf	delay@contador_int^0,f,c
 20959  005B7E  0E31               	movlw	49
 20960  005B80  640B               	cpfsgt	delay@contador_int^0,c
 20961  005B82  D7FB               	goto	l183
 20962  005B84  2A0A               	incf	delay@contador_ext^0,f,c
 20963  005B86  0E63               	movlw	99
 20964  005B88  640A               	cpfsgt	delay@contador_ext^0,c
 20965  005B8A  D7F4               	goto	l181
 20966  005B8C  0012               	return	
 20967  005B8E                     __end_of_delay:
 20968                           	callstack 0
 20969                           
 20970 ;; *************** function _dados_gps_to_sd *****************
 20971 ;; Defined at:
 20972 ;;		line 717 in file "bibliotecas/GPS.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;		None
 20975 ;; Auto vars:     Size  Location     Type
 20976 ;;		None
 20977 ;; Return value:  Size  Location     Type
 20978 ;;                  1    wreg      void 
 20979 ;; Registers used:
 20980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20981 ;; Tracked objects:
 20982 ;;		On entry : 0/1
 20983 ;;		On exit  : 0/0
 20984 ;;		Unchanged: 0/0
 20985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20986 ;;      Params:         0       0       0       0       0       0       0       0       0
 20987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20989 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20990 ;;Total ram usage:        0 bytes
 20991 ;; Hardware stack levels used:    1
 20992 ;; Hardware stack levels required when called:    4
 20993 ;; This function calls:
 20994 ;;		_monta_sd
 20995 ;; This function is called by:
 20996 ;;		_disparo_gravacao
 20997 ;; This function uses a non-reentrant model
 20998 ;;
 20999                           
 21000                           	psect	text126
 21001  004E64                     __ptext126:
 21002                           	callstack 0
 21003  004E64                     _dados_gps_to_sd:
 21004                           	callstack 24
 21005                           
 21006                           ;GPS.c: 720: monta_sd(0, rawTime);
 21007                           
 21008                           ;incstack = 0
 21009  004E64  0EC9               	movlw	low _rawTime
 21010  004E66  6E10               	movwf	monta_sd@dado^0,c
 21011  004E68  0E01               	movlw	high _rawTime
 21012  004E6A  6E11               	movwf	(monta_sd@dado+1)^0,c
 21013  004E6C  0E00               	movlw	0
 21014  004E6E  ECBF  F007         	call	_monta_sd
 21015                           
 21016                           ;GPS.c: 721: monta_sd(1, rawDate);
 21017  004E72  0EE2               	movlw	low _rawDate
 21018  004E74  6E10               	movwf	monta_sd@dado^0,c
 21019  004E76  0E01               	movlw	high _rawDate
 21020  004E78  6E11               	movwf	(monta_sd@dado+1)^0,c
 21021  004E7A  0E01               	movlw	1
 21022  004E7C  ECBF  F007         	call	_monta_sd
 21023                           
 21024                           ;GPS.c: 722: monta_sd(2, rawLatitude);
 21025  004E80  0EB6               	movlw	low _rawLatitude
 21026  004E82  6E10               	movwf	monta_sd@dado^0,c
 21027  004E84  0E01               	movlw	high _rawLatitude
 21028  004E86  6E11               	movwf	(monta_sd@dado+1)^0,c
 21029  004E88  0E02               	movlw	2
 21030  004E8A  ECBF  F007         	call	_monta_sd
 21031                           
 21032                           ;GPS.c: 723: monta_sd(3, rawLongitude);
 21033  004E8E  0E9D               	movlw	low _rawLongitude
 21034  004E90  6E10               	movwf	monta_sd@dado^0,c
 21035  004E92  0E01               	movlw	high _rawLongitude
 21036  004E94  6E11               	movwf	(monta_sd@dado+1)^0,c
 21037  004E96  0E03               	movlw	3
 21038  004E98  ECBF  F007         	call	_monta_sd
 21039                           
 21040                           ;GPS.c: 724: monta_sd(5, rawTime);
 21041  004E9C  0EC9               	movlw	low _rawTime
 21042  004E9E  6E10               	movwf	monta_sd@dado^0,c
 21043  004EA0  0E01               	movlw	high _rawTime
 21044  004EA2  6E11               	movwf	(monta_sd@dado+1)^0,c
 21045  004EA4  0E05               	movlw	5
 21046  004EA6  ECBF  F007         	call	_monta_sd
 21047                           
 21048                           ;GPS.c: 725: monta_sd(6, rawDate);
 21049  004EAA  0EE2               	movlw	low _rawDate
 21050  004EAC  6E10               	movwf	monta_sd@dado^0,c
 21051  004EAE  0E01               	movlw	high _rawDate
 21052  004EB0  6E11               	movwf	(monta_sd@dado+1)^0,c
 21053  004EB2  0E06               	movlw	6
 21054  004EB4  ECBF  F007         	call	_monta_sd
 21055                           
 21056                           ;GPS.c: 726: monta_sd(7, rawSpeed);
 21057  004EB8  0E79               	movlw	low _rawSpeed
 21058  004EBA  6E10               	movwf	monta_sd@dado^0,c
 21059  004EBC  0E02               	movlw	high _rawSpeed
 21060  004EBE  6E11               	movwf	(monta_sd@dado+1)^0,c
 21061  004EC0  0E07               	movlw	7
 21062  004EC2  ECBF  F007         	call	_monta_sd
 21063  004EC6  0012               	return		;funcret
 21064  004EC8                     __end_of_dados_gps_to_sd:
 21065                           	callstack 0
 21066                           
 21067 ;; *************** function _monta_sd *****************
 21068 ;; Defined at:
 21069 ;;		line 304 in file "bibliotecas/SDCard.c"
 21070 ;; Parameters:    Size  Location     Type
 21071 ;;  index           1    wreg     unsigned char 
 21072 ;;  dado            2   15[COMRAM] PTR unsigned char 
 21073 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21074 ;;		 -> dados_lat(33), STR_21(7), STR_20(7), rawSpeed(20), 
 21075 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21076 ;; Auto vars:     Size  Location     Type
 21077 ;;  index           1   18[COMRAM] unsigned char 
 21078 ;;  i               1   19[COMRAM] unsigned char 
 21079 ;;  size            1    0        unsigned char 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      void 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/2
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21089 ;;      Params:         2       0       0       0       0       0       0       0       0
 21090 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21092 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21093 ;;Total ram usage:        5 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; Hardware stack levels required when called:    3
 21096 ;; This function calls:
 21097 ;;		_strlen
 21098 ;; This function is called by:
 21099 ;;		_dados_gps_to_sd
 21100 ;;		_verifica_fence
 21101 ;;		_disparo_gravacao
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text127
 21106  000F7E                     __ptext127:
 21107                           	callstack 0
 21108  000F7E                     _monta_sd:
 21109                           	callstack 24
 21110                           
 21111                           ;incstack = 0
 21112                           ;monta_sd@index stored from wreg
 21113  000F7E  6E13               	movwf	monta_sd@index^0,c
 21114  000F80  C010  F00A         	movff	monta_sd@dado,strlen@s
 21115  000F84  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21116  000F88  ECD9  F02A         	call	_strlen	;wreg free
 21117                           
 21118                           ;SDCard.c: 308: switch(index)
 21119  000F8C  D198               	goto	l12795
 21120  000F8E                     l12665:
 21121                           
 21122                           ;SDCard.c: 311: for(i=0; i<7;i++)
 21123  000F8E  0E00               	movlw	0
 21124  000F90  6E14               	movwf	monta_sd@i^0,c
 21125  000F92                     l12671:
 21126                           
 21127                           ;SDCard.c: 312: {;SDCard.c: 313: if(*dado != '\0')
 21128  000F92  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21129  000F96  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21130  000F9A  6AF8               	clrf	tblptru,c
 21131  000F9C  0E07               	movlw	(high __ramtop+-1)
 21132  000F9E  64F7               	cpfsgt	tblptrh,c
 21133  000FA0  D003               	bra	u15207
 21134  000FA2  0008               	tblrd		*
 21135  000FA4  50F5               	movf	tablat,w,c
 21136  000FA6  D005               	bra	u15200
 21137  000FA8                     u15207:
 21138  000FA8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21139  000FAC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21140  000FB0  50E7               	movf	indf1,w,c
 21141  000FB2                     u15200:
 21142  000FB2  0900               	iorlw	0
 21143  000FB4  B4D8               	btfsc	status,2,c
 21144  000FB6  D017               	goto	l12675
 21145                           
 21146                           ;SDCard.c: 314: {;SDCard.c: 315: hora[i] = *dado;
 21147  000FB8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21148  000FBC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21149  000FC0  6AF8               	clrf	tblptru,c
 21150  000FC2  0EC2               	movlw	low _hora
 21151  000FC4  2414               	addwf	monta_sd@i^0,w,c
 21152  000FC6  6ED9               	movwf	fsr2l,c
 21153  000FC8  6ADA               	clrf	fsr2h,c
 21154  000FCA  0E01               	movlw	high _hora
 21155  000FCC  22DA               	addwfc	fsr2h,f,c
 21156  000FCE  0E07               	movlw	(high __ramtop+-1)
 21157  000FD0  64F7               	cpfsgt	tblptrh,c
 21158  000FD2  D003               	bra	u15227
 21159  000FD4  0008               	tblrd		*
 21160  000FD6  50F5               	movf	tablat,w,c
 21161  000FD8  D005               	bra	u15220
 21162  000FDA                     u15227:
 21163  000FDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21164  000FDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21165  000FE2  50E7               	movf	indf1,w,c
 21166  000FE4                     u15220:
 21167  000FE4  6EDF               	movwf	indf2,c
 21168  000FE6                     l12675:
 21169                           
 21170                           ;SDCard.c: 316: };SDCard.c: 317: dado++;
 21171  000FE6  4A10               	infsnz	monta_sd@dado^0,f,c
 21172  000FE8  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21173  000FEA  2A14               	incf	monta_sd@i^0,f,c
 21174  000FEC  0E06               	movlw	6
 21175  000FEE  6414               	cpfsgt	monta_sd@i^0,c
 21176  000FF0  D7D0               	goto	l12671
 21177  000FF2  0012               	return	
 21178  000FF4                     l12681:
 21179                           
 21180                           ;SDCard.c: 322: for(i=0; i<6;i++)
 21181  000FF4  0E00               	movlw	0
 21182  000FF6  6E14               	movwf	monta_sd@i^0,c
 21183  000FF8                     l12687:
 21184                           
 21185                           ;SDCard.c: 323: {;SDCard.c: 324: if(*dado != '\0')
 21186  000FF8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21187  000FFC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21188  001000  6AF8               	clrf	tblptru,c
 21189  001002  0E07               	movlw	(high __ramtop+-1)
 21190  001004  64F7               	cpfsgt	tblptrh,c
 21191  001006  D003               	bra	u15247
 21192  001008  0008               	tblrd		*
 21193  00100A  50F5               	movf	tablat,w,c
 21194  00100C  D005               	bra	u15240
 21195  00100E                     u15247:
 21196  00100E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21197  001012  CFF7 FFE2          	movff	tblptrh,fsr1h
 21198  001016  50E7               	movf	indf1,w,c
 21199  001018                     u15240:
 21200  001018  0900               	iorlw	0
 21201  00101A  B4D8               	btfsc	status,2,c
 21202  00101C  D017               	goto	l12691
 21203                           
 21204                           ;SDCard.c: 325: {;SDCard.c: 326: data[i] = *dado;
 21205  00101E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21206  001022  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21207  001026  6AF8               	clrf	tblptru,c
 21208  001028  0ED0               	movlw	low _data
 21209  00102A  2414               	addwf	monta_sd@i^0,w,c
 21210  00102C  6ED9               	movwf	fsr2l,c
 21211  00102E  6ADA               	clrf	fsr2h,c
 21212  001030  0E01               	movlw	high _data
 21213  001032  22DA               	addwfc	fsr2h,f,c
 21214  001034  0E07               	movlw	(high __ramtop+-1)
 21215  001036  64F7               	cpfsgt	tblptrh,c
 21216  001038  D003               	bra	u15267
 21217  00103A  0008               	tblrd		*
 21218  00103C  50F5               	movf	tablat,w,c
 21219  00103E  D005               	bra	u15260
 21220  001040                     u15267:
 21221  001040  CFF6 FFE1          	movff	tblptrl,fsr1l
 21222  001044  CFF7 FFE2          	movff	tblptrh,fsr1h
 21223  001048  50E7               	movf	indf1,w,c
 21224  00104A                     u15260:
 21225  00104A  6EDF               	movwf	indf2,c
 21226  00104C                     l12691:
 21227                           
 21228                           ;SDCard.c: 327: };SDCard.c: 328: dado++;
 21229  00104C  4A10               	infsnz	monta_sd@dado^0,f,c
 21230  00104E  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21231  001050  2A14               	incf	monta_sd@i^0,f,c
 21232  001052  0E05               	movlw	5
 21233  001054  6414               	cpfsgt	monta_sd@i^0,c
 21234  001056  D7D0               	goto	l12687
 21235  001058  0012               	return	
 21236  00105A                     l12697:
 21237                           
 21238                           ;SDCard.c: 333: for(i=0; i<11;i++)
 21239  00105A  0E00               	movlw	0
 21240  00105C  6E14               	movwf	monta_sd@i^0,c
 21241  00105E                     l12703:
 21242                           
 21243                           ;SDCard.c: 334: {;SDCard.c: 335: if(*dado != '\0')
 21244  00105E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21245  001062  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21246  001066  6AF8               	clrf	tblptru,c
 21247  001068  0E07               	movlw	(high __ramtop+-1)
 21248  00106A  64F7               	cpfsgt	tblptrh,c
 21249  00106C  D003               	bra	u15287
 21250  00106E  0008               	tblrd		*
 21251  001070  50F5               	movf	tablat,w,c
 21252  001072  D005               	bra	u15280
 21253  001074                     u15287:
 21254  001074  CFF6 FFE1          	movff	tblptrl,fsr1l
 21255  001078  CFF7 FFE2          	movff	tblptrh,fsr1h
 21256  00107C  50E7               	movf	indf1,w,c
 21257  00107E                     u15280:
 21258  00107E  0900               	iorlw	0
 21259  001080  B4D8               	btfsc	status,2,c
 21260  001082  D017               	goto	l12707
 21261                           
 21262                           ;SDCard.c: 336: {;SDCard.c: 337: lt[i] = *dado;
 21263  001084  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21264  001088  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21265  00108C  6AF8               	clrf	tblptru,c
 21266  00108E  0EAA               	movlw	low _lt
 21267  001090  2414               	addwf	monta_sd@i^0,w,c
 21268  001092  6ED9               	movwf	fsr2l,c
 21269  001094  6ADA               	clrf	fsr2h,c
 21270  001096  0E01               	movlw	high _lt
 21271  001098  22DA               	addwfc	fsr2h,f,c
 21272  00109A  0E07               	movlw	(high __ramtop+-1)
 21273  00109C  64F7               	cpfsgt	tblptrh,c
 21274  00109E  D003               	bra	u15307
 21275  0010A0  0008               	tblrd		*
 21276  0010A2  50F5               	movf	tablat,w,c
 21277  0010A4  D005               	bra	u15300
 21278  0010A6                     u15307:
 21279  0010A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21280  0010AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21281  0010AE  50E7               	movf	indf1,w,c
 21282  0010B0                     u15300:
 21283  0010B0  6EDF               	movwf	indf2,c
 21284  0010B2                     l12707:
 21285                           
 21286                           ;SDCard.c: 338: };SDCard.c: 339: dado++;
 21287  0010B2  4A10               	infsnz	monta_sd@dado^0,f,c
 21288  0010B4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21289  0010B6  2A14               	incf	monta_sd@i^0,f,c
 21290  0010B8  0E0A               	movlw	10
 21291  0010BA  6414               	cpfsgt	monta_sd@i^0,c
 21292  0010BC  D7D0               	goto	l12703
 21293  0010BE  0012               	return	
 21294  0010C0                     l12713:
 21295                           
 21296                           ;SDCard.c: 344: for(i=0; i<12;i++)
 21297  0010C0  0E00               	movlw	0
 21298  0010C2  6E14               	movwf	monta_sd@i^0,c
 21299  0010C4                     l12719:
 21300                           
 21301                           ;SDCard.c: 345: {;SDCard.c: 346: if(*dado != '\0')
 21302  0010C4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21303  0010C8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21304  0010CC  6AF8               	clrf	tblptru,c
 21305  0010CE  0E07               	movlw	(high __ramtop+-1)
 21306  0010D0  64F7               	cpfsgt	tblptrh,c
 21307  0010D2  D003               	bra	u15327
 21308  0010D4  0008               	tblrd		*
 21309  0010D6  50F5               	movf	tablat,w,c
 21310  0010D8  D005               	bra	u15320
 21311  0010DA                     u15327:
 21312  0010DA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21313  0010DE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21314  0010E2  50E7               	movf	indf1,w,c
 21315  0010E4                     u15320:
 21316  0010E4  0900               	iorlw	0
 21317  0010E6  B4D8               	btfsc	status,2,c
 21318  0010E8  D017               	goto	l12723
 21319                           
 21320                           ;SDCard.c: 347: {;SDCard.c: 348: lo[i] = *dado;
 21321  0010EA  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21322  0010EE  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21323  0010F2  6AF8               	clrf	tblptru,c
 21324  0010F4  0E8D               	movlw	low _lo
 21325  0010F6  2414               	addwf	monta_sd@i^0,w,c
 21326  0010F8  6ED9               	movwf	fsr2l,c
 21327  0010FA  6ADA               	clrf	fsr2h,c
 21328  0010FC  0E02               	movlw	high _lo
 21329  0010FE  22DA               	addwfc	fsr2h,f,c
 21330  001100  0E07               	movlw	(high __ramtop+-1)
 21331  001102  64F7               	cpfsgt	tblptrh,c
 21332  001104  D003               	bra	u15347
 21333  001106  0008               	tblrd		*
 21334  001108  50F5               	movf	tablat,w,c
 21335  00110A  D005               	bra	u15340
 21336  00110C                     u15347:
 21337  00110C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21338  001110  CFF7 FFE2          	movff	tblptrh,fsr1h
 21339  001114  50E7               	movf	indf1,w,c
 21340  001116                     u15340:
 21341  001116  6EDF               	movwf	indf2,c
 21342  001118                     l12723:
 21343                           
 21344                           ;SDCard.c: 349: };SDCard.c: 350: dado++;
 21345  001118  4A10               	infsnz	monta_sd@dado^0,f,c
 21346  00111A  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21347  00111C  2A14               	incf	monta_sd@i^0,f,c
 21348  00111E  0E0B               	movlw	11
 21349  001120  6414               	cpfsgt	monta_sd@i^0,c
 21350  001122  D7D0               	goto	l12719
 21351  001124  0012               	return	
 21352  001126                     l12729:
 21353                           
 21354                           ;SDCard.c: 356: for(i=0; i<6;i++)
 21355  001126  0E00               	movlw	0
 21356  001128  6E14               	movwf	monta_sd@i^0,c
 21357  00112A                     l12735:
 21358                           
 21359                           ;SDCard.c: 357: {;SDCard.c: 358: if(*dado != ' ' && *dado != '\0')
 21360  00112A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21361  00112E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21362  001132  6AF8               	clrf	tblptru,c
 21363  001134  0E07               	movlw	(high __ramtop+-1)
 21364  001136  64F7               	cpfsgt	tblptrh,c
 21365  001138  D003               	bra	u15367
 21366  00113A  0008               	tblrd		*
 21367  00113C  50F5               	movf	tablat,w,c
 21368  00113E  D005               	bra	u15360
 21369  001140                     u15367:
 21370  001140  CFF6 FFE1          	movff	tblptrl,fsr1l
 21371  001144  CFF7 FFE2          	movff	tblptrh,fsr1h
 21372  001148  50E7               	movf	indf1,w,c
 21373  00114A                     u15360:
 21374  00114A  0A20               	xorlw	32
 21375  00114C  B4D8               	btfsc	status,2,c
 21376  00114E  D02A               	goto	l12741
 21377  001150  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21378  001154  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21379  001158  6AF8               	clrf	tblptru,c
 21380  00115A  0E07               	movlw	(high __ramtop+-1)
 21381  00115C  64F7               	cpfsgt	tblptrh,c
 21382  00115E  D003               	bra	u15387
 21383  001160  0008               	tblrd		*
 21384  001162  50F5               	movf	tablat,w,c
 21385  001164  D005               	bra	u15380
 21386  001166                     u15387:
 21387  001166  CFF6 FFE1          	movff	tblptrl,fsr1l
 21388  00116A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21389  00116E  50E7               	movf	indf1,w,c
 21390  001170                     u15380:
 21391  001170  0900               	iorlw	0
 21392  001172  B4D8               	btfsc	status,2,c
 21393  001174  D017               	goto	l12741
 21394                           
 21395                           ;SDCard.c: 359: {;SDCard.c: 360: fence[i] = *dado;
 21396  001176  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21397  00117A  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21398  00117E  6AF8               	clrf	tblptru,c
 21399  001180  0EDC               	movlw	low _fence
 21400  001182  2414               	addwf	monta_sd@i^0,w,c
 21401  001184  6ED9               	movwf	fsr2l,c
 21402  001186  6ADA               	clrf	fsr2h,c
 21403  001188  0E01               	movlw	high _fence
 21404  00118A  22DA               	addwfc	fsr2h,f,c
 21405  00118C  0E07               	movlw	(high __ramtop+-1)
 21406  00118E  64F7               	cpfsgt	tblptrh,c
 21407  001190  D003               	bra	u15407
 21408  001192  0008               	tblrd		*
 21409  001194  50F5               	movf	tablat,w,c
 21410  001196  D005               	bra	u15400
 21411  001198                     u15407:
 21412  001198  CFF6 FFE1          	movff	tblptrl,fsr1l
 21413  00119C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21414  0011A0  50E7               	movf	indf1,w,c
 21415  0011A2                     u15400:
 21416  0011A2  6EDF               	movwf	indf2,c
 21417  0011A4                     l12741:
 21418                           
 21419                           ;SDCard.c: 361: };SDCard.c: 362: dado++;
 21420  0011A4  4A10               	infsnz	monta_sd@dado^0,f,c
 21421  0011A6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21422  0011A8  2A14               	incf	monta_sd@i^0,f,c
 21423  0011AA  0E05               	movlw	5
 21424  0011AC  6414               	cpfsgt	monta_sd@i^0,c
 21425  0011AE  D7BD               	goto	l12735
 21426  0011B0  0012               	return	
 21427  0011B2                     l12747:
 21428                           
 21429                           ;SDCard.c: 367: for(i=0; i<4;i++)
 21430  0011B2  0E00               	movlw	0
 21431  0011B4  6E14               	movwf	monta_sd@i^0,c
 21432  0011B6                     l12753:
 21433                           
 21434                           ;SDCard.c: 368: {;SDCard.c: 369: string_dado.hora_name[i] = *dado;
 21435  0011B6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21436  0011BA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21437  0011BE  6AF8               	clrf	tblptru,c
 21438  0011C0  0E14               	movlw	low (_string_dado+20)
 21439  0011C2  2414               	addwf	monta_sd@i^0,w,c
 21440  0011C4  6ED9               	movwf	fsr2l,c
 21441  0011C6  6ADA               	clrf	fsr2h,c
 21442  0011C8  0E02               	movlw	high (_string_dado+20)
 21443  0011CA  22DA               	addwfc	fsr2h,f,c
 21444  0011CC  0E07               	movlw	(high __ramtop+-1)
 21445  0011CE  64F7               	cpfsgt	tblptrh,c
 21446  0011D0  D003               	bra	u15427
 21447  0011D2  0008               	tblrd		*
 21448  0011D4  50F5               	movf	tablat,w,c
 21449  0011D6  D005               	bra	u15420
 21450  0011D8                     u15427:
 21451  0011D8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21452  0011DC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21453  0011E0  50E7               	movf	indf1,w,c
 21454  0011E2                     u15420:
 21455  0011E2  6EDF               	movwf	indf2,c
 21456                           
 21457                           ;SDCard.c: 370: dado++;
 21458  0011E4  4A10               	infsnz	monta_sd@dado^0,f,c
 21459  0011E6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21460  0011E8  2A14               	incf	monta_sd@i^0,f,c
 21461  0011EA  0E03               	movlw	3
 21462  0011EC  6414               	cpfsgt	monta_sd@i^0,c
 21463  0011EE  D7E3               	goto	l12753
 21464  0011F0  0012               	return	
 21465  0011F2                     l12761:
 21466                           
 21467                           ;SDCard.c: 376: for(i=0; i<4;i++)
 21468  0011F2  0E00               	movlw	0
 21469  0011F4  6E14               	movwf	monta_sd@i^0,c
 21470  0011F6                     l12767:
 21471                           
 21472                           ;SDCard.c: 377: {;SDCard.c: 378: string_dado.data_name[i] = *dado;
 21473  0011F6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21474  0011FA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21475  0011FE  6AF8               	clrf	tblptru,c
 21476  001200  0E12               	movlw	low (_string_dado+18)
 21477  001202  2414               	addwf	monta_sd@i^0,w,c
 21478  001204  6ED9               	movwf	fsr2l,c
 21479  001206  6ADA               	clrf	fsr2h,c
 21480  001208  0E02               	movlw	high (_string_dado+18)
 21481  00120A  22DA               	addwfc	fsr2h,f,c
 21482  00120C  0E07               	movlw	(high __ramtop+-1)
 21483  00120E  64F7               	cpfsgt	tblptrh,c
 21484  001210  D003               	bra	u15447
 21485  001212  0008               	tblrd		*
 21486  001214  50F5               	movf	tablat,w,c
 21487  001216  D005               	bra	u15440
 21488  001218                     u15447:
 21489  001218  CFF6 FFE1          	movff	tblptrl,fsr1l
 21490  00121C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21491  001220  50E7               	movf	indf1,w,c
 21492  001222                     u15440:
 21493  001222  6EDF               	movwf	indf2,c
 21494                           
 21495                           ;SDCard.c: 379: dado++;
 21496  001224  4A10               	infsnz	monta_sd@dado^0,f,c
 21497  001226  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21498  001228  2A14               	incf	monta_sd@i^0,f,c
 21499  00122A  0E03               	movlw	3
 21500  00122C  6414               	cpfsgt	monta_sd@i^0,c
 21501  00122E  D7E3               	goto	l12767
 21502  001230  0012               	return	
 21503  001232                     l12775:
 21504                           
 21505                           ;SDCard.c: 384: for(i=0; i<6;i++)
 21506  001232  0E00               	movlw	0
 21507  001234  6E14               	movwf	monta_sd@i^0,c
 21508  001236                     l12781:
 21509                           
 21510                           ;SDCard.c: 385: {;SDCard.c: 386: if(*dado != ' ' && *dado != '\0')
 21511  001236  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21512  00123A  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21513  00123E  6AF8               	clrf	tblptru,c
 21514  001240  0E07               	movlw	(high __ramtop+-1)
 21515  001242  64F7               	cpfsgt	tblptrh,c
 21516  001244  D003               	bra	u15467
 21517  001246  0008               	tblrd		*
 21518  001248  50F5               	movf	tablat,w,c
 21519  00124A  D005               	bra	u15460
 21520  00124C                     u15467:
 21521  00124C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21522  001250  CFF7 FFE2          	movff	tblptrh,fsr1h
 21523  001254  50E7               	movf	indf1,w,c
 21524  001256                     u15460:
 21525  001256  0A20               	xorlw	32
 21526  001258  B4D8               	btfsc	status,2,c
 21527  00125A  D02A               	goto	l12787
 21528  00125C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21529  001260  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21530  001264  6AF8               	clrf	tblptru,c
 21531  001266  0E07               	movlw	(high __ramtop+-1)
 21532  001268  64F7               	cpfsgt	tblptrh,c
 21533  00126A  D003               	bra	u15487
 21534  00126C  0008               	tblrd		*
 21535  00126E  50F5               	movf	tablat,w,c
 21536  001270  D005               	bra	u15480
 21537  001272                     u15487:
 21538  001272  CFF6 FFE1          	movff	tblptrl,fsr1l
 21539  001276  CFF7 FFE2          	movff	tblptrh,fsr1h
 21540  00127A  50E7               	movf	indf1,w,c
 21541  00127C                     u15480:
 21542  00127C  0900               	iorlw	0
 21543  00127E  B4D8               	btfsc	status,2,c
 21544  001280  D017               	goto	l12787
 21545                           
 21546                           ;SDCard.c: 387: {;SDCard.c: 388: vel[i] = *dado;
 21547  001282  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21548  001286  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21549  00128A  6AF8               	clrf	tblptru,c
 21550  00128C  0ED6               	movlw	low _vel
 21551  00128E  2414               	addwf	monta_sd@i^0,w,c
 21552  001290  6ED9               	movwf	fsr2l,c
 21553  001292  6ADA               	clrf	fsr2h,c
 21554  001294  0E01               	movlw	high _vel
 21555  001296  22DA               	addwfc	fsr2h,f,c
 21556  001298  0E07               	movlw	(high __ramtop+-1)
 21557  00129A  64F7               	cpfsgt	tblptrh,c
 21558  00129C  D003               	bra	u15507
 21559  00129E  0008               	tblrd		*
 21560  0012A0  50F5               	movf	tablat,w,c
 21561  0012A2  D005               	bra	u15500
 21562  0012A4                     u15507:
 21563  0012A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21564  0012A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21565  0012AC  50E7               	movf	indf1,w,c
 21566  0012AE                     u15500:
 21567  0012AE  6EDF               	movwf	indf2,c
 21568  0012B0                     l12787:
 21569                           
 21570                           ;SDCard.c: 389: };SDCard.c: 391: dado++;
 21571  0012B0  4A10               	infsnz	monta_sd@dado^0,f,c
 21572  0012B2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21573  0012B4  2A14               	incf	monta_sd@i^0,f,c
 21574  0012B6  0E05               	movlw	5
 21575  0012B8  6414               	cpfsgt	monta_sd@i^0,c
 21576  0012BA  D7BD               	goto	l12781
 21577  0012BC  0012               	return	
 21578  0012BE                     l12795:
 21579  0012BE  5013               	movf	monta_sd@index^0,w,c
 21580                           
 21581                           ; Switch size 1, requested type "simple"
 21582                           ; Number of cases is 8, Range of values is 0 to 7
 21583                           ; switch strategies available:
 21584                           ; Name         Instructions Cycles
 21585                           ; simple_byte           25    13 (average)
 21586                           ;	Chosen strategy is simple_byte
 21587  0012C0  0A00               	xorlw	0	; case 0
 21588  0012C2  B4D8               	btfsc	status,2,c
 21589  0012C4  D664               	goto	l12665
 21590  0012C6  0A01               	xorlw	1	; case 1
 21591  0012C8  B4D8               	btfsc	status,2,c
 21592  0012CA  D694               	goto	l12681
 21593  0012CC  0A03               	xorlw	3	; case 2
 21594  0012CE  B4D8               	btfsc	status,2,c
 21595  0012D0  D6C4               	goto	l12697
 21596  0012D2  0A01               	xorlw	1	; case 3
 21597  0012D4  B4D8               	btfsc	status,2,c
 21598  0012D6  D6F4               	goto	l12713
 21599  0012D8  0A07               	xorlw	7	; case 4
 21600  0012DA  B4D8               	btfsc	status,2,c
 21601  0012DC  D724               	goto	l12729
 21602  0012DE  0A01               	xorlw	1	; case 5
 21603  0012E0  B4D8               	btfsc	status,2,c
 21604  0012E2  D767               	goto	l12747
 21605  0012E4  0A03               	xorlw	3	; case 6
 21606  0012E6  B4D8               	btfsc	status,2,c
 21607  0012E8  D784               	goto	l12761
 21608  0012EA  0A01               	xorlw	1	; case 7
 21609  0012EC  A4D8               	btfss	status,2,c
 21610  0012EE  0012               	return	
 21611  0012F0  D7A0               	goto	l12775
 21612  0012F2                     __end_of_monta_sd:
 21613                           	callstack 0
 21614                           
 21615 ;; *************** function _strlen *****************
 21616 ;; Defined at:
 21617 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21618 ;; Parameters:    Size  Location     Type
 21619 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21620 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21621 ;;		 -> dados_lat(33), STR_21(7), STR_20(7), rawSpeed(20), 
 21622 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21623 ;; Auto vars:     Size  Location     Type
 21624 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21625 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21626 ;;		 -> dados_lat(33), STR_21(7), STR_20(7), rawSpeed(20), 
 21627 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21628 ;; Return value:  Size  Location     Type
 21629 ;;                  2    9[COMRAM] unsigned int 
 21630 ;; Registers used:
 21631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21632 ;; Tracked objects:
 21633 ;;		On entry : 0/2
 21634 ;;		On exit  : 0/0
 21635 ;;		Unchanged: 0/0
 21636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21637 ;;      Params:         2       0       0       0       0       0       0       0       0
 21638 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21639 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21640 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21641 ;;Total ram usage:        4 bytes
 21642 ;; Hardware stack levels used:    1
 21643 ;; Hardware stack levels required when called:    2
 21644 ;; This function calls:
 21645 ;;		Nothing
 21646 ;; This function is called by:
 21647 ;;		_monta_sd
 21648 ;; This function uses a non-reentrant model
 21649 ;;
 21650                           
 21651                           	psect	text128
 21652  0055B2                     __ptext128:
 21653                           	callstack 0
 21654  0055B2                     _strlen:
 21655                           	callstack 24
 21656                           
 21657                           ;incstack = 0
 21658  0055B2  C00A  F00C         	movff	strlen@s,strlen@cp
 21659  0055B6  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21660  0055BA  D002               	goto	l12521
 21661  0055BC                     l12519:
 21662  0055BC  4A0C               	infsnz	strlen@cp^0,f,c
 21663  0055BE  2A0D               	incf	(strlen@cp+1)^0,f,c
 21664  0055C0                     l12521:
 21665  0055C0  C00C  FFF6         	movff	strlen@cp,tblptrl
 21666  0055C4  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21667  0055C8  6AF8               	clrf	tblptru,c
 21668  0055CA  0E07               	movlw	(high __ramtop+-1)
 21669  0055CC  64F7               	cpfsgt	tblptrh,c
 21670  0055CE  D003               	bra	u14927
 21671  0055D0  0008               	tblrd		*
 21672  0055D2  50F5               	movf	tablat,w,c
 21673  0055D4  D005               	bra	u14920
 21674  0055D6                     u14927:
 21675  0055D6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21676  0055DA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21677  0055DE  50E7               	movf	indf1,w,c
 21678  0055E0                     u14920:
 21679  0055E0  0900               	iorlw	0
 21680  0055E2  A4D8               	btfss	status,2,c
 21681  0055E4  D7EB               	goto	l12519
 21682  0055E6  500A               	movf	strlen@s^0,w,c
 21683  0055E8  5C0C               	subwf	strlen@cp^0,w,c
 21684  0055EA  6E0A               	movwf	?_strlen^0,c
 21685  0055EC  500B               	movf	(strlen@s+1)^0,w,c
 21686  0055EE  580D               	subwfb	(strlen@cp+1)^0,w,c
 21687  0055F0  6E0B               	movwf	(?_strlen+1)^0,c
 21688  0055F2  0012               	return		;funcret
 21689  0055F4                     __end_of_strlen:
 21690                           	callstack 0
 21691                           
 21692 ;; *************** function _atoi *****************
 21693 ;; Defined at:
 21694 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21695 ;; Parameters:    Size  Location     Type
 21696 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21697 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  a               2   21[COMRAM] int 
 21700 ;;  sign            1   20[COMRAM] unsigned char 
 21701 ;; Return value:  Size  Location     Type
 21702 ;;                  2   15[COMRAM] int 
 21703 ;; Registers used:
 21704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21705 ;; Tracked objects:
 21706 ;;		On entry : 3F/0
 21707 ;;		On exit  : 0/0
 21708 ;;		Unchanged: 0/0
 21709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21710 ;;      Params:         3       0       0       0       0       0       0       0       0
 21711 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21712 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21713 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21714 ;;Total ram usage:        8 bytes
 21715 ;; Hardware stack levels used:    1
 21716 ;; Hardware stack levels required when called:    3
 21717 ;; This function calls:
 21718 ;;		___wmul
 21719 ;;		_isdigit
 21720 ;; This function is called by:
 21721 ;;		_verifica_dados_operacionais
 21722 ;;		_disparo_gravacao
 21723 ;; This function uses a non-reentrant model
 21724 ;;
 21725                           
 21726                           	psect	text129
 21727  003268                     __ptext129:
 21728                           	callstack 0
 21729  003268                     _atoi:
 21730                           	callstack 25
 21731                           
 21732                           ; BSR set to: 0
 21733                           
 21734                           ;incstack = 0
 21735  003268  D006               	goto	l13115
 21736  00326A                     l13113:
 21737  00326A  0E01               	movlw	1
 21738  00326C  2610               	addwf	atoi@s^0,f,c
 21739  00326E  0E00               	movlw	0
 21740  003270  2211               	addwfc	(atoi@s+1)^0,f,c
 21741  003272  0E00               	movlw	0
 21742  003274  2212               	addwfc	(atoi@s+2)^0,f,c
 21743  003276                     l13115:
 21744  003276  C010  FFF6         	movff	atoi@s,tblptrl
 21745  00327A  C011  FFF7         	movff	atoi@s+1,tblptrh
 21746  00327E  C012  FFF8         	movff	atoi@s+2,tblptru
 21747  003282  BAF8               	btfsc	tblptru,5,c
 21748  003284  D003               	bra	u15957
 21749  003286  0008               	tblrd		*
 21750  003288  50F5               	movf	tablat,w,c
 21751  00328A  D005               	bra	u15950
 21752  00328C                     u15957:
 21753  00328C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21754  003290  CFF7 FFE2          	movff	tblptrh,fsr1h
 21755  003294  50E7               	movf	indf1,w,c
 21756  003296                     u15950:
 21757  003296  0A20               	xorlw	32
 21758  003298  B4D8               	btfsc	status,2,c
 21759  00329A  D7E7               	goto	l13113
 21760  00329C  C010  FFF6         	movff	atoi@s,tblptrl
 21761  0032A0  C011  FFF7         	movff	atoi@s+1,tblptrh
 21762  0032A4  C012  FFF8         	movff	atoi@s+2,tblptru
 21763  0032A8  BAF8               	btfsc	tblptru,5,c
 21764  0032AA  D003               	bra	u15977
 21765  0032AC  0008               	tblrd		*
 21766  0032AE  50F5               	movf	tablat,w,c
 21767  0032B0  D005               	bra	u15970
 21768  0032B2                     u15977:
 21769  0032B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21770  0032B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21771  0032BA  50E7               	movf	indf1,w,c
 21772  0032BC                     u15970:
 21773  0032BC  0A09               	xorlw	9
 21774  0032BE  B4D8               	btfsc	status,2,c
 21775  0032C0  D7D4               	goto	l13113
 21776  0032C2  0E00               	movlw	0
 21777  0032C4  6E17               	movwf	(atoi@a+1)^0,c
 21778  0032C6  0E00               	movlw	0
 21779  0032C8  6E16               	movwf	atoi@a^0,c
 21780  0032CA  0E00               	movlw	0
 21781  0032CC  6E15               	movwf	atoi@sign^0,c
 21782  0032CE  C010  FFF6         	movff	atoi@s,tblptrl
 21783  0032D2  C011  FFF7         	movff	atoi@s+1,tblptrh
 21784  0032D6  C012  FFF8         	movff	atoi@s+2,tblptru
 21785  0032DA  BAF8               	btfsc	tblptru,5,c
 21786  0032DC  D003               	bra	u15997
 21787  0032DE  0008               	tblrd		*
 21788  0032E0  50F5               	movf	tablat,w,c
 21789  0032E2  D005               	bra	u15990
 21790  0032E4                     u15997:
 21791  0032E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21792  0032E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21793  0032EC  50E7               	movf	indf1,w,c
 21794  0032EE                     u15990:
 21795  0032EE  0A2D               	xorlw	45
 21796  0032F0  A4D8               	btfss	status,2,c
 21797  0032F2  D008               	goto	l13127
 21798  0032F4  2A15               	incf	atoi@sign^0,f,c
 21799  0032F6                     l13125:
 21800  0032F6  0E01               	movlw	1
 21801  0032F8  2610               	addwf	atoi@s^0,f,c
 21802  0032FA  0E00               	movlw	0
 21803  0032FC  2211               	addwfc	(atoi@s+1)^0,f,c
 21804  0032FE  0E00               	movlw	0
 21805  003300  2212               	addwfc	(atoi@s+2)^0,f,c
 21806  003302  D03A               	goto	l13135
 21807  003304                     l13127:
 21808  003304  C010  FFF6         	movff	atoi@s,tblptrl
 21809  003308  C011  FFF7         	movff	atoi@s+1,tblptrh
 21810  00330C  C012  FFF8         	movff	atoi@s+2,tblptru
 21811  003310  BAF8               	btfsc	tblptru,5,c
 21812  003312  D003               	bra	u16017
 21813  003314  0008               	tblrd		*
 21814  003316  50F5               	movf	tablat,w,c
 21815  003318  D005               	bra	u16010
 21816  00331A                     u16017:
 21817  00331A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21818  00331E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21819  003322  50E7               	movf	indf1,w,c
 21820  003324                     u16010:
 21821  003324  0A2B               	xorlw	43
 21822  003326  B4D8               	btfsc	status,2,c
 21823  003328  D7E6               	goto	l13125
 21824  00332A  D026               	goto	l13135
 21825  00332C                     l13131:
 21826  00332C  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21827  003330  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21828  003334  0E00               	movlw	0
 21829  003336  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21830  003338  0E0A               	movlw	10
 21831  00333A  6E0C               	movwf	___wmul@multiplicand^0,c
 21832  00333C  ECDA  F02C         	call	___wmul	;wreg free
 21833  003340  C010  FFF6         	movff	atoi@s,tblptrl
 21834  003344  C011  FFF7         	movff	atoi@s+1,tblptrh
 21835  003348  C012  FFF8         	movff	atoi@s+2,tblptru
 21836  00334C  BAF8               	btfsc	tblptru,5,c
 21837  00334E  D003               	bra	u16037
 21838  003350  0008               	tblrd		*
 21839  003352  50F5               	movf	tablat,w,c
 21840  003354  D005               	bra	u16030
 21841  003356                     u16037:
 21842  003356  CFF6 FFE1          	movff	tblptrl,fsr1l
 21843  00335A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21844  00335E  50E7               	movf	indf1,w,c
 21845  003360                     u16030:
 21846  003360  6E13               	movwf	??_atoi^0,c
 21847  003362  5013               	movf	??_atoi^0,w,c
 21848  003364  260A               	addwf	?___wmul^0,f,c
 21849  003366  0E00               	movlw	0
 21850  003368  220B               	addwfc	(?___wmul+1)^0,f,c
 21851  00336A  0ED0               	movlw	208
 21852  00336C  240A               	addwf	?___wmul^0,w,c
 21853  00336E  6E16               	movwf	atoi@a^0,c
 21854  003370  0EFF               	movlw	255
 21855  003372  200B               	addwfc	(?___wmul+1)^0,w,c
 21856  003374  6E17               	movwf	(atoi@a+1)^0,c
 21857  003376  D7BF               	goto	l13125
 21858  003378                     l13135:
 21859  003378  C010  FFF6         	movff	atoi@s,tblptrl
 21860  00337C  C011  FFF7         	movff	atoi@s+1,tblptrh
 21861  003380  C012  FFF8         	movff	atoi@s+2,tblptru
 21862  003384  BAF8               	btfsc	tblptru,5,c
 21863  003386  D003               	bra	u16047
 21864  003388  0008               	tblrd		*
 21865  00338A  50F5               	movf	tablat,w,c
 21866  00338C  D005               	bra	u16040
 21867  00338E                     u16047:
 21868  00338E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21869  003392  CFF7 FFE2          	movff	tblptrh,fsr1h
 21870  003396  50E7               	movf	indf1,w,c
 21871  003398                     u16040:
 21872  003398  ECC7  F02D         	call	_isdigit
 21873  00339C  B0D8               	btfsc	status,0,c
 21874  00339E  D7C6               	goto	l13131
 21875  0033A0  5015               	movf	atoi@sign^0,w,c
 21876  0033A2  B4D8               	btfsc	status,2,c
 21877  0033A4  D00D               	goto	l2429
 21878  0033A6  C016  F013         	movff	atoi@a,??_atoi
 21879  0033AA  C017  F014         	movff	atoi@a+1,??_atoi+1
 21880  0033AE  1E13               	comf	??_atoi^0,f,c
 21881  0033B0  1E14               	comf	(??_atoi+1)^0,f,c
 21882  0033B2  4A13               	infsnz	??_atoi^0,f,c
 21883  0033B4  2A14               	incf	(??_atoi+1)^0,f,c
 21884  0033B6  C013  F010         	movff	??_atoi,?_atoi
 21885  0033BA  C014  F011         	movff	??_atoi+1,?_atoi+1
 21886  0033BE  0012               	return	
 21887  0033C0                     l2429:
 21888  0033C0  C016  F010         	movff	atoi@a,?_atoi
 21889  0033C4  C017  F011         	movff	atoi@a+1,?_atoi+1
 21890  0033C8  0012               	return		;funcret
 21891  0033CA                     __end_of_atoi:
 21892                           	callstack 0
 21893                           
 21894 ;; *************** function _isdigit *****************
 21895 ;; Defined at:
 21896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21897 ;; Parameters:    Size  Location     Type
 21898 ;;  c               1    wreg     unsigned char 
 21899 ;; Auto vars:     Size  Location     Type
 21900 ;;  c               1   11[COMRAM] unsigned char 
 21901 ;; Return value:  Size  Location     Type
 21902 ;;		None               void
 21903 ;; Registers used:
 21904 ;;		wreg, status,2, status,0
 21905 ;; Tracked objects:
 21906 ;;		On entry : 0/0
 21907 ;;		On exit  : 0/0
 21908 ;;		Unchanged: 0/0
 21909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21910 ;;      Params:         0       0       0       0       0       0       0       0       0
 21911 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21912 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21913 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21914 ;;Total ram usage:        3 bytes
 21915 ;; Hardware stack levels used:    1
 21916 ;; Hardware stack levels required when called:    2
 21917 ;; This function calls:
 21918 ;;		Nothing
 21919 ;; This function is called by:
 21920 ;;		_atoi
 21921 ;;		_atol
 21922 ;; This function uses a non-reentrant model
 21923 ;;
 21924                           
 21925                           	psect	text130
 21926  005B8E                     __ptext130:
 21927                           	callstack 0
 21928  005B8E                     _isdigit:
 21929                           	callstack 25
 21930                           
 21931                           ;incstack = 0
 21932                           ;isdigit@c stored from wreg
 21933  005B8E  6E0C               	movwf	isdigit@c^0,c
 21934  005B90  0E00               	movlw	0
 21935  005B92  6E0B               	movwf	_isdigit$3273^0,c
 21936  005B94  0E3A               	movlw	58
 21937  005B96  600C               	cpfslt	isdigit@c^0,c
 21938  005B98  D005               	goto	l10917
 21939  005B9A  0E2F               	movlw	47
 21940  005B9C  640C               	cpfsgt	isdigit@c^0,c
 21941  005B9E  D002               	goto	l10917
 21942  005BA0  0E01               	movlw	1
 21943  005BA2  6E0B               	movwf	_isdigit$3273^0,c
 21944  005BA4                     l10917:
 21945  005BA4  C00B  F00A         	movff	_isdigit$3273,??_isdigit
 21946  005BA8  300A               	rrcf	??_isdigit^0,w,c
 21947  005BAA  0012               	return		;funcret
 21948  005BAC                     __end_of_isdigit:
 21949                           	callstack 0
 21950                           
 21951 ;; *************** function ___wmul *****************
 21952 ;; Defined at:
 21953 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;  multiplier      2    9[COMRAM] unsigned int 
 21956 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21957 ;; Auto vars:     Size  Location     Type
 21958 ;;  product         2   13[COMRAM] unsigned int 
 21959 ;; Return value:  Size  Location     Type
 21960 ;;                  2    9[COMRAM] unsigned int 
 21961 ;; Registers used:
 21962 ;;		wreg, status,2, status,0, prodl, prodh
 21963 ;; Tracked objects:
 21964 ;;		On entry : 0/2
 21965 ;;		On exit  : 0/0
 21966 ;;		Unchanged: 0/0
 21967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21968 ;;      Params:         4       0       0       0       0       0       0       0       0
 21969 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21971 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21972 ;;Total ram usage:        6 bytes
 21973 ;; Hardware stack levels used:    1
 21974 ;; Hardware stack levels required when called:    2
 21975 ;; This function calls:
 21976 ;;		Nothing
 21977 ;; This function is called by:
 21978 ;;		_get_cluster
 21979 ;;		_put_cluster
 21980 ;;		_fprintf
 21981 ;;		_atoi
 21982 ;;		_disparo_gravacao
 21983 ;; This function uses a non-reentrant model
 21984 ;;
 21985                           
 21986                           	psect	text131
 21987  0059B4                     __ptext131:
 21988                           	callstack 0
 21989  0059B4                     ___wmul:
 21990                           	callstack 25
 21991                           
 21992                           ;incstack = 0
 21993  0059B4  500A               	movf	___wmul@multiplier^0,w,c
 21994  0059B6  020C               	mulwf	___wmul@multiplicand^0,c
 21995  0059B8  CFF3 F00E          	movff	prodl,___wmul@product
 21996  0059BC  CFF4 F00F          	movff	prodh,___wmul@product+1
 21997  0059C0  500A               	movf	___wmul@multiplier^0,w,c
 21998  0059C2  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21999  0059C4  50F3               	movf	243,w,c
 22000  0059C6  260F               	addwf	(___wmul@product+1)^0,f,c
 22001  0059C8  500B               	movf	(___wmul@multiplier+1)^0,w,c
 22002  0059CA  020C               	mulwf	___wmul@multiplicand^0,c
 22003  0059CC  50F3               	movf	243,w,c
 22004  0059CE  260F               	addwf	(___wmul@product+1)^0,f,c
 22005  0059D0  C00E  F00A         	movff	___wmul@product,?___wmul
 22006  0059D4  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 22007  0059D8  0012               	return		;funcret
 22008  0059DA                     __end_of___wmul:
 22009                           	callstack 0
 22010                           
 22011 ;; *************** function _isr *****************
 22012 ;; Defined at:
 22013 ;;		line 113 in file "main.c"
 22014 ;; Parameters:    Size  Location     Type
 22015 ;;		None
 22016 ;; Auto vars:     Size  Location     Type
 22017 ;;  cont            1    8[COMRAM] unsigned char 
 22018 ;; Return value:  Size  Location     Type
 22019 ;;                  1    wreg      void 
 22020 ;; Registers used:
 22021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22022 ;; Tracked objects:
 22023 ;;		On entry : 0/0
 22024 ;;		On exit  : 0/0
 22025 ;;		Unchanged: 0/0
 22026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22027 ;;      Params:         0       0       0       0       0       0       0       0       0
 22028 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22029 ;;      Temps:          6       0       0       0       0       0       0       0       0
 22030 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22031 ;;Total ram usage:        7 bytes
 22032 ;; Hardware stack levels used:    1
 22033 ;; Hardware stack levels required when called:    1
 22034 ;; This function calls:
 22035 ;;		_recebe_dado_uart
 22036 ;;		_tratamento_uart
 22037 ;;		i2_write_timer_zero
 22038 ;; This function is called by:
 22039 ;;		Interrupt level 2
 22040 ;; This function uses a non-reentrant model
 22041 ;;
 22042                           
 22043                           	psect	intcode
 22044  000008                     __pintcode:
 22045                           	callstack 0
 22046  000008                     _isr:
 22047                           	callstack 13
 22048                           
 22049                           ;incstack = 0
 22050  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 22051  00000A  ED19  F01F         	call	int_func,f	;refresh shadow registers
 22052                           
 22053                           	psect	intcode_body
 22054  003E32                     __pintcode_body:
 22055                           	callstack 13
 22056  003E32                     int_func:
 22057                           	callstack 13
 22058  003E32  0006               	pop		; remove dummy address from shadow register refresh
 22059  003E34  CFD9 F005          	movff	fsr2l,??_isr+2
 22060  003E38  CFDA F006          	movff	fsr2h,??_isr+3
 22061  003E3C  CFF3 F007          	movff	prodl,??_isr+4
 22062  003E40  CFF4 F008          	movff	prodh,??_isr+5
 22063                           
 22064                           ;main.c: 115: unsigned char cont;;main.c: 118: if (PIE1bits.RCIE && PIR1bits.RCIF)
 22065  003E44  BA9D               	btfsc	157,5,c	;volatile
 22066  003E46  AA9E               	btfss	158,5,c	;volatile
 22067  003E48  D015               	goto	i2l10077
 22068                           
 22069                           ;main.c: 119: {;main.c: 120: PIR1bits.RCIF = 0;
 22070  003E4A  9A9E               	bcf	158,5,c	;volatile
 22071                           
 22072                           ;main.c: 121: data_uart_recebe = recebe_dado_uart();
 22073  003E4C  EC28  F02E         	call	_recebe_dado_uart	;wreg free
 22074  003E50  0100               	movlb	0	; () banked
 22075  003E52  6FFD               	movwf	_data_uart_recebe& (0+255),b
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;main.c: 122: tratamento_uart(data_uart_recebe);
 22079  003E54  51FD               	movf	_data_uart_recebe& (0+255),w,b
 22080  003E56  EC92  F01D         	call	_tratamento_uart
 22081                           
 22082                           ;main.c: 123: PORTBbits.RB2 = !PORTBbits.RB2;
 22083  003E5A  B481               	btfsc	129,2,c	;volatile
 22084  003E5C  D003               	goto	i2u1125_40
 22085  003E5E  6A03               	clrf	??_isr^0,c
 22086  003E60  2A03               	incf	??_isr^0,f,c
 22087  003E62  D001               	goto	i2u1126_48
 22088  003E64                     i2u1125_40:
 22089  003E64  6A03               	clrf	??_isr^0,c
 22090  003E66                     i2u1126_48:
 22091  003E66  4603               	rlncf	??_isr^0,f,c
 22092  003E68  4603               	rlncf	??_isr^0,f,c
 22093  003E6A  5081               	movf	129,w,c	;volatile
 22094  003E6C  1803               	xorwf	??_isr^0,w,c
 22095  003E6E  0BFB               	andlw	-5
 22096  003E70  1803               	xorwf	??_isr^0,w,c
 22097  003E72  6E81               	movwf	129,c	;volatile
 22098  003E74                     i2l10077:
 22099                           
 22100                           ;main.c: 124: };main.c: 127: unsigned char cont;;main.c: 129: if (TMR0IF && T0IF)
 22101  003E74  B4F2               	btfsc	4082,2,c	;volatile
 22102  003E76  A4F2               	btfss	4082,2,c	;volatile
 22103  003E78  D044               	goto	i2l10115
 22104                           
 22105                           ;main.c: 130: {;main.c: 131: INTCONbits.TMR0IF = 0;
 22106  003E7A  94F2               	bcf	242,2,c	;volatile
 22107                           
 22108                           ;main.c: 132: sinaliza_int_timer = 1;
 22109  003E7C  0E01               	movlw	1
 22110  003E7E  0100               	movlb	0	; () banked
 22111  003E80  6FFC               	movwf	_sinaliza_int_timer& (0+255),b
 22112                           
 22113                           ;main.c: 134: for(cont= 0; cont<3;cont++)
 22114  003E82  0E00               	movlw	0
 22115  003E84  6E09               	movwf	isr@cont^0,c
 22116  003E86                     i2l10089:
 22117                           
 22118                           ;main.c: 135: {;main.c: 136: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 22119  003E86  5009               	movf	isr@cont^0,w,c
 22120  003E88  0D02               	mullw	2
 22121  003E8A  0E24               	movlw	low _tempo_tarefa
 22122  003E8C  24F3               	addwf	243,w,c
 22123  003E8E  6ED9               	movwf	fsr2l,c
 22124  003E90  0E01               	movlw	high _tempo_tarefa
 22125  003E92  20F4               	addwfc	prodh,w,c
 22126  003E94  6EDA               	movwf	fsr2h,c
 22127  003E96  50DE               	movf	postinc2,w,c
 22128  003E98  10DE               	iorwf	postinc2,w,c
 22129  003E9A  B4D8               	btfsc	status,2,c
 22130  003E9C  D00B               	goto	i2l10093
 22131  003E9E  5009               	movf	isr@cont^0,w,c
 22132  003EA0  0D02               	mullw	2
 22133  003EA2  0E24               	movlw	low _tempo_tarefa
 22134  003EA4  24F3               	addwf	243,w,c
 22135  003EA6  6ED9               	movwf	fsr2l,c
 22136  003EA8  0E01               	movlw	high _tempo_tarefa
 22137  003EAA  20F4               	addwfc	prodh,w,c
 22138  003EAC  6EDA               	movwf	fsr2h,c
 22139  003EAE  06DE               	decf	postinc2,f,c
 22140  003EB0  0E00               	movlw	0
 22141  003EB2  5ADD               	subwfb	postdec2,f,c
 22142  003EB4                     i2l10093:
 22143  003EB4  2A09               	incf	isr@cont^0,f,c
 22144  003EB6  0E02               	movlw	2
 22145  003EB8  6409               	cpfsgt	isr@cont^0,c
 22146  003EBA  D7E5               	goto	i2l10089
 22147                           
 22148                           ;main.c: 138: };main.c: 139: if(time_sd > 0) time_sd--;
 22149  003EBC  0101               	movlb	1	; () banked
 22150  003EBE  516A               	movf	_time_sd& (0+255),w,b
 22151  003EC0  116B               	iorwf	(_time_sd+1)& (0+255),w,b
 22152  003EC2  B4D8               	btfsc	status,2,c
 22153  003EC4  D003               	goto	i2l10101
 22154                           
 22155                           ; BSR set to: 1
 22156  003EC6  076A               	decf	_time_sd& (0+255),f,b
 22157  003EC8  A0D8               	btfss	status,0,c
 22158  003ECA  076B               	decf	(_time_sd+1)& (0+255),f,b
 22159  003ECC                     i2l10101:
 22160                           
 22161                           ; BSR set to: 1
 22162                           ;main.c: 140: if(time_atualizacao > 0) time_atualizacao--;
 22163  003ECC  5166               	movf	_time_atualizacao& (0+255),w,b
 22164  003ECE  1167               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22165  003ED0  B4D8               	btfsc	status,2,c
 22166  003ED2  D003               	goto	i2l10105
 22167                           
 22168                           ; BSR set to: 1
 22169  003ED4  0766               	decf	_time_atualizacao& (0+255),f,b
 22170  003ED6  A0D8               	btfss	status,0,c
 22171  003ED8  0767               	decf	(_time_atualizacao+1)& (0+255),f,b
 22172  003EDA                     i2l10105:
 22173                           
 22174                           ; BSR set to: 1
 22175                           ;main.c: 142: if(tarefa_em_execucao == 1)
 22176  003EDA  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22177  003EDC  A4D8               	btfss	status,2,c
 22178  003EDE  D00B               	goto	i2l10113
 22179                           
 22180                           ; BSR set to: 1
 22181                           ;main.c: 143: {;main.c: 144: timeout_tarefa--;
 22182  003EE0  076C               	decf	_timeout_tarefa& (0+255),f,b
 22183  003EE2  A0D8               	btfss	status,0,c
 22184  003EE4  076D               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;main.c: 145: if(!timeout_tarefa)
 22188  003EE6  516C               	movf	_timeout_tarefa& (0+255),w,b
 22189  003EE8  116D               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22190  003EEA  A4D8               	btfss	status,2,c
 22191  003EEC  D004               	goto	i2l10113
 22192                           
 22193                           ; BSR set to: 1
 22194                           ;main.c: 146: {;main.c: 148: PCLATH = 0;
 22195  003EEE  0E00               	movlw	0
 22196  003EF0  6EFA               	movwf	250,c	;volatile
 22197                           
 22198                           ;main.c: 149: PCL = 0;
 22199  003EF2  0E00               	movlw	0
 22200  003EF4  6EF9               	movwf	249,c	;volatile
 22201  003EF6                     i2l10113:
 22202                           
 22203                           ; BSR set to: 1
 22204                           ;main.c: 150: };main.c: 151: };main.c: 155: write_timer_zero(0x45);
 22205  003EF6  0E00               	movlw	0
 22206  003EF8  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22207  003EFA  0E45               	movlw	69
 22208  003EFC  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22209  003EFE  EC8D  F02E         	call	i2_write_timer_zero	;wreg free
 22210  003F02                     i2l10115:
 22211                           
 22212                           ;main.c: 156: };main.c: 158: if (INT0IF && INT0IE)
 22213  003F02  B2F2               	btfsc	4082,1,c	;volatile
 22214  003F04  A8F2               	btfss	4082,4,c	;volatile
 22215  003F06  D001               	goto	i2l1552
 22216                           
 22217                           ;main.c: 159: {;main.c: 160: INT0IF = 0;
 22218  003F08  92F2               	bcf	4082,1,c	;volatile
 22219  003F0A                     i2l1552:
 22220  003F0A  C008  FFF4         	movff	??_isr+5,prodh
 22221  003F0E  C007  FFF3         	movff	??_isr+4,prodl
 22222  003F12  C006  FFDA         	movff	??_isr+3,fsr2h
 22223  003F16  C005  FFD9         	movff	??_isr+2,fsr2l
 22224  003F1A  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22225  003F1C  0011               	retfie		f
 22226  003F1E                     __end_of_isr:
 22227                           	callstack 0
 22228                           
 22229 ;; *************** function i2_write_timer_zero *****************
 22230 ;; Defined at:
 22231 ;;		line 134 in file "bibliotecas/hardware.c"
 22232 ;; Parameters:    Size  Location     Type
 22233 ;;  timer0          2    0[COMRAM] unsigned int 
 22234 ;; Auto vars:     Size  Location     Type
 22235 ;;		None
 22236 ;; Return value:  Size  Location     Type
 22237 ;;                  1    wreg      void 
 22238 ;; Registers used:
 22239 ;;		None
 22240 ;; Tracked objects:
 22241 ;;		On entry : 3F/1
 22242 ;;		On exit  : 3F/1
 22243 ;;		Unchanged: 3F/0
 22244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22245 ;;      Params:         2       0       0       0       0       0       0       0       0
 22246 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22248 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22249 ;;Total ram usage:        2 bytes
 22250 ;; Hardware stack levels used:    1
 22251 ;; This function calls:
 22252 ;;		Nothing
 22253 ;; This function is called by:
 22254 ;;		_isr
 22255 ;; This function uses a non-reentrant model
 22256 ;;
 22257                           
 22258                           	psect	text133
 22259  005D1A                     __ptext133:
 22260                           	callstack 0
 22261  005D1A                     i2_write_timer_zero:
 22262                           	callstack 13
 22263                           
 22264                           ; BSR set to: 1
 22265                           ;hardware.c: 142: TMR0 = timer0;
 22266                           
 22267                           ;incstack = 0
 22268  005D1A  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22269  005D1E  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22270                           
 22271                           ; BSR set to: 1
 22272  005D22  0012               	return		;funcret
 22273  005D24                     __end_ofi2_write_timer_zero:
 22274                           	callstack 0
 22275                           
 22276 ;; *************** function _tratamento_uart *****************
 22277 ;; Defined at:
 22278 ;;		line 362 in file "bibliotecas/GPS.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;  received_cha    1    wreg     unsigned char 
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;  received_cha    1    0[COMRAM] unsigned char 
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1    wreg      void 
 22285 ;; Registers used:
 22286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22287 ;; Tracked objects:
 22288 ;;		On entry : 3F/0
 22289 ;;		On exit  : 3E/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0
 22293 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22294 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22295 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22296 ;;Total ram usage:        1 bytes
 22297 ;; Hardware stack levels used:    1
 22298 ;; This function calls:
 22299 ;;		Nothing
 22300 ;; This function is called by:
 22301 ;;		_isr
 22302 ;; This function uses a non-reentrant model
 22303 ;;
 22304                           
 22305                           	psect	text134
 22306  003B24                     __ptext134:
 22307                           	callstack 0
 22308  003B24                     _tratamento_uart:
 22309                           	callstack 13
 22310                           
 22311                           ; BSR set to: 1
 22312                           ;incstack = 0
 22313                           ;tratamento_uart@received_char stored from wreg
 22314  003B24  6E01               	movwf	tratamento_uart@received_char^0,c
 22315                           
 22316                           ;GPS.c: 364: if(received_char =='$'){
 22317  003B26  0E24               	movlw	36
 22318  003B28  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22319  003B2A  A4D8               	btfss	status,2,c
 22320  003B2C  D011               	goto	i2l9865
 22321                           
 22322                           ;GPS.c: 365: gga_index = 0;
 22323  003B2E  0E00               	movlw	0
 22324  003B30  0100               	movlb	0	; () banked
 22325  003B32  6FFA               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22326  003B34  0E00               	movlw	0
 22327  003B36  6FF9               	movwf	_gga_index& (0+255),b	;volatile
 22328                           
 22329                           ;GPS.c: 366: rmc_index = 0;
 22330  003B38  0E00               	movlw	0
 22331  003B3A  6FF8               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22332  003B3C  0E00               	movlw	0
 22333  003B3E  6FF7               	movwf	_rmc_index& (0+255),b	;volatile
 22334                           
 22335                           ;GPS.c: 367: is_it_gga_string = 0;
 22336  003B40  0E00               	movlw	0
 22337  003B42  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22338                           
 22339                           ;GPS.c: 368: is_it_rmc_string = 0;
 22340  003B44  0E00               	movlw	0
 22341  003B46  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22342                           
 22343                           ;GPS.c: 369: comma_counter_gga = 0;
 22344  003B48  0E00               	movlw	0
 22345  003B4A  6FFF               	movwf	_comma_counter_gga& (0+255),b
 22346                           
 22347                           ;GPS.c: 370: comma_counter_rmc = 0;
 22348  003B4C  0E00               	movlw	0
 22349  003B4E  6FFE               	movwf	_comma_counter_rmc& (0+255),b
 22350  003B50                     i2l9865:
 22351                           
 22352                           ;GPS.c: 371: };GPS.c: 373: if(is_it_gga_string == 1)
 22353  003B50  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22354  003B52  A4D8               	btfss	status,2,c
 22355  003B54  D01A               	goto	i2l9875
 22356                           
 22357                           ;GPS.c: 374: {;GPS.c: 375: if(received_char == ',' )
 22358  003B56  0E2C               	movlw	44
 22359  003B58  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22360  003B5A  A4D8               	btfss	status,2,c
 22361  003B5C  D00A               	goto	i2l9873
 22362                           
 22363                           ;GPS.c: 376: {;GPS.c: 377: gga_pointers[comma_counter_gga++] = gga_index;
 22364  003B5E  0E16               	movlw	low _gga_pointers
 22365  003B60  0100               	movlb	0	; () banked
 22366  003B62  25FF               	addwf	_comma_counter_gga& (0+255),w,b
 22367  003B64  6ED9               	movwf	fsr2l,c
 22368  003B66  6ADA               	clrf	fsr2h,c
 22369  003B68  0E02               	movlw	high _gga_pointers
 22370  003B6A  22DA               	addwfc	fsr2h,f,c
 22371  003B6C  C0F9  FFDF         	movff	_gga_index,indf2	;volatile
 22372                           
 22373                           ; BSR set to: 0
 22374  003B70  2BFF               	incf	_comma_counter_gga& (0+255),f,b
 22375  003B72                     i2l9873:
 22376                           
 22377                           ;GPS.c: 378: };GPS.c: 379: gga_buffer[gga_index++] = received_char;
 22378  003B72  0E00               	movlw	low _gga_buffer
 22379  003B74  0100               	movlb	0	; () banked
 22380  003B76  25F9               	addwf	_gga_index& (0+255),w,b	;volatile
 22381  003B78  6ED9               	movwf	fsr2l,c
 22382  003B7A  0E03               	movlw	high _gga_buffer
 22383  003B7C  21FA               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22384  003B7E  6EDA               	movwf	fsr2h,c
 22385  003B80  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22386  003B84  4BF9               	infsnz	_gga_index& (0+255),f,b	;volatile
 22387  003B86  2BFA               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22388                           
 22389                           ;GPS.c: 380: }
 22390  003B88  D01C               	goto	i2l9883
 22391  003B8A                     i2l9875:
 22392                           
 22393                           ;GPS.c: 381: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22394  003B8A  0E47               	movlw	71
 22395  003B8C  0101               	movlb	1	; () banked
 22396  003B8E  1956               	xorwf	_gga_code& (0+255),w,b
 22397  003B90  A4D8               	btfss	status,2,c
 22398  003B92  D011               	goto	i2l447
 22399                           
 22400                           ; BSR set to: 1
 22401  003B94  0E47               	movlw	71
 22402  003B96  1957               	xorwf	(_gga_code+1)& (0+255),w,b
 22403  003B98  A4D8               	btfss	status,2,c
 22404  003B9A  D00D               	goto	i2l447
 22405                           
 22406                           ; BSR set to: 1
 22407  003B9C  0E41               	movlw	65
 22408  003B9E  1958               	xorwf	(_gga_code+2)& (0+255),w,b
 22409  003BA0  A4D8               	btfss	status,2,c
 22410  003BA2  D009               	goto	i2l447
 22411                           
 22412                           ; BSR set to: 1
 22413                           ;GPS.c: 382: is_it_gga_string = 1;
 22414  003BA4  0E01               	movlw	1
 22415  003BA6  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22416                           
 22417                           ;GPS.c: 383: gga_code[0] = 0;
 22418  003BA8  0E00               	movlw	0
 22419  003BAA  6F56               	movwf	_gga_code& (0+255),b
 22420                           
 22421                           ;GPS.c: 384: gga_code[1] = 0;
 22422  003BAC  0E00               	movlw	0
 22423  003BAE  6F57               	movwf	(_gga_code+1)& (0+255),b
 22424                           
 22425                           ;GPS.c: 385: gga_code[2] = 0;
 22426  003BB0  0E00               	movlw	0
 22427  003BB2  6F58               	movwf	(_gga_code+2)& (0+255),b
 22428                           
 22429                           ;GPS.c: 386: }
 22430  003BB4  D006               	goto	i2l9883
 22431  003BB6                     i2l447:
 22432                           
 22433                           ; BSR set to: 1
 22434                           ;GPS.c: 387: else{;GPS.c: 388: gga_code[0] = gga_code[1];
 22435  003BB6  C157  F156         	movff	_gga_code+1,_gga_code
 22436                           
 22437                           ;GPS.c: 389: gga_code[1] = gga_code[2];
 22438  003BBA  C158  F157         	movff	_gga_code+2,_gga_code+1
 22439                           
 22440                           ;GPS.c: 390: gga_code[2] = received_char;
 22441  003BBE  C001  F158         	movff	tratamento_uart@received_char,_gga_code+2
 22442  003BC2                     i2l9883:
 22443                           
 22444                           ;GPS.c: 391: };GPS.c: 393: if(is_it_rmc_string == 1)
 22445  003BC2  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22446  003BC4  A4D8               	btfss	status,2,c
 22447  003BC6  D01A               	goto	i2l9893
 22448                           
 22449                           ;GPS.c: 394: {;GPS.c: 395: if(received_char == ',' )
 22450  003BC8  0E2C               	movlw	44
 22451  003BCA  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22452  003BCC  A4D8               	btfss	status,2,c
 22453  003BCE  D00A               	goto	i2l9891
 22454                           
 22455                           ;GPS.c: 396: {;GPS.c: 397: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22456  003BD0  0E39               	movlw	low _rmc_pointers
 22457  003BD2  0100               	movlb	0	; () banked
 22458  003BD4  25FE               	addwf	_comma_counter_rmc& (0+255),w,b
 22459  003BD6  6ED9               	movwf	fsr2l,c
 22460  003BD8  6ADA               	clrf	fsr2h,c
 22461  003BDA  0E02               	movlw	high _rmc_pointers
 22462  003BDC  22DA               	addwfc	fsr2h,f,c
 22463  003BDE  C0F7  FFDF         	movff	_rmc_index,indf2	;volatile
 22464                           
 22465                           ; BSR set to: 0
 22466  003BE2  2BFE               	incf	_comma_counter_rmc& (0+255),f,b
 22467  003BE4                     i2l9891:
 22468                           
 22469                           ;GPS.c: 398: };GPS.c: 399: rmc_buffer[rmc_index++] = received_char;
 22470  003BE4  0E50               	movlw	low _rmc_buffer
 22471  003BE6  0100               	movlb	0	; () banked
 22472  003BE8  25F7               	addwf	_rmc_index& (0+255),w,b	;volatile
 22473  003BEA  6ED9               	movwf	fsr2l,c
 22474  003BEC  0E03               	movlw	high _rmc_buffer
 22475  003BEE  21F8               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22476  003BF0  6EDA               	movwf	fsr2h,c
 22477  003BF2  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22478  003BF6  4BF7               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22479  003BF8  2BF8               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22480                           
 22481                           ;GPS.c: 400: }
 22482  003BFA  0012               	return	
 22483  003BFC                     i2l9893:
 22484                           
 22485                           ;GPS.c: 401: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22486  003BFC  0E52               	movlw	82
 22487  003BFE  0101               	movlb	1	; () banked
 22488  003C00  1953               	xorwf	_rmc_code& (0+255),w,b
 22489  003C02  A4D8               	btfss	status,2,c
 22490  003C04  D011               	goto	i2l452
 22491                           
 22492                           ; BSR set to: 1
 22493  003C06  0E4D               	movlw	77
 22494  003C08  1954               	xorwf	(_rmc_code+1)& (0+255),w,b
 22495  003C0A  A4D8               	btfss	status,2,c
 22496  003C0C  D00D               	goto	i2l452
 22497                           
 22498                           ; BSR set to: 1
 22499  003C0E  0E43               	movlw	67
 22500  003C10  1955               	xorwf	(_rmc_code+2)& (0+255),w,b
 22501  003C12  A4D8               	btfss	status,2,c
 22502  003C14  D009               	goto	i2l452
 22503                           
 22504                           ; BSR set to: 1
 22505                           ;GPS.c: 402: is_it_rmc_string = 1;
 22506  003C16  0E01               	movlw	1
 22507  003C18  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22508                           
 22509                           ;GPS.c: 403: rmc_code[0] = 0;
 22510  003C1A  0E00               	movlw	0
 22511  003C1C  6F53               	movwf	_rmc_code& (0+255),b
 22512                           
 22513                           ;GPS.c: 404: rmc_code[1] = 0;
 22514  003C1E  0E00               	movlw	0
 22515  003C20  6F54               	movwf	(_rmc_code+1)& (0+255),b
 22516                           
 22517                           ;GPS.c: 405: rmc_code[2] = 0;
 22518  003C22  0E00               	movlw	0
 22519  003C24  6F55               	movwf	(_rmc_code+2)& (0+255),b
 22520                           
 22521                           ;GPS.c: 406: }
 22522  003C26  0012               	return	
 22523  003C28                     i2l452:
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;GPS.c: 407: else{;GPS.c: 408: rmc_code[0] = rmc_code[1];
 22527  003C28  C154  F153         	movff	_rmc_code+1,_rmc_code
 22528                           
 22529                           ;GPS.c: 409: rmc_code[1] = rmc_code[2];
 22530  003C2C  C155  F154         	movff	_rmc_code+2,_rmc_code+1
 22531                           
 22532                           ;GPS.c: 410: rmc_code[2] = received_char;
 22533  003C30  C001  F155         	movff	tratamento_uart@received_char,_rmc_code+2
 22534  003C34  0012               	return		;funcret
 22535  003C36                     __end_of_tratamento_uart:
 22536                           	callstack 0
 22537                           
 22538 ;; *************** function _recebe_dado_uart *****************
 22539 ;; Defined at:
 22540 ;;		line 138 in file "bibliotecas/uart.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;		None
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;		None
 22545 ;; Return value:  Size  Location     Type
 22546 ;;                  1    wreg      unsigned char 
 22547 ;; Registers used:
 22548 ;;		wreg, status,2
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/0
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22554 ;;      Params:         0       0       0       0       0       0       0       0       0
 22555 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22557 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22558 ;;Total ram usage:        0 bytes
 22559 ;; Hardware stack levels used:    1
 22560 ;; This function calls:
 22561 ;;		Nothing
 22562 ;; This function is called by:
 22563 ;;		_isr
 22564 ;; This function uses a non-reentrant model
 22565 ;;
 22566                           
 22567                           	psect	text135
 22568  005C50                     __ptext135:
 22569                           	callstack 0
 22570  005C50                     _recebe_dado_uart:
 22571                           	callstack 13
 22572                           
 22573                           ;uart.c: 140: while(RCIF==0);
 22574                           
 22575                           ;incstack = 0
 22576  005C50  AA9E               	btfss	3998,5,c	;volatile
 22577  005C52  D7FE               	goto	_recebe_dado_uart
 22578                           
 22579                           ;uart.c: 141: if(RCSTAbits.OERR)
 22580  005C54  A2AB               	btfss	171,1,c	;volatile
 22581  005C56  D003               	goto	i2l10003
 22582                           
 22583                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22584  005C58  98AB               	bcf	4011,4,c	;volatile
 22585                           
 22586                           ;uart.c: 144: __nop();
 22587  005C5A  F000               	nop	
 22588                           
 22589                           ;uart.c: 145: CREN=1;
 22590  005C5C  88AB               	bsf	4011,4,c	;volatile
 22591  005C5E                     i2l10003:
 22592                           
 22593                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22594  005C5E  50AE               	movf	174,w,c	;volatile
 22595  005C60  0012               	return		;funcret
 22596  005C62                     __end_of_recebe_dado_uart:
 22597                           	callstack 0
 22598                           
 22599                           	psect	text136
 22600  000000                     __ptext136:
 22601                           	callstack 0
 22602                           
 22603                           	psect	rparam
 22604  0000                     
 22605                           	psect	temp
 22606  000056                     btemp:
 22607                           	callstack 0
 22608  000056                     	ds	1
 22609  0000                     int$flags	set	btemp
 22610  0000                     wtemp8	set	btemp+1
 22611  0000                     ttemp5	set	btemp+1
 22612  0000                     ttemp6	set	btemp+4
 22613  0000                     ttemp7	set	btemp+8
 22614                           
 22615                           	psect	idloc
 22616                           
 22617                           ;Config register IDLOC0 @ 0x200000
 22618                           ;	unspecified, using default values
 22619  200000                     	org	2097152
 22620  200000  FF                 	db	255
 22621                           
 22622                           ;Config register IDLOC1 @ 0x200001
 22623                           ;	unspecified, using default values
 22624  200001                     	org	2097153
 22625  200001  FF                 	db	255
 22626                           
 22627                           ;Config register IDLOC2 @ 0x200002
 22628                           ;	unspecified, using default values
 22629  200002                     	org	2097154
 22630  200002  FF                 	db	255
 22631                           
 22632                           ;Config register IDLOC3 @ 0x200003
 22633                           ;	unspecified, using default values
 22634  200003                     	org	2097155
 22635  200003  FF                 	db	255
 22636                           
 22637                           ;Config register IDLOC4 @ 0x200004
 22638                           ;	unspecified, using default values
 22639  200004                     	org	2097156
 22640  200004  FF                 	db	255
 22641                           
 22642                           ;Config register IDLOC5 @ 0x200005
 22643                           ;	unspecified, using default values
 22644  200005                     	org	2097157
 22645  200005  FF                 	db	255
 22646                           
 22647                           ;Config register IDLOC6 @ 0x200006
 22648                           ;	unspecified, using default values
 22649  200006                     	org	2097158
 22650  200006  FF                 	db	255
 22651                           
 22652                           ;Config register IDLOC7 @ 0x200007
 22653                           ;	unspecified, using default values
 22654  200007                     	org	2097159
 22655  200007  FF                 	db	255
 22656                           
 22657                           	psect	config
 22658                           
 22659                           ;Config register CONFIG1L @ 0x300000
 22660                           ;	unspecified, using default values
 22661                           ;	PLL Prescaler Selection bits
 22662                           ;	PLLDIV = 0x0, unprogrammed default
 22663                           ;	System Clock Postscaler Selection bits
 22664                           ;	CPUDIV = 0x0, unprogrammed default
 22665                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22666                           ;	USBDIV = 0x0, unprogrammed default
 22667  300000                     	org	3145728
 22668  300000  00                 	db	0
 22669                           
 22670                           ;Config register CONFIG1H @ 0x300001
 22671                           ;	unspecified, using default values
 22672                           ;	Oscillator Selection bits
 22673                           ;	FOSC = 0x5, unprogrammed default
 22674                           ;	Fail-Safe Clock Monitor Enable bit
 22675                           ;	FCMEN = 0x0, unprogrammed default
 22676                           ;	Internal/External Oscillator Switchover bit
 22677                           ;	IESO = 0x0, unprogrammed default
 22678  300001                     	org	3145729
 22679  300001  05                 	db	5
 22680                           
 22681                           ;Config register CONFIG2L @ 0x300002
 22682                           ;	unspecified, using default values
 22683                           ;	Power-up Timer Enable bit
 22684                           ;	PWRT = 0x1, unprogrammed default
 22685                           ;	Brown-out Reset Enable bits
 22686                           ;	BOR = 0x3, unprogrammed default
 22687                           ;	Brown-out Reset Voltage bits
 22688                           ;	BORV = 0x3, unprogrammed default
 22689                           ;	USB Voltage Regulator Enable bit
 22690                           ;	VREGEN = 0x0, unprogrammed default
 22691  300002                     	org	3145730
 22692  300002  1F                 	db	31
 22693                           
 22694                           ;Config register CONFIG2H @ 0x300003
 22695                           ;	unspecified, using default values
 22696                           ;	Watchdog Timer Enable bit
 22697                           ;	WDT = 0x1, unprogrammed default
 22698                           ;	Watchdog Timer Postscale Select bits
 22699                           ;	WDTPS = 0xF, unprogrammed default
 22700  300003                     	org	3145731
 22701  300003  1F                 	db	31
 22702                           
 22703                           ; Padding undefined space
 22704  300004                     	org	3145732
 22705  300004  FF                 	db	255
 22706                           
 22707                           ;Config register CONFIG3H @ 0x300005
 22708                           ;	unspecified, using default values
 22709                           ;	CCP2 MUX bit
 22710                           ;	CCP2MX = 0x1, unprogrammed default
 22711                           ;	PORTB A/D Enable bit
 22712                           ;	PBADEN = 0x1, unprogrammed default
 22713                           ;	Low-Power Timer 1 Oscillator Enable bit
 22714                           ;	LPT1OSC = 0x0, unprogrammed default
 22715                           ;	MCLR Pin Enable bit
 22716                           ;	MCLRE = 0x1, unprogrammed default
 22717  300005                     	org	3145733
 22718  300005  83                 	db	131
 22719                           
 22720                           ;Config register CONFIG4L @ 0x300006
 22721                           ;	unspecified, using default values
 22722                           ;	Stack Full/Underflow Reset Enable bit
 22723                           ;	STVREN = 0x1, unprogrammed default
 22724                           ;	Single-Supply ICSP Enable bit
 22725                           ;	LVP = 0x1, unprogrammed default
 22726                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22727                           ;	ICPRT = 0x0, unprogrammed default
 22728                           ;	Extended Instruction Set Enable bit
 22729                           ;	XINST = 0x0, unprogrammed default
 22730                           ;	Background Debugger Enable bit
 22731                           ;	DEBUG = 0x1, unprogrammed default
 22732  300006                     	org	3145734
 22733  300006  85                 	db	133
 22734                           
 22735                           ; Padding undefined space
 22736  300007                     	org	3145735
 22737  300007  FF                 	db	255
 22738                           
 22739                           ;Config register CONFIG5L @ 0x300008
 22740                           ;	unspecified, using default values
 22741                           ;	Code Protection bit
 22742                           ;	CP0 = 0x1, unprogrammed default
 22743                           ;	Code Protection bit
 22744                           ;	CP1 = 0x1, unprogrammed default
 22745                           ;	Code Protection bit
 22746                           ;	CP2 = 0x1, unprogrammed default
 22747                           ;	Code Protection bit
 22748                           ;	CP3 = 0x1, unprogrammed default
 22749  300008                     	org	3145736
 22750  300008  0F                 	db	15
 22751                           
 22752                           ;Config register CONFIG5H @ 0x300009
 22753                           ;	unspecified, using default values
 22754                           ;	Boot Block Code Protection bit
 22755                           ;	CPB = 0x1, unprogrammed default
 22756                           ;	Data EEPROM Code Protection bit
 22757                           ;	CPD = 0x1, unprogrammed default
 22758  300009                     	org	3145737
 22759  300009  C0                 	db	192
 22760                           
 22761                           ;Config register CONFIG6L @ 0x30000A
 22762                           ;	unspecified, using default values
 22763                           ;	Write Protection bit
 22764                           ;	WRT0 = 0x1, unprogrammed default
 22765                           ;	Write Protection bit
 22766                           ;	WRT1 = 0x1, unprogrammed default
 22767                           ;	Write Protection bit
 22768                           ;	WRT2 = 0x1, unprogrammed default
 22769                           ;	Write Protection bit
 22770                           ;	WRT3 = 0x1, unprogrammed default
 22771  30000A                     	org	3145738
 22772  30000A  0F                 	db	15
 22773                           
 22774                           ;Config register CONFIG6H @ 0x30000B
 22775                           ;	unspecified, using default values
 22776                           ;	Configuration Register Write Protection bit
 22777                           ;	WRTC = 0x1, unprogrammed default
 22778                           ;	Boot Block Write Protection bit
 22779                           ;	WRTB = 0x1, unprogrammed default
 22780                           ;	Data EEPROM Write Protection bit
 22781                           ;	WRTD = 0x1, unprogrammed default
 22782  30000B                     	org	3145739
 22783  30000B  E0                 	db	224
 22784                           
 22785                           ;Config register CONFIG7L @ 0x30000C
 22786                           ;	unspecified, using default values
 22787                           ;	Table Read Protection bit
 22788                           ;	EBTR0 = 0x1, unprogrammed default
 22789                           ;	Table Read Protection bit
 22790                           ;	EBTR1 = 0x1, unprogrammed default
 22791                           ;	Table Read Protection bit
 22792                           ;	EBTR2 = 0x1, unprogrammed default
 22793                           ;	Table Read Protection bit
 22794                           ;	EBTR3 = 0x1, unprogrammed default
 22795  30000C                     	org	3145740
 22796  30000C  0F                 	db	15
 22797                           
 22798                           ;Config register CONFIG7H @ 0x30000D
 22799                           ;	unspecified, using default values
 22800                           ;	Boot Block Table Read Protection bit
 22801                           ;	EBTRB = 0x1, unprogrammed default
 22802  30000D                     	org	3145741
 22803  30000D  40                 	db	64
 22804                           tosu	equ	0xFFF
 22805                           tosh	equ	0xFFE
 22806                           tosl	equ	0xFFD
 22807                           stkptr	equ	0xFFC
 22808                           pclatu	equ	0xFFB
 22809                           pclath	equ	0xFFA
 22810                           pcl	equ	0xFF9
 22811                           tblptru	equ	0xFF8
 22812                           tblptrh	equ	0xFF7
 22813                           tblptrl	equ	0xFF6
 22814                           tablat	equ	0xFF5
 22815                           prodh	equ	0xFF4
 22816                           prodl	equ	0xFF3
 22817                           indf0	equ	0xFEF
 22818                           postinc0	equ	0xFEE
 22819                           postdec0	equ	0xFED
 22820                           preinc0	equ	0xFEC
 22821                           plusw0	equ	0xFEB
 22822                           fsr0h	equ	0xFEA
 22823                           fsr0l	equ	0xFE9
 22824                           wreg	equ	0xFE8
 22825                           indf1	equ	0xFE7
 22826                           postinc1	equ	0xFE6
 22827                           postdec1	equ	0xFE5
 22828                           preinc1	equ	0xFE4
 22829                           plusw1	equ	0xFE3
 22830                           fsr1h	equ	0xFE2
 22831                           fsr1l	equ	0xFE1
 22832                           bsr	equ	0xFE0
 22833                           indf2	equ	0xFDF
 22834                           postinc2	equ	0xFDE
 22835                           postdec2	equ	0xFDD
 22836                           preinc2	equ	0xFDC
 22837                           plusw2	equ	0xFDB
 22838                           fsr2h	equ	0xFDA
 22839                           fsr2l	equ	0xFD9
 22840                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    118
    Data        120
    BSS         1116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     249
    BANK2           256     19     242
    BANK3           256      0     186
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3666	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[7]), STR_20(CODE[7]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[7]), STR_20(CODE[7]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), fence(BANK1[6]), lo(BANK2[13]), 
		 -> lt(BANK1[12]), vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1465_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK3[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[7]), STR_20(CODE[7]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S796_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S796_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawFix(BANK1[2]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), 
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), 
		 -> STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _gps->_get_fix
    _get_fix->_posicao_cursor_lcd
    _verifica_dados_operacionais->___fttol
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  513510
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    7303
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gps                                                  0     0      0    4576
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         3     3      0      70
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          3     3      0      70
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        3     3      0      70
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        18    18      0      70
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0      90
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              3     3      0    4206
                                             15 COMRAM     3     3      0
              _escreve_caractere_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  499752
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   10450
                                             57 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        1     1      0   20845
                                             53 COMRAM     1     1      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6746
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  468151
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                _escreve_inteiro_lcd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                 _posicao_cursor_lcd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16517
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (4) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426192
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425074
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205734
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33922
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21734
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   21604
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10368
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3717
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6802
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    3029
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2857
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2857
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                     _fix (ARG)
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                       _fix (ARG)
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
         _fix (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
   _gps
     _get_fix
       _escreve_caractere_lcd
         _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
       _fix (ARG)
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BA      11       72.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      F2       9       94.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39A      20        0.0%
DATA                 0      0     5BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri May 20 16:20:04 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 47B0                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5B54                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 03BA                                               _lo 028D  
                                             _lt 01AA                              ___wmul@multiplicand 000C  
                                    _put_cluster 23D0                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 4918                                              l201 4920  
                                            l202 4922                                              l203 492A  
                                            l220 4D6E                                              l204 492C  
                                            l221 4D76                                              l213 4D42  
                                            l205 4934                                              l222 4D78  
                                            l206 4936                                              l223 4D80  
                                            l215 4D4C                           __size_of_troca_de_tela 0274  
                                            l144 2D26                                              l224 4D82  
                                            l232 4ED2                                              l225 4D8A  
                                            l217 4D56                                              l250 4C94  
                                            l242 4C60                                              l226 4D8C  
                                            l218 4D58                                              l251 4C96  
                                            l219 4D6C                                              l252 4C9E  
                                            l244 4C6A                                              l181 5B74  
                                            l253 4CA0                                              l254 4CA8  
                                            l246 4C74                                              l183 5B7A  
                                            l255 4CAA                                              l191 48E2  
                                            l256 4CB2                                              l248 4C7E  
                                            l257 4CB4                                              l249 4C80  
                                            l193 48EC                                              l195 48F6  
                                            l197 4900                                              l198 4902  
                                            l199 4916                                              l708 4F96  
                                            l815 5C7C                                              l809 5CCC  
                                            l922 2E96                                              l692 570E  
                                            l925 2E8E                                              l996 3506  
                                            l999 34B4                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 017C  
                            _latitude_to_convert 4BD8                                              _fil 0181  
                               ??_init_oscilador 000A                                              _fix 5D10  
                                            _n_s 017D                                              _gps 5BE2  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01D6                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 0012  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1201 0D90                                             l1113 1738  
                                           l1123 187E                                             l1108 170C  
                                           l1300 15D4                                             l1250 5686  
                                           l1083 077A                                             l2231 5284  
                                           l2160 4DEE                                             l2241 5566  
                                           l1283 148C                                             l1197 0B80  
                                           l2443 39FA                                             l1580 4F70  
                                           l2429 33C0                                             l2461 45BA  
                                           l2475 3FE8                                             ?_fix 000A  
                                           l1779 4AD4                                             ?_gps 0001  
                                           ?_isr 0001                                             l9411 3D66  
                                           l9501 40AA                                             l9431 3DC0  
                                           l9193 443E                                             l9185 4400  
                                           l9441 3DE8                                             l9417 3D8E  
                                           l9195 445C                                             l9187 440A  
                                           l9435 3DD0                                             l9507 40C6  
                                           l9531 505E                                             l9197 4466  
                                           l9189 4428                                             l9461 577C  
                                           l9445 3DF8                                             l9517 58EC  
                                           l9525 503E                                             l9541 4FE6  
                                           l9471 4032                                             l9537 5084  
                                           l9553 502C                                             l9547 5006  
                                           l9563 565E                                             l9493 4096  
                                           l9557 563E                                             l9573 561E  
                                           l9567 55FE                                             l9489 4086  
                          _escreve_caractere_lcd 4C50                                             l9499 409E  
                                           STR_1 61F6                                             STR_2 618C  
                                           STR_3 621F                                             STR_4 61EB  
                                           STR_5 61AB                                             STR_6 6177  
                                           STR_7 61BA                                             STR_8 6215  
                                           STR_9 620B                                   timer_dois@flag 017B  
                                           _BRGH 007D62                                             _CREN 007D5C  
                                           _T0IF 007F92                                     ?_escreve_SPI 0001  
                                           _LATB 000F8A                                             _PIE1 000F9D  
                                           _RCIF 007CF5                                             _TMR0 000FD6  
                                           _TMR2 000FCC                                             _SPEN 007D5F  
                                           _TXEN 007D65                                             _SYNC 007D64  
                                   trace_path@dj 007E                                     trace_path@fn 007F  
                                   trace_path@ds 008F                                     trace_path@fs 008B  
                                  ?_make_dirfile 0012                                             _Term 017E  
                                           _dado 0100                                             _data 01D0  
                                           _atoi 3268                                             _atol 38EA  
                                           _main 5806                                             _fsid 016E  
                                           _hora 01C2                                     ___ftpack@arg 000A  
                                           _itoa 572E                                     ___ftpack@exp 000D  
                                           _ltoa 5570                          __end_of_fence_diff_long 614F  
                                           fsr1h 000FE2                                             fsr2h 000FDA  
                                           indf1 000FE7                                             indf2 000FDF  
                                           fsr1l 000FE1                                             fsr2l 000FD9  
                                           btemp 0056                                             _utoa 453A  
                                           _sync 528E                                    disk_ioctl@cmd 000A  
                                  disk_read@buff 0029                                    disk_ioctl@res 000E  
                                 ??_get_latitude 000A                                    disk_read@pdrv 0031  
                           ?_latitude_to_convert 0001                                             prodh 000FF4  
                                           prodl 000FF3                     tratamento_uart@received_char 0001  
                          get_latitude@index_lat 000B                                             start 000E  
                              disparo_gravacao@i 02F1                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 0013                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014A  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l11021 1B44  
                                          l10231 3A72                                            l11031 1B70  
                                          l11015 1B36                                            l10241 3AA8  
                                          l11041 1B96                                            l11121 589A  
                                          l10403 53B2                                            l12003 424E  
                                          l10501 4C6C                                            l10181 4F90  
                                          l10253 3ACE                                            l10237 3A84  
                                          l10341 2D92                                            l10309 2CEE  
                                          l10421 53B6                                            l11125 58AA  
                                          l12023 4DE0                                            l12015 4DAC  
                                          l10159 571A                                            l10167 57B0  
                                          l10247 3AB6                                            l10327 2D6E  
                                          l11135 4820                                            l11215 03AA  
                                          l11207 033A                                            l12007 4264  
                                          l10505 4C76                                            l12017 4DB8  
                                          l10257 3AE4                                            l10249 3ABC  
                                          l12113 53F2                                            l11129 47B2  
                                          l11137 4828                                            l11057 1BF2  
                                          l11313 599C                                            l11233 04F2  
                                          l11217 03B8                                            l11241 0526  
                                          l12041 498C                                            l10267 3B14  
                                          l10371 4CF2                                            l10611 4EDE  
                                          l11075 1C52                                            l11067 1C18  
                                          l11403 345E                                            l11251 0594  
                                          l12035 4968                                            l10357 2DE0  
                                          l10541 2B24                                            l12109 53DA  
                                          l11229 0476                                            l11165 00CC  
                                          l12053 49A0                                            l12029 4960  
                                          l10375 4CF6                                            l10367 4CC6  
                                          l10391 4D18                                            l10295 2CCE  
                                          l10287 2C7E                                            l10455 5C6E  
                                          l12119 5412                                            l11503 4A1A  
                                          l10615 4EEC                                            l11351 317A  
                                          l12135 1674                                            l11247 0582  
                                          l12047 4998                                            l13031 48EE  
                                          l13113 326A                                            l11601 4AC6  
                                          l11089 5B58                                            l10545 2BA0  
                                          l11329 52C4                                            l10705 2498  
                                          l10801 2E4A                                            l10465 4D44  
                                          l11441 349C                                            l11433 348C  
                                          l12217 1892                                            l11177 0186  
                                          l11273 3966                                            l13131 332C  
                                          l13115 3276                                            l10635 52E2  
                                          l10707 24CC                                            l12331 0DEC  
                                          l12323 0DAE                                            l12307 0D44  
                                          l11515 4A60                                            l10619 4EFA  
                                          l10627 4F08                                            l11179 01A6  
                                          l12059 49C4                                            l12067 49D0  
                                          l13035 48F8                                            l13027 48E4  
                                          l13125 32F6                                            l10549 2BA8  
                                          l10557 2BF6                                            l10581 57E2  
                                          l10725 257A                                            l10813 2E9E  
                                          l12333 0E00                                            l12341 0E72  
                                          l10469 4D4E                                            l10629 4F22  
                                          l11445 34A4                                            l12165 1714  
                                          l11189 01FE                                            l12405 13CC  
                                          l11285 39B6                                            l11269 393E  
                                          l12069 49DA                                            l13135 3378  
                                          l13127 3304                                            l10639 530A  
                                          l10399 5386                                            l10567 2C4A  
                                          l10671 2A18                                            l10647 28C6  
                                          l10743 260C                                            l12319 0DA4  
                                          l11295 5992                                            l11615 460A  
                                          l11607 45E8                                            l11367 3252  
                                          l11471 34E6                                            l11463 34CE  
                                          l11383 33F4                                            l12183 17D4  
                                          l11199 02E4                                            l12503 15FA  
                                          l12423 1426                                            l12263 5916  
                                          l11279 3970                                            l11543 50EC  
                                          l13143 583E                                            l13311 226C  
                                          l12521 55C0                                            l10497 4C62  
                                          l12249 5940                                            l10585 57E6  
                                          l10681 2A80                                            l10729 25A4  
                                          l10745 2628                                            l10825 2ECC  
                                          l10809 2E78                                            l10753 51A4  
                                          l11297 5998                                            l11625 464E  
                                          l11481 3504                                            l11473 34E8  
                                          l11449 34AC                                            l11713 1E6E  
                                          l12185 1802                                            l12433 1464  
                                          l12417 13F6                                            l12273 5468  
                                          l13145 5846                                            l12611 5590  
                                          l10579 57DA                                            l10667 29F8  
                                          l10683 2A9A                                            l10691 23F6  
                                          l10843 2F02                                            l10763 4852  
                                          l11803 0610                                            l10907 551C  
                                          l11627 4656                                            l11731 1F70  
                                          l11491 3520                                            l11707 1E5A  
                                          l11651 1D22                                            l12443 1480  
                                          l12275 546C                                            l12099 598A  
                                          l13163 51F4                                            l10917 5BA4  
                                          l10597 57EE                                            l10861 2F7C  
                                          l12357 0F6C                                            l12349 0F06  
                                          l10757 51B8                                            l10933 19C6  
                                          l11813 0634                                            l11733 1F82  
                                          l12197 185C                                            l12461 14EC  
                                          l12453 14B0                                            l12509 1636  
                                          l12365 1306                                            l12277 547C  
                                          l11549 5118                                            l12621 4BE0  
                                          l13325 22E4                                            l13333 2314  
                                          l12519 55BC                                            l12703 105E  
                                          l11591 4A92                                            l10767 4870  
                                          l10943 19E6                                            l11903 09DA  
                                          l11831 0664                                            l11663 1D40  
                                          l11655 1D26                                            l12471 1514  
                                          l12439 1474                                            l12279 5484  
                                          l12535 3D26                                            l11575 50C0  
                                          l13335 2318                                            l12713 10C0  
                                          l11921 382E                                            l10857 2F3E  
                                          l10785 48CA                                            l10953 1A1A  
                                          l11841 0692                                            l10873 4382  
                                          l11753 201C                                            l11729 1F4A  
                                          l11681 1DD6                                            l12481 1550  
                                          l12385 1360                                            l12369 1310  
                                          l12545 5252                                            l13601 4542  
                                          l11569 5094                                            l12633 4C3A  
                                          l13169 5214                                            l12723 1118  
                                          l12707 10B2                                            l10699 2456  
                                          l11499 4A16                                            l10963 1A3E  
                                          l10939 19DA                                            l11827 0660  
                                          l11763 205E                                            l11739 1FAC  
                                          l12475 1520                                            l12459 14D4  
                                          l12395 138A                                            l12547 525A  
                                          l13611 457C                                            l13179 2F94  
                                          l13347 2340                                            l13275 218C  
                                          l12741 11A4                                            l11589 4A86  
                                          l10893 545A                                            l11749 2018  
                                          l11677 1DCA                                            l11669 1D6A  
                                          l11941 5146                                            l12557 527A  
                                          l12573 555C                                            l12565 553C  
                                          l12645 4AF0                                            l13365 2386  
                                          l12735 112A                                            l12719 10C4  
                                          l12671 0F92                                            l10887 544A  
                                          l11935 38E6                                            l11775 20EE  
                                          l11695 1E36                                            l12495 15C2  
                                          l12399 13A0                                            l12831 36CE  
                                          l12567 5544                                            l11951 40DC  
                                          l13199 30FA                                            l13367 238A  
                                          l13295 2228                                            l12761 11F2  
                                          l12753 11B6                                            l12729 1126  
                                          l12681 0FF4                                            l12665 0F8E  
                                          l11849 069C                                            l11785 212A  
                                          l11689 1E18                                            l11945 5174  
                                          l12657 4B4A                                            l13377 23CA  
                                          l13289 2204                                            l12747 11B2  
                                          l12691 104C                                            l12675 0FE6  
                                          l12579 3F2E                                            l10987 1ABE  
                                          l11867 0732                                            l11859 0710  
                                          l11795 05B8                                            l10899 54FC  
                                          l11699 1E42                                            l11947 517C  
                                          l12499 15E0                                            l13723 4494  
                                          l12781 1236                                            l12589 3F7E  
                                          l11797 05BE                                            l12845 3798  
                                          l11981 41DE                                            l13637 574A  
                                          l11957 413E                                            l11965 41A0  
                                          l12925 4E5A                                            l12775 1232  
                                          l12767 11F6                                            l12687 0FF8  
                                          l11975 41C6                                            l13671 2736  
                                          l13735 4530                                            l12697 105A  
                                          l11897 09C4                                            l11889 08B6  
                                          l12865 5B1A                                            l12953 4BA0  
                                          l12929 4B68                                            l13665 26B0  
                                          l13753 581E                                            l12787 12B0  
                                          l12795 12BE                                            l11987 4200  
                                          l12963 4BB8                                            l12939 4B84  
                                          l12875 4E08                                            l11989 420C  
                                          l12869 5B22                                            l12885 4E24  
                                          l13693 2852                                            l11999 4240  
                                          l13687 2830                                            l13695 2856  
                                          l13759 582E                                            l12899 4E40  
                                          l12989 4BCE                                  __end_of___aldiv 4276  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6232                                            ?_ltoa 0023  
                                          STR_11 6268                                            STR_20 6243  
                                          STR_12 619C                                            STR_21 6251  
                                          STR_13 6201                                            STR_22 6251  
                                          STR_30 6271                                            STR_14 61E0  
                                          STR_31 626D                                            STR_23 6263  
                                          STR_15 6258                                            STR_24 627C  
                                          STR_32 6229                                            STR_16 61C8  
                                          STR_17 6275                                            STR_25 624A  
                                          STR_33 623B                                            STR_26 6251  
                                          STR_18 6279                                            STR_27 6263  
                                          STR_19 61D5                                            STR_28 627C  
                                          STR_29 625E                                     ?_leitura_SPI 0001  
                                          u10010 43F2                                  __end_of___lldiv 4AE6  
                                          ?_utoa 0011                                            u10050 4470  
                                          ?_sync 0001                                            u12000 2452  
                                          u10411 3D76                                            u12100 4890  
                                __end_of___ftmul 3E32                                            u13000 31F8  
                                          u10520 40B0                                            _T0CON 000FD5  
                                          u12025 24F8                                            u11420 57D2  
                                          u12300 5446                                            u12140 2E34  
                                          u13020 342A                                            u10461 4016  
                                          u12150 2E40                                            u10470 4020  
                                          u12055 2586                                            u10391 3D4E  
                                          u11440 4FA0                                            u11600 2DEC  
                                          u12160 2E6C                                            u13040 343A  
                                          u10480 4050                                  __end_of___llmod 4E00  
                                          u12410 1A5E                                            u13027 3420  
                                          u12260 2F6A                                            u10485 4048  
                                __end_of___fttol 40D8                                            u11470 3A7E  
                                          u12190 2EC2                                            u11455 3A24  
                                          u12520 1BBC                                            _T2CON 000FCA  
                                          u11545 2CA2                                            u11810 2B20  
                                          u12610 4810                                            u12450 1AEC  
                                          u12370 19F6                                            u14050 4210  
                                          u15010 525E                                            u13315 3584  
                                          u13420 4A96                                            u11900 2890  
                                          u12380 1A06                                            u13325 35A0  
                                          u12470 1AF8                                            u12390 1A12  
                                          u14310 1734                                            u13350 567C  
                                          u13335 35D0                                            u11575 2D42  
                                          u12391 1A10                                            u15200 0FB2  
                                          u13280 4A16                                            u12560 1C2E  
                                          u13440 4606                                            u14240 1670  
                                          u15040 5548                                            u13345 35F0  
                                          u12617 4806                                            u16010 3324  
                                          u14090 4DBC                                            u12570 1C5E  
                                          u15300 10B0                                            u15220 0FE4  
                                          u13460 463C                                            u13700 205A  
                                          u14340 17D0                                            u11925 28F6  
                                          u16030 3360                                            u11870 5302  
                                          u11790 2AE2                                            u12590 47DE  
                                          u13470 4662                                            u12830 052E  
                                          u15207 0FA8                                            u13535 1D88  
                                          u16040 3398                                            u15400 11A2  
                                          u15320 10E4                                            u15240 1018  
                                          u11880 532A                                            u13480 467A  
                                          u13640 1FA8                                            u16017 331A  
                                          u11945 2972                                            u12745 024C  
                                          u12930 52C0                                            u14610 0E86  
                                          u13490 1D0C                                            u12850 390A  
                                          u15307 10A6                                            u15227 0FDA  
                                          u14515 0BF4                                            u15500 12AE  
                                          u15420 11E2                                            u15340 1116  
                                          u15260 104A                                            u14620 0ECC  
                                          u13900 072E                                            u14380 187A  
                                          u16220 21B8                                            u16037 3356  
                                          u11877 52F8                                            u12597 47D4  
                                          u13830 065C                                            u13750 05DE  
                                          u13670 200A                                            u14710 13D8  
                                          u16230 21F4                                            u16047 338E  
                                          u15407 1198                                            u15327 10DA  
                                          u15247 100E                                            u11887 5320  
                                          u11975 2A04                                            u13655 1FCA  
                                          u15440 1222                                            u15360 114A  
                                          u15280 107E                                            u15600 4E20  
                                          u14625 0EC2                                            u13497 1D02  
                                          u12785 0326                                            u12857 3900  
                                          u13770 0604                                            u12970 3176  
                                          u12890 395E                                            u15507 12A4  
                                          u15427 11D8                                            u15347 110C  
                                          u15267 1040                                            u11995 2426  
                                          u15460 1256                                            u15380 1170  
                                          u13940 09C0                                            u16260 2298  
                                          u16228 21BA                                            u13757 05D4  
                                          u14590 0E0E                                            u13950 09D8  
                                          u14910 1616                                            u14750 1462  
                                          u15630 4E54                                            u16270 22D4  
                                          u16238 21F6                                            u16190 2166  
                                          u15447 1218                                            u15367 1140  
                                          u15287 1074                                            u13935 08CE  
                                          u14920 55E0                                            u15480 127C  
                                          u14680 1356                                            u13777 05FA  
                                          u12985 3186                                            u12897 3954  
                                          u16290 2324                                            u15467 124C  
                                          u15387 1166                                            u14860 15A6  
                                          u15900 4958                                            u16268 229A  
                                          u13965 0A5E                                            u15670 4B7C  
                                          u16278 22D6                                            u16550 472E  
                                          u14927 55D6                                            u15487 1272  
                                          u15911 56BE                                            u15680 4B80  
                                          u16640 26AC                                            u16560 474A  
                                          u14945 3C48                                            u14955 3C80  
                                          u15940 4F5E                                            u15950 3296  
                                          u14975 3CC2                                            u16727 4786  
                                          u14985 3CFA                                            u16737 46A0  
                                          u15970 32BC                                  __end_of___lwdiv 528E  
                                          u16747 46BC                                            u15957 328C  
                                          u16757 46D8                                            u15990 32EE  
                                          u16767 1994                                            u15977 32B2  
                                          u16777 1AFE                                            u16698 44F0  
                                          u16787 1B9C                                            u16699 4502  
                                          u15997 32E4                                            u16797 56FA  
                                __end_of___lwmod 5570                                            i2l452 3C28  
                                          i2l447 3BB6                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 58E8                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 5416  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5D06  
                                  get_cluster@bc 006F                                  __end_of_get_fix 523C  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FDC                                    ___awtoft@sign 001B  
                                          _delay 5B70                                  clust2sect@clust 0016  
                                          _fence 01DC                                  __end_of_gps_dia 5AEE  
                                __end_of_gps_ano 5B10                                  __end_of_gps_mes 5ACC  
                                __end_of_fprintf 1640                                            _fputc 5674  
                                          _fputs 513C                                  __end_of_isdigit 5BAC  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0170  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3F1E                                  __end_of_rawdata 5CF2  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5CE8  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5CC8                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 215C  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4276  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 33CA  
                                   __end_of_atol 3A0C                                     __end_of_main 5834  
                                   clust2sect@fs 001F                                     __end_of_itoa 5768  
                                   __end_of_ltoa 55B2     verifica_dados_operacionais@contador_anterior 00FB  
                                   __end_of_utoa 45DE                                     __end_of_sync 52E0  
                             _inicializa_tarefas 5332                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000B                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5C50                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 3102  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 5A22  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 57A0  
                               __end_of___ftpack 4490                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1552 3F0A  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9873 3B72                                           i2l9865 3B50  
                                         i2l9891 3BE4                                           i2l9883 3BC2  
                                         i2l9875 3B8A                                           i2l9893 3BFC  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5C62                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 4A64  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000C                       __end_of_posicao_cursor_lcd 4F26  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F86  
                                   _dado_arquivo 0251                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 5194  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 59B4                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 1640  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5C16  
                           __size_of_get_gpstime 002A                                           _f_sync 37C2  
                                      ??___lwmod 000E                                           _buffer 0245  
                           __size_of_get_rawdate 0040                                 __end_of_latitude 5D06  
                               __end_of_gps_hora 5A22                                           _estado 0179  
                                         _memcmp 47B0                                           _memcpy 54EA  
                               __end_of_init_lcd 471C                                           _memset 5890  
                                      ??_f_close 004C                                           _rawFix 01E8  
                                         clear_0 42DE                                           clear_1 42F0  
                                         clear_2 42FC                                           clear_3 4308  
                                         clear_4 4314                                           clear_5 4320  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 0010                                           _strcat 545E  
                            _sdc_disk_initialize 197A                                        ??_command 0014  
                                         _strcpy 5834                                           _strlen 55B2  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 12F2  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 215C  
                                      ??_gps_mes 000C                                 __end_of_validate 545E  
                         __end_of_next_dir_entry 3268                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 508C  
                               __end_of_response 5CBC                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6100  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 5A44                                        ??_proceed 000C  
                               _write_timer_zero 5CD4                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 5634  
                            _escreve_inteiro_lcd 56B4                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 4326                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 508C                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5D10                                  _tratamento_uart 3B24  
                    __end_of_endereco_cursor_lcd 4D9A                                     __pidataBANK1 5C92  
                                   __pidataBANK2 54A4                                     __pidataBANK3 59DA  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3C36  
                                  __end_of_delay 5B8E                                   _escrita_sdcard 3678  
                                hora_nome@p_buff 000A                                    __end_of_fputc 56B4  
                                  __end_of_fputs 5194                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 003A                 __end_of_convert_to_int_point_lat 513C  
                             __size_of_data_nome 002A                                    __end_of_ultoa 4006  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 3524                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000B  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5D24  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000C  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5C16                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 598E  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02BB  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02CD                                       _dados_long 0396  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 5332  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4B60  
                      escreve_inteiro_uart@F3215 01EA                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 37C2  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3687 6112                            mensagem_inicial@F3689 6101  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 0150                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10003 5C5E  
                                        i2l10101 3ECC                                          i2l10113 3EF6  
                                        i2l10105 3EDA                                          i2l10115 3F02  
                                        i2l10093 3EB4                                          i2l10077 3E74  
                                        i2l10089 3E86                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5B50  
                                     _disk_write 5382                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 017C                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4330                                   _inicializa_SPI 5B30  
                                trace_path@clust 008D                                __end_of_data_nome 5966  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3C36                                __end_of_diferenca 41AA  
                                  _sdc_disk_read 3A0C                                     _desliga_uart 5C3E  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4D30  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 41AA  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 4A64                                  __size_of___wmul 0026  
                                        ___ftmul 3D3E                                          ___llmod 4D9A  
                                        ___fttol 4006                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 523C  
                                        ___lwmod 552E                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 572E  
                          __size_of_get_latitude 0058                                          _f_close 58BC  
                                        __pcinit 4276                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5BAC  
                                        __ramtop 0800                                          _f_mount 53CE  
                                        __ptext0 5806                                          __ptext1 471C  
                                        __ptext2 467E                                          __ptext3 5C16  
                                        __ptext4 5BAC                                          __ptext5 5D24  
                                        __ptext6 5C2C                                          __ptext7 5BC8  
                                        __ptext8 5CD4                                          __ptext9 5CA2  
                           __end_of_gps_segundos 5A88                                          _f_write 0012  
                                        _get_fix 51EA                                          _command 4F82  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 593C  
                                        _gps_dia 5ACC                                          _gps_ano 5AEE  
                                        _gps_mes 5AAA                                          _fprintf 12F2  
                                   __size_of_fix 000A                                     __size_of_gps 001A  
                                        _rawDate 01E2                                          _isdigit 5B8E  
                                   __size_of_isr 3F16             __size_of_verifica_plausibilidade_lat 0078  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0040                                          _rawTime 01C9  
                               ___aldiv@dividend 000A                                          _rawdata 5CE8  
                                        _rawhora 5CDE                                          _time_sd 016A  
                                   _create_chain 2DF0                                          _proceed 5CBC  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 0164  
                              __end_of_sdc_reset 48D2                           __end_of_inicializa_SPI 5B50  
                          __end_of_armazena_ltlo 49E2                      __end_of_latitude_to_convert 4C50  
                                     f_lseek@ofs 0088                                   __pintcode_body 3E32  
                                     f_lseek@res 009C                             end_of_initialization 4326  
                              __end_of_longitude 5CFC             __end_of_verifica_plausibilidade_long 4E64  
          __size_of_verifica_plausibilidade_long 0064                     _verifica_plausibilidade_long 4E00  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0004  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000B  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3E32  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1125_40 3E64  
                                      i2u1126_48 3E66                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 0159  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 5034                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 614F                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5CDE  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5B10                            __end_of_get_longitude 5034  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 57A0  
                                   _get_rawspeed 55F4                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 0240  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1C62  
                             _posicao_cursor_lcd 4EC8                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3D3E  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4AE6  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 48D2  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 0011                                      ?_clust2sect 0016  
                               _put_cluster$1622 006A                                 _put_cluster$1623 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 33CA  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 6177                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1732 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 51EA  
                                 _temp_buff_long 015E                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 59DA                                   __end_of_f_open 197A  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 38EA                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 4842                                   __end_of_memcpy 552E  
                                 __end_of_memset 58BC                __end_of_convert_to_int_point_long 50E4  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 54A4  
                                 __end_of_strcpy 5862                                   __end_of_strlen 55F4  
                               _time_atualizacao 0166                              start_initialization 4276  
                                    __end_of_fix 5D1A                                      __end_of_gps 5BFC  
                                    __end_of_isr 3F1E                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02EF                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5C92  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5890  
                                _sdc_disk_status 5C62                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5D1A  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 598E                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5B30                               _verifica_recep_gps 5966  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00FD                                wait_ready@timeout 000A  
                                    _dado_buffer 010A                            __size_of_dummy_clocks 003C  
                                  auto_mount@fmt 0084                              __size_of_disk_ioctl 0020  
                            ?i2_write_timer_zero 0001                                       hora_nome@i 000C  
                            __size_of_disk_write 004C                                         ??___lmul 0012  
                          __size_of_gps_segundos 0022                                       fprintf@fil 00B1  
                                     fprintf@arp 00D9                                         ??___wmul 000E  
                                     fprintf@res 00CD                                       fprintf@val 00D5  
                                     fprintf@str 00B3                              __end_of_get_fattime 3678  
                                       ??_f_open 009D                              ?_verifica_recep_gps 0001  
                                       ??_f_sync 004C                                      ?_wait_ready 0001  
                                    __pdataBANK1 01EA                                      __pdataBANK2 029A  
                                    __pdataBANK3 0396                              __end_of_get_cluster 2AA4  
                verifica_dados_operacionais@dado 0118                                         ??_memcmp 0010  
                            __end_of_disk_status 5806                                         ??_memcpy 0010  
                            __size_of_clust2sect 00B2                                         ??_memset 0010  
                            __end_of_get_gpstime 5912                           sdc_disk_read@start_add 0022  
                           __end_of_remove_chain 467E                                ??_dados_gps_to_sd 0015  
                            __end_of_get_rawdate 5674                          sdc_disk_initialize@buff 0029  
                                  ??_leitura_SPI 000A                          __end_of_escreve_cmd_lcd 495E  
                                       ??_strcat 000E                                         ??_strcpy 0010  
                                       ??_strlen 000C                          sdc_disk_initialize@stat 0020  
                                    ?_trace_path 007E                                    ??_gps_minutos 000C  
                                   _fprintf$2225 00CF                     __size_of_endereco_cursor_lcd 006A  
                              __size_of___awtoft 0038                                __size_of___ftpack 00AE  
                                    __pbssBIGRAM 03BA                                    monta_sd@index 0013  
                                    __pbssCOMRAM 004D                                  _trace_path$1781 0089  
                                _trace_path$1779 0087                                    __pcstackBANK0 0060  
                                  __pcstackBANK2 02DF                                   _init_interrupt 5C2C  
                            __size_of_auto_mount 054A                             ??i2_write_timer_zero 0003  
                            __end_of_escalonador 453A                      __end_of_sdc_disk_initialize 1C62  
                                    _data_buffer 022A                                __size_of_check_fs 0082  
                                   _isdigit$3273 000B                                     check_fs@sect 0035  
                                    _char_number 0180                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 56F2                                   _init_oscilador 5D24  
                          __end_of_troca_de_tela 23D0                                 ??_escrita_sdcard 004D  
                                      _dados_lat 029A                              __size_of_init_ports 001C  
                                      _dados_vel 011E                                     _gps_segundos 5A66  
                          _escreve_frase_ram_lcd 52E0                                __size_of_grava_sd 001A  
                                      _data_buff 0176                                        _data_hoje 017A  
                    __end_of_escreve_inteiro_lcd 56F2                                        _data_nome 593C  
                            __end_of_escreve_SPI 5C82                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00F9  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 3102  
                    _verifica_dados_operacionais 2F86                                        _diferenca 40D8  
                                      __pintcode 0008                                    __pmediumconst 6100  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 5CBC  
                                      __ptext101 4F82                                        __ptext110 5AAA  
                                      __ptext102 57A0                                        __ptext111 59FE  
                                      __ptext103 5C72                                        __ptext120 3F1E  
                                      __ptext112 5ACC                                        __ptext104 56F2  
                                      __ptext121 4D9A                                        __ptext113 5AEE  
                                      __ptext105 5CC8                                        __ptext130 5B8E  
                                      __ptext122 4A64                                        __ptext114 593C  
                                      __ptext106 5B50                                        __ptext131 59B4  
                                      __ptext123 52E0                                        __ptext115 5C3E  
                                      __ptext107 3524                                        __ptext124 4C50  
                                      __ptext116 5C82                                        __ptext108 5A66  
                                      __ptext133 5D1A                                        __ptext125 5B70  
                                      __ptext117 5D10                                        __ptext109 5A88  
                                      __ptext134 3B24                                        __ptext126 4E64  
                                      __ptext118 56B4                                        __ptext135 5C50  
                                      __ptext127 0F7E                                        __ptext119 5570  
                                      __ptext136 0000                                        __ptext128 55B2  
                                      __ptext129 3268                                __size_of_monta_sd 0374  
                                       ?___lldiv 000A                                         ?___ftmul 001C  
                                       ?___llmod 000A                                __size_of_validate 0048  
                                       ?___fttol 002B                                         ?___lwdiv 000A  
                                       ?___lwmod 000A                                __size_of_response 000C  
                                       ?_f_close 0069                                        _disk_read 4CC2  
                             _sinaliza_int_timer 00FC                                         ?_f_lseek 0086  
                                       ?_f_mount 000A                                 _disparo_gravacao 263C  
                                       ?_f_write 0086                           ??_longitude_to_convert 0042  
                                       ?_get_fix 0001                                         ?_command 000F  
                         __end_of_init_interrupt 5C3E                                         ?_gps_dia 000A  
                                       ?_gps_ano 000A                                         ?_gps_mes 000A  
                                       ?_fprintf 00B1                                         ?_isdigit 0001  
                                    _desliga_SPI 5C82                              sdc_disk_read@p_buff 0016  
                        troca_de_tela@last_state 004F                              sdc_disk_read@length 0026  
                                       ?_rawdata 000A                              sdc_disk_read@sector 0018  
                                       ?_rawhora 000A                          __end_of_sdc_disk_status 5C72  
                 __size_of_escreve_caractere_lcd 0072                                   __size_of_Speed 000A  
                  __end_of_escreve_caractere_lcd 4CC2                                         ?_proceed 0001  
                                      f_close@fp 0069                              __end_of_leitura_SPI 5CD4  
                                      _hora_nome 5912                                 ___lwdiv@quotient 000F  
                                 __size_of_delay 001E                          __end_of_disk_initialize 59B4  
                         __end_of_init_oscilador 5D2C                              __end_of_gps_minutos 5AAA  
                                 __size_of_fputc 0040                                   __size_of_fputs 0058  
                            make_dirfile@dirname 0013                                       validate@id 0012  
                                     validate@fs 0010                             __end_of_posicao_long 5D32  
                                      _p_tarefas 0130                                   __size_of_ultoa 00E8  
                        __size_of_verifica_fence 005C                                        _rawCourse 0136  
                               make_dirfile@path 0012                                         _GPGGA_ok 0172  
                                      _sdc_reset 4842                              __size_of_wait_ready 0036  
                                ___aldiv@divisor 000E                      latitude_to_convert@latitude 0060  
                                ___aldiv@counter 0012                                   ___wmul@product 000E  
                                       _LATBbits 000F8A                                        f_lseek@fp 0086  
                                       _LATCbits 000F8B              __end_of_verifica_plausibilidade_lat 4BD8  
                    _verifica_plausibilidade_lat 4B60                                         _GPRMC_ok 0174  
                                      f_open@dir 00B4                                        f_open@res 00B3  
                                      _longitude 5CF2                                         _PIE1bits 000F9D  
                                    _get_fattime 3524                                     _rawLongitude 019D  
                               ?_recebe_dado_gps 0001                                       ?_data_nome 000A  
                            __size_of_trace_path 0280                                        _rmc_index 00F7  
                                    _get_cluster 287C                                      _disk_status 57D6  
                                  ??_move_window 0039                                        f_mount@fs 000A  
                                       _PIR1bits 000F9E                                      _get_gpstime 58E8  
                                     ?_diferenca 0001                                    move_window@fs 0048  
                                    _get_rawdate 5634               verifica_plausibilidade_lat@posicao 000A  
    verifica_dados_operacionais@velocidade_atual 0160      verifica_dados_operacionais@velocidade_media 014C  
                              ?_write_timer_zero 000A                                  remove_chain@nxt 007C  
                                      f_sync@dir 0067                                        f_sync@res 0066  
                                      f_sync@tim 0062                         posicao_cursor_lcd@coluna 000D  
                                     ?_disk_read 0029                               ??_write_timer_zero 000C  
                                      f_write@cc 009E                       posicao_cursor_lcd@endereco 000F  
                                      f_write@bw 008B                                        f_write@fp 0086  
                           _mostra_dados_display 5862                        __size_of_recebe_dado_uart 0012  
                                    _escalonador 4490                                ___wmul@multiplier 000A  
                               ?_escreve_cmd_lcd 0001                      escreve_frase_ram_lcd@buffer 000D  
                               ??_inicializa_SPI 000A                                  ?_init_interrupt 0001  
                                   ??_disk_ioctl 000D                                     ??_disk_write 0030  
                            armazena_ltlo@buffer 003E                                     f_lseek@clust 00A5  
                                _inicializa_uart 5A44                                     f_lseek@csize 00A1  
                                   f_lseek@ifptr 009D                                 _mensagem_inicial 471C  
                                  ??_posicao_lat 000A                                       ?_hora_nome 000A  
                                  _temp_buff_lat 015C                                  ?_init_oscilador 0001  
                                   ??_clust2sect 001A                                ___lmul@multiplier 000A  
                                      copy_data0 428A                                        copy_data1 42AA  
                                      copy_data2 42CA                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5C72                                    _flag_anomalia 0178  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2C4E  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 0078  
                       escreve_inteiro_lcd@F3223 01F1                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5B70                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 53CE                                     _SentenceType 017F  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2C4E  
                                       ___awtoft 5768                                         ___ftpack 43E2  
                             __end_of_clust2sect 43E2                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5CC8                       disparo_gravacao@velocidade 02DF  
                               __size_of_f_write 0596                                 __size_of_get_fix 0052  
                                    _gps_minutos 5A88                                 __size_of_command 005A  
                          __end_of_init_hardware 5C2C                                         _check_fs 49E2  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 0156                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 0168  
                       _convert_to_int_point_lat 50E4                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5332                                 __size_of_rawhora 000A  
                                       __ptext11 5BE2                                         __ptext20 263C  
                                       __ptext12 55F4                                         __ptext21 2F86  
                                       __ptext13 5634                                         __ptext30 43E2  
                                       __ptext22 5834                                         __ptext14 4FDC  
                                       __ptext31 5D06                                         __ptext23 5CDE  
                                       __ptext15 5034                                         __ptext40 5966  
                                       __ptext32 5862                                         __ptext24 5CE8  
                                       __ptext16 58E8                                         __ptext41 4AE6  
                                       __ptext33 48D2                                         __ptext25 5CF2  
                                       __ptext17 51EA                                         __ptext50 453A  
                                       __ptext42 4BD8                                         __ptext34 4F26  
                                       __ptext26 5CFC                                         __ptext18 4490  
                                       __ptext51 552E                                         __ptext43 495E  
                                       __ptext35 4E00                                         __ptext27 4006  
                                       __ptext19 215C                                         __ptext60 5912  
                                       __ptext52 523C                                         __ptext44 40D8  
                                       __ptext36 5D2C                                         __ptext28 3D3E  
                                       __ptext61 12F2                                         __ptext53 5BFC  
                                       __ptext45 508C                                         __ptext37 4B60  
                                       __ptext29 5768                                         __ptext70 4330  
                                       __ptext62 513C                                         __ptext54 5A44  
                                       __ptext46 50E4                                         __ptext38 5D32  
                                       __ptext71 45DE                                         __ptext63 5674  
                                       __ptext55 3C36                                         __ptext47 5A22  
                                       __ptext39 5B10                                         __ptext80 49E2  
                                       __ptext72 54EA                                         __ptext64 0012  
                                       __ptext56 41AA                                         __ptext48 38EA  
                                       __ptext81 47B0                                         __ptext73 05A8  
                                       __ptext65 1640                                         __ptext57 5B30  
                                       __ptext49 572E                                         __ptext90 5416  
                                       __ptext82 5194                                         __ptext74 5890  
                                       __ptext66 1C62                                         __ptext58 3678  
                                       __ptext91 57D6                                         __ptext83 53CE  
                                       __ptext75 598E                                         __ptext67 33CA  
                                       __ptext59 545E                                         __ptext92 5C62  
                                       __ptext84 0AF2                                         __ptext76 197A  
                                       __ptext68 1EE2                                         __ptext93 528E  
                                       __ptext85 2DF0                                         __ptext77 4842  
                                       __ptext69 3102                                         __ptext94 2AA4  
                                       __ptext86 23D0                                         __ptext78 4EC8  
                                       __ptext95 5382                                         __ptext87 287C  
                                       __ptext79 4D30                                         __ptext96 2C4E  
                                       __ptext88 58BC                                         __ptext97 4CC2  
                                       __ptext89 37C2                                         __ptext98 3A0C  
                                       __ptext99 5CB0                                 __size_of_proceed 000C  
                                       _filename 0265                                      _rawAltitude 0111  
                               ?_disk_initialize 0001                                   _timeout_tarefa 016C  
                                   _rmc_pointers 0239                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0058                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5382  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5BFC  
                         __end_of_sdc_disk_write 2DF0                                        monta_sd@i 0014  
                                       _gps_flag 0142                                         _latitude 5CFC  
                                       _gps_hora 59FE                                      _rawLatitude 01B6  
                                       _init_lcd 467E                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 45DE                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5D36  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4D30                               __end_of_init_ports 5BC8  
                                       _rawSpeed 0279                                      ??_data_nome 000C  
                              _comma_counter_gga 00FF                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00FE                                  _dados_gps_to_sd 4E64  
                                       _rmc_code 0153                                         _monta_sd 0F7E  
                                       _validate 5416                                      ??_diferenca 0035  
                                       _sentence 013C                                     move_window@n 0043  
                                       _response 5CB0                                         f_sync@fp 0060  
                            _point_buff_gps_long 0162                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 5A66                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0006                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 263C  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5CA2  
                                   _tempo_backup 012A                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5BC8  
                                 _verifica_fence 4F26                                    _armazena_ltlo 495E  
                                   _poligono_ext 00E7                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 0124                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0148                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 57D6                         __end_of_disparo_gravacao 287C  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3B24                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000C  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 1EE2                              ??_config_timer_zero 000C  
                                    _move_window 2AA4                                  _fence_diff_long 6123  
                              get_latitude@index 000C                           ??_mostra_dados_display 0010  
                                   _posicao_long 5D2C                                    _get_longitude 4FDC  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5C50                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5CB0  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5BE2                           __end_of_verifica_fence 4F82  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5D32  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4EC8  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 01F8                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 1EE2  
                        disparo_gravacao@fix_gps 02EB                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3687 6123                    __end_ofmensagem_inicial@F3689 6112  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02ED  
