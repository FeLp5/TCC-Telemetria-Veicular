

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon May 16 15:54:21 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   145                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   146  0000                     
   147                           ; Version 2.30
   148                           ; Generated 26/08/2020 GMT
   149                           ; 
   150                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution. Publication is not required when
   164                           ;        this file is used in an embedded application.
   165                           ; 
   166                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   167                           ;        software without specific prior written permission.
   168                           ; 
   169                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   170                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   171                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   172                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   173                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   174                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   175                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   176                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   177                           ; 
   178                           ; 
   179                           ; Code-generator required, PIC18F4550 Definitions
   180                           ; 
   181                           ; SFR Addresses
   182  0000                     
   183 ;; Function _Speed is unused but had its address taken
   184  0000                     
   185                           	psect	idataCOMRAM
   186  0055E2                     __pidataCOMRAM:
   187                           	callstack 0
   188                           
   189                           ;initializer for leitura_sdcard@size
   190  0055E2  58                 	db	88
   191                           
   192                           	psect	idataBANK1
   193  005308                     __pidataBANK1:
   194                           	callstack 0
   195                           
   196                           ;initializer for escreve_inteiro_uart@F3215
   197  005308  30                 	db	48
   198  005309  30                 	db	48
   199  00530A  30                 	db	48
   200  00530B  30                 	db	48
   201  00530C  30                 	db	48
   202  00530D  30                 	db	48
   203  00530E  00                 	db	0
   204                           
   205                           ;initializer for escreve_inteiro_lcd@F3223
   206  00530F  30                 	db	48
   207  005310  30                 	db	48
   208  005311  30                 	db	48
   209  005312  30                 	db	48
   210  005313  30                 	db	48
   211  005314  30                 	db	48
   212  005315  00                 	db	0
   213                           
   214                           ;initializer for _rawLongitude
   215  005316  30                 	db	48
   216  005317  30                 	db	48
   217  005318  30                 	db	48
   218  005319  30                 	db	48
   219  00531A  30                 	db	48
   220  00531B  30                 	db	48
   221  00531C  30                 	db	48
   222  00531D  30                 	db	48
   223  00531E  30                 	db	48
   224  00531F  30                 	db	48
   225  005320  30                 	db	48
   226  005321  30                 	db	48
   227                           
   228                           ;initializer for _rawLatitude
   229  005322  30                 	db	48
   230  005323  30                 	db	48
   231  005324  30                 	db	48
   232  005325  30                 	db	48
   233  005326  30                 	db	48
   234  005327  30                 	db	48
   235  005328  30                 	db	48
   236  005329  30                 	db	48
   237  00532A  30                 	db	48
   238  00532B  30                 	db	48
   239  00532C  30                 	db	48
   240                           
   241                           	psect	mediumconst
   242  006100                     __pmediumconst:
   243                           	callstack 0
   244  006100  00                 	db	0
   245  006101                     mensagem_inicial@F3660:
   246                           	callstack 0
   247  006101  54                 	db	84
   248  006102  43                 	db	67
   249  006103  43                 	db	67
   250  006104  2D                 	db	45
   251  006105  2D                 	db	45
   252  006106  54                 	db	84
   253  006107  45                 	db	69
   254  006108  4C                 	db	76
   255  006109  45                 	db	69
   256  00610A  4D                 	db	77
   257  00610B  54                 	db	84
   258  00610C  52                 	db	82
   259  00610D  49                 	db	73
   260  00610E  41                 	db	65
   261  00610F  00                 	db	0
   262  006110  00                 	db	0
   263  006111  00                 	db	0
   264  006112                     __end_ofmensagem_inicial@F3660:
   265                           	callstack 0
   266  006112                     mensagem_inicial@F3658:
   267                           	callstack 0
   268  006112  46                 	db	70
   269  006113  41                 	db	65
   270  006114  54                 	db	84
   271  006115  45                 	db	69
   272  006116  43                 	db	67
   273  006117  20                 	db	32
   274  006118  53                 	db	83
   275  006119  54                 	db	84
   276  00611A  20                 	db	32
   277  00611B  41                 	db	65
   278  00611C  4E                 	db	78
   279  00611D  44                 	db	68
   280  00611E  52                 	db	82
   281  00611F  45                 	db	69
   282  006120  00                 	db	0
   283  006121  00                 	db	0
   284  006122  00                 	db	0
   285  006123                     __end_ofmensagem_inicial@F3658:
   286                           	callstack 0
   287  006123                     _fence_diff_long:
   288                           	callstack 0
   289  006123  2D                 	db	45
   290  006124  30                 	db	48
   291  006125  34                 	db	52
   292  006126  36                 	db	54
   293  006127  33                 	db	51
   294  006128  33                 	db	51
   295  006129  39                 	db	57
   296  00612A  34                 	db	52
   297  00612B  30                 	db	48
   298  00612C  35                 	db	53
   299  00612D  30                 	db	48
   300  00612E  2D                 	db	45
   301  00612F  30                 	db	48
   302  006130  34                 	db	52
   303  006131  36                 	db	54
   304  006132  32                 	db	50
   305  006133  39                 	db	57
   306  006134  34                 	db	52
   307  006135  31                 	db	49
   308  006136  34                 	db	52
   309  006137  37                 	db	55
   310  006138  34                 	db	52
   311  006139  2D                 	db	45
   312  00613A  30                 	db	48
   313  00613B  34                 	db	52
   314  00613C  36                 	db	54
   315  00613D  32                 	db	50
   316  00613E  39                 	db	57
   317  00613F  34                 	db	52
   318  006140  31                 	db	49
   319  006141  34                 	db	52
   320  006142  37                 	db	55
   321  006143  34                 	db	52
   322  006144  2D                 	db	45
   323  006145  30                 	db	48
   324  006146  34                 	db	52
   325  006147  36                 	db	54
   326  006148  33                 	db	51
   327  006149  33                 	db	51
   328  00614A  39                 	db	57
   329  00614B  34                 	db	52
   330  00614C  30                 	db	48
   331  00614D  35                 	db	53
   332  00614E  30                 	db	48
   333  00614F                     __end_of_fence_diff_long:
   334                           	callstack 0
   335  00614F                     _fence_diff_lat:
   336                           	callstack 0
   337  00614F  2D                 	db	45
   338  006150  32                 	db	50
   339  006151  33                 	db	51
   340  006152  33                 	db	51
   341  006153  36                 	db	54
   342  006154  34                 	db	52
   343  006155  36                 	db	54
   344  006156  36                 	db	54
   345  006157  35                 	db	53
   346  006158  33                 	db	51
   347  006159  2D                 	db	45
   348  00615A  32                 	db	50
   349  00615B  33                 	db	51
   350  00615C  33                 	db	51
   351  00615D  36                 	db	54
   352  00615E  34                 	db	52
   353  00615F  36                 	db	54
   354  006160  36                 	db	54
   355  006161  35                 	db	53
   356  006162  33                 	db	51
   357  006163  2D                 	db	45
   358  006164  32                 	db	50
   359  006165  33                 	db	51
   360  006166  34                 	db	52
   361  006167  30                 	db	48
   362  006168  35                 	db	53
   363  006169  39                 	db	57
   364  00616A  36                 	db	54
   365  00616B  34                 	db	52
   366  00616C  32                 	db	50
   367  00616D  2D                 	db	45
   368  00616E  32                 	db	50
   369  00616F  33                 	db	51
   370  006170  34                 	db	52
   371  006171  30                 	db	48
   372  006172  35                 	db	53
   373  006173  39                 	db	57
   374  006174  36                 	db	54
   375  006175  34                 	db	52
   376  006176  32                 	db	50
   377  006177                     __end_of_fence_diff_lat:
   378                           	callstack 0
   379  0000                     _TMR0	set	4054
   380  0000                     _PORTEbits	set	3972
   381  0000                     _PCL	set	4089
   382  0000                     _PCLATH	set	4090
   383  0000                     _PIE1bits	set	3997
   384  0000                     _RCSTA	set	4011
   385  0000                     _TXSTA	set	4012
   386  0000                     _RCREG	set	4014
   387  0000                     _RCSTAbits	set	4011
   388  0000                     _SPBRG	set	4015
   389  0000                     _PIR1bits	set	3998
   390  0000                     _SSPBUF	set	4041
   391  0000                     _SSPCON1bits	set	4038
   392  0000                     _SSPSTATbits	set	4039
   393  0000                     _SSPCON1	set	4038
   394  0000                     _SSPSTAT	set	4039
   395  0000                     _TRISCbits	set	3988
   396  0000                     _TRISBbits	set	3987
   397  0000                     _PORTBbits	set	3969
   398  0000                     _PR2	set	4043
   399  0000                     _TMR2	set	4044
   400  0000                     _T2CON	set	4042
   401  0000                     _OSCCONbits	set	4051
   402  0000                     _TRISE	set	3990
   403  0000                     _TRISC	set	3988
   404  0000                     _TRISA	set	3986
   405  0000                     _TRISD	set	3989
   406  0000                     _LATB	set	3978
   407  0000                     _TRISB	set	3987
   408  0000                     _ADCON1	set	4033
   409  0000                     _T0CONbits	set	4053
   410  0000                     _INTCONbits	set	4082
   411  0000                     _PIE1	set	3997
   412  0000                     _INTCON3	set	4080
   413  0000                     _INTCON2	set	4081
   414  0000                     _INTCON	set	4082
   415  0000                     _SPPCFG	set	3939
   416  0000                     _SPPCON	set	3941
   417  0000                     _T0CON	set	4053
   418  0000                     _PORTDbits	set	3971
   419  0000                     _TRISDbits	set	3989
   420  0000                     _LATBbits	set	3978
   421  0000                     _LATCbits	set	3979
   422  0000                     _INT0IE	set	32660
   423  0000                     _INT0IF	set	32657
   424  0000                     _T0IF	set	32658
   425  0000                     _TMR0IF	set	32658
   426  0000                     _RCIF	set	31989
   427  0000                     _TXEN	set	32101
   428  0000                     _CREN	set	32092
   429  0000                     _SPEN	set	32095
   430  0000                     _SYNC	set	32100
   431  0000                     _BRGH	set	32098
   432  006177                     STR_14:
   433  006177  76                 	db	118	;'v'
   434  006178  25                 	db	37
   435  006179  73                 	db	115	;'s'
   436  00617A  3B                 	db	59	;';'
   437  00617B  6C                 	db	108	;'l'
   438  00617C  74                 	db	116	;'t'
   439  00617D  25                 	db	37
   440  00617E  73                 	db	115	;'s'
   441  00617F  3B                 	db	59	;';'
   442  006180  6C                 	db	108	;'l'
   443  006181  6F                 	db	111	;'o'
   444  006182  25                 	db	37
   445  006183  73                 	db	115	;'s'
   446  006184  3B                 	db	59	;';'
   447  006185  72                 	db	114	;'r'
   448  006186  30                 	db	48	;'0'
   449  006187  3B                 	db	59	;';'
   450  006188  63                 	db	99	;'c'
   451  006189  30                 	db	48	;'0'
   452  00618A  3B                 	db	59	;';'
   453  00618B  6B                 	db	107	;'k'
   454  00618C  30                 	db	48	;'0'
   455  00618D  3B                 	db	59	;';'
   456  00618E  68                 	db	104	;'h'
   457  00618F  25                 	db	37
   458  006190  73                 	db	115	;'s'
   459  006191  3B                 	db	59	;';'
   460  006192  64                 	db	100	;'d'
   461  006193  4E                 	db	78	;'N'
   462  006194  2F                 	db	47
   463  006195  41                 	db	65	;'A'
   464  006196  3B                 	db	59	;';'
   465  006197  66                 	db	102	;'f'
   466  006198  25                 	db	37
   467  006199  73                 	db	115	;'s'
   468  00619A  3B                 	db	59	;';'
   469  00619B  0A                 	db	10
   470  00619C  00                 	db	0
   471  00619D  6F                 	db	111	;'o'
   472  00619E  20                 	db	32
   473  00619F  53                 	db	83	;'S'
   474  0061A0  69                 	db	105	;'i'
   475  0061A1  73                 	db	115	;'s'
   476  0061A2  74                 	db	116	;'t'
   477  0061A3  65                 	db	101	;'e'
   478  0061A4  6D                 	db	109	;'m'
   479  0061A5  61                 	db	97	;'a'
   480  0061A6  20                 	db	32
   481  0061A7  64                 	db	100	;'d'
   482  0061A8  65                 	db	101	;'e'
   483  0061A9  20                 	db	32
   484  0061AA  61                 	db	97	;'a'
   485  0061AB  72                 	db	114	;'r'
   486  0061AC  71                 	db	113	;'q'
   487  0061AD  75                 	db	117	;'u'
   488  0061AE  69                 	db	105	;'i'
   489  0061AF  76                 	db	118	;'v'
   490  0061B0  6F                 	db	111	;'o'
   491  0061B1  00                 	db	0
   492  0061B2                     STR_2:
   493  0061B2  49                 	db	73	;'I'
   494  0061B3  6E                 	db	110	;'n'
   495  0061B4  73                 	db	115	;'s'
   496  0061B5  69                 	db	105	;'i'
   497  0061B6  72                 	db	114	;'r'
   498  0061B7  61                 	db	97	;'a'
   499  0061B8  20                 	db	32
   500  0061B9  6F                 	db	111	;'o'
   501  0061BA  20                 	db	32
   502  0061BB  43                 	db	67	;'C'
   503  0061BC  61                 	db	97	;'a'
   504  0061BD  72                 	db	114	;'r'
   505  0061BE  74                 	db	116	;'t'
   506  0061BF  61                 	db	97	;'a'
   507  0061C0  6F                 	db	111	;'o'
   508  0061C1  00                 	db	0
   509  0061C2  45                 	db	69	;'E'
   510  0061C3  72                 	db	114	;'r'
   511  0061C4  72                 	db	114	;'r'
   512  0061C5  6F                 	db	111	;'o'
   513  0061C6  20                 	db	32
   514  0061C7  61                 	db	97	;'a'
   515  0061C8  6F                 	db	111	;'o'
   516  0061C9  20                 	db	32
   517  0061CA  6D                 	db	109	;'m'
   518  0061CB  6F                 	db	111	;'o'
   519  0061CC  6E                 	db	110	;'n'
   520  0061CD  74                 	db	116	;'t'
   521  0061CE  61                 	db	97	;'a'
   522  0061CF  72                 	db	114	;'r'
   523  0061D0  00                 	db	0
   524  0061D1  45                 	db	69	;'E'
   525  0061D2  72                 	db	114	;'r'
   526  0061D3  72                 	db	114	;'r'
   527  0061D4  6F                 	db	111	;'o'
   528  0061D5  20                 	db	32
   529  0061D6  61                 	db	97	;'a'
   530  0061D7  6F                 	db	111	;'o'
   531  0061D8  20                 	db	32
   532  0061D9  63                 	db	99	;'c'
   533  0061DA  72                 	db	114	;'r'
   534  0061DB  69                 	db	105	;'i'
   535  0061DC  61                 	db	97	;'a'
   536  0061DD  72                 	db	114	;'r'
   537  0061DE  00                 	db	0
   538  0061DF  65                 	db	101	;'e'
   539  0061E0  78                 	db	120	;'x'
   540  0061E1  74                 	db	116	;'t'
   541  0061E2  66                 	db	102	;'f'
   542  0061E3  65                 	db	101	;'e'
   543  0061E4  6E                 	db	110	;'n'
   544  0061E5  63                 	db	99	;'c'
   545  0061E6  65                 	db	101	;'e'
   546  0061E7  2E                 	db	46
   547  0061E8  74                 	db	116	;'t'
   548  0061E9  78                 	db	120	;'x'
   549  0061EA  74                 	db	116	;'t'
   550  0061EB  00                 	db	0
   551  0061EC                     STR_18:
   552  0061EC  41                 	db	65	;'A'
   553  0061ED  47                 	db	71	;'G'
   554  0061EE  55                 	db	85	;'U'
   555  0061EF  41                 	db	65	;'A'
   556  0061F0  52                 	db	82	;'R'
   557  0061F1  44                 	db	68	;'D'
   558  0061F2  45                 	db	69	;'E'
   559  0061F3  2E                 	db	46
   560  0061F4  2E                 	db	46
   561  0061F5  2E                 	db	46
   562  0061F6  00                 	db	0
   563  0061F7                     STR_4:
   564  0061F7  4D                 	db	77	;'M'
   565  0061F8  4D                 	db	77	;'M'
   566  0061F9  43                 	db	67	;'C'
   567  0061FA  20                 	db	32
   568  0061FB  56                 	db	86	;'V'
   569  0061FC  65                 	db	101	;'e'
   570  0061FD  72                 	db	114	;'r'
   571  0061FE  2E                 	db	46
   572  0061FF  20                 	db	32
   573  006200  33                 	db	51	;'3'
   574  006201  00                 	db	0
   575  006202                     STR_1:
   576  006202  53                 	db	83	;'S'
   577  006203  65                 	db	101	;'e'
   578  006204  6D                 	db	109	;'m'
   579  006205  20                 	db	32
   580  006206  43                 	db	67	;'C'
   581  006207  61                 	db	97	;'a'
   582  006208  72                 	db	114	;'r'
   583  006209  74                 	db	116	;'t'
   584  00620A  61                 	db	97	;'a'
   585  00620B  6F                 	db	111	;'o'
   586  00620C  00                 	db	0
   587  00620D  56                 	db	86	;'V'
   588  00620E  65                 	db	101	;'e'
   589  00620F  72                 	db	114	;'r'
   590  006210  69                 	db	105	;'i'
   591  006211  66                 	db	102	;'f'
   592  006212  69                 	db	105	;'i'
   593  006213  71                 	db	113	;'q'
   594  006214  75                 	db	117	;'u'
   595  006215  65                 	db	101	;'e'
   596  006216  00                 	db	0
   597  006217  6F                 	db	111	;'o'
   598  006218  20                 	db	32
   599  006219  61                 	db	97	;'a'
   600  00621A  72                 	db	114	;'r'
   601  00621B  71                 	db	113	;'q'
   602  00621C  75                 	db	117	;'u'
   603  00621D  69                 	db	105	;'i'
   604  00621E  76                 	db	118	;'v'
   605  00621F  6F                 	db	111	;'o'
   606  006220  00                 	db	0
   607  006221                     STR_3:
   608  006221  53                 	db	83	;'S'
   609  006222  44                 	db	68	;'D'
   610  006223  20                 	db	32
   611  006224  56                 	db	86	;'V'
   612  006225  45                 	db	69	;'E'
   613  006226  52                 	db	82	;'R'
   614  006227  2E                 	db	46
   615  006228  20                 	db	32
   616  006229  31                 	db	49	;'1'
   617  00622A  00                 	db	0
   618  00622B                     STR_28:
   619  00622B  42                 	db	66	;'B'
   620  00622C  31                 	db	49	;'1'
   621  00622D  3A                 	db	58	;':'
   622  00622E  46                 	db	70	;'F'
   623  00622F  45                 	db	69	;'E'
   624  006230  4E                 	db	78	;'N'
   625  006231  43                 	db	67	;'C'
   626  006232  45                 	db	69	;'E'
   627  006233  00                 	db	0
   628  006234  6F                 	db	111	;'o'
   629  006235  20                 	db	32
   630  006236  63                 	db	99	;'c'
   631  006237  61                 	db	97	;'a'
   632  006238  72                 	db	114	;'r'
   633  006239  74                 	db	116	;'t'
   634  00623A  61                 	db	97	;'a'
   635  00623B  6F                 	db	111	;'o'
   636  00623C  00                 	db	0
   637  00623D                     STR_29:
   638  00623D  42                 	db	66	;'B'
   639  00623E  32                 	db	50	;'2'
   640  00623F  3A                 	db	58	;':'
   641  006240  4C                 	db	76	;'L'
   642  006241  54                 	db	84	;'T'
   643  006242  4C                 	db	76	;'L'
   644  006243  4F                 	db	79	;'O'
   645  006244  00                 	db	0
   646  006245                     STR_21:
   647  006245  46                 	db	70	;'F'
   648  006246  45                 	db	69	;'E'
   649  006247  4E                 	db	78	;'N'
   650  006248  43                 	db	67	;'C'
   651  006249  45                 	db	69	;'E'
   652  00624A  3A                 	db	58	;':'
   653  00624B  00                 	db	0
   654  00624C                     STR_20:
   655  00624C  44                 	db	68	;'D'
   656  00624D  45                 	db	69	;'E'
   657  00624E  4E                 	db	78	;'N'
   658  00624F  54                 	db	84	;'T'
   659  006250  52                 	db	82	;'R'
   660  006251  4F                 	db	79	;'O'
   661  006252  00                 	db	0
   662  006253                     STR_6:
   663  006253  47                 	db	71	;'G'
   664  006254  50                 	db	80	;'P'
   665  006255  47                 	db	71	;'G'
   666  006256  47                 	db	71	;'G'
   667  006257  41                 	db	65	;'A'
   668  006258  00                 	db	0
   669  006259                     STR_5:
   670  006259  47                 	db	71	;'G'
   671  00625A  50                 	db	80	;'P'
   672  00625B  52                 	db	82	;'R'
   673  00625C  4D                 	db	77	;'M'
   674  00625D  43                 	db	67	;'C'
   675  00625E  00                 	db	0
   676  00625F                     STR_25:
   677  00625F  46                 	db	70	;'F'
   678  006260  49                 	db	73	;'I'
   679  006261  58                 	db	88	;'X'
   680  006262  3A                 	db	58	;':'
   681  006263  00                 	db	0
   682  006264                     STR_19:
   683  006264  46                 	db	70	;'F'
   684  006265  4F                 	db	79	;'O'
   685  006266  52                 	db	82	;'R'
   686  006267  41                 	db	65	;'A'
   687  006268  00                 	db	0
   688  006269                     STR_13:
   689  006269  2E                 	db	46
   690  00626A  74                 	db	116	;'t'
   691  00626B  6C                 	db	108	;'l'
   692  00626C  6D                 	db	109	;'m'
   693  00626D  00                 	db	0
   694  00626E                     STR_27:
   695  00626E  6C                 	db	108	;'l'
   696  00626F  6F                 	db	111	;'o'
   697  006270  3A                 	db	58	;':'
   698  006271  00                 	db	0
   699  006272                     STR_26:
   700  006272  6C                 	db	108	;'l'
   701  006273  74                 	db	116	;'t'
   702  006274  3A                 	db	58	;':'
   703  006275  00                 	db	0
   704  006276                     STR_16:
   705  006276  46                 	db	70	;'F'
   706  006277  41                 	db	65	;'A'
   707  006278  54                 	db	84	;'T'
   708  006279  00                 	db	0
   709  00627A  0D                 	db	13
   710  00627B  0A                 	db	10
   711  00627C  00                 	db	0
   712  00627D                     STR_24:
   713  00627D  7C                 	db	124
   714  00627E  00                 	db	0
   715  00627F  00                 	db	0	; dummy byte at the end
   716  0000                     
   717                           ; #config settings
   718                           
   719                           	psect	cinit
   720  0043F2                     __pcinit:
   721                           	callstack 0
   722  0043F2                     start_initialization:
   723                           	callstack 0
   724  0043F2                     __initialization:
   725                           	callstack 0
   726                           
   727                           ; Initialize objects allocated to BANK1 (37 bytes)
   728                           ; load TBLPTR registers with __pidataBANK1
   729  0043F2  0E08               	movlw	low __pidataBANK1
   730  0043F4  6EF6               	movwf	tblptrl,c
   731  0043F6  0E53               	movlw	high __pidataBANK1
   732  0043F8  6EF7               	movwf	tblptrh,c
   733  0043FA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   734  0043FC  6EF8               	movwf	tblptru,c
   735  0043FE  EE01  F0BD         	lfsr	0,__pdataBANK1
   736  004402  EE10 F025          	lfsr	1,37
   737  004406                     copy_data0:
   738  004406  0009               	tblrd		*+
   739  004408  CFF5 FFEE          	movff	tablat,postinc0
   740  00440C  50E5               	movf	postdec1,w,c
   741  00440E  50E1               	movf	fsr1l,w,c
   742  004410  E1FA               	bnz	copy_data0
   743                           
   744                           ; Initialize objects allocated to COMRAM (1 bytes)
   745                           ; load TBLPTR registers with __pidataCOMRAM
   746  004412  0EE2               	movlw	low __pidataCOMRAM
   747  004414  6EF6               	movwf	tblptrl,c
   748  004416  0E55               	movlw	high __pidataCOMRAM
   749  004418  6EF7               	movwf	tblptrh,c
   750  00441A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   751  00441C  6EF8               	movwf	tblptru,c
   752  00441E  0009               	tblrd		*+	;fetch initializer
   753  004420  CFF5 F045          	movff	tablat,__pdataCOMRAM
   754                           
   755                           ; Clear objects allocated to BIGRAM (544 bytes)
   756  004424  EE02  F060         	lfsr	0,__pbssBIGRAM
   757  004428  EE12 F020          	lfsr	1,544
   758  00442C                     clear_0:
   759  00442C  6AEE               	clrf	postinc0,c
   760  00442E  50E5               	movf	postdec1,w,c
   761  004430  50E1               	movf	fsr1l,w,c
   762  004432  E1FC               	bnz	clear_0
   763  004434  50E2               	movf	fsr1h,w,c
   764  004436  E1FA               	bnz	clear_0
   765                           
   766                           ; Clear objects allocated to BANK2 (62 bytes)
   767  004438  EE02  F000         	lfsr	0,__pbssBANK2
   768  00443C  0E3E               	movlw	62
   769  00443E                     clear_1:
   770  00443E  6AEE               	clrf	postinc0,c
   771  004440  06E8               	decf	wreg,f,c
   772  004442  E1FD               	bnz	clear_1
   773                           
   774                           ; Clear objects allocated to BANK1 (189 bytes)
   775  004444  EE01  F000         	lfsr	0,__pbssBANK1
   776  004448  0EBD               	movlw	189
   777  00444A                     clear_2:
   778  00444A  6AEE               	clrf	postinc0,c
   779  00444C  06E8               	decf	wreg,f,c
   780  00444E  E1FD               	bnz	clear_2
   781                           
   782                           ; Clear objects allocated to BANK0 (16 bytes)
   783  004450  EE00  F0F0         	lfsr	0,__pbssBANK0
   784  004454  0E10               	movlw	16
   785  004456                     clear_3:
   786  004456  6AEE               	clrf	postinc0,c
   787  004458  06E8               	decf	wreg,f,c
   788  00445A  E1FD               	bnz	clear_3
   789                           
   790                           ; Clear objects allocated to COMRAM (21 bytes)
   791  00445C  EE00  F030         	lfsr	0,__pbssCOMRAM
   792  004460  0E15               	movlw	21
   793  004462                     clear_4:
   794  004462  6AEE               	clrf	postinc0,c
   795  004464  06E8               	decf	wreg,f,c
   796  004466  E1FD               	bnz	clear_4
   797  004468                     end_of_initialization:
   798                           	callstack 0
   799  004468                     __end_of__initialization:
   800                           	callstack 0
   801  004468  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   802  00446A  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   803  00446C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   804  00446E  6EF8               	movwf	tblptru,c
   805  004470  0100               	movlb	0
   806  004472  EF36  F029         	goto	_main	;jump to C main() function
   807                           
   808                           	psect	bssCOMRAM
   809  000030                     __pbssCOMRAM:
   810                           	callstack 0
   811  000030                     _time_atualizacao:
   812                           	callstack 0
   813  000030                     	ds	2
   814  000032                     _time_sd:
   815                           	callstack 0
   816  000032                     	ds	2
   817  000034                     _FatFs:
   818                           	callstack 0
   819  000034                     	ds	2
   820  000036                     troca_de_tela@last_state:
   821                           	callstack 0
   822  000036                     	ds	1
   823  000037                     troca_de_tela@state:
   824                           	callstack 0
   825  000037                     	ds	1
   826  000038                     	ds	1
   827  000039                     _flag_anomalia:
   828                           	callstack 0
   829  000039                     	ds	1
   830  00003A                     _tarefa_em_execucao:
   831                           	callstack 0
   832  00003A                     	ds	1
   833  00003B                     _sinaliza_int_timer:
   834                           	callstack 0
   835  00003B                     	ds	1
   836  00003C                     _data_uart_recebe:
   837                           	callstack 0
   838  00003C                     	ds	1
   839  00003D                     _sinaliza_mcp2515:
   840                           	callstack 0
   841  00003D                     	ds	1
   842  00003E                     _estado:
   843                           	callstack 0
   844  00003E                     	ds	1
   845  00003F                     escrita_sdcard@f_fix:
   846                           	callstack 0
   847  00003F                     	ds	1
   848  000040                     _data_hoje:
   849                           	callstack 0
   850  000040                     	ds	1
   851  000041                     	ds	1
   852  000042                     _Term:
   853                           	callstack 0
   854  000042                     	ds	1
   855  000043                     _SentenceType:
   856                           	callstack 0
   857  000043                     	ds	1
   858  000044                     _char_number:
   859                           	callstack 0
   860  000044                     	ds	1
   861                           
   862                           	psect	dataCOMRAM
   863  000045                     __pdataCOMRAM:
   864                           	callstack 0
   865  000045                     	ds	1
   866                           
   867                           	psect	bssBANK0
   868  0000F0                     __pbssBANK0:
   869                           	callstack 0
   870  0000F0                     _poligono_ext:
   871                           	callstack 0
   872  0000F0                     	ds	16
   873                           
   874                           	psect	bssBANK1
   875  000100                     __pbssBANK1:
   876                           	callstack 0
   877  000100                     _dado:
   878                           	callstack 0
   879  000100                     	ds	10
   880  00010A                     _rawAltitude:
   881                           	callstack 0
   882  00010A                     	ds	7
   883  000111                     _tempo_tarefa:
   884                           	callstack 0
   885  000111                     	ds	6
   886  000117                     _tempo_backup:
   887                           	callstack 0
   888  000117                     	ds	6
   889  00011D                     _p_tarefas:
   890                           	callstack 0
   891  00011D                     	ds	6
   892  000123                     _rawCourse:
   893                           	callstack 0
   894  000123                     	ds	6
   895  000129                     _gps_flag:
   896                           	callstack 0
   897  000129                     	ds	6
   898  00012F                     	ds	4
   899  000133                     _fence_flag:
   900                           	callstack 0
   901  000133                     	ds	3
   902  000136                     _rawSatellites:
   903                           	callstack 0
   904  000136                     	ds	3
   905  000139                     _temp_buff_lat:
   906                           	callstack 0
   907  000139                     	ds	2
   908  00013B                     _temp_buff_long:
   909                           	callstack 0
   910  00013B                     	ds	2
   911  00013D                     _point_buff_gps_long:
   912                           	callstack 0
   913  00013D                     	ds	2
   914  00013F                     _point_buff_gps_lat:
   915                           	callstack 0
   916  00013F                     	ds	2
   917  000141                     _time_recovery:
   918                           	callstack 0
   919  000141                     	ds	2
   920  000143                     _timeout_tarefa:
   921                           	callstack 0
   922  000143                     	ds	2
   923  000145                     _fsid:
   924                           	callstack 0
   925  000145                     	ds	2
   926  000147                     _GPGGA_ok:
   927                           	callstack 0
   928  000147                     	ds	2
   929  000149                     _GPRMC_ok:
   930                           	callstack 0
   931  000149                     	ds	2
   932  00014B                     _data_buff:
   933                           	callstack 0
   934  00014B                     	ds	2
   935  00014D                     _fil:
   936                           	callstack 0
   937  00014D                     	ds	28
   938  000169                     _dado_arquivo:
   939                           	callstack 0
   940  000169                     	ds	20
   941  00017D                     _filename:
   942                           	callstack 0
   943  00017D                     	ds	20
   944  000191                     _buffer:
   945                           	callstack 0
   946  000191                     	ds	12
   947  00019D                     _rawTime:
   948                           	callstack 0
   949  00019D                     	ds	11
   950  0001A8                     _rawDate:
   951                           	callstack 0
   952  0001A8                     	ds	7
   953  0001AF                     _rawSpeed:
   954                           	callstack 0
   955  0001AF                     	ds	6
   956  0001B5                     _sentence:
   957                           	callstack 0
   958  0001B5                     	ds	6
   959  0001BB                     _rawFix:
   960                           	callstack 0
   961  0001BB                     	ds	2
   962                           
   963                           	psect	dataBANK1
   964  0001BD                     __pdataBANK1:
   965                           	callstack 0
   966  0001BD                     	ds	7
   967  0001C4                     escreve_inteiro_lcd@F3223:
   968                           	callstack 0
   969  0001C4                     	ds	7
   970  0001CB                     _rawLongitude:
   971                           	callstack 0
   972  0001CB                     	ds	12
   973  0001D7                     _rawLatitude:
   974                           	callstack 0
   975  0001D7                     	ds	11
   976                           
   977                           	psect	bssBANK2
   978  000200                     __pbssBANK2:
   979                           	callstack 0
   980  000200                     _string_dado:
   981                           	callstack 0
   982  000200                     	ds	62
   983                           
   984                           	psect	bssBIGRAM
   985  000260                     __pbssBIGRAM:
   986                           	callstack 0
   987  000260                     _fs:
   988                           	callstack 0
   989  000260                     	ds	544
   990                           
   991                           	psect	cstackBANK2
   992  00023E                     __pcstackBANK2:
   993                           	callstack 0
   994  00023E                     fprintf@s:
   995                           	callstack 0
   996                           
   997                           ; 16 bytes @ 0x0
   998  00023E                     	ds	16
   999  00024E                     fprintf@res:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x10
  1003  00024E                     	ds	2
  1004  000250                     _fprintf$2161:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x12
  1008  000250                     	ds	2
  1009  000252                     fprintf@w:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x14
  1013  000252                     	ds	2
  1014  000254                     fprintf@f:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x16
  1018  000254                     	ds	1
  1019  000255                     fprintf@r:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x17
  1023  000255                     	ds	1
  1024  000256                     fprintf@val:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x18
  1028  000256                     	ds	4
  1029  00025A                     fprintf@arp:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x1C
  1033  00025A                     	ds	1
  1034  00025B                     fprintf@cc:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x1D
  1038  00025B                     	ds	2
  1039  00025D                     fprintf@i:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043  00025D                     	ds	2
  1044  00025F                     fprintf@c:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x21
  1048  00025F                     	ds	1
  1049                           
  1050                           	psect	cstackBANK1
  1051  0001E2                     __pcstackBANK1:
  1052                           	callstack 0
  1053  0001E2                     	ds	1
  1054  0001E3                     
  1055                           ; 1 bytes @ 0x1
  1056  0001E3                     	ds	1
  1057  0001E4                     disparo_gravacao@fix_gps:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x2
  1061  0001E4                     	ds	2
  1062  0001E6                     
  1063                           ; 1 bytes @ 0x4
  1064  0001E6                     	ds	2
  1065  0001E8                     escalonador@cont:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x6
  1069  0001E8                     	ds	1
  1070                           
  1071                           	psect	cstackBANK0
  1072  000060                     __pcstackBANK0:
  1073                           	callstack 0
  1074  000060                     ??_sdc_disk_read:
  1075  000060                     ??_sdc_disk_write:
  1076  000060                     ??_get_fattime:
  1077  000060                     ??_configura_baudrate_uart:
  1078  000060                     ?___ftmul:
  1079                           	callstack 0
  1080  000060                     atol@sign:
  1081                           	callstack 0
  1082  000060                     clust2sect@fs:
  1083                           	callstack 0
  1084  000060                     ___ftmul@f1:
  1085                           	callstack 0
  1086  000060                     ultoa@v:
  1087                           	callstack 0
  1088  000060                     mensagem_inicial@msg_linha_um:
  1089                           	callstack 0
  1090                           
  1091                           ; 17 bytes @ 0x0
  1092  000060                     	ds	1
  1093  000061                     atol@a:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x1
  1097  000061                     	ds	1
  1098  000062                     sdc_disk_initialize@stat:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x2
  1102  000062                     	ds	1
  1103  000063                     sdc_disk_initialize@count1:
  1104                           	callstack 0
  1105  000063                     ___ftmul@f2:
  1106                           	callstack 0
  1107                           
  1108                           ; 3 bytes @ 0x3
  1109  000063                     	ds	1
  1110  000064                     ultoa@c:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x4
  1114  000064                     	ds	1
  1115  000065                     atol@c:
  1116                           	callstack 0
  1117  000065                     ltoa@buf:
  1118                           	callstack 0
  1119  000065                     sdc_disk_initialize@crc_number:
  1120                           	callstack 0
  1121  000065                     sdc_disk_read@start_add:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x5
  1125  000065                     	ds	1
  1126  000066                     ?_convert_to_int_point_lat:
  1127                           	callstack 0
  1128  000066                     ?_convert_to_int:
  1129                           	callstack 0
  1130  000066                     ?_convert_to_int_point_long:
  1131                           	callstack 0
  1132  000066                     ___ftmul@exp:
  1133                           	callstack 0
  1134  000066                     sdc_disk_write@count1:
  1135                           	callstack 0
  1136  000066                     convert_to_int@p_buff:
  1137                           	callstack 0
  1138  000066                     ltoa@val:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x6
  1142  000066                     	ds	1
  1143  000067                     sdc_disk_initialize@buff_i:
  1144                           	callstack 0
  1145  000067                     ___ftmul@f3_as_product:
  1146                           	callstack 0
  1147                           
  1148                           ; 3 bytes @ 0x7
  1149  000067                     	ds	1
  1150  000068                     sdc_disk_initialize@ocr:
  1151                           	callstack 0
  1152  000068                     sdc_disk_write@res:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x8
  1156  000068                     	ds	1
  1157  000069                     sdc_disk_initialize@count2:
  1158                           	callstack 0
  1159  000069                     sdc_disk_read@length:
  1160                           	callstack 0
  1161  000069                     sdc_disk_write@j:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x9
  1165  000069                     	ds	1
  1166  00006A                     ___ftmul@cntr:
  1167                           	callstack 0
  1168  00006A                     ltoa@base:
  1169                           	callstack 0
  1170  00006A                     convert_to_int_point_lat@convert_str_lat:
  1171                           	callstack 0
  1172  00006A                     convert_to_int_point_long@convert_str_long:
  1173                           	callstack 0
  1174                           
  1175                           ; 10 bytes @ 0xA
  1176  00006A                     	ds	1
  1177  00006B                     sdc_disk_initialize@buff:
  1178                           	callstack 0
  1179  00006B                     sdc_disk_read@buff:
  1180                           	callstack 0
  1181  00006B                     sdc_disk_write@buff:
  1182                           	callstack 0
  1183  00006B                     ___ftmul@sign:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0xB
  1187  00006B                     	ds	1
  1188  00006C                     ?___fttol:
  1189                           	callstack 0
  1190  00006C                     disk_read@buff:
  1191                           	callstack 0
  1192  00006C                     disk_write@buff:
  1193                           	callstack 0
  1194  00006C                     ___fttol@f1:
  1195                           	callstack 0
  1196  00006C                     escreve_inteiro_lcd@valor:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0xC
  1200  00006C                     	ds	2
  1201  00006E                     disk_read@sector:
  1202                           	callstack 0
  1203  00006E                     disk_write@sector:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0xE
  1207  00006E                     	ds	2
  1208  000070                     ??___fttol:
  1209  000070                     escreve_inteiro_lcd@texto:
  1210                           	callstack 0
  1211                           
  1212                           ; 7 bytes @ 0x10
  1213  000070                     	ds	1
  1214  000071                     mensagem_inicial@msg_dois:
  1215                           	callstack 0
  1216                           
  1217                           ; 17 bytes @ 0x11
  1218  000071                     	ds	1
  1219  000072                     disk_read@count:
  1220                           	callstack 0
  1221  000072                     disk_write@count:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x12
  1225  000072                     	ds	1
  1226  000073                     disk_read@pdrv:
  1227                           	callstack 0
  1228  000073                     disk_write@pdrv:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x13
  1232  000073                     	ds	1
  1233  000074                     convert_to_int_point_long@j:
  1234                           	callstack 0
  1235  000074                     disk_read@result:
  1236                           	callstack 0
  1237  000074                     disk_write@result:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x14
  1241  000074                     	ds	1
  1242  000075                     convert_to_int_point_lat@j:
  1243                           	callstack 0
  1244  000075                     convert_to_int_point_long@i:
  1245                           	callstack 0
  1246  000075                     ___fttol@sign1:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x15
  1250  000075                     	ds	1
  1251  000076                     disk_read@res:
  1252                           	callstack 0
  1253  000076                     disk_write@res:
  1254                           	callstack 0
  1255  000076                     convert_to_int_point_lat@i:
  1256                           	callstack 0
  1257  000076                     ___fttol@lval:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x16
  1261  000076                     	ds	1
  1262  000077                     diferenca@index:
  1263                           	callstack 0
  1264  000077                     move_window@sector:
  1265                           	callstack 0
  1266  000077                     check_fs@sect:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x17
  1270  000077                     	ds	1
  1271  000078                     diferenca@valor_lat:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x18
  1275  000078                     	ds	2
  1276  00007A                     ___fttol@exp1:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x1A
  1280  00007A                     	ds	1
  1281  00007B                     ??_move_window:
  1282  00007B                     check_fs@fs:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x1B
  1286  00007B                     	ds	1
  1287  00007C                     diferenca@valor_long:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x1C
  1291  00007C                     	ds	1
  1292  00007D                     auto_mount@path:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x1D
  1296  00007D                     	ds	1
  1297  00007E                     auto_mount@chk_wp:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x1E
  1301  00007E                     	ds	1
  1302  00007F                     ??_auto_mount:
  1303                           
  1304                           ; 1 bytes @ 0x1F
  1305  00007F                     	ds	1
  1306  000080                     armazena_ltlo@buffer:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x20
  1310  000080                     	ds	1
  1311  000081                     armazena_ltlo@index:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x21
  1315  000081                     	ds	1
  1316  000082                     armazena_ltlo@j:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x22
  1320  000082                     	ds	1
  1321  000083                     armazena_ltlo@i:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x23
  1325  000083                     	ds	1
  1326  000084                     latitude_to_convert@latitude:
  1327                           	callstack 0
  1328  000084                     longitude_to_convert@longitude:
  1329                           	callstack 0
  1330                           
  1331                           ; 11 bytes @ 0x24
  1332  000084                     	ds	1
  1333  000085                     move_window@n:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x25
  1337  000085                     	ds	1
  1338  000086                     move_window@wsect:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x26
  1342  000086                     	ds	4
  1343  00008A                     move_window@fs:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x2A
  1347  00008A                     	ds	2
  1348  00008C                     ??_get_cluster:
  1349  00008C                     put_cluster@clust:
  1350                           	callstack 0
  1351  00008C                     f_sync@fp:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x2C
  1355  00008C                     	ds	1
  1356  00008D                     latitude_to_convert@index:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x2D
  1360  00008D                     	ds	1
  1361  00008E                     latitude_to_convert@j:
  1362                           	callstack 0
  1363  00008E                     put_cluster@val:
  1364                           	callstack 0
  1365  00008E                     f_sync@tim:
  1366                           	callstack 0
  1367                           
  1368                           ; 4 bytes @ 0x2E
  1369  00008E                     	ds	1
  1370  00008F                     latitude_to_convert@i:
  1371                           	callstack 0
  1372  00008F                     longitude_to_convert@index:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x2F
  1376  00008F                     	ds	1
  1377  000090                     ??_put_cluster:
  1378  000090                     longitude_to_convert@j:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x30
  1382  000090                     	ds	1
  1383  000091                     longitude_to_convert@i:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x31
  1387  000091                     	ds	1
  1388  000092                     ??_verifica_fence_externo:
  1389  000092                     f_sync@res:
  1390                           	callstack 0
  1391                           
  1392                           ; 1 bytes @ 0x32
  1393  000092                     	ds	1
  1394  000093                     f_sync@dir:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x33
  1398  000093                     	ds	2
  1399  000095                     get_cluster@wc:
  1400                           	callstack 0
  1401  000095                     f_close@fp:
  1402                           	callstack 0
  1403  000095                     auto_mount@maxclust:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x35
  1407  000095                     	ds	1
  1408  000096                     verifica_dados_operacionais@vel:
  1409                           	callstack 0
  1410  000096                     _put_cluster$1558:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x36
  1414  000096                     	ds	1
  1415  000097                     f_close@res:
  1416                           	callstack 0
  1417  000097                     get_cluster@fatsect:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x37
  1421  000097                     	ds	1
  1422  000098                     _put_cluster$1559:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x38
  1426  000098                     	ds	1
  1427  000099                     auto_mount@bootsect:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x39
  1431  000099                     	ds	1
  1432  00009A                     put_cluster@fatsect:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x3A
  1436  00009A                     	ds	1
  1437  00009B                     get_cluster@bc:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x3B
  1441  00009B                     	ds	2
  1442  00009D                     get_cluster@fs:
  1443                           	callstack 0
  1444  00009D                     auto_mount@totalsect:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x3D
  1448  00009D                     	ds	1
  1449  00009E                     put_cluster@bc:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x3E
  1453  00009E                     	ds	1
  1454  00009F                     next_dir_entry@dj:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x3F
  1458  00009F                     	ds	1
  1459  0000A0                     ??_next_dir_entry:
  1460  0000A0                     put_cluster@p:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x40
  1464  0000A0                     	ds	1
  1465  0000A1                     auto_mount@p:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x41
  1469  0000A1                     	ds	1
  1470  0000A2                     put_cluster@fs:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x42
  1474  0000A2                     	ds	1
  1475  0000A3                     auto_mount@fmt:
  1476                           	callstack 0
  1477                           
  1478                           ; 1 bytes @ 0x43
  1479  0000A3                     	ds	1
  1480  0000A4                     ?_create_chain:
  1481                           	callstack 0
  1482  0000A4                     auto_mount@stat:
  1483                           	callstack 0
  1484  0000A4                     remove_chain@clust:
  1485                           	callstack 0
  1486  0000A4                     create_chain@clust:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x44
  1490  0000A4                     	ds	1
  1491  0000A5                     auto_mount@fatsize:
  1492                           	callstack 0
  1493                           
  1494                           ; 4 bytes @ 0x45
  1495  0000A5                     	ds	1
  1496  0000A6                     
  1497                           ; 1 bytes @ 0x46
  1498  0000A6                     	ds	1
  1499  0000A7                     next_dir_entry@clust:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x47
  1503  0000A7                     	ds	1
  1504  0000A8                     remove_chain@nxt:
  1505                           	callstack 0
  1506  0000A8                     create_chain@mcl:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x48
  1510  0000A8                     	ds	1
  1511  0000A9                     next_dir_entry@idx:
  1512                           	callstack 0
  1513  0000A9                     auto_mount@fs:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x49
  1517  0000A9                     	ds	1
  1518  0000AA                     remove_chain@fs:
  1519                           	callstack 0
  1520  0000AA                     create_chain@fs:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x4A
  1524  0000AA                     	ds	1
  1525  0000AB                     trace_path@dj:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x4B
  1529  0000AB                     	ds	1
  1530  0000AC                     trace_path@fn:
  1531                           	callstack 0
  1532  0000AC                     create_chain@cstat:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x4C
  1536  0000AC                     	ds	1
  1537  0000AD                     trace_path@path:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x4D
  1541  0000AD                     	ds	1
  1542  0000AE                     create_chain@scl:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x4E
  1546  0000AE                     	ds	1
  1547  0000AF                     trace_path@dir:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x4F
  1551  0000AF                     	ds	1
  1552  0000B0                     ??_trace_path:
  1553  0000B0                     create_chain@ncl:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x50
  1557  0000B0                     	ds	2
  1558  0000B2                     reserve_direntry@dj:
  1559                           	callstack 0
  1560  0000B2                     f_write@fp:
  1561                           	callstack 0
  1562  0000B2                     f_lseek@fp:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x52
  1566  0000B2                     	ds	1
  1567  0000B3                     reserve_direntry@dir:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x53
  1571  0000B3                     	ds	1
  1572  0000B4                     ??_reserve_direntry:
  1573  0000B4                     f_write@buff:
  1574                           	callstack 0
  1575  0000B4                     _trace_path$1715:
  1576                           	callstack 0
  1577  0000B4                     f_lseek@ofs:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x54
  1581  0000B4                     	ds	1
  1582  0000B5                     f_write@btw:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x55
  1586  0000B5                     	ds	1
  1587  0000B6                     _trace_path$1717:
  1588                           	callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x56
  1591  0000B6                     	ds	1
  1592  0000B7                     f_write@bw:
  1593                           	callstack 0
  1594                           
  1595                           ; 1 bytes @ 0x57
  1596  0000B7                     	ds	1
  1597  0000B8                     ??_f_lseek:
  1598  0000B8                     ??_f_write:
  1599  0000B8                     trace_path@fs:
  1600                           	callstack 0
  1601  0000B8                     reserve_direntry@sector:
  1602                           	callstack 0
  1603                           
  1604                           ; 4 bytes @ 0x58
  1605  0000B8                     	ds	2
  1606  0000BA                     trace_path@clust:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x5A
  1610  0000BA                     	ds	2
  1611  0000BC                     trace_path@ds:
  1612                           	callstack 0
  1613  0000BC                     reserve_direntry@n:
  1614                           	callstack 0
  1615                           
  1616                           ; 1 bytes @ 0x5C
  1617  0000BC                     	ds	1
  1618  0000BD                     trace_path@dptr:
  1619                           	callstack 0
  1620  0000BD                     reserve_direntry@dptr:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x5D
  1624  0000BD                     	ds	2
  1625  0000BF                     reserve_direntry@c:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0x5F
  1629  0000BF                     	ds	1
  1630  0000C0                     reserve_direntry@clust:
  1631                           	callstack 0
  1632                           
  1633                           ; 2 bytes @ 0x60
  1634  0000C0                     	ds	2
  1635  0000C2                     reserve_direntry@fs:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x62
  1639  0000C2                     	ds	2
  1640  0000C4                     f_write@res:
  1641                           	callstack 0
  1642  0000C4                     f_open@fp:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0x64
  1646  0000C4                     	ds	1
  1647  0000C5                     f_write@wbuff:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x65
  1651  0000C5                     	ds	1
  1652  0000C6                     f_open@path:
  1653                           	callstack 0
  1654  0000C6                     f_write@sect:
  1655                           	callstack 0
  1656                           
  1657                           ; 4 bytes @ 0x66
  1658  0000C6                     	ds	2
  1659  0000C8                     f_open@mode:
  1660                           	callstack 0
  1661  0000C8                     f_lseek@res:
  1662                           	callstack 0
  1663                           
  1664                           ; 1 bytes @ 0x68
  1665  0000C8                     	ds	1
  1666  0000C9                     ??_f_open:
  1667  0000C9                     f_lseek@ifptr:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0x69
  1671  0000C9                     	ds	1
  1672  0000CA                     f_write@cc:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x6A
  1676  0000CA                     	ds	2
  1677  0000CC                     f_write@clust:
  1678                           	callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x6C
  1681  0000CC                     	ds	1
  1682  0000CD                     f_lseek@csize:
  1683                           	callstack 0
  1684  0000CD                     f_open@fn:
  1685                           	callstack 0
  1686                           
  1687                           ; 12 bytes @ 0x6D
  1688  0000CD                     	ds	1
  1689  0000CE                     f_write@wcnt:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x6E
  1693  0000CE                     	ds	2
  1694  0000D0                     ?_fputc:
  1695                           	callstack 0
  1696  0000D0                     fputc@chr:
  1697                           	callstack 0
  1698                           
  1699                           ; 2 bytes @ 0x70
  1700  0000D0                     	ds	1
  1701  0000D1                     f_lseek@clust:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x71
  1705  0000D1                     	ds	1
  1706  0000D2                     fputc@fil:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x72
  1710  0000D2                     	ds	2
  1711  0000D4                     fputc@c:
  1712                           	callstack 0
  1713                           
  1714                           ; 1 bytes @ 0x74
  1715  0000D4                     	ds	1
  1716  0000D5                     fputc@bw:
  1717                           	callstack 0
  1718                           
  1719                           ; 2 bytes @ 0x75
  1720  0000D5                     	ds	2
  1721  0000D7                     ?_fputs:
  1722                           	callstack 0
  1723  0000D7                     fputs@str:
  1724                           	callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x77
  1727  0000D7                     	ds	2
  1728  0000D9                     f_open@rs:
  1729                           	callstack 0
  1730  0000D9                     fputs@fil:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x79
  1734  0000D9                     	ds	2
  1735  0000DB                     ??_fputs:
  1736  0000DB                     f_open@dw:
  1737                           	callstack 0
  1738                           
  1739                           ; 4 bytes @ 0x7B
  1740  0000DB                     	ds	1
  1741  0000DC                     fputs@n:
  1742                           	callstack 0
  1743                           
  1744                           ; 2 bytes @ 0x7C
  1745  0000DC                     	ds	2
  1746  0000DE                     ?_fprintf:
  1747                           	callstack 0
  1748  0000DE                     fprintf@fil:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x7E
  1752  0000DE                     	ds	1
  1753  0000DF                     f_open@res:
  1754                           	callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x7F
  1757  0000DF                     	ds	1
  1758  0000E0                     f_open@dir:
  1759                           	callstack 0
  1760  0000E0                     fprintf@str:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x80
  1764  0000E0                     	ds	2
  1765  0000E2                     f_open@dj:
  1766                           	callstack 0
  1767                           
  1768                           ; 14 bytes @ 0x82
  1769  0000E2                     	ds	10
  1770  0000EC                     ??_fprintf:
  1771                           
  1772                           ; 1 bytes @ 0x8C
  1773  0000EC                     	ds	4
  1774                           
  1775                           	psect	cstackCOMRAM
  1776  000001                     __pcstackCOMRAM:
  1777                           	callstack 0
  1778  000001                     ?_strcmp:
  1779                           	callstack 0
  1780  000001                     stringcpy@str1:
  1781                           	callstack 0
  1782  000001                     strcmp@s1:
  1783                           	callstack 0
  1784  000001                     i2write_timer_zero@timer0:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x0
  1788  000001                     	ds	2
  1789  000003                     stringcpy@str2:
  1790                           	callstack 0
  1791  000003                     strcmp@s2:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x2
  1795  000003                     	ds	2
  1796  000005                     ??_strcmp:
  1797  000005                     stringcpy@dir:
  1798                           	callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x4
  1801  000005                     	ds	2
  1802  000007                     stringcpy@size:
  1803                           	callstack 0
  1804  000007                     strcmp@r:
  1805                           	callstack 0
  1806                           
  1807                           ; 1 bytes @ 0x6
  1808  000007                     	ds	1
  1809  000008                     ??_stringcpy:
  1810                           
  1811                           ; 1 bytes @ 0x7
  1812  000008                     	ds	2
  1813  00000A                     stringcpy@chr:
  1814                           	callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x9
  1817  00000A                     	ds	1
  1818  00000B                     GPSRead@buff:
  1819                           	callstack 0
  1820                           
  1821                           ; 1 bytes @ 0xA
  1822  00000B                     	ds	1
  1823  00000C                     GPSRead@c:
  1824                           	callstack 0
  1825                           
  1826                           ; 1 bytes @ 0xB
  1827  00000C                     	ds	1
  1828  00000D                     ??_isr:
  1829                           
  1830                           ; 1 bytes @ 0xC
  1831  00000D                     	ds	12
  1832  000019                     isr@cont:
  1833                           	callstack 0
  1834                           
  1835                           ; 1 bytes @ 0x18
  1836  000019                     	ds	1
  1837  00001A                     ??_dummy_clocks:
  1838  00001A                     ??_isdigit:
  1839  00001A                     ?_fix:
  1840                           	callstack 0
  1841  00001A                     ?_strlen:
  1842                           	callstack 0
  1843  00001A                     ?_memcmp:
  1844                           	callstack 0
  1845  00001A                     ?_GPSSecond:
  1846                           	callstack 0
  1847  00001A                     ?_GPSMinute:
  1848                           	callstack 0
  1849  00001A                     ?_GPSHour:
  1850                           	callstack 0
  1851  00001A                     ?_GPSDay:
  1852                           	callstack 0
  1853  00001A                     ?_GPSMonth:
  1854                           	callstack 0
  1855  00001A                     ?_GPSyear:
  1856                           	callstack 0
  1857  00001A                     ?___wmul:
  1858                           	callstack 0
  1859  00001A                     ?___ftpack:
  1860                           	callstack 0
  1861  00001A                     ?___lmul:
  1862                           	callstack 0
  1863  00001A                     ?___lldiv:
  1864                           	callstack 0
  1865  00001A                     ?___aldiv:
  1866                           	callstack 0
  1867  00001A                     ?___llmod:
  1868                           	callstack 0
  1869  00001A                     disk_ioctl@cmd:
  1870                           	callstack 0
  1871  00001A                     delay@contador_ext:
  1872                           	callstack 0
  1873  00001A                     response@buff:
  1874                           	callstack 0
  1875  00001A                     verifica_plausibilidade_long@posicao:
  1876                           	callstack 0
  1877  00001A                     verifica_plausibilidade_lat@posicao:
  1878                           	callstack 0
  1879  00001A                     write_timer_zero@timer0:
  1880                           	callstack 0
  1881  00001A                     data_nome@p_buff:
  1882                           	callstack 0
  1883  00001A                     hora_nome@p_buff:
  1884                           	callstack 0
  1885  00001A                     f_mount@fs:
  1886                           	callstack 0
  1887  00001A                     ___wmul@multiplier:
  1888                           	callstack 0
  1889  00001A                     memcmp@s1:
  1890                           	callstack 0
  1891  00001A                     memcpy@d1:
  1892                           	callstack 0
  1893  00001A                     memset@p1:
  1894                           	callstack 0
  1895  00001A                     strcat@to:
  1896                           	callstack 0
  1897  00001A                     strlen@s:
  1898                           	callstack 0
  1899  00001A                     ___ftpack@arg:
  1900                           	callstack 0
  1901  00001A                     wait_ready@timeout:
  1902                           	callstack 0
  1903  00001A                     ___lmul@multiplier:
  1904                           	callstack 0
  1905  00001A                     ___lldiv@dividend:
  1906                           	callstack 0
  1907  00001A                     ___aldiv@dividend:
  1908                           	callstack 0
  1909  00001A                     ___llmod@dividend:
  1910                           	callstack 0
  1911                           
  1912                           ; 4 bytes @ 0x19
  1913  00001A                     	ds	1
  1914  00001B                     sdc_disk_status@pdrv:
  1915                           	callstack 0
  1916  00001B                     delay@contador_int:
  1917                           	callstack 0
  1918  00001B                     escreve_SPI@dado:
  1919                           	callstack 0
  1920  00001B                     _isdigit$3175:
  1921                           	callstack 0
  1922  00001B                     disk_ioctl@buff:
  1923                           	callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x1A
  1926  00001B                     	ds	1
  1927  00001C                     ??_GPSSecond:
  1928  00001C                     ??_GPSMinute:
  1929  00001C                     ??_GPSHour:
  1930  00001C                     ??_GPSDay:
  1931  00001C                     ??_GPSMonth:
  1932  00001C                     ??_GPSyear:
  1933  00001C                     escreve_cmd_lcd@comando:
  1934                           	callstack 0
  1935  00001C                     endereco_cursor_lcd@endereco:
  1936                           	callstack 0
  1937  00001C                     escreve_caractere_lcd@data:
  1938                           	callstack 0
  1939  00001C                     dummy_clocks@n:
  1940                           	callstack 0
  1941  00001C                     data_nome@i:
  1942                           	callstack 0
  1943  00001C                     hora_nome@i:
  1944                           	callstack 0
  1945  00001C                     f_mount@drv:
  1946                           	callstack 0
  1947  00001C                     isdigit@c:
  1948                           	callstack 0
  1949  00001C                     ___wmul@multiplicand:
  1950                           	callstack 0
  1951  00001C                     memcmp@s2:
  1952                           	callstack 0
  1953  00001C                     memcpy@s1:
  1954                           	callstack 0
  1955  00001C                     memset@c:
  1956                           	callstack 0
  1957  00001C                     strcat@from:
  1958                           	callstack 0
  1959  00001C                     strlen@cp:
  1960                           	callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x1B
  1963  00001C                     	ds	1
  1964  00001D                     ??_init_lcd:
  1965  00001D                     disk_ioctl@pdrv:
  1966                           	callstack 0
  1967  00001D                     posicao_cursor_lcd@coluna:
  1968                           	callstack 0
  1969  00001D                     ___ftpack@exp:
  1970                           	callstack 0
  1971  00001D                     escreve_frase_ram_lcd@buffer:
  1972                           	callstack 0
  1973  00001D                     dummy_clocks@i:
  1974                           	callstack 0
  1975                           
  1976                           ; 2 bytes @ 0x1C
  1977  00001D                     	ds	1
  1978  00001E                     ?_get_fattime:
  1979                           	callstack 0
  1980  00001E                     disk_status@pdrv:
  1981                           	callstack 0
  1982  00001E                     disk_ioctl@res:
  1983                           	callstack 0
  1984  00001E                     posicao_cursor_lcd@linha:
  1985                           	callstack 0
  1986  00001E                     wait_ready@res:
  1987                           	callstack 0
  1988  00001E                     ___ftpack@sign:
  1989                           	callstack 0
  1990  00001E                     monta_sd@dado:
  1991                           	callstack 0
  1992  00001E                     ___wmul@product:
  1993                           	callstack 0
  1994  00001E                     memcmp@n:
  1995                           	callstack 0
  1996  00001E                     memcpy@n:
  1997                           	callstack 0
  1998  00001E                     memset@n:
  1999                           	callstack 0
  2000  00001E                     strcat@cp:
  2001                           	callstack 0
  2002  00001E                     ___lmul@multiplicand:
  2003                           	callstack 0
  2004  00001E                     ___lldiv@divisor:
  2005                           	callstack 0
  2006  00001E                     ___aldiv@divisor:
  2007                           	callstack 0
  2008  00001E                     ___llmod@divisor:
  2009                           	callstack 0
  2010                           
  2011                           ; 4 bytes @ 0x1D
  2012  00001E                     	ds	1
  2013  00001F                     ??___ftpack:
  2014  00001F                     disk_status@stat:
  2015                           	callstack 0
  2016  00001F                     posicao_cursor_lcd@endereco:
  2017                           	callstack 0
  2018  00001F                     command@arg:
  2019                           	callstack 0
  2020                           
  2021                           ; 4 bytes @ 0x1E
  2022  00001F                     	ds	1
  2023  000020                     ??_memcmp:
  2024  000020                     ??_mensagem_inicial:
  2025  000020                     ?_atoi:
  2026                           	callstack 0
  2027  000020                     monta_sd@index:
  2028                           	callstack 0
  2029  000020                     memcpy@tmp:
  2030                           	callstack 0
  2031  000020                     validate@fs:
  2032                           	callstack 0
  2033  000020                     atoi@s:
  2034                           	callstack 0
  2035  000020                     memset@p:
  2036                           	callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x1F
  2039  000020                     	ds	1
  2040  000021                     monta_sd@size:
  2041                           	callstack 0
  2042  000021                     memcpy@d:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0x20
  2046  000021                     	ds	1
  2047  000022                     ??_atoi:
  2048  000022                     monta_sd@i:
  2049                           	callstack 0
  2050  000022                     make_dirfile@path:
  2051                           	callstack 0
  2052  000022                     ___aldiv@counter:
  2053                           	callstack 0
  2054  000022                     ___llmod@counter:
  2055                           	callstack 0
  2056  000022                     validate@id:
  2057                           	callstack 0
  2058  000022                     ___lmul@product:
  2059                           	callstack 0
  2060  000022                     ___lldiv@quotient:
  2061                           	callstack 0
  2062  000022                     get_fattime@f_time:
  2063                           	callstack 0
  2064                           
  2065                           ; 10 bytes @ 0x21
  2066  000022                     	ds	1
  2067  000023                     command@CRC:
  2068                           	callstack 0
  2069  000023                     make_dirfile@dirname:
  2070                           	callstack 0
  2071  000023                     ___aldiv@sign:
  2072                           	callstack 0
  2073  000023                     memcpy@s:
  2074                           	callstack 0
  2075                           
  2076                           ; 2 bytes @ 0x22
  2077  000023                     	ds	1
  2078  000024                     ??_make_dirfile:
  2079  000024                     ??_validate:
  2080  000024                     command@CMD:
  2081                           	callstack 0
  2082  000024                     atoi@sign:
  2083                           	callstack 0
  2084  000024                     ___aldiv@quotient:
  2085                           	callstack 0
  2086                           
  2087                           ; 4 bytes @ 0x23
  2088  000024                     	ds	1
  2089  000025                     command@argument:
  2090                           	callstack 0
  2091  000025                     atoi@a:
  2092                           	callstack 0
  2093                           
  2094                           ; 2 bytes @ 0x24
  2095  000025                     	ds	1
  2096  000026                     ?_atol:
  2097                           	callstack 0
  2098  000026                     ?_clust2sect:
  2099                           	callstack 0
  2100  000026                     ___lldiv@counter:
  2101                           	callstack 0
  2102  000026                     sdc_disk_read@p_buff:
  2103                           	callstack 0
  2104  000026                     sdc_disk_write@p_buff:
  2105                           	callstack 0
  2106  000026                     clust2sect@clust:
  2107                           	callstack 0
  2108  000026                     _make_dirfile$1668:
  2109                           	callstack 0
  2110  000026                     atol@s:
  2111                           	callstack 0
  2112                           
  2113                           ; 2 bytes @ 0x25
  2114  000026                     	ds	1
  2115  000027                     ?___awtoft:
  2116                           	callstack 0
  2117  000027                     ultoa@buf:
  2118                           	callstack 0
  2119  000027                     ___awtoft@c:
  2120                           	callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x26
  2123  000027                     	ds	1
  2124  000028                     make_dirfile@b:
  2125                           	callstack 0
  2126  000028                     sdc_reset@count_nosd:
  2127                           	callstack 0
  2128  000028                     sdc_disk_read@sector:
  2129                           	callstack 0
  2130  000028                     sdc_disk_write@sector:
  2131                           	callstack 0
  2132  000028                     configura_baudrate_uart@baudrate:
  2133                           	callstack 0
  2134  000028                     ultoa@val:
  2135                           	callstack 0
  2136                           
  2137                           ; 4 bytes @ 0x27
  2138  000028                     	ds	1
  2139  000029                     make_dirfile@t:
  2140                           	callstack 0
  2141                           
  2142                           ; 1 bytes @ 0x28
  2143  000029                     	ds	1
  2144  00002A                     ??_atol:
  2145  00002A                     ??_clust2sect:
  2146  00002A                     make_dirfile@a:
  2147                           	callstack 0
  2148  00002A                     ___awtoft@sign:
  2149                           	callstack 0
  2150  00002A                     sdc_reset@count:
  2151                           	callstack 0
  2152                           
  2153                           ; 2 bytes @ 0x29
  2154  00002A                     	ds	1
  2155  00002B                     ??___ftmul:
  2156  00002B                     make_dirfile@n:
  2157                           	callstack 0
  2158                           
  2159                           ; 1 bytes @ 0x2A
  2160  00002B                     	ds	1
  2161  00002C                     sdc_reset@buff:
  2162                           	callstack 0
  2163  00002C                     sdc_disk_read@count:
  2164                           	callstack 0
  2165  00002C                     sdc_disk_write@count:
  2166                           	callstack 0
  2167  00002C                     make_dirfile@c:
  2168                           	callstack 0
  2169  00002C                     configura_baudrate_uart@x:
  2170                           	callstack 0
  2171  00002C                     ultoa@base:
  2172                           	callstack 0
  2173                           
  2174                           ; 2 bytes @ 0x2B
  2175  00002C                     	ds	1
  2176  00002D                     ??_sdc_disk_initialize:
  2177  00002D                     ??_disk_read:
  2178  00002D                     ??_disk_write:
  2179                           
  2180                           ; 1 bytes @ 0x2C
  2181  00002D                     	ds	1
  2182  00002E                     ?_get_cluster:
  2183                           	callstack 0
  2184  00002E                     disk_initialize@pdrv:
  2185                           	callstack 0
  2186  00002E                     sync@fs:
  2187                           	callstack 0
  2188  00002E                     get_cluster@clust:
  2189                           	callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x2D
  2192  00002E                     	ds	1
  2193  00002F                     ??_troca_de_tela:
  2194  00002F                     disk_initialize@stat:
  2195                           	callstack 0
  2196                           
  2197                           ; 1 bytes @ 0x2E
  2198  00002F                     	ds	1
  2199  000030                     
  2200                           ; 1 bytes @ 0x2F
  2201 ;;
  2202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2203 ;;
  2204 ;; *************** function _main *****************
  2205 ;; Defined at:
  2206 ;;		line 226 in file "main.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels required when called:   19
  2226 ;; This function calls:
  2227 ;;		_escalonador
  2228 ;;		_inicializa_tarefas
  2229 ;;		_inicializa_uart
  2230 ;;		_init_hardware
  2231 ;;		_init_lcd
  2232 ;;		_mensagem_inicial
  2233 ;; This function is called by:
  2234 ;;		Startup code after reset
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text0
  2239  00526C                     __ptext0:
  2240                           	callstack 0
  2241  00526C                     _main:
  2242                           	callstack 12
  2243                           
  2244                           ;main.c: 228: init_hardware();
  2245                           
  2246                           ;incstack = 0
  2247  00526C  EC86  F02A         	call	_init_hardware	;wreg free
  2248                           
  2249                           ;main.c: 229: T0CONbits.TMR0ON = 0;
  2250  005270  9ED5               	bcf	213,7,c	;volatile
  2251                           
  2252                           ;main.c: 230: init_lcd();
  2253  005272  EC3F  F020         	call	_init_lcd	;wreg free
  2254                           
  2255                           ;main.c: 231: mensagem_inicial();
  2256  005276  EC6D  F021         	call	_mensagem_inicial	;wreg free
  2257                           
  2258                           ;main.c: 232: inicializa_tarefas();
  2259  00527A  EC86  F026         	call	_inicializa_tarefas	;wreg free
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 233: inicializa_uart();
  2263  00527E  ECBA  F029         	call	_inicializa_uart	;wreg free
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;main.c: 235: T0CONbits.TMR0ON = 1;
  2267  005282  8ED5               	bsf	213,7,c	;volatile
  2268  005284                     l13183:
  2269                           
  2270                           ;main.c: 237: {;main.c: 239: if ((sinaliza_int_timer == 1) && (3))
  2271  005284  043B               	decf	_sinaliza_int_timer^0,w,c
  2272  005286  A4D8               	btfss	status,2,c
  2273  005288  D7FD               	goto	l13183
  2274                           
  2275                           ;main.c: 240: {;main.c: 241: sinaliza_int_timer = 0;
  2276  00528A  0E00               	movlw	0
  2277  00528C  6E3B               	movwf	_sinaliza_int_timer^0,c
  2278                           
  2279                           ;main.c: 242: escalonador();
  2280  00528E  ECEC  F01F         	call	_escalonador	;wreg free
  2281  005292  D7F8               	goto	l13183
  2282  005294                     __end_of_main:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _mensagem_inicial *****************
  2286 ;; Defined at:
  2287 ;;		line 252 in file "main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2292 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2304 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2306 ;;Total ram usage:       36 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    6
  2309 ;; This function calls:
  2310 ;;		_escreve_cmd_lcd
  2311 ;;		_escreve_frase_ram_lcd
  2312 ;;		_posicao_cursor_lcd
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text1
  2319  0042DA                     __ptext1:
  2320                           	callstack 0
  2321  0042DA                     _mensagem_inicial:
  2322                           	callstack 24
  2323                           
  2324                           ;main.c: 254: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2325                           
  2326                           ;incstack = 0
  2327  0042DA  0E12               	movlw	low mensagem_inicial@F3658
  2328  0042DC  6EF6               	movwf	tblptrl,c
  2329  0042DE                     	if	1	;There is more than 1 active tblptr byte
  2330  0042DE  0E61               	movlw	high mensagem_inicial@F3658
  2331  0042E0  6EF7               	movwf	tblptrh,c
  2332  0042E2                     	endif
  2333  0042E2                     	if	0	;There are less than 3 active tblptr bytes
  2334  0042E2                     	endif
  2335  0042E2  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2336  0042E6  0E10               	movlw	16
  2337  0042E8                     u15940:
  2338  0042E8  0009               	tblrd		*+
  2339  0042EA  CFF5 FFDE          	movff	tablat,postinc2
  2340  0042EE  06E8               	decf	wreg,f,c
  2341  0042F0  E2FB               	bc	u15940
  2342                           
  2343                           ;main.c: 255: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2344  0042F2  0E01               	movlw	low mensagem_inicial@F3660
  2345  0042F4  6EF6               	movwf	tblptrl,c
  2346  0042F6                     	if	1	;There is more than 1 active tblptr byte
  2347  0042F6  0E61               	movlw	high mensagem_inicial@F3660
  2348  0042F8  6EF7               	movwf	tblptrh,c
  2349  0042FA                     	endif
  2350  0042FA                     	if	0	;There are less than 3 active tblptr bytes
  2351  0042FA                     	endif
  2352  0042FA  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2353  0042FE  0E10               	movlw	16
  2354  004300                     u15950:
  2355  004300  0009               	tblrd		*+
  2356  004302  CFF5 FFDE          	movff	tablat,postinc2
  2357  004306  06E8               	decf	wreg,f,c
  2358  004308  E2FB               	bc	u15950
  2359                           
  2360                           ;main.c: 257: posicao_cursor_lcd(1,0);
  2361  00430A  0E00               	movlw	0
  2362  00430C  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2363  00430E  0E01               	movlw	1
  2364  004310  ECFB  F024         	call	_posicao_cursor_lcd
  2365                           
  2366                           ;main.c: 258: escreve_frase_ram_lcd(msg_linha_um);
  2367  004314  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2368  004316  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2369  004318  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2370  00431A  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2371                           
  2372                           ;main.c: 260: posicao_cursor_lcd(2,0);
  2373  00431E  0E00               	movlw	0
  2374  004320  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2375  004322  0E02               	movlw	2
  2376  004324  ECFB  F024         	call	_posicao_cursor_lcd
  2377                           
  2378                           ;main.c: 261: escreve_frase_ram_lcd(msg_dois);
  2379  004328  0E71               	movlw	low mensagem_inicial@msg_dois
  2380  00432A  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2381  00432C  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2382  00432E  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2383                           
  2384                           ;main.c: 262: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2385  004332  0E3D               	movlw	61
  2386  004334  6E21               	movwf	(??_mensagem_inicial+1)^0,c
  2387  004336  0EE1               	movlw	225
  2388  004338  6E20               	movwf	??_mensagem_inicial^0,c
  2389  00433A  0E40               	movlw	64
  2390  00433C                     u16117:
  2391  00433C  2EE8               	decfsz	wreg,f,c
  2392  00433E  D7FE               	bra	u16117
  2393  004340  2E20               	decfsz	??_mensagem_inicial^0,f,c
  2394  004342  D7FC               	bra	u16117
  2395  004344  2E21               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2396  004346  D7FA               	bra	u16117
  2397                           
  2398                           ;main.c: 263: escreve_cmd_lcd(0b00000001);
  2399  004348  0E01               	movlw	1
  2400  00434A  ECB3  F021         	call	_escreve_cmd_lcd
  2401                           
  2402                           ;main.c: 264: posicao_cursor_lcd(1,0);
  2403  00434E  0E00               	movlw	0
  2404  004350  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  2405  004352  0E01               	movlw	1
  2406  004354  ECFB  F024         	call	_posicao_cursor_lcd
  2407                           
  2408                           ;main.c: 265: escreve_frase_ram_lcd("AGUARDE...");
  2409  004358  0EEC               	movlw	low STR_18
  2410  00435A  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2411  00435C  0E61               	movlw	high STR_18
  2412  00435E  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2413  004360  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2414  004364  0012               	return		;funcret
  2415  004366                     __end_of_mensagem_inicial:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _init_lcd *****************
  2419 ;; Defined at:
  2420 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    5
  2441 ;; This function calls:
  2442 ;;		_delay
  2443 ;;		_escreve_cmd_lcd
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text2
  2450  00407E                     __ptext2:
  2451                           	callstack 0
  2452  00407E                     _init_lcd:
  2453                           	callstack 25
  2454                           
  2455                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2456                           
  2457                           ;incstack = 0
  2458  00407E  9495               	bcf	149,2,c	;volatile
  2459                           
  2460                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2461  004080  9295               	bcf	149,1,c	;volatile
  2462                           
  2463                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2464  004082  9095               	bcf	149,0,c	;volatile
  2465                           
  2466                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2467  004084  9895               	bcf	149,4,c	;volatile
  2468                           
  2469                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2470  004086  9A95               	bcf	149,5,c	;volatile
  2471                           
  2472                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2473  004088  9C95               	bcf	149,6,c	;volatile
  2474                           
  2475                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2476  00408A  9E95               	bcf	149,7,c	;volatile
  2477                           
  2478                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2479  00408C  9483               	bcf	131,2,c	;volatile
  2480                           
  2481                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2482  00408E  9283               	bcf	131,1,c	;volatile
  2483                           
  2484                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2485  004090  9083               	bcf	131,0,c	;volatile
  2486                           
  2487                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2488  004092  9E83               	bcf	131,7,c	;volatile
  2489                           
  2490                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2491  004094  9C83               	bcf	131,6,c	;volatile
  2492                           
  2493                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2494  004096  8A83               	bsf	131,5,c	;volatile
  2495                           
  2496                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2497  004098  8883               	bsf	131,4,c	;volatile
  2498                           
  2499                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2500  00409A  0EEA               	movlw	234
  2501  00409C  6E1D               	movwf	??_init_lcd^0,c
  2502  00409E  0EC3               	movlw	195
  2503  0040A0                     u16127:
  2504  0040A0  2EE8               	decfsz	wreg,f,c
  2505  0040A2  D7FE               	bra	u16127
  2506  0040A4  2E1D               	decfsz	??_init_lcd^0,f,c
  2507  0040A6  D7FC               	bra	u16127
  2508  0040A8  F000               	nop	
  2509                           
  2510                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2511  0040AA  8083               	bsf	131,0,c	;volatile
  2512                           
  2513                           ;display_lcd.c: 108: delay();
  2514  0040AC  EC4F  F02A         	call	_delay	;wreg free
  2515                           
  2516                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2517  0040B0  9083               	bcf	131,0,c	;volatile
  2518                           
  2519                           ;display_lcd.c: 110: delay();
  2520  0040B2  EC4F  F02A         	call	_delay	;wreg free
  2521                           
  2522                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2523  0040B6  0E4E               	movlw	78
  2524  0040B8  6E1D               	movwf	??_init_lcd^0,c
  2525  0040BA  0EEB               	movlw	235
  2526  0040BC                     u16137:
  2527  0040BC  2EE8               	decfsz	wreg,f,c
  2528  0040BE  D7FE               	bra	u16137
  2529  0040C0  2E1D               	decfsz	??_init_lcd^0,f,c
  2530  0040C2  D7FC               	bra	u16137
  2531  0040C4  F000               	nop	
  2532                           
  2533                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2534  0040C6  8083               	bsf	131,0,c	;volatile
  2535                           
  2536                           ;display_lcd.c: 119: delay();
  2537  0040C8  EC4F  F02A         	call	_delay	;wreg free
  2538                           
  2539                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2540  0040CC  9083               	bcf	131,0,c	;volatile
  2541                           
  2542                           ;display_lcd.c: 121: delay();
  2543  0040CE  EC4F  F02A         	call	_delay	;wreg free
  2544                           
  2545                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2546  0040D2  0E4E               	movlw	78
  2547  0040D4  6E1D               	movwf	??_init_lcd^0,c
  2548  0040D6  0EEB               	movlw	235
  2549  0040D8                     u16147:
  2550  0040D8  2EE8               	decfsz	wreg,f,c
  2551  0040DA  D7FE               	bra	u16147
  2552  0040DC  2E1D               	decfsz	??_init_lcd^0,f,c
  2553  0040DE  D7FC               	bra	u16147
  2554  0040E0  F000               	nop	
  2555                           
  2556                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2557  0040E2  8083               	bsf	131,0,c	;volatile
  2558                           
  2559                           ;display_lcd.c: 130: delay();
  2560  0040E4  EC4F  F02A         	call	_delay	;wreg free
  2561                           
  2562                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2563  0040E8  9083               	bcf	131,0,c	;volatile
  2564                           
  2565                           ;display_lcd.c: 132: delay();
  2566  0040EA  EC4F  F02A         	call	_delay	;wreg free
  2567                           
  2568                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2569  0040EE  9E83               	bcf	131,7,c	;volatile
  2570                           
  2571                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2572  0040F0  9C83               	bcf	131,6,c	;volatile
  2573                           
  2574                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2575  0040F2  8A83               	bsf	131,5,c	;volatile
  2576                           
  2577                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2578  0040F4  9883               	bcf	131,4,c	;volatile
  2579                           
  2580                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2581  0040F6  8083               	bsf	131,0,c	;volatile
  2582                           
  2583                           ;display_lcd.c: 143: delay();
  2584  0040F8  EC4F  F02A         	call	_delay	;wreg free
  2585                           
  2586                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2587  0040FC  9083               	bcf	131,0,c	;volatile
  2588                           
  2589                           ;display_lcd.c: 145: delay();
  2590  0040FE  EC4F  F02A         	call	_delay	;wreg free
  2591                           
  2592                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2593  004102  0E28               	movlw	40
  2594  004104  ECB3  F021         	call	_escreve_cmd_lcd
  2595                           
  2596                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2597  004108  0E06               	movlw	6
  2598  00410A  ECB3  F021         	call	_escreve_cmd_lcd
  2599                           
  2600                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2601  00410E  0E0E               	movlw	14
  2602  004110  ECB3  F021         	call	_escreve_cmd_lcd
  2603                           
  2604                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2605  004114  0E01               	movlw	1
  2606  004116  ECB3  F021         	call	_escreve_cmd_lcd
  2607  00411A  0012               	return		;funcret
  2608  00411C                     __end_of_init_lcd:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _init_hardware *****************
  2612 ;; Defined at:
  2613 ;;		line 52 in file "bibliotecas/hardware.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    5
  2634 ;; This function calls:
  2635 ;;		_config_timer_dois
  2636 ;;		_config_timer_zero
  2637 ;;		_init_interrupt
  2638 ;;		_init_oscilador
  2639 ;;		_init_ports
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text3
  2646  00550C                     __ptext3:
  2647                           	callstack 0
  2648  00550C                     _init_hardware:
  2649                           	callstack 25
  2650                           
  2651                           ;hardware.c: 55: init_oscilador();
  2652                           
  2653                           ;incstack = 0
  2654  00550C  ECE8  F02A         	call	_init_oscilador	;wreg free
  2655                           
  2656                           ;hardware.c: 58: init_ports();
  2657  005510  EC5E  F02A         	call	_init_ports	;wreg free
  2658                           
  2659                           ;hardware.c: 61: config_timer_zero();
  2660  005514  EC6C  F02A         	call	_config_timer_zero	;wreg free
  2661                           
  2662                           ;hardware.c: 64: config_timer_dois();
  2663  005518  ECB3  F02A         	call	_config_timer_dois	;wreg free
  2664                           
  2665                           ;hardware.c: 67: init_interrupt();
  2666  00551C  EC91  F02A         	call	_init_interrupt	;wreg free
  2667  005520  0012               	return		;funcret
  2668  005522                     __end_of_init_hardware:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _init_ports *****************
  2672 ;; Defined at:
  2673 ;;		line 151 in file "bibliotecas/hardware.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    3
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_init_hardware
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text4
  2702  0054BC                     __ptext4:
  2703                           	callstack 0
  2704  0054BC                     _init_ports:
  2705                           	callstack 26
  2706                           
  2707                           ;hardware.c: 153: ADCON1 = 0X0F;
  2708                           
  2709                           ;incstack = 0
  2710  0054BC  0E0F               	movlw	15
  2711  0054BE  6EC1               	movwf	193,c	;volatile
  2712                           
  2713                           ;hardware.c: 154: TRISB = 0b00000001;
  2714  0054C0  0E01               	movlw	1
  2715  0054C2  6E93               	movwf	147,c	;volatile
  2716                           
  2717                           ;hardware.c: 155: LATB = 0xFF;
  2718  0054C4  688A               	setf	138,c	;volatile
  2719                           
  2720                           ;hardware.c: 156: TRISD = 0x00;
  2721  0054C6  0E00               	movlw	0
  2722  0054C8  6E95               	movwf	149,c	;volatile
  2723                           
  2724                           ;hardware.c: 157: TRISA = 0b00000111;
  2725  0054CA  0E07               	movlw	7
  2726  0054CC  6E92               	movwf	146,c	;volatile
  2727                           
  2728                           ;hardware.c: 158: TRISC = 0x01111111;
  2729  0054CE  0E11               	movlw	17
  2730  0054D0  6E94               	movwf	148,c	;volatile
  2731                           
  2732                           ;hardware.c: 159: TRISE = 0b00000011;
  2733  0054D2  0E03               	movlw	3
  2734  0054D4  6E96               	movwf	150,c	;volatile
  2735  0054D6  0012               	return		;funcret
  2736  0054D8                     __end_of_init_ports:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _init_oscilador *****************
  2740 ;; Defined at:
  2741 ;;		line 169 in file "bibliotecas/hardware.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    3
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_init_hardware
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text5
  2770  0055D0                     __ptext5:
  2771                           	callstack 0
  2772  0055D0                     _init_oscilador:
  2773                           	callstack 26
  2774                           
  2775                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  2776                           
  2777                           ;incstack = 0
  2778  0055D0  88D3               	bsf	211,4,c	;volatile
  2779                           
  2780                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  2781  0055D2  8AD3               	bsf	211,5,c	;volatile
  2782                           
  2783                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  2784  0055D4  8CD3               	bsf	211,6,c	;volatile
  2785  0055D6  0012               	return		;funcret
  2786  0055D8                     __end_of_init_oscilador:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _init_interrupt *****************
  2790 ;; Defined at:
  2791 ;;		line 94 in file "bibliotecas/hardware.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    3
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_init_hardware
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text6
  2820  005522                     __ptext6:
  2821                           	callstack 0
  2822  005522                     _init_interrupt:
  2823                           	callstack 26
  2824                           
  2825                           ;hardware.c: 96: INTCON = 0b10110000;
  2826                           
  2827                           ;incstack = 0
  2828  005522  0EB0               	movlw	176
  2829  005524  6EF2               	movwf	242,c	;volatile
  2830                           
  2831                           ;hardware.c: 97: INTCON2 = 0b00000000;
  2832  005526  0E00               	movlw	0
  2833  005528  6EF1               	movwf	241,c	;volatile
  2834                           
  2835                           ;hardware.c: 98: INTCON3 = 0b00000000;
  2836  00552A  0E00               	movlw	0
  2837  00552C  6EF0               	movwf	240,c	;volatile
  2838                           
  2839                           ;hardware.c: 100: PIE1 = 0b00101000;
  2840  00552E  0E28               	movlw	40
  2841  005530  6E9D               	movwf	157,c	;volatile
  2842  005532  0012               	return		;funcret
  2843  005534                     __end_of_init_interrupt:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _config_timer_zero *****************
  2847 ;; Defined at:
  2848 ;;		line 79 in file "bibliotecas/hardware.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    4
  2869 ;; This function calls:
  2870 ;;		_write_timer_zero
  2871 ;; This function is called by:
  2872 ;;		_init_hardware
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text7
  2877  0054D8                     __ptext7:
  2878                           	callstack 0
  2879  0054D8                     _config_timer_zero:
  2880                           	callstack 25
  2881                           
  2882                           ;hardware.c: 81: T0CON = 0b11000101;
  2883                           
  2884                           ;incstack = 0
  2885  0054D8  0EC5               	movlw	197
  2886  0054DA  6ED5               	movwf	213,c	;volatile
  2887                           
  2888                           ;hardware.c: 82: SPPCON = 0b00000000;
  2889  0054DC  0E00               	movlw	0
  2890  0054DE  6E65               	movwf	101,c	;volatile
  2891                           
  2892                           ;hardware.c: 83: SPPCFG = 0b00000000;
  2893  0054E0  0E00               	movlw	0
  2894  0054E2  6E63               	movwf	99,c	;volatile
  2895                           
  2896                           ;hardware.c: 84: write_timer_zero(0x45);
  2897  0054E4  0E00               	movlw	0
  2898  0054E6  6E1B               	movwf	(write_timer_zero@timer0+1)^0,c
  2899  0054E8  0E45               	movlw	69
  2900  0054EA  6E1A               	movwf	write_timer_zero@timer0^0,c
  2901  0054EC  ECD9  F02A         	call	_write_timer_zero	;wreg free
  2902  0054F0  0012               	return		;funcret
  2903  0054F2                     __end_of_config_timer_zero:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _write_timer_zero *****************
  2907 ;; Defined at:
  2908 ;;		line 134 in file "bibliotecas/hardware.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  timer0          2   25[COMRAM] unsigned int 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		None
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2922 ;;      Params:         2       0       0       0       0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2925 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2926 ;;Total ram usage:        2 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    3
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_config_timer_zero
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text8
  2937  0055B2                     __ptext8:
  2938                           	callstack 0
  2939  0055B2                     _write_timer_zero:
  2940                           	callstack 25
  2941                           
  2942                           ;hardware.c: 142: TMR0 = timer0;
  2943                           
  2944                           ;incstack = 0
  2945  0055B2  C01A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  2946  0055B6  C01B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  2947  0055BA  0012               	return		;funcret
  2948  0055BC                     __end_of_write_timer_zero:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _config_timer_dois *****************
  2952 ;; Defined at:
  2953 ;;		line 198 in file "bibliotecas/hardware.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_init_hardware
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text9
  2982  005566                     __ptext9:
  2983                           	callstack 0
  2984  005566                     _config_timer_dois:
  2985                           	callstack 26
  2986                           
  2987                           ;hardware.c: 200: T2CON = 0b00000100;
  2988                           
  2989                           ;incstack = 0
  2990  005566  0E04               	movlw	4
  2991  005568  6ECA               	movwf	202,c	;volatile
  2992                           
  2993                           ;hardware.c: 201: TMR2 = 0;
  2994  00556A  0E00               	movlw	0
  2995  00556C  6ECC               	movwf	204,c	;volatile
  2996                           
  2997                           ;hardware.c: 202: PR2 = 0x01;
  2998  00556E  0E01               	movlw	1
  2999  005570  6ECB               	movwf	203,c	;volatile
  3000  005572  0012               	return		;funcret
  3001  005574                     __end_of_config_timer_dois:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _inicializa_tarefas *****************
  3005 ;; Defined at:
  3006 ;;		line 172 in file "main.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 3F/1
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    3
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text10
  3035  004D0C                     __ptext10:
  3036                           	callstack 0
  3037  004D0C                     _inicializa_tarefas:
  3038                           	callstack 27
  3039                           
  3040                           ;main.c: 175: p_tarefas[0] = verifica_dados_operacionais;
  3041                           
  3042                           ;incstack = 0
  3043  004D0C  0E5C               	movlw	low _verifica_dados_operacionais
  3044  004D0E  0101               	movlb	1	; () banked
  3045  004D10  6F1D               	movwf	_p_tarefas& (0+255),b
  3046  004D12  0E4D               	movlw	high _verifica_dados_operacionais
  3047  004D14  6F1E               	movwf	(_p_tarefas+1)& (0+255),b
  3048                           
  3049                           ;main.c: 176: p_tarefas[1] = disparo_gravacao;
  3050  004D16  0EEA               	movlw	low _disparo_gravacao
  3051  004D18  6F1F               	movwf	(_p_tarefas+2)& (0+255),b
  3052  004D1A  0E50               	movlw	high _disparo_gravacao
  3053  004D1C  6F20               	movwf	(_p_tarefas+3)& (0+255),b
  3054                           
  3055                           ;main.c: 178: p_tarefas[2] = troca_de_tela;
  3056  004D1E  0E34               	movlw	low _troca_de_tela
  3057  004D20  6F21               	movwf	(_p_tarefas+4)& (0+255),b
  3058  004D22  0E25               	movlw	high _troca_de_tela
  3059  004D24  6F22               	movwf	(_p_tarefas+5)& (0+255),b
  3060                           
  3061                           ; BSR set to: 1
  3062                           ;main.c: 182: tempo_backup[0] = 500;
  3063  004D26  0E01               	movlw	1
  3064  004D28  6F18               	movwf	(_tempo_backup+1)& (0+255),b
  3065  004D2A  0EF4               	movlw	244
  3066  004D2C  6F17               	movwf	_tempo_backup& (0+255),b
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;main.c: 183: tempo_backup[1] = 1000;
  3070  004D2E  0E03               	movlw	3
  3071  004D30  6F1A               	movwf	(_tempo_backup+3)& (0+255),b
  3072  004D32  0EE8               	movlw	232
  3073  004D34  6F19               	movwf	(_tempo_backup+2)& (0+255),b
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;main.c: 184: tempo_backup[2] = 5000;
  3077  004D36  0E13               	movlw	19
  3078  004D38  6F1C               	movwf	(_tempo_backup+5)& (0+255),b
  3079  004D3A  0E88               	movlw	136
  3080  004D3C  6F1B               	movwf	(_tempo_backup+4)& (0+255),b
  3081                           
  3082                           ; BSR set to: 1
  3083                           ;main.c: 188: tempo_tarefa[0] = 500;
  3084  004D3E  0E01               	movlw	1
  3085  004D40  6F12               	movwf	(_tempo_tarefa+1)& (0+255),b
  3086  004D42  0EF4               	movlw	244
  3087  004D44  6F11               	movwf	_tempo_tarefa& (0+255),b
  3088                           
  3089                           ; BSR set to: 1
  3090                           ;main.c: 189: tempo_tarefa[1] = 1000;
  3091  004D46  0E03               	movlw	3
  3092  004D48  6F14               	movwf	(_tempo_tarefa+3)& (0+255),b
  3093  004D4A  0EE8               	movlw	232
  3094  004D4C  6F13               	movwf	(_tempo_tarefa+2)& (0+255),b
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;main.c: 190: tempo_tarefa[2] = 5000;
  3098  004D4E  0E13               	movlw	19
  3099  004D50  6F16               	movwf	(_tempo_tarefa+5)& (0+255),b
  3100  004D52  0E88               	movlw	136
  3101  004D54  6F15               	movwf	(_tempo_tarefa+4)& (0+255),b
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;main.c: 193: tarefa_em_execucao = 0;
  3105  004D56  0E00               	movlw	0
  3106  004D58  6E3A               	movwf	_tarefa_em_execucao^0,c	;volatile
  3107                           
  3108                           ; BSR set to: 1
  3109  004D5A  0012               	return		;funcret
  3110  004D5C                     __end_of_inicializa_tarefas:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _escalonador *****************
  3114 ;; Defined at:
  3115 ;;		line 204 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  cont            1    6[BANK1 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3132 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3133 ;;Total ram usage:        3 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:   18
  3136 ;; This function calls:
  3137 ;;		_dados_gps_to_sd
  3138 ;;		_disparo_gravacao
  3139 ;;		_troca_de_tela
  3140 ;;		_verifica_dados_operacionais
  3141 ;; This function is called by:
  3142 ;;		_main
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text11
  3147  003FD8                     __ptext11:
  3148                           	callstack 0
  3149  003FD8                     _escalonador:
  3150                           	callstack 12
  3151                           
  3152                           ;main.c: 206: unsigned char cont;;main.c: 207: for(cont = 0; cont<3;cont++)
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;incstack = 0
  3156  003FD8  0E00               	movlw	0
  3157  003FDA  0101               	movlb	1	; () banked
  3158  003FDC  6FE8               	movwf	escalonador@cont& (0+255),b
  3159  003FDE                     l13077:
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;main.c: 208: {;main.c: 209: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3163  003FDE  51E8               	movf	escalonador@cont& (0+255),w,b
  3164  003FE0  0D02               	mullw	2
  3165  003FE2  0E1D               	movlw	low _p_tarefas
  3166  003FE4  24F3               	addwf	243,w,c
  3167  003FE6  6ED9               	movwf	fsr2l,c
  3168  003FE8  0E01               	movlw	high _p_tarefas
  3169  003FEA  20F4               	addwfc	prodh,w,c
  3170  003FEC  6EDA               	movwf	fsr2h,c
  3171  003FEE  50DE               	movf	postinc2,w,c
  3172  003FF0  10DE               	iorwf	postinc2,w,c
  3173  003FF2  B4D8               	btfsc	status,2,c
  3174  003FF4  D03D               	goto	l13089
  3175                           
  3176                           ; BSR set to: 1
  3177  003FF6  51E8               	movf	escalonador@cont& (0+255),w,b
  3178  003FF8  0D02               	mullw	2
  3179  003FFA  0E11               	movlw	low _tempo_tarefa
  3180  003FFC  24F3               	addwf	243,w,c
  3181  003FFE  6ED9               	movwf	fsr2l,c
  3182  004000  0E01               	movlw	high _tempo_tarefa
  3183  004002  20F4               	addwfc	prodh,w,c
  3184  004004  6EDA               	movwf	fsr2h,c
  3185  004006  50DE               	movf	postinc2,w,c
  3186  004008  10DE               	iorwf	postinc2,w,c
  3187  00400A  A4D8               	btfss	status,2,c
  3188  00400C  D031               	goto	l13089
  3189                           
  3190                           ; BSR set to: 1
  3191                           ;main.c: 210: {;main.c: 211: tarefa_em_execucao = 1;
  3192  00400E  0E01               	movlw	1
  3193  004010  6E3A               	movwf	_tarefa_em_execucao^0,c	;volatile
  3194                           
  3195                           ;main.c: 212: timeout_tarefa = 65000;
  3196  004012  0EFD               	movlw	253
  3197  004014  6F44               	movwf	(_timeout_tarefa+1)& (0+255),b
  3198  004016  0EE8               	movlw	232
  3199  004018  6F43               	movwf	_timeout_tarefa& (0+255),b
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;main.c: 213: p_tarefas[cont]();
  3203  00401A  51E8               	movf	escalonador@cont& (0+255),w,b
  3204  00401C  0D02               	mullw	2
  3205  00401E  0E1D               	movlw	low _p_tarefas
  3206  004020  24F3               	addwf	243,w,c
  3207  004022  6ED9               	movwf	fsr2l,c
  3208  004024  0E01               	movlw	high _p_tarefas
  3209  004026  20F4               	addwfc	prodh,w,c
  3210  004028  6EDA               	movwf	fsr2h,c
  3211  00402A  D801               	call	u15928
  3212  00402C  D00A               	goto	u15929
  3213  00402E                     u15928:
  3214  00402E  0005               	push	
  3215  004030  6EFA               	movwf	pclath,c
  3216  004032  50DE               	movf	postinc2,w,c
  3217  004034  6EFD               	movwf	tosl,c
  3218  004036  50DE               	movf	postinc2,w,c
  3219  004038  6EFE               	movwf	tosh,c
  3220  00403A  50F8               	movf	tblptru,w,c
  3221  00403C  6EFF               	movwf	tosu,c
  3222  00403E  50FA               	movf	pclath,w,c
  3223  004040  0012               	return		;indir
  3224  004042                     u15929:
  3225                           
  3226                           ;main.c: 214: tarefa_em_execucao = 0;
  3227  004042  0E00               	movlw	0
  3228  004044  6E3A               	movwf	_tarefa_em_execucao^0,c	;volatile
  3229                           
  3230                           ;main.c: 215: tempo_tarefa[cont] = tempo_backup[cont];
  3231  004046  0101               	movlb	1	; () banked
  3232  004048  51E8               	movf	escalonador@cont& (0+255),w,b
  3233  00404A  0D02               	mullw	2
  3234  00404C  0E17               	movlw	low _tempo_backup
  3235  00404E  24F3               	addwf	243,w,c
  3236  004050  6ED9               	movwf	fsr2l,c
  3237  004052  0E01               	movlw	high _tempo_backup
  3238  004054  20F4               	addwfc	prodh,w,c
  3239  004056  6EDA               	movwf	fsr2h,c
  3240  004058  51E8               	movf	escalonador@cont& (0+255),w,b
  3241  00405A  0D02               	mullw	2
  3242  00405C  0E11               	movlw	low _tempo_tarefa
  3243  00405E  24F3               	addwf	243,w,c
  3244  004060  6EE1               	movwf	fsr1l,c
  3245  004062  0E01               	movlw	high _tempo_tarefa
  3246  004064  20F4               	addwfc	prodh,w,c
  3247  004066  6EE2               	movwf	fsr1h,c
  3248  004068  CFDE FFE6          	movff	postinc2,postinc1
  3249  00406C  CFDD FFE5          	movff	postdec2,postdec1
  3250  004070                     l13089:
  3251                           
  3252                           ; BSR set to: 1
  3253  004070  2BE8               	incf	escalonador@cont& (0+255),f,b
  3254                           
  3255                           ; BSR set to: 1
  3256  004072  0E02               	movlw	2
  3257  004074  65E8               	cpfsgt	escalonador@cont& (0+255),b
  3258  004076  D7B3               	goto	l13077
  3259                           
  3260                           ; BSR set to: 1
  3261                           ;main.c: 216: };main.c: 217: };main.c: 218: dados_gps_to_sd();
  3262  004078  EC09  F026         	call	_dados_gps_to_sd	;wreg free
  3263  00407C  0012               	return		;funcret
  3264  00407E                     __end_of_escalonador:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _troca_de_tela *****************
  3268 ;; Defined at:
  3269 ;;		line 387 in file "main.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 3F/1
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3287 ;;Total ram usage:        1 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    7
  3290 ;; This function calls:
  3291 ;;		_escreve_cmd_lcd
  3292 ;;		_escreve_frase_ram_lcd
  3293 ;;		_escreve_inteiro_lcd
  3294 ;;		_fix
  3295 ;;		_posicao_cursor_lcd
  3296 ;; This function is called by:
  3297 ;;		_inicializa_tarefas
  3298 ;;		_escalonador
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text12
  3303  002534                     __ptext12:
  3304                           	callstack 0
  3305  002534                     _troca_de_tela:
  3306                           	callstack 22
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;main.c: 390: static unsigned char state = 0;;main.c: 391: static unsigned char last_sta
      +                          te = 0;;;main.c: 396: if(!PORTEbits.RE0 || (state == 1 ))
  3310                           
  3311                           ;incstack = 0
  3312  002534  A084               	btfss	132,0,c	;volatile
  3313  002536  D003               	goto	u15360
  3314                           
  3315                           ; BSR set to: 1
  3316  002538  0437               	decf	troca_de_tela@state^0,w,c
  3317  00253A  A4D8               	btfss	status,2,c
  3318  00253C  D08F               	goto	l12749
  3319  00253E                     u15360:
  3320                           
  3321                           ; BSR set to: 1
  3322                           ;main.c: 397: {;main.c: 399: if(!time_atualizacao)
  3323  00253E  5030               	movf	_time_atualizacao^0,w,c
  3324  002540  1031               	iorwf	(_time_atualizacao+1)^0,w,c
  3325  002542  A4D8               	btfss	status,2,c
  3326  002544  D011               	goto	l12709
  3327                           
  3328                           ; BSR set to: 1
  3329                           ;main.c: 400: {;main.c: 401: posicao_cursor_lcd(2,8);
  3330  002546  0E08               	movlw	8
  3331  002548  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3332  00254A  0E02               	movlw	2
  3333  00254C  ECFB  F024         	call	_posicao_cursor_lcd
  3334                           
  3335                           ;main.c: 402: escreve_frase_ram_lcd(fix());
  3336  002550  ECDE  F02A         	call	_fix	;wreg free
  3337  002554  C01A  F01D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3338  002558  C01B  F01E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3339  00255C  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3340                           
  3341                           ;main.c: 403: time_atualizacao = 10000;
  3342  002560  0E27               	movlw	39
  3343  002562  6E31               	movwf	(_time_atualizacao+1)^0,c
  3344  002564  0E10               	movlw	16
  3345  002566  6E30               	movwf	_time_atualizacao^0,c
  3346  002568                     l12709:
  3347                           
  3348                           ;main.c: 404: };main.c: 406: if(last_state != 1)
  3349  002568  0436               	decf	troca_de_tela@last_state^0,w,c
  3350  00256A  B4D8               	btfsc	status,2,c
  3351  00256C  D075               	goto	l12747
  3352                           
  3353                           ;main.c: 407: {;main.c: 408: state = 1;
  3354  00256E  0E01               	movlw	1
  3355  002570  6E37               	movwf	troca_de_tela@state^0,c
  3356                           
  3357                           ;main.c: 409: escreve_cmd_lcd(0b00000001);
  3358  002572  0E01               	movlw	1
  3359  002574  ECB3  F021         	call	_escreve_cmd_lcd
  3360                           
  3361                           ;main.c: 410: posicao_cursor_lcd(1,0);
  3362  002578  0E00               	movlw	0
  3363  00257A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3364  00257C  0E01               	movlw	1
  3365  00257E  ECFB  F024         	call	_posicao_cursor_lcd
  3366                           
  3367                           ;main.c: 411: escreve_frase_ram_lcd("FENCE:");
  3368  002582  0E45               	movlw	low STR_21
  3369  002584  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3370  002586  0E62               	movlw	high STR_21
  3371  002588  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3372  00258A  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3373                           
  3374                           ;main.c: 413: if(!fence_flag[2].point)
  3375  00258E  0101               	movlb	1	; () banked
  3376  002590  B135               	btfsc	(_fence_flag+2)& (0+255),0,b
  3377  002592  D00C               	goto	l12725
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;main.c: 414: {;main.c: 415: posicao_cursor_lcd(1,8);
  3381  002594  0E08               	movlw	8
  3382  002596  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3383  002598  0E01               	movlw	1
  3384  00259A  ECFB  F024         	call	_posicao_cursor_lcd
  3385                           
  3386                           ;main.c: 416: escreve_frase_ram_lcd("DENTRO");
  3387  00259E  0E4C               	movlw	low STR_20
  3388  0025A0  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3389  0025A2  0E62               	movlw	high STR_20
  3390  0025A4  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3391  0025A6  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3392                           
  3393                           ;main.c: 417: }
  3394  0025AA  D03E               	goto	l12739
  3395  0025AC                     l12725:
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;main.c: 418: else;main.c: 419: {;main.c: 420: posicao_cursor_lcd(1,8);
  3399  0025AC  0E08               	movlw	8
  3400  0025AE  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3401  0025B0  0E01               	movlw	1
  3402  0025B2  ECFB  F024         	call	_posicao_cursor_lcd
  3403                           
  3404                           ;main.c: 421: escreve_frase_ram_lcd("FORA");
  3405  0025B6  0E64               	movlw	low STR_19
  3406  0025B8  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3407  0025BA  0E62               	movlw	high STR_19
  3408  0025BC  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3409  0025BE  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3410                           
  3411                           ;main.c: 422: posicao_cursor_lcd(1,13);
  3412  0025C2  0E0D               	movlw	13
  3413  0025C4  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3414  0025C6  0E01               	movlw	1
  3415  0025C8  ECFB  F024         	call	_posicao_cursor_lcd
  3416                           
  3417                           ;main.c: 423: escreve_inteiro_lcd(fence_flag[0].point);
  3418  0025CC  0101               	movlb	1	; () banked
  3419  0025CE  A133               	btfss	_fence_flag& (0+255),0,b
  3420  0025D0  D003               	goto	u15400
  3421  0025D2  6A2F               	clrf	??_troca_de_tela^0,c
  3422  0025D4  2A2F               	incf	??_troca_de_tela^0,f,c
  3423  0025D6  D001               	goto	u15408
  3424  0025D8                     u15400:
  3425  0025D8  6A2F               	clrf	??_troca_de_tela^0,c
  3426  0025DA                     u15408:
  3427  0025DA  502F               	movf	??_troca_de_tela^0,w,c
  3428  0025DC  0100               	movlb	0	; () banked
  3429  0025DE  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3430  0025E0  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3431  0025E2  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3432  0025E4  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3433  0025E6  EC17  F028         	call	_escreve_inteiro_lcd	;wreg free
  3434                           
  3435                           ;main.c: 424: posicao_cursor_lcd(1,14);
  3436  0025EA  0E0E               	movlw	14
  3437  0025EC  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3438  0025EE  0E01               	movlw	1
  3439  0025F0  ECFB  F024         	call	_posicao_cursor_lcd
  3440                           
  3441                           ;main.c: 425: escreve_frase_ram_lcd("|");
  3442  0025F4  0E7D               	movlw	low STR_24
  3443  0025F6  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3444  0025F8  0E62               	movlw	high STR_24
  3445  0025FA  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3446  0025FC  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3447                           
  3448                           ;main.c: 426: posicao_cursor_lcd(1,15);
  3449  002600  0E0F               	movlw	15
  3450  002602  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3451  002604  0E01               	movlw	1
  3452  002606  ECFB  F024         	call	_posicao_cursor_lcd
  3453                           
  3454                           ;main.c: 427: escreve_inteiro_lcd(fence_flag[1].point);
  3455  00260A  0101               	movlb	1	; () banked
  3456  00260C  A134               	btfss	(_fence_flag+1)& (0+255),0,b
  3457  00260E  D003               	goto	u15410
  3458  002610  6A2F               	clrf	??_troca_de_tela^0,c
  3459  002612  2A2F               	incf	??_troca_de_tela^0,f,c
  3460  002614  D001               	goto	u15418
  3461  002616                     u15410:
  3462  002616  6A2F               	clrf	??_troca_de_tela^0,c
  3463  002618                     u15418:
  3464  002618  502F               	movf	??_troca_de_tela^0,w,c
  3465  00261A  0100               	movlb	0	; () banked
  3466  00261C  6F6C               	movwf	escreve_inteiro_lcd@valor& (0+255),b
  3467  00261E  6B6D               	clrf	(escreve_inteiro_lcd@valor+1)& (0+255),b
  3468  002620  6B6E               	clrf	(escreve_inteiro_lcd@valor+2)& (0+255),b
  3469  002622  6B6F               	clrf	(escreve_inteiro_lcd@valor+3)& (0+255),b
  3470  002624  EC17  F028         	call	_escreve_inteiro_lcd	;wreg free
  3471  002628                     l12739:
  3472                           
  3473                           ;main.c: 428: };main.c: 430: posicao_cursor_lcd(2,0);
  3474  002628  0E00               	movlw	0
  3475  00262A  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3476  00262C  0E02               	movlw	2
  3477  00262E  ECFB  F024         	call	_posicao_cursor_lcd
  3478                           
  3479                           ;main.c: 431: escreve_frase_ram_lcd("FIX:");
  3480  002632  0E5F               	movlw	low STR_25
  3481  002634  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3482  002636  0E62               	movlw	high STR_25
  3483  002638  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3484  00263A  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3485                           
  3486                           ;main.c: 432: posicao_cursor_lcd(2,8);
  3487  00263E  0E08               	movlw	8
  3488  002640  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3489  002642  0E02               	movlw	2
  3490  002644  ECFB  F024         	call	_posicao_cursor_lcd
  3491                           
  3492                           ;main.c: 433: escreve_frase_ram_lcd(fix());
  3493  002648  ECDE  F02A         	call	_fix	;wreg free
  3494  00264C  C01A  F01D         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3495  002650  C01B  F01E         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3496  002654  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3497  002658                     l12747:
  3498                           
  3499                           ;main.c: 434: };main.c: 435: last_state = 1;
  3500  002658  0E01               	movlw	1
  3501  00265A  6E36               	movwf	troca_de_tela@last_state^0,c
  3502  00265C                     l12749:
  3503                           
  3504                           ;main.c: 437: };main.c: 440: if(!PORTEbits.RE1 || (state == 2))
  3505  00265C  A284               	btfss	132,1,c	;volatile
  3506  00265E  D004               	goto	u15430
  3507  002660  0E02               	movlw	2
  3508  002662  1837               	xorwf	troca_de_tela@state^0,w,c
  3509  002664  A4D8               	btfss	status,2,c
  3510  002666  D055               	goto	l12787
  3511  002668                     u15430:
  3512                           
  3513                           ;main.c: 441: {;main.c: 442: if(!time_atualizacao)
  3514  002668  5030               	movf	_time_atualizacao^0,w,c
  3515  00266A  1031               	iorwf	(_time_atualizacao+1)^0,w,c
  3516  00266C  A4D8               	btfss	status,2,c
  3517  00266E  D01A               	goto	l12763
  3518                           
  3519                           ;main.c: 443: {;main.c: 446: posicao_cursor_lcd(1,4);
  3520  002670  0E04               	movlw	4
  3521  002672  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3522  002674  0E01               	movlw	1
  3523  002676  ECFB  F024         	call	_posicao_cursor_lcd
  3524                           
  3525                           ;main.c: 447: escreve_frase_ram_lcd(point_buff_gps_lat);
  3526  00267A  0E00               	movlw	0
  3527  00267C  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3528  00267E  0E00               	movlw	0
  3529  002680  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3530  002682  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3531                           
  3532                           ;main.c: 448: posicao_cursor_lcd(2,4);
  3533  002686  0E04               	movlw	4
  3534  002688  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3535  00268A  0E02               	movlw	2
  3536  00268C  ECFB  F024         	call	_posicao_cursor_lcd
  3537                           
  3538                           ;main.c: 449: escreve_frase_ram_lcd(point_buff_gps_long);
  3539  002690  0E00               	movlw	0
  3540  002692  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3541  002694  0E00               	movlw	0
  3542  002696  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3543  002698  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3544                           
  3545                           ;main.c: 450: time_atualizacao = 2000;
  3546  00269C  0E07               	movlw	7
  3547  00269E  6E31               	movwf	(_time_atualizacao+1)^0,c
  3548  0026A0  0ED0               	movlw	208
  3549  0026A2  6E30               	movwf	_time_atualizacao^0,c
  3550  0026A4                     l12763:
  3551                           
  3552                           ;main.c: 451: };main.c: 454: if(last_state != 2)
  3553  0026A4  0E02               	movlw	2
  3554  0026A6  1836               	xorwf	troca_de_tela@last_state^0,w,c
  3555  0026A8  B4D8               	btfsc	status,2,c
  3556  0026AA  D031               	goto	l12785
  3557                           
  3558                           ;main.c: 455: {;main.c: 456: state = 2;
  3559  0026AC  0E02               	movlw	2
  3560  0026AE  6E37               	movwf	troca_de_tela@state^0,c
  3561                           
  3562                           ;main.c: 457: escreve_cmd_lcd(0b00000001);
  3563  0026B0  0E01               	movlw	1
  3564  0026B2  ECB3  F021         	call	_escreve_cmd_lcd
  3565                           
  3566                           ;main.c: 460: posicao_cursor_lcd(1,0);
  3567  0026B6  0E00               	movlw	0
  3568  0026B8  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3569  0026BA  0E01               	movlw	1
  3570  0026BC  ECFB  F024         	call	_posicao_cursor_lcd
  3571                           
  3572                           ;main.c: 461: escreve_frase_ram_lcd("lt:");
  3573  0026C0  0E72               	movlw	low STR_26
  3574  0026C2  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3575  0026C4  0E62               	movlw	high STR_26
  3576  0026C6  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3577  0026C8  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3578                           
  3579                           ;main.c: 462: posicao_cursor_lcd(1,4);
  3580  0026CC  0E04               	movlw	4
  3581  0026CE  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3582  0026D0  0E01               	movlw	1
  3583  0026D2  ECFB  F024         	call	_posicao_cursor_lcd
  3584                           
  3585                           ;main.c: 463: escreve_frase_ram_lcd(point_buff_gps_lat);
  3586  0026D6  0E00               	movlw	0
  3587  0026D8  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3588  0026DA  0E00               	movlw	0
  3589  0026DC  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3590  0026DE  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3591                           
  3592                           ;main.c: 464: posicao_cursor_lcd(2,0);
  3593  0026E2  0E00               	movlw	0
  3594  0026E4  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3595  0026E6  0E02               	movlw	2
  3596  0026E8  ECFB  F024         	call	_posicao_cursor_lcd
  3597                           
  3598                           ;main.c: 465: escreve_frase_ram_lcd("lo:");
  3599  0026EC  0E6E               	movlw	low STR_27
  3600  0026EE  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3601  0026F0  0E62               	movlw	high STR_27
  3602  0026F2  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3603  0026F4  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3604                           
  3605                           ;main.c: 466: posicao_cursor_lcd(2,4);
  3606  0026F8  0E04               	movlw	4
  3607  0026FA  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3608  0026FC  0E02               	movlw	2
  3609  0026FE  ECFB  F024         	call	_posicao_cursor_lcd
  3610                           
  3611                           ;main.c: 467: escreve_frase_ram_lcd(point_buff_gps_long);
  3612  002702  0E00               	movlw	0
  3613  002704  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3614  002706  0E00               	movlw	0
  3615  002708  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3616  00270A  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3617  00270E                     l12785:
  3618                           
  3619                           ;main.c: 468: };main.c: 469: last_state = 2;
  3620  00270E  0E02               	movlw	2
  3621  002710  6E36               	movwf	troca_de_tela@last_state^0,c
  3622  002712                     l12787:
  3623                           
  3624                           ;main.c: 470: };main.c: 485: if(!state)
  3625  002712  5037               	movf	troca_de_tela@state^0,w,c
  3626  002714  A4D8               	btfss	status,2,c
  3627  002716  0012               	return	
  3628                           
  3629                           ;main.c: 486: {;main.c: 487: if(last_state != 4)
  3630  002718  0E04               	movlw	4
  3631  00271A  1836               	xorwf	troca_de_tela@last_state^0,w,c
  3632  00271C  B4D8               	btfsc	status,2,c
  3633  00271E  D019               	goto	l12797
  3634                           
  3635                           ;main.c: 488: {;main.c: 489: escreve_cmd_lcd(0b00000001);
  3636  002720  0E01               	movlw	1
  3637  002722  ECB3  F021         	call	_escreve_cmd_lcd
  3638                           
  3639                           ;main.c: 490: posicao_cursor_lcd(1,0);
  3640  002726  0E00               	movlw	0
  3641  002728  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3642  00272A  0E01               	movlw	1
  3643  00272C  ECFB  F024         	call	_posicao_cursor_lcd
  3644                           
  3645                           ;main.c: 491: escreve_frase_ram_lcd("B1:FENCE");
  3646  002730  0E2B               	movlw	low STR_28
  3647  002732  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3648  002734  0E62               	movlw	high STR_28
  3649  002736  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3650  002738  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3651                           
  3652                           ;main.c: 492: posicao_cursor_lcd(2,0);
  3653  00273C  0E00               	movlw	0
  3654  00273E  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  3655  002740  0E02               	movlw	2
  3656  002742  ECFB  F024         	call	_posicao_cursor_lcd
  3657                           
  3658                           ;main.c: 493: escreve_frase_ram_lcd("B2:LTLO");
  3659  002746  0E3D               	movlw	low STR_29
  3660  002748  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3661  00274A  0E62               	movlw	high STR_29
  3662  00274C  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3663  00274E  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3664  002752                     l12797:
  3665                           
  3666                           ;main.c: 495: };main.c: 496: last_state = 4;
  3667  002752  0E04               	movlw	4
  3668  002754  6E36               	movwf	troca_de_tela@last_state^0,c
  3669  002756  0012               	return		;funcret
  3670  002758                     __end_of_troca_de_tela:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _disparo_gravacao *****************
  3674 ;; Defined at:
  3675 ;;		line 355 in file "main.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  fix_gps         2    2[BANK1 ] PTR unsigned char 
  3680 ;;		 -> rawFix(2), 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 3F/1
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3693 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3694 ;;Total ram usage:        3 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:   17
  3697 ;; This function calls:
  3698 ;;		_fix
  3699 ;;		_grava_sd
  3700 ;;		_verifica_fence_externo
  3701 ;; This function is called by:
  3702 ;;		_inicializa_tarefas
  3703 ;;		_escalonador
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text13
  3708  0050EA                     __ptext13:
  3709                           	callstack 0
  3710  0050EA                     _disparo_gravacao:
  3711                           	callstack 12
  3712                           
  3713                           ; BSR set to: 1
  3714                           ;main.c: 357: unsigned char *fix_gps;;main.c: 361: if(!time_sd)
  3715                           
  3716                           ;incstack = 0
  3717  0050EA  5032               	movf	_time_sd^0,w,c
  3718  0050EC  1033               	iorwf	(_time_sd+1)^0,w,c
  3719  0050EE  A4D8               	btfss	status,2,c
  3720  0050F0  0012               	return	
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;main.c: 362: {;main.c: 363: sinaliza_mcp2515.trigger = 0;
  3724  0050F2  903D               	bcf	_sinaliza_mcp2515^0,0,c
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;main.c: 364: fix_gps = fix();
  3728  0050F4  ECDE  F02A         	call	_fix	;wreg free
  3729  0050F8  C01A  F1E4         	movff	?_fix,disparo_gravacao@fix_gps
  3730  0050FC  C01B  F1E5         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  3731                           
  3732                           ;main.c: 365: if(fix_gps[0] == '1')
  3733  005100  C1E4  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  3734  005104  C1E5  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  3735  005108  0E31               	movlw	49
  3736  00510A  18DE               	xorwf	postinc2,w,c
  3737  00510C  A4D8               	btfss	status,2,c
  3738  00510E  D004               	goto	l12693
  3739                           
  3740                           ;main.c: 366: {;main.c: 367: verifica_fence_externo();
  3741  005110  EC2A  F024         	call	_verifica_fence_externo	;wreg free
  3742                           
  3743                           ;main.c: 368: grava_sd();
  3744  005114  EC79  F02A         	call	_grava_sd	;wreg free
  3745  005118                     l12693:
  3746                           
  3747                           ;main.c: 370: };main.c: 371: time_sd = 1000;
  3748  005118  0E03               	movlw	3
  3749  00511A  6E33               	movwf	(_time_sd+1)^0,c
  3750  00511C  0EE8               	movlw	232
  3751  00511E  6E32               	movwf	_time_sd^0,c
  3752                           
  3753                           ;main.c: 372: sinaliza_mcp2515.trigger = 1;
  3754  005120  803D               	bsf	_sinaliza_mcp2515^0,0,c
  3755  005122  0012               	return		;funcret
  3756  005124                     __end_of_disparo_gravacao:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _verifica_dados_operacionais *****************
  3760 ;; Defined at:
  3761 ;;		line 310 in file "main.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  velocidade_a    2    0        unsigned int 
  3766 ;;  vel             1   54[BANK0 ] unsigned char 
  3767 ;;  flag_gps        1    0        unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 3F/1
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3780 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3781 ;;Total ram usage:        4 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:   11
  3784 ;; This function calls:
  3785 ;;		___awtoft
  3786 ;;		___ftmul
  3787 ;;		___fttol
  3788 ;;		_atoi
  3789 ;;		_verifica_fence_externo
  3790 ;; This function is called by:
  3791 ;;		_inicializa_tarefas
  3792 ;;		_escalonador
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text14
  3797  004D5C                     __ptext14:
  3798                           	callstack 0
  3799  004D5C                     _verifica_dados_operacionais:
  3800                           	callstack 18
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;main.c: 313: unsigned char vel = 50;
  3804                           
  3805                           ;incstack = 0
  3806  004D5C  0E32               	movlw	50
  3807  004D5E  0100               	movlb	0	; () banked
  3808  004D60  6F96               	movwf	verifica_dados_operacionais@vel& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811  004D62  0E0E               	movlw	14
  3812  004D64  6F63               	movwf	___ftmul@f2& (0+255),b
  3813  004D66  0EED               	movlw	237
  3814  004D68  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  3815  004D6A  0E3F               	movlw	63
  3816  004D6C  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  3817  004D6E  0E00               	movlw	0
  3818  004D70  6E20               	movwf	atoi@s^0,c
  3819  004D72  0E00               	movlw	0
  3820  004D74  6E21               	movwf	(atoi@s+1)^0,c
  3821  004D76  EC70  F01E         	call	_atoi	;wreg free
  3822  004D7A  C020  F027         	movff	?_atoi,___awtoft@c
  3823  004D7E  C021  F028         	movff	?_atoi+1,___awtoft@c+1
  3824  004D82  EC92  F028         	call	___awtoft	;wreg free
  3825  004D86  C027  F060         	movff	?___awtoft,___ftmul@f1
  3826  004D8A  C028  F061         	movff	?___awtoft+1,___ftmul@f1+1
  3827  004D8E  C029  F062         	movff	?___awtoft+2,___ftmul@f1+2
  3828  004D92  EC13  F01D         	call	___ftmul	;wreg free
  3829  004D96  C060  F06C         	movff	?___ftmul,___fttol@f1
  3830  004D9A  C061  F06D         	movff	?___ftmul+1,___fttol@f1+1
  3831  004D9E  C062  F06E         	movff	?___ftmul+2,___fttol@f1+2
  3832  004DA2  EC05  F01E         	call	___fttol	;wreg free
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 318: verifica_fence_externo();
  3836  004DA6  EC2A  F024         	call	_verifica_fence_externo	;wreg free
  3837  004DAA  0012               	return		;funcret
  3838  004DAC                     __end_of_verifica_dados_operacionais:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _atoi *****************
  3842 ;; Defined at:
  3843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  a               2   36[COMRAM] int 
  3848 ;;  sign            1   35[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2   31[COMRAM] int 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 3F/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:         2       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3861 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:        7 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    4
  3865 ;; This function calls:
  3866 ;;		___wmul
  3867 ;;		_isdigit
  3868 ;; This function is called by:
  3869 ;;		_verifica_dados_operacionais
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text15
  3874  003CE0                     __ptext15:
  3875                           	callstack 0
  3876  003CE0                     _atoi:
  3877                           	callstack 24
  3878                           
  3879                           ; BSR set to: 0
  3880                           
  3881                           ;incstack = 0
  3882  003CE0  D002               	goto	l12509
  3883  003CE2                     l12507:
  3884                           
  3885                           ; BSR set to: 0
  3886  003CE2  4A20               	infsnz	atoi@s^0,f,c
  3887  003CE4  2A21               	incf	(atoi@s+1)^0,f,c
  3888  003CE6                     l12509:
  3889                           
  3890                           ; BSR set to: 0
  3891  003CE6  C020  FFD9         	movff	atoi@s,fsr2l
  3892  003CEA  C021  FFDA         	movff	atoi@s+1,fsr2h
  3893  003CEE  0E20               	movlw	32
  3894  003CF0  18DE               	xorwf	postinc2,w,c
  3895  003CF2  B4D8               	btfsc	status,2,c
  3896  003CF4  D7F6               	goto	l12507
  3897                           
  3898                           ; BSR set to: 0
  3899  003CF6  C020  FFD9         	movff	atoi@s,fsr2l
  3900  003CFA  C021  FFDA         	movff	atoi@s+1,fsr2h
  3901  003CFE  0E09               	movlw	9
  3902  003D00  18DE               	xorwf	postinc2,w,c
  3903  003D02  B4D8               	btfsc	status,2,c
  3904  003D04  D7EE               	goto	l12507
  3905                           
  3906                           ; BSR set to: 0
  3907  003D06  0E00               	movlw	0
  3908  003D08  6E26               	movwf	(atoi@a+1)^0,c
  3909  003D0A  0E00               	movlw	0
  3910  003D0C  6E25               	movwf	atoi@a^0,c
  3911  003D0E  0E00               	movlw	0
  3912  003D10  6E24               	movwf	atoi@sign^0,c
  3913                           
  3914                           ; BSR set to: 0
  3915  003D12  C020  FFD9         	movff	atoi@s,fsr2l
  3916  003D16  C021  FFDA         	movff	atoi@s+1,fsr2h
  3917  003D1A  0E2D               	movlw	45
  3918  003D1C  18DE               	xorwf	postinc2,w,c
  3919  003D1E  A4D8               	btfss	status,2,c
  3920  003D20  D002               	goto	l12519
  3921                           
  3922                           ; BSR set to: 0
  3923  003D22  2A24               	incf	atoi@sign^0,f,c
  3924  003D24  D023               	goto	l12525
  3925  003D26                     l12519:
  3926                           
  3927                           ; BSR set to: 0
  3928  003D26  C020  FFD9         	movff	atoi@s,fsr2l
  3929  003D2A  C021  FFDA         	movff	atoi@s+1,fsr2h
  3930  003D2E  0E2B               	movlw	43
  3931  003D30  18DE               	xorwf	postinc2,w,c
  3932  003D32  A4D8               	btfss	status,2,c
  3933  003D34  D01D               	goto	l12527
  3934  003D36  D01A               	goto	l12525
  3935  003D38                     l12523:
  3936  003D38  C025  F01A         	movff	atoi@a,___wmul@multiplier
  3937  003D3C  C026  F01B         	movff	atoi@a+1,___wmul@multiplier+1
  3938  003D40  0E00               	movlw	0
  3939  003D42  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3940  003D44  0E0A               	movlw	10
  3941  003D46  6E1C               	movwf	___wmul@multiplicand^0,c
  3942  003D48  EC71  F029         	call	___wmul	;wreg free
  3943  003D4C  C020  FFD9         	movff	atoi@s,fsr2l
  3944  003D50  C021  FFDA         	movff	atoi@s+1,fsr2h
  3945  003D54  50DF               	movf	indf2,w,c
  3946  003D56  6E22               	movwf	??_atoi^0,c
  3947  003D58  5022               	movf	??_atoi^0,w,c
  3948  003D5A  261A               	addwf	?___wmul^0,f,c
  3949  003D5C  0E00               	movlw	0
  3950  003D5E  221B               	addwfc	(?___wmul+1)^0,f,c
  3951  003D60  0ED0               	movlw	208
  3952  003D62  241A               	addwf	?___wmul^0,w,c
  3953  003D64  6E25               	movwf	atoi@a^0,c
  3954  003D66  0EFF               	movlw	255
  3955  003D68  201B               	addwfc	(?___wmul+1)^0,w,c
  3956  003D6A  6E26               	movwf	(atoi@a+1)^0,c
  3957  003D6C                     l12525:
  3958  003D6C  4A20               	infsnz	atoi@s^0,f,c
  3959  003D6E  2A21               	incf	(atoi@s+1)^0,f,c
  3960  003D70                     l12527:
  3961  003D70  C020  FFD9         	movff	atoi@s,fsr2l
  3962  003D74  C021  FFDA         	movff	atoi@s+1,fsr2h
  3963  003D78  50DF               	movf	indf2,w,c
  3964  003D7A  EC40  F02A         	call	_isdigit
  3965  003D7E  B0D8               	btfsc	status,0,c
  3966  003D80  D7DB               	goto	l12523
  3967  003D82  5024               	movf	atoi@sign^0,w,c
  3968  003D84  B4D8               	btfsc	status,2,c
  3969  003D86  D00D               	goto	l2279
  3970  003D88  C025  F022         	movff	atoi@a,??_atoi
  3971  003D8C  C026  F023         	movff	atoi@a+1,??_atoi+1
  3972  003D90  1E22               	comf	??_atoi^0,f,c
  3973  003D92  1E23               	comf	(??_atoi+1)^0,f,c
  3974  003D94  4A22               	infsnz	??_atoi^0,f,c
  3975  003D96  2A23               	incf	(??_atoi+1)^0,f,c
  3976  003D98  C022  F020         	movff	??_atoi,?_atoi
  3977  003D9C  C023  F021         	movff	??_atoi+1,?_atoi+1
  3978  003DA0  0012               	return	
  3979  003DA2                     l2279:
  3980  003DA2  C025  F020         	movff	atoi@a,?_atoi
  3981  003DA6  C026  F021         	movff	atoi@a+1,?_atoi+1
  3982  003DAA  0012               	return		;funcret
  3983  003DAC                     __end_of_atoi:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function ___fttol *****************
  3987 ;; Defined at:
  3988 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  f1              3   12[BANK0 ] float 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  lval            4   22[BANK0 ] unsigned long 
  3993 ;;  exp1            1   26[BANK0 ] unsigned char 
  3994 ;;  sign1           1   21[BANK0 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  4   12[BANK0 ] long 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 3F/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         0       4       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4007 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4008 ;;Total ram usage:       15 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    3
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_verifica_dados_operacionais
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text16
  4019  003C0A                     __ptext16:
  4020                           	callstack 0
  4021  003C0A                     ___fttol:
  4022                           	callstack 25
  4023                           
  4024                           ;incstack = 0
  4025  003C0A  C06E  F070         	movff	___fttol@f1+2,??___fttol
  4026  003C0E  0100               	movlb	0	; () banked
  4027  003C10  6B71               	clrf	(??___fttol+1)& (0+255),b
  4028  003C12  6B72               	clrf	(??___fttol+2)& (0+255),b
  4029  003C14  356D               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4030  003C16  3770               	rlcf	??___fttol& (0+255),f,b
  4031  003C18  E301               	bnc	u15211
  4032  003C1A  8171               	bsf	(??___fttol+1)& (0+255),0,b
  4033  003C1C                     u15211:
  4034  003C1C  5170               	movf	??___fttol& (0+255),w,b
  4035  003C1E  6F7A               	movwf	___fttol@exp1& (0+255),b
  4036  003C20  517A               	movf	___fttol@exp1& (0+255),w,b
  4037  003C22  A4D8               	btfss	status,2,c
  4038  003C24  D009               	goto	l12615
  4039  003C26                     u15220:
  4040                           
  4041                           ; BSR set to: 0
  4042  003C26  0E00               	movlw	0
  4043  003C28  6F6C               	movwf	?___fttol& (0+255),b
  4044  003C2A  0E00               	movlw	0
  4045  003C2C  6F6D               	movwf	(?___fttol+1)& (0+255),b
  4046  003C2E  0E00               	movlw	0
  4047  003C30  6F6E               	movwf	(?___fttol+2)& (0+255),b
  4048  003C32  0E00               	movlw	0
  4049  003C34  6F6F               	movwf	(?___fttol+3)& (0+255),b
  4050  003C36  0012               	return	
  4051  003C38                     l12615:
  4052                           
  4053                           ; BSR set to: 0
  4054  003C38  0E17               	movlw	23
  4055  003C3A  6F70               	movwf	??___fttol& (0+255),b
  4056  003C3C  C06C  F071         	movff	___fttol@f1,??___fttol+1
  4057  003C40  C06D  F072         	movff	___fttol@f1+1,??___fttol+2
  4058  003C44  C06E  F073         	movff	___fttol@f1+2,??___fttol+3
  4059  003C48  2970               	incf	??___fttol& (0+255),w,b
  4060  003C4A  6F74               	movwf	(??___fttol+4)& (0+255),b
  4061  003C4C  D004               	goto	u15230
  4062  003C4E                     u15235:
  4063  003C4E  90D8               	bcf	status,0,c
  4064  003C50  3373               	rrcf	(??___fttol+3)& (0+255),f,b
  4065  003C52  3372               	rrcf	(??___fttol+2)& (0+255),f,b
  4066  003C54  3371               	rrcf	(??___fttol+1)& (0+255),f,b
  4067  003C56                     u15230:
  4068  003C56  2F74               	decfsz	(??___fttol+4)& (0+255),f,b
  4069  003C58  D7FA               	goto	u15235
  4070  003C5A  0100               	movlb	0	; () banked
  4071  003C5C  5171               	movf	(??___fttol+1)& (0+255),w,b
  4072  003C5E  6F75               	movwf	___fttol@sign1& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075  003C60  8F6D               	bsf	(___fttol@f1+1)& (0+255),7,b
  4076                           
  4077                           ; BSR set to: 0
  4078  003C62  0EFF               	movlw	255
  4079  003C64  176C               	andwf	___fttol@f1& (0+255),f,b
  4080  003C66  0EFF               	movlw	255
  4081  003C68  176D               	andwf	(___fttol@f1+1)& (0+255),f,b
  4082  003C6A  0E00               	movlw	0
  4083  003C6C  176E               	andwf	(___fttol@f1+2)& (0+255),f,b
  4084                           
  4085                           ; BSR set to: 0
  4086  003C6E  516C               	movf	___fttol@f1& (0+255),w,b
  4087  003C70  6F76               	movwf	___fttol@lval& (0+255),b
  4088  003C72  516D               	movf	(___fttol@f1+1)& (0+255),w,b
  4089  003C74  6F77               	movwf	(___fttol@lval+1)& (0+255),b
  4090  003C76  516E               	movf	(___fttol@f1+2)& (0+255),w,b
  4091  003C78  6F78               	movwf	(___fttol@lval+2)& (0+255),b
  4092  003C7A  6B79               	clrf	(___fttol@lval+3)& (0+255),b
  4093                           
  4094                           ; BSR set to: 0
  4095  003C7C  0E8E               	movlw	142
  4096  003C7E  5F7A               	subwf	___fttol@exp1& (0+255),f,b
  4097                           
  4098                           ; BSR set to: 0
  4099  003C80  AF7A               	btfss	___fttol@exp1& (0+255),7,b
  4100  003C82  D00D               	goto	l12637
  4101                           
  4102                           ; BSR set to: 0
  4103  003C84  517A               	movf	___fttol@exp1& (0+255),w,b
  4104  003C86  0A80               	xorlw	128
  4105  003C88  0F8F               	addlw	143
  4106  003C8A  A0D8               	btfss	status,0,c
  4107  003C8C  D7CC               	goto	u15220
  4108  003C8E                     l12633:
  4109                           
  4110                           ; BSR set to: 0
  4111  003C8E  90D8               	bcf	status,0,c
  4112  003C90  3379               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4113  003C92  3378               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4114  003C94  3377               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4115  003C96  3376               	rrcf	___fttol@lval& (0+255),f,b
  4116                           
  4117                           ; BSR set to: 0
  4118  003C98  3F7A               	incfsz	___fttol@exp1& (0+255),f,b
  4119  003C9A  D7F9               	goto	l12633
  4120  003C9C  D00D               	goto	u15270
  4121  003C9E                     l12637:
  4122                           
  4123                           ; BSR set to: 0
  4124  003C9E  0E17               	movlw	23
  4125  003CA0  657A               	cpfsgt	___fttol@exp1& (0+255),b
  4126  003CA2  D007               	goto	l12645
  4127  003CA4  D7C0               	goto	u15220
  4128  003CA6                     l12643:
  4129                           
  4130                           ; BSR set to: 0
  4131  003CA6  90D8               	bcf	status,0,c
  4132  003CA8  3776               	rlcf	___fttol@lval& (0+255),f,b
  4133  003CAA  3777               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4134  003CAC  3778               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4135  003CAE  3779               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4136  003CB0  077A               	decf	___fttol@exp1& (0+255),f,b
  4137  003CB2                     l12645:
  4138                           
  4139                           ; BSR set to: 0
  4140  003CB2  517A               	movf	___fttol@exp1& (0+255),w,b
  4141  003CB4  A4D8               	btfss	status,2,c
  4142  003CB6  D7F7               	goto	l12643
  4143  003CB8                     u15270:
  4144                           
  4145                           ; BSR set to: 0
  4146  003CB8  5175               	movf	___fttol@sign1& (0+255),w,b
  4147  003CBA  B4D8               	btfsc	status,2,c
  4148  003CBC  D008               	goto	l12651
  4149                           
  4150                           ; BSR set to: 0
  4151  003CBE  1F79               	comf	(___fttol@lval+3)& (0+255),f,b
  4152  003CC0  1F78               	comf	(___fttol@lval+2)& (0+255),f,b
  4153  003CC2  1F77               	comf	(___fttol@lval+1)& (0+255),f,b
  4154  003CC4  6D76               	negf	___fttol@lval& (0+255),b
  4155  003CC6  0E00               	movlw	0
  4156  003CC8  2377               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4157  003CCA  2378               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4158  003CCC  2379               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4159  003CCE                     l12651:
  4160                           
  4161                           ; BSR set to: 0
  4162  003CCE  C076  F06C         	movff	___fttol@lval,?___fttol
  4163  003CD2  C077  F06D         	movff	___fttol@lval+1,?___fttol+1
  4164  003CD6  C078  F06E         	movff	___fttol@lval+2,?___fttol+2
  4165  003CDA  C079  F06F         	movff	___fttol@lval+3,?___fttol+3
  4166                           
  4167                           ; BSR set to: 0
  4168  003CDE  0012               	return		;funcret
  4169  003CE0                     __end_of___fttol:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function ___ftmul *****************
  4173 ;; Defined at:
  4174 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  f1              3    0[BANK0 ] float 
  4177 ;;  f2              3    3[BANK0 ] float 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  4180 ;;  sign            1   11[BANK0 ] unsigned char 
  4181 ;;  cntr            1   10[BANK0 ] unsigned char 
  4182 ;;  exp             1    6[BANK0 ] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  3    0[BANK0 ] float 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4192 ;;      Params:         0       6       0       0       0       0       0       0       0
  4193 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4194 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4195 ;;      Totals:         3      12       0       0       0       0       0       0       0
  4196 ;;Total ram usage:       15 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    4
  4199 ;; This function calls:
  4200 ;;		___ftpack
  4201 ;; This function is called by:
  4202 ;;		_verifica_dados_operacionais
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text17
  4207  003A26                     __ptext17:
  4208                           	callstack 0
  4209  003A26                     ___ftmul:
  4210                           	callstack 24
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;incstack = 0
  4214  003A26  C062  F02B         	movff	___ftmul@f1+2,??___ftmul
  4215  003A2A  6A2C               	clrf	(??___ftmul+1)^0,c
  4216  003A2C  6A2D               	clrf	(??___ftmul+2)^0,c
  4217  003A2E  0100               	movlb	0	; () banked
  4218  003A30  3561               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4219  003A32  362B               	rlcf	??___ftmul^0,f,c
  4220  003A34  E301               	bnc	u15141
  4221  003A36  802C               	bsf	(??___ftmul+1)^0,0,c
  4222  003A38                     u15141:
  4223  003A38  502B               	movf	??___ftmul^0,w,c
  4224  003A3A  6F66               	movwf	___ftmul@exp& (0+255),b
  4225  003A3C  5166               	movf	___ftmul@exp& (0+255),w,b
  4226  003A3E  A4D8               	btfss	status,2,c
  4227  003A40  D007               	goto	l12555
  4228                           
  4229                           ; BSR set to: 0
  4230  003A42  0E00               	movlw	0
  4231  003A44  6F60               	movwf	?___ftmul& (0+255),b
  4232  003A46  0E00               	movlw	0
  4233  003A48  6F61               	movwf	(?___ftmul+1)& (0+255),b
  4234  003A4A  0E00               	movlw	0
  4235  003A4C  6F62               	movwf	(?___ftmul+2)& (0+255),b
  4236  003A4E  0012               	return	
  4237  003A50                     l12555:
  4238                           
  4239                           ; BSR set to: 0
  4240  003A50  C065  F02B         	movff	___ftmul@f2+2,??___ftmul
  4241  003A54  6A2C               	clrf	(??___ftmul+1)^0,c
  4242  003A56  6A2D               	clrf	(??___ftmul+2)^0,c
  4243  003A58  3564               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4244  003A5A  362B               	rlcf	??___ftmul^0,f,c
  4245  003A5C  E301               	bnc	u15161
  4246  003A5E  802C               	bsf	(??___ftmul+1)^0,0,c
  4247  003A60                     u15161:
  4248  003A60  502B               	movf	??___ftmul^0,w,c
  4249  003A62  6F6B               	movwf	___ftmul@sign& (0+255),b
  4250  003A64  516B               	movf	___ftmul@sign& (0+255),w,b
  4251  003A66  A4D8               	btfss	status,2,c
  4252  003A68  D007               	goto	l12561
  4253                           
  4254                           ; BSR set to: 0
  4255  003A6A  0E00               	movlw	0
  4256  003A6C  6F60               	movwf	?___ftmul& (0+255),b
  4257  003A6E  0E00               	movlw	0
  4258  003A70  6F61               	movwf	(?___ftmul+1)& (0+255),b
  4259  003A72  0E00               	movlw	0
  4260  003A74  6F62               	movwf	(?___ftmul+2)& (0+255),b
  4261  003A76  0012               	return	
  4262  003A78                     l12561:
  4263                           
  4264                           ; BSR set to: 0
  4265  003A78  516B               	movf	___ftmul@sign& (0+255),w,b
  4266  003A7A  0F7B               	addlw	123
  4267  003A7C  2766               	addwf	___ftmul@exp& (0+255),f,b
  4268                           
  4269                           ; BSR set to: 0
  4270  003A7E  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  4271  003A82  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  4272  003A84  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  4273  003A86  0E80               	movlw	128
  4274  003A88  176B               	andwf	___ftmul@sign& (0+255),f,b
  4275                           
  4276                           ; BSR set to: 0
  4277  003A8A  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4278                           
  4279                           ; BSR set to: 0
  4280  003A8C  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4281                           
  4282                           ; BSR set to: 0
  4283  003A8E  0EFF               	movlw	255
  4284  003A90  1763               	andwf	___ftmul@f2& (0+255),f,b
  4285  003A92  0EFF               	movlw	255
  4286  003A94  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4287  003A96  0E00               	movlw	0
  4288  003A98  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 0
  4291  003A9A  0E00               	movlw	0
  4292  003A9C  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  4293  003A9E  0E00               	movlw	0
  4294  003AA0  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4295  003AA2  0E00               	movlw	0
  4296  003AA4  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4297                           
  4298                           ; BSR set to: 0
  4299  003AA6  0E07               	movlw	7
  4300  003AA8  6F6A               	movwf	___ftmul@cntr& (0+255),b
  4301  003AAA                     l12575:
  4302                           
  4303                           ; BSR set to: 0
  4304  003AAA  A160               	btfss	___ftmul@f1& (0+255),0,b
  4305  003AAC  D006               	goto	l12579
  4306                           
  4307                           ; BSR set to: 0
  4308  003AAE  5163               	movf	___ftmul@f2& (0+255),w,b
  4309  003AB0  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4310  003AB2  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  4311  003AB4  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4312  003AB6  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  4313  003AB8  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4314  003ABA                     l12579:
  4315                           
  4316                           ; BSR set to: 0
  4317  003ABA  90D8               	bcf	status,0,c
  4318  003ABC  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4319  003ABE  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4320  003AC0  3360               	rrcf	___ftmul@f1& (0+255),f,b
  4321  003AC2  90D8               	bcf	status,0,c
  4322  003AC4  3763               	rlcf	___ftmul@f2& (0+255),f,b
  4323  003AC6  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4324  003AC8  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4325                           
  4326                           ; BSR set to: 0
  4327  003ACA  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  4328  003ACC  D7EE               	goto	l12575
  4329                           
  4330                           ; BSR set to: 0
  4331  003ACE  0E09               	movlw	9
  4332  003AD0  6F6A               	movwf	___ftmul@cntr& (0+255),b
  4333  003AD2                     l12585:
  4334                           
  4335                           ; BSR set to: 0
  4336  003AD2  A160               	btfss	___ftmul@f1& (0+255),0,b
  4337  003AD4  D006               	goto	l12589
  4338                           
  4339                           ; BSR set to: 0
  4340  003AD6  5163               	movf	___ftmul@f2& (0+255),w,b
  4341  003AD8  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4342  003ADA  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  4343  003ADC  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4344  003ADE  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  4345  003AE0  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4346  003AE2                     l12589:
  4347                           
  4348                           ; BSR set to: 0
  4349  003AE2  90D8               	bcf	status,0,c
  4350  003AE4  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4351  003AE6  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4352  003AE8  3360               	rrcf	___ftmul@f1& (0+255),f,b
  4353  003AEA  90D8               	bcf	status,0,c
  4354  003AEC  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4355  003AEE  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4356  003AF0  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4357                           
  4358                           ; BSR set to: 0
  4359  003AF2  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  4360  003AF4  D7EE               	goto	l12585
  4361                           
  4362                           ; BSR set to: 0
  4363  003AF6  C067  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
  4364  003AFA  C068  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4365  003AFE  C069  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4366  003B02  C066  F01D         	movff	___ftmul@exp,___ftpack@exp
  4367  003B06  C06B  F01E         	movff	___ftmul@sign,___ftpack@sign
  4368  003B0A  EC95  F01F         	call	___ftpack	;wreg free
  4369  003B0E  C01A  F060         	movff	?___ftpack,?___ftmul
  4370  003B12  C01B  F061         	movff	?___ftpack+1,?___ftmul+1
  4371  003B16  C01C  F062         	movff	?___ftpack+2,?___ftmul+2
  4372  003B1A  0012               	return		;funcret
  4373  003B1C                     __end_of___ftmul:
  4374                           	callstack 0
  4375                           
  4376 ;; *************** function ___awtoft *****************
  4377 ;; Defined at:
  4378 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  c               2   38[COMRAM] int 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  sign            1   41[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  3   38[COMRAM] float 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4392 ;;      Params:         3       0       0       0       0       0       0       0       0
  4393 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4395 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4396 ;;Total ram usage:        4 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    4
  4399 ;; This function calls:
  4400 ;;		___ftpack
  4401 ;; This function is called by:
  4402 ;;		_verifica_dados_operacionais
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text18
  4407  005124                     __ptext18:
  4408                           	callstack 0
  4409  005124                     ___awtoft:
  4410                           	callstack 24
  4411                           
  4412                           ;incstack = 0
  4413  005124  0E00               	movlw	0
  4414  005126  6E2A               	movwf	___awtoft@sign^0,c
  4415  005128  AE28               	btfss	(___awtoft@c+1)^0,7,c
  4416  00512A  D006               	goto	l12605
  4417  00512C  6C27               	negf	___awtoft@c^0,c
  4418  00512E  1E28               	comf	(___awtoft@c+1)^0,f,c
  4419  005130  B0D8               	btfsc	status,0,c
  4420  005132  2A28               	incf	(___awtoft@c+1)^0,f,c
  4421  005134  0E01               	movlw	1
  4422  005136  6E2A               	movwf	___awtoft@sign^0,c
  4423  005138                     l12605:
  4424  005138  C027  F01A         	movff	___awtoft@c,___ftpack@arg
  4425  00513C  C028  F01B         	movff	___awtoft@c+1,___ftpack@arg+1
  4426  005140  6A1C               	clrf	(___ftpack@arg+2)^0,c
  4427  005142  0E8E               	movlw	142
  4428  005144  6E1D               	movwf	___ftpack@exp^0,c
  4429  005146  C02A  F01E         	movff	___awtoft@sign,___ftpack@sign
  4430  00514A  EC95  F01F         	call	___ftpack	;wreg free
  4431  00514E  C01A  F027         	movff	?___ftpack,?___awtoft
  4432  005152  C01B  F028         	movff	?___ftpack+1,?___awtoft+1
  4433  005156  C01C  F029         	movff	?___ftpack+2,?___awtoft+2
  4434  00515A  0012               	return		;funcret
  4435  00515C                     __end_of___awtoft:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function ___ftpack *****************
  4439 ;; Defined at:
  4440 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  arg             3   25[COMRAM] unsigned um
  4443 ;;  exp             1   28[COMRAM] unsigned char 
  4444 ;;  sign            1   29[COMRAM] unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  3   25[COMRAM] float 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4456 ;;      Params:         5       0       0       0       0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4458 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4459 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4460 ;;Total ram usage:        8 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    3
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		___awtoft
  4467 ;;		___ftmul
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text19
  4472  003F2A                     __ptext19:
  4473                           	callstack 0
  4474  003F2A                     ___ftpack:
  4475                           	callstack 24
  4476                           
  4477                           ;incstack = 0
  4478  003F2A  501D               	movf	___ftpack@exp^0,w,c
  4479  003F2C  B4D8               	btfsc	status,2,c
  4480  003F2E  D005               	goto	u14870
  4481  003F30  501A               	movf	___ftpack@arg^0,w,c
  4482  003F32  101B               	iorwf	(___ftpack@arg+1)^0,w,c
  4483  003F34  101C               	iorwf	(___ftpack@arg+2)^0,w,c
  4484  003F36  A4D8               	btfss	status,2,c
  4485  003F38  D00C               	goto	l12413
  4486  003F3A                     u14870:
  4487  003F3A  0E00               	movlw	0
  4488  003F3C  6E1A               	movwf	?___ftpack^0,c
  4489  003F3E  0E00               	movlw	0
  4490  003F40  6E1B               	movwf	(?___ftpack+1)^0,c
  4491  003F42  0E00               	movlw	0
  4492  003F44  6E1C               	movwf	(?___ftpack+2)^0,c
  4493  003F46  0012               	return	
  4494  003F48                     l12411:
  4495  003F48  2A1D               	incf	___ftpack@exp^0,f,c
  4496  003F4A  90D8               	bcf	status,0,c
  4497  003F4C  321C               	rrcf	(___ftpack@arg+2)^0,f,c
  4498  003F4E  321B               	rrcf	(___ftpack@arg+1)^0,f,c
  4499  003F50  321A               	rrcf	___ftpack@arg^0,f,c
  4500  003F52                     l12413:
  4501  003F52  0E00               	movlw	0
  4502  003F54  141A               	andwf	___ftpack@arg^0,w,c
  4503  003F56  6E1F               	movwf	??___ftpack^0,c
  4504  003F58  0E00               	movlw	0
  4505  003F5A  141B               	andwf	(___ftpack@arg+1)^0,w,c
  4506  003F5C  6E20               	movwf	(??___ftpack+1)^0,c
  4507  003F5E  0EFE               	movlw	254
  4508  003F60  141C               	andwf	(___ftpack@arg+2)^0,w,c
  4509  003F62  6E21               	movwf	(??___ftpack+2)^0,c
  4510  003F64  501F               	movf	??___ftpack^0,w,c
  4511  003F66  1020               	iorwf	(??___ftpack+1)^0,w,c
  4512  003F68  1021               	iorwf	(??___ftpack+2)^0,w,c
  4513  003F6A  B4D8               	btfsc	status,2,c
  4514  003F6C  D00C               	goto	l12419
  4515  003F6E  D7EC               	goto	l12411
  4516  003F70                     l12415:
  4517  003F70  2A1D               	incf	___ftpack@exp^0,f,c
  4518  003F72  0E01               	movlw	1
  4519  003F74  261A               	addwf	___ftpack@arg^0,f,c
  4520  003F76  0E00               	movlw	0
  4521  003F78  221B               	addwfc	(___ftpack@arg+1)^0,f,c
  4522  003F7A  0E00               	movlw	0
  4523  003F7C  221C               	addwfc	(___ftpack@arg+2)^0,f,c
  4524  003F7E  90D8               	bcf	status,0,c
  4525  003F80  321C               	rrcf	(___ftpack@arg+2)^0,f,c
  4526  003F82  321B               	rrcf	(___ftpack@arg+1)^0,f,c
  4527  003F84  321A               	rrcf	___ftpack@arg^0,f,c
  4528  003F86                     l12419:
  4529  003F86  0E00               	movlw	0
  4530  003F88  141A               	andwf	___ftpack@arg^0,w,c
  4531  003F8A  6E1F               	movwf	??___ftpack^0,c
  4532  003F8C  0E00               	movlw	0
  4533  003F8E  141B               	andwf	(___ftpack@arg+1)^0,w,c
  4534  003F90  6E20               	movwf	(??___ftpack+1)^0,c
  4535  003F92  0EFF               	movlw	255
  4536  003F94  141C               	andwf	(___ftpack@arg+2)^0,w,c
  4537  003F96  6E21               	movwf	(??___ftpack+2)^0,c
  4538  003F98  501F               	movf	??___ftpack^0,w,c
  4539  003F9A  1020               	iorwf	(??___ftpack+1)^0,w,c
  4540  003F9C  1021               	iorwf	(??___ftpack+2)^0,w,c
  4541  003F9E  B4D8               	btfsc	status,2,c
  4542  003FA0  D006               	goto	l12423
  4543  003FA2  D7E6               	goto	l12415
  4544  003FA4                     l12421:
  4545  003FA4  061D               	decf	___ftpack@exp^0,f,c
  4546  003FA6  90D8               	bcf	status,0,c
  4547  003FA8  361A               	rlcf	___ftpack@arg^0,f,c
  4548  003FAA  361B               	rlcf	(___ftpack@arg+1)^0,f,c
  4549  003FAC  361C               	rlcf	(___ftpack@arg+2)^0,f,c
  4550  003FAE                     l12423:
  4551  003FAE  BE1B               	btfsc	(___ftpack@arg+1)^0,7,c
  4552  003FB0  D003               	goto	u14910
  4553  003FB2  0E02               	movlw	2
  4554  003FB4  601D               	cpfslt	___ftpack@exp^0,c
  4555  003FB6  D7F6               	goto	l12421
  4556  003FB8                     u14910:
  4557  003FB8  A01D               	btfss	___ftpack@exp^0,0,c
  4558  003FBA  9E1B               	bcf	(___ftpack@arg+1)^0,7,c
  4559  003FBC  90D8               	bcf	status,0,c
  4560  003FBE  321D               	rrcf	___ftpack@exp^0,f,c
  4561  003FC0  501D               	movf	___ftpack@exp^0,w,c
  4562  003FC2  121C               	iorwf	(___ftpack@arg+2)^0,f,c
  4563  003FC4  501E               	movf	___ftpack@sign^0,w,c
  4564  003FC6  A4D8               	btfss	status,2,c
  4565  003FC8  8E1C               	bsf	(___ftpack@arg+2)^0,7,c
  4566  003FCA  C01A  F01A         	movff	___ftpack@arg,?___ftpack
  4567  003FCE  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
  4568  003FD2  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
  4569  003FD6  0012               	return		;funcret
  4570  003FD8                     __end_of___ftpack:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _escreve_cmd_lcd *****************
  4574 ;; Defined at:
  4575 ;;		line 162 in file "bibliotecas/display_lcd.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  comando         1    wreg     unsigned char 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  comando         1   27[COMRAM] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4589 ;;      Params:         0       0       0       0       0       0       0       0       0
  4590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4592 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4593 ;;Total ram usage:        1 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		_delay
  4598 ;; This function is called by:
  4599 ;;		_init_lcd
  4600 ;;		_mensagem_inicial
  4601 ;;		_troca_de_tela
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text20
  4606  004366                     __ptext20:
  4607                           	callstack 0
  4608  004366                     _escreve_cmd_lcd:
  4609                           	callstack 25
  4610                           
  4611                           ;incstack = 0
  4612                           ;escreve_cmd_lcd@comando stored from wreg
  4613  004366  6E1C               	movwf	escreve_cmd_lcd@comando^0,c
  4614                           
  4615                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  4616  004368  9483               	bcf	131,2,c	;volatile
  4617                           
  4618                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  4619  00436A  9283               	bcf	131,1,c	;volatile
  4620                           
  4621                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  4622  00436C  9083               	bcf	131,0,c	;volatile
  4623                           
  4624                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  4625  00436E  A81C               	btfss	escreve_cmd_lcd@comando^0,4,c
  4626  004370  D002               	goto	l191
  4627  004372  8883               	bsf	131,4,c	;volatile
  4628  004374  D001               	goto	l12445
  4629  004376                     l191:
  4630                           
  4631                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  4632  004376  9883               	bcf	131,4,c	;volatile
  4633  004378                     l12445:
  4634                           
  4635                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  4636  004378  AA1C               	btfss	escreve_cmd_lcd@comando^0,5,c
  4637  00437A  D002               	goto	l193
  4638  00437C  8A83               	bsf	131,5,c	;volatile
  4639  00437E  D001               	goto	l12449
  4640  004380                     l193:
  4641                           
  4642                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  4643  004380  9A83               	bcf	131,5,c	;volatile
  4644  004382                     l12449:
  4645                           
  4646                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  4647  004382  AC1C               	btfss	escreve_cmd_lcd@comando^0,6,c
  4648  004384  D002               	goto	l195
  4649  004386  8C83               	bsf	131,6,c	;volatile
  4650  004388  D001               	goto	l12453
  4651  00438A                     l195:
  4652                           
  4653                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  4654  00438A  9C83               	bcf	131,6,c	;volatile
  4655  00438C                     l12453:
  4656                           
  4657                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  4658  00438C  AE1C               	btfss	escreve_cmd_lcd@comando^0,7,c
  4659  00438E  D002               	goto	l197
  4660  004390  8E83               	bsf	131,7,c	;volatile
  4661  004392  D001               	goto	l198
  4662  004394                     l197:
  4663                           
  4664                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  4665  004394  9E83               	bcf	131,7,c	;volatile
  4666  004396                     l198:
  4667                           
  4668                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  4669  004396  8083               	bsf	131,0,c	;volatile
  4670                           
  4671                           ;display_lcd.c: 181: delay();
  4672  004398  EC4F  F02A         	call	_delay	;wreg free
  4673                           
  4674                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  4675  00439C  9083               	bcf	131,0,c	;volatile
  4676                           
  4677                           ;display_lcd.c: 183: delay();
  4678  00439E  EC4F  F02A         	call	_delay	;wreg free
  4679                           
  4680                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  4681  0043A2  A01C               	btfss	escreve_cmd_lcd@comando^0,0,c
  4682  0043A4  D002               	goto	l199
  4683  0043A6  8883               	bsf	131,4,c	;volatile
  4684  0043A8  D001               	goto	l200
  4685  0043AA                     l199:
  4686                           
  4687                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  4688  0043AA  9883               	bcf	131,4,c	;volatile
  4689  0043AC                     l200:
  4690                           
  4691                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  4692  0043AC  A21C               	btfss	escreve_cmd_lcd@comando^0,1,c
  4693  0043AE  D002               	goto	l201
  4694  0043B0  8A83               	bsf	131,5,c	;volatile
  4695  0043B2  D001               	goto	l202
  4696  0043B4                     l201:
  4697                           
  4698                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  4699  0043B4  9A83               	bcf	131,5,c	;volatile
  4700  0043B6                     l202:
  4701                           
  4702                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  4703  0043B6  A41C               	btfss	escreve_cmd_lcd@comando^0,2,c
  4704  0043B8  D002               	goto	l203
  4705  0043BA  8C83               	bsf	131,6,c	;volatile
  4706  0043BC  D001               	goto	l204
  4707  0043BE                     l203:
  4708                           
  4709                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  4710  0043BE  9C83               	bcf	131,6,c	;volatile
  4711  0043C0                     l204:
  4712                           
  4713                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  4714  0043C0  A61C               	btfss	escreve_cmd_lcd@comando^0,3,c
  4715  0043C2  D002               	goto	l205
  4716  0043C4  8E83               	bsf	131,7,c	;volatile
  4717  0043C6  D001               	goto	l206
  4718  0043C8                     l205:
  4719                           
  4720                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  4721  0043C8  9E83               	bcf	131,7,c	;volatile
  4722  0043CA                     l206:
  4723                           
  4724                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  4725  0043CA  8083               	bsf	131,0,c	;volatile
  4726                           
  4727                           ;display_lcd.c: 197: delay();
  4728  0043CC  EC4F  F02A         	call	_delay	;wreg free
  4729                           
  4730                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  4731  0043D0  9083               	bcf	131,0,c	;volatile
  4732                           
  4733                           ;display_lcd.c: 199: delay();
  4734  0043D2  EC4F  F02A         	call	_delay	;wreg free
  4735                           
  4736                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  4737  0043D6  041C               	decf	escreve_cmd_lcd@comando^0,w,c
  4738  0043D8  B4D8               	btfsc	status,2,c
  4739  0043DA  D008               	goto	u15040
  4740  0043DC  0E02               	movlw	2
  4741  0043DE  181C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  4742  0043E0  B4D8               	btfsc	status,2,c
  4743  0043E2  D004               	goto	u15040
  4744  0043E4  0E03               	movlw	3
  4745  0043E6  181C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  4746  0043E8  A4D8               	btfss	status,2,c
  4747  0043EA  0012               	return	
  4748  0043EC                     u15040:
  4749                           
  4750                           ;display_lcd.c: 205: { delay(); }
  4751  0043EC  EC4F  F02A         	call	_delay	;wreg free
  4752  0043F0  0012               	return		;funcret
  4753  0043F2                     __end_of_escreve_cmd_lcd:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _verifica_fence_externo *****************
  4757 ;; Defined at:
  4758 ;;		line 277 in file "main.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4774 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4775 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4776 ;;Total ram usage:        1 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:   10
  4779 ;; This function calls:
  4780 ;;		_latitude_to_convert
  4781 ;;		_longitude_to_convert
  4782 ;;		_monta_sd
  4783 ;;		_verifica_plausibilidade_lat
  4784 ;;		_verifica_plausibilidade_long
  4785 ;;		_verifica_recep_gps
  4786 ;; This function is called by:
  4787 ;;		_verifica_dados_operacionais
  4788 ;;		_disparo_gravacao
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text21
  4793  004854                     __ptext21:
  4794                           	callstack 0
  4795  004854                     _verifica_fence_externo:
  4796                           	callstack 18
  4797                           
  4798                           ;main.c: 279: while(!(verifica_recep_gps()));
  4799                           
  4800                           ;incstack = 0
  4801  004854  EC4A  F029         	call	_verifica_recep_gps	;wreg free
  4802  004858  0900               	iorlw	0
  4803  00485A  B4D8               	btfsc	status,2,c
  4804  00485C  D7FB               	goto	_verifica_fence_externo
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;main.c: 281: longitude_to_convert(0);
  4808  00485E  0E00               	movlw	0
  4809  004860  ECFF  F022         	call	_longitude_to_convert
  4810                           
  4811                           ;main.c: 282: latitude_to_convert(1);
  4812  004864  0E01               	movlw	1
  4813  004866  EC3E  F023         	call	_latitude_to_convert
  4814                           
  4815                           ;main.c: 283: fence_flag[0].point = verifica_plausibilidade_long();
  4816  00486A  ECC9  F024         	call	_verifica_plausibilidade_long	;wreg free
  4817  00486E  6F92               	movwf	??_verifica_fence_externo& (0+255),b
  4818  004870  0101               	movlb	1	; () banked
  4819  004872  5133               	movf	_fence_flag& (0+255),w,b
  4820  004874  0100               	movlb	0	; () banked
  4821  004876  1992               	xorwf	??_verifica_fence_externo& (0+255),w,b
  4822  004878  0BFE               	andlw	-2
  4823  00487A  1992               	xorwf	??_verifica_fence_externo& (0+255),w,b
  4824  00487C  0101               	movlb	1	; () banked
  4825  00487E  6F33               	movwf	_fence_flag& (0+255),b
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;main.c: 284: fence_flag[1].point = verifica_plausibilidade_lat();
  4829  004880  EC7D  F023         	call	_verifica_plausibilidade_lat	;wreg free
  4830  004884  6F92               	movwf	??_verifica_fence_externo& (0+255),b
  4831  004886  0101               	movlb	1	; () banked
  4832  004888  5134               	movf	(_fence_flag+1)& (0+255),w,b
  4833  00488A  0100               	movlb	0	; () banked
  4834  00488C  1992               	xorwf	??_verifica_fence_externo& (0+255),w,b
  4835  00488E  0BFE               	andlw	-2
  4836  004890  1992               	xorwf	??_verifica_fence_externo& (0+255),w,b
  4837  004892  0101               	movlb	1	; () banked
  4838  004894  6F34               	movwf	(_fence_flag+1)& (0+255),b
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;main.c: 289: if(fence_flag[0].point || fence_flag[1].point)
  4842  004896  B133               	btfsc	_fence_flag& (0+255),0,b
  4843  004898  D002               	goto	u15070
  4844                           
  4845                           ; BSR set to: 1
  4846  00489A  A134               	btfss	(_fence_flag+1)& (0+255),0,b
  4847  00489C  D009               	goto	l1452
  4848  00489E                     u15070:
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;main.c: 290: {;main.c: 291: fence_flag[2].point = 1;
  4852  00489E  8135               	bsf	(_fence_flag+2)& (0+255),0,b
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;main.c: 292: monta_sd(4, "FORA");
  4856  0048A0  0E64               	movlw	low STR_19
  4857  0048A2  6E1E               	movwf	monta_sd@dado^0,c
  4858  0048A4  0E62               	movlw	high STR_19
  4859  0048A6  6E1F               	movwf	(monta_sd@dado+1)^0,c
  4860  0048A8  0E04               	movlw	4
  4861  0048AA  EC74  F011         	call	_monta_sd
  4862                           
  4863                           ;main.c: 293: }
  4864  0048AE  0012               	return	
  4865  0048B0                     l1452:
  4866                           
  4867                           ; BSR set to: 1
  4868                           ;main.c: 294: else;main.c: 295: {;main.c: 296: fence_flag[2].point = 0;
  4869  0048B0  9135               	bcf	(_fence_flag+2)& (0+255),0,b
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;main.c: 297: monta_sd(4, "DENTRO");
  4873  0048B2  0E4C               	movlw	low STR_20
  4874  0048B4  6E1E               	movwf	monta_sd@dado^0,c
  4875  0048B6  0E62               	movlw	high STR_20
  4876  0048B8  6E1F               	movwf	(monta_sd@dado+1)^0,c
  4877  0048BA  0E04               	movlw	4
  4878  0048BC  EC74  F011         	call	_monta_sd
  4879  0048C0  0012               	return		;funcret
  4880  0048C2                     __end_of_verifica_fence_externo:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _verifica_recep_gps *****************
  4884 ;; Defined at:
  4885 ;;		line 293 in file "bibliotecas/GPS.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      unsigned char 
  4892 ;; Registers used:
  4893 ;;		wreg
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 3F/1
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    3
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_verifica_fence_externo
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text22
  4914  005294                     __ptext22:
  4915                           	callstack 0
  4916  005294                     _verifica_recep_gps:
  4917                           	callstack 24
  4918                           
  4919                           ;GPS.c: 296: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  4920                           
  4921                           ;incstack = 0
  4922  005294  0101               	movlb	1	; () banked
  4923  005296  B129               	btfsc	_gps_flag& (0+255),0,b
  4924                           
  4925                           ; BSR set to: 1
  4926  005298  A12A               	btfss	(_gps_flag+1)& (0+255),0,b
  4927  00529A  D00E               	goto	l12213
  4928                           
  4929                           ; BSR set to: 1
  4930  00529C  B12B               	btfsc	(_gps_flag+2)& (0+255),0,b
  4931                           
  4932                           ; BSR set to: 1
  4933  00529E  A12C               	btfss	(_gps_flag+3)& (0+255),0,b
  4934  0052A0  D00B               	goto	l12213
  4935                           
  4936                           ; BSR set to: 1
  4937  0052A2  B12D               	btfsc	(_gps_flag+4)& (0+255),0,b
  4938                           
  4939                           ; BSR set to: 1
  4940  0052A4  A12E               	btfss	(_gps_flag+5)& (0+255),0,b
  4941  0052A6  D008               	goto	l12213
  4942                           
  4943                           ; BSR set to: 1
  4944                           ;GPS.c: 297: {;GPS.c: 298: gps_flag[0].flag = 0;
  4945  0052A8  9129               	bcf	_gps_flag& (0+255),0,b
  4946                           
  4947                           ;GPS.c: 299: gps_flag[1].flag = 0;
  4948  0052AA  912A               	bcf	(_gps_flag+1)& (0+255),0,b
  4949                           
  4950                           ;GPS.c: 300: gps_flag[2].flag = 0;
  4951  0052AC  912B               	bcf	(_gps_flag+2)& (0+255),0,b
  4952                           
  4953                           ;GPS.c: 301: gps_flag[3].flag = 0;
  4954  0052AE  912C               	bcf	(_gps_flag+3)& (0+255),0,b
  4955                           
  4956                           ;GPS.c: 302: gps_flag[4].flag = 0;
  4957  0052B0  912D               	bcf	(_gps_flag+4)& (0+255),0,b
  4958                           
  4959                           ;GPS.c: 303: gps_flag[5].flag = 0;
  4960  0052B2  912E               	bcf	(_gps_flag+5)& (0+255),0,b
  4961                           
  4962                           ; BSR set to: 1
  4963                           ;GPS.c: 304: return 1;
  4964  0052B4  0E01               	movlw	1
  4965  0052B6  0012               	return	
  4966  0052B8                     l12213:
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;GPS.c: 306: else;GPS.c: 307: {;GPS.c: 309: return 0;
  4970  0052B8  0E00               	movlw	0
  4971                           
  4972                           ; BSR set to: 1
  4973  0052BA  0012               	return		;funcret
  4974  0052BC                     __end_of_verifica_recep_gps:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _verifica_plausibilidade_long *****************
  4978 ;; Defined at:
  4979 ;;		line 311 in file "bibliotecas/fence.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  posicao         1   25[COMRAM] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      unsigned char 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/1
  4990 ;;		On exit  : 3F/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0
  4994 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4996 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4997 ;;Total ram usage:        1 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    4
  5000 ;; This function calls:
  5001 ;;		_posicao_long
  5002 ;; This function is called by:
  5003 ;;		_verifica_fence_externo
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text23
  5008  004992                     __ptext23:
  5009                           	callstack 0
  5010  004992                     _verifica_plausibilidade_long:
  5011                           	callstack 23
  5012                           
  5013                           ;fence.c: 313: char posicao = posicao_long();
  5014                           
  5015                           ; BSR set to: 1
  5016                           ;incstack = 0
  5017  004992  ECEC  F02A         	call	_posicao_long	;wreg free
  5018  004996  6E1A               	movwf	verifica_plausibilidade_long@posicao^0,c
  5019                           
  5020                           ;fence.c: 314: switch(posicao)
  5021  004998  D029               	goto	l12337
  5022  00499A                     l12287:
  5023                           
  5024                           ; BSR set to: 1
  5025                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  5026  00499A  0100               	movlb	0	; () banked
  5027  00499C  BFF7               	btfsc	(_poligono_ext+7)& (0+255),7,b
  5028  00499E  D00B               	goto	l12297
  5029                           
  5030                           ; BSR set to: 0
  5031  0049A0  BFFF               	btfsc	(_poligono_ext+15)& (0+255),7,b
  5032  0049A2  D007               	goto	u14690
  5033  0049A4  51FF               	movf	(_poligono_ext+15)& (0+255),w,b
  5034  0049A6  11FE               	iorwf	(_poligono_ext+14)& (0+255),w,b
  5035  0049A8  11FD               	iorwf	(_poligono_ext+13)& (0+255),w,b
  5036  0049AA  E105               	bnz	l12297
  5037  0049AC  05FC               	decf	(_poligono_ext+12)& (0+255),w,b
  5038  0049AE  B0D8               	btfsc	status,0,c
  5039  0049B0  D002               	goto	l12297
  5040  0049B2                     u14690:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;fence.c: 320: {;fence.c: 321: return 0;
  5044  0049B2  0E00               	movlw	0
  5045  0049B4  0012               	return	
  5046  0049B6                     l12297:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  5050  0049B6  51F4               	movf	(_poligono_ext+4)& (0+255),w,b
  5051  0049B8  11F5               	iorwf	(_poligono_ext+5)& (0+255),w,b
  5052  0049BA  11F6               	iorwf	(_poligono_ext+6)& (0+255),w,b
  5053  0049BC  11F7               	iorwf	(_poligono_ext+7)& (0+255),w,b
  5054  0049BE  B4D8               	btfsc	status,2,c
  5055  0049C0  D7F8               	goto	u14690
  5056                           
  5057                           ; BSR set to: 0
  5058  0049C2  51FC               	movf	(_poligono_ext+12)& (0+255),w,b
  5059  0049C4  11FD               	iorwf	(_poligono_ext+13)& (0+255),w,b
  5060  0049C6  11FE               	iorwf	(_poligono_ext+14)& (0+255),w,b
  5061  0049C8  11FF               	iorwf	(_poligono_ext+15)& (0+255),w,b
  5062  0049CA  B4D8               	btfsc	status,2,c
  5063  0049CC  D7F2               	goto	u14690
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  5067  0049CE  0E01               	movlw	1
  5068  0049D0  0012               	return	
  5069  0049D2                     l12311:
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  5073  0049D2  0100               	movlb	0	; () banked
  5074  0049D4  BFF7               	btfsc	(_poligono_ext+7)& (0+255),7,b
  5075  0049D6  D007               	goto	u14720
  5076  0049D8  51F7               	movf	(_poligono_ext+7)& (0+255),w,b
  5077  0049DA  11F6               	iorwf	(_poligono_ext+6)& (0+255),w,b
  5078  0049DC  11F5               	iorwf	(_poligono_ext+5)& (0+255),w,b
  5079  0049DE  E1EB               	bnz	l12297
  5080  0049E0  05F4               	decf	(_poligono_ext+4)& (0+255),w,b
  5081  0049E2  B0D8               	btfsc	status,0,c
  5082  0049E4  D7E8               	goto	l12297
  5083  0049E6                     u14720:
  5084                           
  5085                           ; BSR set to: 0
  5086  0049E6  AFFF               	btfss	(_poligono_ext+15)& (0+255),7,b
  5087  0049E8  D7E4               	goto	u14690
  5088  0049EA  D7E5               	goto	l12297
  5089  0049EC                     l12337:
  5090                           
  5091                           ; BSR set to: 1
  5092  0049EC  501A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  5093                           
  5094                           ; Switch size 1, requested type "simple"
  5095                           ; Number of cases is 1, Range of values is 45 to 45
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte            4     3 (average)
  5099                           ;	Chosen strategy is simple_byte
  5100  0049EE  0A2D               	xorlw	45	; case 45
  5101  0049F0  B4D8               	btfsc	status,2,c
  5102  0049F2  D7D3               	goto	l12287
  5103  0049F4  D7EE               	goto	l12311
  5104  0049F6                     __end_of_verifica_plausibilidade_long:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _posicao_long *****************
  5108 ;; Defined at:
  5109 ;;		line 256 in file "bibliotecas/GPS.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      unsigned char 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/1
  5120 ;;		On exit  : 3F/1
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    3
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_verifica_plausibilidade_long
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text24
  5138  0055D8                     __ptext24:
  5139                           	callstack 0
  5140  0055D8                     _posicao_long:
  5141                           	callstack 23
  5142                           
  5143                           ;GPS.c: 259: return rawLongitude[0];
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;incstack = 0
  5147  0055D8  0101               	movlb	1	; () banked
  5148  0055DA  51CB               	movf	_rawLongitude& (0+255),w,b
  5149                           
  5150                           ; BSR set to: 1
  5151  0055DC  0012               	return		;funcret
  5152  0055DE                     __end_of_posicao_long:
  5153                           	callstack 0
  5154                           
  5155 ;; *************** function _verifica_plausibilidade_lat *****************
  5156 ;; Defined at:
  5157 ;;		line 365 in file "bibliotecas/fence.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  posicao         1   25[COMRAM] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 3F/1
  5168 ;;		On exit  : 3F/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0
  5172 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5174 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5175 ;;Total ram usage:        1 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    4
  5178 ;; This function calls:
  5179 ;;		_posicao_lat
  5180 ;; This function is called by:
  5181 ;;		_verifica_fence_externo
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text25
  5186  0046FA                     __ptext25:
  5187                           	callstack 0
  5188  0046FA                     _verifica_plausibilidade_lat:
  5189                           	callstack 23
  5190                           
  5191                           ; BSR set to: 1
  5192                           ;fence.c: 367: char posicao = posicao_lat();
  5193                           
  5194                           ; BSR set to: 1
  5195                           ;incstack = 0
  5196  0046FA  ECEF  F02A         	call	_posicao_lat	;wreg free
  5197  0046FE  6E1A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  5198                           
  5199                           ;fence.c: 368: switch(posicao)
  5200  004700  D033               	goto	l12401
  5201  004702                     l12341:
  5202                           
  5203                           ; BSR set to: 1
  5204                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  5205  004702  0100               	movlb	0	; () banked
  5206  004704  BFF3               	btfsc	(_poligono_ext+3)& (0+255),7,b
  5207  004706  D007               	goto	u14760
  5208  004708  51F3               	movf	(_poligono_ext+3)& (0+255),w,b
  5209  00470A  11F2               	iorwf	(_poligono_ext+2)& (0+255),w,b
  5210  00470C  11F1               	iorwf	(_poligono_ext+1)& (0+255),w,b
  5211  00470E  E107               	bnz	l12351
  5212  004710  05F0               	decf	_poligono_ext& (0+255),w,b
  5213  004712  B0D8               	btfsc	status,0,c
  5214  004714  D004               	goto	l12351
  5215  004716                     u14760:
  5216                           
  5217                           ; BSR set to: 0
  5218  004716  BFFB               	btfsc	(_poligono_ext+11)& (0+255),7,b
  5219  004718  D002               	goto	l12351
  5220  00471A                     u14770:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;fence.c: 374: {;fence.c: 375: return 0;
  5224  00471A  0E00               	movlw	0
  5225  00471C  0012               	return	
  5226  00471E                     l12351:
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  5230  00471E  51F0               	movf	_poligono_ext& (0+255),w,b
  5231  004720  11F1               	iorwf	(_poligono_ext+1)& (0+255),w,b
  5232  004722  11F2               	iorwf	(_poligono_ext+2)& (0+255),w,b
  5233  004724  11F3               	iorwf	(_poligono_ext+3)& (0+255),w,b
  5234  004726  B4D8               	btfsc	status,2,c
  5235  004728  D7F8               	goto	u14770
  5236                           
  5237                           ; BSR set to: 0
  5238  00472A  51F8               	movf	(_poligono_ext+8)& (0+255),w,b
  5239  00472C  11F9               	iorwf	(_poligono_ext+9)& (0+255),w,b
  5240  00472E  11FA               	iorwf	(_poligono_ext+10)& (0+255),w,b
  5241  004730  11FB               	iorwf	(_poligono_ext+11)& (0+255),w,b
  5242  004732  B4D8               	btfsc	status,2,c
  5243  004734  D7F2               	goto	u14770
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  5247  004736  0E01               	movlw	1
  5248  004738  0012               	return	
  5249  00473A                     l12365:
  5250                           
  5251                           ; BSR set to: 1
  5252                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  5253  00473A  0100               	movlb	0	; () banked
  5254  00473C  BFF3               	btfsc	(_poligono_ext+3)& (0+255),7,b
  5255  00473E  D009               	goto	l12375
  5256                           
  5257                           ; BSR set to: 0
  5258  004740  BFFB               	btfsc	(_poligono_ext+11)& (0+255),7,b
  5259  004742  D7EB               	goto	u14770
  5260  004744  51FB               	movf	(_poligono_ext+11)& (0+255),w,b
  5261  004746  11FA               	iorwf	(_poligono_ext+10)& (0+255),w,b
  5262  004748  11F9               	iorwf	(_poligono_ext+9)& (0+255),w,b
  5263  00474A  E103               	bnz	l12375
  5264  00474C  05F8               	decf	(_poligono_ext+8)& (0+255),w,b
  5265  00474E  A0D8               	btfss	status,0,c
  5266  004750  D7E4               	goto	u14770
  5267  004752                     l12375:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  5271  004752  BFF3               	btfsc	(_poligono_ext+3)& (0+255),7,b
  5272                           
  5273                           ; BSR set to: 0
  5274  004754  BFFB               	btfsc	(_poligono_ext+11)& (0+255),7,b
  5275  004756  D7E1               	goto	u14770
  5276  004758  51FB               	movf	(_poligono_ext+11)& (0+255),w,b
  5277  00475A  11FA               	iorwf	(_poligono_ext+10)& (0+255),w,b
  5278  00475C  11F9               	iorwf	(_poligono_ext+9)& (0+255),w,b
  5279  00475E  E1DF               	bnz	l12351
  5280  004760  05F8               	decf	(_poligono_ext+8)& (0+255),w,b
  5281  004762  A0D8               	btfss	status,0,c
  5282  004764  D7DA               	goto	u14770
  5283  004766  D7DB               	goto	l12351
  5284  004768                     l12401:
  5285                           
  5286                           ; BSR set to: 1
  5287  004768  501A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  5288                           
  5289                           ; Switch size 1, requested type "simple"
  5290                           ; Number of cases is 1, Range of values is 45 to 45
  5291                           ; switch strategies available:
  5292                           ; Name         Instructions Cycles
  5293                           ; simple_byte            4     3 (average)
  5294                           ;	Chosen strategy is simple_byte
  5295  00476A  0A2D               	xorlw	45	; case 45
  5296  00476C  B4D8               	btfsc	status,2,c
  5297  00476E  D7C9               	goto	l12341
  5298  004770  D7E4               	goto	l12365
  5299  004772                     __end_of_verifica_plausibilidade_lat:
  5300                           	callstack 0
  5301                           
  5302 ;; *************** function _posicao_lat *****************
  5303 ;; Defined at:
  5304 ;;		line 262 in file "bibliotecas/GPS.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2
  5313 ;; Tracked objects:
  5314 ;;		On entry : 3F/1
  5315 ;;		On exit  : 3F/1
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    3
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_verifica_plausibilidade_lat
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text26
  5333  0055DE                     __ptext26:
  5334                           	callstack 0
  5335  0055DE                     _posicao_lat:
  5336                           	callstack 23
  5337                           
  5338                           ; BSR set to: 1
  5339                           ;GPS.c: 265: return rawLatitude[0];
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;incstack = 0
  5343  0055DE  51D7               	movf	_rawLatitude& (0+255),w,b
  5344                           
  5345                           ; BSR set to: 1
  5346  0055E0  0012               	return		;funcret
  5347  0055E2                     __end_of_posicao_lat:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _longitude_to_convert *****************
  5351 ;; Defined at:
  5352 ;;		line 231 in file "bibliotecas/GPS.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  index           1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  index           1   47[BANK0 ] unsigned char 
  5357 ;;  longitude      11   36[BANK0 ] unsigned char [11]
  5358 ;;  i               1   49[BANK0 ] unsigned char 
  5359 ;;  j               1   48[BANK0 ] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 3F/1
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5369 ;;      Params:         0       0       0       0       0       0       0       0       0
  5370 ;;      Locals:         0      14       0       0       0       0       0       0       0
  5371 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5372 ;;      Totals:         1      14       0       0       0       0       0       0       0
  5373 ;;Total ram usage:       15 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    9
  5376 ;; This function calls:
  5377 ;;		_armazena_ltlo
  5378 ;; This function is called by:
  5379 ;;		_verifica_fence_externo
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text27
  5384  0045FE                     __ptext27:
  5385                           	callstack 0
  5386  0045FE                     _longitude_to_convert:
  5387                           	callstack 18
  5388                           
  5389                           ; BSR set to: 1
  5390                           ;incstack = 0
  5391                           ;longitude_to_convert@index stored from wreg
  5392  0045FE  0100               	movlb	0	; () banked
  5393  004600  6F8F               	movwf	longitude_to_convert@index& (0+255),b
  5394                           
  5395                           ;GPS.c: 233: unsigned char i,j;;GPS.c: 234: unsigned char longitude[11];;GPS.c: 237: j =
      +                           0;
  5396  004602  0E00               	movlw	0
  5397  004604  0100               	movlb	0	; () banked
  5398  004606  6F90               	movwf	longitude_to_convert@j& (0+255),b
  5399                           
  5400                           ;GPS.c: 238: for(i=0; i<12; i++)
  5401  004608  0E00               	movlw	0
  5402  00460A  6F91               	movwf	longitude_to_convert@i& (0+255),b
  5403  00460C                     l12175:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;GPS.c: 239: {;GPS.c: 240: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  5407  00460C  0ECB               	movlw	low _rawLongitude
  5408  00460E  2591               	addwf	longitude_to_convert@i& (0+255),w,b
  5409  004610  6ED9               	movwf	fsr2l,c
  5410  004612  6ADA               	clrf	fsr2h,c
  5411  004614  0E01               	movlw	high _rawLongitude
  5412  004616  22DA               	addwfc	fsr2h,f,c
  5413  004618  50DF               	movf	indf2,w,c
  5414  00461A  B4D8               	btfsc	status,2,c
  5415  00461C  D024               	goto	l12187
  5416                           
  5417                           ; BSR set to: 0
  5418  00461E  0ECB               	movlw	low _rawLongitude
  5419  004620  2591               	addwf	longitude_to_convert@i& (0+255),w,b
  5420  004622  6ED9               	movwf	fsr2l,c
  5421  004624  6ADA               	clrf	fsr2h,c
  5422  004626  0E01               	movlw	high _rawLongitude
  5423  004628  22DA               	addwfc	fsr2h,f,c
  5424  00462A  0E2D               	movlw	45
  5425  00462C  18DE               	xorwf	postinc2,w,c
  5426  00462E  B4D8               	btfsc	status,2,c
  5427  004630  D01A               	goto	l12187
  5428                           
  5429                           ; BSR set to: 0
  5430  004632  0ECB               	movlw	low _rawLongitude
  5431  004634  2591               	addwf	longitude_to_convert@i& (0+255),w,b
  5432  004636  6ED9               	movwf	fsr2l,c
  5433  004638  6ADA               	clrf	fsr2h,c
  5434  00463A  0E01               	movlw	high _rawLongitude
  5435  00463C  22DA               	addwfc	fsr2h,f,c
  5436  00463E  0E2E               	movlw	46
  5437  004640  18DE               	xorwf	postinc2,w,c
  5438  004642  B4D8               	btfsc	status,2,c
  5439  004644  D010               	goto	l12187
  5440                           
  5441                           ; BSR set to: 0
  5442  004646  0E0A               	movlw	10
  5443  004648  6190               	cpfslt	longitude_to_convert@j& (0+255),b
  5444  00464A  D00D               	goto	l12187
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;GPS.c: 241: {;GPS.c: 243: longitude[j] = rawLongitude[i];
  5448  00464C  0ECB               	movlw	low _rawLongitude
  5449  00464E  2591               	addwf	longitude_to_convert@i& (0+255),w,b
  5450  004650  6ED9               	movwf	fsr2l,c
  5451  004652  6ADA               	clrf	fsr2h,c
  5452  004654  0E01               	movlw	high _rawLongitude
  5453  004656  22DA               	addwfc	fsr2h,f,c
  5454  004658  5190               	movf	longitude_to_convert@j& (0+255),w,b
  5455  00465A  0F84               	addlw	low longitude_to_convert@longitude
  5456  00465C  6EE1               	movwf	fsr1l,c
  5457  00465E  6AE2               	clrf	fsr1h,c
  5458  004660  CFDF FFE7          	movff	indf2,indf1
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;GPS.c: 244: j++;
  5462  004664  2B90               	incf	longitude_to_convert@j& (0+255),f,b
  5463  004666                     l12187:
  5464                           
  5465                           ; BSR set to: 0
  5466  004666  2B91               	incf	longitude_to_convert@i& (0+255),f,b
  5467                           
  5468                           ; BSR set to: 0
  5469  004668  0E0B               	movlw	11
  5470  00466A  6591               	cpfsgt	longitude_to_convert@i& (0+255),b
  5471  00466C  D7CF               	goto	l12175
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;GPS.c: 245: };GPS.c: 248: };GPS.c: 253: armazena_ltlo(longitude, index);
  5475  00466E  0E84               	movlw	low longitude_to_convert@longitude
  5476  004670  6F80               	movwf	armazena_ltlo@buffer& (0+255),b
  5477  004672  C08F  F081         	movff	longitude_to_convert@index,armazena_ltlo@index
  5478  004676  EC3B  F022         	call	_armazena_ltlo	;wreg free
  5479  00467A  0012               	return		;funcret
  5480  00467C                     __end_of_longitude_to_convert:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function _latitude_to_convert *****************
  5484 ;; Defined at:
  5485 ;;		line 198 in file "bibliotecas/GPS.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  index           1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  index           1   45[BANK0 ] unsigned char 
  5490 ;;  latitude        9   36[BANK0 ] unsigned char [9]
  5491 ;;  i               1   47[BANK0 ] unsigned char 
  5492 ;;  j               1   46[BANK0 ] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/1
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0
  5503 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5504 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5505 ;;      Totals:         1      12       0       0       0       0       0       0       0
  5506 ;;Total ram usage:       13 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    9
  5509 ;; This function calls:
  5510 ;;		_armazena_ltlo
  5511 ;; This function is called by:
  5512 ;;		_verifica_fence_externo
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text28
  5517  00467C                     __ptext28:
  5518                           	callstack 0
  5519  00467C                     _latitude_to_convert:
  5520                           	callstack 18
  5521                           
  5522                           ;incstack = 0
  5523                           ;latitude_to_convert@index stored from wreg
  5524  00467C  0100               	movlb	0	; () banked
  5525  00467E  6F8D               	movwf	latitude_to_convert@index& (0+255),b
  5526                           
  5527                           ;GPS.c: 200: unsigned char i,j;;GPS.c: 201: unsigned char latitude[9];;GPS.c: 204: j = 0
      +                          ;
  5528  004680  0E00               	movlw	0
  5529  004682  0100               	movlb	0	; () banked
  5530  004684  6F8E               	movwf	latitude_to_convert@j& (0+255),b
  5531                           
  5532                           ;GPS.c: 205: for(i=0; i<12; i++)
  5533  004686  0E00               	movlw	0
  5534  004688  6F8F               	movwf	latitude_to_convert@i& (0+255),b
  5535  00468A                     l12151:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;GPS.c: 206: {;GPS.c: 207: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  5539  00468A  0ED7               	movlw	low _rawLatitude
  5540  00468C  258F               	addwf	latitude_to_convert@i& (0+255),w,b
  5541  00468E  6ED9               	movwf	fsr2l,c
  5542  004690  6ADA               	clrf	fsr2h,c
  5543  004692  0E01               	movlw	high _rawLatitude
  5544  004694  22DA               	addwfc	fsr2h,f,c
  5545  004696  50DF               	movf	indf2,w,c
  5546  004698  B4D8               	btfsc	status,2,c
  5547  00469A  D024               	goto	l12163
  5548                           
  5549                           ; BSR set to: 0
  5550  00469C  0ED7               	movlw	low _rawLatitude
  5551  00469E  258F               	addwf	latitude_to_convert@i& (0+255),w,b
  5552  0046A0  6ED9               	movwf	fsr2l,c
  5553  0046A2  6ADA               	clrf	fsr2h,c
  5554  0046A4  0E01               	movlw	high _rawLatitude
  5555  0046A6  22DA               	addwfc	fsr2h,f,c
  5556  0046A8  0E2D               	movlw	45
  5557  0046AA  18DE               	xorwf	postinc2,w,c
  5558  0046AC  B4D8               	btfsc	status,2,c
  5559  0046AE  D01A               	goto	l12163
  5560                           
  5561                           ; BSR set to: 0
  5562  0046B0  0ED7               	movlw	low _rawLatitude
  5563  0046B2  258F               	addwf	latitude_to_convert@i& (0+255),w,b
  5564  0046B4  6ED9               	movwf	fsr2l,c
  5565  0046B6  6ADA               	clrf	fsr2h,c
  5566  0046B8  0E01               	movlw	high _rawLatitude
  5567  0046BA  22DA               	addwfc	fsr2h,f,c
  5568  0046BC  0E2E               	movlw	46
  5569  0046BE  18DE               	xorwf	postinc2,w,c
  5570  0046C0  B4D8               	btfsc	status,2,c
  5571  0046C2  D010               	goto	l12163
  5572                           
  5573                           ; BSR set to: 0
  5574  0046C4  0E09               	movlw	9
  5575  0046C6  618E               	cpfslt	latitude_to_convert@j& (0+255),b
  5576  0046C8  D00D               	goto	l12163
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;GPS.c: 208: {;GPS.c: 210: latitude[j] = rawLatitude[i];
  5580  0046CA  0ED7               	movlw	low _rawLatitude
  5581  0046CC  258F               	addwf	latitude_to_convert@i& (0+255),w,b
  5582  0046CE  6ED9               	movwf	fsr2l,c
  5583  0046D0  6ADA               	clrf	fsr2h,c
  5584  0046D2  0E01               	movlw	high _rawLatitude
  5585  0046D4  22DA               	addwfc	fsr2h,f,c
  5586  0046D6  518E               	movf	latitude_to_convert@j& (0+255),w,b
  5587  0046D8  0F84               	addlw	low latitude_to_convert@latitude
  5588  0046DA  6EE1               	movwf	fsr1l,c
  5589  0046DC  6AE2               	clrf	fsr1h,c
  5590  0046DE  CFDF FFE7          	movff	indf2,indf1
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;GPS.c: 215: j++;
  5594  0046E2  2B8E               	incf	latitude_to_convert@j& (0+255),f,b
  5595  0046E4                     l12163:
  5596                           
  5597                           ; BSR set to: 0
  5598  0046E4  2B8F               	incf	latitude_to_convert@i& (0+255),f,b
  5599                           
  5600                           ; BSR set to: 0
  5601  0046E6  0E0B               	movlw	11
  5602  0046E8  658F               	cpfsgt	latitude_to_convert@i& (0+255),b
  5603  0046EA  D7CF               	goto	l12151
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;GPS.c: 218: };GPS.c: 221: };GPS.c: 227: armazena_ltlo(latitude, index);
  5607  0046EC  0E84               	movlw	low latitude_to_convert@latitude
  5608  0046EE  6F80               	movwf	armazena_ltlo@buffer& (0+255),b
  5609  0046F0  C08D  F081         	movff	latitude_to_convert@index,armazena_ltlo@index
  5610  0046F4  EC3B  F022         	call	_armazena_ltlo	;wreg free
  5611  0046F8  0012               	return		;funcret
  5612  0046FA                     __end_of_latitude_to_convert:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _armazena_ltlo *****************
  5616 ;; Defined at:
  5617 ;;		line 64 in file "bibliotecas/fence.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  buffer          1   32[BANK0 ] PTR unsigned char 
  5620 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  5621 ;;  index           1   33[BANK0 ] unsigned char 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  i               1   35[BANK0 ] unsigned char 
  5624 ;;  j               1   34[BANK0 ] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 3F/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5634 ;;      Params:         0       2       0       0       0       0       0       0       0
  5635 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5637 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5638 ;;Total ram usage:        4 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    8
  5641 ;; This function calls:
  5642 ;;		_diferenca
  5643 ;; This function is called by:
  5644 ;;		_latitude_to_convert
  5645 ;;		_longitude_to_convert
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text29
  5650  004476                     __ptext29:
  5651                           	callstack 0
  5652  004476                     _armazena_ltlo:
  5653                           	callstack 18
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  5657                           
  5658                           ;incstack = 0
  5659  004476  D038               	goto	l11703
  5660  004478                     l11665:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;fence.c: 75: j = 0;
  5664  004478  0E00               	movlw	0
  5665  00447A  6F82               	movwf	armazena_ltlo@j& (0+255),b
  5666                           
  5667                           ;fence.c: 76: for(i=0; i<10; i++)
  5668  00447C  0E00               	movlw	0
  5669  00447E  6F83               	movwf	armazena_ltlo@i& (0+255),b
  5670  004480                     l11671:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  5674  004480  5180               	movf	armazena_ltlo@buffer& (0+255),w,b
  5675  004482  6ED9               	movwf	fsr2l,c
  5676  004484  6ADA               	clrf	fsr2h,c
  5677  004486  50DF               	movf	indf2,w,c
  5678  004488  B4D8               	btfsc	status,2,c
  5679  00448A  D00C               	goto	l11677
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  5683  00448C  5180               	movf	armazena_ltlo@buffer& (0+255),w,b
  5684  00448E  6ED9               	movwf	fsr2l,c
  5685  004490  6ADA               	clrf	fsr2h,c
  5686  004492  0E00               	movlw	low _dado
  5687  004494  2582               	addwf	armazena_ltlo@j& (0+255),w,b
  5688  004496  6EE1               	movwf	fsr1l,c
  5689  004498  6AE2               	clrf	fsr1h,c
  5690  00449A  0E01               	movlw	high _dado
  5691  00449C  22E2               	addwfc	fsr1h,f,c
  5692  00449E  CFDF FFE7          	movff	indf2,indf1
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;fence.c: 82: j++;
  5696  0044A2  2B82               	incf	armazena_ltlo@j& (0+255),f,b
  5697  0044A4                     l11677:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;fence.c: 83: };fence.c: 85: buffer++;
  5701  0044A4  2B80               	incf	armazena_ltlo@buffer& (0+255),f,b
  5702                           
  5703                           ; BSR set to: 0
  5704  0044A6  2B83               	incf	armazena_ltlo@i& (0+255),f,b
  5705                           
  5706                           ; BSR set to: 0
  5707  0044A8  0E09               	movlw	9
  5708  0044AA  6583               	cpfsgt	armazena_ltlo@i& (0+255),b
  5709  0044AC  D7E9               	goto	l11671
  5710  0044AE  D021               	goto	l11705
  5711  0044B0                     l11683:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;fence.c: 91: j = 0;
  5715  0044B0  0E00               	movlw	0
  5716  0044B2  6F82               	movwf	armazena_ltlo@j& (0+255),b
  5717                           
  5718                           ;fence.c: 92: for(i=0; i<11; i++)
  5719  0044B4  0E00               	movlw	0
  5720  0044B6  6F83               	movwf	armazena_ltlo@i& (0+255),b
  5721  0044B8                     l11689:
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  5725  0044B8  5180               	movf	armazena_ltlo@buffer& (0+255),w,b
  5726  0044BA  6ED9               	movwf	fsr2l,c
  5727  0044BC  6ADA               	clrf	fsr2h,c
  5728  0044BE  50DF               	movf	indf2,w,c
  5729  0044C0  B4D8               	btfsc	status,2,c
  5730  0044C2  D00C               	goto	l11695
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  5734  0044C4  5180               	movf	armazena_ltlo@buffer& (0+255),w,b
  5735  0044C6  6ED9               	movwf	fsr2l,c
  5736  0044C8  6ADA               	clrf	fsr2h,c
  5737  0044CA  0E00               	movlw	low _dado
  5738  0044CC  2582               	addwf	armazena_ltlo@j& (0+255),w,b
  5739  0044CE  6EE1               	movwf	fsr1l,c
  5740  0044D0  6AE2               	clrf	fsr1h,c
  5741  0044D2  0E01               	movlw	high _dado
  5742  0044D4  22E2               	addwfc	fsr1h,f,c
  5743  0044D6  CFDF FFE7          	movff	indf2,indf1
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;fence.c: 98: j++;
  5747  0044DA  2B82               	incf	armazena_ltlo@j& (0+255),f,b
  5748  0044DC                     l11695:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;fence.c: 99: };fence.c: 101: buffer++;
  5752  0044DC  2B80               	incf	armazena_ltlo@buffer& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 0
  5755  0044DE  2B83               	incf	armazena_ltlo@i& (0+255),f,b
  5756                           
  5757                           ; BSR set to: 0
  5758  0044E0  0E0A               	movlw	10
  5759  0044E2  6583               	cpfsgt	armazena_ltlo@i& (0+255),b
  5760  0044E4  D7E9               	goto	l11689
  5761  0044E6  D005               	goto	l11705
  5762  0044E8                     l11703:
  5763                           
  5764                           ; BSR set to: 0
  5765  0044E8  5181               	movf	armazena_ltlo@index& (0+255),w,b
  5766                           
  5767                           ; Switch size 1, requested type "simple"
  5768                           ; Number of cases is 1, Range of values is 1 to 1
  5769                           ; switch strategies available:
  5770                           ; Name         Instructions Cycles
  5771                           ; simple_byte            4     3 (average)
  5772                           ;	Chosen strategy is simple_byte
  5773  0044EA  0A01               	xorlw	1	; case 1
  5774  0044EC  B4D8               	btfsc	status,2,c
  5775  0044EE  D7C4               	goto	l11665
  5776  0044F0  D7DF               	goto	l11683
  5777  0044F2                     l11705:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;fence.c: 108: diferenca(index);
  5781  0044F2  5181               	movf	armazena_ltlo@index& (0+255),w,b
  5782  0044F4  EC0B  F01C         	call	_diferenca
  5783  0044F8  0012               	return		;funcret
  5784  0044FA                     __end_of_armazena_ltlo:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _diferenca *****************
  5788 ;; Defined at:
  5789 ;;		line 145 in file "bibliotecas/fence.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  index           1    wreg     unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  index           1   23[BANK0 ] unsigned char 
  5794 ;;  valor_long      4   28[BANK0 ] unsigned long 
  5795 ;;  valor_lat       4   24[BANK0 ] unsigned long 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 3F/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5805 ;;      Params:         0       0       0       0       0       0       0       0       0
  5806 ;;      Locals:         0       9       0       0       0       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5808 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5809 ;;Total ram usage:        9 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    7
  5812 ;; This function calls:
  5813 ;;		_convert_to_int
  5814 ;;		_convert_to_int_point_lat
  5815 ;;		_convert_to_int_point_long
  5816 ;;		_escreve_inteiro_lcd
  5817 ;;		_posicao_cursor_lcd
  5818 ;; This function is called by:
  5819 ;;		_armazena_ltlo
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text30
  5824  003816                     __ptext30:
  5825                           	callstack 0
  5826  003816                     _diferenca:
  5827                           	callstack 18
  5828                           
  5829                           ;incstack = 0
  5830                           ;diferenca@index stored from wreg
  5831  003816  6F77               	movwf	diferenca@index& (0+255),b
  5832                           
  5833                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  5834  003818  D07C               	goto	l11617
  5835  00381A                     l11595:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  5839  00381A  EC57  F025         	call	_convert_to_int_point_lat	;wreg free
  5840  00381E  C066  F078         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  5841  003822  C067  F079         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  5842  003826  C068  F07A         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  5843  00382A  C069  F07B         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  5847  00382E  0E4F               	movlw	low _fence_diff_lat
  5848  003830  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5849  003832  0E61               	movlw	high _fence_diff_lat
  5850  003834  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5851  003836  ECA9  F029         	call	_convert_to_int	;wreg free
  5852  00383A  5178               	movf	diferenca@valor_lat& (0+255),w,b
  5853  00383C  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5854  00383E  6FF0               	movwf	_poligono_ext& (0+255),b
  5855  003840  5179               	movf	(diferenca@valor_lat+1)& (0+255),w,b
  5856  003842  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5857  003844  6FF1               	movwf	(_poligono_ext+1)& (0+255),b
  5858  003846  517A               	movf	(diferenca@valor_lat+2)& (0+255),w,b
  5859  003848  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5860  00384A  6FF2               	movwf	(_poligono_ext+2)& (0+255),b
  5861  00384C  517B               	movf	(diferenca@valor_lat+3)& (0+255),w,b
  5862  00384E  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5863  003850  6FF3               	movwf	(_poligono_ext+3)& (0+255),b
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  5867  003852  0E63               	movlw	low (_fence_diff_lat+20)
  5868  003854  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5869  003856  0E61               	movlw	high (_fence_diff_lat+20)
  5870  003858  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5871  00385A  ECA9  F029         	call	_convert_to_int	;wreg free
  5872  00385E  5178               	movf	diferenca@valor_lat& (0+255),w,b
  5873  003860  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5874  003862  6FF8               	movwf	(_poligono_ext+8)& (0+255),b
  5875  003864  5179               	movf	(diferenca@valor_lat+1)& (0+255),w,b
  5876  003866  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5877  003868  6FF9               	movwf	(_poligono_ext+9)& (0+255),b
  5878  00386A  517A               	movf	(diferenca@valor_lat+2)& (0+255),w,b
  5879  00386C  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5880  00386E  6FFA               	movwf	(_poligono_ext+10)& (0+255),b
  5881  003870  517B               	movf	(diferenca@valor_lat+3)& (0+255),w,b
  5882  003872  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5883  003874  6FFB               	movwf	(_poligono_ext+11)& (0+255),b
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;fence.c: 155: posicao_cursor_lcd(1,0);
  5887  003876  0E00               	movlw	0
  5888  003878  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  5889  00387A  0E01               	movlw	1
  5890  00387C  ECFB  F024         	call	_posicao_cursor_lcd
  5891                           
  5892                           ;fence.c: 156: escreve_inteiro_lcd(valor_lat);
  5893  003880  C078  F06C         	movff	diferenca@valor_lat,escreve_inteiro_lcd@valor
  5894  003884  C079  F06D         	movff	diferenca@valor_lat+1,escreve_inteiro_lcd@valor+1
  5895  003888  C07A  F06E         	movff	diferenca@valor_lat+2,escreve_inteiro_lcd@valor+2
  5896  00388C  C07B  F06F         	movff	diferenca@valor_lat+3,escreve_inteiro_lcd@valor+3
  5897  003890  EC17  F028         	call	_escreve_inteiro_lcd	;wreg free
  5898                           
  5899                           ;fence.c: 157: break;
  5900  003894  0012               	return	
  5901  003896                     l11605:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  5905  003896  EC2A  F025         	call	_convert_to_int_point_long	;wreg free
  5906  00389A  C066  F07C         	movff	?_convert_to_int_point_long,diferenca@valor_long
  5907  00389E  C067  F07D         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  5908  0038A2  C068  F07E         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  5909  0038A6  C069  F07F         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  5913  0038AA  0E23               	movlw	low _fence_diff_long
  5914  0038AC  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5915  0038AE  0E61               	movlw	high _fence_diff_long
  5916  0038B0  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5917  0038B2  ECA9  F029         	call	_convert_to_int	;wreg free
  5918  0038B6  517C               	movf	diferenca@valor_long& (0+255),w,b
  5919  0038B8  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5920  0038BA  6FF4               	movwf	(_poligono_ext+4)& (0+255),b
  5921  0038BC  517D               	movf	(diferenca@valor_long+1)& (0+255),w,b
  5922  0038BE  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5923  0038C0  6FF5               	movwf	(_poligono_ext+5)& (0+255),b
  5924  0038C2  517E               	movf	(diferenca@valor_long+2)& (0+255),w,b
  5925  0038C4  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5926  0038C6  6FF6               	movwf	(_poligono_ext+6)& (0+255),b
  5927  0038C8  517F               	movf	(diferenca@valor_long+3)& (0+255),w,b
  5928  0038CA  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5929  0038CC  6FF7               	movwf	(_poligono_ext+7)& (0+255),b
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  5933  0038CE  0E39               	movlw	low (_fence_diff_long+22)
  5934  0038D0  6F66               	movwf	convert_to_int@p_buff& (0+255),b
  5935  0038D2  0E61               	movlw	high (_fence_diff_long+22)
  5936  0038D4  6F67               	movwf	(convert_to_int@p_buff+1)& (0+255),b
  5937  0038D6  ECA9  F029         	call	_convert_to_int	;wreg free
  5938  0038DA  517C               	movf	diferenca@valor_long& (0+255),w,b
  5939  0038DC  5D66               	subwf	?_convert_to_int& (0+255),w,b
  5940  0038DE  6FFC               	movwf	(_poligono_ext+12)& (0+255),b
  5941  0038E0  517D               	movf	(diferenca@valor_long+1)& (0+255),w,b
  5942  0038E2  5967               	subwfb	(?_convert_to_int+1)& (0+255),w,b
  5943  0038E4  6FFD               	movwf	(_poligono_ext+13)& (0+255),b
  5944  0038E6  517E               	movf	(diferenca@valor_long+2)& (0+255),w,b
  5945  0038E8  5968               	subwfb	(?_convert_to_int+2)& (0+255),w,b
  5946  0038EA  6FFE               	movwf	(_poligono_ext+14)& (0+255),b
  5947  0038EC  517F               	movf	(diferenca@valor_long+3)& (0+255),w,b
  5948  0038EE  5969               	subwfb	(?_convert_to_int+3)& (0+255),w,b
  5949  0038F0  6FFF               	movwf	(_poligono_ext+15)& (0+255),b
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;fence.c: 163: posicao_cursor_lcd(2,0);
  5953  0038F2  0E00               	movlw	0
  5954  0038F4  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
  5955  0038F6  0E02               	movlw	2
  5956  0038F8  ECFB  F024         	call	_posicao_cursor_lcd
  5957                           
  5958                           ;fence.c: 164: escreve_inteiro_lcd(valor_long);
  5959  0038FC  C07C  F06C         	movff	diferenca@valor_long,escreve_inteiro_lcd@valor
  5960  003900  C07D  F06D         	movff	diferenca@valor_long+1,escreve_inteiro_lcd@valor+1
  5961  003904  C07E  F06E         	movff	diferenca@valor_long+2,escreve_inteiro_lcd@valor+2
  5962  003908  C07F  F06F         	movff	diferenca@valor_long+3,escreve_inteiro_lcd@valor+3
  5963  00390C  EC17  F028         	call	_escreve_inteiro_lcd	;wreg free
  5964                           
  5965                           ;fence.c: 165: break;
  5966  003910  0012               	return	
  5967  003912                     l11617:
  5968  003912  0100               	movlb	0	; () banked
  5969  003914  5177               	movf	diferenca@index& (0+255),w,b
  5970                           
  5971                           ; Switch size 1, requested type "simple"
  5972                           ; Number of cases is 1, Range of values is 1 to 1
  5973                           ; switch strategies available:
  5974                           ; Name         Instructions Cycles
  5975                           ; simple_byte            4     3 (average)
  5976                           ;	Chosen strategy is simple_byte
  5977  003916  0A01               	xorlw	1	; case 1
  5978  003918  B4D8               	btfsc	status,2,c
  5979  00391A  D77F               	goto	l11595
  5980  00391C  D7BC               	goto	l11605
  5981  00391E                     __end_of_diferenca:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _escreve_inteiro_lcd *****************
  5985 ;; Defined at:
  5986 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  valor           4   12[BANK0 ] long 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  texto           7   16[BANK0 ] unsigned char [7]
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6000 ;;      Params:         0       4       0       0       0       0       0       0       0
  6001 ;;      Locals:         0       7       0       0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6003 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6004 ;;Total ram usage:       11 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    6
  6007 ;; This function calls:
  6008 ;;		_escreve_frase_ram_lcd
  6009 ;;		_ltoa
  6010 ;; This function is called by:
  6011 ;;		_troca_de_tela
  6012 ;;		_diferenca
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text31
  6017  00502E                     __ptext31:
  6018                           	callstack 0
  6019  00502E                     _escreve_inteiro_lcd:
  6020                           	callstack 18
  6021                           
  6022                           ;display_lcd.c: 378: char texto[7] = "000000";
  6023                           
  6024                           ;incstack = 0
  6025  00502E  EE21  F0C4         	lfsr	2,escreve_inteiro_lcd@F3223
  6026  005032  EE10  F070         	lfsr	1,escreve_inteiro_lcd@texto
  6027  005036  0E06               	movlw	6
  6028  005038                     u12351:
  6029  005038  CFDB FFE3          	movff	plusw2,plusw1
  6030  00503C  06E8               	decf	wreg,f,c
  6031  00503E  E2FC               	bc	u12351
  6032                           
  6033                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  6034  005040  0E70               	movlw	low escreve_inteiro_lcd@texto
  6035  005042  0100               	movlb	0	; () banked
  6036  005044  6F65               	movwf	ltoa@buf& (0+255),b
  6037  005046  C06C  F066         	movff	escreve_inteiro_lcd@valor,ltoa@val
  6038  00504A  C06D  F067         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  6039  00504E  C06E  F068         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  6040  005052  C06F  F069         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  6041  005056  0E00               	movlw	0
  6042  005058  6F6B               	movwf	(ltoa@base+1)& (0+255),b
  6043  00505A  0E0A               	movlw	10
  6044  00505C  6F6A               	movwf	ltoa@base& (0+255),b
  6045  00505E  ECD5  F027         	call	_ltoa	;wreg free
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  6049  005062  0E70               	movlw	low escreve_inteiro_lcd@texto
  6050  005064  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  6051  005066  6A1E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  6052  005068  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
  6053  00506C  0012               	return		;funcret
  6054  00506E                     __end_of_escreve_inteiro_lcd:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function _ltoa *****************
  6058 ;; Defined at:
  6059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  buf             1    5[BANK0 ] PTR unsigned char 
  6062 ;;		 -> escreve_inteiro_lcd@texto(7), 
  6063 ;;  val             4    6[BANK0 ] long 
  6064 ;;  base            2   10[BANK0 ] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  cp              1    0        PTR unsigned char 
  6067 ;;		 -> escreve_inteiro_lcd@texto(7), 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      PTR unsigned char 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 3F/0
  6074 ;;		On exit  : 3F/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6077 ;;      Params:         0       7       0       0       0       0       0       0       0
  6078 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6080 ;;      Totals:         1       7       0       0       0       0       0       0       0
  6081 ;;Total ram usage:        8 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    5
  6084 ;; This function calls:
  6085 ;;		_ultoa
  6086 ;; This function is called by:
  6087 ;;		_escreve_inteiro_lcd
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text32
  6092  004FAA                     __ptext32:
  6093                           	callstack 0
  6094  004FAA                     _ltoa:
  6095                           	callstack 18
  6096                           
  6097                           ; BSR set to: 0
  6098                           
  6099                           ;incstack = 0
  6100  004FAA  AF69               	btfss	(ltoa@val+3)& (0+255),7,b
  6101  004FAC  D00E               	goto	l10627
  6102                           
  6103                           ; BSR set to: 0
  6104  004FAE  5165               	movf	ltoa@buf& (0+255),w,b
  6105  004FB0  6ED9               	movwf	fsr2l,c
  6106  004FB2  6ADA               	clrf	fsr2h,c
  6107  004FB4  0E2D               	movlw	45
  6108  004FB6  6EDF               	movwf	indf2,c
  6109                           
  6110                           ; BSR set to: 0
  6111  004FB8  2B65               	incf	ltoa@buf& (0+255),f,b
  6112                           
  6113                           ; BSR set to: 0
  6114  004FBA  1F69               	comf	(ltoa@val+3)& (0+255),f,b
  6115  004FBC  1F68               	comf	(ltoa@val+2)& (0+255),f,b
  6116  004FBE  1F67               	comf	(ltoa@val+1)& (0+255),f,b
  6117  004FC0  6D66               	negf	ltoa@val& (0+255),b
  6118  004FC2  0E00               	movlw	0
  6119  004FC4  2367               	addwfc	(ltoa@val+1)& (0+255),f,b
  6120  004FC6  2368               	addwfc	(ltoa@val+2)& (0+255),f,b
  6121  004FC8  2369               	addwfc	(ltoa@val+3)& (0+255),f,b
  6122  004FCA                     l10627:
  6123                           
  6124                           ; BSR set to: 0
  6125  004FCA  C065  F027         	movff	ltoa@buf,ultoa@buf
  6126  004FCE  C066  F028         	movff	ltoa@val,ultoa@val
  6127  004FD2  C067  F029         	movff	ltoa@val+1,ultoa@val+1
  6128  004FD6  C068  F02A         	movff	ltoa@val+2,ultoa@val+2
  6129  004FDA  C069  F02B         	movff	ltoa@val+3,ultoa@val+3
  6130  004FDE  C06A  F02C         	movff	ltoa@base,ultoa@base
  6131  004FE2  C06B  F02D         	movff	ltoa@base+1,ultoa@base+1
  6132  004FE6  EC8E  F01D         	call	_ultoa	;wreg free
  6133                           
  6134                           ; BSR set to: 0
  6135  004FEA  0012               	return		;funcret
  6136  004FEC                     __end_of_ltoa:
  6137                           	callstack 0
  6138                           
  6139 ;; *************** function _ultoa *****************
  6140 ;; Defined at:
  6141 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  buf             1   38[COMRAM] PTR unsigned char 
  6144 ;;		 -> escreve_inteiro_lcd@texto(7), 
  6145 ;;  val             4   39[COMRAM] unsigned long 
  6146 ;;  base            2   43[COMRAM] int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  v               4    0[BANK0 ] unsigned long 
  6149 ;;  c               1    4[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      PTR unsigned char 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 3F/0
  6156 ;;		On exit  : 3F/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6159 ;;      Params:         7       0       0       0       0       0       0       0       0
  6160 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6162 ;;      Totals:         7       5       0       0       0       0       0       0       0
  6163 ;;Total ram usage:       12 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    4
  6166 ;; This function calls:
  6167 ;;		___lldiv
  6168 ;;		___llmod
  6169 ;; This function is called by:
  6170 ;;		_ltoa
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text33
  6175  003B1C                     __ptext33:
  6176                           	callstack 0
  6177  003B1C                     _ultoa:
  6178                           	callstack 18
  6179                           
  6180                           ; BSR set to: 0
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;incstack = 0
  6184  003B1C  C028  F060         	movff	ultoa@val,ultoa@v
  6185  003B20  C029  F061         	movff	ultoa@val+1,ultoa@v+1
  6186  003B24  C02A  F062         	movff	ultoa@val+2,ultoa@v+2
  6187  003B28  C02B  F063         	movff	ultoa@val+3,ultoa@v+3
  6188  003B2C                     l10421:
  6189                           
  6190                           ; BSR set to: 0
  6191  003B2C  C060  F01A         	movff	ultoa@v,___lldiv@dividend
  6192  003B30  C061  F01B         	movff	ultoa@v+1,___lldiv@dividend+1
  6193  003B34  C062  F01C         	movff	ultoa@v+2,___lldiv@dividend+2
  6194  003B38  C063  F01D         	movff	ultoa@v+3,___lldiv@dividend+3
  6195  003B3C  C02C  F01E         	movff	ultoa@base,___lldiv@divisor
  6196  003B40  C02D  F01F         	movff	ultoa@base+1,___lldiv@divisor+1
  6197  003B44  0E00               	movlw	0
  6198  003B46  BE1F               	btfsc	(___lldiv@divisor+1)^0,7,c
  6199  003B48  0EFF               	movlw	-1
  6200  003B4A  6E20               	movwf	(___lldiv@divisor+2)^0,c
  6201  003B4C  6E21               	movwf	(___lldiv@divisor+3)^0,c
  6202  003B4E  ECBE  F022         	call	___lldiv	;wreg free
  6203  003B52  C01A  F060         	movff	?___lldiv,ultoa@v
  6204  003B56  C01B  F061         	movff	?___lldiv+1,ultoa@v+1
  6205  003B5A  C01C  F062         	movff	?___lldiv+2,ultoa@v+2
  6206  003B5E  C01D  F063         	movff	?___lldiv+3,ultoa@v+3
  6207  003B62  2A27               	incf	ultoa@buf^0,f,c
  6208  003B64  0100               	movlb	0	; () banked
  6209  003B66  5160               	movf	ultoa@v& (0+255),w,b
  6210  003B68  1161               	iorwf	(ultoa@v+1)& (0+255),w,b
  6211  003B6A  1162               	iorwf	(ultoa@v+2)& (0+255),w,b
  6212  003B6C  1163               	iorwf	(ultoa@v+3)& (0+255),w,b
  6213  003B6E  A4D8               	btfss	status,2,c
  6214  003B70  D7DD               	goto	l10421
  6215                           
  6216                           ; BSR set to: 0
  6217  003B72  5027               	movf	ultoa@buf^0,w,c
  6218  003B74  6ED9               	movwf	fsr2l,c
  6219  003B76  6ADA               	clrf	fsr2h,c
  6220  003B78  0E00               	movlw	0
  6221  003B7A  6EDF               	movwf	indf2,c
  6222                           
  6223                           ; BSR set to: 0
  6224  003B7C  0627               	decf	ultoa@buf^0,f,c
  6225  003B7E                     l10431:
  6226                           
  6227                           ; BSR set to: 0
  6228  003B7E  C028  F01A         	movff	ultoa@val,___llmod@dividend
  6229  003B82  C029  F01B         	movff	ultoa@val+1,___llmod@dividend+1
  6230  003B86  C02A  F01C         	movff	ultoa@val+2,___llmod@dividend+2
  6231  003B8A  C02B  F01D         	movff	ultoa@val+3,___llmod@dividend+3
  6232  003B8E  C02C  F01E         	movff	ultoa@base,___llmod@divisor
  6233  003B92  C02D  F01F         	movff	ultoa@base+1,___llmod@divisor+1
  6234  003B96  0E00               	movlw	0
  6235  003B98  BE1F               	btfsc	(___llmod@divisor+1)^0,7,c
  6236  003B9A  0EFF               	movlw	-1
  6237  003B9C  6E20               	movwf	(___llmod@divisor+2)^0,c
  6238  003B9E  6E21               	movwf	(___llmod@divisor+3)^0,c
  6239  003BA0  EC96  F024         	call	___llmod	;wreg free
  6240  003BA4  501A               	movf	?___llmod^0,w,c
  6241  003BA6  0100               	movlb	0	; () banked
  6242  003BA8  6F64               	movwf	ultoa@c& (0+255),b
  6243                           
  6244                           ; BSR set to: 0
  6245  003BAA  C028  F01A         	movff	ultoa@val,___lldiv@dividend
  6246  003BAE  C029  F01B         	movff	ultoa@val+1,___lldiv@dividend+1
  6247  003BB2  C02A  F01C         	movff	ultoa@val+2,___lldiv@dividend+2
  6248  003BB6  C02B  F01D         	movff	ultoa@val+3,___lldiv@dividend+3
  6249  003BBA  C02C  F01E         	movff	ultoa@base,___lldiv@divisor
  6250  003BBE  C02D  F01F         	movff	ultoa@base+1,___lldiv@divisor+1
  6251  003BC2  0E00               	movlw	0
  6252  003BC4  BE1F               	btfsc	(___lldiv@divisor+1)^0,7,c
  6253  003BC6  0EFF               	movlw	-1
  6254  003BC8  6E20               	movwf	(___lldiv@divisor+2)^0,c
  6255  003BCA  6E21               	movwf	(___lldiv@divisor+3)^0,c
  6256  003BCC  ECBE  F022         	call	___lldiv	;wreg free
  6257  003BD0  C01A  F028         	movff	?___lldiv,ultoa@val
  6258  003BD4  C01B  F029         	movff	?___lldiv+1,ultoa@val+1
  6259  003BD8  C01C  F02A         	movff	?___lldiv+2,ultoa@val+2
  6260  003BDC  C01D  F02B         	movff	?___lldiv+3,ultoa@val+3
  6261  003BE0  0E09               	movlw	9
  6262  003BE2  0100               	movlb	0	; () banked
  6263  003BE4  6564               	cpfsgt	ultoa@c& (0+255),b
  6264  003BE6  D002               	goto	l2325
  6265                           
  6266                           ; BSR set to: 0
  6267  003BE8  0E07               	movlw	7
  6268  003BEA  2764               	addwf	ultoa@c& (0+255),f,b
  6269  003BEC                     l2325:
  6270                           
  6271                           ; BSR set to: 0
  6272  003BEC  0E30               	movlw	48
  6273  003BEE  2764               	addwf	ultoa@c& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276  003BF0  5027               	movf	ultoa@buf^0,w,c
  6277  003BF2  6ED9               	movwf	fsr2l,c
  6278  003BF4  6ADA               	clrf	fsr2h,c
  6279  003BF6  C064  FFDF         	movff	ultoa@c,indf2
  6280                           
  6281                           ; BSR set to: 0
  6282  003BFA  0627               	decf	ultoa@buf^0,f,c
  6283                           
  6284                           ; BSR set to: 0
  6285  003BFC  5028               	movf	ultoa@val^0,w,c
  6286  003BFE  1029               	iorwf	(ultoa@val+1)^0,w,c
  6287  003C00  102A               	iorwf	(ultoa@val+2)^0,w,c
  6288  003C02  102B               	iorwf	(ultoa@val+3)^0,w,c
  6289  003C04  B4D8               	btfsc	status,2,c
  6290  003C06  0012               	return	
  6291  003C08  D7BA               	goto	l10431
  6292  003C0A                     __end_of_ultoa:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function _convert_to_int_point_long *****************
  6296 ;; Defined at:
  6297 ;;		line 455 in file "bibliotecas/fence.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  convert_str_   10   10[BANK0 ] unsigned char [10]
  6302 ;;  p               3    0        PTR unsigned char 
  6303 ;;  i               1   21[BANK0 ] unsigned char 
  6304 ;;  j               1   20[BANK0 ] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  4    6[BANK0 ] unsigned long 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 3F/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6314 ;;      Params:         0       4       0       0       0       0       0       0       0
  6315 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6317 ;;      Totals:         0      16       0       0       0       0       0       0       0
  6318 ;;Total ram usage:       16 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    5
  6321 ;; This function calls:
  6322 ;;		_atol
  6323 ;; This function is called by:
  6324 ;;		_diferenca
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text34
  6329  004A54                     __ptext34:
  6330                           	callstack 0
  6331  004A54                     _convert_to_int_point_long:
  6332                           	callstack 19
  6333                           
  6334                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;incstack = 0
  6338  004A54  0E00               	movlw	0
  6339  004A56  0100               	movlb	0	; () banked
  6340  004A58  6F74               	movwf	convert_to_int_point_long@j& (0+255),b
  6341                           
  6342                           ;fence.c: 463: for(i=0; i<10;i++)
  6343  004A5A  0E00               	movlw	0
  6344  004A5C  6F75               	movwf	convert_to_int_point_long@i& (0+255),b
  6345  004A5E                     l11121:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  6349  004A5E  0E00               	movlw	low _dado
  6350  004A60  2575               	addwf	convert_to_int_point_long@i& (0+255),w,b
  6351  004A62  6ED9               	movwf	fsr2l,c
  6352  004A64  6ADA               	clrf	fsr2h,c
  6353  004A66  0E01               	movlw	high _dado
  6354  004A68  22DA               	addwfc	fsr2h,f,c
  6355  004A6A  50DF               	movf	indf2,w,c
  6356  004A6C  B4D8               	btfsc	status,2,c
  6357  004A6E  D00D               	goto	l11127
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  6361  004A70  0E00               	movlw	low _dado
  6362  004A72  2575               	addwf	convert_to_int_point_long@i& (0+255),w,b
  6363  004A74  6ED9               	movwf	fsr2l,c
  6364  004A76  6ADA               	clrf	fsr2h,c
  6365  004A78  0E01               	movlw	high _dado
  6366  004A7A  22DA               	addwfc	fsr2h,f,c
  6367  004A7C  5174               	movf	convert_to_int_point_long@j& (0+255),w,b
  6368  004A7E  0F6A               	addlw	low convert_to_int_point_long@convert_str_long
  6369  004A80  6EE1               	movwf	fsr1l,c
  6370  004A82  6AE2               	clrf	fsr1h,c
  6371  004A84  CFDF FFE7          	movff	indf2,indf1
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;fence.c: 469: j++;
  6375  004A88  2B74               	incf	convert_to_int_point_long@j& (0+255),f,b
  6376  004A8A                     l11127:
  6377                           
  6378                           ; BSR set to: 0
  6379  004A8A  2B75               	incf	convert_to_int_point_long@i& (0+255),f,b
  6380                           
  6381                           ; BSR set to: 0
  6382  004A8C  0E09               	movlw	9
  6383  004A8E  6575               	cpfsgt	convert_to_int_point_long@i& (0+255),b
  6384  004A90  D7E6               	goto	l11121
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  6388  004A92  0E6A               	movlw	low convert_to_int_point_long@convert_str_long
  6389  004A94  6E26               	movwf	atol@s^0,c
  6390  004A96  6A27               	clrf	(atol@s+1)^0,c
  6391  004A98  EC40  F019         	call	_atol	;wreg free
  6392  004A9C  C026  F066         	movff	?_atol,?_convert_to_int_point_long
  6393  004AA0  C027  F067         	movff	?_atol+1,?_convert_to_int_point_long+1
  6394  004AA4  C028  F068         	movff	?_atol+2,?_convert_to_int_point_long+2
  6395  004AA8  C029  F069         	movff	?_atol+3,?_convert_to_int_point_long+3
  6396                           
  6397                           ; BSR set to: 0
  6398  004AAC  0012               	return		;funcret
  6399  004AAE                     __end_of_convert_to_int_point_long:
  6400                           	callstack 0
  6401                           
  6402 ;; *************** function _convert_to_int_point_lat *****************
  6403 ;; Defined at:
  6404 ;;		line 428 in file "bibliotecas/fence.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  convert_str_    9   10[BANK0 ] unsigned char [9]
  6409 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  6410 ;;		 -> NULL(0), 
  6411 ;;  i               1   22[BANK0 ] unsigned char 
  6412 ;;  j               1   21[BANK0 ] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  4    6[BANK0 ] long 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 3F/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6422 ;;      Params:         0       4       0       0       0       0       0       0       0
  6423 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6425 ;;      Totals:         0      17       0       0       0       0       0       0       0
  6426 ;;Total ram usage:       17 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    5
  6429 ;; This function calls:
  6430 ;;		_atol
  6431 ;; This function is called by:
  6432 ;;		_diferenca
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text35
  6437  004AAE                     __ptext35:
  6438                           	callstack 0
  6439  004AAE                     _convert_to_int_point_lat:
  6440                           	callstack 19
  6441                           
  6442                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;incstack = 0
  6446  004AAE  0E00               	movlw	0
  6447  004AB0  0100               	movlb	0	; () banked
  6448  004AB2  6F75               	movwf	convert_to_int_point_lat@j& (0+255),b
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;fence.c: 436: for(i=0; i<10;i++)
  6452  004AB4  0E00               	movlw	0
  6453  004AB6  6F76               	movwf	convert_to_int_point_lat@i& (0+255),b
  6454  004AB8                     l11095:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  6458  004AB8  0E00               	movlw	low _dado
  6459  004ABA  2576               	addwf	convert_to_int_point_lat@i& (0+255),w,b
  6460  004ABC  6ED9               	movwf	fsr2l,c
  6461  004ABE  6ADA               	clrf	fsr2h,c
  6462  004AC0  0E01               	movlw	high _dado
  6463  004AC2  22DA               	addwfc	fsr2h,f,c
  6464  004AC4  50DF               	movf	indf2,w,c
  6465  004AC6  B4D8               	btfsc	status,2,c
  6466  004AC8  D00D               	goto	l11101
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  6470  004ACA  0E00               	movlw	low _dado
  6471  004ACC  2576               	addwf	convert_to_int_point_lat@i& (0+255),w,b
  6472  004ACE  6ED9               	movwf	fsr2l,c
  6473  004AD0  6ADA               	clrf	fsr2h,c
  6474  004AD2  0E01               	movlw	high _dado
  6475  004AD4  22DA               	addwfc	fsr2h,f,c
  6476  004AD6  5175               	movf	convert_to_int_point_lat@j& (0+255),w,b
  6477  004AD8  0F6A               	addlw	low convert_to_int_point_lat@convert_str_lat
  6478  004ADA  6EE1               	movwf	fsr1l,c
  6479  004ADC  6AE2               	clrf	fsr1h,c
  6480  004ADE  CFDF FFE7          	movff	indf2,indf1
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;fence.c: 442: j++;
  6484  004AE2  2B75               	incf	convert_to_int_point_lat@j& (0+255),f,b
  6485  004AE4                     l11101:
  6486                           
  6487                           ; BSR set to: 0
  6488  004AE4  2B76               	incf	convert_to_int_point_lat@i& (0+255),f,b
  6489                           
  6490                           ; BSR set to: 0
  6491  004AE6  0E09               	movlw	9
  6492  004AE8  6576               	cpfsgt	convert_to_int_point_lat@i& (0+255),b
  6493  004AEA  D7E6               	goto	l11095
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  6497  004AEC  0E6A               	movlw	low convert_to_int_point_lat@convert_str_lat
  6498  004AEE  6E26               	movwf	atol@s^0,c
  6499  004AF0  6A27               	clrf	(atol@s+1)^0,c
  6500  004AF2  EC40  F019         	call	_atol	;wreg free
  6501  004AF6  C026  F066         	movff	?_atol,?_convert_to_int_point_lat
  6502  004AFA  C027  F067         	movff	?_atol+1,?_convert_to_int_point_lat+1
  6503  004AFE  C028  F068         	movff	?_atol+2,?_convert_to_int_point_lat+2
  6504  004B02  C029  F069         	movff	?_atol+3,?_convert_to_int_point_lat+3
  6505                           
  6506                           ; BSR set to: 0
  6507  004B06  0012               	return		;funcret
  6508  004B08                     __end_of_convert_to_int_point_lat:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function _convert_to_int *****************
  6512 ;; Defined at:
  6513 ;;		line 420 in file "bibliotecas/fence.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  p_buff          2    6[BANK0 ] PTR const unsigned char 
  6516 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4    6[BANK0 ] long 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 3F/0
  6525 ;;		On exit  : 3F/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6528 ;;      Params:         0       4       0       0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6531 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6532 ;;Total ram usage:        4 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    5
  6535 ;; This function calls:
  6536 ;;		_atol
  6537 ;; This function is called by:
  6538 ;;		_diferenca
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text36
  6543  005352                     __ptext36:
  6544                           	callstack 0
  6545  005352                     _convert_to_int:
  6546                           	callstack 19
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;fence.c: 423: p_buff++;
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;incstack = 0
  6553  005352  4B66               	infsnz	convert_to_int@p_buff& (0+255),f,b
  6554  005354  2B67               	incf	(convert_to_int@p_buff+1)& (0+255),f,b
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;fence.c: 424: return atol(p_buff);
  6558  005356  C066  F026         	movff	convert_to_int@p_buff,atol@s
  6559  00535A  C067  F027         	movff	convert_to_int@p_buff+1,atol@s+1
  6560  00535E  EC40  F019         	call	_atol	;wreg free
  6561  005362  C026  F066         	movff	?_atol,?_convert_to_int
  6562  005366  C027  F067         	movff	?_atol+1,?_convert_to_int+1
  6563  00536A  C028  F068         	movff	?_atol+2,?_convert_to_int+2
  6564  00536E  C029  F069         	movff	?_atol+3,?_convert_to_int+3
  6565                           
  6566                           ; BSR set to: 0
  6567  005372  0012               	return		;funcret
  6568  005374                     __end_of_convert_to_int:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _atol *****************
  6572 ;; Defined at:
  6573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  s               2   37[COMRAM] PTR const unsigned char 
  6576 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  a               4    1[BANK0 ] long 
  6579 ;;  c               1    5[BANK0 ] unsigned char 
  6580 ;;  sign            1    0[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  4   37[COMRAM] long 
  6583 ;; Registers used:
  6584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 3F/0
  6587 ;;		On exit  : 3F/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6590 ;;      Params:         4       0       0       0       0       0       0       0       0
  6591 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6592 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6593 ;;      Totals:         8       6       0       0       0       0       0       0       0
  6594 ;;Total ram usage:       14 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    4
  6597 ;; This function calls:
  6598 ;;		___lmul
  6599 ;;		_isdigit
  6600 ;; This function is called by:
  6601 ;;		_convert_to_int
  6602 ;;		_convert_to_int_point_lat
  6603 ;;		_convert_to_int_point_long
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text37
  6608  003280                     __ptext37:
  6609                           	callstack 0
  6610  003280                     _atol:
  6611                           	callstack 19
  6612                           
  6613                           ; BSR set to: 0
  6614                           
  6615                           ; BSR set to: 0
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;incstack = 0
  6619  003280  C026  FFF6         	movff	atol@s,tblptrl
  6620  003284  C027  FFF7         	movff	atol@s+1,tblptrh
  6621  003288  6AF8               	clrf	tblptru,c
  6622  00328A  0E07               	movlw	(high __ramtop+-1)
  6623  00328C  64F7               	cpfsgt	tblptrh,c
  6624  00328E  D003               	bra	u12277
  6625  003290  0008               	tblrd		*
  6626  003292  50F5               	movf	tablat,w,c
  6627  003294  D005               	bra	u12270
  6628  003296                     u12277:
  6629  003296  CFF6 FFE1          	movff	tblptrl,fsr1l
  6630  00329A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6631  00329E  50E7               	movf	indf1,w,c
  6632  0032A0                     u12270:
  6633  0032A0  0100               	movlb	0	; () banked
  6634  0032A2  6F65               	movwf	atol@c& (0+255),b
  6635                           
  6636                           ; BSR set to: 0
  6637  0032A4  4A26               	infsnz	atol@s^0,f,c
  6638  0032A6  2A27               	incf	(atol@s+1)^0,f,c
  6639                           
  6640                           ; BSR set to: 0
  6641  0032A8  0E20               	movlw	32
  6642  0032AA  1965               	xorwf	atol@c& (0+255),w,b
  6643  0032AC  B4D8               	btfsc	status,2,c
  6644  0032AE  D7E8               	goto	_atol
  6645                           
  6646                           ; BSR set to: 0
  6647  0032B0  0E09               	movlw	9
  6648  0032B2  1965               	xorwf	atol@c& (0+255),w,b
  6649  0032B4  B4D8               	btfsc	status,2,c
  6650  0032B6  D7E4               	goto	_atol
  6651                           
  6652                           ; BSR set to: 0
  6653  0032B8  0E00               	movlw	0
  6654  0032BA  6F61               	movwf	atol@a& (0+255),b
  6655  0032BC  0E00               	movlw	0
  6656  0032BE  6F62               	movwf	(atol@a+1)& (0+255),b
  6657  0032C0  0E00               	movlw	0
  6658  0032C2  6F63               	movwf	(atol@a+2)& (0+255),b
  6659  0032C4  0E00               	movlw	0
  6660  0032C6  6F64               	movwf	(atol@a+3)& (0+255),b
  6661  0032C8  0E00               	movlw	0
  6662  0032CA  6F60               	movwf	atol@sign& (0+255),b
  6663                           
  6664                           ; BSR set to: 0
  6665  0032CC  0E2D               	movlw	45
  6666  0032CE  1965               	xorwf	atol@c& (0+255),w,b
  6667  0032D0  A4D8               	btfss	status,2,c
  6668  0032D2  D016               	goto	l10809
  6669                           
  6670                           ; BSR set to: 0
  6671  0032D4  2B60               	incf	atol@sign& (0+255),f,b
  6672  0032D6                     l10805:
  6673                           
  6674                           ; BSR set to: 0
  6675  0032D6  C026  FFF6         	movff	atol@s,tblptrl
  6676  0032DA  C027  FFF7         	movff	atol@s+1,tblptrh
  6677  0032DE  6AF8               	clrf	tblptru,c
  6678  0032E0  0E07               	movlw	(high __ramtop+-1)
  6679  0032E2  64F7               	cpfsgt	tblptrh,c
  6680  0032E4  D003               	bra	u12317
  6681  0032E6  0008               	tblrd		*
  6682  0032E8  50F5               	movf	tablat,w,c
  6683  0032EA  D005               	bra	u12310
  6684  0032EC                     u12317:
  6685  0032EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6686  0032F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6687  0032F4  50E7               	movf	indf1,w,c
  6688  0032F6                     u12310:
  6689  0032F6  0100               	movlb	0	; () banked
  6690  0032F8  6F65               	movwf	atol@c& (0+255),b
  6691                           
  6692                           ; BSR set to: 0
  6693  0032FA  4A26               	infsnz	atol@s^0,f,c
  6694  0032FC  2A27               	incf	(atol@s+1)^0,f,c
  6695  0032FE  D029               	goto	l10821
  6696  003300                     l10809:
  6697                           
  6698                           ; BSR set to: 0
  6699  003300  0E2B               	movlw	43
  6700  003302  1965               	xorwf	atol@c& (0+255),w,b
  6701  003304  B4D8               	btfsc	status,2,c
  6702  003306  D7E7               	goto	l10805
  6703  003308  D024               	goto	l10821
  6704  00330A                     l10815:
  6705  00330A  C061  F01A         	movff	atol@a,___lmul@multiplier
  6706  00330E  C062  F01B         	movff	atol@a+1,___lmul@multiplier+1
  6707  003312  C063  F01C         	movff	atol@a+2,___lmul@multiplier+2
  6708  003316  C064  F01D         	movff	atol@a+3,___lmul@multiplier+3
  6709  00331A  0E0A               	movlw	10
  6710  00331C  6E1E               	movwf	___lmul@multiplicand^0,c
  6711  00331E  0E00               	movlw	0
  6712  003320  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
  6713  003322  0E00               	movlw	0
  6714  003324  6E20               	movwf	(___lmul@multiplicand+2)^0,c
  6715  003326  0E00               	movlw	0
  6716  003328  6E21               	movwf	(___lmul@multiplicand+3)^0,c
  6717  00332A  ECDE  F025         	call	___lmul	;wreg free
  6718  00332E  C065  F02A         	movff	atol@c,??_atol
  6719  003332  0ED0               	movlw	208
  6720  003334  262A               	addwf	??_atol^0,f,c
  6721  003336  502A               	movf	??_atol^0,w,c
  6722  003338  241A               	addwf	?___lmul^0,w,c
  6723  00333A  0100               	movlb	0	; () banked
  6724  00333C  6F61               	movwf	atol@a& (0+255),b
  6725  00333E  0E00               	movlw	0
  6726  003340  201B               	addwfc	(?___lmul+1)^0,w,c
  6727  003342  6F62               	movwf	(atol@a+1)& (0+255),b
  6728  003344  0E00               	movlw	0
  6729  003346  201C               	addwfc	(?___lmul+2)^0,w,c
  6730  003348  6F63               	movwf	(atol@a+2)& (0+255),b
  6731  00334A  0E00               	movlw	0
  6732  00334C  201D               	addwfc	(?___lmul+3)^0,w,c
  6733  00334E  6F64               	movwf	(atol@a+3)& (0+255),b
  6734  003350  D7C2               	goto	l10805
  6735  003352                     l10821:
  6736                           
  6737                           ; BSR set to: 0
  6738  003352  5165               	movf	atol@c& (0+255),w,b
  6739  003354  EC40  F02A         	call	_isdigit
  6740  003358  B0D8               	btfsc	status,0,c
  6741  00335A  D7D7               	goto	l10815
  6742  00335C  0100               	movlb	0	; () banked
  6743  00335E  5160               	movf	atol@sign& (0+255),w,b
  6744  003360  B4D8               	btfsc	status,2,c
  6745  003362  D01A               	goto	l2293
  6746                           
  6747                           ; BSR set to: 0
  6748  003364  C061  F02A         	movff	atol@a,??_atol
  6749  003368  C062  F02B         	movff	atol@a+1,??_atol+1
  6750  00336C  C063  F02C         	movff	atol@a+2,??_atol+2
  6751  003370  C064  F02D         	movff	atol@a+3,??_atol+3
  6752  003374  1E2A               	comf	??_atol^0,f,c
  6753  003376  1E2B               	comf	(??_atol+1)^0,f,c
  6754  003378  1E2C               	comf	(??_atol+2)^0,f,c
  6755  00337A  1E2D               	comf	(??_atol+3)^0,f,c
  6756  00337C  2A2A               	incf	??_atol^0,f,c
  6757  00337E  0E00               	movlw	0
  6758  003380  222B               	addwfc	(??_atol+1)^0,f,c
  6759  003382  222C               	addwfc	(??_atol+2)^0,f,c
  6760  003384  222D               	addwfc	(??_atol+3)^0,f,c
  6761  003386  C02A  F026         	movff	??_atol,?_atol
  6762  00338A  C02B  F027         	movff	??_atol+1,?_atol+1
  6763  00338E  C02C  F028         	movff	??_atol+2,?_atol+2
  6764  003392  C02D  F029         	movff	??_atol+3,?_atol+3
  6765  003396  0012               	return	
  6766  003398                     l2293:
  6767                           
  6768                           ; BSR set to: 0
  6769  003398  C061  F026         	movff	atol@a,?_atol
  6770  00339C  C062  F027         	movff	atol@a+1,?_atol+1
  6771  0033A0  C063  F028         	movff	atol@a+2,?_atol+2
  6772  0033A4  C064  F029         	movff	atol@a+3,?_atol+3
  6773                           
  6774                           ; BSR set to: 0
  6775  0033A8  0012               	return		;funcret
  6776  0033AA                     __end_of_atol:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function _isdigit *****************
  6780 ;; Defined at:
  6781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  c               1    wreg     unsigned char 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  c               1   27[COMRAM] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;		None               void
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0
  6796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6797 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6798 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6799 ;;Total ram usage:        3 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    3
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_atoi
  6806 ;;		_atol
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text38
  6811  005480                     __ptext38:
  6812                           	callstack 0
  6813  005480                     _isdigit:
  6814                           	callstack 19
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;incstack = 0
  6818                           ;isdigit@c stored from wreg
  6819  005480  6E1C               	movwf	isdigit@c^0,c
  6820  005482  0E00               	movlw	0
  6821  005484  6E1B               	movwf	_isdigit$3175^0,c
  6822  005486  0E3A               	movlw	58
  6823  005488  601C               	cpfslt	isdigit@c^0,c
  6824  00548A  D005               	goto	l10415
  6825  00548C  0E2F               	movlw	47
  6826  00548E  641C               	cpfsgt	isdigit@c^0,c
  6827  005490  D002               	goto	l10415
  6828  005492  0E01               	movlw	1
  6829  005494  6E1B               	movwf	_isdigit$3175^0,c
  6830  005496                     l10415:
  6831  005496  C01B  F01A         	movff	_isdigit$3175,??_isdigit
  6832  00549A  301A               	rrcf	??_isdigit^0,w,c
  6833  00549C  0012               	return		;funcret
  6834  00549E                     __end_of_isdigit:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _grava_sd *****************
  6838 ;; Defined at:
  6839 ;;		line 624 in file "main.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  flag_gps        1    0        unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/1
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0
  6854 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6856 ;;      Totals:         0       0       1       0       0       0       0       0       0
  6857 ;;Total ram usage:        1 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:   16
  6860 ;; This function calls:
  6861 ;;		_desliga_SPI
  6862 ;;		_desliga_uart
  6863 ;;		_escrita_sdcard
  6864 ;;		_inicializa_SPI
  6865 ;;		_inicializa_uart
  6866 ;; This function is called by:
  6867 ;;		_disparo_gravacao
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text39
  6872  0054F2                     __ptext39:
  6873                           	callstack 0
  6874  0054F2                     _grava_sd:
  6875                           	callstack 12
  6876                           
  6877                           ;main.c: 627: PORTBbits.RB3 = 0;
  6878                           
  6879                           ;incstack = 0
  6880  0054F2  9681               	bcf	129,3,c	;volatile
  6881                           
  6882                           ;main.c: 628: desliga_uart();
  6883  0054F4  ECBA  F02A         	call	_desliga_uart	;wreg free
  6884                           
  6885                           ;main.c: 629: inicializa_SPI();
  6886  0054F8  EC20  F02A         	call	_inicializa_SPI	;wreg free
  6887                           
  6888                           ;main.c: 630: escrita_sdcard();
  6889  0054FC  EC8F  F01C         	call	_escrita_sdcard	;wreg free
  6890                           
  6891                           ;main.c: 632: inicializa_uart();
  6892  005500  ECBA  F029         	call	_inicializa_uart	;wreg free
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;main.c: 633: desliga_SPI();
  6896  005504  ECD3  F02A         	call	_desliga_SPI	;wreg free
  6897                           
  6898                           ;main.c: 634: PORTBbits.RB3 = 1;
  6899  005508  8681               	bsf	129,3,c	;volatile
  6900  00550A  0012               	return		;funcret
  6901  00550C                     __end_of_grava_sd:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _inicializa_uart *****************
  6905 ;; Defined at:
  6906 ;;		line 206 in file "bibliotecas/uart.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/1
  6917 ;;		On exit  : 3F/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    5
  6927 ;; This function calls:
  6928 ;;		_configura_baudrate_uart
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;;		_grava_sd
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text40
  6936  005374                     __ptext40:
  6937                           	callstack 0
  6938  005374                     _inicializa_uart:
  6939                           	callstack 25
  6940                           
  6941                           ;uart.c: 208: TRISCbits.RC6 = 0;
  6942                           
  6943                           ;incstack = 0
  6944  005374  9C94               	bcf	148,6,c	;volatile
  6945                           
  6946                           ;uart.c: 209: TRISCbits.RC7 = 0;
  6947  005376  9E94               	bcf	148,7,c	;volatile
  6948                           
  6949                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  6950  005378  0E80               	movlw	128
  6951  00537A  6E28               	movwf	configura_baudrate_uart@baudrate^0,c
  6952  00537C  0E25               	movlw	37
  6953  00537E  6E29               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  6954  005380  0E00               	movlw	0
  6955  005382  6E2A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  6956  005384  0E00               	movlw	0
  6957  005386  6E2B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  6958  005388  EC86  F01B         	call	_configura_baudrate_uart	;wreg free
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;uart.c: 213: TXSTA = 0x20;
  6962  00538C  0E20               	movlw	32
  6963  00538E  6EAC               	movwf	172,c	;volatile
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;uart.c: 214: RCSTA = 0x90;
  6967  005390  0E90               	movlw	144
  6968  005392  6EAB               	movwf	171,c	;volatile
  6969                           
  6970                           ; BSR set to: 0
  6971  005394  0012               	return		;funcret
  6972  005396                     __end_of_inicializa_uart:
  6973                           	callstack 0
  6974                           
  6975 ;; *************** function _configura_baudrate_uart *****************
  6976 ;; Defined at:
  6977 ;;		line 50 in file "bibliotecas/uart.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  baudrate        4   39[COMRAM] const long 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  x               2   43[COMRAM] unsigned int 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/1
  6988 ;;		On exit  : 3F/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6991 ;;      Params:         4       0       0       0       0       0       0       0       0
  6992 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6993 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6994 ;;      Totals:         6       8       0       0       0       0       0       0       0
  6995 ;;Total ram usage:       14 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    4
  6998 ;; This function calls:
  6999 ;;		___aldiv
  7000 ;; This function is called by:
  7001 ;;		_inicializa_uart
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text41
  7006  00370C                     __ptext41:
  7007                           	callstack 0
  7008  00370C                     _configura_baudrate_uart:
  7009                           	callstack 25
  7010                           
  7011                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;incstack = 0
  7015  00370C  C028  F060         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7016  003710  C029  F061         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7017  003714  C02A  F062         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7018  003718  C02B  F063         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7019  00371C  0E06               	movlw	6
  7020  00371E                     u14415:
  7021  00371E  90D8               	bcf	status,0,c
  7022  003720  0100               	movlb	0	; () banked
  7023  003722  3760               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  7024  003724  3761               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  7025  003726  3762               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  7026  003728  3763               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  7027  00372A  2EE8               	decfsz	wreg,f,c
  7028  00372C  D7F8               	goto	u14415
  7029  00372E  5160               	movf	??_configura_baudrate_uart& (0+255),w,b
  7030  003730  0800               	sublw	0
  7031  003732  6E1A               	movwf	___aldiv@dividend^0,c
  7032  003734  0E6C               	movlw	108
  7033  003736  5561               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  7034  003738  6E1B               	movwf	(___aldiv@dividend+1)^0,c
  7035  00373A  0EDC               	movlw	220
  7036  00373C  5562               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  7037  00373E  6E1C               	movwf	(___aldiv@dividend+2)^0,c
  7038  003740  0E02               	movlw	2
  7039  003742  5563               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  7040  003744  6E1D               	movwf	(___aldiv@dividend+3)^0,c
  7041  003746  C028  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7042  00374A  C029  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7043  00374E  C02A  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7044  003752  C02B  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7045  003756  0E06               	movlw	6
  7046  003758                     u14425:
  7047  003758  90D8               	bcf	status,0,c
  7048  00375A  3764               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  7049  00375C  3765               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  7050  00375E  3766               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  7051  003760  3767               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  7052  003762  2EE8               	decfsz	wreg,f,c
  7053  003764  D7F9               	goto	u14425
  7054  003766  C064  F01E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  7055  00376A  C065  F01F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  7056  00376E  C066  F020         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  7057  003772  C067  F021         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  7058  003776  ECD6  F01E         	call	___aldiv	;wreg free
  7059  00377A  C01A  F02C         	movff	?___aldiv,configura_baudrate_uart@x
  7060  00377E  C01B  F02D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;uart.c: 55: if(x > 255)
  7064  003782  042D               	decf	(configura_baudrate_uart@x+1)^0,w,c
  7065  003784  A0D8               	btfss	status,0,c
  7066  003786  D03B               	goto	l12141
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  7070  003788  C028  F060         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  7071  00378C  C029  F061         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  7072  003790  C02A  F062         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  7073  003794  C02B  F063         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  7074  003798  0E04               	movlw	4
  7075  00379A                     u14445:
  7076  00379A  90D8               	bcf	status,0,c
  7077  00379C  3760               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  7078  00379E  3761               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  7079  0037A0  3762               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  7080  0037A2  3763               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  7081  0037A4  2EE8               	decfsz	wreg,f,c
  7082  0037A6  D7F9               	goto	u14445
  7083  0037A8  5160               	movf	??_configura_baudrate_uart& (0+255),w,b
  7084  0037AA  0800               	sublw	0
  7085  0037AC  6E1A               	movwf	___aldiv@dividend^0,c
  7086  0037AE  0E6C               	movlw	108
  7087  0037B0  5561               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  7088  0037B2  6E1B               	movwf	(___aldiv@dividend+1)^0,c
  7089  0037B4  0EDC               	movlw	220
  7090  0037B6  5562               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  7091  0037B8  6E1C               	movwf	(___aldiv@dividend+2)^0,c
  7092  0037BA  0E02               	movlw	2
  7093  0037BC  5563               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  7094  0037BE  6E1D               	movwf	(___aldiv@dividend+3)^0,c
  7095  0037C0  C028  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  7096  0037C4  C029  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  7097  0037C8  C02A  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  7098  0037CC  C02B  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  7099  0037D0  0E04               	movlw	4
  7100  0037D2                     u14455:
  7101  0037D2  90D8               	bcf	status,0,c
  7102  0037D4  3764               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  7103  0037D6  3765               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  7104  0037D8  3766               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  7105  0037DA  3767               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  7106  0037DC  2EE8               	decfsz	wreg,f,c
  7107  0037DE  D7F9               	goto	u14455
  7108  0037E0  C064  F01E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  7109  0037E4  C065  F01F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  7110  0037E8  C066  F020         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  7111  0037EC  C067  F021         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  7112  0037F0  ECD6  F01E         	call	___aldiv	;wreg free
  7113  0037F4  C01A  F02C         	movff	?___aldiv,configura_baudrate_uart@x
  7114  0037F8  C01B  F02D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;uart.c: 58: BRGH = 1;
  7118  0037FC  84AC               	bsf	4012,2,c	;volatile
  7119  0037FE                     l12141:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  7123  0037FE  042D               	decf	(configura_baudrate_uart@x+1)^0,w,c
  7124  003800  B0D8               	btfsc	status,0,c
  7125  003802  0012               	return	
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  7129  003804  C02C  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  7130                           
  7131                           ;uart.c: 63: SYNC = 0;
  7132  003808  98AC               	bcf	4012,4,c	;volatile
  7133                           
  7134                           ;uart.c: 64: SPEN = 1;
  7135  00380A  8EAB               	bsf	4011,7,c	;volatile
  7136                           
  7137                           ;uart.c: 65: TRISCbits.RC7 = 1;
  7138  00380C  8E94               	bsf	148,7,c	;volatile
  7139                           
  7140                           ;uart.c: 66: TRISCbits.RC6 = 0;
  7141  00380E  9C94               	bcf	148,6,c	;volatile
  7142                           
  7143                           ;uart.c: 67: CREN = 1;
  7144  003810  88AB               	bsf	4011,4,c	;volatile
  7145                           
  7146                           ;uart.c: 68: TXEN = 1;
  7147  003812  8AAC               	bsf	4012,5,c	;volatile
  7148                           
  7149                           ; BSR set to: 0
  7150                           
  7151                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  7152  003814  0012               	return		;funcret
  7153  003816                     __end_of_configura_baudrate_uart:
  7154                           	callstack 0
  7155                           
  7156 ;; *************** function ___aldiv *****************
  7157 ;; Defined at:
  7158 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  dividend        4   25[COMRAM] long 
  7161 ;;  divisor         4   29[COMRAM] long 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  quotient        4   35[COMRAM] long 
  7164 ;;  sign            1   34[COMRAM] unsigned char 
  7165 ;;  counter         1   33[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  4   25[COMRAM] long 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 3F/0
  7172 ;;		On exit  : 3F/0
  7173 ;;		Unchanged: 3F/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7175 ;;      Params:         8       0       0       0       0       0       0       0       0
  7176 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7178 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7179 ;;Total ram usage:       14 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    3
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_configura_baudrate_uart
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text42
  7190  003DAC                     __ptext42:
  7191                           	callstack 0
  7192  003DAC                     ___aldiv:
  7193                           	callstack 25
  7194                           
  7195                           ; BSR set to: 0
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;incstack = 0
  7199  003DAC  0E00               	movlw	0
  7200  003DAE  6E23               	movwf	___aldiv@sign^0,c
  7201                           
  7202                           ; BSR set to: 0
  7203  003DB0  AE21               	btfss	(___aldiv@divisor+3)^0,7,c
  7204  003DB2  D00A               	goto	l11627
  7205                           
  7206                           ; BSR set to: 0
  7207  003DB4  1E21               	comf	(___aldiv@divisor+3)^0,f,c
  7208  003DB6  1E20               	comf	(___aldiv@divisor+2)^0,f,c
  7209  003DB8  1E1F               	comf	(___aldiv@divisor+1)^0,f,c
  7210  003DBA  6C1E               	negf	___aldiv@divisor^0,c
  7211  003DBC  0E00               	movlw	0
  7212  003DBE  221F               	addwfc	(___aldiv@divisor+1)^0,f,c
  7213  003DC0  2220               	addwfc	(___aldiv@divisor+2)^0,f,c
  7214  003DC2  2221               	addwfc	(___aldiv@divisor+3)^0,f,c
  7215                           
  7216                           ; BSR set to: 0
  7217  003DC4  0E01               	movlw	1
  7218  003DC6  6E23               	movwf	___aldiv@sign^0,c
  7219  003DC8                     l11627:
  7220                           
  7221                           ; BSR set to: 0
  7222  003DC8  AE1D               	btfss	(___aldiv@dividend+3)^0,7,c
  7223  003DCA  D00A               	goto	l11633
  7224                           
  7225                           ; BSR set to: 0
  7226  003DCC  1E1D               	comf	(___aldiv@dividend+3)^0,f,c
  7227  003DCE  1E1C               	comf	(___aldiv@dividend+2)^0,f,c
  7228  003DD0  1E1B               	comf	(___aldiv@dividend+1)^0,f,c
  7229  003DD2  6C1A               	negf	___aldiv@dividend^0,c
  7230  003DD4  0E00               	movlw	0
  7231  003DD6  221B               	addwfc	(___aldiv@dividend+1)^0,f,c
  7232  003DD8  221C               	addwfc	(___aldiv@dividend+2)^0,f,c
  7233  003DDA  221D               	addwfc	(___aldiv@dividend+3)^0,f,c
  7234                           
  7235                           ; BSR set to: 0
  7236  003DDC  0E01               	movlw	1
  7237  003DDE  1A23               	xorwf	___aldiv@sign^0,f,c
  7238  003DE0                     l11633:
  7239                           
  7240                           ; BSR set to: 0
  7241  003DE0  0E00               	movlw	0
  7242  003DE2  6E24               	movwf	___aldiv@quotient^0,c
  7243  003DE4  0E00               	movlw	0
  7244  003DE6  6E25               	movwf	(___aldiv@quotient+1)^0,c
  7245  003DE8  0E00               	movlw	0
  7246  003DEA  6E26               	movwf	(___aldiv@quotient+2)^0,c
  7247  003DEC  0E00               	movlw	0
  7248  003DEE  6E27               	movwf	(___aldiv@quotient+3)^0,c
  7249                           
  7250                           ; BSR set to: 0
  7251  003DF0  501E               	movf	___aldiv@divisor^0,w,c
  7252  003DF2  101F               	iorwf	(___aldiv@divisor+1)^0,w,c
  7253  003DF4  1020               	iorwf	(___aldiv@divisor+2)^0,w,c
  7254  003DF6  1021               	iorwf	(___aldiv@divisor+3)^0,w,c
  7255  003DF8  B4D8               	btfsc	status,2,c
  7256  003DFA  D02A               	goto	l11655
  7257                           
  7258                           ; BSR set to: 0
  7259  003DFC  0E01               	movlw	1
  7260  003DFE  6E22               	movwf	___aldiv@counter^0,c
  7261  003E00  D006               	goto	l11641
  7262  003E02                     l11639:
  7263                           
  7264                           ; BSR set to: 0
  7265  003E02  90D8               	bcf	status,0,c
  7266  003E04  361E               	rlcf	___aldiv@divisor^0,f,c
  7267  003E06  361F               	rlcf	(___aldiv@divisor+1)^0,f,c
  7268  003E08  3620               	rlcf	(___aldiv@divisor+2)^0,f,c
  7269  003E0A  3621               	rlcf	(___aldiv@divisor+3)^0,f,c
  7270  003E0C  2A22               	incf	___aldiv@counter^0,f,c
  7271  003E0E                     l11641:
  7272                           
  7273                           ; BSR set to: 0
  7274  003E0E  AE21               	btfss	(___aldiv@divisor+3)^0,7,c
  7275  003E10  D7F8               	goto	l11639
  7276  003E12                     u13630:
  7277                           
  7278                           ; BSR set to: 0
  7279  003E12  90D8               	bcf	status,0,c
  7280  003E14  3624               	rlcf	___aldiv@quotient^0,f,c
  7281  003E16  3625               	rlcf	(___aldiv@quotient+1)^0,f,c
  7282  003E18  3626               	rlcf	(___aldiv@quotient+2)^0,f,c
  7283  003E1A  3627               	rlcf	(___aldiv@quotient+3)^0,f,c
  7284                           
  7285                           ; BSR set to: 0
  7286  003E1C  501E               	movf	___aldiv@divisor^0,w,c
  7287  003E1E  5C1A               	subwf	___aldiv@dividend^0,w,c
  7288  003E20  501F               	movf	(___aldiv@divisor+1)^0,w,c
  7289  003E22  581B               	subwfb	(___aldiv@dividend+1)^0,w,c
  7290  003E24  5020               	movf	(___aldiv@divisor+2)^0,w,c
  7291  003E26  581C               	subwfb	(___aldiv@dividend+2)^0,w,c
  7292  003E28  5021               	movf	(___aldiv@divisor+3)^0,w,c
  7293  003E2A  581D               	subwfb	(___aldiv@dividend+3)^0,w,c
  7294  003E2C  A0D8               	btfss	status,0,c
  7295  003E2E  D009               	goto	l11651
  7296                           
  7297                           ; BSR set to: 0
  7298  003E30  501E               	movf	___aldiv@divisor^0,w,c
  7299  003E32  5E1A               	subwf	___aldiv@dividend^0,f,c
  7300  003E34  501F               	movf	(___aldiv@divisor+1)^0,w,c
  7301  003E36  5A1B               	subwfb	(___aldiv@dividend+1)^0,f,c
  7302  003E38  5020               	movf	(___aldiv@divisor+2)^0,w,c
  7303  003E3A  5A1C               	subwfb	(___aldiv@dividend+2)^0,f,c
  7304  003E3C  5021               	movf	(___aldiv@divisor+3)^0,w,c
  7305  003E3E  5A1D               	subwfb	(___aldiv@dividend+3)^0,f,c
  7306                           
  7307                           ; BSR set to: 0
  7308  003E40  8024               	bsf	___aldiv@quotient^0,0,c
  7309  003E42                     l11651:
  7310                           
  7311                           ; BSR set to: 0
  7312  003E42  90D8               	bcf	status,0,c
  7313  003E44  3221               	rrcf	(___aldiv@divisor+3)^0,f,c
  7314  003E46  3220               	rrcf	(___aldiv@divisor+2)^0,f,c
  7315  003E48  321F               	rrcf	(___aldiv@divisor+1)^0,f,c
  7316  003E4A  321E               	rrcf	___aldiv@divisor^0,f,c
  7317                           
  7318                           ; BSR set to: 0
  7319  003E4C  2E22               	decfsz	___aldiv@counter^0,f,c
  7320  003E4E  D7E1               	goto	u13630
  7321  003E50                     l11655:
  7322                           
  7323                           ; BSR set to: 0
  7324  003E50  5023               	movf	___aldiv@sign^0,w,c
  7325  003E52  B4D8               	btfsc	status,2,c
  7326  003E54  D008               	goto	l11659
  7327                           
  7328                           ; BSR set to: 0
  7329  003E56  1E27               	comf	(___aldiv@quotient+3)^0,f,c
  7330  003E58  1E26               	comf	(___aldiv@quotient+2)^0,f,c
  7331  003E5A  1E25               	comf	(___aldiv@quotient+1)^0,f,c
  7332  003E5C  6C24               	negf	___aldiv@quotient^0,c
  7333  003E5E  0E00               	movlw	0
  7334  003E60  2225               	addwfc	(___aldiv@quotient+1)^0,f,c
  7335  003E62  2226               	addwfc	(___aldiv@quotient+2)^0,f,c
  7336  003E64  2227               	addwfc	(___aldiv@quotient+3)^0,f,c
  7337  003E66                     l11659:
  7338                           
  7339                           ; BSR set to: 0
  7340  003E66  C024  F01A         	movff	___aldiv@quotient,?___aldiv
  7341  003E6A  C025  F01B         	movff	___aldiv@quotient+1,?___aldiv+1
  7342  003E6E  C026  F01C         	movff	___aldiv@quotient+2,?___aldiv+2
  7343  003E72  C027  F01D         	movff	___aldiv@quotient+3,?___aldiv+3
  7344                           
  7345                           ; BSR set to: 0
  7346  003E76  0012               	return		;funcret
  7347  003E78                     __end_of___aldiv:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _inicializa_SPI *****************
  7351 ;; Defined at:
  7352 ;;		line 48 in file "bibliotecas/SPI.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/1
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    3
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_grava_sd
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text43
  7381  005440                     __ptext43:
  7382                           	callstack 0
  7383  005440                     _inicializa_SPI:
  7384                           	callstack 24
  7385                           
  7386                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;incstack = 0
  7390  005440  9293               	bcf	147,1,c	;volatile
  7391                           
  7392                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  7393  005442  9A93               	bcf	147,5,c	;volatile
  7394                           
  7395                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  7396  005444  8093               	bsf	147,0,c	;volatile
  7397                           
  7398                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  7399  005446  9E94               	bcf	148,7,c	;volatile
  7400                           
  7401                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  7402  005448  8A8A               	bsf	138,5,c	;volatile
  7403                           
  7404                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  7405  00544A  0E3F               	movlw	63
  7406  00544C  16C7               	andwf	199,f,c	;volatile
  7407                           
  7408                           ;SPI.c: 57: SSPCON1 = 0x00;
  7409  00544E  0E00               	movlw	0
  7410  005450  6EC6               	movwf	198,c	;volatile
  7411                           
  7412                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  7413  005452  9EC7               	bcf	199,7,c	;volatile
  7414                           
  7415                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  7416  005454  8CC7               	bsf	199,6,c	;volatile
  7417                           
  7418                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  7419  005456  98C6               	bcf	198,4,c	;volatile
  7420                           
  7421                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  7422  005458  0E03               	movlw	3
  7423  00545A  6EC6               	movwf	198,c	;volatile
  7424                           
  7425                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  7426  00545C  8AC6               	bsf	198,5,c	;volatile
  7427  00545E  0012               	return		;funcret
  7428  005460                     __end_of_inicializa_SPI:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _escrita_sdcard *****************
  7432 ;; Defined at:
  7433 ;;		line 207 in file "bibliotecas/SDCard.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  fix_gps         3    0        PTR unsigned char 
  7438 ;;  bw              2    0        unsigned short 
  7439 ;;  j               1    0        unsigned char 
  7440 ;;  i               1    0        unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/1
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7454 ;;Total ram usage:        0 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:   15
  7457 ;; This function calls:
  7458 ;;		_dados_gps_to_sd
  7459 ;;		_data_nome
  7460 ;;		_f_close
  7461 ;;		_f_lseek
  7462 ;;		_f_mount
  7463 ;;		_f_open
  7464 ;;		_fprintf
  7465 ;;		_hora_nome
  7466 ;;		_strcat
  7467 ;; This function is called by:
  7468 ;;		_grava_sd
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text44
  7473  00391E                     __ptext44:
  7474                           	callstack 0
  7475  00391E                     _escrita_sdcard:
  7476                           	callstack 12
  7477                           
  7478                           ;SDCard.c: 209: unsigned char *fix_gps;;SDCard.c: 210: unsigned char i, j;;SDCard.c: 211
      +                          : static unsigned char f_fix = 0;;SDCard.c: 212: WORD bw;;SDCard.c: 213: PORTBbits.RB3 =
      +                           0;
  7479                           
  7480                           ;incstack = 0
  7481  00391E  9681               	bcf	129,3,c	;volatile
  7482                           
  7483                           ;SDCard.c: 216: dados_gps_to_sd();
  7484  003920  EC09  F026         	call	_dados_gps_to_sd	;wreg free
  7485                           
  7486                           ;SDCard.c: 217: f_mount(0,&fs);
  7487  003924  0E60               	movlw	low _fs
  7488  003926  6E1A               	movwf	f_mount@fs^0,c
  7489  003928  0E02               	movlw	high _fs
  7490  00392A  6E1B               	movwf	(f_mount@fs+1)^0,c
  7491  00392C  0E00               	movlw	0
  7492  00392E  EC49  F027         	call	_f_mount
  7493                           
  7494                           ;SDCard.c: 221: if(!f_fix)
  7495  003932  503F               	movf	escrita_sdcard@f_fix^0,w,c
  7496  003934  A4D8               	btfss	status,2,c
  7497  003936  D021               	goto	l12255
  7498                           
  7499                           ;SDCard.c: 222: {;SDCard.c: 224: if(string_dado.data_name[0] != ' ' && string_dado.hora_
      +                          name[0] != ' ')
  7500  003938  0E20               	movlw	32
  7501  00393A  0102               	movlb	2	; () banked
  7502  00393C  1912               	xorwf	(_string_dado+18)& (0+255),w,b
  7503  00393E  B4D8               	btfsc	status,2,c
  7504  003940  D01C               	goto	l12255
  7505                           
  7506                           ; BSR set to: 2
  7507  003942  0E20               	movlw	32
  7508  003944  1914               	xorwf	(_string_dado+20)& (0+255),w,b
  7509  003946  B4D8               	btfsc	status,2,c
  7510  003948  D018               	goto	l12255
  7511                           
  7512                           ; BSR set to: 2
  7513                           ;SDCard.c: 225: {;SDCard.c: 226: data_nome(string_dado.data);
  7514  00394A  0E00               	movlw	low _string_dado
  7515  00394C  6E1A               	movwf	data_nome@p_buff^0,c
  7516  00394E  0E02               	movlw	high _string_dado
  7517  003950  6E1B               	movwf	(data_nome@p_buff+1)^0,c
  7518  003952  EC21  F029         	call	_data_nome	;wreg free
  7519                           
  7520                           ;SDCard.c: 227: hora_nome(string_dado.hora);
  7521  003956  0E07               	movlw	low (_string_dado+7)
  7522  003958  6E1A               	movwf	hora_nome@p_buff^0,c
  7523  00395A  0E02               	movlw	high (_string_dado+7)
  7524  00395C  6E1B               	movwf	(hora_nome@p_buff+1)^0,c
  7525  00395E  ECF7  F028         	call	_hora_nome	;wreg free
  7526                           
  7527                           ; BSR set to: 2
  7528                           ;SDCard.c: 229: strcat(filename, ".tlm");
  7529  003962  0E7D               	movlw	low _filename
  7530  003964  6E1A               	movwf	strcat@to^0,c
  7531  003966  0E01               	movlw	high _filename
  7532  003968  6E1B               	movwf	(strcat@to+1)^0,c
  7533  00396A  0E69               	movlw	low STR_13
  7534  00396C  6E1C               	movwf	strcat@from^0,c
  7535  00396E  0E62               	movlw	high STR_13
  7536  003970  6E1D               	movwf	(strcat@from+1)^0,c
  7537  003972  EC91  F027         	call	_strcat	;wreg free
  7538                           
  7539                           ; BSR set to: 2
  7540                           ;SDCard.c: 230: f_fix = 1;
  7541  003976  0E01               	movlw	1
  7542  003978  6E3F               	movwf	escrita_sdcard@f_fix^0,c
  7543  00397A                     l12255:
  7544                           
  7545                           ;SDCard.c: 231: };SDCard.c: 234: };SDCard.c: 235: if(f_fix)
  7546  00397A  503F               	movf	escrita_sdcard@f_fix^0,w,c
  7547  00397C  B4D8               	btfsc	status,2,c
  7548  00397E  D051               	goto	l12269
  7549                           
  7550                           ;SDCard.c: 236: {;SDCard.c: 238: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  7551  003980  0E4D               	movlw	low _fil
  7552  003982  0100               	movlb	0	; () banked
  7553  003984  6FC4               	movwf	f_open@fp& (0+255),b
  7554  003986  0E01               	movlw	high _fil
  7555  003988  6FC5               	movwf	(f_open@fp+1)& (0+255),b
  7556  00398A  0E7D               	movlw	low _filename
  7557  00398C  6FC6               	movwf	f_open@path& (0+255),b
  7558  00398E  0E01               	movlw	high _filename
  7559  003990  6FC7               	movwf	(f_open@path+1)& (0+255),b
  7560  003992  0E02               	movlw	2
  7561  003994  6FC8               	movwf	f_open@mode& (0+255),b
  7562  003996  EC7A  F009         	call	_f_open	;wreg free
  7563  00399A  0900               	iorlw	0
  7564  00399C  A4D8               	btfss	status,2,c
  7565  00399E  D034               	goto	l12265
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;SDCard.c: 239: {;SDCard.c: 241: f_lseek(&fil, ((&fil)->fsize));
  7569  0039A0  0E4D               	movlw	low _fil
  7570  0039A2  6FB2               	movwf	f_lseek@fp& (0+255),b
  7571  0039A4  0E01               	movlw	high _fil
  7572  0039A6  6FB3               	movwf	(f_lseek@fp+1)& (0+255),b
  7573  0039A8  C157  F0B4         	movff	_fil+10,f_lseek@ofs
  7574  0039AC  C158  F0B5         	movff	_fil+11,f_lseek@ofs+1
  7575  0039B0  C159  F0B6         	movff	_fil+12,f_lseek@ofs+2
  7576  0039B4  C15A  F0B7         	movff	_fil+13,f_lseek@ofs+3
  7577  0039B8  EC75  F005         	call	_f_lseek	;wreg free
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;SDCard.c: 242: fprintf(&fil, "v%s;lt%s;lo%s;r0;c0;k0;h%s;dN/A;f%s;\n", string_dado.vel,
      +                           string_dado.lt, string_dado.lo, string_dado.hora, string_dado.fence);
  7581  0039BC  0E4D               	movlw	low _fil
  7582  0039BE  6FDE               	movwf	fprintf@fil& (0+255),b
  7583  0039C0  0E01               	movlw	high _fil
  7584  0039C2  6FDF               	movwf	(fprintf@fil+1)& (0+255),b
  7585  0039C4  0E77               	movlw	low STR_14
  7586  0039C6  6FE0               	movwf	fprintf@str& (0+255),b
  7587  0039C8  0E61               	movlw	high STR_14
  7588  0039CA  6FE1               	movwf	(fprintf@str+1)& (0+255),b
  7589  0039CC  0E30               	movlw	low (_string_dado+48)
  7590  0039CE  6FE2               	movwf	(?_fprintf+4)& (0+255),b
  7591  0039D0  0E02               	movlw	high (_string_dado+48)
  7592  0039D2  6FE3               	movwf	(?_fprintf+5)& (0+255),b
  7593  0039D4  0E16               	movlw	low (_string_dado+22)
  7594  0039D6  6FE4               	movwf	(?_fprintf+6)& (0+255),b
  7595  0039D8  0E02               	movlw	high (_string_dado+22)
  7596  0039DA  6FE5               	movwf	(?_fprintf+7)& (0+255),b
  7597  0039DC  0E23               	movlw	low (_string_dado+35)
  7598  0039DE  6FE6               	movwf	(?_fprintf+8)& (0+255),b
  7599  0039E0  0E02               	movlw	high (_string_dado+35)
  7600  0039E2  6FE7               	movwf	(?_fprintf+9)& (0+255),b
  7601  0039E4  0E07               	movlw	low (_string_dado+7)
  7602  0039E6  6FE8               	movwf	(?_fprintf+10)& (0+255),b
  7603  0039E8  0E02               	movlw	high (_string_dado+7)
  7604  0039EA  6FE9               	movwf	(?_fprintf+11)& (0+255),b
  7605  0039EC  0E34               	movlw	low (_string_dado+52)
  7606  0039EE  6FEA               	movwf	(?_fprintf+12)& (0+255),b
  7607  0039F0  0E02               	movlw	high (_string_dado+52)
  7608  0039F2  6FEB               	movwf	(?_fprintf+13)& (0+255),b
  7609  0039F4  ECBA  F007         	call	_fprintf	;wreg free
  7610  0039F8                     l12263:
  7611                           
  7612                           ;SDCard.c: 244: f_close(&fil);
  7613  0039F8  0E4D               	movlw	low _fil
  7614  0039FA  0100               	movlb	0	; () banked
  7615  0039FC  6F95               	movwf	f_close@fp& (0+255),b
  7616  0039FE  0E01               	movlw	high _fil
  7617  003A00  6F96               	movwf	(f_close@fp+1)& (0+255),b
  7618  003A02  EC0C  F029         	call	_f_close	;wreg free
  7619                           
  7620                           ;SDCard.c: 245: }
  7621  003A06  D00D               	goto	l12269
  7622  003A08                     l12265:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;SDCard.c: 246: else;SDCard.c: 247: {;SDCard.c: 248: f_open(&fil, filename, 0x08 );
  7626  003A08  0E4D               	movlw	low _fil
  7627  003A0A  6FC4               	movwf	f_open@fp& (0+255),b
  7628  003A0C  0E01               	movlw	high _fil
  7629  003A0E  6FC5               	movwf	(f_open@fp+1)& (0+255),b
  7630  003A10  0E7D               	movlw	low _filename
  7631  003A12  6FC6               	movwf	f_open@path& (0+255),b
  7632  003A14  0E01               	movlw	high _filename
  7633  003A16  6FC7               	movwf	(f_open@path+1)& (0+255),b
  7634  003A18  0E08               	movlw	8
  7635  003A1A  6FC8               	movwf	f_open@mode& (0+255),b
  7636  003A1C  EC7A  F009         	call	_f_open	;wreg free
  7637  003A20  D7EB               	goto	l12263
  7638  003A22                     l12269:
  7639                           
  7640                           ;SDCard.c: 251: };SDCard.c: 252: };SDCard.c: 253: PORTBbits.RB3 = 1;
  7641  003A22  8681               	bsf	129,3,c	;volatile
  7642  003A24  0012               	return		;funcret
  7643  003A26                     __end_of_escrita_sdcard:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function _strcat *****************
  7647 ;; Defined at:
  7648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  to              2   25[COMRAM] PTR unsigned char 
  7651 ;;		 -> filename(20), 
  7652 ;;  from            2   27[COMRAM] PTR const unsigned char 
  7653 ;;		 -> STR_13(5), 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  cp              2   29[COMRAM] PTR unsigned char 
  7656 ;;		 -> filename(20), 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  2   25[COMRAM] PTR unsigned char 
  7659 ;; Registers used:
  7660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7661 ;; Tracked objects:
  7662 ;;		On entry : 3F/2
  7663 ;;		On exit  : 3F/2
  7664 ;;		Unchanged: 3F/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7666 ;;      Params:         4       0       0       0       0       0       0       0       0
  7667 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7669 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7670 ;;Total ram usage:        6 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    3
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_escrita_sdcard
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text45
  7681  004F22                     __ptext45:
  7682                           	callstack 0
  7683  004F22                     _strcat:
  7684                           	callstack 23
  7685                           
  7686                           ; BSR set to: 2
  7687                           
  7688                           ;incstack = 0
  7689  004F22  C01A  F01E         	movff	strcat@to,strcat@cp
  7690  004F26  C01B  F01F         	movff	strcat@to+1,strcat@cp+1
  7691  004F2A  D002               	goto	l11891
  7692  004F2C                     l11889:
  7693                           
  7694                           ; BSR set to: 2
  7695  004F2C  4A1E               	infsnz	strcat@cp^0,f,c
  7696  004F2E  2A1F               	incf	(strcat@cp+1)^0,f,c
  7697  004F30                     l11891:
  7698                           
  7699                           ; BSR set to: 2
  7700  004F30  C01E  FFD9         	movff	strcat@cp,fsr2l
  7701  004F34  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  7702  004F38  50DF               	movf	indf2,w,c
  7703  004F3A  B4D8               	btfsc	status,2,c
  7704  004F3C  D005               	goto	l11895
  7705  004F3E  D7F6               	goto	l11889
  7706  004F40                     l11893:
  7707                           
  7708                           ; BSR set to: 2
  7709  004F40  4A1E               	infsnz	strcat@cp^0,f,c
  7710  004F42  2A1F               	incf	(strcat@cp+1)^0,f,c
  7711  004F44  4A1C               	infsnz	strcat@from^0,f,c
  7712  004F46  2A1D               	incf	(strcat@from+1)^0,f,c
  7713  004F48                     l11895:
  7714                           
  7715                           ; BSR set to: 2
  7716  004F48  C01C  FFF6         	movff	strcat@from,tblptrl
  7717  004F4C  C01D  FFF7         	movff	strcat@from+1,tblptrh
  7718  004F50                     	if	0	;tblptru may be non-zero
  7719  004F50                     	endif
  7720  004F50                     	if	0	;tblptru may be non-zero
  7721  004F50                     	endif
  7722  004F50  C01E  FFD9         	movff	strcat@cp,fsr2l
  7723  004F54  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  7724  004F58  0008               	tblrd		*
  7725  004F5A  CFF5 FFDF          	movff	tablat,indf2
  7726  004F5E  50DF               	movf	indf2,w,c
  7727  004F60  B4D8               	btfsc	status,2,c
  7728  004F62  0012               	return	
  7729  004F64  D7ED               	goto	l11893
  7730  004F66                     __end_of_strcat:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _hora_nome *****************
  7734 ;; Defined at:
  7735 ;;		line 397 in file "bibliotecas/SDCard.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  p_buff          2   25[COMRAM] PTR unsigned char 
  7738 ;;		 -> string_dado(62), 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  i               1   27[COMRAM] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 3F/2
  7747 ;;		On exit  : 3F/2
  7748 ;;		Unchanged: 3F/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7750 ;;      Params:         2       0       0       0       0       0       0       0       0
  7751 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7753 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7754 ;;Total ram usage:        3 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    3
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_escrita_sdcard
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text46
  7765  0051EE                     __ptext46:
  7766                           	callstack 0
  7767  0051EE                     _hora_nome:
  7768                           	callstack 23
  7769                           
  7770                           ; BSR set to: 2
  7771                           ;SDCard.c: 399: unsigned char i;;SDCard.c: 400: for(i=4; i<8;i++)
  7772                           
  7773                           ; BSR set to: 2
  7774                           ;incstack = 0
  7775  0051EE  0E04               	movlw	4
  7776  0051F0  6E1C               	movwf	hora_nome@i^0,c
  7777  0051F2                     l11879:
  7778                           
  7779                           ; BSR set to: 2
  7780                           ;SDCard.c: 401: {;SDCard.c: 402: filename[i] = *p_buff;
  7781  0051F2  C01A  FFD9         	movff	hora_nome@p_buff,fsr2l
  7782  0051F6  C01B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  7783  0051FA  0E7D               	movlw	low _filename
  7784  0051FC  241C               	addwf	hora_nome@i^0,w,c
  7785  0051FE  6EE1               	movwf	fsr1l,c
  7786  005200  6AE2               	clrf	fsr1h,c
  7787  005202  0E01               	movlw	high _filename
  7788  005204  22E2               	addwfc	fsr1h,f,c
  7789  005206  CFDF FFE7          	movff	indf2,indf1
  7790                           
  7791                           ; BSR set to: 2
  7792                           ;SDCard.c: 403: p_buff++;
  7793  00520A  4A1A               	infsnz	hora_nome@p_buff^0,f,c
  7794  00520C  2A1B               	incf	(hora_nome@p_buff+1)^0,f,c
  7795                           
  7796                           ; BSR set to: 2
  7797  00520E  2A1C               	incf	hora_nome@i^0,f,c
  7798                           
  7799                           ; BSR set to: 2
  7800  005210  0E07               	movlw	7
  7801  005212  641C               	cpfsgt	hora_nome@i^0,c
  7802  005214  D7EE               	goto	l11879
  7803  005216  0012               	return	
  7804  005218                     __end_of_hora_nome:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _fprintf *****************
  7808 ;; Defined at:
  7809 ;;		line 1816 in file "bibliotecas/tff.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  fil             2  126[BANK0 ] PTR struct _FIL
  7812 ;;		 -> fil(28), 
  7813 ;;  str             2  128[BANK0 ] PTR const unsigned char 
  7814 ;;		 -> STR_14(38), 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  s              16    0[BANK2 ] unsigned char [16]
  7817 ;;  val             4   24[BANK2 ] unsigned long 
  7818 ;;  i               2   31[BANK2 ] int 
  7819 ;;  cc              2   29[BANK2 ] int 
  7820 ;;  w               2   20[BANK2 ] int 
  7821 ;;  res             2   16[BANK2 ] int 
  7822 ;;  c               1   33[BANK2 ] unsigned char 
  7823 ;;  arp             1   28[BANK2 ] PTR void [1]
  7824 ;;		 -> ?_fprintf(2), 
  7825 ;;  r               1   23[BANK2 ] unsigned char 
  7826 ;;  f               1   22[BANK2 ] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  2  126[BANK0 ] int 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 3F/0
  7833 ;;		On exit  : 3F/2
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7836 ;;      Params:         0      14       0       0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0      34       0       0       0       0       0
  7838 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7839 ;;      Totals:         0      16       0      34       0       0       0       0       0
  7840 ;;Total ram usage:       50 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:   14
  7843 ;; This function calls:
  7844 ;;		___lldiv
  7845 ;;		___llmod
  7846 ;;		___wmul
  7847 ;;		_fputc
  7848 ;;		_fputs
  7849 ;; This function is called by:
  7850 ;;		_escrita_sdcard
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text47
  7855  000F74                     __ptext47:
  7856                           	callstack 0
  7857  000F74                     _fprintf:
  7858                           	callstack 12
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  7862                           
  7863                           ; BSR set to: 2
  7864                           ;incstack = 0
  7865  000F74  0EE2               	movlw	low (?_fprintf+4)
  7866  000F76  0102               	movlb	2	; () banked
  7867  000F78  6F5A               	movwf	fprintf@arp& (0+255),b
  7868                           
  7869                           ; BSR set to: 2
  7870                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  7871  000F7A  0E00               	movlw	0
  7872  000F7C  6F4F               	movwf	(fprintf@res+1)& (0+255),b
  7873  000F7E  0E00               	movlw	0
  7874  000F80  6F4E               	movwf	fprintf@res& (0+255),b
  7875  000F82  C24E  F25B         	movff	fprintf@res,fprintf@cc
  7876  000F86  C24F  F25C         	movff	fprintf@res+1,fprintf@cc+1
  7877  000F8A                     l11981:
  7878                           
  7879                           ; BSR set to: 2
  7880  000F8A  295B               	incf	fprintf@cc& (0+255),w,b
  7881  000F8C  E103               	bnz	l11985
  7882  000F8E  295C               	incf	(fprintf@cc+1)& (0+255),w,b
  7883  000F90  B4D8               	btfsc	status,2,c
  7884  000F92  0012               	return	
  7885  000F94                     l11985:
  7886                           
  7887                           ; BSR set to: 2
  7888                           ;tff.c: 1832: c = *str++;
  7889  000F94  C0E0  FFF6         	movff	fprintf@str,tblptrl
  7890  000F98  C0E1  FFF7         	movff	fprintf@str+1,tblptrh
  7891  000F9C                     	if	0	;tblptru may be non-zero
  7892  000F9C                     	endif
  7893  000F9C                     	if	0	;tblptru may be non-zero
  7894  000F9C                     	endif
  7895  000F9C  0008               	tblrd		*
  7896  000F9E  CFF5 F25F          	movff	tablat,fprintf@c
  7897                           
  7898                           ; BSR set to: 2
  7899  000FA2  0100               	movlb	0	; () banked
  7900  000FA4  4BE0               	infsnz	fprintf@str& (0+255),f,b
  7901  000FA6  2BE1               	incf	(fprintf@str+1)& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;tff.c: 1833: if (c == 0) break;
  7905  000FA8  0102               	movlb	2	; () banked
  7906  000FAA  515F               	movf	fprintf@c& (0+255),w,b
  7907  000FAC  B4D8               	btfsc	status,2,c
  7908  000FAE  0012               	return	
  7909                           
  7910                           ; BSR set to: 2
  7911                           ;tff.c: 1834: if (c != '%') {
  7912  000FB0  0E25               	movlw	37
  7913  000FB2  195F               	xorwf	fprintf@c& (0+255),w,b
  7914  000FB4  B4D8               	btfsc	status,2,c
  7915  000FB6  D019               	goto	l12001
  7916                           
  7917                           ; BSR set to: 2
  7918                           ;tff.c: 1835: cc = fputc(c, fil);
  7919  000FB8  C25F  F0D0         	movff	fprintf@c,fputc@chr
  7920  000FBC  0100               	movlb	0	; () banked
  7921  000FBE  6BD1               	clrf	(fputc@chr+1)& (0+255),b
  7922  000FC0  C0DE  F0D2         	movff	fprintf@fil,fputc@fil
  7923  000FC4  C0DF  F0D3         	movff	fprintf@fil+1,fputc@fil+1
  7924  000FC8  EC37  F028         	call	_fputc	;wreg free
  7925  000FCC  C0D0  F25B         	movff	?_fputc,fprintf@cc
  7926  000FD0  C0D1  F25C         	movff	?_fputc+1,fprintf@cc+1
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;tff.c: 1836: if (cc != -1) cc = 1;
  7930  000FD4  0102               	movlb	2	; () banked
  7931  000FD6  295B               	incf	fprintf@cc& (0+255),w,b
  7932  000FD8  E103               	bnz	u14170
  7933  000FDA  295C               	incf	(fprintf@cc+1)& (0+255),w,b
  7934  000FDC  B4D8               	btfsc	status,2,c
  7935  000FDE  D184               	goto	l12125
  7936  000FE0                     u14170:
  7937                           
  7938                           ; BSR set to: 2
  7939  000FE0  0E00               	movlw	0
  7940  000FE2  6F5C               	movwf	(fprintf@cc+1)& (0+255),b
  7941  000FE4  0E01               	movlw	1
  7942  000FE6  6F5B               	movwf	fprintf@cc& (0+255),b
  7943  000FE8  D17F               	goto	l12125
  7944  000FEA                     l12001:
  7945                           
  7946                           ; BSR set to: 2
  7947                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  7948  000FEA  0E00               	movlw	0
  7949  000FEC  6F54               	movwf	fprintf@f& (0+255),b
  7950  000FEE  C254  F252         	movff	fprintf@f,fprintf@w
  7951  000FF2  6B53               	clrf	(fprintf@w+1)& (0+255),b
  7952                           
  7953                           ; BSR set to: 2
  7954                           ;tff.c: 1840: c = *str++;
  7955  000FF4  C0E0  FFF6         	movff	fprintf@str,tblptrl
  7956  000FF8  C0E1  FFF7         	movff	fprintf@str+1,tblptrh
  7957  000FFC                     	if	0	;tblptru may be non-zero
  7958  000FFC                     	endif
  7959  000FFC                     	if	0	;tblptru may be non-zero
  7960  000FFC                     	endif
  7961  000FFC  0008               	tblrd		*
  7962  000FFE  CFF5 F25F          	movff	tablat,fprintf@c
  7963                           
  7964                           ; BSR set to: 2
  7965  001002  0100               	movlb	0	; () banked
  7966  001004  4BE0               	infsnz	fprintf@str& (0+255),f,b
  7967  001006  2BE1               	incf	(fprintf@str+1)& (0+255),f,b
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;tff.c: 1841: if (c == '0') {
  7971  001008  0E30               	movlw	48
  7972  00100A  0102               	movlb	2	; () banked
  7973  00100C  195F               	xorwf	fprintf@c& (0+255),w,b
  7974  00100E  A4D8               	btfss	status,2,c
  7975  001010  D023               	goto	l12021
  7976                           
  7977                           ; BSR set to: 2
  7978                           ;tff.c: 1842: f = 1; c = *str++;
  7979  001012  0E01               	movlw	1
  7980  001014  6F54               	movwf	fprintf@f& (0+255),b
  7981  001016                     l12011:
  7982                           
  7983                           ; BSR set to: 2
  7984  001016  C0E0  FFF6         	movff	fprintf@str,tblptrl
  7985  00101A  C0E1  FFF7         	movff	fprintf@str+1,tblptrh
  7986  00101E                     	if	0	;tblptru may be non-zero
  7987  00101E                     	endif
  7988  00101E                     	if	0	;tblptru may be non-zero
  7989  00101E                     	endif
  7990  00101E  0008               	tblrd		*
  7991  001020  CFF5 F25F          	movff	tablat,fprintf@c
  7992                           
  7993                           ; BSR set to: 2
  7994  001024  0100               	movlb	0	; () banked
  7995  001026  4BE0               	infsnz	fprintf@str& (0+255),f,b
  7996  001028  2BE1               	incf	(fprintf@str+1)& (0+255),f,b
  7997  00102A  D016               	goto	l12021
  7998  00102C                     l12015:
  7999                           
  8000                           ; BSR set to: 2
  8001                           ;tff.c: 1845: w = w * 10 + (c - '0');
  8002  00102C  C252  F01A         	movff	fprintf@w,___wmul@multiplier
  8003  001030  C253  F01B         	movff	fprintf@w+1,___wmul@multiplier+1
  8004  001034  0E00               	movlw	0
  8005  001036  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  8006  001038  0E0A               	movlw	10
  8007  00103A  6E1C               	movwf	___wmul@multiplicand^0,c
  8008  00103C  EC71  F029         	call	___wmul	;wreg free
  8009  001040  0102               	movlb	2	; () banked
  8010  001042  515F               	movf	fprintf@c& (0+255),w,b
  8011  001044  261A               	addwf	?___wmul^0,f,c
  8012  001046  0E00               	movlw	0
  8013  001048  221B               	addwfc	(?___wmul+1)^0,f,c
  8014  00104A  0ED0               	movlw	208
  8015  00104C  241A               	addwf	?___wmul^0,w,c
  8016  00104E  6F52               	movwf	fprintf@w& (0+255),b
  8017  001050  0EFF               	movlw	255
  8018  001052  201B               	addwfc	(?___wmul+1)^0,w,c
  8019  001054  6F53               	movwf	(fprintf@w+1)& (0+255),b
  8020  001056  D7DF               	goto	l12011
  8021  001058                     l12021:
  8022  001058  0E2F               	movlw	47
  8023  00105A  0102               	movlb	2	; () banked
  8024  00105C  655F               	cpfsgt	fprintf@c& (0+255),b
  8025  00105E  D003               	goto	u14200
  8026                           
  8027                           ; BSR set to: 2
  8028  001060  0E39               	movlw	57
  8029  001062  655F               	cpfsgt	fprintf@c& (0+255),b
  8030  001064  D7E3               	goto	l12015
  8031  001066                     u14200:
  8032                           
  8033                           ; BSR set to: 2
  8034                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  8035  001066  0E6C               	movlw	108
  8036  001068  195F               	xorwf	fprintf@c& (0+255),w,b
  8037  00106A  A4D8               	btfss	status,2,c
  8038  00106C  D00B               	goto	l12033
  8039                           
  8040                           ; BSR set to: 2
  8041                           ;tff.c: 1849: f |= 2; c = *str++;
  8042  00106E  8354               	bsf	fprintf@f& (0+255),1,b
  8043                           
  8044                           ; BSR set to: 2
  8045  001070  C0E0  FFF6         	movff	fprintf@str,tblptrl
  8046  001074  C0E1  FFF7         	movff	fprintf@str+1,tblptrh
  8047  001078                     	if	0	;tblptru may be non-zero
  8048  001078                     	endif
  8049  001078                     	if	0	;tblptru may be non-zero
  8050  001078                     	endif
  8051  001078  0008               	tblrd		*
  8052  00107A  CFF5 F25F          	movff	tablat,fprintf@c
  8053                           
  8054                           ; BSR set to: 2
  8055  00107E  0100               	movlb	0	; () banked
  8056  001080  4BE0               	infsnz	fprintf@str& (0+255),f,b
  8057  001082  2BE1               	incf	(fprintf@str+1)& (0+255),f,b
  8058  001084                     l12033:
  8059                           
  8060                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  8061  001084  0E73               	movlw	115
  8062  001086  0102               	movlb	2	; () banked
  8063  001088  195F               	xorwf	fprintf@c& (0+255),w,b
  8064  00108A  A4D8               	btfss	status,2,c
  8065  00108C  D015               	goto	l12039
  8066                           
  8067                           ; BSR set to: 2
  8068                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  8069  00108E  515A               	movf	fprintf@arp& (0+255),w,b
  8070  001090  6ED9               	movwf	fsr2l,c
  8071  001092  6ADA               	clrf	fsr2h,c
  8072  001094  CFDE F0D7          	movff	postinc2,fputs@str
  8073  001098  CFDD F0D8          	movff	postdec2,fputs@str+1
  8074  00109C  C0DE  F0D9         	movff	fprintf@fil,fputs@fil
  8075  0010A0  C0DF  F0DA         	movff	fprintf@fil+1,fputs@fil+1
  8076  0010A4  EC84  F025         	call	_fputs	;wreg free
  8077  0010A8  C0D7  F25B         	movff	?_fputs,fprintf@cc
  8078  0010AC  C0D8  F25C         	movff	?_fputs+1,fprintf@cc+1
  8079                           
  8080                           ; BSR set to: 0
  8081  0010B0  0E02               	movlw	2
  8082  0010B2  0102               	movlb	2	; () banked
  8083  0010B4  275A               	addwf	fprintf@arp& (0+255),f,b
  8084                           
  8085                           ;tff.c: 1853: continue;
  8086  0010B6  D118               	goto	l12125
  8087  0010B8                     l12039:
  8088                           
  8089                           ; BSR set to: 2
  8090                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  8091  0010B8  0E63               	movlw	99
  8092  0010BA  195F               	xorwf	fprintf@c& (0+255),w,b
  8093  0010BC  A4D8               	btfss	status,2,c
  8094  0010BE  D01D               	goto	l12049
  8095                           
  8096                           ; BSR set to: 2
  8097                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  8098  0010C0  515A               	movf	fprintf@arp& (0+255),w,b
  8099  0010C2  6ED9               	movwf	fsr2l,c
  8100  0010C4  6ADA               	clrf	fsr2h,c
  8101  0010C6  50DF               	movf	indf2,w,c
  8102  0010C8  0100               	movlb	0	; () banked
  8103  0010CA  6FEC               	movwf	??_fprintf& (0+255),b
  8104  0010CC  51EC               	movf	??_fprintf& (0+255),w,b
  8105  0010CE  6FD0               	movwf	fputc@chr& (0+255),b
  8106  0010D0  6BD1               	clrf	(fputc@chr+1)& (0+255),b
  8107  0010D2  C0DE  F0D2         	movff	fprintf@fil,fputc@fil
  8108  0010D6  C0DF  F0D3         	movff	fprintf@fil+1,fputc@fil+1
  8109  0010DA  EC37  F028         	call	_fputc	;wreg free
  8110  0010DE  C0D0  F25B         	movff	?_fputc,fprintf@cc
  8111  0010E2  C0D1  F25C         	movff	?_fputc+1,fprintf@cc+1
  8112                           
  8113                           ; BSR set to: 0
  8114  0010E6  0E02               	movlw	2
  8115  0010E8  0102               	movlb	2	; () banked
  8116  0010EA  275A               	addwf	fprintf@arp& (0+255),f,b
  8117                           
  8118                           ; BSR set to: 2
  8119                           ;tff.c: 1857: if (cc != -1) cc = 1;
  8120  0010EC  295B               	incf	fprintf@cc& (0+255),w,b
  8121  0010EE  E104               	bnz	u14240
  8122  0010F0  295C               	incf	(fprintf@cc+1)& (0+255),w,b
  8123  0010F2  A4D8               	btfss	status,2,c
  8124  0010F4  D775               	goto	u14170
  8125  0010F6  D0F8               	goto	l12125
  8126  0010F8                     u14240:
  8127  0010F8  D773               	goto	u14170
  8128  0010FA                     l12049:
  8129                           
  8130                           ; BSR set to: 2
  8131                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  8132  0010FA  0E00               	movlw	0
  8133  0010FC  6F55               	movwf	fprintf@r& (0+255),b
  8134                           
  8135                           ; BSR set to: 2
  8136                           ;tff.c: 1861: if (c == 'd') r = 10;
  8137  0010FE  0E64               	movlw	100
  8138  001100  195F               	xorwf	fprintf@c& (0+255),w,b
  8139  001102  A4D8               	btfss	status,2,c
  8140  001104  D002               	goto	l12055
  8141                           
  8142                           ; BSR set to: 2
  8143  001106  0E0A               	movlw	10
  8144  001108  6F55               	movwf	fprintf@r& (0+255),b
  8145  00110A                     l12055:
  8146                           
  8147                           ; BSR set to: 2
  8148                           ;tff.c: 1862: if (c == 'u') r = 10;
  8149  00110A  0E75               	movlw	117
  8150  00110C  195F               	xorwf	fprintf@c& (0+255),w,b
  8151  00110E  A4D8               	btfss	status,2,c
  8152  001110  D002               	goto	l12059
  8153                           
  8154                           ; BSR set to: 2
  8155  001112  0E0A               	movlw	10
  8156  001114  6F55               	movwf	fprintf@r& (0+255),b
  8157  001116                     l12059:
  8158                           
  8159                           ; BSR set to: 2
  8160                           ;tff.c: 1863: if (c == 'X') r = 16;
  8161  001116  0E58               	movlw	88
  8162  001118  195F               	xorwf	fprintf@c& (0+255),w,b
  8163  00111A  A4D8               	btfss	status,2,c
  8164  00111C  D002               	goto	l1178
  8165                           
  8166                           ; BSR set to: 2
  8167  00111E  0E10               	movlw	16
  8168  001120  6F55               	movwf	fprintf@r& (0+255),b
  8169  001122                     l1178:
  8170                           
  8171                           ; BSR set to: 2
  8172                           ;tff.c: 1864: if (r == 0) break;
  8173  001122  5155               	movf	fprintf@r& (0+255),w,b
  8174  001124  B4D8               	btfsc	status,2,c
  8175  001126  0012               	return	
  8176                           
  8177                           ; BSR set to: 2
  8178                           ;tff.c: 1865: if (f & 2) {
  8179  001128  A354               	btfss	fprintf@f& (0+255),1,b
  8180  00112A  D00D               	goto	l12069
  8181                           
  8182                           ; BSR set to: 2
  8183                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  8184  00112C  515A               	movf	fprintf@arp& (0+255),w,b
  8185  00112E  6ED9               	movwf	fsr2l,c
  8186  001130  6ADA               	clrf	fsr2h,c
  8187  001132  CFDE F256          	movff	postinc2,fprintf@val
  8188  001136  CFDE F257          	movff	postinc2,fprintf@val+1
  8189  00113A  CFDE F258          	movff	postinc2,fprintf@val+2
  8190  00113E  CFDE F259          	movff	postinc2,fprintf@val+3
  8191                           
  8192                           ; BSR set to: 2
  8193  001142  0E04               	movlw	4
  8194  001144  D01F               	goto	L1
  8195  001146                     l12069:
  8196                           
  8197                           ; BSR set to: 2
  8198                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  8199  001146  0E64               	movlw	100
  8200  001148  195F               	xorwf	fprintf@c& (0+255),w,b
  8201  00114A  B4D8               	btfsc	status,2,c
  8202  00114C  D00E               	goto	l12075
  8203                           
  8204                           ; BSR set to: 2
  8205  00114E  515A               	movf	fprintf@arp& (0+255),w,b
  8206  001150  6ED9               	movwf	fsr2l,c
  8207  001152  6ADA               	clrf	fsr2h,c
  8208  001154  CFDE F0EC          	movff	postinc2,??_fprintf
  8209  001158  CFDD F0ED          	movff	postdec2,??_fprintf+1
  8210  00115C  C0EC  F256         	movff	??_fprintf,fprintf@val
  8211  001160  C0ED  F257         	movff	??_fprintf+1,fprintf@val+1
  8212  001164  6B58               	clrf	(fprintf@val+2)& (0+255),b
  8213  001166  6B59               	clrf	(fprintf@val+3)& (0+255),b
  8214  001168  D00C               	goto	l12077
  8215  00116A                     l12075:
  8216                           
  8217                           ; BSR set to: 2
  8218  00116A  515A               	movf	fprintf@arp& (0+255),w,b
  8219  00116C  6ED9               	movwf	fsr2l,c
  8220  00116E  6ADA               	clrf	fsr2h,c
  8221  001170  CFDE F256          	movff	postinc2,fprintf@val
  8222  001174  CFDD F257          	movff	postdec2,fprintf@val+1
  8223  001178  0E00               	movlw	0
  8224  00117A  BF57               	btfsc	(fprintf@val+1)& (0+255),7,b
  8225  00117C  0EFF               	movlw	-1
  8226  00117E  6F58               	movwf	(fprintf@val+2)& (0+255),b
  8227  001180  6F59               	movwf	(fprintf@val+3)& (0+255),b
  8228  001182                     l12077:
  8229                           
  8230                           ; BSR set to: 2
  8231  001182  0E02               	movlw	2
  8232  001184                     L1:
  8233  001184  275A               	addwf	fprintf@arp& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 2
  8236                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  8237  001186  0E64               	movlw	100
  8238  001188  195F               	xorwf	fprintf@c& (0+255),w,b
  8239  00118A  A4D8               	btfss	status,2,c
  8240  00118C  D00E               	goto	l12087
  8241                           
  8242                           ; BSR set to: 2
  8243                           ;tff.c: 1872: if (val >= 0x80000000) {
  8244  00118E  0E80               	movlw	128
  8245  001190  5D59               	subwf	(fprintf@val+3)& (0+255),w,b
  8246  001192  A0D8               	btfss	status,0,c
  8247  001194  D00A               	goto	l12087
  8248                           
  8249                           ; BSR set to: 2
  8250                           ;tff.c: 1873: val = 0 - val;
  8251  001196  6D56               	negf	fprintf@val& (0+255),b
  8252  001198  1F57               	comf	(fprintf@val+1)& (0+255),f,b
  8253  00119A  B0D8               	btfsc	status,0,c
  8254  00119C  2B57               	incf	(fprintf@val+1)& (0+255),f,b
  8255  00119E  1F58               	comf	(fprintf@val+2)& (0+255),f,b
  8256  0011A0  B0D8               	btfsc	status,0,c
  8257  0011A2  2B58               	incf	(fprintf@val+2)& (0+255),f,b
  8258  0011A4  0E00               	movlw	0
  8259  0011A6  5759               	subfwb	(fprintf@val+3)& (0+255),f,b
  8260                           
  8261                           ; BSR set to: 2
  8262                           ;tff.c: 1874: f |= 4;
  8263  0011A8  8554               	bsf	fprintf@f& (0+255),2,b
  8264  0011AA                     l12087:
  8265                           
  8266                           ; BSR set to: 2
  8267                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  8268  0011AA  0E00               	movlw	0
  8269  0011AC  6F5E               	movwf	(fprintf@i+1)& (0+255),b
  8270  0011AE  0E0F               	movlw	15
  8271  0011B0  6F5D               	movwf	fprintf@i& (0+255),b
  8272                           
  8273                           ; BSR set to: 2
  8274  0011B2  0E00               	movlw	0
  8275  0011B4  6F4D               	movwf	(fprintf@s+15)& (0+255),b
  8276  0011B6                     l12091:
  8277                           
  8278                           ; BSR set to: 2
  8279                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  8280  0011B6  C256  F01A         	movff	fprintf@val,___llmod@dividend
  8281  0011BA  C257  F01B         	movff	fprintf@val+1,___llmod@dividend+1
  8282  0011BE  C258  F01C         	movff	fprintf@val+2,___llmod@dividend+2
  8283  0011C2  C259  F01D         	movff	fprintf@val+3,___llmod@dividend+3
  8284  0011C6  5155               	movf	fprintf@r& (0+255),w,b
  8285  0011C8  6E1E               	movwf	___llmod@divisor^0,c
  8286  0011CA  6A1F               	clrf	(___llmod@divisor+1)^0,c
  8287  0011CC  6A20               	clrf	(___llmod@divisor+2)^0,c
  8288  0011CE  6A21               	clrf	(___llmod@divisor+3)^0,c
  8289  0011D0  EC96  F024         	call	___llmod	;wreg free
  8290  0011D4  501A               	movf	?___llmod^0,w,c
  8291  0011D6  0F30               	addlw	48
  8292  0011D8  0102               	movlb	2	; () banked
  8293  0011DA  6F5F               	movwf	fprintf@c& (0+255),b
  8294                           
  8295                           ; BSR set to: 2
  8296                           ;tff.c: 1880: if (c > '9') c += 7;
  8297  0011DC  0E39               	movlw	57
  8298  0011DE  655F               	cpfsgt	fprintf@c& (0+255),b
  8299  0011E0  D002               	goto	l12097
  8300                           
  8301                           ; BSR set to: 2
  8302  0011E2  0E07               	movlw	7
  8303  0011E4  275F               	addwf	fprintf@c& (0+255),f,b
  8304  0011E6                     l12097:
  8305                           
  8306                           ; BSR set to: 2
  8307                           ;tff.c: 1881: s[--i] = c;
  8308  0011E6  075D               	decf	fprintf@i& (0+255),f,b
  8309  0011E8  A0D8               	btfss	status,0,c
  8310  0011EA  075E               	decf	(fprintf@i+1)& (0+255),f,b
  8311  0011EC  0E3E               	movlw	low fprintf@s
  8312  0011EE  255D               	addwf	fprintf@i& (0+255),w,b
  8313  0011F0  6ED9               	movwf	fsr2l,c
  8314  0011F2  0E02               	movlw	high fprintf@s
  8315  0011F4  215E               	addwfc	(fprintf@i+1)& (0+255),w,b
  8316  0011F6  6EDA               	movwf	fsr2h,c
  8317  0011F8  C25F  FFDF         	movff	fprintf@c,indf2
  8318                           
  8319                           ; BSR set to: 2
  8320                           ;tff.c: 1882: val /= r;
  8321  0011FC  C256  F01A         	movff	fprintf@val,___lldiv@dividend
  8322  001200  C257  F01B         	movff	fprintf@val+1,___lldiv@dividend+1
  8323  001204  C258  F01C         	movff	fprintf@val+2,___lldiv@dividend+2
  8324  001208  C259  F01D         	movff	fprintf@val+3,___lldiv@dividend+3
  8325  00120C  5155               	movf	fprintf@r& (0+255),w,b
  8326  00120E  6E1E               	movwf	___lldiv@divisor^0,c
  8327  001210  6A1F               	clrf	(___lldiv@divisor+1)^0,c
  8328  001212  6A20               	clrf	(___lldiv@divisor+2)^0,c
  8329  001214  6A21               	clrf	(___lldiv@divisor+3)^0,c
  8330  001216  ECBE  F022         	call	___lldiv	;wreg free
  8331  00121A  C01A  F256         	movff	?___lldiv,fprintf@val
  8332  00121E  C01B  F257         	movff	?___lldiv+1,fprintf@val+1
  8333  001222  C01C  F258         	movff	?___lldiv+2,fprintf@val+2
  8334  001226  C01D  F259         	movff	?___lldiv+3,fprintf@val+3
  8335                           
  8336                           ;tff.c: 1883: } while (i && val);
  8337  00122A  0102               	movlb	2	; () banked
  8338  00122C  515D               	movf	fprintf@i& (0+255),w,b
  8339  00122E  115E               	iorwf	(fprintf@i+1)& (0+255),w,b
  8340  001230  B4D8               	btfsc	status,2,c
  8341  001232  D006               	goto	u14350
  8342                           
  8343                           ; BSR set to: 2
  8344  001234  5156               	movf	fprintf@val& (0+255),w,b
  8345  001236  1157               	iorwf	(fprintf@val+1)& (0+255),w,b
  8346  001238  1158               	iorwf	(fprintf@val+2)& (0+255),w,b
  8347  00123A  1159               	iorwf	(fprintf@val+3)& (0+255),w,b
  8348  00123C  A4D8               	btfss	status,2,c
  8349  00123E  D7BB               	goto	l12091
  8350  001240                     u14350:
  8351                           
  8352                           ; BSR set to: 2
  8353                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
  8354  001240  515D               	movf	fprintf@i& (0+255),w,b
  8355  001242  115E               	iorwf	(fprintf@i+1)& (0+255),w,b
  8356  001244  A4D8               	btfss	status,2,c
  8357                           
  8358                           ; BSR set to: 2
  8359  001246  A554               	btfss	fprintf@f& (0+255),2,b
  8360  001248  D00B               	goto	l12111
  8361                           
  8362                           ; BSR set to: 2
  8363  00124A  075D               	decf	fprintf@i& (0+255),f,b
  8364  00124C  A0D8               	btfss	status,0,c
  8365  00124E  075E               	decf	(fprintf@i+1)& (0+255),f,b
  8366  001250  0E3E               	movlw	low fprintf@s
  8367  001252  255D               	addwf	fprintf@i& (0+255),w,b
  8368  001254  6ED9               	movwf	fsr2l,c
  8369  001256  0E02               	movlw	high fprintf@s
  8370  001258  215E               	addwfc	(fprintf@i+1)& (0+255),w,b
  8371  00125A  6EDA               	movwf	fsr2h,c
  8372  00125C  0E2D               	movlw	45
  8373  00125E  6EDF               	movwf	indf2,c
  8374  001260                     l12111:
  8375                           
  8376                           ; BSR set to: 2
  8377                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
  8378  001260  5152               	movf	fprintf@w& (0+255),w,b
  8379  001262  080F               	sublw	15
  8380  001264  6F52               	movwf	fprintf@w& (0+255),b
  8381  001266  5153               	movf	(fprintf@w+1)& (0+255),w,b
  8382  001268  A0D8               	btfss	status,0,c
  8383  00126A  2AE8               	incf	wreg,f,c
  8384  00126C  0800               	sublw	0
  8385  00126E  6F53               	movwf	(fprintf@w+1)& (0+255),b
  8386                           
  8387                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  8388  001270  D016               	goto	l12119
  8389  001272                     l1195:
  8390                           
  8391                           ; BSR set to: 0
  8392  001272  0102               	movlb	2	; () banked
  8393  001274  B154               	btfsc	fprintf@f& (0+255),0,b
  8394  001276  D004               	goto	l12115
  8395                           
  8396                           ; BSR set to: 2
  8397  001278  0E00               	movlw	0
  8398  00127A  6F51               	movwf	(_fprintf$2161+1)& (0+255),b
  8399  00127C  0E20               	movlw	32
  8400  00127E  D003               	goto	L2
  8401  001280                     l12115:
  8402                           
  8403                           ; BSR set to: 2
  8404  001280  0E00               	movlw	0
  8405  001282  6F51               	movwf	(_fprintf$2161+1)& (0+255),b
  8406  001284  0E30               	movlw	48
  8407  001286                     L2:
  8408  001286  6F50               	movwf	_fprintf$2161& (0+255),b
  8409                           
  8410                           ; BSR set to: 2
  8411  001288  075D               	decf	fprintf@i& (0+255),f,b
  8412  00128A  A0D8               	btfss	status,0,c
  8413  00128C  075E               	decf	(fprintf@i+1)& (0+255),f,b
  8414  00128E  0E3E               	movlw	low fprintf@s
  8415  001290  255D               	addwf	fprintf@i& (0+255),w,b
  8416  001292  6ED9               	movwf	fsr2l,c
  8417  001294  0E02               	movlw	high fprintf@s
  8418  001296  215E               	addwfc	(fprintf@i+1)& (0+255),w,b
  8419  001298  6EDA               	movwf	fsr2h,c
  8420  00129A  C250  FFDF         	movff	_fprintf$2161,indf2
  8421  00129E                     l12119:
  8422                           
  8423                           ; BSR set to: 2
  8424  00129E  515D               	movf	fprintf@i& (0+255),w,b
  8425  0012A0  115E               	iorwf	(fprintf@i+1)& (0+255),w,b
  8426  0012A2  B4D8               	btfsc	status,2,c
  8427  0012A4  D00D               	goto	u14400
  8428                           
  8429                           ; BSR set to: 2
  8430  0012A6  515D               	movf	fprintf@i& (0+255),w,b
  8431  0012A8  5D52               	subwf	fprintf@w& (0+255),w,b
  8432  0012AA  5153               	movf	(fprintf@w+1)& (0+255),w,b
  8433  0012AC  0A80               	xorlw	128
  8434  0012AE  0100               	movlb	0	; () banked
  8435  0012B0  6FEC               	movwf	??_fprintf& (0+255),b
  8436  0012B2  0102               	movlb	2	; () banked
  8437  0012B4  515E               	movf	(fprintf@i+1)& (0+255),w,b
  8438  0012B6  0A80               	xorlw	128
  8439  0012B8  0100               	movlb	0	; () banked
  8440  0012BA  59EC               	subwfb	??_fprintf& (0+255),w,b
  8441  0012BC  A0D8               	btfss	status,0,c
  8442  0012BE  D7D9               	goto	l1195
  8443  0012C0                     u14400:
  8444                           
  8445                           ;tff.c: 1887: cc = fputs(&s[i], fil);
  8446  0012C0  0E3E               	movlw	low fprintf@s
  8447  0012C2  0102               	movlb	2	; () banked
  8448  0012C4  255D               	addwf	fprintf@i& (0+255),w,b
  8449  0012C6  0100               	movlb	0	; () banked
  8450  0012C8  6FD7               	movwf	fputs@str& (0+255),b
  8451  0012CA  0E02               	movlw	high fprintf@s
  8452  0012CC  0102               	movlb	2	; () banked
  8453  0012CE  215E               	addwfc	(fprintf@i+1)& (0+255),w,b
  8454  0012D0  0100               	movlb	0	; () banked
  8455  0012D2  6FD8               	movwf	(fputs@str+1)& (0+255),b
  8456  0012D4  C0DE  F0D9         	movff	fprintf@fil,fputs@fil
  8457  0012D8  C0DF  F0DA         	movff	fprintf@fil+1,fputs@fil+1
  8458  0012DC  EC84  F025         	call	_fputs	;wreg free
  8459  0012E0  C0D7  F25B         	movff	?_fputs,fprintf@cc
  8460  0012E4  C0D8  F25C         	movff	?_fputs+1,fprintf@cc+1
  8461  0012E8                     l12125:
  8462  0012E8  0102               	movlb	2	; () banked
  8463  0012EA  515B               	movf	fprintf@cc& (0+255),w,b
  8464  0012EC  274E               	addwf	fprintf@res& (0+255),f,b
  8465  0012EE  515C               	movf	(fprintf@cc+1)& (0+255),w,b
  8466  0012F0  234F               	addwfc	(fprintf@res+1)& (0+255),f,b
  8467  0012F2  D64B               	goto	l11981
  8468  0012F4                     __end_of_fprintf:
  8469                           	callstack 0
  8470                           
  8471 ;; *************** function _fputs *****************
  8472 ;; Defined at:
  8473 ;;		line 1796 in file "bibliotecas/tff.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  str             2  119[BANK0 ] PTR const unsigned char 
  8476 ;;		 -> fprintf@s(16), ?_fprintf(2), string_dado(62), 
  8477 ;;  fil             2  121[BANK0 ] PTR struct _FIL
  8478 ;;		 -> fil(28), 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  n               2  124[BANK0 ] int 
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  2  119[BANK0 ] int 
  8483 ;; Registers used:
  8484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8485 ;; Tracked objects:
  8486 ;;		On entry : 3D/2
  8487 ;;		On exit  : 3F/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8490 ;;      Params:         0       4       0       0       0       0       0       0       0
  8491 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8492 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8493 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8494 ;;Total ram usage:        7 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; Hardware stack levels required when called:   13
  8497 ;; This function calls:
  8498 ;;		_fputc
  8499 ;; This function is called by:
  8500 ;;		_fprintf
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text48
  8505  004B08                     __ptext48:
  8506                           	callstack 0
  8507  004B08                     _fputs:
  8508                           	callstack 12
  8509                           
  8510                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
  8511                           
  8512                           ; BSR set to: 2
  8513                           ;incstack = 0
  8514  004B08  0E00               	movlw	0
  8515  004B0A  0100               	movlb	0	; () banked
  8516  004B0C  6FDD               	movwf	(fputs@n+1)& (0+255),b
  8517  004B0E  0E00               	movlw	0
  8518  004B10  6FDC               	movwf	fputs@n& (0+255),b
  8519  004B12  D01B               	goto	l11591
  8520  004B14                     l11585:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
  8524  004B14  C0D7  FFD9         	movff	fputs@str,fsr2l
  8525  004B18  C0D8  FFDA         	movff	fputs@str+1,fsr2h
  8526  004B1C  50DF               	movf	indf2,w,c
  8527  004B1E  6FDB               	movwf	??_fputs& (0+255),b
  8528  004B20  51DB               	movf	??_fputs& (0+255),w,b
  8529  004B22  6FD0               	movwf	fputc@chr& (0+255),b
  8530  004B24  6BD1               	clrf	(fputc@chr+1)& (0+255),b
  8531  004B26  C0D9  F0D2         	movff	fputs@fil,fputc@fil
  8532  004B2A  C0DA  F0D3         	movff	fputs@fil+1,fputc@fil+1
  8533  004B2E  EC37  F028         	call	_fputc	;wreg free
  8534  004B32  29D0               	incf	?_fputc& (0+255),w,b
  8535  004B34  E106               	bnz	l11589
  8536  004B36  29D1               	incf	(?_fputc+1)& (0+255),w,b
  8537  004B38  A4D8               	btfss	status,2,c
  8538  004B3A  D003               	goto	l11589
  8539                           
  8540                           ; BSR set to: 0
  8541  004B3C  69D7               	setf	?_fputs& (0+255),b
  8542  004B3E  69D8               	setf	(?_fputs+1)& (0+255),b
  8543  004B40  0012               	return	
  8544  004B42                     l11589:
  8545                           
  8546                           ; BSR set to: 0
  8547  004B42  4BD7               	infsnz	fputs@str& (0+255),f,b
  8548  004B44  2BD8               	incf	(fputs@str+1)& (0+255),f,b
  8549  004B46  4BDC               	infsnz	fputs@n& (0+255),f,b
  8550  004B48  2BDD               	incf	(fputs@n+1)& (0+255),f,b
  8551  004B4A                     l11591:
  8552                           
  8553                           ; BSR set to: 0
  8554  004B4A  C0D7  FFD9         	movff	fputs@str,fsr2l
  8555  004B4E  C0D8  FFDA         	movff	fputs@str+1,fsr2h
  8556  004B52  50DF               	movf	indf2,w,c
  8557  004B54  A4D8               	btfss	status,2,c
  8558  004B56  D7DE               	goto	l11585
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;tff.c: 1806: };tff.c: 1807: return n;
  8562  004B58  C0DC  F0D7         	movff	fputs@n,?_fputs
  8563  004B5C  C0DD  F0D8         	movff	fputs@n+1,?_fputs+1
  8564                           
  8565                           ; BSR set to: 0
  8566  004B60  0012               	return		;funcret
  8567  004B62                     __end_of_fputs:
  8568                           	callstack 0
  8569                           
  8570 ;; *************** function _fputc *****************
  8571 ;; Defined at:
  8572 ;;		line 1769 in file "bibliotecas/tff.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  chr             2  112[BANK0 ] int 
  8575 ;;  fil             2  114[BANK0 ] PTR struct _FIL
  8576 ;;		 -> fil(28), 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  bw              2  117[BANK0 ] unsigned int 
  8579 ;;  c               1  116[BANK0 ] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  2  112[BANK0 ] int 
  8582 ;; Registers used:
  8583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 3F/0
  8586 ;;		On exit  : 3F/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8589 ;;      Params:         0       4       0       0       0       0       0       0       0
  8590 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8592 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8593 ;;Total ram usage:        7 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:   12
  8596 ;; This function calls:
  8597 ;;		_f_write
  8598 ;; This function is called by:
  8599 ;;		_fputs
  8600 ;;		_fprintf
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text49
  8605  00506E                     __ptext49:
  8606                           	callstack 0
  8607  00506E                     _fputc:
  8608                           	callstack 12
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;incstack = 0
  8615  00506E  51D2               	movf	fputc@fil& (0+255),w,b
  8616  005070  11D3               	iorwf	(fputc@fil+1)& (0+255),w,b
  8617  005072  A4D8               	btfss	status,2,c
  8618  005074  D005               	goto	l1145
  8619  005076                     u12800:
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;tff.c: 1783: return chr;
  8623  005076  C0D0  F0D0         	movff	fputc@chr,?_fputc
  8624  00507A  C0D1  F0D1         	movff	fputc@chr+1,?_fputc+1
  8625  00507E  0012               	return	
  8626  005080                     l1145:
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
  8630  005080  C0D0  F0D4         	movff	fputc@chr,fputc@c
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
  8634  005084  C0D2  F0B2         	movff	fputc@fil,f_write@fp
  8635  005088  C0D3  F0B3         	movff	fputc@fil+1,f_write@fp+1
  8636  00508C  0ED4               	movlw	low fputc@c
  8637  00508E  6FB4               	movwf	f_write@buff& (0+255),b
  8638  005090  0E00               	movlw	0
  8639  005092  6FB6               	movwf	(f_write@btw+1)& (0+255),b
  8640  005094  0E01               	movlw	1
  8641  005096  6FB5               	movwf	f_write@btw& (0+255),b
  8642  005098  0ED5               	movlw	low fputc@bw
  8643  00509A  6FB7               	movwf	f_write@bw& (0+255),b
  8644  00509C  EC09  F000         	call	_f_write	;wreg free
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;tff.c: 1787: return bw ? chr : -1;
  8648  0050A0  51D5               	movf	fputc@bw& (0+255),w,b
  8649  0050A2  11D6               	iorwf	(fputc@bw+1)& (0+255),w,b
  8650  0050A4  A4D8               	btfss	status,2,c
  8651  0050A6  D7E7               	goto	u12800
  8652                           
  8653                           ; BSR set to: 0
  8654  0050A8  69D0               	setf	?_fputc& (0+255),b
  8655  0050AA  69D1               	setf	(?_fputc+1)& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658  0050AC  0012               	return		;funcret
  8659  0050AE                     __end_of_fputc:
  8660                           	callstack 0
  8661                           
  8662 ;; *************** function _f_write *****************
  8663 ;; Defined at:
  8664 ;;		line 999 in file "bibliotecas/tff.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  fp              2   82[BANK0 ] PTR struct _FIL
  8667 ;;		 -> fil(28), 
  8668 ;;  buff            1   84[BANK0 ] PTR const void 
  8669 ;;		 -> fputc@c(1), 
  8670 ;;  btw             2   85[BANK0 ] unsigned int 
  8671 ;;  bw              1   87[BANK0 ] PTR unsigned int 
  8672 ;;		 -> fputc@bw(2), 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  sect            4  102[BANK0 ] unsigned long 
  8675 ;;  wcnt            2  110[BANK0 ] unsigned int 
  8676 ;;  clust           2  108[BANK0 ] unsigned short 
  8677 ;;  cc              2  106[BANK0 ] unsigned int 
  8678 ;;  wbuff           1  101[BANK0 ] PTR const unsigned char 
  8679 ;;		 -> fputc@c(1), 
  8680 ;;  res             1  100[BANK0 ] enum E155
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      enum E155
  8683 ;; Registers used:
  8684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 3F/0
  8687 ;;		On exit  : 3F/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8690 ;;      Params:         0       6       0       0       0       0       0       0       0
  8691 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8692 ;;      Temps:          0      12       0       0       0       0       0       0       0
  8693 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8694 ;;Total ram usage:       30 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   11
  8697 ;; This function calls:
  8698 ;;		_clust2sect
  8699 ;;		_create_chain
  8700 ;;		_disk_write
  8701 ;;		_memcpy
  8702 ;;		_move_window
  8703 ;;		_validate
  8704 ;; This function is called by:
  8705 ;;		_fputc
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text50
  8710  000012                     __ptext50:
  8711                           	callstack 0
  8712  000012                     _f_write:
  8713                           	callstack 12
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;incstack = 0
  8720  000012  C0B4  F0C5         	movff	f_write@buff,f_write@wbuff
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;tff.c: 1013: *bw = 0;
  8724  000016  51B7               	movf	f_write@bw& (0+255),w,b
  8725  000018  6ED9               	movwf	fsr2l,c
  8726  00001A  6ADA               	clrf	fsr2h,c
  8727  00001C  0E00               	movlw	0
  8728  00001E  6EDE               	movwf	postinc2,c
  8729  000020  0E00               	movlw	0
  8730  000022  6EDD               	movwf	postdec2,c
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
  8734  000024  EE20 F004          	lfsr	2,4
  8735  000028  51B2               	movf	f_write@fp& (0+255),w,b
  8736  00002A  26D9               	addwf	fsr2l,f,c
  8737  00002C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8738  00002E  22DA               	addwfc	fsr2h,f,c
  8739  000030  CFDE F020          	movff	postinc2,validate@fs
  8740  000034  CFDD F021          	movff	postdec2,validate@fs+1
  8741  000038  C0B2  FFD9         	movff	f_write@fp,fsr2l
  8742  00003C  C0B3  FFDA         	movff	f_write@fp+1,fsr2h
  8743  000040  CFDE F022          	movff	postinc2,validate@id
  8744  000044  CFDD F023          	movff	postdec2,validate@id+1
  8745  000048  EC6D  F027         	call	_validate	;wreg free
  8746  00004C  0100               	movlb	0	; () banked
  8747  00004E  6FC4               	movwf	f_write@res& (0+255),b
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;tff.c: 1015: if (res != FR_OK) return res;
  8751  000050  51C4               	movf	f_write@res& (0+255),w,b
  8752  000052  A4D8               	btfss	status,2,c
  8753  000054  0012               	return	
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
  8757  000056  EE20 F002          	lfsr	2,2
  8758  00005A  51B2               	movf	f_write@fp& (0+255),w,b
  8759  00005C  26D9               	addwf	fsr2l,f,c
  8760  00005E  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8761  000060  22DA               	addwfc	fsr2h,f,c
  8762  000062  BEDF               	btfsc	indf2,7,c
  8763  000064  0012               	return	
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
  8767  000066  EE20 F002          	lfsr	2,2
  8768  00006A  51B2               	movf	f_write@fp& (0+255),w,b
  8769  00006C  26D9               	addwf	fsr2l,f,c
  8770  00006E  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8771  000070  22DA               	addwfc	fsr2h,f,c
  8772  000072  A2DF               	btfss	indf2,1,c
  8773  000074  0012               	return	
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
  8777  000076  EE20 F00A          	lfsr	2,10
  8778  00007A  51B2               	movf	f_write@fp& (0+255),w,b
  8779  00007C  26D9               	addwf	fsr2l,f,c
  8780  00007E  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8781  000080  22DA               	addwfc	fsr2h,f,c
  8782  000082  EE10 F00A          	lfsr	1,10
  8783  000086  51B2               	movf	f_write@fp& (0+255),w,b
  8784  000088  26E1               	addwf	fsr1l,f,c
  8785  00008A  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8786  00008C  22E2               	addwfc	fsr1h,f,c
  8787  00008E  CFE6 F0BC          	movff	postinc1,??_f_write+4
  8788  000092  CFE6 F0BD          	movff	postinc1,??_f_write+5
  8789  000096  CFE6 F0BE          	movff	postinc1,??_f_write+6
  8790  00009A  CFE6 F0BF          	movff	postinc1,??_f_write+7
  8791  00009E  51B5               	movf	f_write@btw& (0+255),w,b
  8792  0000A0  25BC               	addwf	(??_f_write+4)& (0+255),w,b
  8793  0000A2  6FC0               	movwf	(??_f_write+8)& (0+255),b
  8794  0000A4  51B6               	movf	(f_write@btw+1)& (0+255),w,b
  8795  0000A6  21BD               	addwfc	(??_f_write+5)& (0+255),w,b
  8796  0000A8  6FC1               	movwf	(??_f_write+9)& (0+255),b
  8797  0000AA  0E00               	movlw	0
  8798  0000AC  21BE               	addwfc	(??_f_write+6)& (0+255),w,b
  8799  0000AE  6FC2               	movwf	(??_f_write+10)& (0+255),b
  8800  0000B0  0E00               	movlw	0
  8801  0000B2  21BF               	addwfc	(??_f_write+7)& (0+255),w,b
  8802  0000B4  6FC3               	movwf	(??_f_write+11)& (0+255),b
  8803  0000B6  50DE               	movf	postinc2,w,c
  8804  0000B8  5DC0               	subwf	(??_f_write+8)& (0+255),w,b
  8805  0000BA  50DE               	movf	postinc2,w,c
  8806  0000BC  59C1               	subwfb	(??_f_write+9)& (0+255),w,b
  8807  0000BE  50DE               	movf	postinc2,w,c
  8808  0000C0  59C2               	subwfb	(??_f_write+10)& (0+255),w,b
  8809  0000C2  50DE               	movf	postinc2,w,c
  8810  0000C4  59C3               	subwfb	(??_f_write+11)& (0+255),w,b
  8811  0000C6  A0D8               	btfss	status,0,c
  8812  0000C8  0012               	return	
  8813  0000CA  D22A               	goto	l10777
  8814  0000CC                     l10701:
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
  8818  0000CC  EE20 F006          	lfsr	2,6
  8819  0000D0  51B2               	movf	f_write@fp& (0+255),w,b
  8820  0000D2  26D9               	addwf	fsr2l,f,c
  8821  0000D4  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8822  0000D6  22DA               	addwfc	fsr2h,f,c
  8823  0000D8  0EFF               	movlw	255
  8824  0000DA  14DE               	andwf	postinc2,w,c
  8825  0000DC  6FB8               	movwf	??_f_write& (0+255),b
  8826  0000DE  0E01               	movlw	1
  8827  0000E0  14DE               	andwf	postinc2,w,c
  8828  0000E2  6FB9               	movwf	(??_f_write+1)& (0+255),b
  8829  0000E4  0E00               	movlw	0
  8830  0000E6  14DE               	andwf	postinc2,w,c
  8831  0000E8  6FBA               	movwf	(??_f_write+2)& (0+255),b
  8832  0000EA  0E00               	movlw	0
  8833  0000EC  14DE               	andwf	postinc2,w,c
  8834  0000EE  6FBB               	movwf	(??_f_write+3)& (0+255),b
  8835  0000F0  51B8               	movf	??_f_write& (0+255),w,b
  8836  0000F2  11B9               	iorwf	(??_f_write+1)& (0+255),w,b
  8837  0000F4  11BA               	iorwf	(??_f_write+2)& (0+255),w,b
  8838  0000F6  11BB               	iorwf	(??_f_write+3)& (0+255),w,b
  8839  0000F8  A4D8               	btfss	status,2,c
  8840  0000FA  D15C               	goto	l10753
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
  8844  0000FC  EE20 F004          	lfsr	2,4
  8845  000100  51B2               	movf	f_write@fp& (0+255),w,b
  8846  000102  26D9               	addwf	fsr2l,f,c
  8847  000104  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8848  000106  22DA               	addwfc	fsr2h,f,c
  8849  000108  EE10 F01D          	lfsr	1,29
  8850  00010C  50DE               	movf	postinc2,w,c
  8851  00010E  26E1               	addwf	fsr1l,f,c
  8852  000110  50DD               	movf	postdec2,w,c
  8853  000112  22E2               	addwfc	fsr1h,f,c
  8854  000114  EE20 F003          	lfsr	2,3
  8855  000118  51B2               	movf	f_write@fp& (0+255),w,b
  8856  00011A  26D9               	addwf	fsr2l,f,c
  8857  00011C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8858  00011E  22DA               	addwfc	fsr2h,f,c
  8859  000120  50E6               	movf	postinc1,w,c
  8860  000122  5CDE               	subwf	postinc2,w,c
  8861  000124  A0D8               	btfss	status,0,c
  8862  000126  D06B               	goto	l10725
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;tff.c: 1024: if (fp->fptr == 0) {
  8866  000128  EE20 F006          	lfsr	2,6
  8867  00012C  51B2               	movf	f_write@fp& (0+255),w,b
  8868  00012E  26D9               	addwf	fsr2l,f,c
  8869  000130  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8870  000132  22DA               	addwfc	fsr2h,f,c
  8871  000134  50DE               	movf	postinc2,w,c
  8872  000136  10DE               	iorwf	postinc2,w,c
  8873  000138  10DE               	iorwf	postinc2,w,c
  8874  00013A  10DE               	iorwf	postinc2,w,c
  8875  00013C  A4D8               	btfss	status,2,c
  8876  00013E  D023               	goto	l10713
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;tff.c: 1025: clust = fp->org_clust;
  8880  000140  EE20 F00E          	lfsr	2,14
  8881  000144  51B2               	movf	f_write@fp& (0+255),w,b
  8882  000146  26D9               	addwf	fsr2l,f,c
  8883  000148  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8884  00014A  22DA               	addwfc	fsr2h,f,c
  8885  00014C  CFDE F0CC          	movff	postinc2,f_write@clust
  8886  000150  CFDD F0CD          	movff	postdec2,f_write@clust+1
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;tff.c: 1026: if (clust == 0)
  8890  000154  51CC               	movf	f_write@clust& (0+255),w,b
  8891  000156  11CD               	iorwf	(f_write@clust+1)& (0+255),w,b
  8892  000158  A4D8               	btfss	status,2,c
  8893  00015A  D025               	goto	l10715
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
  8897  00015C  0E00               	movlw	0
  8898  00015E  6FA5               	movwf	(create_chain@clust+1)& (0+255),b
  8899  000160  0E00               	movlw	0
  8900  000162  6FA4               	movwf	create_chain@clust& (0+255),b
  8901  000164  EC6F  F016         	call	_create_chain	;wreg free
  8902  000168  C0A4  F0CC         	movff	?_create_chain,f_write@clust
  8903  00016C  C0A5  F0CD         	movff	?_create_chain+1,f_write@clust+1
  8904  000170  EE20 F00E          	lfsr	2,14
  8905  000174  51B2               	movf	f_write@fp& (0+255),w,b
  8906  000176  26D9               	addwf	fsr2l,f,c
  8907  000178  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8908  00017A  22DA               	addwfc	fsr2h,f,c
  8909  00017C  C0CC  FFDE         	movff	f_write@clust,postinc2
  8910  000180  C0CD  FFDD         	movff	f_write@clust+1,postdec2
  8911  000184  D010               	goto	l10715
  8912  000186                     l10713:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
  8916  000186  EE20 F010          	lfsr	2,16
  8917  00018A  51B2               	movf	f_write@fp& (0+255),w,b
  8918  00018C  26D9               	addwf	fsr2l,f,c
  8919  00018E  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8920  000190  22DA               	addwfc	fsr2h,f,c
  8921  000192  CFDE F0A4          	movff	postinc2,create_chain@clust
  8922  000196  CFDD F0A5          	movff	postdec2,create_chain@clust+1
  8923  00019A  EC6F  F016         	call	_create_chain	;wreg free
  8924  00019E  C0A4  F0CC         	movff	?_create_chain,f_write@clust
  8925  0001A2  C0A5  F0CD         	movff	?_create_chain+1,f_write@clust+1
  8926  0001A6                     l10715:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
  8930  0001A6  51CC               	movf	f_write@clust& (0+255),w,b
  8931  0001A8  11CD               	iorwf	(f_write@clust+1)& (0+255),w,b
  8932  0001AA  B4D8               	btfsc	status,2,c
  8933  0001AC  D1BD               	goto	u12250
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
  8937  0001AE  05CC               	decf	f_write@clust& (0+255),w,b
  8938  0001B0  11CD               	iorwf	(f_write@clust+1)& (0+255),w,b
  8939  0001B2  B4D8               	btfsc	status,2,c
  8940  0001B4  D1EC               	goto	l10787
  8941                           
  8942                           ; BSR set to: 0
  8943  0001B6  EE20 F004          	lfsr	2,4
  8944  0001BA  51B2               	movf	f_write@fp& (0+255),w,b
  8945  0001BC  26D9               	addwf	fsr2l,f,c
  8946  0001BE  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8947  0001C0  22DA               	addwfc	fsr2h,f,c
  8948  0001C2  EE10 F016          	lfsr	1,22
  8949  0001C6  50DE               	movf	postinc2,w,c
  8950  0001C8  26E1               	addwf	fsr1l,f,c
  8951  0001CA  50DD               	movf	postdec2,w,c
  8952  0001CC  22E2               	addwfc	fsr1h,f,c
  8953  0001CE  50E6               	movf	postinc1,w,c
  8954  0001D0  5DCC               	subwf	f_write@clust& (0+255),w,b
  8955  0001D2  50E6               	movf	postinc1,w,c
  8956  0001D4  59CD               	subwfb	(f_write@clust+1)& (0+255),w,b
  8957  0001D6  B0D8               	btfsc	status,0,c
  8958  0001D8  D1DA               	goto	l10787
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;tff.c: 1033: fp->curr_clust = clust;
  8962  0001DA  EE20 F010          	lfsr	2,16
  8963  0001DE  51B2               	movf	f_write@fp& (0+255),w,b
  8964  0001E0  26D9               	addwf	fsr2l,f,c
  8965  0001E2  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8966  0001E4  22DA               	addwfc	fsr2h,f,c
  8967  0001E6  C0CC  FFDE         	movff	f_write@clust,postinc2
  8968  0001EA  C0CD  FFDD         	movff	f_write@clust+1,postdec2
  8969                           
  8970                           ;tff.c: 1034: fp->csect = 0;
  8971  0001EE  EE20 F003          	lfsr	2,3
  8972  0001F2  51B2               	movf	f_write@fp& (0+255),w,b
  8973  0001F4  26D9               	addwf	fsr2l,f,c
  8974  0001F6  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8975  0001F8  22DA               	addwfc	fsr2h,f,c
  8976  0001FA  0E00               	movlw	0
  8977  0001FC  6EDF               	movwf	indf2,c
  8978  0001FE                     l10725:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
  8982  0001FE  EE20 F010          	lfsr	2,16
  8983  000202  51B2               	movf	f_write@fp& (0+255),w,b
  8984  000204  26D9               	addwf	fsr2l,f,c
  8985  000206  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8986  000208  22DA               	addwfc	fsr2h,f,c
  8987  00020A  CFDE F026          	movff	postinc2,clust2sect@clust
  8988  00020E  CFDD F027          	movff	postdec2,clust2sect@clust+1
  8989  000212  EC3C  F01F         	call	_clust2sect	;wreg free
  8990  000216  0100               	movlb	0	; () banked
  8991  000218  EE20 F003          	lfsr	2,3
  8992  00021C  51B2               	movf	f_write@fp& (0+255),w,b
  8993  00021E  26D9               	addwf	fsr2l,f,c
  8994  000220  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  8995  000222  22DA               	addwfc	fsr2h,f,c
  8996  000224  50DF               	movf	indf2,w,c
  8997  000226  6FB8               	movwf	??_f_write& (0+255),b
  8998  000228  51B8               	movf	??_f_write& (0+255),w,b
  8999  00022A  2426               	addwf	?_clust2sect^0,w,c
  9000  00022C  6FC6               	movwf	f_write@sect& (0+255),b
  9001  00022E  0E00               	movlw	0
  9002  000230  2027               	addwfc	(?_clust2sect+1)^0,w,c
  9003  000232  6FC7               	movwf	(f_write@sect+1)& (0+255),b
  9004  000234  0E00               	movlw	0
  9005  000236  2028               	addwfc	(?_clust2sect+2)^0,w,c
  9006  000238  6FC8               	movwf	(f_write@sect+2)& (0+255),b
  9007  00023A  0E00               	movlw	0
  9008  00023C  2029               	addwfc	(?_clust2sect+3)^0,w,c
  9009  00023E  6FC9               	movwf	(f_write@sect+3)& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;tff.c: 1037: cc = btw / 512U;
  9013  000240  C0B5  F0B8         	movff	f_write@btw,??_f_write
  9014  000244  C0B6  F0B9         	movff	f_write@btw+1,??_f_write+1
  9015  000248  0E09               	movlw	9
  9016  00024A  6FBA               	movwf	(??_f_write+2)& (0+255),b
  9017  00024C                     u12165:
  9018  00024C  90D8               	bcf	status,0,c
  9019  00024E  33B9               	rrcf	(??_f_write+1)& (0+255),f,b
  9020  000250  33B8               	rrcf	??_f_write& (0+255),f,b
  9021  000252  2FBA               	decfsz	(??_f_write+2)& (0+255),f,b
  9022  000254  D7FB               	goto	u12165
  9023  000256  C0B8  F0CA         	movff	??_f_write,f_write@cc
  9024  00025A  C0B9  F0CB         	movff	??_f_write+1,f_write@cc+1
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;tff.c: 1038: if (cc) {
  9028  00025E  51CA               	movf	f_write@cc& (0+255),w,b
  9029  000260  11CB               	iorwf	(f_write@cc+1)& (0+255),w,b
  9030  000262  B4D8               	btfsc	status,2,c
  9031  000264  D069               	goto	l10743
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
  9035  000266  EE20 F003          	lfsr	2,3
  9036  00026A  51B2               	movf	f_write@fp& (0+255),w,b
  9037  00026C  26D9               	addwf	fsr2l,f,c
  9038  00026E  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9039  000270  22DA               	addwfc	fsr2h,f,c
  9040  000272  50DF               	movf	indf2,w,c
  9041  000274  6FB8               	movwf	??_f_write& (0+255),b
  9042  000276  51B8               	movf	??_f_write& (0+255),w,b
  9043  000278  25CA               	addwf	f_write@cc& (0+255),w,b
  9044  00027A  6FB9               	movwf	(??_f_write+1)& (0+255),b
  9045  00027C  0E00               	movlw	0
  9046  00027E  21CB               	addwfc	(f_write@cc+1)& (0+255),w,b
  9047  000280  6FBA               	movwf	(??_f_write+2)& (0+255),b
  9048  000282  EE20 F004          	lfsr	2,4
  9049  000286  51B2               	movf	f_write@fp& (0+255),w,b
  9050  000288  26D9               	addwf	fsr2l,f,c
  9051  00028A  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9052  00028C  22DA               	addwfc	fsr2h,f,c
  9053  00028E  EE10 F01D          	lfsr	1,29
  9054  000292  50DE               	movf	postinc2,w,c
  9055  000294  26E1               	addwf	fsr1l,f,c
  9056  000296  50DD               	movf	postdec2,w,c
  9057  000298  22E2               	addwfc	fsr1h,f,c
  9058  00029A  50E7               	movf	indf1,w,c
  9059  00029C  6FBB               	movwf	(??_f_write+3)& (0+255),b
  9060  00029E  6BBC               	clrf	(??_f_write+4)& (0+255),b
  9061  0002A0  51B9               	movf	(??_f_write+1)& (0+255),w,b
  9062  0002A2  5DBB               	subwf	(??_f_write+3)& (0+255),w,b
  9063  0002A4  51BA               	movf	(??_f_write+2)& (0+255),w,b
  9064  0002A6  59BC               	subwfb	(??_f_write+4)& (0+255),w,b
  9065  0002A8  B0D8               	btfsc	status,0,c
  9066  0002AA  D01C               	goto	l10735
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
  9070  0002AC  EE20 F004          	lfsr	2,4
  9071  0002B0  51B2               	movf	f_write@fp& (0+255),w,b
  9072  0002B2  26D9               	addwf	fsr2l,f,c
  9073  0002B4  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9074  0002B6  22DA               	addwfc	fsr2h,f,c
  9075  0002B8  EE10 F01D          	lfsr	1,29
  9076  0002BC  50DE               	movf	postinc2,w,c
  9077  0002BE  26E1               	addwf	fsr1l,f,c
  9078  0002C0  50DD               	movf	postdec2,w,c
  9079  0002C2  22E2               	addwfc	fsr1h,f,c
  9080  0002C4  50E7               	movf	indf1,w,c
  9081  0002C6  6FB8               	movwf	??_f_write& (0+255),b
  9082  0002C8  EE20 F003          	lfsr	2,3
  9083  0002CC  51B2               	movf	f_write@fp& (0+255),w,b
  9084  0002CE  26D9               	addwf	fsr2l,f,c
  9085  0002D0  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9086  0002D2  22DA               	addwfc	fsr2h,f,c
  9087  0002D4  50DF               	movf	indf2,w,c
  9088  0002D6  6FB9               	movwf	(??_f_write+1)& (0+255),b
  9089  0002D8  51B9               	movf	(??_f_write+1)& (0+255),w,b
  9090  0002DA  5DB8               	subwf	??_f_write& (0+255),w,b
  9091  0002DC  6FCA               	movwf	f_write@cc& (0+255),b
  9092  0002DE  6BCB               	clrf	(f_write@cc+1)& (0+255),b
  9093  0002E0  A0D8               	btfss	status,0,c
  9094  0002E2  07CB               	decf	(f_write@cc+1)& (0+255),f,b
  9095  0002E4                     l10735:
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
  9099  0002E4  C0C5  F06C         	movff	f_write@wbuff,disk_write@buff
  9100  0002E8  6B6D               	clrf	(disk_write@buff+1)& (0+255),b
  9101  0002EA  C0C6  F06E         	movff	f_write@sect,disk_write@sector
  9102  0002EE  C0C7  F06F         	movff	f_write@sect+1,disk_write@sector+1
  9103  0002F2  C0C8  F070         	movff	f_write@sect+2,disk_write@sector+2
  9104  0002F6  C0C9  F071         	movff	f_write@sect+3,disk_write@sector+3
  9105  0002FA  C0CA  F072         	movff	f_write@cc,disk_write@count
  9106  0002FE  0E00               	movlw	0
  9107  000300  ECD6  F026         	call	_disk_write
  9108  000304  0900               	iorlw	0
  9109  000306  A4D8               	btfss	status,2,c
  9110  000308  D142               	goto	l10787
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;tff.c: 1043: fp->csect += (BYTE)cc;
  9114  00030A  EE20 F003          	lfsr	2,3
  9115  00030E  51B2               	movf	f_write@fp& (0+255),w,b
  9116  000310  26D9               	addwf	fsr2l,f,c
  9117  000312  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9118  000314  22DA               	addwfc	fsr2h,f,c
  9119  000316  51CA               	movf	f_write@cc& (0+255),w,b
  9120  000318  26DF               	addwf	indf2,f,c
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;tff.c: 1044: wcnt = 512U * cc;
  9124  00031A  C0CA  F0B8         	movff	f_write@cc,??_f_write
  9125  00031E  C0CB  F0B9         	movff	f_write@cc+1,??_f_write+1
  9126  000322  0E09               	movlw	9
  9127  000324                     u12205:
  9128  000324  90D8               	bcf	status,0,c
  9129  000326  37B8               	rlcf	??_f_write& (0+255),f,b
  9130  000328  37B9               	rlcf	(??_f_write+1)& (0+255),f,b
  9131  00032A  2EE8               	decfsz	wreg,f,c
  9132  00032C  D7FB               	goto	u12205
  9133  00032E  C0B8  F0CE         	movff	??_f_write,f_write@wcnt
  9134  000332  C0B9  F0CF         	movff	??_f_write+1,f_write@wcnt+1
  9135                           
  9136                           ;tff.c: 1045: continue;
  9137  000336  D0DA               	goto	l10769
  9138  000338                     l10743:
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
  9142  000338  EE20 F00A          	lfsr	2,10
  9143  00033C  51B2               	movf	f_write@fp& (0+255),w,b
  9144  00033E  26D9               	addwf	fsr2l,f,c
  9145  000340  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9146  000342  22DA               	addwfc	fsr2h,f,c
  9147  000344  EE10 F006          	lfsr	1,6
  9148  000348  51B2               	movf	f_write@fp& (0+255),w,b
  9149  00034A  26E1               	addwf	fsr1l,f,c
  9150  00034C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9151  00034E  22E2               	addwfc	fsr1h,f,c
  9152  000350  50DE               	movf	postinc2,w,c
  9153  000352  5CE6               	subwf	postinc1,w,c
  9154  000354  50DE               	movf	postinc2,w,c
  9155  000356  58E6               	subwfb	postinc1,w,c
  9156  000358  50DE               	movf	postinc2,w,c
  9157  00035A  58E6               	subwfb	postinc1,w,c
  9158  00035C  50DE               	movf	postinc2,w,c
  9159  00035E  58E6               	subwfb	postinc1,w,c
  9160  000360  A0D8               	btfss	status,0,c
  9161  000362  D021               	goto	l10751
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
  9165  000364  0E00               	movlw	0
  9166  000366  6F77               	movwf	move_window@sector& (0+255),b
  9167  000368  0E00               	movlw	0
  9168  00036A  6F78               	movwf	(move_window@sector+1)& (0+255),b
  9169  00036C  0E00               	movlw	0
  9170  00036E  6F79               	movwf	(move_window@sector+2)& (0+255),b
  9171  000370  0E00               	movlw	0
  9172  000372  6F7A               	movwf	(move_window@sector+3)& (0+255),b
  9173  000374  EC9A  F015         	call	_move_window	;wreg free
  9174  000378  0900               	iorlw	0
  9175  00037A  B4D8               	btfsc	status,2,c
  9176  00037C  D108               	goto	l10787
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;tff.c: 1049: fp->fs->winsect = sect;
  9180  00037E  EE20 F004          	lfsr	2,4
  9181  000382  51B2               	movf	f_write@fp& (0+255),w,b
  9182  000384  26D9               	addwf	fsr2l,f,c
  9183  000386  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9184  000388  22DA               	addwfc	fsr2h,f,c
  9185  00038A  EE10 F004          	lfsr	1,4
  9186  00038E  50DE               	movf	postinc2,w,c
  9187  000390  26E1               	addwf	fsr1l,f,c
  9188  000392  50DD               	movf	postdec2,w,c
  9189  000394  22E2               	addwfc	fsr1h,f,c
  9190  000396  C0C6  FFE6         	movff	f_write@sect,postinc1
  9191  00039A  C0C7  FFE6         	movff	f_write@sect+1,postinc1
  9192  00039E  C0C8  FFE6         	movff	f_write@sect+2,postinc1
  9193  0003A2  C0C9  FFE6         	movff	f_write@sect+3,postinc1
  9194  0003A6                     l10751:
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
  9198  0003A6  EE20 F003          	lfsr	2,3
  9199  0003AA  51B2               	movf	f_write@fp& (0+255),w,b
  9200  0003AC  26D9               	addwf	fsr2l,f,c
  9201  0003AE  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9202  0003B0  22DA               	addwfc	fsr2h,f,c
  9203  0003B2  2ADF               	incf	indf2,f,c
  9204  0003B4                     l10753:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
  9208  0003B4  EE20 F010          	lfsr	2,16
  9209  0003B8  51B2               	movf	f_write@fp& (0+255),w,b
  9210  0003BA  26D9               	addwf	fsr2l,f,c
  9211  0003BC  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9212  0003BE  22DA               	addwfc	fsr2h,f,c
  9213  0003C0  CFDE F026          	movff	postinc2,clust2sect@clust
  9214  0003C4  CFDD F027          	movff	postdec2,clust2sect@clust+1
  9215  0003C8  EC3C  F01F         	call	_clust2sect	;wreg free
  9216  0003CC  0100               	movlb	0	; () banked
  9217  0003CE  EE20 F003          	lfsr	2,3
  9218  0003D2  51B2               	movf	f_write@fp& (0+255),w,b
  9219  0003D4  26D9               	addwf	fsr2l,f,c
  9220  0003D6  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9221  0003D8  22DA               	addwfc	fsr2h,f,c
  9222  0003DA  50DF               	movf	indf2,w,c
  9223  0003DC  6FB8               	movwf	??_f_write& (0+255),b
  9224  0003DE  51B8               	movf	??_f_write& (0+255),w,b
  9225  0003E0  2426               	addwf	?_clust2sect^0,w,c
  9226  0003E2  6FB9               	movwf	(??_f_write+1)& (0+255),b
  9227  0003E4  0E00               	movlw	0
  9228  0003E6  2027               	addwfc	(?_clust2sect+1)^0,w,c
  9229  0003E8  6FBA               	movwf	(??_f_write+2)& (0+255),b
  9230  0003EA  0E00               	movlw	0
  9231  0003EC  2028               	addwfc	(?_clust2sect+2)^0,w,c
  9232  0003EE  6FBB               	movwf	(??_f_write+3)& (0+255),b
  9233  0003F0  0E00               	movlw	0
  9234  0003F2  2029               	addwfc	(?_clust2sect+3)^0,w,c
  9235  0003F4  6FBC               	movwf	(??_f_write+4)& (0+255),b
  9236  0003F6  0EFF               	movlw	255
  9237  0003F8  25B9               	addwf	(??_f_write+1)& (0+255),w,b
  9238  0003FA  6FC6               	movwf	f_write@sect& (0+255),b
  9239  0003FC  0EFF               	movlw	255
  9240  0003FE  21BA               	addwfc	(??_f_write+2)& (0+255),w,b
  9241  000400  6FC7               	movwf	(f_write@sect+1)& (0+255),b
  9242  000402  0EFF               	movlw	255
  9243  000404  21BB               	addwfc	(??_f_write+3)& (0+255),w,b
  9244  000406  6FC8               	movwf	(f_write@sect+2)& (0+255),b
  9245  000408  0EFF               	movlw	255
  9246  00040A  21BC               	addwfc	(??_f_write+4)& (0+255),w,b
  9247  00040C  6FC9               	movwf	(f_write@sect+3)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
  9251  00040E  C0C6  F077         	movff	f_write@sect,move_window@sector
  9252  000412  C0C7  F078         	movff	f_write@sect+1,move_window@sector+1
  9253  000416  C0C8  F079         	movff	f_write@sect+2,move_window@sector+2
  9254  00041A  C0C9  F07A         	movff	f_write@sect+3,move_window@sector+3
  9255  00041E  EC9A  F015         	call	_move_window	;wreg free
  9256  000422  0900               	iorlw	0
  9257  000424  B4D8               	btfsc	status,2,c
  9258  000426  D0B3               	goto	l10787
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
  9262  000428  0EFF               	movlw	255
  9263  00042A  6FB8               	movwf	??_f_write& (0+255),b
  9264  00042C  0E01               	movlw	1
  9265  00042E  6FB9               	movwf	(??_f_write+1)& (0+255),b
  9266  000430  EE20 F006          	lfsr	2,6
  9267  000434  51B2               	movf	f_write@fp& (0+255),w,b
  9268  000436  26D9               	addwf	fsr2l,f,c
  9269  000438  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9270  00043A  22DA               	addwfc	fsr2h,f,c
  9271  00043C  CFDE F0BA          	movff	postinc2,??_f_write+2
  9272  000440  CFDD F0BB          	movff	postdec2,??_f_write+3
  9273  000444  51B8               	movf	??_f_write& (0+255),w,b
  9274  000446  17BA               	andwf	(??_f_write+2)& (0+255),f,b
  9275  000448  51B9               	movf	(??_f_write+1)& (0+255),w,b
  9276  00044A  17BB               	andwf	(??_f_write+3)& (0+255),f,b
  9277  00044C  51BA               	movf	(??_f_write+2)& (0+255),w,b
  9278  00044E  0800               	sublw	0
  9279  000450  6FCE               	movwf	f_write@wcnt& (0+255),b
  9280  000452  51BB               	movf	(??_f_write+3)& (0+255),w,b
  9281  000454  A0D8               	btfss	status,0,c
  9282  000456  2AE8               	incf	wreg,f,c
  9283  000458  0802               	sublw	2
  9284  00045A  6FCF               	movwf	(f_write@wcnt+1)& (0+255),b
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
  9288  00045C  51CE               	movf	f_write@wcnt& (0+255),w,b
  9289  00045E  5DB5               	subwf	f_write@btw& (0+255),w,b
  9290  000460  51CF               	movf	(f_write@wcnt+1)& (0+255),w,b
  9291  000462  59B6               	subwfb	(f_write@btw+1)& (0+255),w,b
  9292  000464  B0D8               	btfsc	status,0,c
  9293  000466  D004               	goto	l10765
  9294                           
  9295                           ; BSR set to: 0
  9296  000468  C0B5  F0CE         	movff	f_write@btw,f_write@wcnt
  9297  00046C  C0B6  F0CF         	movff	f_write@btw+1,f_write@wcnt+1
  9298  000470                     l10765:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
  9302  000470  0EFF               	movlw	255
  9303  000472  6FB8               	movwf	??_f_write& (0+255),b
  9304  000474  0E01               	movlw	1
  9305  000476  6FB9               	movwf	(??_f_write+1)& (0+255),b
  9306  000478  EE20 F006          	lfsr	2,6
  9307  00047C  51B2               	movf	f_write@fp& (0+255),w,b
  9308  00047E  26D9               	addwf	fsr2l,f,c
  9309  000480  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9310  000482  22DA               	addwfc	fsr2h,f,c
  9311  000484  CFDE F0BA          	movff	postinc2,??_f_write+2
  9312  000488  CFDD F0BB          	movff	postdec2,??_f_write+3
  9313  00048C  51B8               	movf	??_f_write& (0+255),w,b
  9314  00048E  17BA               	andwf	(??_f_write+2)& (0+255),f,b
  9315  000490  51B9               	movf	(??_f_write+1)& (0+255),w,b
  9316  000492  17BB               	andwf	(??_f_write+3)& (0+255),f,b
  9317  000494  EE20 F004          	lfsr	2,4
  9318  000498  51B2               	movf	f_write@fp& (0+255),w,b
  9319  00049A  26D9               	addwf	fsr2l,f,c
  9320  00049C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9321  00049E  22DA               	addwfc	fsr2h,f,c
  9322  0004A0  CFDE F0BC          	movff	postinc2,??_f_write+4
  9323  0004A4  CFDD F0BD          	movff	postdec2,??_f_write+5
  9324  0004A8  51BA               	movf	(??_f_write+2)& (0+255),w,b
  9325  0004AA  27BC               	addwf	(??_f_write+4)& (0+255),f,b
  9326  0004AC  51BB               	movf	(??_f_write+3)& (0+255),w,b
  9327  0004AE  23BD               	addwfc	(??_f_write+5)& (0+255),f,b
  9328  0004B0  0E20               	movlw	32
  9329  0004B2  25BC               	addwf	(??_f_write+4)& (0+255),w,b
  9330  0004B4  6E1A               	movwf	memcpy@d1^0,c
  9331  0004B6  0E00               	movlw	0
  9332  0004B8  21BD               	addwfc	(??_f_write+5)& (0+255),w,b
  9333  0004BA  6E1B               	movwf	(memcpy@d1+1)^0,c
  9334  0004BC  C0C5  F01C         	movff	f_write@wbuff,memcpy@s1
  9335  0004C0  6A1D               	clrf	(memcpy@s1+1)^0,c
  9336  0004C2  C0CE  F01E         	movff	f_write@wcnt,memcpy@n
  9337  0004C6  C0CF  F01F         	movff	f_write@wcnt+1,memcpy@n+1
  9338  0004CA  ECB3  F027         	call	_memcpy	;wreg free
  9339                           
  9340                           ;tff.c: 1058: fp->fs->winflag = 1;
  9341  0004CE  0100               	movlb	0	; () banked
  9342  0004D0  EE20 F004          	lfsr	2,4
  9343  0004D4  51B2               	movf	f_write@fp& (0+255),w,b
  9344  0004D6  26D9               	addwf	fsr2l,f,c
  9345  0004D8  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9346  0004DA  22DA               	addwfc	fsr2h,f,c
  9347  0004DC  EE10 F01F          	lfsr	1,31
  9348  0004E0  50DE               	movf	postinc2,w,c
  9349  0004E2  26E1               	addwf	fsr1l,f,c
  9350  0004E4  50DD               	movf	postdec2,w,c
  9351  0004E6  22E2               	addwfc	fsr1h,f,c
  9352  0004E8  0E01               	movlw	1
  9353  0004EA  6EE7               	movwf	indf1,c
  9354  0004EC                     l10769:
  9355                           
  9356                           ; BSR set to: 0
  9357  0004EC  51CE               	movf	f_write@wcnt& (0+255),w,b
  9358  0004EE  27C5               	addwf	f_write@wbuff& (0+255),f,b
  9359                           
  9360                           ; BSR set to: 0
  9361  0004F0  EE20 F006          	lfsr	2,6
  9362  0004F4  51B2               	movf	f_write@fp& (0+255),w,b
  9363  0004F6  26D9               	addwf	fsr2l,f,c
  9364  0004F8  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9365  0004FA  22DA               	addwfc	fsr2h,f,c
  9366  0004FC  51CE               	movf	f_write@wcnt& (0+255),w,b
  9367  0004FE  26DE               	addwf	postinc2,f,c
  9368  000500  51CF               	movf	(f_write@wcnt+1)& (0+255),w,b
  9369  000502  22DE               	addwfc	postinc2,f,c
  9370  000504  0E00               	movlw	0
  9371  000506  22DE               	addwfc	postinc2,f,c
  9372  000508  22DE               	addwfc	postinc2,f,c
  9373                           
  9374                           ; BSR set to: 0
  9375  00050A  51B7               	movf	f_write@bw& (0+255),w,b
  9376  00050C  6ED9               	movwf	fsr2l,c
  9377  00050E  6ADA               	clrf	fsr2h,c
  9378  000510  51CE               	movf	f_write@wcnt& (0+255),w,b
  9379  000512  26DE               	addwf	postinc2,f,c
  9380  000514  51CF               	movf	(f_write@wcnt+1)& (0+255),w,b
  9381  000516  22DD               	addwfc	postdec2,f,c
  9382                           
  9383                           ; BSR set to: 0
  9384  000518  51CE               	movf	f_write@wcnt& (0+255),w,b
  9385  00051A  5FB5               	subwf	f_write@btw& (0+255),f,b
  9386  00051C  51CF               	movf	(f_write@wcnt+1)& (0+255),w,b
  9387  00051E  5BB6               	subwfb	(f_write@btw+1)& (0+255),f,b
  9388  000520                     l10777:
  9389                           
  9390                           ; BSR set to: 0
  9391  000520  51B5               	movf	f_write@btw& (0+255),w,b
  9392  000522  11B6               	iorwf	(f_write@btw+1)& (0+255),w,b
  9393  000524  A4D8               	btfss	status,2,c
  9394  000526  D5D2               	goto	l10701
  9395  000528                     u12250:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  9399  000528  EE20 F006          	lfsr	2,6
  9400  00052C  51B2               	movf	f_write@fp& (0+255),w,b
  9401  00052E  26D9               	addwf	fsr2l,f,c
  9402  000530  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9403  000532  22DA               	addwfc	fsr2h,f,c
  9404  000534  EE10 F00A          	lfsr	1,10
  9405  000538  51B2               	movf	f_write@fp& (0+255),w,b
  9406  00053A  26E1               	addwf	fsr1l,f,c
  9407  00053C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9408  00053E  22E2               	addwfc	fsr1h,f,c
  9409  000540  50DE               	movf	postinc2,w,c
  9410  000542  5CE6               	subwf	postinc1,w,c
  9411  000544  50DE               	movf	postinc2,w,c
  9412  000546  58E6               	subwfb	postinc1,w,c
  9413  000548  50DE               	movf	postinc2,w,c
  9414  00054A  58E6               	subwfb	postinc1,w,c
  9415  00054C  50DE               	movf	postinc2,w,c
  9416  00054E  58E6               	subwfb	postinc1,w,c
  9417  000550  B0D8               	btfsc	status,0,c
  9418  000552  D014               	goto	l10783
  9419                           
  9420                           ; BSR set to: 0
  9421  000554  EE20 F006          	lfsr	2,6
  9422  000558  51B2               	movf	f_write@fp& (0+255),w,b
  9423  00055A  26D9               	addwf	fsr2l,f,c
  9424  00055C  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9425  00055E  22DA               	addwfc	fsr2h,f,c
  9426  000560  EE10 F00A          	lfsr	1,10
  9427  000564  51B2               	movf	f_write@fp& (0+255),w,b
  9428  000566  26E1               	addwf	fsr1l,f,c
  9429  000568  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9430  00056A  22E2               	addwfc	fsr1h,f,c
  9431  00056C  CFDE FFE6          	movff	postinc2,postinc1
  9432  000570  CFDE FFE6          	movff	postinc2,postinc1
  9433  000574  CFDE FFE6          	movff	postinc2,postinc1
  9434  000578  CFDE FFE6          	movff	postinc2,postinc1
  9435  00057C                     l10783:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;tff.c: 1062: fp->flag |= 0x20;
  9439  00057C  EE20 F002          	lfsr	2,2
  9440  000580  51B2               	movf	f_write@fp& (0+255),w,b
  9441  000582  26D9               	addwf	fsr2l,f,c
  9442  000584  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9443  000586  22DA               	addwfc	fsr2h,f,c
  9444  000588  0E00               	movlw	0
  9445  00058A  8ADB               	bsf	plusw2,5,c
  9446  00058C  0012               	return	
  9447  00058E                     l10787:
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;tff.c: 1066: fp->flag |= 0x80;
  9451  00058E  EE20 F002          	lfsr	2,2
  9452  000592  51B2               	movf	f_write@fp& (0+255),w,b
  9453  000594  26D9               	addwf	fsr2l,f,c
  9454  000596  51B3               	movf	(f_write@fp+1)& (0+255),w,b
  9455  000598  22DA               	addwfc	fsr2h,f,c
  9456  00059A  0E00               	movlw	0
  9457  00059C  8EDB               	bsf	plusw2,7,c
  9458                           
  9459                           ; BSR set to: 0
  9460  00059E  0012               	return		;funcret
  9461  0005A0                     __end_of_f_write:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function ___llmod *****************
  9465 ;; Defined at:
  9466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  dividend        4   25[COMRAM] unsigned long 
  9469 ;;  divisor         4   29[COMRAM] unsigned long 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  counter         1   33[COMRAM] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  4   25[COMRAM] unsigned long 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 3D/0
  9478 ;;		On exit  : 3D/0
  9479 ;;		Unchanged: 3D/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9481 ;;      Params:         8       0       0       0       0       0       0       0       0
  9482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9484 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9485 ;;Total ram usage:        9 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    3
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_fprintf
  9492 ;;		_ultoa
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text51
  9497  00492C                     __ptext51:
  9498                           	callstack 0
  9499  00492C                     ___llmod:
  9500                           	callstack 18
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;incstack = 0
  9504  00492C  501E               	movf	___llmod@divisor^0,w,c
  9505  00492E  101F               	iorwf	(___llmod@divisor+1)^0,w,c
  9506  004930  1020               	iorwf	(___llmod@divisor+2)^0,w,c
  9507  004932  1021               	iorwf	(___llmod@divisor+3)^0,w,c
  9508  004934  B4D8               	btfsc	status,2,c
  9509  004936  D024               	goto	l2010
  9510  004938  0E01               	movlw	1
  9511  00493A  6E22               	movwf	___llmod@counter^0,c
  9512  00493C  D006               	goto	l10249
  9513  00493E                     l10247:
  9514  00493E  90D8               	bcf	status,0,c
  9515  004940  361E               	rlcf	___llmod@divisor^0,f,c
  9516  004942  361F               	rlcf	(___llmod@divisor+1)^0,f,c
  9517  004944  3620               	rlcf	(___llmod@divisor+2)^0,f,c
  9518  004946  3621               	rlcf	(___llmod@divisor+3)^0,f,c
  9519  004948  2A22               	incf	___llmod@counter^0,f,c
  9520  00494A                     l10249:
  9521  00494A  AE21               	btfss	(___llmod@divisor+3)^0,7,c
  9522  00494C  D7F8               	goto	l10247
  9523  00494E                     u11450:
  9524  00494E  501E               	movf	___llmod@divisor^0,w,c
  9525  004950  5C1A               	subwf	___llmod@dividend^0,w,c
  9526  004952  501F               	movf	(___llmod@divisor+1)^0,w,c
  9527  004954  581B               	subwfb	(___llmod@dividend+1)^0,w,c
  9528  004956  5020               	movf	(___llmod@divisor+2)^0,w,c
  9529  004958  581C               	subwfb	(___llmod@dividend+2)^0,w,c
  9530  00495A  5021               	movf	(___llmod@divisor+3)^0,w,c
  9531  00495C  581D               	subwfb	(___llmod@dividend+3)^0,w,c
  9532  00495E  A0D8               	btfss	status,0,c
  9533  004960  D008               	goto	l10255
  9534  004962  501E               	movf	___llmod@divisor^0,w,c
  9535  004964  5E1A               	subwf	___llmod@dividend^0,f,c
  9536  004966  501F               	movf	(___llmod@divisor+1)^0,w,c
  9537  004968  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
  9538  00496A  5020               	movf	(___llmod@divisor+2)^0,w,c
  9539  00496C  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
  9540  00496E  5021               	movf	(___llmod@divisor+3)^0,w,c
  9541  004970  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
  9542  004972                     l10255:
  9543  004972  90D8               	bcf	status,0,c
  9544  004974  3221               	rrcf	(___llmod@divisor+3)^0,f,c
  9545  004976  3220               	rrcf	(___llmod@divisor+2)^0,f,c
  9546  004978  321F               	rrcf	(___llmod@divisor+1)^0,f,c
  9547  00497A  321E               	rrcf	___llmod@divisor^0,f,c
  9548  00497C  2E22               	decfsz	___llmod@counter^0,f,c
  9549  00497E  D7E7               	goto	u11450
  9550  004980                     l2010:
  9551  004980  C01A  F01A         	movff	___llmod@dividend,?___llmod
  9552  004984  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  9553  004988  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  9554  00498C  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  9555  004990  0012               	return		;funcret
  9556  004992                     __end_of___llmod:
  9557                           	callstack 0
  9558                           
  9559 ;; *************** function _f_open *****************
  9560 ;; Defined at:
  9561 ;;		line 833 in file "bibliotecas/tff.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  fp              2  100[BANK0 ] PTR struct _FIL
  9564 ;;		 -> fil(28), 
  9565 ;;  path            2  102[BANK0 ] PTR const unsigned char 
  9566 ;;		 -> STR_15(13), filename(20), 
  9567 ;;  mode            1  104[BANK0 ] unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  dw              4  123[BANK0 ] unsigned long 
  9570 ;;  rs              2  121[BANK0 ] unsigned short 
  9571 ;;  dj             14  130[BANK0 ] struct _DIR_E
  9572 ;;  fn             12  109[BANK0 ] unsigned char [12]
  9573 ;;  dir             2  128[BANK0 ] PTR unsigned char 
  9574 ;;		 -> NULL(0), fs(544), 
  9575 ;;  res             1  127[BANK0 ] enum E155
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      enum E3237
  9578 ;; Registers used:
  9579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 3F/0
  9582 ;;		On exit  : 3F/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9585 ;;      Params:         0       5       0       0       0       0       0       0       0
  9586 ;;      Locals:         0      35       0       0       0       0       0       0       0
  9587 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9588 ;;      Totals:         0      44       0       0       0       0       0       0       0
  9589 ;;Total ram usage:       44 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:   12
  9592 ;; This function calls:
  9593 ;;		_auto_mount
  9594 ;;		_get_fattime
  9595 ;;		_memcpy
  9596 ;;		_memset
  9597 ;;		_move_window
  9598 ;;		_remove_chain
  9599 ;;		_reserve_direntry
  9600 ;;		_trace_path
  9601 ;; This function is called by:
  9602 ;;		_escrita_sdcard
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text52
  9607  0012F4                     __ptext52:
  9608                           	callstack 0
  9609  0012F4                     _f_open:
  9610                           	callstack 14
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
  9614                           
  9615                           ;incstack = 0
  9616  0012F4  EE20 F004          	lfsr	2,4
  9617  0012F8  51C4               	movf	f_open@fp& (0+255),w,b
  9618  0012FA  26D9               	addwf	fsr2l,f,c
  9619  0012FC  51C5               	movf	(f_open@fp+1)& (0+255),w,b
  9620  0012FE  22DA               	addwfc	fsr2h,f,c
  9621  001300  0E00               	movlw	0
  9622  001302  6EDE               	movwf	postinc2,c
  9623  001304  0E00               	movlw	0
  9624  001306  6EDD               	movwf	postdec2,c
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
  9628  001308  0E1F               	movlw	31
  9629  00130A  17C8               	andwf	f_open@mode& (0+255),f,b
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  9633  00130C  0EC6               	movlw	low f_open@path
  9634  00130E  6F7D               	movwf	auto_mount@path& (0+255),b
  9635  001310  51C8               	movf	f_open@mode& (0+255),w,b
  9636  001312  0B1E               	andlw	30
  9637  001314  6F7E               	movwf	auto_mount@chk_wp& (0+255),b
  9638  001316  ECD0  F002         	call	_auto_mount	;wreg free
  9639  00131A  0100               	movlb	0	; () banked
  9640  00131C  6FDF               	movwf	f_open@res& (0+255),b
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;tff.c: 853: if (res != FR_OK) return res;
  9644  00131E  51DF               	movf	f_open@res& (0+255),w,b
  9645  001320  B4D8               	btfsc	status,2,c
  9646  001322  D002               	goto	l11751
  9647  001324                     u13730:
  9648                           
  9649                           ; BSR set to: 0
  9650  001324  51DF               	movf	f_open@res& (0+255),w,b
  9651  001326  0012               	return	
  9652  001328                     l11751:
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
  9656  001328  0EE2               	movlw	low f_open@dj
  9657  00132A  6FAB               	movwf	trace_path@dj& (0+255),b
  9658  00132C  0ECD               	movlw	low f_open@fn
  9659  00132E  6FAC               	movwf	trace_path@fn& (0+255),b
  9660  001330  C0C6  F0AD         	movff	f_open@path,trace_path@path
  9661  001334  C0C7  F0AE         	movff	f_open@path+1,trace_path@path+1
  9662  001338  0EE0               	movlw	low f_open@dir
  9663  00133A  6FAF               	movwf	trace_path@dir& (0+255),b
  9664  00133C  EC93  F00C         	call	_trace_path	;wreg free
  9665  001340  6FDF               	movwf	f_open@res& (0+255),b
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
  9669  001342  C0C8  F0C9         	movff	f_open@mode,??_f_open
  9670  001346  0E1C               	movlw	28
  9671  001348  17C9               	andwf	??_f_open& (0+255),f,b
  9672  00134A  B4D8               	btfsc	status,2,c
  9673  00134C  D0DD               	goto	l11813
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
  9677  00134E  51DF               	movf	f_open@res& (0+255),w,b
  9678  001350  B4D8               	btfsc	status,2,c
  9679  001352  D034               	goto	l1003
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
  9683  001354  0E02               	movlw	2
  9684  001356  19DF               	xorwf	f_open@res& (0+255),w,b
  9685  001358  A4D8               	btfss	status,2,c
  9686  00135A  D7E4               	goto	u13730
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
  9690  00135C  0EE2               	movlw	low f_open@dj
  9691  00135E  6FB2               	movwf	reserve_direntry@dj& (0+255),b
  9692  001360  0EE0               	movlw	low f_open@dir
  9693  001362  6FB3               	movwf	reserve_direntry@dir& (0+255),b
  9694  001364  ECD0  F00D         	call	_reserve_direntry	;wreg free
  9695  001368  6FDF               	movwf	f_open@res& (0+255),b
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;tff.c: 864: if (res != FR_OK) return res;
  9699  00136A  51DF               	movf	f_open@res& (0+255),w,b
  9700  00136C  A4D8               	btfss	status,2,c
  9701  00136E  D7DA               	goto	u13730
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;tff.c: 865: memset(dir, 0, 32);
  9705  001370  C0E0  F01A         	movff	f_open@dir,memset@p1
  9706  001374  C0E1  F01B         	movff	f_open@dir+1,memset@p1+1
  9707  001378  0E00               	movlw	0
  9708  00137A  6E1D               	movwf	(memset@c+1)^0,c
  9709  00137C  0E00               	movlw	0
  9710  00137E  6E1C               	movwf	memset@c^0,c
  9711  001380  0E00               	movlw	0
  9712  001382  6E1F               	movwf	(memset@n+1)^0,c
  9713  001384  0E20               	movlw	32
  9714  001386  6E1E               	movwf	memset@n^0,c
  9715  001388  ECE1  F028         	call	_memset	;wreg free
  9716                           
  9717                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
  9718  00138C  C0E0  F01A         	movff	f_open@dir,memcpy@d1
  9719  001390  C0E1  F01B         	movff	f_open@dir+1,memcpy@d1+1
  9720  001394  0ECD               	movlw	low f_open@fn
  9721  001396  6E1C               	movwf	memcpy@s1^0,c
  9722  001398  6A1D               	clrf	(memcpy@s1+1)^0,c
  9723  00139A  0E00               	movlw	0
  9724  00139C  6E1F               	movwf	(memcpy@n+1)^0,c
  9725  00139E  0E0B               	movlw	11
  9726  0013A0  6E1E               	movwf	memcpy@n^0,c
  9727  0013A2  ECB3  F027         	call	_memcpy	;wreg free
  9728                           
  9729                           ;tff.c: 867: dir[12] = fn[11];
  9730  0013A6  0100               	movlb	0	; () banked
  9731  0013A8  EE20 F00C          	lfsr	2,12
  9732  0013AC  51E0               	movf	f_open@dir& (0+255),w,b
  9733  0013AE  26D9               	addwf	fsr2l,f,c
  9734  0013B0  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9735  0013B2  22DA               	addwfc	fsr2h,f,c
  9736  0013B4  C0D8  FFDF         	movff	f_open@fn+11,indf2
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;tff.c: 868: mode |= 0x08;
  9740  0013B8  87C8               	bsf	f_open@mode& (0+255),3,b
  9741                           
  9742                           ;tff.c: 869: }
  9743  0013BA  D07A               	goto	l11801
  9744  0013BC                     l1003:
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
  9748  0013BC  A5C8               	btfss	f_open@mode& (0+255),2,b
  9749  0013BE  D002               	goto	l11781
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;tff.c: 872: return FR_EXIST;
  9753  0013C0  0E07               	movlw	7
  9754  0013C2  0012               	return	
  9755  0013C4                     l11781:
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
  9759  0013C4  51E0               	movf	f_open@dir& (0+255),w,b
  9760  0013C6  11E1               	iorwf	(f_open@dir+1)& (0+255),w,b
  9761  0013C8  B4D8               	btfsc	status,2,c
  9762  0013CA  D00C               	goto	u13800
  9763                           
  9764                           ; BSR set to: 0
  9765  0013CC  EE20 F00B          	lfsr	2,11
  9766  0013D0  51E0               	movf	f_open@dir& (0+255),w,b
  9767  0013D2  26D9               	addwf	fsr2l,f,c
  9768  0013D4  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9769  0013D6  22DA               	addwfc	fsr2h,f,c
  9770  0013D8  50DF               	movf	indf2,w,c
  9771  0013DA  6FC9               	movwf	??_f_open& (0+255),b
  9772  0013DC  0E11               	movlw	17
  9773  0013DE  17C9               	andwf	??_f_open& (0+255),f,b
  9774  0013E0  B4D8               	btfsc	status,2,c
  9775  0013E2  D002               	goto	l1008
  9776  0013E4                     u13800:
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;tff.c: 874: return FR_DENIED;
  9780  0013E4  0E06               	movlw	6
  9781  0013E6  0012               	return	
  9782  0013E8                     l1008:
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;tff.c: 875: if (mode & 0x08) {
  9786  0013E8  A7C8               	btfss	f_open@mode& (0+255),3,b
  9787  0013EA  D062               	goto	l11801
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9791  0013EC  EE20 F01A          	lfsr	2,26
  9792  0013F0  51E0               	movf	f_open@dir& (0+255),w,b
  9793  0013F2  26D9               	addwf	fsr2l,f,c
  9794  0013F4  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9795  0013F6  22DA               	addwfc	fsr2h,f,c
  9796  0013F8  CFDE F0D9          	movff	postinc2,f_open@rs
  9797  0013FC  CFDD F0DA          	movff	postdec2,f_open@rs+1
  9798                           
  9799                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
  9800  001400  EE20 F01A          	lfsr	2,26
  9801  001404  51E0               	movf	f_open@dir& (0+255),w,b
  9802  001406  26D9               	addwf	fsr2l,f,c
  9803  001408  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9804  00140A  22DA               	addwfc	fsr2h,f,c
  9805  00140C  0E00               	movlw	0
  9806  00140E  6EDE               	movwf	postinc2,c
  9807  001410  0E00               	movlw	0
  9808  001412  6EDD               	movwf	postdec2,c
  9809                           
  9810                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
  9811  001414  EE20 F01C          	lfsr	2,28
  9812  001418  51E0               	movf	f_open@dir& (0+255),w,b
  9813  00141A  26D9               	addwf	fsr2l,f,c
  9814  00141C  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9815  00141E  22DA               	addwfc	fsr2h,f,c
  9816  001420  6ADE               	clrf	postinc2,c
  9817  001422  6ADE               	clrf	postinc2,c
  9818  001424  6ADE               	clrf	postinc2,c
  9819  001426  6ADD               	clrf	postdec2,c
  9820                           
  9821                           ;tff.c: 884: dj.fs->winflag = 1;
  9822  001428  EE20 F01F          	lfsr	2,31
  9823  00142C  51E6               	movf	(f_open@dj+4)& (0+255),w,b
  9824  00142E  26D9               	addwf	fsr2l,f,c
  9825  001430  51E7               	movf	(f_open@dj+5)& (0+255),w,b
  9826  001432  22DA               	addwfc	fsr2h,f,c
  9827  001434  0E01               	movlw	1
  9828  001436  6EDF               	movwf	indf2,c
  9829                           
  9830                           ;tff.c: 885: dw = dj.fs->winsect;
  9831  001438  EE20 F004          	lfsr	2,4
  9832  00143C  51E6               	movf	(f_open@dj+4)& (0+255),w,b
  9833  00143E  26D9               	addwf	fsr2l,f,c
  9834  001440  51E7               	movf	(f_open@dj+5)& (0+255),w,b
  9835  001442  22DA               	addwfc	fsr2h,f,c
  9836  001444  CFDE F0DB          	movff	postinc2,f_open@dw
  9837  001448  CFDE F0DC          	movff	postinc2,f_open@dw+1
  9838  00144C  CFDE F0DD          	movff	postinc2,f_open@dw+2
  9839  001450  CFDE F0DE          	movff	postinc2,f_open@dw+3
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
  9843  001454  C0D9  F0A4         	movff	f_open@rs,remove_chain@clust
  9844  001458  C0DA  F0A5         	movff	f_open@rs+1,remove_chain@clust+1
  9845  00145C  EC8E  F020         	call	_remove_chain	;wreg free
  9846  001460  0900               	iorlw	0
  9847  001462  B4D8               	btfsc	status,2,c
  9848  001464  D00D               	goto	u13830
  9849                           
  9850                           ; BSR set to: 0
  9851  001466  C0DB  F077         	movff	f_open@dw,move_window@sector
  9852  00146A  C0DC  F078         	movff	f_open@dw+1,move_window@sector+1
  9853  00146E  C0DD  F079         	movff	f_open@dw+2,move_window@sector+2
  9854  001472  C0DE  F07A         	movff	f_open@dw+3,move_window@sector+3
  9855  001476  EC9A  F015         	call	_move_window	;wreg free
  9856  00147A  0900               	iorlw	0
  9857  00147C  A4D8               	btfss	status,2,c
  9858  00147E  D002               	goto	l11799
  9859  001480                     u13830:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;tff.c: 887: return FR_RW_ERROR;
  9863  001480  0E08               	movlw	8
  9864  001482  0012               	return	
  9865  001484                     l11799:
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
  9869  001484  0EFF               	movlw	255
  9870  001486  6FC9               	movwf	??_f_open& (0+255),b
  9871  001488  0EFF               	movlw	255
  9872  00148A  6FCA               	movwf	(??_f_open+1)& (0+255),b
  9873  00148C  C0D9  F0CB         	movff	f_open@rs,??_f_open+2
  9874  001490  C0DA  F0CC         	movff	f_open@rs+1,??_f_open+3
  9875  001494  51C9               	movf	??_f_open& (0+255),w,b
  9876  001496  27CB               	addwf	(??_f_open+2)& (0+255),f,b
  9877  001498  51CA               	movf	(??_f_open+1)& (0+255),w,b
  9878  00149A  23CC               	addwfc	(??_f_open+3)& (0+255),f,b
  9879  00149C  EE20 F018          	lfsr	2,24
  9880  0014A0  51E6               	movf	(f_open@dj+4)& (0+255),w,b
  9881  0014A2  26D9               	addwf	fsr2l,f,c
  9882  0014A4  51E7               	movf	(f_open@dj+5)& (0+255),w,b
  9883  0014A6  22DA               	addwfc	fsr2h,f,c
  9884  0014A8  C0CB  FFDE         	movff	??_f_open+2,postinc2
  9885  0014AC  C0CC  FFDD         	movff	??_f_open+3,postdec2
  9886  0014B0                     l11801:
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
  9890  0014B0  A7C8               	btfss	f_open@mode& (0+255),3,b
  9891  0014B2  D045               	goto	l11833
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;tff.c: 892: dir[11] = 0;
  9895  0014B4  EE20 F00B          	lfsr	2,11
  9896  0014B8  51E0               	movf	f_open@dir& (0+255),w,b
  9897  0014BA  26D9               	addwf	fsr2l,f,c
  9898  0014BC  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9899  0014BE  22DA               	addwfc	fsr2h,f,c
  9900  0014C0  0E00               	movlw	0
  9901  0014C2  6EDF               	movwf	indf2,c
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;tff.c: 893: dw = get_fattime();
  9905  0014C4  EC95  F018         	call	_get_fattime	;wreg free
  9906  0014C8  C01E  F0DB         	movff	?_get_fattime,f_open@dw
  9907  0014CC  C01F  F0DC         	movff	?_get_fattime+1,f_open@dw+1
  9908  0014D0  C020  F0DD         	movff	?_get_fattime+2,f_open@dw+2
  9909  0014D4  C021  F0DE         	movff	?_get_fattime+3,f_open@dw+3
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
  9913  0014D8  EE20 F00E          	lfsr	2,14
  9914  0014DC  51E0               	movf	f_open@dir& (0+255),w,b
  9915  0014DE  26D9               	addwf	fsr2l,f,c
  9916  0014E0  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9917  0014E2  22DA               	addwfc	fsr2h,f,c
  9918  0014E4  C0DB  FFDE         	movff	f_open@dw,postinc2
  9919  0014E8  C0DC  FFDE         	movff	f_open@dw+1,postinc2
  9920  0014EC  C0DD  FFDE         	movff	f_open@dw+2,postinc2
  9921  0014F0  C0DE  FFDE         	movff	f_open@dw+3,postinc2
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;tff.c: 895: dj.fs->winflag = 1;
  9925  0014F4  EE20 F01F          	lfsr	2,31
  9926  0014F8  51E6               	movf	(f_open@dj+4)& (0+255),w,b
  9927  0014FA  26D9               	addwf	fsr2l,f,c
  9928  0014FC  51E7               	movf	(f_open@dj+5)& (0+255),w,b
  9929  0014FE  22DA               	addwfc	fsr2h,f,c
  9930  001500  0E01               	movlw	1
  9931  001502  6EDF               	movwf	indf2,c
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;tff.c: 896: mode |= 0x20;
  9935  001504  8BC8               	bsf	f_open@mode& (0+255),5,b
  9936  001506  D01B               	goto	l11833
  9937  001508                     l11813:
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
  9941  001508  51DF               	movf	f_open@res& (0+255),w,b
  9942  00150A  A4D8               	btfss	status,2,c
  9943  00150C  D70B               	goto	u13730
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
  9947  00150E  51E0               	movf	f_open@dir& (0+255),w,b
  9948  001510  11E1               	iorwf	(f_open@dir+1)& (0+255),w,b
  9949  001512  B4D8               	btfsc	status,2,c
  9950  001514  D008               	goto	u13870
  9951                           
  9952                           ; BSR set to: 0
  9953  001516  EE20 F00B          	lfsr	2,11
  9954  00151A  51E0               	movf	f_open@dir& (0+255),w,b
  9955  00151C  26D9               	addwf	fsr2l,f,c
  9956  00151E  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9957  001520  22DA               	addwfc	fsr2h,f,c
  9958  001522  A8DF               	btfss	indf2,4,c
  9959  001524  D002               	goto	l1018
  9960  001526                     u13870:
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;tff.c: 904: return FR_NO_FILE;
  9964  001526  0E02               	movlw	2
  9965  001528  0012               	return	
  9966  00152A                     l1018:
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
  9970  00152A  A3C8               	btfss	f_open@mode& (0+255),1,b
  9971  00152C  D008               	goto	l11833
  9972                           
  9973                           ; BSR set to: 0
  9974  00152E  EE20 F00B          	lfsr	2,11
  9975  001532  51E0               	movf	f_open@dir& (0+255),w,b
  9976  001534  26D9               	addwf	fsr2l,f,c
  9977  001536  51E1               	movf	(f_open@dir+1)& (0+255),w,b
  9978  001538  22DA               	addwfc	fsr2h,f,c
  9979  00153A  B0DF               	btfsc	indf2,0,c
  9980  00153C  D753               	goto	u13800
  9981  00153E                     l11833:
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
  9985  00153E  EE20 F004          	lfsr	2,4
  9986  001542  51E6               	movf	(f_open@dj+4)& (0+255),w,b
  9987  001544  26D9               	addwf	fsr2l,f,c
  9988  001546  51E7               	movf	(f_open@dj+5)& (0+255),w,b
  9989  001548  22DA               	addwfc	fsr2h,f,c
  9990  00154A  EE10 F016          	lfsr	1,22
  9991  00154E  51C4               	movf	f_open@fp& (0+255),w,b
  9992  001550  26E1               	addwf	fsr1l,f,c
  9993  001552  51C5               	movf	(f_open@fp+1)& (0+255),w,b
  9994  001554  22E2               	addwfc	fsr1h,f,c
  9995  001556  CFDE FFE6          	movff	postinc2,postinc1
  9996  00155A  CFDE FFE6          	movff	postinc2,postinc1
  9997  00155E  CFDE FFE6          	movff	postinc2,postinc1
  9998  001562  CFDE FFE6          	movff	postinc2,postinc1
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;tff.c: 910: fp->dir_ptr = dir;
 10002  001566  EE20 F01A          	lfsr	2,26
 10003  00156A  51C4               	movf	f_open@fp& (0+255),w,b
 10004  00156C  26D9               	addwf	fsr2l,f,c
 10005  00156E  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10006  001570  22DA               	addwfc	fsr2h,f,c
 10007  001572  C0E0  FFDE         	movff	f_open@dir,postinc2
 10008  001576  C0E1  FFDD         	movff	f_open@dir+1,postdec2
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;tff.c: 912: fp->flag = mode;
 10012  00157A  EE20 F002          	lfsr	2,2
 10013  00157E  51C4               	movf	f_open@fp& (0+255),w,b
 10014  001580  26D9               	addwf	fsr2l,f,c
 10015  001582  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10016  001584  22DA               	addwfc	fsr2h,f,c
 10017  001586  C0C8  FFDF         	movff	f_open@mode,indf2
 10018                           
 10019                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 10020  00158A  EE20 F01A          	lfsr	2,26
 10021  00158E  51E0               	movf	f_open@dir& (0+255),w,b
 10022  001590  26D9               	addwf	fsr2l,f,c
 10023  001592  51E1               	movf	(f_open@dir+1)& (0+255),w,b
 10024  001594  22DA               	addwfc	fsr2h,f,c
 10025  001596  EE10 F00E          	lfsr	1,14
 10026  00159A  51C4               	movf	f_open@fp& (0+255),w,b
 10027  00159C  26E1               	addwf	fsr1l,f,c
 10028  00159E  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10029  0015A0  22E2               	addwfc	fsr1h,f,c
 10030  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 10031  0015A6  CFDD FFE5          	movff	postdec2,postdec1
 10032                           
 10033                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 10034  0015AA  EE20 F01C          	lfsr	2,28
 10035  0015AE  51E0               	movf	f_open@dir& (0+255),w,b
 10036  0015B0  26D9               	addwf	fsr2l,f,c
 10037  0015B2  51E1               	movf	(f_open@dir+1)& (0+255),w,b
 10038  0015B4  22DA               	addwfc	fsr2h,f,c
 10039  0015B6  EE10 F00A          	lfsr	1,10
 10040  0015BA  51C4               	movf	f_open@fp& (0+255),w,b
 10041  0015BC  26E1               	addwf	fsr1l,f,c
 10042  0015BE  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10043  0015C0  22E2               	addwfc	fsr1h,f,c
 10044  0015C2  CFDE FFE6          	movff	postinc2,postinc1
 10045  0015C6  CFDE FFE6          	movff	postinc2,postinc1
 10046  0015CA  CFDE FFE6          	movff	postinc2,postinc1
 10047  0015CE  CFDE FFE6          	movff	postinc2,postinc1
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 10051  0015D2  EE20 F006          	lfsr	2,6
 10052  0015D6  51C4               	movf	f_open@fp& (0+255),w,b
 10053  0015D8  26D9               	addwf	fsr2l,f,c
 10054  0015DA  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10055  0015DC  22DA               	addwfc	fsr2h,f,c
 10056  0015DE  6ADE               	clrf	postinc2,c
 10057  0015E0  6ADE               	clrf	postinc2,c
 10058  0015E2  6ADE               	clrf	postinc2,c
 10059  0015E4  6ADD               	clrf	postdec2,c
 10060                           
 10061                           ; BSR set to: 0
 10062  0015E6  EE20 F003          	lfsr	2,3
 10063  0015EA  51C4               	movf	f_open@fp& (0+255),w,b
 10064  0015EC  26D9               	addwf	fsr2l,f,c
 10065  0015EE  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10066  0015F0  22DA               	addwfc	fsr2h,f,c
 10067  0015F2  0EFF               	movlw	255
 10068  0015F4  6EDF               	movwf	indf2,c
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 10072  0015F6  EE20 F004          	lfsr	2,4
 10073  0015FA  51C4               	movf	f_open@fp& (0+255),w,b
 10074  0015FC  26D9               	addwf	fsr2l,f,c
 10075  0015FE  51C5               	movf	(f_open@fp+1)& (0+255),w,b
 10076  001600  22DA               	addwfc	fsr2h,f,c
 10077  001602  C0E6  FFDE         	movff	f_open@dj+4,postinc2
 10078  001606  C0E7  FFDD         	movff	f_open@dj+5,postdec2
 10079                           
 10080                           ; BSR set to: 0
 10081  00160A  C0E6  FFD9         	movff	f_open@dj+4,fsr2l
 10082  00160E  C0E7  FFDA         	movff	f_open@dj+5,fsr2h
 10083  001612  C0C4  FFE1         	movff	f_open@fp,fsr1l
 10084  001616  C0C5  FFE2         	movff	f_open@fp+1,fsr1h
 10085  00161A  CFDE FFE6          	movff	postinc2,postinc1
 10086  00161E  CFDD FFE5          	movff	postdec2,postdec1
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;tff.c: 922: return FR_OK;
 10090  001622  0E00               	movlw	0
 10091                           
 10092                           ; BSR set to: 0
 10093  001624  0012               	return		;funcret
 10094  001626                     __end_of_f_open:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _trace_path *****************
 10098 ;; Defined at:
 10099 ;;		line 502 in file "bibliotecas/tff.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  dj              1   75[BANK0 ] PTR struct _DIR_E
 10102 ;;		 -> f_open@dj(14), 
 10103 ;;  fn              1   76[BANK0 ] PTR unsigned char 
 10104 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 10105 ;;  path            2   77[BANK0 ] PTR const unsigned char 
 10106 ;;		 -> STR_15(13), filename(20), 
 10107 ;;  dir             1   79[BANK0 ] PTR PTR unsigned char 
 10108 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  dptr            2   93[BANK0 ] PTR unsigned char 
 10111 ;;		 -> fs.win(512), NULL(0), fs(544), 
 10112 ;;  clust           2   90[BANK0 ] unsigned short 
 10113 ;;  fs              2   88[BANK0 ] PTR struct _FATFS
 10114 ;;		 -> NULL(0), fs(544), 
 10115 ;;  ds              1   92[BANK0 ] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      enum E155
 10118 ;; Registers used:
 10119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 3F/0
 10122 ;;		On exit  : 3F/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10125 ;;      Params:         0       5       0       0       0       0       0       0       0
 10126 ;;      Locals:         0      11       0       0       0       0       0       0       0
 10127 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10128 ;;      Totals:         0      20       0       0       0       0       0       0       0
 10129 ;;Total ram usage:       20 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:   11
 10132 ;; This function calls:
 10133 ;;		_clust2sect
 10134 ;;		_make_dirfile
 10135 ;;		_memcmp
 10136 ;;		_move_window
 10137 ;;		_next_dir_entry
 10138 ;; This function is called by:
 10139 ;;		_f_open
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text53
 10144  001926                     __ptext53:
 10145                           	callstack 0
 10146  001926                     _trace_path:
 10147                           	callstack 14
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;tff.c: 512: FATFS *fs = FatFs;
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;incstack = 0
 10154  001926  C034  F0B8         	movff	_FatFs,trace_path@fs
 10155  00192A  C035  F0B9         	movff	_FatFs+1,trace_path@fs+1
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;tff.c: 515: dj->fs = fs;
 10159  00192E  51AB               	movf	trace_path@dj& (0+255),w,b
 10160  001930  6ED9               	movwf	fsr2l,c
 10161  001932  6ADA               	clrf	fsr2h,c
 10162  001934  0E04               	movlw	4
 10163  001936  26D9               	addwf	fsr2l,f,c
 10164  001938  C0B8  FFDE         	movff	trace_path@fs,postinc2
 10165  00193C  C0B9  FFDD         	movff	trace_path@fs+1,postdec2
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;tff.c: 516: clust = fs->dirbase;
 10169  001940  EE20 F00C          	lfsr	2,12
 10170  001944  51B8               	movf	trace_path@fs& (0+255),w,b
 10171  001946  26D9               	addwf	fsr2l,f,c
 10172  001948  51B9               	movf	(trace_path@fs+1)& (0+255),w,b
 10173  00194A  22DA               	addwfc	fsr2h,f,c
 10174  00194C  CFDE F0BA          	movff	postinc2,trace_path@clust
 10175  001950  CFDD F0BB          	movff	postdec2,trace_path@clust+1
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 10179  001954  51AB               	movf	trace_path@dj& (0+255),w,b
 10180  001956  6ED9               	movwf	fsr2l,c
 10181  001958  6ADA               	clrf	fsr2h,c
 10182  00195A  0E06               	movlw	6
 10183  00195C  26D9               	addwf	fsr2l,f,c
 10184  00195E  0E00               	movlw	0
 10185  001960  6EDE               	movwf	postinc2,c
 10186  001962  0E00               	movlw	0
 10187  001964  6EDD               	movwf	postdec2,c
 10188  001966  51AB               	movf	trace_path@dj& (0+255),w,b
 10189  001968  6EE1               	movwf	fsr1l,c
 10190  00196A  6AE2               	clrf	fsr1h,c
 10191  00196C  0E08               	movlw	8
 10192  00196E  26E1               	addwf	fsr1l,f,c
 10193  001970  CFDE FFE6          	movff	postinc2,postinc1
 10194  001974  CFDD FFE5          	movff	postdec2,postdec1
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;tff.c: 525: dj->sect = clust;
 10198  001978  51BA               	movf	trace_path@clust& (0+255),w,b
 10199  00197A  6FB0               	movwf	??_trace_path& (0+255),b
 10200  00197C  51BB               	movf	(trace_path@clust+1)& (0+255),w,b
 10201  00197E  6FB1               	movwf	(??_trace_path+1)& (0+255),b
 10202  001980  6BB2               	clrf	(??_trace_path+2)& (0+255),b
 10203  001982  6BB3               	clrf	(??_trace_path+3)& (0+255),b
 10204  001984  51AB               	movf	trace_path@dj& (0+255),w,b
 10205  001986  6ED9               	movwf	fsr2l,c
 10206  001988  6ADA               	clrf	fsr2h,c
 10207  00198A  0E0A               	movlw	10
 10208  00198C  26D9               	addwf	fsr2l,f,c
 10209  00198E  C0B0  FFDE         	movff	??_trace_path,postinc2
 10210  001992  C0B1  FFDE         	movff	??_trace_path+1,postinc2
 10211  001996  C0B2  FFDE         	movff	??_trace_path+2,postinc2
 10212  00199A  C0B3  FFDE         	movff	??_trace_path+3,postinc2
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 10216  00199E  51AB               	movf	trace_path@dj& (0+255),w,b
 10217  0019A0  6ED9               	movwf	fsr2l,c
 10218  0019A2  6ADA               	clrf	fsr2h,c
 10219  0019A4  0E02               	movlw	2
 10220  0019A6  26D9               	addwf	fsr2l,f,c
 10221  0019A8  0E00               	movlw	0
 10222  0019AA  6EDE               	movwf	postinc2,c
 10223  0019AC  0E00               	movlw	0
 10224  0019AE  6EDD               	movwf	postdec2,c
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;tff.c: 529: if (*path == '\0') {
 10228  0019B0  C0AD  FFF6         	movff	trace_path@path,tblptrl
 10229  0019B4  C0AE  FFF7         	movff	trace_path@path+1,tblptrh
 10230  0019B8  6AF8               	clrf	tblptru,c
 10231  0019BA  0E07               	movlw	(high __ramtop+-1)
 10232  0019BC  64F7               	cpfsgt	tblptrh,c
 10233  0019BE  D003               	bra	u13077
 10234  0019C0  0008               	tblrd		*
 10235  0019C2  50F5               	movf	tablat,w,c
 10236  0019C4  D005               	bra	u13070
 10237  0019C6                     u13077:
 10238  0019C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 10239  0019CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 10240  0019CE  50E7               	movf	indf1,w,c
 10241  0019D0                     u13070:
 10242  0019D0  0900               	iorlw	0
 10243  0019D2  A4D8               	btfss	status,2,c
 10244  0019D4  D00A               	goto	l11299
 10245                           
 10246                           ;tff.c: 530: *dir = (0); return FR_OK;
 10247  0019D6  0100               	movlb	0	; () banked
 10248  0019D8  51AF               	movf	trace_path@dir& (0+255),w,b
 10249  0019DA  6ED9               	movwf	fsr2l,c
 10250  0019DC  6ADA               	clrf	fsr2h,c
 10251  0019DE  0E00               	movlw	0
 10252  0019E0  6EDE               	movwf	postinc2,c
 10253  0019E2  0E00               	movlw	0
 10254  0019E4  6EDD               	movwf	postdec2,c
 10255  0019E6                     l11295:
 10256                           
 10257                           ; BSR set to: 0
 10258  0019E6  0E00               	movlw	0
 10259  0019E8  0012               	return	
 10260  0019EA                     l11299:
 10261                           
 10262                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 10263  0019EA  0EAD               	movlw	low trace_path@path
 10264  0019EC  6E22               	movwf	make_dirfile@path^0,c
 10265  0019EE  C0AC  F023         	movff	trace_path@fn,make_dirfile@dirname
 10266  0019F2  ECE8  F017         	call	_make_dirfile	;wreg free
 10267  0019F6  0100               	movlb	0	; () banked
 10268  0019F8  6FBC               	movwf	trace_path@ds& (0+255),b
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 10272  0019FA  05BC               	decf	trace_path@ds& (0+255),w,b
 10273  0019FC  A4D8               	btfss	status,2,c
 10274  0019FE  D002               	goto	l11307
 10275                           
 10276                           ; BSR set to: 0
 10277  001A00  0E04               	movlw	4
 10278  001A02  0012               	return	
 10279  001A04                     l11307:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10283  001A04  51AB               	movf	trace_path@dj& (0+255),w,b
 10284  001A06  6ED9               	movwf	fsr2l,c
 10285  001A08  6ADA               	clrf	fsr2h,c
 10286  001A0A  0E0A               	movlw	10
 10287  001A0C  26D9               	addwf	fsr2l,f,c
 10288  001A0E  CFDE F077          	movff	postinc2,move_window@sector
 10289  001A12  CFDE F078          	movff	postinc2,move_window@sector+1
 10290  001A16  CFDE F079          	movff	postinc2,move_window@sector+2
 10291  001A1A  CFDE F07A          	movff	postinc2,move_window@sector+3
 10292  001A1E  EC9A  F015         	call	_move_window	;wreg free
 10293  001A22  0900               	iorlw	0
 10294  001A24  A4D8               	btfss	status,2,c
 10295  001A26  D002               	goto	l11313
 10296                           
 10297                           ; BSR set to: 0
 10298  001A28  0E08               	movlw	8
 10299  001A2A  0012               	return	
 10300  001A2C                     l11313:
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 10304  001A2C  51AB               	movf	trace_path@dj& (0+255),w,b
 10305  001A2E  6ED9               	movwf	fsr2l,c
 10306  001A30  6ADA               	clrf	fsr2h,c
 10307  001A32  0E02               	movlw	2
 10308  001A34  26D9               	addwf	fsr2l,f,c
 10309  001A36  CFDE F0B0          	movff	postinc2,??_trace_path
 10310  001A3A  CFDD F0B1          	movff	postdec2,??_trace_path+1
 10311  001A3E  0E0F               	movlw	15
 10312  001A40  17B0               	andwf	??_trace_path& (0+255),f,b
 10313  001A42  0E00               	movlw	0
 10314  001A44  17B1               	andwf	(??_trace_path+1)& (0+255),f,b
 10315  001A46  0E05               	movlw	5
 10316  001A48                     u13115:
 10317  001A48  90D8               	bcf	status,0,c
 10318  001A4A  37B0               	rlcf	??_trace_path& (0+255),f,b
 10319  001A4C  37B1               	rlcf	(??_trace_path+1)& (0+255),f,b
 10320  001A4E  2EE8               	decfsz	wreg,f,c
 10321  001A50  D7FB               	goto	u13115
 10322  001A52  C0B8  F0B2         	movff	trace_path@fs,??_trace_path+2
 10323  001A56  C0B9  F0B3         	movff	trace_path@fs+1,??_trace_path+3
 10324  001A5A  51B0               	movf	??_trace_path& (0+255),w,b
 10325  001A5C  27B2               	addwf	(??_trace_path+2)& (0+255),f,b
 10326  001A5E  51B1               	movf	(??_trace_path+1)& (0+255),w,b
 10327  001A60  23B3               	addwfc	(??_trace_path+3)& (0+255),f,b
 10328  001A62  0E20               	movlw	32
 10329  001A64  25B2               	addwf	(??_trace_path+2)& (0+255),w,b
 10330  001A66  6FBD               	movwf	trace_path@dptr& (0+255),b
 10331  001A68  0E00               	movlw	0
 10332  001A6A  21B3               	addwfc	(??_trace_path+3)& (0+255),w,b
 10333  001A6C  6FBE               	movwf	(trace_path@dptr+1)& (0+255),b
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;tff.c: 539: if (dptr[0] == 0)
 10337  001A6E  C0BD  FFD9         	movff	trace_path@dptr,fsr2l
 10338  001A72  C0BE  FFDA         	movff	trace_path@dptr+1,fsr2h
 10339  001A76  50DF               	movf	indf2,w,c
 10340  001A78  A4D8               	btfss	status,2,c
 10341  001A7A  D00D               	goto	l11325
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 10345  001A7C  51BC               	movf	trace_path@ds& (0+255),w,b
 10346  001A7E  B4D8               	btfsc	status,2,c
 10347  001A80  D004               	goto	l11321
 10348                           
 10349                           ; BSR set to: 0
 10350  001A82  0E00               	movlw	0
 10351  001A84  6FB5               	movwf	(_trace_path$1715+1)& (0+255),b
 10352  001A86  0E03               	movlw	3
 10353  001A88  D003               	goto	L3
 10354  001A8A                     l11321:
 10355                           
 10356                           ; BSR set to: 0
 10357  001A8A  0E00               	movlw	0
 10358  001A8C  6FB5               	movwf	(_trace_path$1715+1)& (0+255),b
 10359  001A8E  0E02               	movlw	2
 10360  001A90                     L3:
 10361  001A90  6FB4               	movwf	_trace_path$1715& (0+255),b
 10362                           
 10363                           ; BSR set to: 0
 10364  001A92  51B4               	movf	_trace_path$1715& (0+255),w,b
 10365  001A94  0012               	return	
 10366  001A96                     l11325:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 10370  001A96  C0BD  FFD9         	movff	trace_path@dptr,fsr2l
 10371  001A9A  C0BE  FFDA         	movff	trace_path@dptr+1,fsr2h
 10372  001A9E  0EE5               	movlw	229
 10373  001AA0  18DE               	xorwf	postinc2,w,c
 10374  001AA2  B4D8               	btfsc	status,2,c
 10375  001AA4  D019               	goto	l11333
 10376                           
 10377                           ; BSR set to: 0
 10378  001AA6  EE20 F00B          	lfsr	2,11
 10379  001AAA  51BD               	movf	trace_path@dptr& (0+255),w,b
 10380  001AAC  26D9               	addwf	fsr2l,f,c
 10381  001AAE  51BE               	movf	(trace_path@dptr+1)& (0+255),w,b
 10382  001AB0  22DA               	addwfc	fsr2h,f,c
 10383  001AB2  B6DF               	btfsc	indf2,3,c
 10384  001AB4  D011               	goto	l11333
 10385                           
 10386                           ; BSR set to: 0
 10387  001AB6  C0BD  F01A         	movff	trace_path@dptr,memcmp@s1
 10388  001ABA  C0BE  F01B         	movff	trace_path@dptr+1,memcmp@s1+1
 10389  001ABE  C0AC  F01C         	movff	trace_path@fn,memcmp@s2
 10390  001AC2  6A1D               	clrf	(memcmp@s2+1)^0,c
 10391  001AC4  0E00               	movlw	0
 10392  001AC6  6E1F               	movwf	(memcmp@n+1)^0,c
 10393  001AC8  0E0B               	movlw	11
 10394  001ACA  6E1E               	movwf	memcmp@n^0,c
 10395  001ACC  ECDC  F020         	call	_memcmp	;wreg free
 10396  001AD0  501A               	movf	?_memcmp^0,w,c
 10397  001AD2  101B               	iorwf	(?_memcmp+1)^0,w,c
 10398  001AD4  B4D8               	btfsc	status,2,c
 10399  001AD6  D014               	goto	l11343
 10400  001AD8                     l11333:
 10401                           
 10402                           ;tff.c: 544: if (!next_dir_entry(dj))
 10403  001AD8  C0AB  F09F         	movff	trace_path@dj,next_dir_entry@dj
 10404  001ADC  EC35  F017         	call	_next_dir_entry	;wreg free
 10405  001AE0  0900               	iorlw	0
 10406  001AE2  A4D8               	btfss	status,2,c
 10407  001AE4  D78F               	goto	l11307
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 10411  001AE6  51BC               	movf	trace_path@ds& (0+255),w,b
 10412  001AE8  B4D8               	btfsc	status,2,c
 10413  001AEA  D004               	goto	l11339
 10414                           
 10415                           ; BSR set to: 0
 10416  001AEC  0E00               	movlw	0
 10417  001AEE  6FB7               	movwf	(_trace_path$1717+1)& (0+255),b
 10418  001AF0  0E03               	movlw	3
 10419  001AF2  D003               	goto	L4
 10420  001AF4                     l11339:
 10421                           
 10422                           ; BSR set to: 0
 10423  001AF4  0E00               	movlw	0
 10424  001AF6  6FB7               	movwf	(_trace_path$1717+1)& (0+255),b
 10425  001AF8  0E02               	movlw	2
 10426  001AFA                     L4:
 10427  001AFA  6FB6               	movwf	_trace_path$1717& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430  001AFC  51B6               	movf	_trace_path$1717& (0+255),w,b
 10431  001AFE  0012               	return	
 10432  001B00                     l11343:
 10433                           
 10434                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 10435  001B00  0100               	movlb	0	; () banked
 10436  001B02  51BC               	movf	trace_path@ds& (0+255),w,b
 10437  001B04  A4D8               	btfss	status,2,c
 10438  001B06  D008               	goto	l11351
 10439                           
 10440                           ; BSR set to: 0
 10441  001B08  51AF               	movf	trace_path@dir& (0+255),w,b
 10442  001B0A  6ED9               	movwf	fsr2l,c
 10443  001B0C  6ADA               	clrf	fsr2h,c
 10444  001B0E  C0BD  FFDE         	movff	trace_path@dptr,postinc2
 10445  001B12  C0BE  FFDD         	movff	trace_path@dptr+1,postdec2
 10446  001B16  D767               	goto	l11295
 10447  001B18                     l11351:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 10451  001B18  EE20 F00B          	lfsr	2,11
 10452  001B1C  51BD               	movf	trace_path@dptr& (0+255),w,b
 10453  001B1E  26D9               	addwf	fsr2l,f,c
 10454  001B20  51BE               	movf	(trace_path@dptr+1)& (0+255),w,b
 10455  001B22  22DA               	addwfc	fsr2h,f,c
 10456  001B24  B8DF               	btfsc	indf2,4,c
 10457  001B26  D002               	goto	l11357
 10458                           
 10459                           ; BSR set to: 0
 10460  001B28  0E03               	movlw	3
 10461  001B2A  0012               	return	
 10462  001B2C                     l11357:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 10466  001B2C  EE20 F01A          	lfsr	2,26
 10467  001B30  51BD               	movf	trace_path@dptr& (0+255),w,b
 10468  001B32  26D9               	addwf	fsr2l,f,c
 10469  001B34  51BE               	movf	(trace_path@dptr+1)& (0+255),w,b
 10470  001B36  22DA               	addwfc	fsr2h,f,c
 10471  001B38  CFDE F0BA          	movff	postinc2,trace_path@clust
 10472  001B3C  CFDD F0BB          	movff	postdec2,trace_path@clust+1
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 10476  001B40  51AB               	movf	trace_path@dj& (0+255),w,b
 10477  001B42  6ED9               	movwf	fsr2l,c
 10478  001B44  6ADA               	clrf	fsr2h,c
 10479  001B46  0E06               	movlw	6
 10480  001B48  26D9               	addwf	fsr2l,f,c
 10481  001B4A  C0BA  FFDE         	movff	trace_path@clust,postinc2
 10482  001B4E  C0BB  FFDD         	movff	trace_path@clust+1,postdec2
 10483  001B52  51AB               	movf	trace_path@dj& (0+255),w,b
 10484  001B54  6EE1               	movwf	fsr1l,c
 10485  001B56  6AE2               	clrf	fsr1h,c
 10486  001B58  0E08               	movlw	8
 10487  001B5A  26E1               	addwf	fsr1l,f,c
 10488  001B5C  CFDE FFE6          	movff	postinc2,postinc1
 10489  001B60  CFDD FFE5          	movff	postdec2,postdec1
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;tff.c: 555: dj->sect = clust2sect(clust);
 10493  001B64  C0BA  F026         	movff	trace_path@clust,clust2sect@clust
 10494  001B68  C0BB  F027         	movff	trace_path@clust+1,clust2sect@clust+1
 10495  001B6C  EC3C  F01F         	call	_clust2sect	;wreg free
 10496  001B70  0100               	movlb	0	; () banked
 10497  001B72  51AB               	movf	trace_path@dj& (0+255),w,b
 10498  001B74  6ED9               	movwf	fsr2l,c
 10499  001B76  6ADA               	clrf	fsr2h,c
 10500  001B78  0E0A               	movlw	10
 10501  001B7A  26D9               	addwf	fsr2l,f,c
 10502  001B7C  C026  FFDE         	movff	?_clust2sect,postinc2
 10503  001B80  C027  FFDE         	movff	?_clust2sect+1,postinc2
 10504  001B84  C028  FFDE         	movff	?_clust2sect+2,postinc2
 10505  001B88  C029  FFDE         	movff	?_clust2sect+3,postinc2
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;tff.c: 556: dj->index = 2;
 10509  001B8C  51AB               	movf	trace_path@dj& (0+255),w,b
 10510  001B8E  6ED9               	movwf	fsr2l,c
 10511  001B90  6ADA               	clrf	fsr2h,c
 10512  001B92  0E02               	movlw	2
 10513  001B94  26D9               	addwf	fsr2l,f,c
 10514  001B96  0E02               	movlw	2
 10515  001B98  6EDE               	movwf	postinc2,c
 10516  001B9A  0E00               	movlw	0
 10517  001B9C  6EDD               	movwf	postdec2,c
 10518                           
 10519                           ;tff.c: 557: }
 10520  001B9E  D725               	goto	l11299
 10521  001BA0                     __end_of_trace_path:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _make_dirfile *****************
 10525 ;; Defined at:
 10526 ;;		line 439 in file "bibliotecas/tff.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  path            1   33[COMRAM] PTR PTR const unsigned c
 10529 ;;		 -> trace_path@path(2), 
 10530 ;;  dirname         1   34[COMRAM] PTR unsigned char 
 10531 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;  c               1   43[COMRAM] unsigned char 
 10534 ;;  n               1   42[COMRAM] unsigned char 
 10535 ;;  a               1   41[COMRAM] unsigned char 
 10536 ;;  t               1   40[COMRAM] unsigned char 
 10537 ;;  b               1   39[COMRAM] unsigned char 
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      unsigned char 
 10540 ;; Registers used:
 10541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10547 ;;      Params:         2       0       0       0       0       0       0       0       0
 10548 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10549 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10550 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10551 ;;Total ram usage:       11 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    4
 10554 ;; This function calls:
 10555 ;;		_memset
 10556 ;; This function is called by:
 10557 ;;		_trace_path
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text54
 10562  002FD0                     __ptext54:
 10563                           	callstack 0
 10564  002FD0                     _make_dirfile:
 10565                           	callstack 20
 10566                           
 10567                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;incstack = 0
 10571  002FD0  C023  F01A         	movff	make_dirfile@dirname,memset@p1
 10572  002FD4  6A1B               	clrf	(memset@p1+1)^0,c
 10573  002FD6  0E00               	movlw	0
 10574  002FD8  6E1D               	movwf	(memset@c+1)^0,c
 10575  002FDA  0E20               	movlw	32
 10576  002FDC  6E1C               	movwf	memset@c^0,c
 10577  002FDE  0E00               	movlw	0
 10578  002FE0  6E1F               	movwf	(memset@n+1)^0,c
 10579  002FE2  0E0B               	movlw	11
 10580  002FE4  6E1E               	movwf	memset@n^0,c
 10581  002FE6  ECE1  F028         	call	_memset	;wreg free
 10582                           
 10583                           ;tff.c: 448: a = 0; b = 0x18;
 10584  002FEA  0E00               	movlw	0
 10585  002FEC  6E2A               	movwf	make_dirfile@a^0,c
 10586  002FEE  0E18               	movlw	24
 10587  002FF0  6E28               	movwf	make_dirfile@b^0,c
 10588                           
 10589                           ;tff.c: 449: n = 0; t = 8;
 10590  002FF2  0E00               	movlw	0
 10591  002FF4  6E2B               	movwf	make_dirfile@n^0,c
 10592  002FF6  0E08               	movlw	8
 10593  002FF8  6E29               	movwf	make_dirfile@t^0,c
 10594  002FFA                     l10935:
 10595                           
 10596                           ;tff.c: 451: c = *(*path)++;
 10597  002FFA  5022               	movf	make_dirfile@path^0,w,c
 10598  002FFC  6ED9               	movwf	fsr2l,c
 10599  002FFE  6ADA               	clrf	fsr2h,c
 10600  003000  CFDF F024          	movff	indf2,??_make_dirfile
 10601  003004  0E01               	movlw	1
 10602  003006  26DE               	addwf	postinc2,f,c
 10603  003008  CFDF F025          	movff	indf2,??_make_dirfile+1
 10604  00300C  0E00               	movlw	0
 10605  00300E  22DD               	addwfc	postdec2,f,c
 10606  003010  C024  FFF6         	movff	??_make_dirfile,tblptrl
 10607  003014  C025  FFF7         	movff	??_make_dirfile+1,tblptrh
 10608  003018  6AF8               	clrf	tblptru,c
 10609  00301A  0E07               	movlw	(high __ramtop+-1)
 10610  00301C  64F7               	cpfsgt	tblptrh,c
 10611  00301E  D003               	bra	u12477
 10612  003020  0008               	tblrd		*
 10613  003022  50F5               	movf	tablat,w,c
 10614  003024  D005               	bra	u12470
 10615  003026                     u12477:
 10616  003026  CFF6 FFE1          	movff	tblptrl,fsr1l
 10617  00302A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10618  00302E  50E7               	movf	indf1,w,c
 10619  003030                     u12470:
 10620  003030  6E2C               	movwf	make_dirfile@c^0,c
 10621                           
 10622                           ;tff.c: 452: if (c == '\0' || c == '/') {
 10623  003032  502C               	movf	make_dirfile@c^0,w,c
 10624  003034  B4D8               	btfsc	status,2,c
 10625  003036  D004               	goto	u12490
 10626  003038  0E2F               	movlw	47
 10627  00303A  182C               	xorwf	make_dirfile@c^0,w,c
 10628  00303C  A4D8               	btfss	status,2,c
 10629  00303E  D012               	goto	l10955
 10630  003040                     u12490:
 10631                           
 10632                           ;tff.c: 453: if (n == 0) break;
 10633  003040  502B               	movf	make_dirfile@n^0,w,c
 10634  003042  B4D8               	btfsc	status,2,c
 10635  003044  D070               	goto	l11043
 10636  003046  502A               	movf	make_dirfile@a^0,w,c
 10637  003048  1428               	andwf	make_dirfile@b^0,w,c
 10638  00304A  6E24               	movwf	??_make_dirfile^0,c
 10639  00304C  5024               	movf	??_make_dirfile^0,w,c
 10640  00304E  6E26               	movwf	_make_dirfile$1668^0,c
 10641  003050  6A27               	clrf	(_make_dirfile$1668+1)^0,c
 10642  003052  5023               	movf	make_dirfile@dirname^0,w,c
 10643  003054  6ED9               	movwf	fsr2l,c
 10644  003056  6ADA               	clrf	fsr2h,c
 10645  003058  0E0B               	movlw	11
 10646  00305A  26D9               	addwf	fsr2l,f,c
 10647  00305C  C026  FFDF         	movff	_make_dirfile$1668,indf2
 10648                           
 10649                           ;tff.c: 455: return c;
 10650  003060  502C               	movf	make_dirfile@c^0,w,c
 10651  003062  0012               	return	
 10652  003064                     l10955:
 10653                           
 10654                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 10655  003064  0E20               	movlw	32
 10656  003066  642C               	cpfsgt	make_dirfile@c^0,c
 10657  003068  D05E               	goto	l11043
 10658  00306A  0E7F               	movlw	127
 10659  00306C  182C               	xorwf	make_dirfile@c^0,w,c
 10660  00306E  B4D8               	btfsc	status,2,c
 10661  003070  D05A               	goto	l11043
 10662                           
 10663                           ;tff.c: 458: if (c == '.') {
 10664  003072  0E2E               	movlw	46
 10665  003074  182C               	xorwf	make_dirfile@c^0,w,c
 10666  003076  A4D8               	btfss	status,2,c
 10667  003078  D00C               	goto	l10985
 10668                           
 10669                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 10670  00307A  B02A               	btfsc	make_dirfile@a^0,0,c
 10671  00307C  D054               	goto	l11043
 10672  00307E  502B               	movf	make_dirfile@n^0,w,c
 10673  003080  B4D8               	btfsc	status,2,c
 10674  003082  D051               	goto	l11043
 10675  003084  0E09               	movlw	9
 10676  003086  602B               	cpfslt	make_dirfile@n^0,c
 10677  003088  D04E               	goto	l11043
 10678                           
 10679                           ;tff.c: 460: n = 8; t = 11; continue;
 10680  00308A  0E08               	movlw	8
 10681  00308C  6E2B               	movwf	make_dirfile@n^0,c
 10682  00308E  0E0B               	movlw	11
 10683  003090  D7B3               	goto	L5
 10684  003092                     l10985:
 10685                           
 10686                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 10687  003092  0E22               	movlw	34
 10688  003094  182C               	xorwf	make_dirfile@c^0,w,c
 10689  003096  B4D8               	btfsc	status,2,c
 10690  003098  D046               	goto	l11043
 10691                           
 10692                           ;tff.c: 472: if (c <= ')') goto md_l1;
 10693  00309A  0E2A               	movlw	42
 10694  00309C  602C               	cpfslt	make_dirfile@c^0,c
 10695  00309E  D001               	goto	l10993
 10696  0030A0  D035               	goto	l891
 10697  0030A2                     l10993:
 10698                           
 10699                           ;tff.c: 473: if (c <= ',') break;
 10700  0030A2  0E2D               	movlw	45
 10701  0030A4  602C               	cpfslt	make_dirfile@c^0,c
 10702  0030A6  D001               	goto	l10997
 10703  0030A8  D03E               	goto	l11043
 10704  0030AA                     l10997:
 10705                           
 10706                           ;tff.c: 474: if (c <= '9') goto md_l1;
 10707  0030AA  0E3A               	movlw	58
 10708  0030AC  602C               	cpfslt	make_dirfile@c^0,c
 10709  0030AE  D001               	goto	l11001
 10710  0030B0  D02D               	goto	l891
 10711  0030B2                     l11001:
 10712                           
 10713                           ;tff.c: 475: if (c <= '?') break;
 10714  0030B2  0E40               	movlw	64
 10715  0030B4  602C               	cpfslt	make_dirfile@c^0,c
 10716  0030B6  D001               	goto	l894
 10717  0030B8  D036               	goto	l11043
 10718  0030BA                     l894:
 10719                           
 10720                           ;tff.c: 476: if (!(a & 1)) {
 10721  0030BA  B02A               	btfsc	make_dirfile@a^0,0,c
 10722  0030BC  D027               	goto	l891
 10723                           
 10724                           ;tff.c: 477: if (c == '|') break;
 10725  0030BE  0E7C               	movlw	124
 10726  0030C0  182C               	xorwf	make_dirfile@c^0,w,c
 10727  0030C2  B4D8               	btfsc	status,2,c
 10728  0030C4  D030               	goto	l11043
 10729                           
 10730                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 10731  0030C6  0E5A               	movlw	90
 10732  0030C8  642C               	cpfsgt	make_dirfile@c^0,c
 10733  0030CA  D004               	goto	l11015
 10734  0030CC  0E5E               	movlw	94
 10735  0030CE  602C               	cpfslt	make_dirfile@c^0,c
 10736  0030D0  D001               	goto	l11015
 10737  0030D2  D029               	goto	l11043
 10738  0030D4                     l11015:
 10739  0030D4  0E40               	movlw	64
 10740  0030D6  642C               	cpfsgt	make_dirfile@c^0,c
 10741  0030D8  D00A               	goto	l11025
 10742  0030DA  0E5B               	movlw	91
 10743  0030DC  602C               	cpfslt	make_dirfile@c^0,c
 10744  0030DE  D007               	goto	l11025
 10745                           
 10746                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 10747  0030E0  0E08               	movlw	8
 10748  0030E2  1829               	xorwf	make_dirfile@t^0,w,c
 10749  0030E4  A4D8               	btfss	status,2,c
 10750  0030E6  D002               	goto	l11023
 10751  0030E8  9628               	bcf	make_dirfile@b^0,3,c
 10752  0030EA  D001               	goto	l11025
 10753  0030EC                     l11023:
 10754  0030EC  9828               	bcf	make_dirfile@b^0,4,c
 10755  0030EE                     l11025:
 10756                           
 10757                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 10758  0030EE  0E60               	movlw	96
 10759  0030F0  642C               	cpfsgt	make_dirfile@c^0,c
 10760  0030F2  D00C               	goto	l891
 10761  0030F4  0E7B               	movlw	123
 10762  0030F6  602C               	cpfslt	make_dirfile@c^0,c
 10763  0030F8  D009               	goto	l891
 10764                           
 10765                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 10766  0030FA  0E20               	movlw	32
 10767  0030FC  5E2C               	subwf	make_dirfile@c^0,f,c
 10768  0030FE  0E08               	movlw	8
 10769  003100  1829               	xorwf	make_dirfile@t^0,w,c
 10770  003102  A4D8               	btfss	status,2,c
 10771  003104  D002               	goto	l11033
 10772  003106  862A               	bsf	make_dirfile@a^0,3,c
 10773  003108  D001               	goto	l891
 10774  00310A                     l11033:
 10775  00310A  882A               	bsf	make_dirfile@a^0,4,c
 10776  00310C                     l891:
 10777                           
 10778                           ;tff.c: 487: a &= 0xFE;
 10779  00310C  902A               	bcf	make_dirfile@a^0,0,c
 10780                           
 10781                           ;tff.c: 489: if (n >= t) break;
 10782  00310E  5029               	movf	make_dirfile@t^0,w,c
 10783  003110  5C2B               	subwf	make_dirfile@n^0,w,c
 10784  003112  B0D8               	btfsc	status,0,c
 10785  003114  D008               	goto	l11043
 10786                           
 10787                           ;tff.c: 490: dirname[n++] = c;
 10788  003116  5023               	movf	make_dirfile@dirname^0,w,c
 10789  003118  242B               	addwf	make_dirfile@n^0,w,c
 10790  00311A  6ED9               	movwf	fsr2l,c
 10791  00311C  6ADA               	clrf	fsr2h,c
 10792  00311E  C02C  FFDF         	movff	make_dirfile@c,indf2
 10793  003122  2A2B               	incf	make_dirfile@n^0,f,c
 10794  003124  D76A               	goto	l10935
 10795  003126                     l11043:
 10796                           
 10797                           ;tff.c: 492: return 1;
 10798  003126  0E01               	movlw	1
 10799  003128  0012               	return		;funcret
 10800  00312A                     __end_of_make_dirfile:
 10801                           	callstack 0
 10802                           
 10803 ;; *************** function _reserve_direntry *****************
 10804 ;; Defined at:
 10805 ;;		line 568 in file "bibliotecas/tff.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  dj              1   82[BANK0 ] PTR struct _DIR_E
 10808 ;;		 -> f_open@dj(14), 
 10809 ;;  dir             1   83[BANK0 ] PTR PTR unsigned char 
 10810 ;;		 -> f_open@dir(2), 
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  sector          4   88[BANK0 ] unsigned long 
 10813 ;;  fs              2   98[BANK0 ] PTR struct _FATFS
 10814 ;;		 -> NULL(0), fs(544), 
 10815 ;;  clust           2   96[BANK0 ] unsigned short 
 10816 ;;  dptr            2   93[BANK0 ] PTR unsigned char 
 10817 ;;		 -> fs.win(512), NULL(0), fs(544), 
 10818 ;;  c               1   95[BANK0 ] unsigned char 
 10819 ;;  n               1   92[BANK0 ] unsigned char 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      enum E155
 10822 ;; Registers used:
 10823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 3F/0
 10826 ;;		On exit  : 3F/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10829 ;;      Params:         0       2       0       0       0       0       0       0       0
 10830 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10831 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10832 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10833 ;;Total ram usage:       18 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:   11
 10836 ;; This function calls:
 10837 ;;		_clust2sect
 10838 ;;		_create_chain
 10839 ;;		_disk_write
 10840 ;;		_memset
 10841 ;;		_move_window
 10842 ;;		_next_dir_entry
 10843 ;; This function is called by:
 10844 ;;		_f_open
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text55
 10849  001BA0                     __ptext55:
 10850                           	callstack 0
 10851  001BA0                     _reserve_direntry:
 10852                           	callstack 14
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 10856                           
 10857                           ;incstack = 0
 10858  001BA0  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10859  001BA2  6ED9               	movwf	fsr2l,c
 10860  001BA4  6ADA               	clrf	fsr2h,c
 10861  001BA6  0E04               	movlw	4
 10862  001BA8  26D9               	addwf	fsr2l,f,c
 10863  001BAA  CFDE F0C2          	movff	postinc2,reserve_direntry@fs
 10864  001BAE  CFDD F0C3          	movff	postdec2,reserve_direntry@fs+1
 10865                           
 10866                           ;tff.c: 580: clust = dj->sclust;
 10867  001BB2  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10868  001BB4  6ED9               	movwf	fsr2l,c
 10869  001BB6  6ADA               	clrf	fsr2h,c
 10870  001BB8  0E06               	movlw	6
 10871  001BBA  26D9               	addwf	fsr2l,f,c
 10872  001BBC  CFDE F0C0          	movff	postinc2,reserve_direntry@clust
 10873  001BC0  CFDD F0C1          	movff	postdec2,reserve_direntry@clust+1
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;tff.c: 581: if (clust != 0) {
 10877  001BC4  51C0               	movf	reserve_direntry@clust& (0+255),w,b
 10878  001BC6  11C1               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10879  001BC8  B4D8               	btfsc	status,2,c
 10880  001BCA  D01E               	goto	l11373
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;tff.c: 582: dj->clust = clust;
 10884  001BCC  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10885  001BCE  6ED9               	movwf	fsr2l,c
 10886  001BD0  6ADA               	clrf	fsr2h,c
 10887  001BD2  0E08               	movlw	8
 10888  001BD4  26D9               	addwf	fsr2l,f,c
 10889  001BD6  C0C0  FFDE         	movff	reserve_direntry@clust,postinc2
 10890  001BDA  C0C1  FFDD         	movff	reserve_direntry@clust+1,postdec2
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;tff.c: 583: dj->sect = clust2sect(clust);
 10894  001BDE  C0C0  F026         	movff	reserve_direntry@clust,clust2sect@clust
 10895  001BE2  C0C1  F027         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10896  001BE6  EC3C  F01F         	call	_clust2sect	;wreg free
 10897  001BEA  0100               	movlb	0	; () banked
 10898  001BEC  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10899  001BEE  6ED9               	movwf	fsr2l,c
 10900  001BF0  6ADA               	clrf	fsr2h,c
 10901  001BF2  0E0A               	movlw	10
 10902  001BF4  26D9               	addwf	fsr2l,f,c
 10903  001BF6  C026  FFDE         	movff	?_clust2sect,postinc2
 10904  001BFA  C027  FFDE         	movff	?_clust2sect+1,postinc2
 10905  001BFE  C028  FFDE         	movff	?_clust2sect+2,postinc2
 10906  001C02  C029  FFDE         	movff	?_clust2sect+3,postinc2
 10907                           
 10908                           ;tff.c: 584: } else {
 10909  001C06  D013               	goto	l11375
 10910  001C08                     l11373:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;tff.c: 585: dj->sect = fs->dirbase;
 10914  001C08  EE20 F00C          	lfsr	2,12
 10915  001C0C  51C2               	movf	reserve_direntry@fs& (0+255),w,b
 10916  001C0E  26D9               	addwf	fsr2l,f,c
 10917  001C10  51C3               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10918  001C12  22DA               	addwfc	fsr2h,f,c
 10919  001C14  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10920  001C16  6EE1               	movwf	fsr1l,c
 10921  001C18  6AE2               	clrf	fsr1h,c
 10922  001C1A  0E0A               	movlw	10
 10923  001C1C  26E1               	addwf	fsr1l,f,c
 10924  001C1E  CFDE FFE6          	movff	postinc2,postinc1
 10925  001C22  CFDE FFE6          	movff	postinc2,postinc1
 10926  001C26  CFDE FFE6          	movff	postinc2,postinc1
 10927  001C2A  CFDE FFE6          	movff	postinc2,postinc1
 10928  001C2E                     l11375:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 10932  001C2E  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10933  001C30  6ED9               	movwf	fsr2l,c
 10934  001C32  6ADA               	clrf	fsr2h,c
 10935  001C34  0E02               	movlw	2
 10936  001C36  26D9               	addwf	fsr2l,f,c
 10937  001C38  0E00               	movlw	0
 10938  001C3A  6EDE               	movwf	postinc2,c
 10939  001C3C  0E00               	movlw	0
 10940  001C3E  6EDD               	movwf	postdec2,c
 10941  001C40                     l11377:
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10945  001C40  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10946  001C42  6ED9               	movwf	fsr2l,c
 10947  001C44  6ADA               	clrf	fsr2h,c
 10948  001C46  0E0A               	movlw	10
 10949  001C48  26D9               	addwf	fsr2l,f,c
 10950  001C4A  CFDE F077          	movff	postinc2,move_window@sector
 10951  001C4E  CFDE F078          	movff	postinc2,move_window@sector+1
 10952  001C52  CFDE F079          	movff	postinc2,move_window@sector+2
 10953  001C56  CFDE F07A          	movff	postinc2,move_window@sector+3
 10954  001C5A  EC9A  F015         	call	_move_window	;wreg free
 10955  001C5E  0900               	iorlw	0
 10956  001C60  A4D8               	btfss	status,2,c
 10957  001C62  D002               	goto	l11383
 10958  001C64                     u13220:
 10959                           
 10960                           ; BSR set to: 0
 10961  001C64  0E08               	movlw	8
 10962  001C66  0012               	return	
 10963  001C68                     l11383:
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 10967  001C68  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 10968  001C6A  6ED9               	movwf	fsr2l,c
 10969  001C6C  6ADA               	clrf	fsr2h,c
 10970  001C6E  0E02               	movlw	2
 10971  001C70  26D9               	addwf	fsr2l,f,c
 10972  001C72  CFDE F0B4          	movff	postinc2,??_reserve_direntry
 10973  001C76  CFDD F0B5          	movff	postdec2,??_reserve_direntry+1
 10974  001C7A  0E0F               	movlw	15
 10975  001C7C  17B4               	andwf	??_reserve_direntry& (0+255),f,b
 10976  001C7E  0E00               	movlw	0
 10977  001C80  17B5               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 10978  001C82  0E05               	movlw	5
 10979  001C84                     u13235:
 10980  001C84  90D8               	bcf	status,0,c
 10981  001C86  37B4               	rlcf	??_reserve_direntry& (0+255),f,b
 10982  001C88  37B5               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 10983  001C8A  2EE8               	decfsz	wreg,f,c
 10984  001C8C  D7FB               	goto	u13235
 10985  001C8E  C0C2  F0B6         	movff	reserve_direntry@fs,??_reserve_direntry+2
 10986  001C92  C0C3  F0B7         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 10987  001C96  51B4               	movf	??_reserve_direntry& (0+255),w,b
 10988  001C98  27B6               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 10989  001C9A  51B5               	movf	(??_reserve_direntry+1)& (0+255),w,b
 10990  001C9C  23B7               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 10991  001C9E  0E20               	movlw	32
 10992  001CA0  25B6               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 10993  001CA2  6FBD               	movwf	reserve_direntry@dptr& (0+255),b
 10994  001CA4  0E00               	movlw	0
 10995  001CA6  21B7               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 10996  001CA8  6FBE               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;tff.c: 592: c = dptr[0];
 11000  001CAA  C0BD  FFD9         	movff	reserve_direntry@dptr,fsr2l
 11001  001CAE  C0BE  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 11002  001CB2  50DF               	movf	indf2,w,c
 11003  001CB4  6FBF               	movwf	reserve_direntry@c& (0+255),b
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 11007  001CB6  51BF               	movf	reserve_direntry@c& (0+255),w,b
 11008  001CB8  B4D8               	btfsc	status,2,c
 11009  001CBA  D004               	goto	u13250
 11010                           
 11011                           ; BSR set to: 0
 11012  001CBC  0EE5               	movlw	229
 11013  001CBE  19BF               	xorwf	reserve_direntry@c& (0+255),w,b
 11014  001CC0  A4D8               	btfss	status,2,c
 11015  001CC2  D009               	goto	l11397
 11016  001CC4                     u13250:
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;tff.c: 594: *dir = dptr; return FR_OK;
 11020  001CC4  51B3               	movf	reserve_direntry@dir& (0+255),w,b
 11021  001CC6  6ED9               	movwf	fsr2l,c
 11022  001CC8  6ADA               	clrf	fsr2h,c
 11023  001CCA  C0BD  FFDE         	movff	reserve_direntry@dptr,postinc2
 11024  001CCE  C0BE  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 11025  001CD2                     l11393:
 11026                           
 11027                           ; BSR set to: 0
 11028  001CD2  0E00               	movlw	0
 11029  001CD4  0012               	return	
 11030  001CD6                     l11397:
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 11034  001CD6  C0B2  F09F         	movff	reserve_direntry@dj,next_dir_entry@dj
 11035  001CDA  EC35  F017         	call	_next_dir_entry	;wreg free
 11036  001CDE  0900               	iorlw	0
 11037  001CE0  A4D8               	btfss	status,2,c
 11038  001CE2  D7AE               	goto	l11377
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 11042  001CE4  51C0               	movf	reserve_direntry@clust& (0+255),w,b
 11043  001CE6  11C1               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11044  001CE8  B4D8               	btfsc	status,2,c
 11045  001CEA  D013               	goto	u13280
 11046                           
 11047                           ; BSR set to: 0
 11048  001CEC  51B2               	movf	reserve_direntry@dj& (0+255),w,b
 11049  001CEE  6ED9               	movwf	fsr2l,c
 11050  001CF0  6ADA               	clrf	fsr2h,c
 11051  001CF2  0E08               	movlw	8
 11052  001CF4  26D9               	addwf	fsr2l,f,c
 11053  001CF6  CFDE F0A4          	movff	postinc2,create_chain@clust
 11054  001CFA  CFDD F0A5          	movff	postdec2,create_chain@clust+1
 11055  001CFE  EC6F  F016         	call	_create_chain	;wreg free
 11056  001D02  C0A4  F0C0         	movff	?_create_chain,reserve_direntry@clust
 11057  001D06  C0A5  F0C1         	movff	?_create_chain+1,reserve_direntry@clust+1
 11058  001D0A  51C0               	movf	reserve_direntry@clust& (0+255),w,b
 11059  001D0C  11C1               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11060  001D0E  A4D8               	btfss	status,2,c
 11061  001D10  D002               	goto	l11407
 11062  001D12                     u13280:
 11063                           
 11064                           ; BSR set to: 0
 11065  001D12  0E06               	movlw	6
 11066  001D14  0012               	return	
 11067  001D16                     l11407:
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 11071  001D16  05C0               	decf	reserve_direntry@clust& (0+255),w,b
 11072  001D18  11C1               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 11073  001D1A  B4D8               	btfsc	status,2,c
 11074  001D1C  D7A3               	goto	u13220
 11075                           
 11076                           ; BSR set to: 0
 11077  001D1E  0E00               	movlw	0
 11078  001D20  6F77               	movwf	move_window@sector& (0+255),b
 11079  001D22  0E00               	movlw	0
 11080  001D24  6F78               	movwf	(move_window@sector+1)& (0+255),b
 11081  001D26  0E00               	movlw	0
 11082  001D28  6F79               	movwf	(move_window@sector+2)& (0+255),b
 11083  001D2A  0E00               	movlw	0
 11084  001D2C  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 11085  001D2E  EC9A  F015         	call	_move_window	;wreg free
 11086  001D32  0900               	iorlw	0
 11087  001D34  B4D8               	btfsc	status,2,c
 11088  001D36  D796               	goto	u13220
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 11092  001D38  C0C0  F026         	movff	reserve_direntry@clust,clust2sect@clust
 11093  001D3C  C0C1  F027         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 11094  001D40  EC3C  F01F         	call	_clust2sect	;wreg free
 11095  001D44  C026  F0B8         	movff	?_clust2sect,reserve_direntry@sector
 11096  001D48  C027  F0B9         	movff	?_clust2sect+1,reserve_direntry@sector+1
 11097  001D4C  C028  F0BA         	movff	?_clust2sect+2,reserve_direntry@sector+2
 11098  001D50  C029  F0BB         	movff	?_clust2sect+3,reserve_direntry@sector+3
 11099  001D54  0100               	movlb	0	; () banked
 11100  001D56  EE20 F004          	lfsr	2,4
 11101  001D5A  51C2               	movf	reserve_direntry@fs& (0+255),w,b
 11102  001D5C  26D9               	addwf	fsr2l,f,c
 11103  001D5E  51C3               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 11104  001D60  22DA               	addwfc	fsr2h,f,c
 11105  001D62  C0B8  FFDE         	movff	reserve_direntry@sector,postinc2
 11106  001D66  C0B9  FFDE         	movff	reserve_direntry@sector+1,postinc2
 11107  001D6A  C0BA  FFDE         	movff	reserve_direntry@sector+2,postinc2
 11108  001D6E  C0BB  FFDE         	movff	reserve_direntry@sector+3,postinc2
 11109                           
 11110                           ;tff.c: 604: memset(fs->win, 0, 512U);
 11111  001D72  0E20               	movlw	32
 11112  001D74  25C2               	addwf	reserve_direntry@fs& (0+255),w,b
 11113  001D76  6E1A               	movwf	memset@p1^0,c
 11114  001D78  0E00               	movlw	0
 11115  001D7A  21C3               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 11116  001D7C  6E1B               	movwf	(memset@p1+1)^0,c
 11117  001D7E  0E00               	movlw	0
 11118  001D80  6E1D               	movwf	(memset@c+1)^0,c
 11119  001D82  0E00               	movlw	0
 11120  001D84  6E1C               	movwf	memset@c^0,c
 11121  001D86  0E02               	movlw	2
 11122  001D88  6E1F               	movwf	(memset@n+1)^0,c
 11123  001D8A  0E00               	movlw	0
 11124  001D8C  6E1E               	movwf	memset@n^0,c
 11125  001D8E  ECE1  F028         	call	_memset	;wreg free
 11126                           
 11127                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 11128  001D92  0100               	movlb	0	; () banked
 11129  001D94  EE20 F01D          	lfsr	2,29
 11130  001D98  51C2               	movf	reserve_direntry@fs& (0+255),w,b
 11131  001D9A  26D9               	addwf	fsr2l,f,c
 11132  001D9C  51C3               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 11133  001D9E  22DA               	addwfc	fsr2h,f,c
 11134  001DA0  50DF               	movf	indf2,w,c
 11135  001DA2  6FBC               	movwf	reserve_direntry@n& (0+255),b
 11136  001DA4  D01D               	goto	l11429
 11137  001DA6                     l11419:
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 11141  001DA6  0E20               	movlw	32
 11142  001DA8  25C2               	addwf	reserve_direntry@fs& (0+255),w,b
 11143  001DAA  6F6C               	movwf	disk_write@buff& (0+255),b
 11144  001DAC  0E00               	movlw	0
 11145  001DAE  21C3               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 11146  001DB0  6F6D               	movwf	(disk_write@buff+1)& (0+255),b
 11147  001DB2  C0B8  F06E         	movff	reserve_direntry@sector,disk_write@sector
 11148  001DB6  C0B9  F06F         	movff	reserve_direntry@sector+1,disk_write@sector+1
 11149  001DBA  C0BA  F070         	movff	reserve_direntry@sector+2,disk_write@sector+2
 11150  001DBE  C0BB  F071         	movff	reserve_direntry@sector+3,disk_write@sector+3
 11151  001DC2  0E01               	movlw	1
 11152  001DC4  6F72               	movwf	disk_write@count& (0+255),b
 11153  001DC6  0E00               	movlw	0
 11154  001DC8  ECD6  F026         	call	_disk_write
 11155  001DCC  0900               	iorlw	0
 11156  001DCE  A4D8               	btfss	status,2,c
 11157  001DD0  D749               	goto	u13220
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;tff.c: 608: sector++;
 11161  001DD2  0E01               	movlw	1
 11162  001DD4  27B8               	addwf	reserve_direntry@sector& (0+255),f,b
 11163  001DD6  0E00               	movlw	0
 11164  001DD8  23B9               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 11165  001DDA  23BA               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 11166  001DDC  23BB               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 11167                           
 11168                           ; BSR set to: 0
 11169  001DDE  07BC               	decf	reserve_direntry@n& (0+255),f,b
 11170  001DE0                     l11429:
 11171                           
 11172                           ; BSR set to: 0
 11173  001DE0  51BC               	movf	reserve_direntry@n& (0+255),w,b
 11174  001DE2  A4D8               	btfss	status,2,c
 11175  001DE4  D7E0               	goto	l11419
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 11179  001DE6  EE20 F01F          	lfsr	2,31
 11180  001DEA  51C2               	movf	reserve_direntry@fs& (0+255),w,b
 11181  001DEC  26D9               	addwf	fsr2l,f,c
 11182  001DEE  51C3               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 11183  001DF0  22DA               	addwfc	fsr2h,f,c
 11184  001DF2  0E01               	movlw	1
 11185  001DF4  6EDF               	movwf	indf2,c
 11186                           
 11187                           ;tff.c: 611: *dir = fs->win;
 11188  001DF6  0E20               	movlw	32
 11189  001DF8  25C2               	addwf	reserve_direntry@fs& (0+255),w,b
 11190  001DFA  6FB4               	movwf	??_reserve_direntry& (0+255),b
 11191  001DFC  0E00               	movlw	0
 11192  001DFE  21C3               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 11193  001E00  6FB5               	movwf	(??_reserve_direntry+1)& (0+255),b
 11194  001E02  51B3               	movf	reserve_direntry@dir& (0+255),w,b
 11195  001E04  6ED9               	movwf	fsr2l,c
 11196  001E06  6ADA               	clrf	fsr2h,c
 11197  001E08  C0B4  FFDE         	movff	??_reserve_direntry,postinc2
 11198  001E0C  C0B5  FFDD         	movff	??_reserve_direntry+1,postdec2
 11199  001E10  D760               	goto	l11393
 11200  001E12                     __end_of_reserve_direntry:
 11201                           	callstack 0
 11202                           
 11203 ;; *************** function _next_dir_entry *****************
 11204 ;; Defined at:
 11205 ;;		line 359 in file "bibliotecas/tff.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  dj              1   63[BANK0 ] PTR struct _DIR_E
 11208 ;;		 -> f_open@dj(14), 
 11209 ;; Auto vars:     Size  Location     Type
 11210 ;;  idx             2   73[BANK0 ] unsigned short 
 11211 ;;  clust           2   71[BANK0 ] unsigned short 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      enum E105
 11214 ;; Registers used:
 11215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 3F/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11221 ;;      Params:         0       1       0       0       0       0       0       0       0
 11222 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11223 ;;      Temps:          0       7       0       0       0       0       0       0       0
 11224 ;;      Totals:         0      12       0       0       0       0       0       0       0
 11225 ;;Total ram usage:       12 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; Hardware stack levels required when called:   10
 11228 ;; This function calls:
 11229 ;;		_clust2sect
 11230 ;;		_get_cluster
 11231 ;; This function is called by:
 11232 ;;		_trace_path
 11233 ;;		_reserve_direntry
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text56
 11238  002E6A                     __ptext56:
 11239                           	callstack 0
 11240  002E6A                     _next_dir_entry:
 11241                           	callstack 14
 11242                           
 11243                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;incstack = 0
 11247  002E6A  0100               	movlb	0	; () banked
 11248  002E6C  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11249  002E6E  6ED9               	movwf	fsr2l,c
 11250  002E70  6ADA               	clrf	fsr2h,c
 11251  002E72  0E02               	movlw	2
 11252  002E74  26D9               	addwf	fsr2l,f,c
 11253  002E76  CFDE F0A0          	movff	postinc2,??_next_dir_entry
 11254  002E7A  CFDD F0A1          	movff	postdec2,??_next_dir_entry+1
 11255  002E7E  0E01               	movlw	1
 11256  002E80  25A0               	addwf	??_next_dir_entry& (0+255),w,b
 11257  002E82  6FA9               	movwf	next_dir_entry@idx& (0+255),b
 11258  002E84  0E00               	movlw	0
 11259  002E86  21A1               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 11260  002E88  6FAA               	movwf	(next_dir_entry@idx+1)& (0+255),b
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;tff.c: 368: if ((idx & 15) == 0) {
 11264  002E8A  C0A9  F0A0         	movff	next_dir_entry@idx,??_next_dir_entry
 11265  002E8E  0E0F               	movlw	15
 11266  002E90  17A0               	andwf	??_next_dir_entry& (0+255),f,b
 11267  002E92  A4D8               	btfss	status,2,c
 11268  002E94  D092               	goto	l10919
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;tff.c: 369: dj->sect++;
 11272  002E96  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11273  002E98  6ED9               	movwf	fsr2l,c
 11274  002E9A  6ADA               	clrf	fsr2h,c
 11275  002E9C  0E0A               	movlw	10
 11276  002E9E  26D9               	addwf	fsr2l,f,c
 11277  002EA0  2ADE               	incf	postinc2,f,c
 11278  002EA2  0E00               	movlw	0
 11279  002EA4  22DE               	addwfc	postinc2,f,c
 11280  002EA6  22DE               	addwfc	postinc2,f,c
 11281  002EA8  22DE               	addwfc	postinc2,f,c
 11282                           
 11283                           ;tff.c: 370: if (dj->clust == 0) {
 11284  002EAA  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11285  002EAC  6ED9               	movwf	fsr2l,c
 11286  002EAE  6ADA               	clrf	fsr2h,c
 11287  002EB0  0E08               	movlw	8
 11288  002EB2  26D9               	addwf	fsr2l,f,c
 11289  002EB4  50DE               	movf	postinc2,w,c
 11290  002EB6  10DE               	iorwf	postinc2,w,c
 11291  002EB8  A4D8               	btfss	status,2,c
 11292  002EBA  D013               	goto	l10903
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 11296  002EBC  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11297  002EBE  6ED9               	movwf	fsr2l,c
 11298  002EC0  6ADA               	clrf	fsr2h,c
 11299  002EC2  0E04               	movlw	4
 11300  002EC4  26D9               	addwf	fsr2l,f,c
 11301  002EC6  EE10 F002          	lfsr	1,2
 11302  002ECA  50DE               	movf	postinc2,w,c
 11303  002ECC  26E1               	addwf	fsr1l,f,c
 11304  002ECE  50DD               	movf	postdec2,w,c
 11305  002ED0  22E2               	addwfc	fsr1h,f,c
 11306  002ED2  50E6               	movf	postinc1,w,c
 11307  002ED4  5DA9               	subwf	next_dir_entry@idx& (0+255),w,b
 11308  002ED6  50E6               	movf	postinc1,w,c
 11309  002ED8  59AA               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 11310  002EDA  A0D8               	btfss	status,0,c
 11311  002EDC  D06E               	goto	l10919
 11312  002EDE                     u12420:
 11313                           
 11314                           ; BSR set to: 0
 11315  002EDE  0E00               	movlw	0
 11316  002EE0  0012               	return	
 11317  002EE2                     l10903:
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 11321  002EE2  C0A9  F0A0         	movff	next_dir_entry@idx,??_next_dir_entry
 11322  002EE6  C0AA  F0A1         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 11323  002EEA  0E04               	movlw	4
 11324  002EEC  6FA2               	movwf	(??_next_dir_entry+2)& (0+255),b
 11325  002EEE                     u12435:
 11326  002EEE  90D8               	bcf	status,0,c
 11327  002EF0  33A1               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 11328  002EF2  33A0               	rrcf	??_next_dir_entry& (0+255),f,b
 11329  002EF4  2FA2               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 11330  002EF6  D7FB               	goto	u12435
 11331  002EF8  0EFF               	movlw	255
 11332  002EFA  6FA3               	movwf	(??_next_dir_entry+3)& (0+255),b
 11333  002EFC  0EFF               	movlw	255
 11334  002EFE  6FA4               	movwf	(??_next_dir_entry+4)& (0+255),b
 11335  002F00  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11336  002F02  6ED9               	movwf	fsr2l,c
 11337  002F04  6ADA               	clrf	fsr2h,c
 11338  002F06  0E04               	movlw	4
 11339  002F08  26D9               	addwf	fsr2l,f,c
 11340  002F0A  EE10 F01D          	lfsr	1,29
 11341  002F0E  50DE               	movf	postinc2,w,c
 11342  002F10  26E1               	addwf	fsr1l,f,c
 11343  002F12  50DD               	movf	postdec2,w,c
 11344  002F14  22E2               	addwfc	fsr1h,f,c
 11345  002F16  50E7               	movf	indf1,w,c
 11346  002F18  6FA5               	movwf	(??_next_dir_entry+5)& (0+255),b
 11347  002F1A  6BA6               	clrf	(??_next_dir_entry+6)& (0+255),b
 11348  002F1C  51A3               	movf	(??_next_dir_entry+3)& (0+255),w,b
 11349  002F1E  27A5               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 11350  002F20  51A4               	movf	(??_next_dir_entry+4)& (0+255),w,b
 11351  002F22  23A6               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 11352  002F24  51A0               	movf	??_next_dir_entry& (0+255),w,b
 11353  002F26  17A5               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 11354  002F28  51A1               	movf	(??_next_dir_entry+1)& (0+255),w,b
 11355  002F2A  17A6               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 11356  002F2C  51A5               	movf	(??_next_dir_entry+5)& (0+255),w,b
 11357  002F2E  11A6               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 11358  002F30  A4D8               	btfss	status,2,c
 11359  002F32  D043               	goto	l10919
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;tff.c: 374: clust = get_cluster(dj->clust);
 11363  002F34  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11364  002F36  6ED9               	movwf	fsr2l,c
 11365  002F38  6ADA               	clrf	fsr2h,c
 11366  002F3A  0E08               	movlw	8
 11367  002F3C  26D9               	addwf	fsr2l,f,c
 11368  002F3E  CFDE F02E          	movff	postinc2,get_cluster@clust
 11369  002F42  CFDD F02F          	movff	postdec2,get_cluster@clust+1
 11370  002F46  ECAC  F013         	call	_get_cluster	;wreg free
 11371  002F4A  C02E  F0A7         	movff	?_get_cluster,next_dir_entry@clust
 11372  002F4E  C02F  F0A8         	movff	?_get_cluster+1,next_dir_entry@clust+1
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 11376  002F52  51A8               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 11377  002F54  E104               	bnz	u12450
 11378  002F56  0E02               	movlw	2
 11379  002F58  5DA7               	subwf	next_dir_entry@clust& (0+255),w,b
 11380  002F5A  A0D8               	btfss	status,0,c
 11381  002F5C  D7C0               	goto	u12420
 11382  002F5E                     u12450:
 11383                           
 11384                           ; BSR set to: 0
 11385  002F5E  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11386  002F60  6ED9               	movwf	fsr2l,c
 11387  002F62  6ADA               	clrf	fsr2h,c
 11388  002F64  0E04               	movlw	4
 11389  002F66  26D9               	addwf	fsr2l,f,c
 11390  002F68  EE10 F016          	lfsr	1,22
 11391  002F6C  50DE               	movf	postinc2,w,c
 11392  002F6E  26E1               	addwf	fsr1l,f,c
 11393  002F70  50DD               	movf	postdec2,w,c
 11394  002F72  22E2               	addwfc	fsr1h,f,c
 11395  002F74  50E6               	movf	postinc1,w,c
 11396  002F76  5DA7               	subwf	next_dir_entry@clust& (0+255),w,b
 11397  002F78  50E6               	movf	postinc1,w,c
 11398  002F7A  59A8               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 11399  002F7C  B0D8               	btfsc	status,0,c
 11400  002F7E  D7AF               	goto	u12420
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;tff.c: 377: dj->clust = clust;
 11404  002F80  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11405  002F82  6ED9               	movwf	fsr2l,c
 11406  002F84  6ADA               	clrf	fsr2h,c
 11407  002F86  0E08               	movlw	8
 11408  002F88  26D9               	addwf	fsr2l,f,c
 11409  002F8A  C0A7  FFDE         	movff	next_dir_entry@clust,postinc2
 11410  002F8E  C0A8  FFDD         	movff	next_dir_entry@clust+1,postdec2
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;tff.c: 378: dj->sect = clust2sect(clust);
 11414  002F92  C0A7  F026         	movff	next_dir_entry@clust,clust2sect@clust
 11415  002F96  C0A8  F027         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 11416  002F9A  EC3C  F01F         	call	_clust2sect	;wreg free
 11417  002F9E  0100               	movlb	0	; () banked
 11418  002FA0  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11419  002FA2  6ED9               	movwf	fsr2l,c
 11420  002FA4  6ADA               	clrf	fsr2h,c
 11421  002FA6  0E0A               	movlw	10
 11422  002FA8  26D9               	addwf	fsr2l,f,c
 11423  002FAA  C026  FFDE         	movff	?_clust2sect,postinc2
 11424  002FAE  C027  FFDE         	movff	?_clust2sect+1,postinc2
 11425  002FB2  C028  FFDE         	movff	?_clust2sect+2,postinc2
 11426  002FB6  C029  FFDE         	movff	?_clust2sect+3,postinc2
 11427  002FBA                     l10919:
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 11431  002FBA  519F               	movf	next_dir_entry@dj& (0+255),w,b
 11432  002FBC  6ED9               	movwf	fsr2l,c
 11433  002FBE  6ADA               	clrf	fsr2h,c
 11434  002FC0  0E02               	movlw	2
 11435  002FC2  26D9               	addwf	fsr2l,f,c
 11436  002FC4  C0A9  FFDE         	movff	next_dir_entry@idx,postinc2
 11437  002FC8  C0AA  FFDD         	movff	next_dir_entry@idx+1,postdec2
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tff.c: 383: return TRUE;
 11441  002FCC  0E01               	movlw	1
 11442                           
 11443                           ; BSR set to: 0
 11444  002FCE  0012               	return		;funcret
 11445  002FD0                     __end_of_next_dir_entry:
 11446                           	callstack 0
 11447                           
 11448 ;; *************** function _clust2sect *****************
 11449 ;; Defined at:
 11450 ;;		line 339 in file "bibliotecas/tff.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  clust           2   37[COMRAM] unsigned short 
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  fs              2    0[BANK0 ] PTR struct _FATFS
 11455 ;;		 -> NULL(0), fs(544), 
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  4   37[COMRAM] unsigned long 
 11458 ;; Registers used:
 11459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11460 ;; Tracked objects:
 11461 ;;		On entry : 3F/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11465 ;;      Params:         4       0       0       0       0       0       0       0       0
 11466 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11467 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11468 ;;      Totals:         9       2       0       0       0       0       0       0       0
 11469 ;;Total ram usage:       11 bytes
 11470 ;; Hardware stack levels used:    1
 11471 ;; Hardware stack levels required when called:    4
 11472 ;; This function calls:
 11473 ;;		___lmul
 11474 ;; This function is called by:
 11475 ;;		_next_dir_entry
 11476 ;;		_trace_path
 11477 ;;		_reserve_direntry
 11478 ;;		_f_write
 11479 ;;		_f_read
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text57
 11484  003E78                     __ptext57:
 11485                           	callstack 0
 11486  003E78                     _clust2sect:
 11487                           	callstack 18
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;tff.c: 343: FATFS *fs = FatFs;
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;incstack = 0
 11494  003E78  C034  F060         	movff	_FatFs,clust2sect@fs
 11495  003E7C  C035  F061         	movff	_FatFs+1,clust2sect@fs+1
 11496                           
 11497                           ;tff.c: 346: clust -= 2;
 11498  003E80  0E02               	movlw	2
 11499  003E82  5E26               	subwf	clust2sect@clust^0,f,c
 11500  003E84  0E00               	movlw	0
 11501  003E86  5A27               	subwfb	(clust2sect@clust+1)^0,f,c
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 11505  003E88  0EFE               	movlw	254
 11506  003E8A  6E2A               	movwf	??_clust2sect^0,c
 11507  003E8C  0EFF               	movlw	255
 11508  003E8E  6E2B               	movwf	(??_clust2sect+1)^0,c
 11509  003E90  EE20 F016          	lfsr	2,22
 11510  003E94  5160               	movf	clust2sect@fs& (0+255),w,b
 11511  003E96  26D9               	addwf	fsr2l,f,c
 11512  003E98  5161               	movf	(clust2sect@fs+1)& (0+255),w,b
 11513  003E9A  22DA               	addwfc	fsr2h,f,c
 11514  003E9C  CFDE F02C          	movff	postinc2,??_clust2sect+2
 11515  003EA0  CFDD F02D          	movff	postdec2,??_clust2sect+3
 11516  003EA4  502A               	movf	??_clust2sect^0,w,c
 11517  003EA6  262C               	addwf	(??_clust2sect+2)^0,f,c
 11518  003EA8  502B               	movf	(??_clust2sect+1)^0,w,c
 11519  003EAA  222D               	addwfc	(??_clust2sect+3)^0,f,c
 11520  003EAC  502C               	movf	(??_clust2sect+2)^0,w,c
 11521  003EAE  5C26               	subwf	clust2sect@clust^0,w,c
 11522  003EB0  502D               	movf	(??_clust2sect+3)^0,w,c
 11523  003EB2  5827               	subwfb	(clust2sect@clust+1)^0,w,c
 11524  003EB4  A0D8               	btfss	status,0,c
 11525  003EB6  D009               	goto	l10371
 11526                           
 11527                           ; BSR set to: 0
 11528  003EB8  0E00               	movlw	0
 11529  003EBA  6E26               	movwf	?_clust2sect^0,c
 11530  003EBC  0E00               	movlw	0
 11531  003EBE  6E27               	movwf	(?_clust2sect+1)^0,c
 11532  003EC0  0E00               	movlw	0
 11533  003EC2  6E28               	movwf	(?_clust2sect+2)^0,c
 11534  003EC4  0E00               	movlw	0
 11535  003EC6  6E29               	movwf	(?_clust2sect+3)^0,c
 11536  003EC8  0012               	return	
 11537  003ECA                     l10371:
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 11541  003ECA  EE20 F010          	lfsr	2,16
 11542  003ECE  5160               	movf	clust2sect@fs& (0+255),w,b
 11543  003ED0  26D9               	addwf	fsr2l,f,c
 11544  003ED2  5161               	movf	(clust2sect@fs+1)& (0+255),w,b
 11545  003ED4  22DA               	addwfc	fsr2h,f,c
 11546  003ED6  CFDE F02A          	movff	postinc2,??_clust2sect
 11547  003EDA  CFDE F02B          	movff	postinc2,??_clust2sect+1
 11548  003EDE  CFDE F02C          	movff	postinc2,??_clust2sect+2
 11549  003EE2  CFDE F02D          	movff	postinc2,??_clust2sect+3
 11550  003EE6  C026  F01A         	movff	clust2sect@clust,___lmul@multiplier
 11551  003EEA  C027  F01B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 11552  003EEE  6A1C               	clrf	(___lmul@multiplier+2)^0,c
 11553  003EF0  6A1D               	clrf	(___lmul@multiplier+3)^0,c
 11554  003EF2  EE20 F01D          	lfsr	2,29
 11555  003EF6  5160               	movf	clust2sect@fs& (0+255),w,b
 11556  003EF8  26D9               	addwf	fsr2l,f,c
 11557  003EFA  5161               	movf	(clust2sect@fs+1)& (0+255),w,b
 11558  003EFC  22DA               	addwfc	fsr2h,f,c
 11559  003EFE  50DF               	movf	indf2,w,c
 11560  003F00  6E2E               	movwf	(??_clust2sect+4)^0,c
 11561  003F02  502E               	movf	(??_clust2sect+4)^0,w,c
 11562  003F04  6E1E               	movwf	___lmul@multiplicand^0,c
 11563  003F06  6A1F               	clrf	(___lmul@multiplicand+1)^0,c
 11564  003F08  6A20               	clrf	(___lmul@multiplicand+2)^0,c
 11565  003F0A  6A21               	clrf	(___lmul@multiplicand+3)^0,c
 11566  003F0C  ECDE  F025         	call	___lmul	;wreg free
 11567  003F10  502A               	movf	??_clust2sect^0,w,c
 11568  003F12  241A               	addwf	?___lmul^0,w,c
 11569  003F14  6E26               	movwf	?_clust2sect^0,c
 11570  003F16  502B               	movf	(??_clust2sect+1)^0,w,c
 11571  003F18  201B               	addwfc	(?___lmul+1)^0,w,c
 11572  003F1A  6E27               	movwf	(?_clust2sect+1)^0,c
 11573  003F1C  502C               	movf	(??_clust2sect+2)^0,w,c
 11574  003F1E  201C               	addwfc	(?___lmul+2)^0,w,c
 11575  003F20  6E28               	movwf	(?_clust2sect+2)^0,c
 11576  003F22  502D               	movf	(??_clust2sect+3)^0,w,c
 11577  003F24  201D               	addwfc	(?___lmul+3)^0,w,c
 11578  003F26  6E29               	movwf	(?_clust2sect+3)^0,c
 11579  003F28  0012               	return		;funcret
 11580  003F2A                     __end_of_clust2sect:
 11581                           	callstack 0
 11582                           
 11583 ;; *************** function _remove_chain *****************
 11584 ;; Defined at:
 11585 ;;		line 250 in file "bibliotecas/tff.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  clust           2   68[BANK0 ] unsigned short 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;  fs              2   74[BANK0 ] PTR struct _FATFS
 11590 ;;		 -> NULL(0), fs(544), 
 11591 ;;  nxt             2   72[BANK0 ] unsigned short 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      enum E105
 11594 ;; Registers used:
 11595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 3F/0
 11598 ;;		On exit  : 3F/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11601 ;;      Params:         0       2       0       0       0       0       0       0       0
 11602 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11603 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11604 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11605 ;;Total ram usage:        8 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:   10
 11608 ;; This function calls:
 11609 ;;		_get_cluster
 11610 ;;		_put_cluster
 11611 ;; This function is called by:
 11612 ;;		_f_open
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text58
 11617  00411C                     __ptext58:
 11618                           	callstack 0
 11619  00411C                     _remove_chain:
 11620                           	callstack 15
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 11624                           
 11625                           ;incstack = 0
 11626  00411C  C034  F0AA         	movff	_FatFs,remove_chain@fs
 11627  004120  C035  F0AB         	movff	_FatFs+1,remove_chain@fs+1
 11628                           
 11629                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 11630  004124  D035               	goto	l11271
 11631  004126                     l11251:
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;tff.c: 259: nxt = get_cluster(clust);
 11635  004126  C0A4  F02E         	movff	remove_chain@clust,get_cluster@clust
 11636  00412A  C0A5  F02F         	movff	remove_chain@clust+1,get_cluster@clust+1
 11637  00412E  ECAC  F013         	call	_get_cluster	;wreg free
 11638  004132  C02E  F0A8         	movff	?_get_cluster,remove_chain@nxt
 11639  004136  C02F  F0A9         	movff	?_get_cluster+1,remove_chain@nxt+1
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;tff.c: 260: if (nxt == 1) return FALSE;
 11643  00413A  05A8               	decf	remove_chain@nxt& (0+255),w,b
 11644  00413C  11A9               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 11645  00413E  A4D8               	btfss	status,2,c
 11646  004140  D002               	goto	l11259
 11647  004142                     u13020:
 11648                           
 11649                           ; BSR set to: 0
 11650  004142  0E00               	movlw	0
 11651  004144  0012               	return	
 11652  004146                     l11259:
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 11656  004146  C0A4  F08C         	movff	remove_chain@clust,put_cluster@clust
 11657  00414A  C0A5  F08D         	movff	remove_chain@clust+1,put_cluster@clust+1
 11658  00414E  0E00               	movlw	0
 11659  004150  6F8F               	movwf	(put_cluster@val+1)& (0+255),b
 11660  004152  0E00               	movlw	0
 11661  004154  6F8E               	movwf	put_cluster@val& (0+255),b
 11662  004156  EC41  F010         	call	_put_cluster	;wreg free
 11663  00415A  0900               	iorlw	0
 11664  00415C  B4D8               	btfsc	status,2,c
 11665  00415E  D7F1               	goto	u13020
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 11669  004160  EE20 F01A          	lfsr	2,26
 11670  004164  51AA               	movf	remove_chain@fs& (0+255),w,b
 11671  004166  26D9               	addwf	fsr2l,f,c
 11672  004168  51AB               	movf	(remove_chain@fs+1)& (0+255),w,b
 11673  00416A  22DA               	addwfc	fsr2h,f,c
 11674  00416C  28DE               	incf	postinc2,w,c
 11675  00416E  E103               	bnz	u13040
 11676  004170  28DE               	incf	postinc2,w,c
 11677  004172  B4D8               	btfsc	status,2,c
 11678  004174  D009               	goto	l11269
 11679  004176                     u13040:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;tff.c: 263: fs->free_clust++;
 11683  004176  EE20 F01A          	lfsr	2,26
 11684  00417A  51AA               	movf	remove_chain@fs& (0+255),w,b
 11685  00417C  26D9               	addwf	fsr2l,f,c
 11686  00417E  51AB               	movf	(remove_chain@fs+1)& (0+255),w,b
 11687  004180  22DA               	addwfc	fsr2h,f,c
 11688  004182  2ADE               	incf	postinc2,f,c
 11689  004184  0E00               	movlw	0
 11690  004186  22DD               	addwfc	postdec2,f,c
 11691  004188                     l11269:
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 11695  004188  C0A8  F0A4         	movff	remove_chain@nxt,remove_chain@clust
 11696  00418C  C0A9  F0A5         	movff	remove_chain@nxt+1,remove_chain@clust+1
 11697  004190                     l11271:
 11698                           
 11699                           ; BSR set to: 0
 11700  004190  51A5               	movf	(remove_chain@clust+1)& (0+255),w,b
 11701  004192  E104               	bnz	u13050
 11702  004194  0E02               	movlw	2
 11703  004196  5DA4               	subwf	remove_chain@clust& (0+255),w,b
 11704  004198  A0D8               	btfss	status,0,c
 11705  00419A  D00C               	goto	u13060
 11706  00419C                     u13050:
 11707                           
 11708                           ; BSR set to: 0
 11709  00419C  EE20 F016          	lfsr	2,22
 11710  0041A0  51AA               	movf	remove_chain@fs& (0+255),w,b
 11711  0041A2  26D9               	addwf	fsr2l,f,c
 11712  0041A4  51AB               	movf	(remove_chain@fs+1)& (0+255),w,b
 11713  0041A6  22DA               	addwfc	fsr2h,f,c
 11714  0041A8  50DE               	movf	postinc2,w,c
 11715  0041AA  5DA4               	subwf	remove_chain@clust& (0+255),w,b
 11716  0041AC  50DE               	movf	postinc2,w,c
 11717  0041AE  59A5               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 11718  0041B0  A0D8               	btfss	status,0,c
 11719  0041B2  D7B9               	goto	l11251
 11720  0041B4                     u13060:
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;tff.c: 269: };tff.c: 270: return TRUE;
 11724  0041B4  0E01               	movlw	1
 11725                           
 11726                           ; BSR set to: 0
 11727  0041B6  0012               	return		;funcret
 11728  0041B8                     __end_of_remove_chain:
 11729                           	callstack 0
 11730                           
 11731 ;; *************** function _memcpy *****************
 11732 ;; Defined at:
 11733 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;  d1              2   25[COMRAM] PTR void 
 11736 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11737 ;;  s1              2   27[COMRAM] PTR const void 
 11738 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11739 ;;		 -> fs(544), 
 11740 ;;  n               2   29[COMRAM] unsigned int 
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;  s               2   34[COMRAM] PTR const unsigned char 
 11743 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11744 ;;		 -> fs(544), 
 11745 ;;  d               2   32[COMRAM] PTR unsigned char 
 11746 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11747 ;;  tmp             1   31[COMRAM] unsigned char 
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  2   25[COMRAM] PTR void 
 11750 ;; Registers used:
 11751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11757 ;;      Params:         6       0       0       0       0       0       0       0       0
 11758 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11760 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11761 ;;Total ram usage:       11 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    3
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_f_open
 11768 ;;		_f_write
 11769 ;;		_f_read
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text59
 11774  004F66                     __ptext59:
 11775                           	callstack 0
 11776  004F66                     _memcpy:
 11777                           	callstack 19
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;incstack = 0
 11781  004F66  C01C  F023         	movff	memcpy@s1,memcpy@s
 11782  004F6A  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
 11783  004F6E  C01A  F021         	movff	memcpy@d1,memcpy@d
 11784  004F72  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
 11785  004F76  D010               	goto	l10405
 11786  004F78                     l10397:
 11787  004F78  C023  FFD9         	movff	memcpy@s,fsr2l
 11788  004F7C  C024  FFDA         	movff	memcpy@s+1,fsr2h
 11789  004F80  50DF               	movf	indf2,w,c
 11790  004F82  6E20               	movwf	memcpy@tmp^0,c
 11791  004F84  4A23               	infsnz	memcpy@s^0,f,c
 11792  004F86  2A24               	incf	(memcpy@s+1)^0,f,c
 11793  004F88  C021  FFD9         	movff	memcpy@d,fsr2l
 11794  004F8C  C022  FFDA         	movff	memcpy@d+1,fsr2h
 11795  004F90  C020  FFDF         	movff	memcpy@tmp,indf2
 11796  004F94  4A21               	infsnz	memcpy@d^0,f,c
 11797  004F96  2A22               	incf	(memcpy@d+1)^0,f,c
 11798  004F98                     l10405:
 11799  004F98  061E               	decf	memcpy@n^0,f,c
 11800  004F9A  A0D8               	btfss	status,0,c
 11801  004F9C  061F               	decf	(memcpy@n+1)^0,f,c
 11802  004F9E  281E               	incf	memcpy@n^0,w,c
 11803  004FA0  E1EB               	bnz	l10397
 11804  004FA2  281F               	incf	(memcpy@n+1)^0,w,c
 11805  004FA4  B4D8               	btfsc	status,2,c
 11806  004FA6  0012               	return	
 11807  004FA8  D7E7               	goto	l10397
 11808  004FAA                     __end_of_memcpy:
 11809                           	callstack 0
 11810                           
 11811 ;; *************** function _auto_mount *****************
 11812 ;; Defined at:
 11813 ;;		line 652 in file "bibliotecas/tff.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  path            1   29[BANK0 ] PTR PTR const unsigned c
 11816 ;;		 -> f_opendir@path(2), f_open@path(2), 
 11817 ;;  chk_wp          1   30[BANK0 ] unsigned char 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  fatsize         4   69[BANK0 ] unsigned long 
 11820 ;;  totalsect       4   61[BANK0 ] unsigned long 
 11821 ;;  bootsect        4   57[BANK0 ] unsigned long 
 11822 ;;  maxclust        4   53[BANK0 ] unsigned long 
 11823 ;;  fs              2   73[BANK0 ] PTR struct _FATFS
 11824 ;;		 -> NULL(0), fs(544), 
 11825 ;;  p               2   65[BANK0 ] PTR const unsigned char 
 11826 ;;		 -> STR_15(13), filename(20), 
 11827 ;;  stat            1   68[BANK0 ] unsigned char 
 11828 ;;  fmt             1   67[BANK0 ] unsigned char 
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      enum E155
 11831 ;; Registers used:
 11832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11833 ;; Tracked objects:
 11834 ;;		On entry : 3F/0
 11835 ;;		On exit  : 3E/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11838 ;;      Params:         0       2       0       0       0       0       0       0       0
 11839 ;;      Locals:         0      22       0       0       0       0       0       0       0
 11840 ;;      Temps:          0      22       0       0       0       0       0       0       0
 11841 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11842 ;;Total ram usage:       46 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    9
 11845 ;; This function calls:
 11846 ;;		___lldiv
 11847 ;;		___lmul
 11848 ;;		_check_fs
 11849 ;;		_disk_initialize
 11850 ;;		_disk_status
 11851 ;;		_memset
 11852 ;; This function is called by:
 11853 ;;		_f_open
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           	psect	text60
 11858  0005A0                     __ptext60:
 11859                           	callstack 0
 11860  0005A0                     _auto_mount:
 11861                           	callstack 16
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 11865                           
 11866                           ;incstack = 0
 11867  0005A0  517D               	movf	auto_mount@path& (0+255),w,b
 11868  0005A2  6ED9               	movwf	fsr2l,c
 11869  0005A4  6ADA               	clrf	fsr2h,c
 11870  0005A6  CFDE F0A1          	movff	postinc2,auto_mount@p
 11871  0005AA  CFDD F0A2          	movff	postdec2,auto_mount@p+1
 11872                           
 11873                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 11874  0005AE  D003               	goto	l11441
 11875  0005B0                     l11439:
 11876  0005B0  0100               	movlb	0	; () banked
 11877  0005B2  4BA1               	infsnz	auto_mount@p& (0+255),f,b
 11878  0005B4  2BA2               	incf	(auto_mount@p+1)& (0+255),f,b
 11879  0005B6                     l11441:
 11880                           
 11881                           ; BSR set to: 0
 11882  0005B6  C0A1  FFF6         	movff	auto_mount@p,tblptrl
 11883  0005BA  C0A2  FFF7         	movff	auto_mount@p+1,tblptrh
 11884  0005BE  6AF8               	clrf	tblptru,c
 11885  0005C0  0E07               	movlw	(high __ramtop+-1)
 11886  0005C2  64F7               	cpfsgt	tblptrh,c
 11887  0005C4  D003               	bra	u13337
 11888  0005C6  0008               	tblrd		*
 11889  0005C8  50F5               	movf	tablat,w,c
 11890  0005CA  D005               	bra	u13330
 11891  0005CC                     u13337:
 11892  0005CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11893  0005D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11894  0005D4  50E7               	movf	indf1,w,c
 11895  0005D6                     u13330:
 11896  0005D6  0A20               	xorlw	32
 11897  0005D8  B4D8               	btfsc	status,2,c
 11898  0005DA  D7EA               	goto	l11439
 11899                           
 11900                           ;tff.c: 665: if (*p == '/') p++;
 11901  0005DC  C0A1  FFF6         	movff	auto_mount@p,tblptrl
 11902  0005E0  C0A2  FFF7         	movff	auto_mount@p+1,tblptrh
 11903  0005E4  6AF8               	clrf	tblptru,c
 11904  0005E6  0E07               	movlw	(high __ramtop+-1)
 11905  0005E8  64F7               	cpfsgt	tblptrh,c
 11906  0005EA  D003               	bra	u13357
 11907  0005EC  0008               	tblrd		*
 11908  0005EE  50F5               	movf	tablat,w,c
 11909  0005F0  D005               	bra	u13350
 11910  0005F2                     u13357:
 11911  0005F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 11912  0005F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 11913  0005FA  50E7               	movf	indf1,w,c
 11914  0005FC                     u13350:
 11915  0005FC  0A2F               	xorlw	47
 11916  0005FE  A4D8               	btfss	status,2,c
 11917  000600  D003               	goto	l11447
 11918  000602  0100               	movlb	0	; () banked
 11919  000604  4BA1               	infsnz	auto_mount@p& (0+255),f,b
 11920  000606  2BA2               	incf	(auto_mount@p+1)& (0+255),f,b
 11921  000608                     l11447:
 11922                           
 11923                           ;tff.c: 666: *path = p;
 11924  000608  0100               	movlb	0	; () banked
 11925  00060A  517D               	movf	auto_mount@path& (0+255),w,b
 11926  00060C  6ED9               	movwf	fsr2l,c
 11927  00060E  6ADA               	clrf	fsr2h,c
 11928  000610  C0A1  FFDE         	movff	auto_mount@p,postinc2
 11929  000614  C0A2  FFDD         	movff	auto_mount@p+1,postdec2
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;tff.c: 669: fs = FatFs;
 11933  000618  C034  F0A9         	movff	_FatFs,auto_mount@fs
 11934  00061C  C035  F0AA         	movff	_FatFs+1,auto_mount@fs+1
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 11938  000620  51A9               	movf	auto_mount@fs& (0+255),w,b
 11939  000622  11AA               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 11940  000624  A4D8               	btfss	status,2,c
 11941  000626  D002               	goto	l11457
 11942                           
 11943                           ; BSR set to: 0
 11944  000628  0E0A               	movlw	10
 11945  00062A  0012               	return	
 11946  00062C                     l11457:
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;tff.c: 672: if (fs->fs_type) {
 11950  00062C  EE20 F01C          	lfsr	2,28
 11951  000630  51A9               	movf	auto_mount@fs& (0+255),w,b
 11952  000632  26D9               	addwf	fsr2l,f,c
 11953  000634  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 11954  000636  22DA               	addwfc	fsr2h,f,c
 11955  000638  50DF               	movf	indf2,w,c
 11956  00063A  B4D8               	btfsc	status,2,c
 11957  00063C  D00F               	goto	l11475
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;tff.c: 673: stat = disk_status(0);
 11961  00063E  0E00               	movlw	0
 11962  000640  ECC9  F028         	call	_disk_status
 11963  000644  0100               	movlb	0	; () banked
 11964  000646  6FA4               	movwf	auto_mount@stat& (0+255),b
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;tff.c: 674: if (!(stat & 0x01)) {
 11968  000648  B1A4               	btfsc	auto_mount@stat& (0+255),0,b
 11969  00064A  D008               	goto	l11475
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 11973  00064C  517E               	movf	auto_mount@chk_wp& (0+255),w,b
 11974  00064E  A4D8               	btfss	status,2,c
 11975                           
 11976                           ; BSR set to: 0
 11977  000650  A5A4               	btfss	auto_mount@stat& (0+255),2,b
 11978  000652  D002               	goto	l11471
 11979  000654                     u13410:
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 11983  000654  0E09               	movlw	9
 11984  000656  0012               	return	
 11985  000658                     l11471:
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;tff.c: 679: return FR_OK;
 11989  000658  0E00               	movlw	0
 11990  00065A  0012               	return	
 11991  00065C                     l11475:
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 11995  00065C  C0A9  F01A         	movff	auto_mount@fs,memset@p1
 11996  000660  C0AA  F01B         	movff	auto_mount@fs+1,memset@p1+1
 11997  000664  0E00               	movlw	0
 11998  000666  6E1D               	movwf	(memset@c+1)^0,c
 11999  000668  0E00               	movlw	0
 12000  00066A  6E1C               	movwf	memset@c^0,c
 12001  00066C  0E02               	movlw	2
 12002  00066E  6E1F               	movwf	(memset@n+1)^0,c
 12003  000670  0E20               	movlw	32
 12004  000672  6E1E               	movwf	memset@n^0,c
 12005  000674  ECE1  F028         	call	_memset	;wreg free
 12006                           
 12007                           ;tff.c: 686: stat = disk_initialize(0);
 12008  000678  0E00               	movlw	0
 12009  00067A  EC5E  F029         	call	_disk_initialize
 12010  00067E  0100               	movlb	0	; () banked
 12011  000680  6FA4               	movwf	auto_mount@stat& (0+255),b
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;tff.c: 687: if (stat & 0x01)
 12015  000682  A1A4               	btfss	auto_mount@stat& (0+255),0,b
 12016  000684  D002               	goto	l11485
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;tff.c: 688: return FR_NOT_READY;
 12020  000686  0E01               	movlw	1
 12021  000688  0012               	return	
 12022  00068A                     l11485:
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 12026  00068A  517E               	movf	auto_mount@chk_wp& (0+255),w,b
 12027  00068C  B4D8               	btfsc	status,2,c
 12028  00068E  D002               	goto	l11493
 12029                           
 12030                           ; BSR set to: 0
 12031  000690  B5A4               	btfsc	auto_mount@stat& (0+255),2,b
 12032  000692  D7E0               	goto	u13410
 12033  000694                     l11493:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 12037  000694  0E00               	movlw	0
 12038  000696  6F99               	movwf	auto_mount@bootsect& (0+255),b
 12039  000698  0E00               	movlw	0
 12040  00069A  6F9A               	movwf	(auto_mount@bootsect+1)& (0+255),b
 12041  00069C  0E00               	movlw	0
 12042  00069E  6F9B               	movwf	(auto_mount@bootsect+2)& (0+255),b
 12043  0006A0  0E00               	movlw	0
 12044  0006A2  6F9C               	movwf	(auto_mount@bootsect+3)& (0+255),b
 12045  0006A4  C099  F077         	movff	auto_mount@bootsect,check_fs@sect
 12046  0006A8  C09A  F078         	movff	auto_mount@bootsect+1,check_fs@sect+1
 12047  0006AC  C09B  F079         	movff	auto_mount@bootsect+2,check_fs@sect+2
 12048  0006B0  C09C  F07A         	movff	auto_mount@bootsect+3,check_fs@sect+3
 12049  0006B4  EC7D  F022         	call	_check_fs	;wreg free
 12050  0006B8  0100               	movlb	0	; () banked
 12051  0006BA  6FA3               	movwf	auto_mount@fmt& (0+255),b
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;tff.c: 697: if (fmt == 1) {
 12055  0006BC  05A3               	decf	auto_mount@fmt& (0+255),w,b
 12056  0006BE  A4D8               	btfss	status,2,c
 12057  0006C0  D023               	goto	l11503
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;tff.c: 699: if (fs->win[446+4]) {
 12061  0006C2  EE21 F0E2          	lfsr	2,482
 12062  0006C6  51A9               	movf	auto_mount@fs& (0+255),w,b
 12063  0006C8  26D9               	addwf	fsr2l,f,c
 12064  0006CA  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12065  0006CC  22DA               	addwfc	fsr2h,f,c
 12066  0006CE  50DF               	movf	indf2,w,c
 12067  0006D0  B4D8               	btfsc	status,2,c
 12068  0006D2  D01A               	goto	l11503
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 12072  0006D4  EE21 F0E6          	lfsr	2,486
 12073  0006D8  51A9               	movf	auto_mount@fs& (0+255),w,b
 12074  0006DA  26D9               	addwf	fsr2l,f,c
 12075  0006DC  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12076  0006DE  22DA               	addwfc	fsr2h,f,c
 12077  0006E0  CFDE F099          	movff	postinc2,auto_mount@bootsect
 12078  0006E4  CFDE F09A          	movff	postinc2,auto_mount@bootsect+1
 12079  0006E8  CFDE F09B          	movff	postinc2,auto_mount@bootsect+2
 12080  0006EC  CFDE F09C          	movff	postinc2,auto_mount@bootsect+3
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;tff.c: 701: fmt = check_fs(bootsect);
 12084  0006F0  C099  F077         	movff	auto_mount@bootsect,check_fs@sect
 12085  0006F4  C09A  F078         	movff	auto_mount@bootsect+1,check_fs@sect+1
 12086  0006F8  C09B  F079         	movff	auto_mount@bootsect+2,check_fs@sect+2
 12087  0006FC  C09C  F07A         	movff	auto_mount@bootsect+3,check_fs@sect+3
 12088  000700  EC7D  F022         	call	_check_fs	;wreg free
 12089  000704  0100               	movlb	0	; () banked
 12090  000706  6FA3               	movwf	auto_mount@fmt& (0+255),b
 12091  000708                     l11503:
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 12095  000708  51A3               	movf	auto_mount@fmt& (0+255),w,b
 12096  00070A  A4D8               	btfss	status,2,c
 12097  00070C  D00C               	goto	u13480
 12098                           
 12099                           ; BSR set to: 0
 12100  00070E  EE20 F02B          	lfsr	2,43
 12101  000712  51A9               	movf	auto_mount@fs& (0+255),w,b
 12102  000714  26D9               	addwf	fsr2l,f,c
 12103  000716  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12104  000718  22DA               	addwfc	fsr2h,f,c
 12105  00071A  50DE               	movf	postinc2,w,c
 12106  00071C  E104               	bnz	u13480
 12107  00071E  0E02               	movlw	2
 12108  000720  18DE               	xorwf	postinc2,w,c
 12109  000722  B4D8               	btfsc	status,2,c
 12110  000724  D002               	goto	l11511
 12111  000726                     u13480:
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 12115  000726  0E0B               	movlw	11
 12116  000728  0012               	return	
 12117  00072A                     l11511:
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 12121  00072A  EE20 F036          	lfsr	2,54
 12122  00072E  51A9               	movf	auto_mount@fs& (0+255),w,b
 12123  000730  26D9               	addwf	fsr2l,f,c
 12124  000732  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12125  000734  22DA               	addwfc	fsr2h,f,c
 12126  000736  CFDE F07F          	movff	postinc2,??_auto_mount
 12127  00073A  CFDD F080          	movff	postdec2,??_auto_mount+1
 12128  00073E  C07F  F0A5         	movff	??_auto_mount,auto_mount@fatsize
 12129  000742  C080  F0A6         	movff	??_auto_mount+1,auto_mount@fatsize+1
 12130  000746  6BA7               	clrf	(auto_mount@fatsize+2)& (0+255),b
 12131  000748  6BA8               	clrf	(auto_mount@fatsize+3)& (0+255),b
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 12135  00074A  51A5               	movf	auto_mount@fatsize& (0+255),w,b
 12136  00074C  11A6               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 12137  00074E  11A7               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 12138  000750  11A8               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 12139  000752  A4D8               	btfss	status,2,c
 12140  000754  D00E               	goto	l978
 12141                           
 12142                           ; BSR set to: 0
 12143  000756  EE20 F044          	lfsr	2,68
 12144  00075A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12145  00075C  26D9               	addwf	fsr2l,f,c
 12146  00075E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12147  000760  22DA               	addwfc	fsr2h,f,c
 12148  000762  CFDE F0A5          	movff	postinc2,auto_mount@fatsize
 12149  000766  CFDE F0A6          	movff	postinc2,auto_mount@fatsize+1
 12150  00076A  CFDE F0A7          	movff	postinc2,auto_mount@fatsize+2
 12151  00076E  CFDE F0A8          	movff	postinc2,auto_mount@fatsize+3
 12152  000772                     l978:
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 12156  000772  EE20 F014          	lfsr	2,20
 12157  000776  51A9               	movf	auto_mount@fs& (0+255),w,b
 12158  000778  26D9               	addwf	fsr2l,f,c
 12159  00077A  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12160  00077C  22DA               	addwfc	fsr2h,f,c
 12161  00077E  C0A5  FFDE         	movff	auto_mount@fatsize,postinc2
 12162  000782  C0A6  FFDD         	movff	auto_mount@fatsize+1,postdec2
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;tff.c: 711: fs->n_fats = fs->win[16];
 12166  000786  EE20 F030          	lfsr	2,48
 12167  00078A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12168  00078C  26D9               	addwf	fsr2l,f,c
 12169  00078E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12170  000790  22DA               	addwfc	fsr2h,f,c
 12171  000792  EE10 F01E          	lfsr	1,30
 12172  000796  51A9               	movf	auto_mount@fs& (0+255),w,b
 12173  000798  26E1               	addwf	fsr1l,f,c
 12174  00079A  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12175  00079C  22E2               	addwfc	fsr1h,f,c
 12176  00079E  CFDF FFE7          	movff	indf2,indf1
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;tff.c: 712: fatsize *= fs->n_fats;
 12180  0007A2  C0A5  F01A         	movff	auto_mount@fatsize,___lmul@multiplier
 12181  0007A6  C0A6  F01B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 12182  0007AA  C0A7  F01C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 12183  0007AE  C0A8  F01D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 12184  0007B2  EE20 F01E          	lfsr	2,30
 12185  0007B6  51A9               	movf	auto_mount@fs& (0+255),w,b
 12186  0007B8  26D9               	addwf	fsr2l,f,c
 12187  0007BA  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12188  0007BC  22DA               	addwfc	fsr2h,f,c
 12189  0007BE  50DF               	movf	indf2,w,c
 12190  0007C0  6F7F               	movwf	??_auto_mount& (0+255),b
 12191  0007C2  517F               	movf	??_auto_mount& (0+255),w,b
 12192  0007C4  6E1E               	movwf	___lmul@multiplicand^0,c
 12193  0007C6  6A1F               	clrf	(___lmul@multiplicand+1)^0,c
 12194  0007C8  6A20               	clrf	(___lmul@multiplicand+2)^0,c
 12195  0007CA  6A21               	clrf	(___lmul@multiplicand+3)^0,c
 12196  0007CC  ECDE  F025         	call	___lmul	;wreg free
 12197  0007D0  C01A  F0A5         	movff	?___lmul,auto_mount@fatsize
 12198  0007D4  C01B  F0A6         	movff	?___lmul+1,auto_mount@fatsize+1
 12199  0007D8  C01C  F0A7         	movff	?___lmul+2,auto_mount@fatsize+2
 12200  0007DC  C01D  F0A8         	movff	?___lmul+3,auto_mount@fatsize+3
 12201                           
 12202                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 12203  0007E0  0100               	movlb	0	; () banked
 12204  0007E2  EE20 F02E          	lfsr	2,46
 12205  0007E6  51A9               	movf	auto_mount@fs& (0+255),w,b
 12206  0007E8  26D9               	addwf	fsr2l,f,c
 12207  0007EA  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12208  0007EC  22DA               	addwfc	fsr2h,f,c
 12209  0007EE  CFDE F07F          	movff	postinc2,??_auto_mount
 12210  0007F2  CFDD F080          	movff	postdec2,??_auto_mount+1
 12211  0007F6  517F               	movf	??_auto_mount& (0+255),w,b
 12212  0007F8  2599               	addwf	auto_mount@bootsect& (0+255),w,b
 12213  0007FA  6F81               	movwf	(??_auto_mount+2)& (0+255),b
 12214  0007FC  5180               	movf	(??_auto_mount+1)& (0+255),w,b
 12215  0007FE  219A               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 12216  000800  6F82               	movwf	(??_auto_mount+3)& (0+255),b
 12217  000802  0E00               	movlw	0
 12218  000804  219B               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 12219  000806  6F83               	movwf	(??_auto_mount+4)& (0+255),b
 12220  000808  0E00               	movlw	0
 12221  00080A  219C               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 12222  00080C  6F84               	movwf	(??_auto_mount+5)& (0+255),b
 12223  00080E  EE20 F008          	lfsr	2,8
 12224  000812  51A9               	movf	auto_mount@fs& (0+255),w,b
 12225  000814  26D9               	addwf	fsr2l,f,c
 12226  000816  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12227  000818  22DA               	addwfc	fsr2h,f,c
 12228  00081A  C081  FFDE         	movff	??_auto_mount+2,postinc2
 12229  00081E  C082  FFDE         	movff	??_auto_mount+3,postinc2
 12230  000822  C083  FFDE         	movff	??_auto_mount+4,postinc2
 12231  000826  C084  FFDE         	movff	??_auto_mount+5,postinc2
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;tff.c: 714: fs->csize = fs->win[13];
 12235  00082A  EE20 F02D          	lfsr	2,45
 12236  00082E  51A9               	movf	auto_mount@fs& (0+255),w,b
 12237  000830  26D9               	addwf	fsr2l,f,c
 12238  000832  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12239  000834  22DA               	addwfc	fsr2h,f,c
 12240  000836  EE10 F01D          	lfsr	1,29
 12241  00083A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12242  00083C  26E1               	addwf	fsr1l,f,c
 12243  00083E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12244  000840  22E2               	addwfc	fsr1h,f,c
 12245  000842  CFDF FFE7          	movff	indf2,indf1
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 12249  000846  EE20 F031          	lfsr	2,49
 12250  00084A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12251  00084C  26D9               	addwf	fsr2l,f,c
 12252  00084E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12253  000850  22DA               	addwfc	fsr2h,f,c
 12254  000852  EE10 F002          	lfsr	1,2
 12255  000856  51A9               	movf	auto_mount@fs& (0+255),w,b
 12256  000858  26E1               	addwf	fsr1l,f,c
 12257  00085A  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12258  00085C  22E2               	addwfc	fsr1h,f,c
 12259  00085E  CFDE FFE6          	movff	postinc2,postinc1
 12260  000862  CFDD FFE5          	movff	postdec2,postdec1
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 12264  000866  EE20 F033          	lfsr	2,51
 12265  00086A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12266  00086C  26D9               	addwf	fsr2l,f,c
 12267  00086E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12268  000870  22DA               	addwfc	fsr2h,f,c
 12269  000872  CFDE F07F          	movff	postinc2,??_auto_mount
 12270  000876  CFDD F080          	movff	postdec2,??_auto_mount+1
 12271  00087A  C07F  F09D         	movff	??_auto_mount,auto_mount@totalsect
 12272  00087E  C080  F09E         	movff	??_auto_mount+1,auto_mount@totalsect+1
 12273  000882  6B9F               	clrf	(auto_mount@totalsect+2)& (0+255),b
 12274  000884  6BA0               	clrf	(auto_mount@totalsect+3)& (0+255),b
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 12278  000886  519D               	movf	auto_mount@totalsect& (0+255),w,b
 12279  000888  119E               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 12280  00088A  119F               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 12281  00088C  11A0               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 12282  00088E  A4D8               	btfss	status,2,c
 12283  000890  D00E               	goto	l11533
 12284                           
 12285                           ; BSR set to: 0
 12286  000892  EE20 F040          	lfsr	2,64
 12287  000896  51A9               	movf	auto_mount@fs& (0+255),w,b
 12288  000898  26D9               	addwf	fsr2l,f,c
 12289  00089A  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12290  00089C  22DA               	addwfc	fsr2h,f,c
 12291  00089E  CFDE F09D          	movff	postinc2,auto_mount@totalsect
 12292  0008A2  CFDE F09E          	movff	postinc2,auto_mount@totalsect+1
 12293  0008A6  CFDE F09F          	movff	postinc2,auto_mount@totalsect+2
 12294  0008AA  CFDE F0A0          	movff	postinc2,auto_mount@totalsect+3
 12295  0008AE                     l11533:
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 12299  0008AE  EE20 F002          	lfsr	2,2
 12300  0008B2  51A9               	movf	auto_mount@fs& (0+255),w,b
 12301  0008B4  26D9               	addwf	fsr2l,f,c
 12302  0008B6  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12303  0008B8  22DA               	addwfc	fsr2h,f,c
 12304  0008BA  CFDE F07F          	movff	postinc2,??_auto_mount
 12305  0008BE  CFDD F080          	movff	postdec2,??_auto_mount+1
 12306  0008C2  0E04               	movlw	4
 12307  0008C4  6F81               	movwf	(??_auto_mount+2)& (0+255),b
 12308  0008C6                     u13515:
 12309  0008C6  90D8               	bcf	status,0,c
 12310  0008C8  3380               	rrcf	(??_auto_mount+1)& (0+255),f,b
 12311  0008CA  337F               	rrcf	??_auto_mount& (0+255),f,b
 12312  0008CC  2F81               	decfsz	(??_auto_mount+2)& (0+255),f,b
 12313  0008CE  D7FB               	goto	u13515
 12314  0008D0  517F               	movf	??_auto_mount& (0+255),w,b
 12315  0008D2  6F82               	movwf	(??_auto_mount+3)& (0+255),b
 12316  0008D4  5180               	movf	(??_auto_mount+1)& (0+255),w,b
 12317  0008D6  6F83               	movwf	(??_auto_mount+4)& (0+255),b
 12318  0008D8  6B84               	clrf	(??_auto_mount+5)& (0+255),b
 12319  0008DA  6B85               	clrf	(??_auto_mount+6)& (0+255),b
 12320  0008DC  EE20 F02E          	lfsr	2,46
 12321  0008E0  51A9               	movf	auto_mount@fs& (0+255),w,b
 12322  0008E2  26D9               	addwf	fsr2l,f,c
 12323  0008E4  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12324  0008E6  22DA               	addwfc	fsr2h,f,c
 12325  0008E8  CFDE F086          	movff	postinc2,??_auto_mount+7
 12326  0008EC  CFDD F087          	movff	postdec2,??_auto_mount+8
 12327  0008F0  5186               	movf	(??_auto_mount+7)& (0+255),w,b
 12328  0008F2  6F88               	movwf	(??_auto_mount+9)& (0+255),b
 12329  0008F4  5187               	movf	(??_auto_mount+8)& (0+255),w,b
 12330  0008F6  6F89               	movwf	(??_auto_mount+10)& (0+255),b
 12331  0008F8  6B8A               	clrf	(??_auto_mount+11)& (0+255),b
 12332  0008FA  6B8B               	clrf	(??_auto_mount+12)& (0+255),b
 12333  0008FC  1F88               	comf	(??_auto_mount+9)& (0+255),f,b
 12334  0008FE  1F89               	comf	(??_auto_mount+10)& (0+255),f,b
 12335  000900  1F8A               	comf	(??_auto_mount+11)& (0+255),f,b
 12336  000902  1F8B               	comf	(??_auto_mount+12)& (0+255),f,b
 12337  000904  2B88               	incf	(??_auto_mount+9)& (0+255),f,b
 12338  000906  0E00               	movlw	0
 12339  000908  2389               	addwfc	(??_auto_mount+10)& (0+255),f,b
 12340  00090A  238A               	addwfc	(??_auto_mount+11)& (0+255),f,b
 12341  00090C  238B               	addwfc	(??_auto_mount+12)& (0+255),f,b
 12342  00090E  51A5               	movf	auto_mount@fatsize& (0+255),w,b
 12343  000910  5D88               	subwf	(??_auto_mount+9)& (0+255),w,b
 12344  000912  6F8C               	movwf	(??_auto_mount+13)& (0+255),b
 12345  000914  51A6               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12346  000916  5989               	subwfb	(??_auto_mount+10)& (0+255),w,b
 12347  000918  6F8D               	movwf	(??_auto_mount+14)& (0+255),b
 12348  00091A  51A7               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12349  00091C  598A               	subwfb	(??_auto_mount+11)& (0+255),w,b
 12350  00091E  6F8E               	movwf	(??_auto_mount+15)& (0+255),b
 12351  000920  51A8               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12352  000922  598B               	subwfb	(??_auto_mount+12)& (0+255),w,b
 12353  000924  6F8F               	movwf	(??_auto_mount+16)& (0+255),b
 12354  000926  5182               	movf	(??_auto_mount+3)& (0+255),w,b
 12355  000928  5D8C               	subwf	(??_auto_mount+13)& (0+255),w,b
 12356  00092A  6F90               	movwf	(??_auto_mount+17)& (0+255),b
 12357  00092C  5183               	movf	(??_auto_mount+4)& (0+255),w,b
 12358  00092E  598D               	subwfb	(??_auto_mount+14)& (0+255),w,b
 12359  000930  6F91               	movwf	(??_auto_mount+18)& (0+255),b
 12360  000932  5184               	movf	(??_auto_mount+5)& (0+255),w,b
 12361  000934  598E               	subwfb	(??_auto_mount+15)& (0+255),w,b
 12362  000936  6F92               	movwf	(??_auto_mount+19)& (0+255),b
 12363  000938  5185               	movf	(??_auto_mount+6)& (0+255),w,b
 12364  00093A  598F               	subwfb	(??_auto_mount+16)& (0+255),w,b
 12365  00093C  6F93               	movwf	(??_auto_mount+20)& (0+255),b
 12366  00093E  519D               	movf	auto_mount@totalsect& (0+255),w,b
 12367  000940  2590               	addwf	(??_auto_mount+17)& (0+255),w,b
 12368  000942  6E1A               	movwf	___lldiv@dividend^0,c
 12369  000944  519E               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 12370  000946  2191               	addwfc	(??_auto_mount+18)& (0+255),w,b
 12371  000948  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 12372  00094A  519F               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 12373  00094C  2192               	addwfc	(??_auto_mount+19)& (0+255),w,b
 12374  00094E  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 12375  000950  51A0               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 12376  000952  2193               	addwfc	(??_auto_mount+20)& (0+255),w,b
 12377  000954  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 12378  000956  EE20 F01D          	lfsr	2,29
 12379  00095A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12380  00095C  26D9               	addwf	fsr2l,f,c
 12381  00095E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12382  000960  22DA               	addwfc	fsr2h,f,c
 12383  000962  50DF               	movf	indf2,w,c
 12384  000964  6F94               	movwf	(??_auto_mount+21)& (0+255),b
 12385  000966  5194               	movf	(??_auto_mount+21)& (0+255),w,b
 12386  000968  6E1E               	movwf	___lldiv@divisor^0,c
 12387  00096A  6A1F               	clrf	(___lldiv@divisor+1)^0,c
 12388  00096C  6A20               	clrf	(___lldiv@divisor+2)^0,c
 12389  00096E  6A21               	clrf	(___lldiv@divisor+3)^0,c
 12390  000970  ECBE  F022         	call	___lldiv	;wreg free
 12391  000974  0E02               	movlw	2
 12392  000976  241A               	addwf	?___lldiv^0,w,c
 12393  000978  0100               	movlb	0	; () banked
 12394  00097A  6F95               	movwf	auto_mount@maxclust& (0+255),b
 12395  00097C  0E00               	movlw	0
 12396  00097E  201B               	addwfc	(?___lldiv+1)^0,w,c
 12397  000980  6F96               	movwf	(auto_mount@maxclust+1)& (0+255),b
 12398  000982  0E00               	movlw	0
 12399  000984  201C               	addwfc	(?___lldiv+2)^0,w,c
 12400  000986  6F97               	movwf	(auto_mount@maxclust+2)& (0+255),b
 12401  000988  0E00               	movlw	0
 12402  00098A  201D               	addwfc	(?___lldiv+3)^0,w,c
 12403  00098C  6F98               	movwf	(auto_mount@maxclust+3)& (0+255),b
 12404  00098E  EE20 F016          	lfsr	2,22
 12405  000992  51A9               	movf	auto_mount@fs& (0+255),w,b
 12406  000994  26D9               	addwf	fsr2l,f,c
 12407  000996  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12408  000998  22DA               	addwfc	fsr2h,f,c
 12409  00099A  C095  FFDE         	movff	auto_mount@maxclust,postinc2
 12410  00099E  C096  FFDD         	movff	auto_mount@maxclust+1,postdec2
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;tff.c: 722: fmt = 1;
 12414  0009A2  0E01               	movlw	1
 12415  0009A4  6FA3               	movwf	auto_mount@fmt& (0+255),b
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 12419  0009A6  5198               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 12420  0009A8  1197               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 12421  0009AA  E106               	bnz	u13520
 12422  0009AC  0EF7               	movlw	247
 12423  0009AE  5D95               	subwf	auto_mount@maxclust& (0+255),w,b
 12424  0009B0  0E0F               	movlw	15
 12425  0009B2  5996               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 12426  0009B4  A0D8               	btfss	status,0,c
 12427  0009B6  D002               	goto	l11541
 12428  0009B8                     u13520:
 12429                           
 12430                           ; BSR set to: 0
 12431  0009B8  0E02               	movlw	2
 12432  0009BA  6FA3               	movwf	auto_mount@fmt& (0+255),b
 12433  0009BC                     l11541:
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 12437  0009BC  5198               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 12438  0009BE  1197               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 12439  0009C0  E107               	bnz	u13530
 12440  0009C2  0EF7               	movlw	247
 12441  0009C4  5D95               	subwf	auto_mount@maxclust& (0+255),w,b
 12442  0009C6  0EFF               	movlw	255
 12443  0009C8  5996               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 12444  0009CA  B0D8               	btfsc	status,0,c
 12445  0009CC  D6AC               	goto	u13480
 12446  0009CE  D001               	goto	l11547
 12447  0009D0                     u13530:
 12448  0009D0  D6AA               	goto	u13480
 12449  0009D2                     l11547:
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 12453  0009D2  EE20 F008          	lfsr	2,8
 12454  0009D6  51A9               	movf	auto_mount@fs& (0+255),w,b
 12455  0009D8  26D9               	addwf	fsr2l,f,c
 12456  0009DA  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12457  0009DC  22DA               	addwfc	fsr2h,f,c
 12458  0009DE  CFDE F07F          	movff	postinc2,??_auto_mount
 12459  0009E2  CFDE F080          	movff	postinc2,??_auto_mount+1
 12460  0009E6  CFDE F081          	movff	postinc2,??_auto_mount+2
 12461  0009EA  CFDE F082          	movff	postinc2,??_auto_mount+3
 12462  0009EE  51A5               	movf	auto_mount@fatsize& (0+255),w,b
 12463  0009F0  257F               	addwf	??_auto_mount& (0+255),w,b
 12464  0009F2  6F83               	movwf	(??_auto_mount+4)& (0+255),b
 12465  0009F4  51A6               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12466  0009F6  2180               	addwfc	(??_auto_mount+1)& (0+255),w,b
 12467  0009F8  6F84               	movwf	(??_auto_mount+5)& (0+255),b
 12468  0009FA  51A7               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12469  0009FC  2181               	addwfc	(??_auto_mount+2)& (0+255),w,b
 12470  0009FE  6F85               	movwf	(??_auto_mount+6)& (0+255),b
 12471  000A00  51A8               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12472  000A02  2182               	addwfc	(??_auto_mount+3)& (0+255),w,b
 12473  000A04  6F86               	movwf	(??_auto_mount+7)& (0+255),b
 12474  000A06  EE20 F00C          	lfsr	2,12
 12475  000A0A  51A9               	movf	auto_mount@fs& (0+255),w,b
 12476  000A0C  26D9               	addwf	fsr2l,f,c
 12477  000A0E  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12478  000A10  22DA               	addwfc	fsr2h,f,c
 12479  000A12  C083  FFDE         	movff	??_auto_mount+4,postinc2
 12480  000A16  C084  FFDE         	movff	??_auto_mount+5,postinc2
 12481  000A1A  C085  FFDE         	movff	??_auto_mount+6,postinc2
 12482  000A1E  C086  FFDE         	movff	??_auto_mount+7,postinc2
 12483                           
 12484                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 12485  000A22  EE20 F008          	lfsr	2,8
 12486  000A26  51A9               	movf	auto_mount@fs& (0+255),w,b
 12487  000A28  26D9               	addwf	fsr2l,f,c
 12488  000A2A  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12489  000A2C  22DA               	addwfc	fsr2h,f,c
 12490  000A2E  CFDE F07F          	movff	postinc2,??_auto_mount
 12491  000A32  CFDE F080          	movff	postinc2,??_auto_mount+1
 12492  000A36  CFDE F081          	movff	postinc2,??_auto_mount+2
 12493  000A3A  CFDE F082          	movff	postinc2,??_auto_mount+3
 12494  000A3E  EE20 F002          	lfsr	2,2
 12495  000A42  51A9               	movf	auto_mount@fs& (0+255),w,b
 12496  000A44  26D9               	addwf	fsr2l,f,c
 12497  000A46  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12498  000A48  22DA               	addwfc	fsr2h,f,c
 12499  000A4A  CFDE F083          	movff	postinc2,??_auto_mount+4
 12500  000A4E  CFDD F084          	movff	postdec2,??_auto_mount+5
 12501  000A52  0E04               	movlw	4
 12502  000A54  6F85               	movwf	(??_auto_mount+6)& (0+255),b
 12503  000A56                     u13545:
 12504  000A56  90D8               	bcf	status,0,c
 12505  000A58  3384               	rrcf	(??_auto_mount+5)& (0+255),f,b
 12506  000A5A  3383               	rrcf	(??_auto_mount+4)& (0+255),f,b
 12507  000A5C  2F85               	decfsz	(??_auto_mount+6)& (0+255),f,b
 12508  000A5E  D7FB               	goto	u13545
 12509  000A60  5183               	movf	(??_auto_mount+4)& (0+255),w,b
 12510  000A62  257F               	addwf	??_auto_mount& (0+255),w,b
 12511  000A64  6F86               	movwf	(??_auto_mount+7)& (0+255),b
 12512  000A66  5184               	movf	(??_auto_mount+5)& (0+255),w,b
 12513  000A68  2180               	addwfc	(??_auto_mount+1)& (0+255),w,b
 12514  000A6A  6F87               	movwf	(??_auto_mount+8)& (0+255),b
 12515  000A6C  0E00               	movlw	0
 12516  000A6E  2181               	addwfc	(??_auto_mount+2)& (0+255),w,b
 12517  000A70  6F88               	movwf	(??_auto_mount+9)& (0+255),b
 12518  000A72  0E00               	movlw	0
 12519  000A74  2182               	addwfc	(??_auto_mount+3)& (0+255),w,b
 12520  000A76  6F89               	movwf	(??_auto_mount+10)& (0+255),b
 12521  000A78  51A5               	movf	auto_mount@fatsize& (0+255),w,b
 12522  000A7A  2586               	addwf	(??_auto_mount+7)& (0+255),w,b
 12523  000A7C  6F8A               	movwf	(??_auto_mount+11)& (0+255),b
 12524  000A7E  51A6               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 12525  000A80  2187               	addwfc	(??_auto_mount+8)& (0+255),w,b
 12526  000A82  6F8B               	movwf	(??_auto_mount+12)& (0+255),b
 12527  000A84  51A7               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 12528  000A86  2188               	addwfc	(??_auto_mount+9)& (0+255),w,b
 12529  000A88  6F8C               	movwf	(??_auto_mount+13)& (0+255),b
 12530  000A8A  51A8               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 12531  000A8C  2189               	addwfc	(??_auto_mount+10)& (0+255),w,b
 12532  000A8E  6F8D               	movwf	(??_auto_mount+14)& (0+255),b
 12533  000A90  EE20 F010          	lfsr	2,16
 12534  000A94  51A9               	movf	auto_mount@fs& (0+255),w,b
 12535  000A96  26D9               	addwf	fsr2l,f,c
 12536  000A98  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12537  000A9A  22DA               	addwfc	fsr2h,f,c
 12538  000A9C  C08A  FFDE         	movff	??_auto_mount+11,postinc2
 12539  000AA0  C08B  FFDE         	movff	??_auto_mount+12,postinc2
 12540  000AA4  C08C  FFDE         	movff	??_auto_mount+13,postinc2
 12541  000AA8  C08D  FFDE         	movff	??_auto_mount+14,postinc2
 12542                           
 12543                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 12544  000AAC  EE20 F01A          	lfsr	2,26
 12545  000AB0  51A9               	movf	auto_mount@fs& (0+255),w,b
 12546  000AB2  26D9               	addwf	fsr2l,f,c
 12547  000AB4  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12548  000AB6  22DA               	addwfc	fsr2h,f,c
 12549  000AB8  0EFF               	movlw	255
 12550  000ABA  6EDE               	movwf	postinc2,c
 12551  000ABC  0EFF               	movlw	255
 12552  000ABE  6EDD               	movwf	postdec2,c
 12553                           
 12554                           ;tff.c: 754: fs->fs_type = fmt;
 12555  000AC0  EE20 F01C          	lfsr	2,28
 12556  000AC4  51A9               	movf	auto_mount@fs& (0+255),w,b
 12557  000AC6  26D9               	addwf	fsr2l,f,c
 12558  000AC8  51AA               	movf	(auto_mount@fs+1)& (0+255),w,b
 12559  000ACA  22DA               	addwfc	fsr2h,f,c
 12560  000ACC  C0A3  FFDF         	movff	auto_mount@fmt,indf2
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;tff.c: 755: fs->id = ++fsid;
 12564  000AD0  0101               	movlb	1	; () banked
 12565  000AD2  4B45               	infsnz	_fsid& (0+255),f,b
 12566  000AD4  2B46               	incf	(_fsid+1)& (0+255),f,b
 12567  000AD6  C0A9  FFD9         	movff	auto_mount@fs,fsr2l
 12568  000ADA  C0AA  FFDA         	movff	auto_mount@fs+1,fsr2h
 12569  000ADE  C145  FFDE         	movff	_fsid,postinc2
 12570  000AE2  C146  FFDD         	movff	_fsid+1,postdec2
 12571                           
 12572                           ;tff.c: 756: return FR_OK;
 12573  000AE6  0E00               	movlw	0
 12574  000AE8  0012               	return		;funcret
 12575  000AEA                     __end_of_auto_mount:
 12576                           	callstack 0
 12577                           
 12578 ;; *************** function _memset *****************
 12579 ;; Defined at:
 12580 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  p1              2   25[COMRAM] PTR void 
 12583 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 12584 ;;  c               2   27[COMRAM] int 
 12585 ;;  n               2   29[COMRAM] unsigned int 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  p               2   31[COMRAM] PTR unsigned char 
 12588 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  2   25[COMRAM] PTR void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12598 ;;      Params:         6       0       0       0       0       0       0       0       0
 12599 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12601 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12602 ;;Total ram usage:        8 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    3
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_make_dirfile
 12609 ;;		_reserve_direntry
 12610 ;;		_auto_mount
 12611 ;;		_f_open
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	text61
 12616  0051C2                     __ptext61:
 12617                           	callstack 0
 12618  0051C2                     _memset:
 12619                           	callstack 20
 12620                           
 12621                           ;incstack = 0
 12622  0051C2  C01A  F020         	movff	memset@p1,memset@p
 12623  0051C6  C01B  F021         	movff	memset@p1+1,memset@p+1
 12624  0051CA  D008               	goto	l10661
 12625  0051CC                     l10657:
 12626  0051CC  C020  FFD9         	movff	memset@p,fsr2l
 12627  0051D0  C021  FFDA         	movff	memset@p+1,fsr2h
 12628  0051D4  C01C  FFDF         	movff	memset@c,indf2
 12629  0051D8  4A20               	infsnz	memset@p^0,f,c
 12630  0051DA  2A21               	incf	(memset@p+1)^0,f,c
 12631  0051DC                     l10661:
 12632  0051DC  061E               	decf	memset@n^0,f,c
 12633  0051DE  A0D8               	btfss	status,0,c
 12634  0051E0  061F               	decf	(memset@n+1)^0,f,c
 12635  0051E2  281E               	incf	memset@n^0,w,c
 12636  0051E4  E1F3               	bnz	l10657
 12637  0051E6  281F               	incf	(memset@n+1)^0,w,c
 12638  0051E8  B4D8               	btfsc	status,2,c
 12639  0051EA  0012               	return	
 12640  0051EC  D7EF               	goto	l10657
 12641  0051EE                     __end_of_memset:
 12642                           	callstack 0
 12643                           
 12644 ;; *************** function _disk_initialize *****************
 12645 ;; Defined at:
 12646 ;;		line 59 in file "bibliotecas/diskio.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;  pdrv            1    wreg     unsigned char 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;  pdrv            1   45[COMRAM] unsigned char 
 12651 ;;  result          2    0        int 
 12652 ;;  stat            1   46[COMRAM] unsigned char 
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      unsigned char 
 12655 ;; Registers used:
 12656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12662 ;;      Params:         0       0       0       0       0       0       0       0       0
 12663 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12665 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12666 ;;Total ram usage:        2 bytes
 12667 ;; Hardware stack levels used:    1
 12668 ;; Hardware stack levels required when called:    8
 12669 ;; This function calls:
 12670 ;;		_sdc_disk_initialize
 12671 ;; This function is called by:
 12672 ;;		_auto_mount
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text62
 12677  0052BC                     __ptext62:
 12678                           	callstack 0
 12679  0052BC                     _disk_initialize:
 12680                           	callstack 16
 12681                           
 12682                           ;incstack = 0
 12683                           ;disk_initialize@pdrv stored from wreg
 12684  0052BC  6E2E               	movwf	disk_initialize@pdrv^0,c
 12685                           
 12686                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 12687  0052BE  D005               	goto	l10849
 12688  0052C0                     l10831:
 12689                           
 12690                           ;diskio.c: 68: stat = sdc_disk_initialize();
 12691  0052C0  EC13  F00B         	call	_sdc_disk_initialize	;wreg free
 12692  0052C4  6E2F               	movwf	disk_initialize@stat^0,c
 12693  0052C6                     l10833:
 12694                           
 12695                           ;diskio.c: 72: return stat;
 12696  0052C6  502F               	movf	disk_initialize@stat^0,w,c
 12697  0052C8  0012               	return	
 12698  0052CA                     l10849:
 12699  0052CA  502E               	movf	disk_initialize@pdrv^0,w,c
 12700                           
 12701                           ; Switch size 1, requested type "simple"
 12702                           ; Number of cases is 3, Range of values is 0 to 2
 12703                           ; switch strategies available:
 12704                           ; Name         Instructions Cycles
 12705                           ; simple_byte           10     6 (average)
 12706                           ;	Chosen strategy is simple_byte
 12707  0052CC  0A00               	xorlw	0	; case 0
 12708  0052CE  B4D8               	btfsc	status,2,c
 12709  0052D0  D7F7               	goto	l10831
 12710  0052D2  0A01               	xorlw	1	; case 1
 12711  0052D4  B4D8               	btfsc	status,2,c
 12712  0052D6  D7F4               	goto	l10831
 12713  0052D8  0A03               	xorlw	3	; case 2
 12714  0052DA  B4D8               	btfsc	status,2,c
 12715  0052DC  D7F4               	goto	l10833
 12716                           
 12717                           ;diskio.c: 88: return 0x01;
 12718  0052DE  0E01               	movlw	1
 12719  0052E0  0012               	return		;funcret
 12720  0052E2                     __end_of_disk_initialize:
 12721                           	callstack 0
 12722                           
 12723 ;; *************** function _sdc_disk_initialize *****************
 12724 ;; Defined at:
 12725 ;;		line 275 in file "bibliotecas/diskio.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  count2          2    9[BANK0 ] int 
 12730 ;;  crc_number      2    5[BANK0 ] int 
 12731 ;;  count1          2    3[BANK0 ] int 
 12732 ;;  i               2    0        int 
 12733 ;;  buff            1   11[BANK0 ] unsigned char 
 12734 ;;  ocr             1    8[BANK0 ] unsigned char 
 12735 ;;  buff_i          1    7[BANK0 ] unsigned char 
 12736 ;;  stat            1    2[BANK0 ] unsigned char 
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      unsigned char 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 3F/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0
 12747 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12748 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12749 ;;      Totals:         1      12       0       0       0       0       0       0       0
 12750 ;;Total ram usage:       13 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    7
 12753 ;; This function calls:
 12754 ;;		_command
 12755 ;;		_dummy_clocks
 12756 ;;		_escreve_frase_ram_lcd
 12757 ;;		_posicao_cursor_lcd
 12758 ;;		_proceed
 12759 ;;		_response
 12760 ;;		_sdc_reset
 12761 ;; This function is called by:
 12762 ;;		_disk_initialize
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text63
 12767  001626                     __ptext63:
 12768                           	callstack 0
 12769  001626                     _sdc_disk_initialize:
 12770                           	callstack 16
 12771                           
 12772                           ;incstack = 0
 12773  001626  0E00               	movlw	0
 12774  001628  0100               	movlb	0	; () banked
 12775  00162A  6F64               	movwf	(sdc_disk_initialize@count1+1)& (0+255),b
 12776  00162C  0E00               	movlw	0
 12777  00162E  6F63               	movwf	sdc_disk_initialize@count1& (0+255),b
 12778  001630  0E00               	movlw	0
 12779  001632  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12780  001634  0E00               	movlw	0
 12781  001636  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12782                           
 12783                           ;diskio.c: 280: BYTE buff = 0;
 12784  001638  0E00               	movlw	0
 12785  00163A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 12789  00163C  0E10               	movlw	16
 12790  00163E  6E2D               	movwf	??_sdc_disk_initialize^0,c
 12791  001640  0E94               	movlw	148
 12792  001642                     u16157:
 12793  001642  2EE8               	decfsz	wreg,f,c
 12794  001644  D7FE               	bra	u16157
 12795  001646  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 12796  001648  D7FC               	bra	u16157
 12797  00164A  D000               	nop2	
 12798                           
 12799                           ;diskio.c: 284: dummy_clocks(100);
 12800  00164C  0E64               	movlw	100
 12801  00164E  EC57  F028         	call	_dummy_clocks
 12802                           
 12803                           ;diskio.c: 287: sdc_reset();
 12804  001652  EC25  F021         	call	_sdc_reset	;wreg free
 12805                           
 12806                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 12807  001656  0EAA               	movlw	170
 12808  001658  6E1F               	movwf	command@arg^0,c
 12809  00165A  0E01               	movlw	1
 12810  00165C  6E20               	movwf	(command@arg+1)^0,c
 12811  00165E  0E00               	movlw	0
 12812  001660  6E21               	movwf	(command@arg+2)^0,c
 12813  001662  0E00               	movlw	0
 12814  001664  6E22               	movwf	(command@arg+3)^0,c
 12815  001666  0E87               	movlw	135
 12816  001668  6E23               	movwf	command@CRC^0,c
 12817  00166A  0E48               	movlw	72
 12818  00166C  ECB1  F025         	call	_command
 12819                           
 12820                           ;diskio.c: 289: proceed();
 12821  001670  ECC7  F02A         	call	_proceed	;wreg free
 12822  001674                     l10457:
 12823                           
 12824                           ;diskio.c: 291: buff_i = response();
 12825  001674  ECC1  F02A         	call	_response	;wreg free
 12826  001678  0100               	movlb	0	; () banked
 12827  00167A  6F67               	movwf	sdc_disk_initialize@buff_i& (0+255),b
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;diskio.c: 292: if(buff_i == 1)
 12831  00167C  0567               	decf	sdc_disk_initialize@buff_i& (0+255),w,b
 12832  00167E  A4D8               	btfss	status,2,c
 12833  001680  D004               	goto	l10463
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 12837  001682  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12838  001684  6F66               	movwf	(sdc_disk_initialize@crc_number+1)& (0+255),b
 12839  001686  6B65               	clrf	sdc_disk_initialize@crc_number& (0+255),b
 12840                           
 12841                           ;diskio.c: 295: }
 12842  001688  D006               	goto	l10467
 12843  00168A                     l10463:
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;diskio.c: 296: else if(buff_i==0xAA)
 12847  00168A  0EAA               	movlw	170
 12848  00168C  1967               	xorwf	sdc_disk_initialize@buff_i& (0+255),w,b
 12849  00168E  A4D8               	btfss	status,2,c
 12850  001690  D002               	goto	l10467
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 12854  001692  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12855  001694  1365               	iorwf	sdc_disk_initialize@crc_number& (0+255),f,b
 12856  001696                     l10467:
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;diskio.c: 299: };diskio.c: 300: count1++;
 12860  001696  4B63               	infsnz	sdc_disk_initialize@count1& (0+255),f,b
 12861  001698  2B64               	incf	(sdc_disk_initialize@count1+1)& (0+255),f,b
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 12865  00169A  0EAA               	movlw	170
 12866  00169C  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12867  00169E  E103               	bnz	u11780
 12868  0016A0  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12869  0016A2  B4D8               	btfsc	status,2,c
 12870  0016A4  D008               	goto	u11790
 12871  0016A6                     u11780:
 12872                           
 12873                           ; BSR set to: 0
 12874  0016A6  BF64               	btfsc	(sdc_disk_initialize@count1+1)& (0+255),7,b
 12875  0016A8  D7E5               	goto	l10457
 12876  0016AA  0EE8               	movlw	232
 12877  0016AC  5D63               	subwf	sdc_disk_initialize@count1& (0+255),w,b
 12878  0016AE  0E03               	movlw	3
 12879  0016B0  5964               	subwfb	(sdc_disk_initialize@count1+1)& (0+255),w,b
 12880  0016B2  A0D8               	btfss	status,0,c
 12881  0016B4  D7DF               	goto	l10457
 12882  0016B6                     u11790:
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;diskio.c: 306: if (crc_number == 0x1AA)
 12886  0016B6  0EAA               	movlw	170
 12887  0016B8  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12888  0016BA  E102               	bnz	u11801
 12889  0016BC  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12890  0016BE  A4D8               	btfss	status,2,c
 12891  0016C0                     u11801:
 12892  0016C0  D09E               	goto	l10545
 12893  0016C2                     u11800:
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;diskio.c: 310: count2 = 0;
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;diskio.c: 309: do{
 12900  0016C2  0E00               	movlw	0
 12901  0016C4  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12902  0016C6  0E00               	movlw	0
 12903  0016C8  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12904  0016CA                     
 12905                           ; BSR set to: 0
 12906                           ;diskio.c: 319: dummy_clocks(10);
 12907                           
 12908                           ; BSR set to: 0
 12909  0016CA  0E0A               	movlw	10
 12910  0016CC  EC57  F028         	call	_dummy_clocks
 12911                           
 12912                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 12913  0016D0  0E00               	movlw	0
 12914  0016D2  6E1F               	movwf	command@arg^0,c
 12915  0016D4  0E00               	movlw	0
 12916  0016D6  6E20               	movwf	(command@arg+1)^0,c
 12917  0016D8  0E00               	movlw	0
 12918  0016DA  6E21               	movwf	(command@arg+2)^0,c
 12919  0016DC  0E00               	movlw	0
 12920  0016DE  6E22               	movwf	(command@arg+3)^0,c
 12921  0016E0  0E00               	movlw	0
 12922  0016E2  6E23               	movwf	command@CRC^0,c
 12923  0016E4  0E77               	movlw	119
 12924  0016E6  ECB1  F025         	call	_command
 12925                           
 12926                           ;diskio.c: 323: proceed();
 12927  0016EA  ECC7  F02A         	call	_proceed	;wreg free
 12928  0016EE                     l10487:
 12929                           
 12930                           ;diskio.c: 325: buff = response();
 12931  0016EE  ECC1  F02A         	call	_response	;wreg free
 12932  0016F2  0100               	movlb	0	; () banked
 12933  0016F4  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;diskio.c: 326: count2++;
 12937  0016F6  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12938  0016F8  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12939                           
 12940                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 12941  0016FA  056B               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12942  0016FC  B4D8               	btfsc	status,2,c
 12943  0016FE  D008               	goto	u11820
 12944                           
 12945                           ; BSR set to: 0
 12946  001700  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12947  001702  D7F5               	goto	l10487
 12948  001704  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12949  001706  E104               	bnz	u11820
 12950  001708  0E0A               	movlw	10
 12951  00170A  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12952  00170C  A0D8               	btfss	status,0,c
 12953  00170E  D7EF               	goto	l10487
 12954  001710                     u11820:
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;diskio.c: 328: count2 = 0;
 12958  001710  0E00               	movlw	0
 12959  001712  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12960  001714  0E00               	movlw	0
 12961  001716  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;diskio.c: 332: dummy_clocks(10);
 12965  001718  0E0A               	movlw	10
 12966  00171A  EC57  F028         	call	_dummy_clocks
 12967                           
 12968                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 12969  00171E  0E00               	movlw	0
 12970  001720  6E1F               	movwf	command@arg^0,c
 12971  001722  0E00               	movlw	0
 12972  001724  6E20               	movwf	(command@arg+1)^0,c
 12973  001726  0E00               	movlw	0
 12974  001728  6E21               	movwf	(command@arg+2)^0,c
 12975  00172A  0E40               	movlw	64
 12976  00172C  6E22               	movwf	(command@arg+3)^0,c
 12977  00172E  0E00               	movlw	0
 12978  001730  6E23               	movwf	command@CRC^0,c
 12979  001732  0E69               	movlw	105
 12980  001734  ECB1  F025         	call	_command
 12981                           
 12982                           ;diskio.c: 334: proceed();
 12983  001738  ECC7  F02A         	call	_proceed	;wreg free
 12984                           
 12985                           ;diskio.c: 335: buff = response();
 12986  00173C  ECC1  F02A         	call	_response	;wreg free
 12987  001740  0100               	movlb	0	; () banked
 12988  001742  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;diskio.c: 336: count2++;
 12992  001744  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12993  001746  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;diskio.c: 337: }while(buff!=0X00);
 12997  001748  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12998  00174A  A4D8               	btfss	status,2,c
 12999  00174C  D7BE               	goto	l10477
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;diskio.c: 342: dummy_clocks(10);
 13003                           
 13004                           ; BSR set to: 0
 13005  00174E  0E0A               	movlw	10
 13006  001750  EC57  F028         	call	_dummy_clocks
 13007                           
 13008                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 13009  001754  0E00               	movlw	0
 13010  001756  6E1F               	movwf	command@arg^0,c
 13011  001758  0E00               	movlw	0
 13012  00175A  6E20               	movwf	(command@arg+1)^0,c
 13013  00175C  0E00               	movlw	0
 13014  00175E  6E21               	movwf	(command@arg+2)^0,c
 13015  001760  0E00               	movlw	0
 13016  001762  6E22               	movwf	(command@arg+3)^0,c
 13017  001764  0EFF               	movlw	255
 13018  001766  6E23               	movwf	command@CRC^0,c
 13019  001768  0E7A               	movlw	122
 13020  00176A  ECB1  F025         	call	_command
 13021                           
 13022                           ;diskio.c: 344: proceed();
 13023  00176E  ECC7  F02A         	call	_proceed	;wreg free
 13024  001772                     l10511:
 13025                           
 13026                           ;diskio.c: 346: buff = response();
 13027  001772  ECC1  F02A         	call	_response	;wreg free
 13028  001776  0100               	movlb	0	; () banked
 13029  001778  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 13033  00177A  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13034  00177C  256B               	addwf	sdc_disk_initialize@buff& (0+255),w,b
 13035  00177E  0B80               	andlw	128
 13036  001780  6F68               	movwf	sdc_disk_initialize@ocr& (0+255),b
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;diskio.c: 348: count2++;
 13040  001782  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13041  001784  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 13045  001786  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 13046  001788  B4D8               	btfsc	status,2,c
 13047  00178A  D00B               	goto	u11860
 13048                           
 13049                           ; BSR set to: 0
 13050  00178C  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 13051  00178E  B4D8               	btfsc	status,2,c
 13052  001790  D008               	goto	u11860
 13053                           
 13054                           ; BSR set to: 0
 13055  001792  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13056  001794  D7EE               	goto	l10511
 13057  001796  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13058  001798  E104               	bnz	u11860
 13059  00179A  0E0A               	movlw	10
 13060  00179C  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13061  00179E  A0D8               	btfss	status,0,c
 13062  0017A0  D7E8               	goto	l10511
 13063  0017A2                     u11860:
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 13067  0017A2  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 13068  0017A4  B4D8               	btfsc	status,2,c
 13069  0017A6  D003               	goto	u11880
 13070                           
 13071                           ; BSR set to: 0
 13072  0017A8  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 13073  0017AA  A4D8               	btfss	status,2,c
 13074  0017AC  D78A               	goto	u11800
 13075  0017AE                     u11880:
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 13079                           
 13080                           ; BSR set to: 0
 13081  0017AE  0E10               	movlw	16
 13082  0017B0  6E2D               	movwf	??_sdc_disk_initialize^0,c
 13083  0017B2  0E94               	movlw	148
 13084  0017B4                     u16167:
 13085  0017B4  2EE8               	decfsz	wreg,f,c
 13086  0017B6  D7FE               	bra	u16167
 13087  0017B8  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 13088  0017BA  D7FC               	bra	u16167
 13089  0017BC  D000               	nop2	
 13090                           
 13091                           ;diskio.c: 356: stat = 0X00;
 13092  0017BE  0E00               	movlw	0
 13093  0017C0  0100               	movlb	0	; () banked
 13094  0017C2  6F62               	movwf	sdc_disk_initialize@stat& (0+255),b
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;diskio.c: 358: if(!ocr)
 13098  0017C4  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 13099  0017C6  A4D8               	btfss	status,2,c
 13100  0017C8  D0AC               	goto	u11980
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 13104  0017CA  0E0A               	movlw	10
 13105  0017CC  EC57  F028         	call	_dummy_clocks
 13106                           
 13107                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 13108  0017D0  0E00               	movlw	0
 13109  0017D2  6E1F               	movwf	command@arg^0,c
 13110  0017D4  0E02               	movlw	2
 13111  0017D6  6E20               	movwf	(command@arg+1)^0,c
 13112  0017D8  0E00               	movlw	0
 13113  0017DA  6E21               	movwf	(command@arg+2)^0,c
 13114  0017DC  0E00               	movlw	0
 13115  0017DE  6E22               	movwf	(command@arg+3)^0,c
 13116  0017E0  0EFF               	movlw	255
 13117  0017E2  6E23               	movwf	command@CRC^0,c
 13118  0017E4  0E50               	movlw	80
 13119  0017E6  ECB1  F025         	call	_command
 13120                           
 13121                           ;diskio.c: 363: proceed();
 13122  0017EA  ECC7  F02A         	call	_proceed	;wreg free
 13123  0017EE                     
 13124                           ;diskio.c: 367: buff = response();
 13125  0017EE  ECC1  F02A         	call	_response	;wreg free
 13126  0017F2  0100               	movlb	0	; () banked
 13127  0017F4  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;diskio.c: 368: }while(buff!=0X00);
 13131  0017F6  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13132  0017F8  B4D8               	btfsc	status,2,c
 13133  0017FA  D093               	goto	u11980
 13134  0017FC  D7F8               	goto	l10539
 13135  0017FE                     l10545:
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 13139  0017FE  0E00               	movlw	0
 13140  001800  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13141  001802  0E00               	movlw	0
 13142  001804  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;diskio.c: 378: dummy_clocks(1);
 13146                           
 13147                           ; BSR set to: 0
 13148  001806  0E01               	movlw	1
 13149  001808  EC57  F028         	call	_dummy_clocks
 13150                           
 13151                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 13152  00180C  0E00               	movlw	0
 13153  00180E  6E1F               	movwf	command@arg^0,c
 13154  001810  0E00               	movlw	0
 13155  001812  6E20               	movwf	(command@arg+1)^0,c
 13156  001814  0E00               	movlw	0
 13157  001816  6E21               	movwf	(command@arg+2)^0,c
 13158  001818  0E00               	movlw	0
 13159  00181A  6E22               	movwf	(command@arg+3)^0,c
 13160  00181C  0EFF               	movlw	255
 13161  00181E  6E23               	movwf	command@CRC^0,c
 13162  001820  0E69               	movlw	105
 13163  001822  ECB1  F025         	call	_command
 13164                           
 13165                           ;diskio.c: 380: proceed();
 13166  001826  ECC7  F02A         	call	_proceed	;wreg free
 13167  00182A                     l10555:
 13168                           
 13169                           ;diskio.c: 382: buff = response();
 13170  00182A  ECC1  F02A         	call	_response	;wreg free
 13171  00182E  0100               	movlb	0	; () banked
 13172  001830  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;diskio.c: 383: count2++;
 13176  001832  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13177  001834  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;diskio.c: 384: if(buff==0x00)
 13181  001836  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13182  001838  A4D8               	btfss	status,2,c
 13183  00183A  D00B               	goto	l10565
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 13187  00183C  0E00               	movlw	0
 13188  00183E  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 13189  001840  0E01               	movlw	1
 13190  001842  ECFB  F024         	call	_posicao_cursor_lcd
 13191                           
 13192                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 13193  001846  0E21               	movlw	low STR_3
 13194  001848  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13195  00184A  0E62               	movlw	high STR_3
 13196  00184C  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13197  00184E  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13198  001852                     l10565:
 13199                           
 13200                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 13201  001852  0E10               	movlw	16
 13202  001854  6E2D               	movwf	??_sdc_disk_initialize^0,c
 13203  001856  0E94               	movlw	148
 13204  001858                     u16177:
 13205  001858  2EE8               	decfsz	wreg,f,c
 13206  00185A  D7FE               	bra	u16177
 13207  00185C  2E2D               	decfsz	??_sdc_disk_initialize^0,f,c
 13208  00185E  D7FC               	bra	u16177
 13209  001860  D000               	nop2	
 13210                           
 13211                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 13212  001862  0100               	movlb	0	; () banked
 13213  001864  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13214  001866  B4D8               	btfsc	status,2,c
 13215  001868  D008               	goto	u11930
 13216                           
 13217                           ; BSR set to: 0
 13218  00186A  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13219  00186C  D7DE               	goto	l10555
 13220  00186E  0E10               	movlw	16
 13221  001870  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13222  001872  0E27               	movlw	39
 13223  001874  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13224  001876  A0D8               	btfss	status,0,c
 13225  001878  D7D8               	goto	l10555
 13226  00187A                     u11930:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;diskio.c: 393: if(count2==10)
 13230                           
 13231                           ; BSR set to: 0
 13232  00187A  0E0A               	movlw	10
 13233  00187C  1969               	xorwf	sdc_disk_initialize@count2& (0+255),w,b
 13234  00187E  116A               	iorwf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13235  001880  A4D8               	btfss	status,2,c
 13236  001882  D036               	goto	u11970
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 13240  001884  0E00               	movlw	0
 13241  001886  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 13242  001888  0E00               	movlw	0
 13243  00188A  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;diskio.c: 396: dummy_clocks(10);
 13247  00188C  0E0A               	movlw	10
 13248  00188E  EC57  F028         	call	_dummy_clocks
 13249                           
 13250                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 13251  001892  0E00               	movlw	0
 13252  001894  6E1F               	movwf	command@arg^0,c
 13253  001896  0E00               	movlw	0
 13254  001898  6E20               	movwf	(command@arg+1)^0,c
 13255  00189A  0E00               	movlw	0
 13256  00189C  6E21               	movwf	(command@arg+2)^0,c
 13257  00189E  0E00               	movlw	0
 13258  0018A0  6E22               	movwf	(command@arg+3)^0,c
 13259  0018A2  0EFF               	movlw	255
 13260  0018A4  6E23               	movwf	command@CRC^0,c
 13261  0018A6  0E41               	movlw	65
 13262  0018A8  ECB1  F025         	call	_command
 13263                           
 13264                           ;diskio.c: 398: proceed();
 13265  0018AC  ECC7  F02A         	call	_proceed	;wreg free
 13266  0018B0                     l10581:
 13267                           
 13268                           ;diskio.c: 400: buff = response();
 13269  0018B0  ECC1  F02A         	call	_response	;wreg free
 13270  0018B4  0100               	movlb	0	; () banked
 13271  0018B6  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;diskio.c: 401: count2++;
 13275  0018B8  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 13276  0018BA  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;diskio.c: 402: if(buff==0x00)
 13280  0018BC  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13281  0018BE  A4D8               	btfss	status,2,c
 13282  0018C0  D00B               	goto	l10591
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 13286  0018C2  0E00               	movlw	0
 13287  0018C4  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 13288  0018C6  0E01               	movlw	1
 13289  0018C8  ECFB  F024         	call	_posicao_cursor_lcd
 13290                           
 13291                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 13292  0018CC  0EF7               	movlw	low STR_4
 13293  0018CE  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13294  0018D0  0E61               	movlw	high STR_4
 13295  0018D2  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13296  0018D4  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13297  0018D8                     l10591:
 13298                           
 13299                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 13300  0018D8  0100               	movlb	0	; () banked
 13301  0018DA  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13302  0018DC  B4D8               	btfsc	status,2,c
 13303  0018DE  D008               	goto	u11970
 13304                           
 13305                           ; BSR set to: 0
 13306  0018E0  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 13307  0018E2  D7E6               	goto	l10581
 13308  0018E4  0E10               	movlw	16
 13309  0018E6  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 13310  0018E8  0E27               	movlw	39
 13311  0018EA  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 13312  0018EC  A0D8               	btfss	status,0,c
 13313  0018EE  D7E0               	goto	l10581
 13314  0018F0                     u11970:
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 13318  0018F0  0E0A               	movlw	10
 13319  0018F2  EC57  F028         	call	_dummy_clocks
 13320                           
 13321                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 13322  0018F6  0E00               	movlw	0
 13323  0018F8  6E1F               	movwf	command@arg^0,c
 13324  0018FA  0E02               	movlw	2
 13325  0018FC  6E20               	movwf	(command@arg+1)^0,c
 13326  0018FE  0E00               	movlw	0
 13327  001900  6E21               	movwf	(command@arg+2)^0,c
 13328  001902  0E00               	movlw	0
 13329  001904  6E22               	movwf	(command@arg+3)^0,c
 13330  001906  0EFF               	movlw	255
 13331  001908  6E23               	movwf	command@CRC^0,c
 13332  00190A  0E50               	movlw	80
 13333  00190C  ECB1  F025         	call	_command
 13334                           
 13335                           ;diskio.c: 414: proceed();
 13336  001910  ECC7  F02A         	call	_proceed	;wreg free
 13337  001914                     
 13338                           ;diskio.c: 418: buff = response();
 13339  001914  ECC1  F02A         	call	_response	;wreg free
 13340  001918  0100               	movlb	0	; () banked
 13341  00191A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;diskio.c: 419: }while(buff!=0X00);
 13345  00191C  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 13346  00191E  A4D8               	btfss	status,2,c
 13347  001920  D7F9               	goto	l10599
 13348  001922                     u11980:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;diskio.c: 421: };diskio.c: 425: return stat;
 13352  001922  5162               	movf	sdc_disk_initialize@stat& (0+255),w,b
 13353                           
 13354                           ; BSR set to: 0
 13355  001924  0012               	return		;funcret
 13356  001926                     __end_of_sdc_disk_initialize:
 13357                           	callstack 0
 13358                           
 13359 ;; *************** function _sdc_reset *****************
 13360 ;; Defined at:
 13361 ;;		line 238 in file "bibliotecas/diskio.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;		None
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;  teste          10    0        unsigned char [10]
 13366 ;;  count           2   41[COMRAM] int 
 13367 ;;  count_nosd      2   39[COMRAM] int 
 13368 ;;  i               2    0        int 
 13369 ;;  receive         2    0        unsigned int 
 13370 ;;  buff            1   43[COMRAM] unsigned char 
 13371 ;;  stat            1    0        unsigned char 
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1    wreg      void 
 13374 ;; Registers used:
 13375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0
 13382 ;;      Locals:         7       0       0       0       0       0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13384 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13385 ;;Total ram usage:        7 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:    6
 13388 ;; This function calls:
 13389 ;;		_command
 13390 ;;		_escreve_frase_ram_lcd
 13391 ;;		_posicao_cursor_lcd
 13392 ;;		_proceed
 13393 ;;		_response
 13394 ;; This function is called by:
 13395 ;;		_sdc_disk_initialize
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text64
 13400  00424A                     __ptext64:
 13401                           	callstack 0
 13402  00424A                     _sdc_reset:
 13403                           	callstack 16
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;incstack = 0
 13407  00424A  0E00               	movlw	0
 13408  00424C  6E2B               	movwf	(sdc_reset@count+1)^0,c
 13409  00424E  0E00               	movlw	0
 13410  004250  6E2A               	movwf	sdc_reset@count^0,c
 13411  004252  0E00               	movlw	0
 13412  004254  6E29               	movwf	(sdc_reset@count_nosd+1)^0,c
 13413  004256  0E00               	movlw	0
 13414  004258  6E28               	movwf	sdc_reset@count_nosd^0,c
 13415  00425A                     l10261:
 13416                           
 13417                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 13418  00425A  0E00               	movlw	0
 13419  00425C  6E1F               	movwf	command@arg^0,c
 13420  00425E  0E00               	movlw	0
 13421  004260  6E20               	movwf	(command@arg+1)^0,c
 13422  004262  0E00               	movlw	0
 13423  004264  6E21               	movwf	(command@arg+2)^0,c
 13424  004266  0E00               	movlw	0
 13425  004268  6E22               	movwf	(command@arg+3)^0,c
 13426  00426A  0E95               	movlw	149
 13427  00426C  6E23               	movwf	command@CRC^0,c
 13428  00426E  0E40               	movlw	64
 13429  004270  ECB1  F025         	call	_command
 13430                           
 13431                           ;diskio.c: 249: proceed();
 13432  004274  ECC7  F02A         	call	_proceed	;wreg free
 13433  004278                     l10265:
 13434                           
 13435                           ;diskio.c: 251: buff = response();
 13436  004278  ECC1  F02A         	call	_response	;wreg free
 13437  00427C  6E2C               	movwf	sdc_reset@buff^0,c
 13438                           
 13439                           ;diskio.c: 252: count++;
 13440  00427E  4A2A               	infsnz	sdc_reset@count^0,f,c
 13441  004280  2A2B               	incf	(sdc_reset@count+1)^0,f,c
 13442                           
 13443                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 13444  004282  042C               	decf	sdc_reset@buff^0,w,c
 13445  004284  B4D8               	btfsc	status,2,c
 13446  004286  D008               	goto	u11480
 13447  004288  BE2B               	btfsc	(sdc_reset@count+1)^0,7,c
 13448  00428A  D7F6               	goto	l10265
 13449  00428C  502B               	movf	(sdc_reset@count+1)^0,w,c
 13450  00428E  E104               	bnz	u11480
 13451  004290  0E0A               	movlw	10
 13452  004292  5C2A               	subwf	sdc_reset@count^0,w,c
 13453  004294  A0D8               	btfss	status,0,c
 13454  004296  D7F0               	goto	l10265
 13455  004298                     u11480:
 13456                           
 13457                           ;diskio.c: 254: count = 0;
 13458  004298  0E00               	movlw	0
 13459  00429A  6E2B               	movwf	(sdc_reset@count+1)^0,c
 13460  00429C  0E00               	movlw	0
 13461  00429E  6E2A               	movwf	sdc_reset@count^0,c
 13462                           
 13463                           ;diskio.c: 255: if(buff != 0x01)
 13464  0042A0  042C               	decf	sdc_reset@buff^0,w,c
 13465  0042A2  B4D8               	btfsc	status,2,c
 13466  0042A4  D016               	goto	l10283
 13467                           
 13468                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 13469  0042A6  0E00               	movlw	0
 13470  0042A8  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 13471  0042AA  0E01               	movlw	1
 13472  0042AC  ECFB  F024         	call	_posicao_cursor_lcd
 13473                           
 13474                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 13475  0042B0  0E02               	movlw	low STR_1
 13476  0042B2  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13477  0042B4  0E62               	movlw	high STR_1
 13478  0042B6  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13479  0042B8  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13480                           
 13481                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 13482  0042BC  0E00               	movlw	0
 13483  0042BE  6E1D               	movwf	posicao_cursor_lcd@coluna^0,c
 13484  0042C0  0E02               	movlw	2
 13485  0042C2  ECFB  F024         	call	_posicao_cursor_lcd
 13486                           
 13487                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 13488  0042C6  0EB2               	movlw	low STR_2
 13489  0042C8  6E1D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 13490  0042CA  0E61               	movlw	high STR_2
 13491  0042CC  6E1E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 13492  0042CE  EC34  F026         	call	_escreve_frase_ram_lcd	;wreg free
 13493  0042D2                     l10283:
 13494                           
 13495                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 13496  0042D2  042C               	decf	sdc_reset@buff^0,w,c
 13497  0042D4  B4D8               	btfsc	status,2,c
 13498  0042D6  0012               	return	
 13499  0042D8  D7C0               	goto	l10261
 13500  0042DA                     __end_of_sdc_reset:
 13501                           	callstack 0
 13502                           
 13503 ;; *************** function _posicao_cursor_lcd *****************
 13504 ;; Defined at:
 13505 ;;		line 271 in file "bibliotecas/display_lcd.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  linha           1    wreg     unsigned char 
 13508 ;;  coluna          1   28[COMRAM] unsigned char 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  linha           1   29[COMRAM] unsigned char 
 13511 ;;  endereco        1   30[COMRAM] unsigned char 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  1    wreg      void 
 13514 ;; Registers used:
 13515 ;;		wreg, status,2, status,0, cstack
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13521 ;;      Params:         1       0       0       0       0       0       0       0       0
 13522 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13524 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13525 ;;Total ram usage:        3 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:    5
 13528 ;; This function calls:
 13529 ;;		_endereco_cursor_lcd
 13530 ;; This function is called by:
 13531 ;;		_sdc_reset
 13532 ;;		_sdc_disk_initialize
 13533 ;;		_mensagem_inicial
 13534 ;;		_troca_de_tela
 13535 ;;		_diferenca
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text65
 13540  0049F6                     __ptext65:
 13541                           	callstack 0
 13542  0049F6                     _posicao_cursor_lcd:
 13543                           	callstack 24
 13544                           
 13545                           ;incstack = 0
 13546                           ;posicao_cursor_lcd@linha stored from wreg
 13547  0049F6  6E1E               	movwf	posicao_cursor_lcd@linha^0,c
 13548                           
 13549                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 13550  0049F8  0E11               	movlw	17
 13551  0049FA  601D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 13552  0049FC  0012               	return	
 13553  0049FE  D01B               	goto	l10087
 13554  004A00                     l232:
 13555                           
 13556                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 13557  004A00  C01D  F01F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 13558                           
 13559                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 13560  004A04  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 13561  004A06  EC61  F024         	call	_endereco_cursor_lcd
 13562                           
 13563                           ;display_lcd.c: 284: break;
 13564  004A0A  D022               	goto	l10089
 13565  004A0C                     l10071:
 13566                           
 13567                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 13568  004A0C  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 13569  004A0E  0F40               	addlw	64
 13570  004A10  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 13571                           
 13572                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 13573  004A12  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 13574  004A14  EC61  F024         	call	_endereco_cursor_lcd
 13575                           
 13576                           ;display_lcd.c: 289: break;
 13577  004A18  D01B               	goto	l10089
 13578  004A1A                     l10075:
 13579                           
 13580                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 13581  004A1A  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 13582  004A1C  0F14               	addlw	20
 13583  004A1E  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 13584                           
 13585                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 13586  004A20  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 13587  004A22  EC61  F024         	call	_endereco_cursor_lcd
 13588                           
 13589                           ;display_lcd.c: 294: break;
 13590  004A26  D014               	goto	l10089
 13591  004A28                     l10079:
 13592                           
 13593                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 13594  004A28  501D               	movf	posicao_cursor_lcd@coluna^0,w,c
 13595  004A2A  0F54               	addlw	84
 13596  004A2C  6E1F               	movwf	posicao_cursor_lcd@endereco^0,c
 13597                           
 13598                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 13599  004A2E  501F               	movf	posicao_cursor_lcd@endereco^0,w,c
 13600  004A30  EC61  F024         	call	_endereco_cursor_lcd
 13601                           
 13602                           ;display_lcd.c: 303: break;
 13603                           
 13604                           ;display_lcd.c: 299: break;
 13605  004A34  D00D               	goto	l10089
 13606  004A36                     l10087:
 13607  004A36  501E               	movf	posicao_cursor_lcd@linha^0,w,c
 13608                           
 13609                           ; Switch size 1, requested type "simple"
 13610                           ; Number of cases is 4, Range of values is 1 to 4
 13611                           ; switch strategies available:
 13612                           ; Name         Instructions Cycles
 13613                           ; simple_byte           13     7 (average)
 13614                           ;	Chosen strategy is simple_byte
 13615  004A38  0A01               	xorlw	1	; case 1
 13616  004A3A  B4D8               	btfsc	status,2,c
 13617  004A3C  D7E1               	goto	l232
 13618  004A3E  0A03               	xorlw	3	; case 2
 13619  004A40  B4D8               	btfsc	status,2,c
 13620  004A42  D7E4               	goto	l10071
 13621  004A44  0A01               	xorlw	1	; case 3
 13622  004A46  B4D8               	btfsc	status,2,c
 13623  004A48  D7E8               	goto	l10075
 13624  004A4A  0A07               	xorlw	7	; case 4
 13625  004A4C  B4D8               	btfsc	status,2,c
 13626  004A4E  D7EC               	goto	l10079
 13627  004A50                     l10089:
 13628                           
 13629                           ;display_lcd.c: 306: coluna++;
 13630  004A50  2A1D               	incf	posicao_cursor_lcd@coluna^0,f,c
 13631                           
 13632                           ;display_lcd.c: 307: }
 13633  004A52  0012               	return	
 13634  004A54                     __end_of_posicao_cursor_lcd:
 13635                           	callstack 0
 13636                           
 13637 ;; *************** function _endereco_cursor_lcd *****************
 13638 ;; Defined at:
 13639 ;;		line 218 in file "bibliotecas/display_lcd.c"
 13640 ;; Parameters:    Size  Location     Type
 13641 ;;  endereco        1    wreg     unsigned char 
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;  endereco        1   27[COMRAM] unsigned char 
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      void 
 13646 ;; Registers used:
 13647 ;;		wreg, status,2, status,0, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13653 ;;      Params:         0       0       0       0       0       0       0       0       0
 13654 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13656 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13657 ;;Total ram usage:        1 bytes
 13658 ;; Hardware stack levels used:    1
 13659 ;; Hardware stack levels required when called:    4
 13660 ;; This function calls:
 13661 ;;		_delay
 13662 ;; This function is called by:
 13663 ;;		_posicao_cursor_lcd
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text66
 13668  0048C2                     __ptext66:
 13669                           	callstack 0
 13670  0048C2                     _endereco_cursor_lcd:
 13671                           	callstack 24
 13672                           
 13673                           ;incstack = 0
 13674                           ;endereco_cursor_lcd@endereco stored from wreg
 13675  0048C2  6E1C               	movwf	endereco_cursor_lcd@endereco^0,c
 13676                           
 13677                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 13678  0048C4  9483               	bcf	131,2,c	;volatile
 13679                           
 13680                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 13681  0048C6  9283               	bcf	131,1,c	;volatile
 13682                           
 13683                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 13684  0048C8  9083               	bcf	131,0,c	;volatile
 13685                           
 13686                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 13687  0048CA  8E83               	bsf	131,7,c	;volatile
 13688                           
 13689                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 13690  0048CC  A81C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 13691  0048CE  D002               	goto	l213
 13692  0048D0  8883               	bsf	131,4,c	;volatile
 13693  0048D2  D001               	goto	l9925
 13694  0048D4                     l213:
 13695                           
 13696                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 13697  0048D4  9883               	bcf	131,4,c	;volatile
 13698  0048D6                     l9925:
 13699                           
 13700                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 13701  0048D6  AA1C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 13702  0048D8  D002               	goto	l215
 13703  0048DA  8A83               	bsf	131,5,c	;volatile
 13704  0048DC  D001               	goto	l9929
 13705  0048DE                     l215:
 13706                           
 13707                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 13708  0048DE  9A83               	bcf	131,5,c	;volatile
 13709  0048E0                     l9929:
 13710                           
 13711                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 13712  0048E0  AC1C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 13713  0048E2  D002               	goto	l217
 13714  0048E4  8C83               	bsf	131,6,c	;volatile
 13715  0048E6  D001               	goto	l218
 13716  0048E8                     l217:
 13717                           
 13718                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 13719  0048E8  9C83               	bcf	131,6,c	;volatile
 13720  0048EA                     l218:
 13721                           
 13722                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 13723  0048EA  8083               	bsf	131,0,c	;volatile
 13724                           
 13725                           ;display_lcd.c: 236: delay();
 13726  0048EC  EC4F  F02A         	call	_delay	;wreg free
 13727                           
 13728                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 13729  0048F0  9083               	bcf	131,0,c	;volatile
 13730                           
 13731                           ;display_lcd.c: 238: delay();
 13732  0048F2  EC4F  F02A         	call	_delay	;wreg free
 13733                           
 13734                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 13735  0048F6  A01C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 13736  0048F8  D002               	goto	l219
 13737  0048FA  8883               	bsf	131,4,c	;volatile
 13738  0048FC  D001               	goto	l220
 13739  0048FE                     l219:
 13740                           
 13741                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 13742  0048FE  9883               	bcf	131,4,c	;volatile
 13743  004900                     l220:
 13744                           
 13745                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 13746  004900  A21C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 13747  004902  D002               	goto	l221
 13748  004904  8A83               	bsf	131,5,c	;volatile
 13749  004906  D001               	goto	l222
 13750  004908                     l221:
 13751                           
 13752                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 13753  004908  9A83               	bcf	131,5,c	;volatile
 13754  00490A                     l222:
 13755                           
 13756                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 13757  00490A  A41C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 13758  00490C  D002               	goto	l223
 13759  00490E  8C83               	bsf	131,6,c	;volatile
 13760  004910  D001               	goto	l224
 13761  004912                     l223:
 13762                           
 13763                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 13764  004912  9C83               	bcf	131,6,c	;volatile
 13765  004914                     l224:
 13766                           
 13767                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 13768  004914  A61C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 13769  004916  D002               	goto	l225
 13770  004918  8E83               	bsf	131,7,c	;volatile
 13771  00491A  D001               	goto	l226
 13772  00491C                     l225:
 13773                           
 13774                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 13775  00491C  9E83               	bcf	131,7,c	;volatile
 13776  00491E                     l226:
 13777                           
 13778                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 13779  00491E  8083               	bsf	131,0,c	;volatile
 13780                           
 13781                           ;display_lcd.c: 252: delay();
 13782  004920  EC4F  F02A         	call	_delay	;wreg free
 13783                           
 13784                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 13785  004924  9083               	bcf	131,0,c	;volatile
 13786                           
 13787                           ;display_lcd.c: 254: delay();
 13788  004926  EC4F  F02A         	call	_delay	;wreg free
 13789  00492A  0012               	return		;funcret
 13790  00492C                     __end_of_endereco_cursor_lcd:
 13791                           	callstack 0
 13792                           
 13793 ;; *************** function _escreve_frase_ram_lcd *****************
 13794 ;; Defined at:
 13795 ;;		line 445 in file "bibliotecas/display_lcd.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;  buffer          2   28[COMRAM] PTR unsigned char 
 13798 ;;		 -> STR_29(8), STR_28(9), STR_27(4), STR_26(4), 
 13799 ;;		 -> STR_25(5), STR_24(2), STR_23(5), STR_22(7), 
 13800 ;;		 -> STR_21(7), STR_18(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
 13801 ;;		 -> NULL(0), STR_12(9), STR_11(10), STR_10(10), 
 13802 ;;		 -> STR_9(14), STR_8(21), STR_7(15), rawFix(2), 
 13803 ;;		 -> escreve_inteiro_lcd@texto(7), STR_4(11), STR_3(10), STR_2(16), 
 13804 ;;		 -> STR_1(11), 
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;		None
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13811 ;; Tracked objects:
 13812 ;;		On entry : 0/0
 13813 ;;		On exit  : 0/0
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13816 ;;      Params:         2       0       0       0       0       0       0       0       0
 13817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13819 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13820 ;;Total ram usage:        2 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; Hardware stack levels required when called:    5
 13823 ;; This function calls:
 13824 ;;		_escreve_caractere_lcd
 13825 ;; This function is called by:
 13826 ;;		_sdc_reset
 13827 ;;		_sdc_disk_initialize
 13828 ;;		_escreve_inteiro_lcd
 13829 ;;		_mensagem_inicial
 13830 ;;		_troca_de_tela
 13831 ;; This function uses a non-reentrant model
 13832 ;;
 13833                           
 13834                           	psect	text67
 13835  004C68                     __ptext67:
 13836                           	callstack 0
 13837  004C68                     _escreve_frase_ram_lcd:
 13838                           	callstack 24
 13839                           
 13840                           ;display_lcd.c: 447: while(*buffer)
 13841                           
 13842                           ;incstack = 0
 13843  004C68  D014               	goto	l10099
 13844  004C6A                     l10095:
 13845                           
 13846                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 13847  004C6A  C01D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13848  004C6E  C01E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13849  004C72  6AF8               	clrf	tblptru,c
 13850  004C74  0E07               	movlw	(high __ramtop+-1)
 13851  004C76  64F7               	cpfsgt	tblptrh,c
 13852  004C78  D003               	bra	u11197
 13853  004C7A  0008               	tblrd		*
 13854  004C7C  50F5               	movf	tablat,w,c
 13855  004C7E  D005               	bra	u11190
 13856  004C80                     u11197:
 13857  004C80  CFF6 FFE1          	movff	tblptrl,fsr1l
 13858  004C84  CFF7 FFE2          	movff	tblptrh,fsr1h
 13859  004C88  50E7               	movf	indf1,w,c
 13860  004C8A                     u11190:
 13861  004C8A  ECB9  F023         	call	_escreve_caractere_lcd
 13862                           
 13863                           ;display_lcd.c: 450: buffer++;
 13864  004C8E  4A1D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 13865  004C90  2A1E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 13866  004C92                     l10099:
 13867  004C92  C01D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13868  004C96  C01E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13869  004C9A  6AF8               	clrf	tblptru,c
 13870  004C9C  0E07               	movlw	(high __ramtop+-1)
 13871  004C9E  64F7               	cpfsgt	tblptrh,c
 13872  004CA0  D003               	bra	u11207
 13873  004CA2  0008               	tblrd		*
 13874  004CA4  50F5               	movf	tablat,w,c
 13875  004CA6  D005               	bra	u11200
 13876  004CA8                     u11207:
 13877  004CA8  CFF6 FFE1          	movff	tblptrl,fsr1l
 13878  004CAC  CFF7 FFE2          	movff	tblptrh,fsr1h
 13879  004CB0  50E7               	movf	indf1,w,c
 13880  004CB2                     u11200:
 13881  004CB2  0900               	iorlw	0
 13882  004CB4  B4D8               	btfsc	status,2,c
 13883  004CB6  0012               	return	
 13884  004CB8  D7D8               	goto	l10095
 13885  004CBA                     __end_of_escreve_frase_ram_lcd:
 13886                           	callstack 0
 13887                           
 13888 ;; *************** function _escreve_caractere_lcd *****************
 13889 ;; Defined at:
 13890 ;;		line 323 in file "bibliotecas/display_lcd.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  data            1    wreg     unsigned char 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  data            1   27[COMRAM] unsigned char 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13904 ;;      Params:         0       0       0       0       0       0       0       0       0
 13905 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13907 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13908 ;;Total ram usage:        1 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:    4
 13911 ;; This function calls:
 13912 ;;		_delay
 13913 ;; This function is called by:
 13914 ;;		_escreve_frase_ram_lcd
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           	psect	text68
 13919  004772                     __ptext68:
 13920                           	callstack 0
 13921  004772                     _escreve_caractere_lcd:
 13922                           	callstack 24
 13923                           
 13924                           ;incstack = 0
 13925                           ;escreve_caractere_lcd@data stored from wreg
 13926  004772  6E1C               	movwf	escreve_caractere_lcd@data^0,c
 13927                           
 13928                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 13929  004774  9483               	bcf	131,2,c	;volatile
 13930                           
 13931                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 13932  004776  8283               	bsf	131,1,c	;volatile
 13933                           
 13934                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 13935  004778  9083               	bcf	131,0,c	;volatile
 13936                           
 13937                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 13938  00477A  A81C               	btfss	escreve_caractere_lcd@data^0,4,c
 13939  00477C  D002               	goto	l242
 13940  00477E  8883               	bsf	131,4,c	;volatile
 13941  004780  D001               	goto	l9957
 13942  004782                     l242:
 13943                           
 13944                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 13945  004782  9883               	bcf	131,4,c	;volatile
 13946  004784                     l9957:
 13947                           
 13948                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 13949  004784  AA1C               	btfss	escreve_caractere_lcd@data^0,5,c
 13950  004786  D002               	goto	l244
 13951  004788  8A83               	bsf	131,5,c	;volatile
 13952  00478A  D001               	goto	l9961
 13953  00478C                     l244:
 13954                           
 13955                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 13956  00478C  9A83               	bcf	131,5,c	;volatile
 13957  00478E                     l9961:
 13958                           
 13959                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 13960  00478E  AC1C               	btfss	escreve_caractere_lcd@data^0,6,c
 13961  004790  D002               	goto	l246
 13962  004792  8C83               	bsf	131,6,c	;volatile
 13963  004794  D001               	goto	l9965
 13964  004796                     l246:
 13965                           
 13966                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 13967  004796  9C83               	bcf	131,6,c	;volatile
 13968  004798                     l9965:
 13969                           
 13970                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 13971  004798  AE1C               	btfss	escreve_caractere_lcd@data^0,7,c
 13972  00479A  D002               	goto	l248
 13973  00479C  8E83               	bsf	131,7,c	;volatile
 13974  00479E  D001               	goto	l249
 13975  0047A0                     l248:
 13976                           
 13977                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 13978  0047A0  9E83               	bcf	131,7,c	;volatile
 13979  0047A2                     l249:
 13980                           
 13981                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 13982  0047A2  8083               	bsf	131,0,c	;volatile
 13983                           
 13984                           ;display_lcd.c: 342: delay();
 13985  0047A4  EC4F  F02A         	call	_delay	;wreg free
 13986                           
 13987                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 13988  0047A8  9083               	bcf	131,0,c	;volatile
 13989                           
 13990                           ;display_lcd.c: 344: delay();
 13991  0047AA  EC4F  F02A         	call	_delay	;wreg free
 13992                           
 13993                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 13994  0047AE  A01C               	btfss	escreve_caractere_lcd@data^0,0,c
 13995  0047B0  D002               	goto	l250
 13996  0047B2  8883               	bsf	131,4,c	;volatile
 13997  0047B4  D001               	goto	l251
 13998  0047B6                     l250:
 13999                           
 14000                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 14001  0047B6  9883               	bcf	131,4,c	;volatile
 14002  0047B8                     l251:
 14003                           
 14004                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 14005  0047B8  A21C               	btfss	escreve_caractere_lcd@data^0,1,c
 14006  0047BA  D002               	goto	l252
 14007  0047BC  8A83               	bsf	131,5,c	;volatile
 14008  0047BE  D001               	goto	l253
 14009  0047C0                     l252:
 14010                           
 14011                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 14012  0047C0  9A83               	bcf	131,5,c	;volatile
 14013  0047C2                     l253:
 14014                           
 14015                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 14016  0047C2  A41C               	btfss	escreve_caractere_lcd@data^0,2,c
 14017  0047C4  D002               	goto	l254
 14018  0047C6  8C83               	bsf	131,6,c	;volatile
 14019  0047C8  D001               	goto	l255
 14020  0047CA                     l254:
 14021                           
 14022                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 14023  0047CA  9C83               	bcf	131,6,c	;volatile
 14024  0047CC                     l255:
 14025                           
 14026                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 14027  0047CC  A61C               	btfss	escreve_caractere_lcd@data^0,3,c
 14028  0047CE  D002               	goto	l256
 14029  0047D0  8E83               	bsf	131,7,c	;volatile
 14030  0047D2  D001               	goto	l257
 14031  0047D4                     l256:
 14032                           
 14033                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 14034  0047D4  9E83               	bcf	131,7,c	;volatile
 14035  0047D6                     l257:
 14036                           
 14037                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 14038  0047D6  8083               	bsf	131,0,c	;volatile
 14039                           
 14040                           ;display_lcd.c: 359: delay();
 14041  0047D8  EC4F  F02A         	call	_delay	;wreg free
 14042                           
 14043                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 14044  0047DC  9083               	bcf	131,0,c	;volatile
 14045                           
 14046                           ;display_lcd.c: 361: delay();
 14047  0047DE  EC4F  F02A         	call	_delay	;wreg free
 14048  0047E2  0012               	return		;funcret
 14049  0047E4                     __end_of_escreve_caractere_lcd:
 14050                           	callstack 0
 14051                           
 14052 ;; *************** function _delay *****************
 14053 ;; Defined at:
 14054 ;;		line 45 in file "bibliotecas/display_lcd.c"
 14055 ;; Parameters:    Size  Location     Type
 14056 ;;		None
 14057 ;; Auto vars:     Size  Location     Type
 14058 ;;  contador_int    1   26[COMRAM] unsigned char 
 14059 ;;  contador_ext    1   25[COMRAM] unsigned char 
 14060 ;; Return value:  Size  Location     Type
 14061 ;;                  1    wreg      void 
 14062 ;; Registers used:
 14063 ;;		wreg, status,2, status,0
 14064 ;; Tracked objects:
 14065 ;;		On entry : 0/0
 14066 ;;		On exit  : 0/0
 14067 ;;		Unchanged: 0/0
 14068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14069 ;;      Params:         0       0       0       0       0       0       0       0       0
 14070 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14072 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14073 ;;Total ram usage:        2 bytes
 14074 ;; Hardware stack levels used:    1
 14075 ;; Hardware stack levels required when called:    3
 14076 ;; This function calls:
 14077 ;;		Nothing
 14078 ;; This function is called by:
 14079 ;;		_init_lcd
 14080 ;;		_escreve_cmd_lcd
 14081 ;;		_endereco_cursor_lcd
 14082 ;;		_escreve_caractere_lcd
 14083 ;; This function uses a non-reentrant model
 14084 ;;
 14085                           
 14086                           	psect	text69
 14087  00549E                     __ptext69:
 14088                           	callstack 0
 14089  00549E                     _delay:
 14090                           	callstack 24
 14091                           
 14092                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 14093                           
 14094                           ;incstack = 0
 14095  00549E  0E00               	movlw	0
 14096  0054A0  6E1A               	movwf	delay@contador_ext^0,c
 14097  0054A2                     l181:
 14098                           
 14099                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 14100  0054A2  F000               	nop	
 14101                           
 14102                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 14103  0054A4  0E00               	movlw	0
 14104  0054A6  6E1B               	movwf	delay@contador_int^0,c
 14105  0054A8                     l183:
 14106                           
 14107                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 14108  0054A8  F000               	nop	
 14109  0054AA  2A1B               	incf	delay@contador_int^0,f,c
 14110  0054AC  0E31               	movlw	49
 14111  0054AE  641B               	cpfsgt	delay@contador_int^0,c
 14112  0054B0  D7FB               	goto	l183
 14113  0054B2  2A1A               	incf	delay@contador_ext^0,f,c
 14114  0054B4  0E63               	movlw	99
 14115  0054B6  641A               	cpfsgt	delay@contador_ext^0,c
 14116  0054B8  D7F4               	goto	l181
 14117  0054BA  0012               	return	
 14118  0054BC                     __end_of_delay:
 14119                           	callstack 0
 14120                           
 14121 ;; *************** function _check_fs *****************
 14122 ;; Defined at:
 14123 ;;		line 624 in file "bibliotecas/tff.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  sect            4   23[BANK0 ] unsigned long 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  fs              2   27[BANK0 ] PTR struct _FATFS
 14128 ;;		 -> NULL(0), fs(544), 
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      unsigned char 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14133 ;; Tracked objects:
 14134 ;;		On entry : 3F/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14138 ;;      Params:         0       4       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14140 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         2       6       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        8 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:    8
 14145 ;; This function calls:
 14146 ;;		_disk_read
 14147 ;;		_memcmp
 14148 ;; This function is called by:
 14149 ;;		_auto_mount
 14150 ;; This function uses a non-reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text70
 14154  0044FA                     __ptext70:
 14155                           	callstack 0
 14156  0044FA                     _check_fs:
 14157                           	callstack 16
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;tff.c: 628: FATFS *fs = FatFs;
 14161                           
 14162                           ;incstack = 0
 14163  0044FA  C034  F07B         	movff	_FatFs,check_fs@fs
 14164  0044FE  C035  F07C         	movff	_FatFs+1,check_fs@fs+1
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 14168  004502  0E20               	movlw	32
 14169  004504  257B               	addwf	check_fs@fs& (0+255),w,b
 14170  004506  6F6C               	movwf	disk_read@buff& (0+255),b
 14171  004508  0E00               	movlw	0
 14172  00450A  217C               	addwfc	(check_fs@fs+1)& (0+255),w,b
 14173  00450C  6F6D               	movwf	(disk_read@buff+1)& (0+255),b
 14174  00450E  C077  F06E         	movff	check_fs@sect,disk_read@sector
 14175  004512  C078  F06F         	movff	check_fs@sect+1,disk_read@sector+1
 14176  004516  C079  F070         	movff	check_fs@sect+2,disk_read@sector+2
 14177  00451A  C07A  F071         	movff	check_fs@sect+3,disk_read@sector+3
 14178  00451E  0E01               	movlw	1
 14179  004520  6F72               	movwf	disk_read@count& (0+255),b
 14180  004522  0E00               	movlw	0
 14181  004524  ECF2  F023         	call	_disk_read
 14182  004528  0900               	iorlw	0
 14183  00452A  B4D8               	btfsc	status,2,c
 14184  00452C  D002               	goto	l11055
 14185  00452E                     u12730:
 14186  00452E                     l11051:
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;tff.c: 631: return 2;
 14190  00452E  0E02               	movlw	2
 14191  004530  0012               	return	
 14192  004532                     l11055:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 14196  004532  EE22 F01E          	lfsr	2,542
 14197  004536  517B               	movf	check_fs@fs& (0+255),w,b
 14198  004538  26D9               	addwf	fsr2l,f,c
 14199  00453A  517C               	movf	(check_fs@fs+1)& (0+255),w,b
 14200  00453C  22DA               	addwfc	fsr2h,f,c
 14201  00453E  0E55               	movlw	85
 14202  004540  18DE               	xorwf	postinc2,w,c
 14203  004542  E1F5               	bnz	l11051
 14204  004544  0EAA               	movlw	170
 14205  004546  18DE               	xorwf	postinc2,w,c
 14206  004548  A4D8               	btfss	status,2,c
 14207  00454A  D7F1               	goto	u12730
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 14211  00454C  0E56               	movlw	86
 14212  00454E  257B               	addwf	check_fs@fs& (0+255),w,b
 14213  004550  6E1A               	movwf	memcmp@s1^0,c
 14214  004552  0E00               	movlw	0
 14215  004554  217C               	addwfc	(check_fs@fs+1)& (0+255),w,b
 14216  004556  6E1B               	movwf	(memcmp@s1+1)^0,c
 14217  004558  0E76               	movlw	low STR_16
 14218  00455A  6E1C               	movwf	memcmp@s2^0,c
 14219  00455C  0E62               	movlw	high STR_16
 14220  00455E  6E1D               	movwf	(memcmp@s2+1)^0,c
 14221  004560  0E00               	movlw	0
 14222  004562  6E1F               	movwf	(memcmp@n+1)^0,c
 14223  004564  0E03               	movlw	3
 14224  004566  6E1E               	movwf	memcmp@n^0,c
 14225  004568  ECDC  F020         	call	_memcmp	;wreg free
 14226  00456C  501A               	movf	?_memcmp^0,w,c
 14227  00456E  101B               	iorwf	(?_memcmp+1)^0,w,c
 14228  004570  A4D8               	btfss	status,2,c
 14229  004572  D002               	goto	l11067
 14230                           
 14231                           ;tff.c: 636: return 0;
 14232  004574  0E00               	movlw	0
 14233  004576  0012               	return	
 14234  004578                     l11067:
 14235                           
 14236                           ;tff.c: 641: return 1;
 14237  004578  0E01               	movlw	1
 14238  00457A  0012               	return		;funcret
 14239  00457C                     __end_of_check_fs:
 14240                           	callstack 0
 14241                           
 14242 ;; *************** function _memcmp *****************
 14243 ;; Defined at:
 14244 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;  s1              2   25[COMRAM] PTR const void 
 14247 ;;		 -> fs.win(512), NULL(0), fs(544), 
 14248 ;;  s2              2   27[COMRAM] PTR const void 
 14249 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_16(4), 
 14250 ;;  n               2   29[COMRAM] unsigned int 
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  2   25[COMRAM] int 
 14255 ;; Registers used:
 14256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14257 ;; Tracked objects:
 14258 ;;		On entry : 3F/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14262 ;;      Params:         6       0       0       0       0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14264 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14265 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14266 ;;Total ram usage:        8 bytes
 14267 ;; Hardware stack levels used:    1
 14268 ;; Hardware stack levels required when called:    3
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_trace_path
 14273 ;;		_check_fs
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           	psect	text71
 14278  0041B8                     __ptext71:
 14279                           	callstack 0
 14280  0041B8                     _memcmp:
 14281                           	callstack 21
 14282                           
 14283                           ; BSR set to: 0
 14284                           
 14285                           ;incstack = 0
 14286  0041B8  D03B               	goto	l10673
 14287  0041BA                     l10665:
 14288  0041BA  C01A  FFD9         	movff	memcmp@s1,fsr2l
 14289  0041BE  C01B  FFDA         	movff	memcmp@s1+1,fsr2h
 14290  0041C2  50DF               	movf	indf2,w,c
 14291  0041C4  6E20               	movwf	??_memcmp^0,c
 14292  0041C6  C01C  FFF6         	movff	memcmp@s2,tblptrl
 14293  0041CA  C01D  FFF7         	movff	memcmp@s2+1,tblptrh
 14294  0041CE  6AF8               	clrf	tblptru,c
 14295  0041D0  0E07               	movlw	(high __ramtop+-1)
 14296  0041D2  64F7               	cpfsgt	tblptrh,c
 14297  0041D4  D003               	bra	u12017
 14298  0041D6  0008               	tblrd		*
 14299  0041D8  50F5               	movf	tablat,w,c
 14300  0041DA  D005               	bra	u12010
 14301  0041DC                     u12017:
 14302  0041DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 14303  0041E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 14304  0041E4  50E7               	movf	indf1,w,c
 14305  0041E6                     u12010:
 14306  0041E6  1820               	xorwf	??_memcmp^0,w,c
 14307  0041E8  B4D8               	btfsc	status,2,c
 14308  0041EA  D01E               	goto	l10671
 14309  0041EC  C01A  FFD9         	movff	memcmp@s1,fsr2l
 14310  0041F0  C01B  FFDA         	movff	memcmp@s1+1,fsr2h
 14311  0041F4  50DF               	movf	indf2,w,c
 14312  0041F6  6E20               	movwf	??_memcmp^0,c
 14313  0041F8  C01C  FFF6         	movff	memcmp@s2,tblptrl
 14314  0041FC  C01D  FFF7         	movff	memcmp@s2+1,tblptrh
 14315  004200  6AF8               	clrf	tblptru,c
 14316  004202  0E07               	movlw	(high __ramtop+-1)
 14317  004204  64F7               	cpfsgt	tblptrh,c
 14318  004206  D003               	bra	u12037
 14319  004208  0008               	tblrd		*
 14320  00420A  50F5               	movf	tablat,w,c
 14321  00420C  D005               	bra	u12030
 14322  00420E                     u12037:
 14323  00420E  CFF6 FFE1          	movff	tblptrl,fsr1l
 14324  004212  CFF7 FFE2          	movff	tblptrh,fsr1h
 14325  004216  50E7               	movf	indf1,w,c
 14326  004218                     u12030:
 14327  004218  6E21               	movwf	(??_memcmp+1)^0,c
 14328  00421A  5021               	movf	(??_memcmp+1)^0,w,c
 14329  00421C  5C20               	subwf	??_memcmp^0,w,c
 14330  00421E  6E1A               	movwf	?_memcmp^0,c
 14331  004220  6A1B               	clrf	(?_memcmp+1)^0,c
 14332  004222  A0D8               	btfss	status,0,c
 14333  004224  061B               	decf	(?_memcmp+1)^0,f,c
 14334  004226  0012               	return	
 14335  004228                     l10671:
 14336  004228  4A1A               	infsnz	memcmp@s1^0,f,c
 14337  00422A  2A1B               	incf	(memcmp@s1+1)^0,f,c
 14338  00422C  4A1C               	infsnz	memcmp@s2^0,f,c
 14339  00422E  2A1D               	incf	(memcmp@s2+1)^0,f,c
 14340  004230                     l10673:
 14341  004230  061E               	decf	memcmp@n^0,f,c
 14342  004232  A0D8               	btfss	status,0,c
 14343  004234  061F               	decf	(memcmp@n+1)^0,f,c
 14344  004236  281E               	incf	memcmp@n^0,w,c
 14345  004238  E1C0               	bnz	l10665
 14346  00423A  281F               	incf	(memcmp@n+1)^0,w,c
 14347  00423C  A4D8               	btfss	status,2,c
 14348  00423E  D7BD               	goto	l10665
 14349  004240  0E00               	movlw	0
 14350  004242  6E1B               	movwf	(?_memcmp+1)^0,c
 14351  004244  0E00               	movlw	0
 14352  004246  6E1A               	movwf	?_memcmp^0,c
 14353  004248  0012               	return		;funcret
 14354  00424A                     __end_of_memcmp:
 14355                           	callstack 0
 14356                           
 14357 ;; *************** function ___lmul *****************
 14358 ;; Defined at:
 14359 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  multiplier      4   25[COMRAM] unsigned long 
 14362 ;;  multiplicand    4   29[COMRAM] unsigned long 
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;  product         4   33[COMRAM] unsigned long 
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  4   25[COMRAM] unsigned long 
 14367 ;; Registers used:
 14368 ;;		wreg, status,2, status,0
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14374 ;;      Params:         8       0       0       0       0       0       0       0       0
 14375 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14377 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14378 ;;Total ram usage:       12 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:    3
 14381 ;; This function calls:
 14382 ;;		Nothing
 14383 ;; This function is called by:
 14384 ;;		_clust2sect
 14385 ;;		_auto_mount
 14386 ;;		_atol
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text72
 14391  004BBC                     __ptext72:
 14392                           	callstack 0
 14393  004BBC                     ___lmul:
 14394                           	callstack 19
 14395                           
 14396                           ;incstack = 0
 14397  004BBC  0E00               	movlw	0
 14398  004BBE  6E22               	movwf	___lmul@product^0,c
 14399  004BC0  0E00               	movlw	0
 14400  004BC2  6E23               	movwf	(___lmul@product+1)^0,c
 14401  004BC4  0E00               	movlw	0
 14402  004BC6  6E24               	movwf	(___lmul@product+2)^0,c
 14403  004BC8  0E00               	movlw	0
 14404  004BCA  6E25               	movwf	(___lmul@product+3)^0,c
 14405  004BCC                     l10213:
 14406  004BCC  A01A               	btfss	___lmul@multiplier^0,0,c
 14407  004BCE  D008               	goto	l10217
 14408  004BD0  501E               	movf	___lmul@multiplicand^0,w,c
 14409  004BD2  2622               	addwf	___lmul@product^0,f,c
 14410  004BD4  501F               	movf	(___lmul@multiplicand+1)^0,w,c
 14411  004BD6  2223               	addwfc	(___lmul@product+1)^0,f,c
 14412  004BD8  5020               	movf	(___lmul@multiplicand+2)^0,w,c
 14413  004BDA  2224               	addwfc	(___lmul@product+2)^0,f,c
 14414  004BDC  5021               	movf	(___lmul@multiplicand+3)^0,w,c
 14415  004BDE  2225               	addwfc	(___lmul@product+3)^0,f,c
 14416  004BE0                     l10217:
 14417  004BE0  90D8               	bcf	status,0,c
 14418  004BE2  361E               	rlcf	___lmul@multiplicand^0,f,c
 14419  004BE4  361F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14420  004BE6  3620               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14421  004BE8  3621               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14422  004BEA  90D8               	bcf	status,0,c
 14423  004BEC  321D               	rrcf	(___lmul@multiplier+3)^0,f,c
 14424  004BEE  321C               	rrcf	(___lmul@multiplier+2)^0,f,c
 14425  004BF0  321B               	rrcf	(___lmul@multiplier+1)^0,f,c
 14426  004BF2  321A               	rrcf	___lmul@multiplier^0,f,c
 14427  004BF4  501A               	movf	___lmul@multiplier^0,w,c
 14428  004BF6  101B               	iorwf	(___lmul@multiplier+1)^0,w,c
 14429  004BF8  101C               	iorwf	(___lmul@multiplier+2)^0,w,c
 14430  004BFA  101D               	iorwf	(___lmul@multiplier+3)^0,w,c
 14431  004BFC  A4D8               	btfss	status,2,c
 14432  004BFE  D7E6               	goto	l10213
 14433  004C00  C022  F01A         	movff	___lmul@product,?___lmul
 14434  004C04  C023  F01B         	movff	___lmul@product+1,?___lmul+1
 14435  004C08  C024  F01C         	movff	___lmul@product+2,?___lmul+2
 14436  004C0C  C025  F01D         	movff	___lmul@product+3,?___lmul+3
 14437  004C10  0012               	return		;funcret
 14438  004C12                     __end_of___lmul:
 14439                           	callstack 0
 14440                           
 14441 ;; *************** function _f_mount *****************
 14442 ;; Defined at:
 14443 ;;		line 794 in file "bibliotecas/tff.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;  drv             1    wreg     unsigned char 
 14446 ;;  fs              2   25[COMRAM] PTR struct _FATFS
 14447 ;;		 -> fs(544), 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;  drv             1   27[COMRAM] unsigned char 
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  1    wreg      enum E3237
 14452 ;; Registers used:
 14453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/1
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14459 ;;      Params:         2       0       0       0       0       0       0       0       0
 14460 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14462 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14463 ;;Total ram usage:        3 bytes
 14464 ;; Hardware stack levels used:    1
 14465 ;; Hardware stack levels required when called:    3
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_escrita_sdcard
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text73
 14474  004E92                     __ptext73:
 14475                           	callstack 0
 14476  004E92                     _f_mount:
 14477                           	callstack 23
 14478                           
 14479                           ;incstack = 0
 14480                           ;f_mount@drv stored from wreg
 14481  004E92  6E1C               	movwf	f_mount@drv^0,c
 14482                           
 14483                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 14484  004E94  501C               	movf	f_mount@drv^0,w,c
 14485  004E96  B4D8               	btfsc	status,2,c
 14486  004E98  D002               	goto	l11725
 14487  004E9A  0E05               	movlw	5
 14488  004E9C  0012               	return	
 14489  004E9E                     l11725:
 14490                           
 14491                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 14492  004E9E  5034               	movf	_FatFs^0,w,c
 14493  004EA0  1035               	iorwf	(_FatFs+1)^0,w,c
 14494  004EA2  B4D8               	btfsc	status,2,c
 14495  004EA4  D008               	goto	l11729
 14496  004EA6  EE20 F01C          	lfsr	2,28
 14497  004EAA  5034               	movf	_FatFs^0,w,c
 14498  004EAC  26D9               	addwf	fsr2l,f,c
 14499  004EAE  5035               	movf	(_FatFs+1)^0,w,c
 14500  004EB0  22DA               	addwfc	fsr2h,f,c
 14501  004EB2  0E00               	movlw	0
 14502  004EB4  6EDF               	movwf	indf2,c
 14503  004EB6                     l11729:
 14504                           
 14505                           ;tff.c: 803: FatFs = fs;
 14506  004EB6  C01A  F034         	movff	f_mount@fs,_FatFs
 14507  004EBA  C01B  F035         	movff	f_mount@fs+1,_FatFs+1
 14508                           
 14509                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 14510  004EBE  501A               	movf	f_mount@fs^0,w,c
 14511  004EC0  101B               	iorwf	(f_mount@fs+1)^0,w,c
 14512  004EC2  B4D8               	btfsc	status,2,c
 14513  004EC4  D008               	goto	l11735
 14514  004EC6  EE20 F01C          	lfsr	2,28
 14515  004ECA  501A               	movf	f_mount@fs^0,w,c
 14516  004ECC  26D9               	addwf	fsr2l,f,c
 14517  004ECE  501B               	movf	(f_mount@fs+1)^0,w,c
 14518  004ED0  22DA               	addwfc	fsr2h,f,c
 14519  004ED2  0E00               	movlw	0
 14520  004ED4  6EDF               	movwf	indf2,c
 14521  004ED6                     l11735:
 14522                           
 14523                           ;tff.c: 806: return FR_OK;
 14524  004ED6  0E00               	movlw	0
 14525  004ED8  0012               	return		;funcret
 14526  004EDA                     __end_of_f_mount:
 14527                           	callstack 0
 14528                           
 14529 ;; *************** function _f_lseek *****************
 14530 ;; Defined at:
 14531 ;;		line 1140 in file "bibliotecas/tff.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  fp              2   82[BANK0 ] PTR struct _FIL
 14534 ;;		 -> fil(28), 
 14535 ;;  ofs             4   84[BANK0 ] unsigned long 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;  csize           4  109[BANK0 ] unsigned long 
 14538 ;;  ifptr           4  105[BANK0 ] unsigned long 
 14539 ;;  clust           2  113[BANK0 ] unsigned short 
 14540 ;;  res             1  104[BANK0 ] enum E155
 14541 ;; Return value:  Size  Location     Type
 14542 ;;                  1    wreg      enum E3237
 14543 ;; Registers used:
 14544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14545 ;; Tracked objects:
 14546 ;;		On entry : 3F/0
 14547 ;;		On exit  : 3F/0
 14548 ;;		Unchanged: 0/0
 14549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14550 ;;      Params:         0       6       0       0       0       0       0       0       0
 14551 ;;      Locals:         0      11       0       0       0       0       0       0       0
 14552 ;;      Temps:          0      16       0       0       0       0       0       0       0
 14553 ;;      Totals:         0      33       0       0       0       0       0       0       0
 14554 ;;Total ram usage:       33 bytes
 14555 ;; Hardware stack levels used:    1
 14556 ;; Hardware stack levels required when called:   11
 14557 ;; This function calls:
 14558 ;;		___lldiv
 14559 ;;		_create_chain
 14560 ;;		_get_cluster
 14561 ;;		_validate
 14562 ;; This function is called by:
 14563 ;;		_escrita_sdcard
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text74
 14568  000AEA                     __ptext74:
 14569                           	callstack 0
 14570  000AEA                     _f_lseek:
 14571                           	callstack 15
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 14575                           
 14576                           ;incstack = 0
 14577  000AEA  EE20 F004          	lfsr	2,4
 14578  000AEE  51B2               	movf	f_lseek@fp& (0+255),w,b
 14579  000AF0  26D9               	addwf	fsr2l,f,c
 14580  000AF2  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14581  000AF4  22DA               	addwfc	fsr2h,f,c
 14582  000AF6  CFDE F020          	movff	postinc2,validate@fs
 14583  000AFA  CFDD F021          	movff	postdec2,validate@fs+1
 14584  000AFE  C0B2  FFD9         	movff	f_lseek@fp,fsr2l
 14585  000B02  C0B3  FFDA         	movff	f_lseek@fp+1,fsr2h
 14586  000B06  CFDE F022          	movff	postinc2,validate@id
 14587  000B0A  CFDD F023          	movff	postdec2,validate@id+1
 14588  000B0E  EC6D  F027         	call	_validate	;wreg free
 14589  000B12  0100               	movlb	0	; () banked
 14590  000B14  6FC8               	movwf	f_lseek@res& (0+255),b
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;tff.c: 1151: if (res != FR_OK) return res;
 14594  000B16  51C8               	movf	f_lseek@res& (0+255),w,b
 14595  000B18  A4D8               	btfss	status,2,c
 14596  000B1A  0012               	return	
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 14600  000B1C  EE20 F002          	lfsr	2,2
 14601  000B20  51B2               	movf	f_lseek@fp& (0+255),w,b
 14602  000B22  26D9               	addwf	fsr2l,f,c
 14603  000B24  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14604  000B26  22DA               	addwfc	fsr2h,f,c
 14605  000B28  BEDF               	btfsc	indf2,7,c
 14606  000B2A  0012               	return	
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 14610  000B2C  EE20 F00A          	lfsr	2,10
 14611  000B30  51B2               	movf	f_lseek@fp& (0+255),w,b
 14612  000B32  26D9               	addwf	fsr2l,f,c
 14613  000B34  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14614  000B36  22DA               	addwfc	fsr2h,f,c
 14615  000B38  51B4               	movf	f_lseek@ofs& (0+255),w,b
 14616  000B3A  5CDE               	subwf	postinc2,w,c
 14617  000B3C  51B5               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14618  000B3E  58DE               	subwfb	postinc2,w,c
 14619  000B40  51B6               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14620  000B42  58DE               	subwfb	postinc2,w,c
 14621  000B44  51B7               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14622  000B46  58DE               	subwfb	postinc2,w,c
 14623  000B48  B0D8               	btfsc	status,0,c
 14624  000B4A  D016               	goto	l1092
 14625                           
 14626                           ; BSR set to: 0
 14627  000B4C  EE20 F002          	lfsr	2,2
 14628  000B50  51B2               	movf	f_lseek@fp& (0+255),w,b
 14629  000B52  26D9               	addwf	fsr2l,f,c
 14630  000B54  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14631  000B56  22DA               	addwfc	fsr2h,f,c
 14632  000B58  B2DF               	btfsc	indf2,1,c
 14633  000B5A  D00E               	goto	l1092
 14634                           
 14635                           ; BSR set to: 0
 14636  000B5C  EE20 F00A          	lfsr	2,10
 14637  000B60  51B2               	movf	f_lseek@fp& (0+255),w,b
 14638  000B62  26D9               	addwf	fsr2l,f,c
 14639  000B64  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14640  000B66  22DA               	addwfc	fsr2h,f,c
 14641  000B68  CFDE F0B4          	movff	postinc2,f_lseek@ofs
 14642  000B6C  CFDE F0B5          	movff	postinc2,f_lseek@ofs+1
 14643  000B70  CFDE F0B6          	movff	postinc2,f_lseek@ofs+2
 14644  000B74  CFDE F0B7          	movff	postinc2,f_lseek@ofs+3
 14645  000B78                     l1092:
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;tff.c: 1159: ifptr = fp->fptr;
 14649  000B78  EE20 F006          	lfsr	2,6
 14650  000B7C  51B2               	movf	f_lseek@fp& (0+255),w,b
 14651  000B7E  26D9               	addwf	fsr2l,f,c
 14652  000B80  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14653  000B82  22DA               	addwfc	fsr2h,f,c
 14654  000B84  CFDE F0C9          	movff	postinc2,f_lseek@ifptr
 14655  000B88  CFDE F0CA          	movff	postinc2,f_lseek@ifptr+1
 14656  000B8C  CFDE F0CB          	movff	postinc2,f_lseek@ifptr+2
 14657  000B90  CFDE F0CC          	movff	postinc2,f_lseek@ifptr+3
 14658                           
 14659                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 14660  000B94  EE20 F006          	lfsr	2,6
 14661  000B98  51B2               	movf	f_lseek@fp& (0+255),w,b
 14662  000B9A  26D9               	addwf	fsr2l,f,c
 14663  000B9C  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14664  000B9E  22DA               	addwfc	fsr2h,f,c
 14665  000BA0  6ADE               	clrf	postinc2,c
 14666  000BA2  6ADE               	clrf	postinc2,c
 14667  000BA4  6ADE               	clrf	postinc2,c
 14668  000BA6  6ADD               	clrf	postdec2,c
 14669  000BA8  EE20 F003          	lfsr	2,3
 14670  000BAC  51B2               	movf	f_lseek@fp& (0+255),w,b
 14671  000BAE  26D9               	addwf	fsr2l,f,c
 14672  000BB0  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14673  000BB2  22DA               	addwfc	fsr2h,f,c
 14674  000BB4  0EFF               	movlw	255
 14675  000BB6  6EDF               	movwf	indf2,c
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;tff.c: 1161: if (ofs > 0) {
 14679  000BB8  51B4               	movf	f_lseek@ofs& (0+255),w,b
 14680  000BBA  11B5               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 14681  000BBC  11B6               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 14682  000BBE  11B7               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 14683  000BC0  B4D8               	btfsc	status,2,c
 14684  000BC2  D19C               	goto	l11965
 14685                           
 14686                           ; BSR set to: 0
 14687                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 14688  000BC4  EE20 F004          	lfsr	2,4
 14689  000BC8  51B2               	movf	f_lseek@fp& (0+255),w,b
 14690  000BCA  26D9               	addwf	fsr2l,f,c
 14691  000BCC  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14692  000BCE  22DA               	addwfc	fsr2h,f,c
 14693  000BD0  EE10 F01D          	lfsr	1,29
 14694  000BD4  50DE               	movf	postinc2,w,c
 14695  000BD6  26E1               	addwf	fsr1l,f,c
 14696  000BD8  50DD               	movf	postdec2,w,c
 14697  000BDA  22E2               	addwfc	fsr1h,f,c
 14698  000BDC  50E7               	movf	indf1,w,c
 14699  000BDE  6FB8               	movwf	??_f_lseek& (0+255),b
 14700  000BE0  C0B8  F0B9         	movff	??_f_lseek,??_f_lseek+1
 14701  000BE4  6BBA               	clrf	(??_f_lseek+2)& (0+255),b
 14702  000BE6  6BBB               	clrf	(??_f_lseek+3)& (0+255),b
 14703  000BE8  6BBC               	clrf	(??_f_lseek+4)& (0+255),b
 14704  000BEA  0E09               	movlw	9
 14705  000BEC                     u14005:
 14706  000BEC  90D8               	bcf	status,0,c
 14707  000BEE  37B9               	rlcf	(??_f_lseek+1)& (0+255),f,b
 14708  000BF0  37BA               	rlcf	(??_f_lseek+2)& (0+255),f,b
 14709  000BF2  37BB               	rlcf	(??_f_lseek+3)& (0+255),f,b
 14710  000BF4  37BC               	rlcf	(??_f_lseek+4)& (0+255),f,b
 14711  000BF6  2EE8               	decfsz	wreg,f,c
 14712  000BF8  D7F9               	goto	u14005
 14713  000BFA  C0B9  F0CD         	movff	??_f_lseek+1,f_lseek@csize
 14714  000BFE  C0BA  F0CE         	movff	??_f_lseek+2,f_lseek@csize+1
 14715  000C02  C0BB  F0CF         	movff	??_f_lseek+3,f_lseek@csize+2
 14716  000C06  C0BC  F0D0         	movff	??_f_lseek+4,f_lseek@csize+3
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 14720  000C0A  51C9               	movf	f_lseek@ifptr& (0+255),w,b
 14721  000C0C  11CA               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 14722  000C0E  11CB               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 14723  000C10  11CC               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 14724  000C12  B4D8               	btfsc	status,2,c
 14725  000C14  D093               	goto	l11923
 14726                           
 14727                           ; BSR set to: 0
 14728  000C16  0EFF               	movlw	255
 14729  000C18  25B4               	addwf	f_lseek@ofs& (0+255),w,b
 14730  000C1A  6E1A               	movwf	___lldiv@dividend^0,c
 14731  000C1C  0EFF               	movlw	255
 14732  000C1E  21B5               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 14733  000C20  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 14734  000C22  0EFF               	movlw	255
 14735  000C24  21B6               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 14736  000C26  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 14737  000C28  0EFF               	movlw	255
 14738  000C2A  21B7               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 14739  000C2C  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 14740  000C2E  C0CD  F01E         	movff	f_lseek@csize,___lldiv@divisor
 14741  000C32  C0CE  F01F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14742  000C36  C0CF  F020         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14743  000C3A  C0D0  F021         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14744  000C3E  ECBE  F022         	call	___lldiv	;wreg free
 14745  000C42  C01A  F0B8         	movff	?___lldiv,??_f_lseek
 14746  000C46  C01B  F0B9         	movff	?___lldiv+1,??_f_lseek+1
 14747  000C4A  C01C  F0BA         	movff	?___lldiv+2,??_f_lseek+2
 14748  000C4E  C01D  F0BB         	movff	?___lldiv+3,??_f_lseek+3
 14749  000C52  0EFF               	movlw	255
 14750  000C54  0100               	movlb	0	; () banked
 14751  000C56  25C9               	addwf	f_lseek@ifptr& (0+255),w,b
 14752  000C58  6E1A               	movwf	___lldiv@dividend^0,c
 14753  000C5A  0EFF               	movlw	255
 14754  000C5C  21CA               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14755  000C5E  6E1B               	movwf	(___lldiv@dividend+1)^0,c
 14756  000C60  0EFF               	movlw	255
 14757  000C62  21CB               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14758  000C64  6E1C               	movwf	(___lldiv@dividend+2)^0,c
 14759  000C66  0EFF               	movlw	255
 14760  000C68  21CC               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14761  000C6A  6E1D               	movwf	(___lldiv@dividend+3)^0,c
 14762  000C6C  C0CD  F01E         	movff	f_lseek@csize,___lldiv@divisor
 14763  000C70  C0CE  F01F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14764  000C74  C0CF  F020         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14765  000C78  C0D0  F021         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14766  000C7C  ECBE  F022         	call	___lldiv	;wreg free
 14767  000C80  501A               	movf	?___lldiv^0,w,c
 14768  000C82  0100               	movlb	0	; () banked
 14769  000C84  5DB8               	subwf	??_f_lseek& (0+255),w,b
 14770  000C86  501B               	movf	(?___lldiv+1)^0,w,c
 14771  000C88  59B9               	subwfb	(??_f_lseek+1)& (0+255),w,b
 14772  000C8A  501C               	movf	(?___lldiv+2)^0,w,c
 14773  000C8C  59BA               	subwfb	(??_f_lseek+2)& (0+255),w,b
 14774  000C8E  501D               	movf	(?___lldiv+3)^0,w,c
 14775  000C90  59BB               	subwfb	(??_f_lseek+3)& (0+255),w,b
 14776  000C92  A0D8               	btfss	status,0,c
 14777  000C94  D053               	goto	l11923
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 14781  000C96  0EFF               	movlw	255
 14782  000C98  25CD               	addwf	f_lseek@csize& (0+255),w,b
 14783  000C9A  6FB8               	movwf	??_f_lseek& (0+255),b
 14784  000C9C  0EFF               	movlw	255
 14785  000C9E  21CE               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 14786  000CA0  6FB9               	movwf	(??_f_lseek+1)& (0+255),b
 14787  000CA2  0EFF               	movlw	255
 14788  000CA4  21CF               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 14789  000CA6  6FBA               	movwf	(??_f_lseek+2)& (0+255),b
 14790  000CA8  0EFF               	movlw	255
 14791  000CAA  21D0               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 14792  000CAC  6FBB               	movwf	(??_f_lseek+3)& (0+255),b
 14793  000CAE  1DB8               	comf	??_f_lseek& (0+255),w,b
 14794  000CB0  6FBC               	movwf	(??_f_lseek+4)& (0+255),b
 14795  000CB2  1DB9               	comf	(??_f_lseek+1)& (0+255),w,b
 14796  000CB4  6FBD               	movwf	(??_f_lseek+5)& (0+255),b
 14797  000CB6  1DBA               	comf	(??_f_lseek+2)& (0+255),w,b
 14798  000CB8  6FBE               	movwf	(??_f_lseek+6)& (0+255),b
 14799  000CBA  1DBB               	comf	(??_f_lseek+3)& (0+255),w,b
 14800  000CBC  6FBF               	movwf	(??_f_lseek+7)& (0+255),b
 14801  000CBE  0EFF               	movlw	255
 14802  000CC0  25C9               	addwf	f_lseek@ifptr& (0+255),w,b
 14803  000CC2  6FC0               	movwf	(??_f_lseek+8)& (0+255),b
 14804  000CC4  0EFF               	movlw	255
 14805  000CC6  21CA               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14806  000CC8  6FC1               	movwf	(??_f_lseek+9)& (0+255),b
 14807  000CCA  0EFF               	movlw	255
 14808  000CCC  21CB               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14809  000CCE  6FC2               	movwf	(??_f_lseek+10)& (0+255),b
 14810  000CD0  0EFF               	movlw	255
 14811  000CD2  21CC               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14812  000CD4  6FC3               	movwf	(??_f_lseek+11)& (0+255),b
 14813  000CD6  51BC               	movf	(??_f_lseek+4)& (0+255),w,b
 14814  000CD8  15C0               	andwf	(??_f_lseek+8)& (0+255),w,b
 14815  000CDA  6FC4               	movwf	(??_f_lseek+12)& (0+255),b
 14816  000CDC  51BD               	movf	(??_f_lseek+5)& (0+255),w,b
 14817  000CDE  15C1               	andwf	(??_f_lseek+9)& (0+255),w,b
 14818  000CE0  6FC5               	movwf	(??_f_lseek+13)& (0+255),b
 14819  000CE2  51BE               	movf	(??_f_lseek+6)& (0+255),w,b
 14820  000CE4  15C2               	andwf	(??_f_lseek+10)& (0+255),w,b
 14821  000CE6  6FC6               	movwf	(??_f_lseek+14)& (0+255),b
 14822  000CE8  51BF               	movf	(??_f_lseek+7)& (0+255),w,b
 14823  000CEA  15C3               	andwf	(??_f_lseek+11)& (0+255),w,b
 14824  000CEC  6FC7               	movwf	(??_f_lseek+15)& (0+255),b
 14825  000CEE  EE20 F006          	lfsr	2,6
 14826  000CF2  51B2               	movf	f_lseek@fp& (0+255),w,b
 14827  000CF4  26D9               	addwf	fsr2l,f,c
 14828  000CF6  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14829  000CF8  22DA               	addwfc	fsr2h,f,c
 14830  000CFA  C0C4  FFDE         	movff	??_f_lseek+12,postinc2
 14831  000CFE  C0C5  FFDE         	movff	??_f_lseek+13,postinc2
 14832  000D02  C0C6  FFDE         	movff	??_f_lseek+14,postinc2
 14833  000D06  C0C7  FFDE         	movff	??_f_lseek+15,postinc2
 14834                           
 14835                           ;tff.c: 1166: ofs -= fp->fptr;
 14836  000D0A  EE20 F006          	lfsr	2,6
 14837  000D0E  51B2               	movf	f_lseek@fp& (0+255),w,b
 14838  000D10  26D9               	addwf	fsr2l,f,c
 14839  000D12  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14840  000D14  22DA               	addwfc	fsr2h,f,c
 14841  000D16  50DE               	movf	postinc2,w,c
 14842  000D18  5FB4               	subwf	f_lseek@ofs& (0+255),f,b
 14843  000D1A  50DE               	movf	postinc2,w,c
 14844  000D1C  5BB5               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14845  000D1E  50DE               	movf	postinc2,w,c
 14846  000D20  5BB6               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14847  000D22  50DD               	movf	postdec2,w,c
 14848  000D24  5BB7               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14849                           
 14850                           ;tff.c: 1167: clust = fp->curr_clust;
 14851  000D26  EE20 F010          	lfsr	2,16
 14852  000D2A  51B2               	movf	f_lseek@fp& (0+255),w,b
 14853  000D2C  26D9               	addwf	fsr2l,f,c
 14854  000D2E  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14855  000D30  22DA               	addwfc	fsr2h,f,c
 14856  000D32  CFDE F0D1          	movff	postinc2,f_lseek@clust
 14857  000D36  CFDD F0D2          	movff	postdec2,f_lseek@clust+1
 14858                           
 14859                           ;tff.c: 1168: } else {
 14860  000D3A  D030               	goto	l11935
 14861  000D3C                     l11923:
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;tff.c: 1169: clust = fp->org_clust;
 14865  000D3C  EE20 F00E          	lfsr	2,14
 14866  000D40  51B2               	movf	f_lseek@fp& (0+255),w,b
 14867  000D42  26D9               	addwf	fsr2l,f,c
 14868  000D44  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14869  000D46  22DA               	addwfc	fsr2h,f,c
 14870  000D48  CFDE F0D1          	movff	postinc2,f_lseek@clust
 14871  000D4C  CFDD F0D2          	movff	postdec2,f_lseek@clust+1
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;tff.c: 1171: if (clust == 0) {
 14875  000D50  51D1               	movf	f_lseek@clust& (0+255),w,b
 14876  000D52  11D2               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14877  000D54  A4D8               	btfss	status,2,c
 14878  000D56  D018               	goto	l1096
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;tff.c: 1172: clust = create_chain(0);
 14882  000D58  0E00               	movlw	0
 14883  000D5A  6FA5               	movwf	(create_chain@clust+1)& (0+255),b
 14884  000D5C  0E00               	movlw	0
 14885  000D5E  6FA4               	movwf	create_chain@clust& (0+255),b
 14886  000D60  EC6F  F016         	call	_create_chain	;wreg free
 14887  000D64  C0A4  F0D1         	movff	?_create_chain,f_lseek@clust
 14888  000D68  C0A5  F0D2         	movff	?_create_chain+1,f_lseek@clust+1
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 14892  000D6C  05D1               	decf	f_lseek@clust& (0+255),w,b
 14893  000D6E  11D2               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14894  000D70  B4D8               	btfsc	status,2,c
 14895  000D72  D0F7               	goto	l11973
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;tff.c: 1174: fp->org_clust = clust;
 14899  000D74  EE20 F00E          	lfsr	2,14
 14900  000D78  51B2               	movf	f_lseek@fp& (0+255),w,b
 14901  000D7A  26D9               	addwf	fsr2l,f,c
 14902  000D7C  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14903  000D7E  22DA               	addwfc	fsr2h,f,c
 14904  000D80  C0D1  FFDE         	movff	f_lseek@clust,postinc2
 14905  000D84  C0D2  FFDD         	movff	f_lseek@clust+1,postdec2
 14906  000D88                     l1096:
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 14910  000D88  EE20 F010          	lfsr	2,16
 14911  000D8C  51B2               	movf	f_lseek@fp& (0+255),w,b
 14912  000D8E  26D9               	addwf	fsr2l,f,c
 14913  000D90  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14914  000D92  22DA               	addwfc	fsr2h,f,c
 14915  000D94  C0D1  FFDE         	movff	f_lseek@clust,postinc2
 14916  000D98  C0D2  FFDD         	movff	f_lseek@clust+1,postdec2
 14917  000D9C                     l11935:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 14921  000D9C  51D1               	movf	f_lseek@clust& (0+255),w,b
 14922  000D9E  11D2               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14923  000DA0  A4D8               	btfss	status,2,c
 14924  000DA2  D062               	goto	l11957
 14925  000DA4  D0AB               	goto	l11965
 14926  000DA6                     l11939:
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;tff.c: 1182: if (fp->flag & 0x02) {
 14930  000DA6  EE20 F002          	lfsr	2,2
 14931  000DAA  51B2               	movf	f_lseek@fp& (0+255),w,b
 14932  000DAC  26D9               	addwf	fsr2l,f,c
 14933  000DAE  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14934  000DB0  22DA               	addwfc	fsr2h,f,c
 14935  000DB2  A2DF               	btfss	indf2,1,c
 14936  000DB4  D017               	goto	l11947
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;tff.c: 1183: clust = create_chain(clust);
 14940  000DB6  C0D1  F0A4         	movff	f_lseek@clust,create_chain@clust
 14941  000DBA  C0D2  F0A5         	movff	f_lseek@clust+1,create_chain@clust+1
 14942  000DBE  EC6F  F016         	call	_create_chain	;wreg free
 14943  000DC2  C0A4  F0D1         	movff	?_create_chain,f_lseek@clust
 14944  000DC6  C0A5  F0D2         	movff	?_create_chain+1,f_lseek@clust+1
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;tff.c: 1184: if (clust == 0) {
 14948  000DCA  51D1               	movf	f_lseek@clust& (0+255),w,b
 14949  000DCC  11D2               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14950  000DCE  A4D8               	btfss	status,2,c
 14951  000DD0  D013               	goto	l11949
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;tff.c: 1185: ofs = csize; break;
 14955  000DD2  C0CD  F0B4         	movff	f_lseek@csize,f_lseek@ofs
 14956  000DD6  C0CE  F0B5         	movff	f_lseek@csize+1,f_lseek@ofs+1
 14957  000DDA  C0CF  F0B6         	movff	f_lseek@csize+2,f_lseek@ofs+2
 14958  000DDE  C0D0  F0B7         	movff	f_lseek@csize+3,f_lseek@ofs+3
 14959  000DE2  D04C               	goto	u14100
 14960  000DE4                     l11947:
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;tff.c: 1189: clust = get_cluster(clust);
 14964  000DE4  C0D1  F02E         	movff	f_lseek@clust,get_cluster@clust
 14965  000DE8  C0D2  F02F         	movff	f_lseek@clust+1,get_cluster@clust+1
 14966  000DEC  ECAC  F013         	call	_get_cluster	;wreg free
 14967  000DF0  C02E  F0D1         	movff	?_get_cluster,f_lseek@clust
 14968  000DF4  C02F  F0D2         	movff	?_get_cluster+1,f_lseek@clust+1
 14969  000DF8                     l11949:
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 14973  000DF8  51D2               	movf	(f_lseek@clust+1)& (0+255),w,b
 14974  000DFA  E104               	bnz	u14080
 14975  000DFC  0E02               	movlw	2
 14976  000DFE  5DD1               	subwf	f_lseek@clust& (0+255),w,b
 14977  000E00  A0D8               	btfss	status,0,c
 14978  000E02  D0AF               	goto	l11973
 14979  000E04                     u14080:
 14980                           
 14981                           ; BSR set to: 0
 14982  000E04  EE20 F004          	lfsr	2,4
 14983  000E08  51B2               	movf	f_lseek@fp& (0+255),w,b
 14984  000E0A  26D9               	addwf	fsr2l,f,c
 14985  000E0C  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 14986  000E0E  22DA               	addwfc	fsr2h,f,c
 14987  000E10  EE10 F016          	lfsr	1,22
 14988  000E14  50DE               	movf	postinc2,w,c
 14989  000E16  26E1               	addwf	fsr1l,f,c
 14990  000E18  50DD               	movf	postdec2,w,c
 14991  000E1A  22E2               	addwfc	fsr1h,f,c
 14992  000E1C  50E6               	movf	postinc1,w,c
 14993  000E1E  5DD1               	subwf	f_lseek@clust& (0+255),w,b
 14994  000E20  50E6               	movf	postinc1,w,c
 14995  000E22  59D2               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 14996  000E24  B0D8               	btfsc	status,0,c
 14997  000E26  D09D               	goto	l11973
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;tff.c: 1191: fp->curr_clust = clust;
 15001  000E28  EE20 F010          	lfsr	2,16
 15002  000E2C  51B2               	movf	f_lseek@fp& (0+255),w,b
 15003  000E2E  26D9               	addwf	fsr2l,f,c
 15004  000E30  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15005  000E32  22DA               	addwfc	fsr2h,f,c
 15006  000E34  C0D1  FFDE         	movff	f_lseek@clust,postinc2
 15007  000E38  C0D2  FFDD         	movff	f_lseek@clust+1,postdec2
 15008                           
 15009                           ;tff.c: 1192: fp->fptr += csize;
 15010  000E3C  EE20 F006          	lfsr	2,6
 15011  000E40  51B2               	movf	f_lseek@fp& (0+255),w,b
 15012  000E42  26D9               	addwf	fsr2l,f,c
 15013  000E44  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15014  000E46  22DA               	addwfc	fsr2h,f,c
 15015  000E48  51CD               	movf	f_lseek@csize& (0+255),w,b
 15016  000E4A  26DE               	addwf	postinc2,f,c
 15017  000E4C  51CE               	movf	(f_lseek@csize+1)& (0+255),w,b
 15018  000E4E  22DE               	addwfc	postinc2,f,c
 15019  000E50  51CF               	movf	(f_lseek@csize+2)& (0+255),w,b
 15020  000E52  22DE               	addwfc	postinc2,f,c
 15021  000E54  51D0               	movf	(f_lseek@csize+3)& (0+255),w,b
 15022  000E56  22DE               	addwfc	postinc2,f,c
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;tff.c: 1193: ofs -= csize;
 15026  000E58  51CD               	movf	f_lseek@csize& (0+255),w,b
 15027  000E5A  5FB4               	subwf	f_lseek@ofs& (0+255),f,b
 15028  000E5C  51CE               	movf	(f_lseek@csize+1)& (0+255),w,b
 15029  000E5E  5BB5               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 15030  000E60  51CF               	movf	(f_lseek@csize+2)& (0+255),w,b
 15031  000E62  5BB6               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 15032  000E64  51D0               	movf	(f_lseek@csize+3)& (0+255),w,b
 15033  000E66  5BB7               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 15034  000E68                     l11957:
 15035                           
 15036                           ; BSR set to: 0
 15037  000E68  51B4               	movf	f_lseek@ofs& (0+255),w,b
 15038  000E6A  5DCD               	subwf	f_lseek@csize& (0+255),w,b
 15039  000E6C  51B5               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15040  000E6E  59CE               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 15041  000E70  51B6               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15042  000E72  59CF               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 15043  000E74  51B7               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15044  000E76  59D0               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 15045  000E78  A0D8               	btfss	status,0,c
 15046  000E7A  D795               	goto	l11939
 15047  000E7C                     u14100:
 15048                           
 15049                           ; BSR set to: 0
 15050                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 15051  000E7C  EE20 F006          	lfsr	2,6
 15052  000E80  51B2               	movf	f_lseek@fp& (0+255),w,b
 15053  000E82  26D9               	addwf	fsr2l,f,c
 15054  000E84  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15055  000E86  22DA               	addwfc	fsr2h,f,c
 15056  000E88  51B4               	movf	f_lseek@ofs& (0+255),w,b
 15057  000E8A  26DE               	addwf	postinc2,f,c
 15058  000E8C  51B5               	movf	(f_lseek@ofs+1)& (0+255),w,b
 15059  000E8E  22DE               	addwfc	postinc2,f,c
 15060  000E90  51B6               	movf	(f_lseek@ofs+2)& (0+255),w,b
 15061  000E92  22DE               	addwfc	postinc2,f,c
 15062  000E94  51B7               	movf	(f_lseek@ofs+3)& (0+255),w,b
 15063  000E96  22DE               	addwfc	postinc2,f,c
 15064                           
 15065                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 15066  000E98  EE20 F003          	lfsr	2,3
 15067  000E9C  51B2               	movf	f_lseek@fp& (0+255),w,b
 15068  000E9E  26D9               	addwf	fsr2l,f,c
 15069  000EA0  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15070  000EA2  22DA               	addwfc	fsr2h,f,c
 15071  000EA4  C0B4  F0B8         	movff	f_lseek@ofs,??_f_lseek
 15072  000EA8  C0B5  F0B9         	movff	f_lseek@ofs+1,??_f_lseek+1
 15073  000EAC  C0B6  F0BA         	movff	f_lseek@ofs+2,??_f_lseek+2
 15074  000EB0  C0B7  F0BB         	movff	f_lseek@ofs+3,??_f_lseek+3
 15075  000EB4  0E0A               	movlw	10
 15076  000EB6  D005               	goto	u14110
 15077  000EB8                     u14115:
 15078  000EB8  90D8               	bcf	status,0,c
 15079  000EBA  33BB               	rrcf	(??_f_lseek+3)& (0+255),f,b
 15080  000EBC  33BA               	rrcf	(??_f_lseek+2)& (0+255),f,b
 15081  000EBE  33B9               	rrcf	(??_f_lseek+1)& (0+255),f,b
 15082  000EC0  33B8               	rrcf	??_f_lseek& (0+255),f,b
 15083  000EC2                     u14110:
 15084  000EC2  2EE8               	decfsz	wreg,f,c
 15085  000EC4  D7F9               	goto	u14115
 15086  000EC6  51B8               	movf	??_f_lseek& (0+255),w,b
 15087  000EC8  6EDF               	movwf	indf2,c
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 15091  000ECA  0EFF               	movlw	255
 15092  000ECC  15B4               	andwf	f_lseek@ofs& (0+255),w,b
 15093  000ECE  6FB8               	movwf	??_f_lseek& (0+255),b
 15094  000ED0  0E01               	movlw	1
 15095  000ED2  15B5               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 15096  000ED4  6FB9               	movwf	(??_f_lseek+1)& (0+255),b
 15097  000ED6  0E00               	movlw	0
 15098  000ED8  15B6               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 15099  000EDA  6FBA               	movwf	(??_f_lseek+2)& (0+255),b
 15100  000EDC  0E00               	movlw	0
 15101  000EDE  15B7               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 15102  000EE0  6FBB               	movwf	(??_f_lseek+3)& (0+255),b
 15103  000EE2  51B8               	movf	??_f_lseek& (0+255),w,b
 15104  000EE4  11B9               	iorwf	(??_f_lseek+1)& (0+255),w,b
 15105  000EE6  11BA               	iorwf	(??_f_lseek+2)& (0+255),w,b
 15106  000EE8  11BB               	iorwf	(??_f_lseek+3)& (0+255),w,b
 15107  000EEA  B4D8               	btfsc	status,2,c
 15108  000EEC  D007               	goto	l11965
 15109                           
 15110                           ; BSR set to: 0
 15111  000EEE  EE20 F003          	lfsr	2,3
 15112  000EF2  51B2               	movf	f_lseek@fp& (0+255),w,b
 15113  000EF4  26D9               	addwf	fsr2l,f,c
 15114  000EF6  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15115  000EF8  22DA               	addwfc	fsr2h,f,c
 15116  000EFA  2ADF               	incf	indf2,f,c
 15117  000EFC                     l11965:
 15118                           
 15119                           ; BSR set to: 0
 15120                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 15121  000EFC  EE20 F006          	lfsr	2,6
 15122  000F00  51B2               	movf	f_lseek@fp& (0+255),w,b
 15123  000F02  26D9               	addwf	fsr2l,f,c
 15124  000F04  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15125  000F06  22DA               	addwfc	fsr2h,f,c
 15126  000F08  EE10 F00A          	lfsr	1,10
 15127  000F0C  51B2               	movf	f_lseek@fp& (0+255),w,b
 15128  000F0E  26E1               	addwf	fsr1l,f,c
 15129  000F10  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15130  000F12  22E2               	addwfc	fsr1h,f,c
 15131  000F14  50DE               	movf	postinc2,w,c
 15132  000F16  5CE6               	subwf	postinc1,w,c
 15133  000F18  50DE               	movf	postinc2,w,c
 15134  000F1A  58E6               	subwfb	postinc1,w,c
 15135  000F1C  50DE               	movf	postinc2,w,c
 15136  000F1E  58E6               	subwfb	postinc1,w,c
 15137  000F20  50DE               	movf	postinc2,w,c
 15138  000F22  58E6               	subwfb	postinc1,w,c
 15139  000F24  B0D8               	btfsc	status,0,c
 15140  000F26  0012               	return	
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;tff.c: 1203: fp->fsize = fp->fptr;
 15144  000F28  EE20 F006          	lfsr	2,6
 15145  000F2C  51B2               	movf	f_lseek@fp& (0+255),w,b
 15146  000F2E  26D9               	addwf	fsr2l,f,c
 15147  000F30  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15148  000F32  22DA               	addwfc	fsr2h,f,c
 15149  000F34  EE10 F00A          	lfsr	1,10
 15150  000F38  51B2               	movf	f_lseek@fp& (0+255),w,b
 15151  000F3A  26E1               	addwf	fsr1l,f,c
 15152  000F3C  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15153  000F3E  22E2               	addwfc	fsr1h,f,c
 15154  000F40  CFDE FFE6          	movff	postinc2,postinc1
 15155  000F44  CFDE FFE6          	movff	postinc2,postinc1
 15156  000F48  CFDE FFE6          	movff	postinc2,postinc1
 15157  000F4C  CFDE FFE6          	movff	postinc2,postinc1
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;tff.c: 1204: fp->flag |= 0x20;
 15161  000F50  EE20 F002          	lfsr	2,2
 15162  000F54  51B2               	movf	f_lseek@fp& (0+255),w,b
 15163  000F56  26D9               	addwf	fsr2l,f,c
 15164  000F58  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15165  000F5A  22DA               	addwfc	fsr2h,f,c
 15166  000F5C  0E00               	movlw	0
 15167  000F5E  8ADB               	bsf	plusw2,5,c
 15168  000F60  0012               	return	
 15169  000F62                     l11973:
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;tff.c: 1211: fp->flag |= 0x80;
 15173  000F62  EE20 F002          	lfsr	2,2
 15174  000F66  51B2               	movf	f_lseek@fp& (0+255),w,b
 15175  000F68  26D9               	addwf	fsr2l,f,c
 15176  000F6A  51B3               	movf	(f_lseek@fp+1)& (0+255),w,b
 15177  000F6C  22DA               	addwfc	fsr2h,f,c
 15178  000F6E  0E00               	movlw	0
 15179  000F70  8EDB               	bsf	plusw2,7,c
 15180                           
 15181                           ; BSR set to: 0
 15182  000F72  0012               	return		;funcret
 15183  000F74                     __end_of_f_lseek:
 15184                           	callstack 0
 15185                           
 15186 ;; *************** function _create_chain *****************
 15187 ;; Defined at:
 15188 ;;		line 283 in file "bibliotecas/tff.c"
 15189 ;; Parameters:    Size  Location     Type
 15190 ;;  clust           2   68[BANK0 ] unsigned short 
 15191 ;; Auto vars:     Size  Location     Type
 15192 ;;  ncl             2   80[BANK0 ] unsigned short 
 15193 ;;  scl             2   78[BANK0 ] unsigned short 
 15194 ;;  cstat           2   76[BANK0 ] unsigned short 
 15195 ;;  fs              2   74[BANK0 ] PTR struct _FATFS
 15196 ;;		 -> NULL(0), fs(544), 
 15197 ;;  mcl             2   72[BANK0 ] unsigned short 
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  2   68[BANK0 ] unsigned short 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 3F/0
 15204 ;;		On exit  : 3F/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15207 ;;      Params:         0       2       0       0       0       0       0       0       0
 15208 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15209 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15210 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15211 ;;Total ram usage:       14 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:   10
 15214 ;; This function calls:
 15215 ;;		_get_cluster
 15216 ;;		_put_cluster
 15217 ;; This function is called by:
 15218 ;;		_reserve_direntry
 15219 ;;		_f_write
 15220 ;;		_f_lseek
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text75
 15225  002CDE                     __ptext75:
 15226                           	callstack 0
 15227  002CDE                     _create_chain:
 15228                           	callstack 12
 15229                           
 15230                           ; BSR set to: 0
 15231                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;incstack = 0
 15235  002CDE  C034  F0AA         	movff	_FatFs,create_chain@fs
 15236  002CE2  C035  F0AB         	movff	_FatFs+1,create_chain@fs+1
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;tff.c: 291: mcl = fs->max_clust;
 15240  002CE6  EE20 F016          	lfsr	2,22
 15241  002CEA  51AA               	movf	create_chain@fs& (0+255),w,b
 15242  002CEC  26D9               	addwf	fsr2l,f,c
 15243  002CEE  51AB               	movf	(create_chain@fs+1)& (0+255),w,b
 15244  002CF0  22DA               	addwfc	fsr2h,f,c
 15245  002CF2  CFDE F0A8          	movff	postinc2,create_chain@mcl
 15246  002CF6  CFDD F0A9          	movff	postdec2,create_chain@mcl+1
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;tff.c: 292: if (clust == 0) {
 15250  002CFA  51A4               	movf	create_chain@clust& (0+255),w,b
 15251  002CFC  11A5               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15252  002CFE  A4D8               	btfss	status,2,c
 15253  002D00  D01B               	goto	l10299
 15254                           
 15255                           ; BSR set to: 0
 15256                           ;tff.c: 293: scl = fs->last_clust;
 15257  002D02  EE20 F018          	lfsr	2,24
 15258  002D06  51AA               	movf	create_chain@fs& (0+255),w,b
 15259  002D08  26D9               	addwf	fsr2l,f,c
 15260  002D0A  51AB               	movf	(create_chain@fs+1)& (0+255),w,b
 15261  002D0C  22DA               	addwfc	fsr2h,f,c
 15262  002D0E  CFDE F0AE          	movff	postinc2,create_chain@scl
 15263  002D12  CFDD F0AF          	movff	postdec2,create_chain@scl+1
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 15267  002D16  51AF               	movf	(create_chain@scl+1)& (0+255),w,b
 15268  002D18  E104               	bnz	u11520
 15269  002D1A  0E02               	movlw	2
 15270  002D1C  5DAE               	subwf	create_chain@scl& (0+255),w,b
 15271  002D1E  A0D8               	btfss	status,0,c
 15272  002D20  D006               	goto	u11530
 15273  002D22                     u11520:
 15274                           
 15275                           ; BSR set to: 0
 15276  002D22  51A8               	movf	create_chain@mcl& (0+255),w,b
 15277  002D24  5DAE               	subwf	create_chain@scl& (0+255),w,b
 15278  002D26  51A9               	movf	(create_chain@mcl+1)& (0+255),w,b
 15279  002D28  59AF               	subwfb	(create_chain@scl+1)& (0+255),w,b
 15280  002D2A  A0D8               	btfss	status,0,c
 15281  002D2C  D029               	goto	l817
 15282  002D2E                     u11530:
 15283                           
 15284                           ; BSR set to: 0
 15285  002D2E  0E00               	movlw	0
 15286  002D30  6FAF               	movwf	(create_chain@scl+1)& (0+255),b
 15287  002D32  0E01               	movlw	1
 15288  002D34  6FAE               	movwf	create_chain@scl& (0+255),b
 15289  002D36  D024               	goto	l817
 15290  002D38                     l10299:
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 15294  002D38  C0A4  F02E         	movff	create_chain@clust,get_cluster@clust
 15295  002D3C  C0A5  F02F         	movff	create_chain@clust+1,get_cluster@clust+1
 15296  002D40  ECAC  F013         	call	_get_cluster	;wreg free
 15297  002D44  C02E  F0AC         	movff	?_get_cluster,create_chain@cstat
 15298  002D48  C02F  F0AD         	movff	?_get_cluster+1,create_chain@cstat+1
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;tff.c: 298: if (cstat < 2) return 1;
 15302  002D4C  51AD               	movf	(create_chain@cstat+1)& (0+255),w,b
 15303  002D4E  E109               	bnz	l10307
 15304  002D50  0E02               	movlw	2
 15305  002D52  5DAC               	subwf	create_chain@cstat& (0+255),w,b
 15306  002D54  B0D8               	btfsc	status,0,c
 15307  002D56  D005               	goto	l10307
 15308  002D58                     u11540:
 15309                           
 15310                           ; BSR set to: 0
 15311  002D58  0E00               	movlw	0
 15312  002D5A  6FA5               	movwf	(?_create_chain+1)& (0+255),b
 15313  002D5C  0E01               	movlw	1
 15314  002D5E  6FA4               	movwf	?_create_chain& (0+255),b
 15315  002D60  0012               	return	
 15316  002D62                     l10307:
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;tff.c: 299: if (cstat < mcl) return cstat;
 15320  002D62  51A8               	movf	create_chain@mcl& (0+255),w,b
 15321  002D64  5DAC               	subwf	create_chain@cstat& (0+255),w,b
 15322  002D66  51A9               	movf	(create_chain@mcl+1)& (0+255),w,b
 15323  002D68  59AD               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 15324  002D6A  B0D8               	btfsc	status,0,c
 15325  002D6C  D005               	goto	l820
 15326                           
 15327                           ; BSR set to: 0
 15328  002D6E  C0AC  F0A4         	movff	create_chain@cstat,?_create_chain
 15329  002D72  C0AD  F0A5         	movff	create_chain@cstat+1,?_create_chain+1
 15330  002D76  0012               	return	
 15331  002D78                     l820:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;tff.c: 300: scl = clust;
 15335  002D78  C0A4  F0AE         	movff	create_chain@clust,create_chain@scl
 15336  002D7C  C0A5  F0AF         	movff	create_chain@clust+1,create_chain@scl+1
 15337  002D80                     l817:
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 15341  002D80  C0AE  F0B0         	movff	create_chain@scl,create_chain@ncl
 15342  002D84  C0AF  F0B1         	movff	create_chain@scl+1,create_chain@ncl+1
 15343  002D88                     l10311:
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;tff.c: 305: ncl++;
 15347  002D88  4BB0               	infsnz	create_chain@ncl& (0+255),f,b
 15348  002D8A  2BB1               	incf	(create_chain@ncl+1)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;tff.c: 306: if (ncl >= mcl) {
 15352  002D8C  51A8               	movf	create_chain@mcl& (0+255),w,b
 15353  002D8E  5DB0               	subwf	create_chain@ncl& (0+255),w,b
 15354  002D90  51A9               	movf	(create_chain@mcl+1)& (0+255),w,b
 15355  002D92  59B1               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 15356  002D94  A0D8               	btfss	status,0,c
 15357  002D96  D00F               	goto	l10323
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;tff.c: 307: ncl = 2;
 15361  002D98  0E00               	movlw	0
 15362  002D9A  6FB1               	movwf	(create_chain@ncl+1)& (0+255),b
 15363  002D9C  0E02               	movlw	2
 15364  002D9E  6FB0               	movwf	create_chain@ncl& (0+255),b
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;tff.c: 308: if (ncl > scl) return 0;
 15368  002DA0  51AF               	movf	(create_chain@scl+1)& (0+255),w,b
 15369  002DA2  E109               	bnz	l10323
 15370  002DA4  0E02               	movlw	2
 15371  002DA6  5DAE               	subwf	create_chain@scl& (0+255),w,b
 15372  002DA8  B0D8               	btfsc	status,0,c
 15373  002DAA  D005               	goto	l10323
 15374  002DAC                     u11570:
 15375                           
 15376                           ; BSR set to: 0
 15377  002DAC  0E00               	movlw	0
 15378  002DAE  6FA5               	movwf	(?_create_chain+1)& (0+255),b
 15379  002DB0  0E00               	movlw	0
 15380  002DB2  6FA4               	movwf	?_create_chain& (0+255),b
 15381  002DB4  0012               	return	
 15382  002DB6                     l10323:
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 15386  002DB6  C0B0  F02E         	movff	create_chain@ncl,get_cluster@clust
 15387  002DBA  C0B1  F02F         	movff	create_chain@ncl+1,get_cluster@clust+1
 15388  002DBE  ECAC  F013         	call	_get_cluster	;wreg free
 15389  002DC2  C02E  F0AC         	movff	?_get_cluster,create_chain@cstat
 15390  002DC6  C02F  F0AD         	movff	?_get_cluster+1,create_chain@cstat+1
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;tff.c: 311: if (cstat == 0) break;
 15394  002DCA  51AC               	movf	create_chain@cstat& (0+255),w,b
 15395  002DCC  11AD               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15396  002DCE  B4D8               	btfsc	status,2,c
 15397  002DD0  D00C               	goto	l10341
 15398                           
 15399                           ; BSR set to: 0
 15400                           ;tff.c: 312: if (cstat == 1) return 1;
 15401  002DD2  05AC               	decf	create_chain@cstat& (0+255),w,b
 15402  002DD4  11AD               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 15403  002DD6  B4D8               	btfsc	status,2,c
 15404  002DD8  D7BF               	goto	u11540
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;tff.c: 313: if (ncl == scl) return 0;
 15408  002DDA  51AE               	movf	create_chain@scl& (0+255),w,b
 15409  002DDC  19B0               	xorwf	create_chain@ncl& (0+255),w,b
 15410  002DDE  E1D4               	bnz	l10311
 15411  002DE0  51AF               	movf	(create_chain@scl+1)& (0+255),w,b
 15412  002DE2  19B1               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 15413  002DE4  B4D8               	btfsc	status,2,c
 15414  002DE6  D7E2               	goto	u11570
 15415  002DE8  D7CF               	goto	l10311
 15416  002DEA                     l10341:
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 15420  002DEA  C0B0  F08C         	movff	create_chain@ncl,put_cluster@clust
 15421  002DEE  C0B1  F08D         	movff	create_chain@ncl+1,put_cluster@clust+1
 15422  002DF2  0EFF               	movlw	255
 15423  002DF4  6F8F               	movwf	(put_cluster@val+1)& (0+255),b
 15424  002DF6  698E               	setf	put_cluster@val& (0+255),b
 15425  002DF8  EC41  F010         	call	_put_cluster	;wreg free
 15426  002DFC  0900               	iorlw	0
 15427  002DFE  B4D8               	btfsc	status,2,c
 15428  002E00  D7AB               	goto	u11540
 15429                           
 15430                           ; BSR set to: 0
 15431                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 15432  002E02  51A4               	movf	create_chain@clust& (0+255),w,b
 15433  002E04  11A5               	iorwf	(create_chain@clust+1)& (0+255),w,b
 15434  002E06  B4D8               	btfsc	status,2,c
 15435  002E08  D00D               	goto	l10355
 15436                           
 15437                           ; BSR set to: 0
 15438  002E0A  C0A4  F08C         	movff	create_chain@clust,put_cluster@clust
 15439  002E0E  C0A5  F08D         	movff	create_chain@clust+1,put_cluster@clust+1
 15440  002E12  C0B0  F08E         	movff	create_chain@ncl,put_cluster@val
 15441  002E16  C0B1  F08F         	movff	create_chain@ncl+1,put_cluster@val+1
 15442  002E1A  EC41  F010         	call	_put_cluster	;wreg free
 15443  002E1E  0900               	iorlw	0
 15444  002E20  B4D8               	btfsc	status,2,c
 15445  002E22  D79A               	goto	u11540
 15446  002E24                     l10355:
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;tff.c: 319: fs->last_clust = ncl;
 15450  002E24  EE20 F018          	lfsr	2,24
 15451  002E28  51AA               	movf	create_chain@fs& (0+255),w,b
 15452  002E2A  26D9               	addwf	fsr2l,f,c
 15453  002E2C  51AB               	movf	(create_chain@fs+1)& (0+255),w,b
 15454  002E2E  22DA               	addwfc	fsr2h,f,c
 15455  002E30  C0B0  FFDE         	movff	create_chain@ncl,postinc2
 15456  002E34  C0B1  FFDD         	movff	create_chain@ncl+1,postdec2
 15457                           
 15458                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 15459  002E38  EE20 F01A          	lfsr	2,26
 15460  002E3C  51AA               	movf	create_chain@fs& (0+255),w,b
 15461  002E3E  26D9               	addwf	fsr2l,f,c
 15462  002E40  51AB               	movf	(create_chain@fs+1)& (0+255),w,b
 15463  002E42  22DA               	addwfc	fsr2h,f,c
 15464  002E44  28DE               	incf	postinc2,w,c
 15465  002E46  E103               	bnz	u11640
 15466  002E48  28DE               	incf	postinc2,w,c
 15467  002E4A  B4D8               	btfsc	status,2,c
 15468  002E4C  D009               	goto	l10359
 15469  002E4E                     u11640:
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;tff.c: 321: fs->free_clust--;
 15473  002E4E  EE20 F01A          	lfsr	2,26
 15474  002E52  51AA               	movf	create_chain@fs& (0+255),w,b
 15475  002E54  26D9               	addwf	fsr2l,f,c
 15476  002E56  51AB               	movf	(create_chain@fs+1)& (0+255),w,b
 15477  002E58  22DA               	addwfc	fsr2h,f,c
 15478  002E5A  06DE               	decf	postinc2,f,c
 15479  002E5C  0E00               	movlw	0
 15480  002E5E  5ADD               	subwfb	postdec2,f,c
 15481  002E60                     l10359:
 15482                           
 15483                           ; BSR set to: 0
 15484                           ;tff.c: 325: };tff.c: 327: return ncl;
 15485  002E60  C0B0  F0A4         	movff	create_chain@ncl,?_create_chain
 15486  002E64  C0B1  F0A5         	movff	create_chain@ncl+1,?_create_chain+1
 15487                           
 15488                           ; BSR set to: 0
 15489  002E68  0012               	return		;funcret
 15490  002E6A                     __end_of_create_chain:
 15491                           	callstack 0
 15492                           
 15493 ;; *************** function _put_cluster *****************
 15494 ;; Defined at:
 15495 ;;		line 198 in file "bibliotecas/tff.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;  clust           2   44[BANK0 ] unsigned short 
 15498 ;;  val             2   46[BANK0 ] unsigned short 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;  fatsect         4   58[BANK0 ] unsigned long 
 15501 ;;  fs              2   66[BANK0 ] PTR struct _FATFS
 15502 ;;		 -> NULL(0), fs(544), 
 15503 ;;  p               2   64[BANK0 ] PTR unsigned char 
 15504 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15505 ;;  bc              2   62[BANK0 ] unsigned short 
 15506 ;; Return value:  Size  Location     Type
 15507 ;;                  1    wreg      enum E105
 15508 ;; Registers used:
 15509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15510 ;; Tracked objects:
 15511 ;;		On entry : 3F/0
 15512 ;;		On exit  : 3F/0
 15513 ;;		Unchanged: 0/0
 15514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15515 ;;      Params:         0       4       0       0       0       0       0       0       0
 15516 ;;      Locals:         0      14       0       0       0       0       0       0       0
 15517 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15518 ;;      Totals:         0      24       0       0       0       0       0       0       0
 15519 ;;Total ram usage:       24 bytes
 15520 ;; Hardware stack levels used:    1
 15521 ;; Hardware stack levels required when called:    9
 15522 ;; This function calls:
 15523 ;;		___wmul
 15524 ;;		_move_window
 15525 ;; This function is called by:
 15526 ;;		_remove_chain
 15527 ;;		_create_chain
 15528 ;; This function uses a non-reentrant model
 15529 ;;
 15530                           
 15531                           	psect	text76
 15532  002082                     __ptext76:
 15533                           	callstack 0
 15534  002082                     _put_cluster:
 15535                           	callstack 12
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;incstack = 0
 15542  002082  C034  F0A2         	movff	_FatFs,put_cluster@fs
 15543  002086  C035  F0A3         	movff	_FatFs+1,put_cluster@fs+1
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;tff.c: 209: fatsect = fs->fatbase;
 15547  00208A  EE20 F008          	lfsr	2,8
 15548  00208E  51A2               	movf	put_cluster@fs& (0+255),w,b
 15549  002090  26D9               	addwf	fsr2l,f,c
 15550  002092  51A3               	movf	(put_cluster@fs+1)& (0+255),w,b
 15551  002094  22DA               	addwfc	fsr2h,f,c
 15552  002096  CFDE F09A          	movff	postinc2,put_cluster@fatsect
 15553  00209A  CFDE F09B          	movff	postinc2,put_cluster@fatsect+1
 15554  00209E  CFDE F09C          	movff	postinc2,put_cluster@fatsect+2
 15555  0020A2  CFDE F09D          	movff	postinc2,put_cluster@fatsect+3
 15556                           
 15557                           ;tff.c: 210: switch (fs->fs_type) {
 15558  0020A6  D108               	goto	l10203
 15559  0020A8                     l10151:
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 15563  0020A8  C08C  F01A         	movff	put_cluster@clust,___wmul@multiplier
 15564  0020AC  C08D  F01B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 15565  0020B0  0E00               	movlw	0
 15566  0020B2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15567  0020B4  0E03               	movlw	3
 15568  0020B6  6E1C               	movwf	___wmul@multiplicand^0,c
 15569  0020B8  EC71  F029         	call	___wmul	;wreg free
 15570  0020BC  90D8               	bcf	status,0,c
 15571  0020BE  301B               	rrcf	(?___wmul+1)^0,w,c
 15572  0020C0  0100               	movlb	0	; () banked
 15573  0020C2  6F90               	movwf	??_put_cluster& (0+255),b
 15574  0020C4  301A               	rrcf	?___wmul^0,w,c
 15575  0020C6  6F9E               	movwf	put_cluster@bc& (0+255),b
 15576  0020C8  C090  F09F         	movff	??_put_cluster,put_cluster@bc+1
 15577                           
 15578                           ; BSR set to: 0
 15579                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15580  0020CC  C09E  F090         	movff	put_cluster@bc,??_put_cluster
 15581  0020D0  C09F  F091         	movff	put_cluster@bc+1,??_put_cluster+1
 15582  0020D4  0E09               	movlw	9
 15583  0020D6  6F92               	movwf	(??_put_cluster+2)& (0+255),b
 15584  0020D8                     u11315:
 15585  0020D8  90D8               	bcf	status,0,c
 15586  0020DA  3391               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15587  0020DC  3390               	rrcf	??_put_cluster& (0+255),f,b
 15588  0020DE  2F92               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15589  0020E0  D7FB               	goto	u11315
 15590  0020E2  5190               	movf	??_put_cluster& (0+255),w,b
 15591  0020E4  259A               	addwf	put_cluster@fatsect& (0+255),w,b
 15592  0020E6  6F77               	movwf	move_window@sector& (0+255),b
 15593  0020E8  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15594  0020EA  219B               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15595  0020EC  6F78               	movwf	(move_window@sector+1)& (0+255),b
 15596  0020EE  0E00               	movlw	0
 15597  0020F0  219C               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15598  0020F2  6F79               	movwf	(move_window@sector+2)& (0+255),b
 15599  0020F4  0E00               	movlw	0
 15600  0020F6  219D               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15601  0020F8  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 15602  0020FA  EC9A  F015         	call	_move_window	;wreg free
 15603  0020FE  0900               	iorlw	0
 15604  002100  A4D8               	btfss	status,2,c
 15605  002102  D002               	goto	l10159
 15606  002104                     u11320:
 15607                           
 15608                           ; BSR set to: 0
 15609  002104  0E00               	movlw	0
 15610  002106  0012               	return	
 15611  002108                     l10159:
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;tff.c: 214: p = &fs->win[bc % 512U];
 15615  002108  0EFF               	movlw	255
 15616  00210A  6F90               	movwf	??_put_cluster& (0+255),b
 15617  00210C  0E01               	movlw	1
 15618  00210E  6F91               	movwf	(??_put_cluster+1)& (0+255),b
 15619  002110  C09E  F092         	movff	put_cluster@bc,??_put_cluster+2
 15620  002114  C09F  F093         	movff	put_cluster@bc+1,??_put_cluster+3
 15621  002118  5190               	movf	??_put_cluster& (0+255),w,b
 15622  00211A  1792               	andwf	(??_put_cluster+2)& (0+255),f,b
 15623  00211C  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15624  00211E  1793               	andwf	(??_put_cluster+3)& (0+255),f,b
 15625  002120  C0A2  F094         	movff	put_cluster@fs,??_put_cluster+4
 15626  002124  C0A3  F095         	movff	put_cluster@fs+1,??_put_cluster+5
 15627  002128  5192               	movf	(??_put_cluster+2)& (0+255),w,b
 15628  00212A  2794               	addwf	(??_put_cluster+4)& (0+255),f,b
 15629  00212C  5193               	movf	(??_put_cluster+3)& (0+255),w,b
 15630  00212E  2395               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15631  002130  0E20               	movlw	32
 15632  002132  2594               	addwf	(??_put_cluster+4)& (0+255),w,b
 15633  002134  6FA0               	movwf	put_cluster@p& (0+255),b
 15634  002136  0E00               	movlw	0
 15635  002138  2195               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15636  00213A  6FA1               	movwf	(put_cluster@p+1)& (0+255),b
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 15640  00213C  B18C               	btfsc	put_cluster@clust& (0+255),0,b
 15641  00213E  D004               	goto	l10165
 15642                           
 15643                           ; BSR set to: 0
 15644  002140  C08E  F096         	movff	put_cluster@val,_put_cluster$1558
 15645  002144  6B97               	clrf	(_put_cluster$1558+1)& (0+255),b
 15646  002146  D01A               	goto	l10167
 15647  002148                     l10165:
 15648                           
 15649                           ; BSR set to: 0
 15650  002148  518E               	movf	put_cluster@val& (0+255),w,b
 15651  00214A  6F90               	movwf	??_put_cluster& (0+255),b
 15652  00214C  6B91               	clrf	(??_put_cluster+1)& (0+255),b
 15653  00214E  3B90               	swapf	??_put_cluster& (0+255),f,b
 15654  002150  3B91               	swapf	(??_put_cluster+1)& (0+255),f,b
 15655  002152  0EF0               	movlw	240
 15656  002154  1791               	andwf	(??_put_cluster+1)& (0+255),f,b
 15657  002156  5190               	movf	??_put_cluster& (0+255),w,b
 15658  002158  0B0F               	andlw	15
 15659  00215A  1391               	iorwf	(??_put_cluster+1)& (0+255),f,b
 15660  00215C  0EF0               	movlw	240
 15661  00215E  1790               	andwf	??_put_cluster& (0+255),f,b
 15662  002160  C0A0  FFD9         	movff	put_cluster@p,fsr2l
 15663  002164  C0A1  FFDA         	movff	put_cluster@p+1,fsr2h
 15664  002168  50DF               	movf	indf2,w,c
 15665  00216A  0B0F               	andlw	15
 15666  00216C  6F92               	movwf	(??_put_cluster+2)& (0+255),b
 15667  00216E  6B93               	clrf	(??_put_cluster+3)& (0+255),b
 15668  002170  5190               	movf	??_put_cluster& (0+255),w,b
 15669  002172  1192               	iorwf	(??_put_cluster+2)& (0+255),w,b
 15670  002174  6F96               	movwf	_put_cluster$1558& (0+255),b
 15671  002176  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15672  002178  1193               	iorwf	(??_put_cluster+3)& (0+255),w,b
 15673  00217A  6F97               	movwf	(_put_cluster$1558+1)& (0+255),b
 15674  00217C                     l10167:
 15675                           
 15676                           ; BSR set to: 0
 15677  00217C  C0A0  FFD9         	movff	put_cluster@p,fsr2l
 15678  002180  C0A1  FFDA         	movff	put_cluster@p+1,fsr2h
 15679  002184  C096  FFDF         	movff	_put_cluster$1558,indf2
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;tff.c: 216: bc++;
 15683  002188  4B9E               	infsnz	put_cluster@bc& (0+255),f,b
 15684  00218A  2B9F               	incf	(put_cluster@bc+1)& (0+255),f,b
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;tff.c: 217: fs->winflag = 1;
 15688  00218C  EE20 F01F          	lfsr	2,31
 15689  002190  51A2               	movf	put_cluster@fs& (0+255),w,b
 15690  002192  26D9               	addwf	fsr2l,f,c
 15691  002194  51A3               	movf	(put_cluster@fs+1)& (0+255),w,b
 15692  002196  22DA               	addwfc	fsr2h,f,c
 15693  002198  0E01               	movlw	1
 15694  00219A  6EDF               	movwf	indf2,c
 15695                           
 15696                           ; BSR set to: 0
 15697                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15698  00219C  C09E  F090         	movff	put_cluster@bc,??_put_cluster
 15699  0021A0  C09F  F091         	movff	put_cluster@bc+1,??_put_cluster+1
 15700  0021A4  0E09               	movlw	9
 15701  0021A6  6F92               	movwf	(??_put_cluster+2)& (0+255),b
 15702  0021A8                     u11345:
 15703  0021A8  90D8               	bcf	status,0,c
 15704  0021AA  3391               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15705  0021AC  3390               	rrcf	??_put_cluster& (0+255),f,b
 15706  0021AE  2F92               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15707  0021B0  D7FB               	goto	u11345
 15708  0021B2  5190               	movf	??_put_cluster& (0+255),w,b
 15709  0021B4  259A               	addwf	put_cluster@fatsect& (0+255),w,b
 15710  0021B6  6F77               	movwf	move_window@sector& (0+255),b
 15711  0021B8  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15712  0021BA  219B               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15713  0021BC  6F78               	movwf	(move_window@sector+1)& (0+255),b
 15714  0021BE  0E00               	movlw	0
 15715  0021C0  219C               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15716  0021C2  6F79               	movwf	(move_window@sector+2)& (0+255),b
 15717  0021C4  0E00               	movlw	0
 15718  0021C6  219D               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15719  0021C8  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 15720  0021CA  EC9A  F015         	call	_move_window	;wreg free
 15721  0021CE  0900               	iorlw	0
 15722  0021D0  B4D8               	btfsc	status,2,c
 15723  0021D2  D798               	goto	u11320
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;tff.c: 219: p = &fs->win[bc % 512U];
 15727  0021D4  0EFF               	movlw	255
 15728  0021D6  6F90               	movwf	??_put_cluster& (0+255),b
 15729  0021D8  0E01               	movlw	1
 15730  0021DA  6F91               	movwf	(??_put_cluster+1)& (0+255),b
 15731  0021DC  C09E  F092         	movff	put_cluster@bc,??_put_cluster+2
 15732  0021E0  C09F  F093         	movff	put_cluster@bc+1,??_put_cluster+3
 15733  0021E4  5190               	movf	??_put_cluster& (0+255),w,b
 15734  0021E6  1792               	andwf	(??_put_cluster+2)& (0+255),f,b
 15735  0021E8  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15736  0021EA  1793               	andwf	(??_put_cluster+3)& (0+255),f,b
 15737  0021EC  C0A2  F094         	movff	put_cluster@fs,??_put_cluster+4
 15738  0021F0  C0A3  F095         	movff	put_cluster@fs+1,??_put_cluster+5
 15739  0021F4  5192               	movf	(??_put_cluster+2)& (0+255),w,b
 15740  0021F6  2794               	addwf	(??_put_cluster+4)& (0+255),f,b
 15741  0021F8  5193               	movf	(??_put_cluster+3)& (0+255),w,b
 15742  0021FA  2395               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15743  0021FC  0E20               	movlw	32
 15744  0021FE  2594               	addwf	(??_put_cluster+4)& (0+255),w,b
 15745  002200  6FA0               	movwf	put_cluster@p& (0+255),b
 15746  002202  0E00               	movlw	0
 15747  002204  2195               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15748  002206  6FA1               	movwf	(put_cluster@p+1)& (0+255),b
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 15752  002208  B18C               	btfsc	put_cluster@clust& (0+255),0,b
 15753  00220A  D00E               	goto	l10185
 15754                           
 15755                           ; BSR set to: 0
 15756  00220C  C08F  F090         	movff	put_cluster@val+1,??_put_cluster
 15757  002210  0E0F               	movlw	15
 15758  002212  1790               	andwf	??_put_cluster& (0+255),f,b
 15759  002214  C0A0  FFD9         	movff	put_cluster@p,fsr2l
 15760  002218  C0A1  FFDA         	movff	put_cluster@p+1,fsr2h
 15761  00221C  50DF               	movf	indf2,w,c
 15762  00221E  0BF0               	andlw	240
 15763  002220  1190               	iorwf	??_put_cluster& (0+255),w,b
 15764  002222  6F91               	movwf	(??_put_cluster+1)& (0+255),b
 15765  002224  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15766  002226  D00C               	goto	L6
 15767  002228                     l10185:
 15768                           
 15769                           ; BSR set to: 0
 15770  002228  C08E  F090         	movff	put_cluster@val,??_put_cluster
 15771  00222C  C08F  F091         	movff	put_cluster@val+1,??_put_cluster+1
 15772  002230  0E04               	movlw	4
 15773  002232  6F92               	movwf	(??_put_cluster+2)& (0+255),b
 15774  002234                     u11375:
 15775  002234  90D8               	bcf	status,0,c
 15776  002236  3391               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15777  002238  3390               	rrcf	??_put_cluster& (0+255),f,b
 15778  00223A  2F92               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15779  00223C  D7FB               	goto	u11375
 15780  00223E  5190               	movf	??_put_cluster& (0+255),w,b
 15781  002240                     L6:
 15782  002240  6F98               	movwf	_put_cluster$1559& (0+255),b
 15783  002242  6B99               	clrf	(_put_cluster$1559+1)& (0+255),b
 15784                           
 15785                           ; BSR set to: 0
 15786  002244  C0A0  FFD9         	movff	put_cluster@p,fsr2l
 15787  002248  C0A1  FFDA         	movff	put_cluster@p+1,fsr2h
 15788  00224C  C098  FFDF         	movff	_put_cluster$1559,indf2
 15789                           
 15790                           ;tff.c: 221: break;
 15791  002250  D041               	goto	l10205
 15792  002252                     l10189:
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 15796  002252  518D               	movf	(put_cluster@clust+1)& (0+255),w,b
 15797  002254  259A               	addwf	put_cluster@fatsect& (0+255),w,b
 15798  002256  6F77               	movwf	move_window@sector& (0+255),b
 15799  002258  0E00               	movlw	0
 15800  00225A  219B               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15801  00225C  6F78               	movwf	(move_window@sector+1)& (0+255),b
 15802  00225E  0E00               	movlw	0
 15803  002260  219C               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15804  002262  6F79               	movwf	(move_window@sector+2)& (0+255),b
 15805  002264  0E00               	movlw	0
 15806  002266  219D               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15807  002268  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 15808  00226A  EC9A  F015         	call	_move_window	;wreg free
 15809  00226E  0900               	iorlw	0
 15810  002270  B4D8               	btfsc	status,2,c
 15811  002272  D748               	goto	u11320
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 15815  002274  0EFF               	movlw	255
 15816  002276  6F90               	movwf	??_put_cluster& (0+255),b
 15817  002278  0E01               	movlw	1
 15818  00227A  6F91               	movwf	(??_put_cluster+1)& (0+255),b
 15819  00227C  C08C  F092         	movff	put_cluster@clust,??_put_cluster+2
 15820  002280  C08D  F093         	movff	put_cluster@clust+1,??_put_cluster+3
 15821  002284  90D8               	bcf	status,0,c
 15822  002286  3792               	rlcf	(??_put_cluster+2)& (0+255),f,b
 15823  002288  3793               	rlcf	(??_put_cluster+3)& (0+255),f,b
 15824  00228A  5190               	movf	??_put_cluster& (0+255),w,b
 15825  00228C  1792               	andwf	(??_put_cluster+2)& (0+255),f,b
 15826  00228E  5191               	movf	(??_put_cluster+1)& (0+255),w,b
 15827  002290  1793               	andwf	(??_put_cluster+3)& (0+255),f,b
 15828  002292  C0A2  F094         	movff	put_cluster@fs,??_put_cluster+4
 15829  002296  C0A3  F095         	movff	put_cluster@fs+1,??_put_cluster+5
 15830  00229A  5192               	movf	(??_put_cluster+2)& (0+255),w,b
 15831  00229C  2794               	addwf	(??_put_cluster+4)& (0+255),f,b
 15832  00229E  5193               	movf	(??_put_cluster+3)& (0+255),w,b
 15833  0022A0  2395               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15834  0022A2  0E20               	movlw	32
 15835  0022A4  2594               	addwf	(??_put_cluster+4)& (0+255),w,b
 15836  0022A6  6ED9               	movwf	fsr2l,c
 15837  0022A8  0E00               	movlw	0
 15838  0022AA  2195               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15839  0022AC  6EDA               	movwf	fsr2h,c
 15840  0022AE  C08E  FFDE         	movff	put_cluster@val,postinc2
 15841  0022B2  C08F  FFDD         	movff	put_cluster@val+1,postdec2
 15842                           
 15843                           ;tff.c: 226: break;
 15844  0022B6  D00E               	goto	l10205
 15845  0022B8                     l10203:
 15846                           
 15847                           ; BSR set to: 0
 15848  0022B8  EE20 F01C          	lfsr	2,28
 15849  0022BC  51A2               	movf	put_cluster@fs& (0+255),w,b
 15850  0022BE  26D9               	addwf	fsr2l,f,c
 15851  0022C0  51A3               	movf	(put_cluster@fs+1)& (0+255),w,b
 15852  0022C2  22DA               	addwfc	fsr2h,f,c
 15853  0022C4  50DF               	movf	indf2,w,c
 15854                           
 15855                           ; Switch size 1, requested type "simple"
 15856                           ; Number of cases is 2, Range of values is 1 to 2
 15857                           ; switch strategies available:
 15858                           ; Name         Instructions Cycles
 15859                           ; simple_byte            7     4 (average)
 15860                           ;	Chosen strategy is simple_byte
 15861  0022C6  0A01               	xorlw	1	; case 1
 15862  0022C8  B4D8               	btfsc	status,2,c
 15863  0022CA  D6EE               	goto	l10151
 15864  0022CC  0A03               	xorlw	3	; case 2
 15865  0022CE  B4D8               	btfsc	status,2,c
 15866  0022D0  D7C0               	goto	l10189
 15867  0022D2  D718               	goto	u11320
 15868  0022D4                     l10205:
 15869                           
 15870                           ; BSR set to: 0
 15871                           ;tff.c: 236: fs->winflag = 1;
 15872  0022D4  EE20 F01F          	lfsr	2,31
 15873  0022D8  51A2               	movf	put_cluster@fs& (0+255),w,b
 15874  0022DA  26D9               	addwf	fsr2l,f,c
 15875  0022DC  51A3               	movf	(put_cluster@fs+1)& (0+255),w,b
 15876  0022DE  22DA               	addwfc	fsr2h,f,c
 15877  0022E0  0E01               	movlw	1
 15878  0022E2  6EDF               	movwf	indf2,c
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;tff.c: 237: return TRUE;
 15882  0022E4  0E01               	movlw	1
 15883                           
 15884                           ; BSR set to: 0
 15885  0022E6  0012               	return		;funcret
 15886  0022E8                     __end_of_put_cluster:
 15887                           	callstack 0
 15888                           
 15889 ;; *************** function _get_cluster *****************
 15890 ;; Defined at:
 15891 ;;		line 155 in file "bibliotecas/tff.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;  clust           2   45[COMRAM] unsigned short 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  fatsect         4   55[BANK0 ] unsigned long 
 15896 ;;  fs              2   61[BANK0 ] PTR struct _FATFS
 15897 ;;		 -> NULL(0), fs(544), 
 15898 ;;  bc              2   59[BANK0 ] unsigned short 
 15899 ;;  wc              2   53[BANK0 ] unsigned short 
 15900 ;; Return value:  Size  Location     Type
 15901 ;;                  2   45[COMRAM] unsigned short 
 15902 ;; Registers used:
 15903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15904 ;; Tracked objects:
 15905 ;;		On entry : 3F/0
 15906 ;;		On exit  : 3F/0
 15907 ;;		Unchanged: 0/0
 15908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15909 ;;      Params:         2       0       0       0       0       0       0       0       0
 15910 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15911 ;;      Temps:          0       9       0       0       0       0       0       0       0
 15912 ;;      Totals:         2      19       0       0       0       0       0       0       0
 15913 ;;Total ram usage:       21 bytes
 15914 ;; Hardware stack levels used:    1
 15915 ;; Hardware stack levels required when called:    9
 15916 ;; This function calls:
 15917 ;;		___wmul
 15918 ;;		_move_window
 15919 ;; This function is called by:
 15920 ;;		_remove_chain
 15921 ;;		_create_chain
 15922 ;;		_next_dir_entry
 15923 ;;		_f_lseek
 15924 ;;		_f_read
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           	psect	text77
 15929  002758                     __ptext77:
 15930                           	callstack 0
 15931  002758                     _get_cluster:
 15932                           	callstack 12
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;incstack = 0
 15939  002758  C034  F09D         	movff	_FatFs,get_cluster@fs
 15940  00275C  C035  F09E         	movff	_FatFs+1,get_cluster@fs+1
 15941                           
 15942                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 15943  002760  502F               	movf	(get_cluster@clust+1)^0,w,c
 15944  002762  E104               	bnz	u11220
 15945  002764  0E02               	movlw	2
 15946  002766  5C2E               	subwf	get_cluster@clust^0,w,c
 15947  002768  A0D8               	btfss	status,0,c
 15948  00276A  D102               	goto	l10143
 15949  00276C                     u11220:
 15950                           
 15951                           ; BSR set to: 0
 15952  00276C  EE20 F016          	lfsr	2,22
 15953  002770  519D               	movf	get_cluster@fs& (0+255),w,b
 15954  002772  26D9               	addwf	fsr2l,f,c
 15955  002774  519E               	movf	(get_cluster@fs+1)& (0+255),w,b
 15956  002776  22DA               	addwfc	fsr2h,f,c
 15957  002778  50DE               	movf	postinc2,w,c
 15958  00277A  5C2E               	subwf	get_cluster@clust^0,w,c
 15959  00277C  50DE               	movf	postinc2,w,c
 15960  00277E  582F               	subwfb	(get_cluster@clust+1)^0,w,c
 15961  002780  B0D8               	btfsc	status,0,c
 15962  002782  D0F6               	goto	l10143
 15963                           
 15964                           ; BSR set to: 0
 15965                           ;tff.c: 165: fatsect = fs->fatbase;
 15966  002784  EE20 F008          	lfsr	2,8
 15967  002788  519D               	movf	get_cluster@fs& (0+255),w,b
 15968  00278A  26D9               	addwf	fsr2l,f,c
 15969  00278C  519E               	movf	(get_cluster@fs+1)& (0+255),w,b
 15970  00278E  22DA               	addwfc	fsr2h,f,c
 15971  002790  CFDE F097          	movff	postinc2,get_cluster@fatsect
 15972  002794  CFDE F098          	movff	postinc2,get_cluster@fatsect+1
 15973  002798  CFDE F099          	movff	postinc2,get_cluster@fatsect+2
 15974  00279C  CFDE F09A          	movff	postinc2,get_cluster@fatsect+3
 15975                           
 15976                           ;tff.c: 166: switch (fs->fs_type) {
 15977  0027A0  D0DA               	goto	l10141
 15978  0027A2                     l10107:
 15979                           
 15980                           ; BSR set to: 0
 15981                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 15982  0027A2  C02E  F01A         	movff	get_cluster@clust,___wmul@multiplier
 15983  0027A6  C02F  F01B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 15984  0027AA  0E00               	movlw	0
 15985  0027AC  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15986  0027AE  0E03               	movlw	3
 15987  0027B0  6E1C               	movwf	___wmul@multiplicand^0,c
 15988  0027B2  EC71  F029         	call	___wmul	;wreg free
 15989  0027B6  90D8               	bcf	status,0,c
 15990  0027B8  301B               	rrcf	(?___wmul+1)^0,w,c
 15991  0027BA  0100               	movlb	0	; () banked
 15992  0027BC  6F8C               	movwf	??_get_cluster& (0+255),b
 15993  0027BE  301A               	rrcf	?___wmul^0,w,c
 15994  0027C0  6F9B               	movwf	get_cluster@bc& (0+255),b
 15995  0027C2  C08C  F09C         	movff	??_get_cluster,get_cluster@bc+1
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 15999  0027C6  C09B  F08C         	movff	get_cluster@bc,??_get_cluster
 16000  0027CA  C09C  F08D         	movff	get_cluster@bc+1,??_get_cluster+1
 16001  0027CE  0E09               	movlw	9
 16002  0027D0  6F8E               	movwf	(??_get_cluster+2)& (0+255),b
 16003  0027D2                     u11245:
 16004  0027D2  90D8               	bcf	status,0,c
 16005  0027D4  338D               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16006  0027D6  338C               	rrcf	??_get_cluster& (0+255),f,b
 16007  0027D8  2F8E               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16008  0027DA  D7FB               	goto	u11245
 16009  0027DC  518C               	movf	??_get_cluster& (0+255),w,b
 16010  0027DE  2597               	addwf	get_cluster@fatsect& (0+255),w,b
 16011  0027E0  6F77               	movwf	move_window@sector& (0+255),b
 16012  0027E2  518D               	movf	(??_get_cluster+1)& (0+255),w,b
 16013  0027E4  2198               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16014  0027E6  6F78               	movwf	(move_window@sector+1)& (0+255),b
 16015  0027E8  0E00               	movlw	0
 16016  0027EA  2199               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16017  0027EC  6F79               	movwf	(move_window@sector+2)& (0+255),b
 16018  0027EE  0E00               	movlw	0
 16019  0027F0  219A               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16020  0027F2  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 16021  0027F4  EC9A  F015         	call	_move_window	;wreg free
 16022  0027F8  0900               	iorlw	0
 16023  0027FA  B4D8               	btfsc	status,2,c
 16024  0027FC  D0B9               	goto	l10143
 16025                           
 16026                           ; BSR set to: 0
 16027                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 16028  0027FE  0EFF               	movlw	255
 16029  002800  6F8C               	movwf	??_get_cluster& (0+255),b
 16030  002802  0E01               	movlw	1
 16031  002804  6F8D               	movwf	(??_get_cluster+1)& (0+255),b
 16032  002806  C09B  F08E         	movff	get_cluster@bc,??_get_cluster+2
 16033  00280A  C09C  F08F         	movff	get_cluster@bc+1,??_get_cluster+3
 16034  00280E  518C               	movf	??_get_cluster& (0+255),w,b
 16035  002810  178E               	andwf	(??_get_cluster+2)& (0+255),f,b
 16036  002812  518D               	movf	(??_get_cluster+1)& (0+255),w,b
 16037  002814  178F               	andwf	(??_get_cluster+3)& (0+255),f,b
 16038  002816  C09D  F090         	movff	get_cluster@fs,??_get_cluster+4
 16039  00281A  C09E  F091         	movff	get_cluster@fs+1,??_get_cluster+5
 16040  00281E  518E               	movf	(??_get_cluster+2)& (0+255),w,b
 16041  002820  2790               	addwf	(??_get_cluster+4)& (0+255),f,b
 16042  002822  518F               	movf	(??_get_cluster+3)& (0+255),w,b
 16043  002824  2391               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16044  002826  0E20               	movlw	32
 16045  002828  2590               	addwf	(??_get_cluster+4)& (0+255),w,b
 16046  00282A  6ED9               	movwf	fsr2l,c
 16047  00282C  0E00               	movlw	0
 16048  00282E  2191               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16049  002830  6EDA               	movwf	fsr2h,c
 16050  002832  50DF               	movf	indf2,w,c
 16051  002834  6F92               	movwf	(??_get_cluster+6)& (0+255),b
 16052  002836  5192               	movf	(??_get_cluster+6)& (0+255),w,b
 16053  002838  6F95               	movwf	get_cluster@wc& (0+255),b
 16054  00283A  6B96               	clrf	(get_cluster@wc+1)& (0+255),b
 16055                           
 16056                           ; BSR set to: 0
 16057  00283C  4B9B               	infsnz	get_cluster@bc& (0+255),f,b
 16058  00283E  2B9C               	incf	(get_cluster@bc+1)& (0+255),f,b
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 16062  002840  C09B  F08C         	movff	get_cluster@bc,??_get_cluster
 16063  002844  C09C  F08D         	movff	get_cluster@bc+1,??_get_cluster+1
 16064  002848  0E09               	movlw	9
 16065  00284A  6F8E               	movwf	(??_get_cluster+2)& (0+255),b
 16066  00284C                     u11265:
 16067  00284C  90D8               	bcf	status,0,c
 16068  00284E  338D               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16069  002850  338C               	rrcf	??_get_cluster& (0+255),f,b
 16070  002852  2F8E               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16071  002854  D7FB               	goto	u11265
 16072  002856  518C               	movf	??_get_cluster& (0+255),w,b
 16073  002858  2597               	addwf	get_cluster@fatsect& (0+255),w,b
 16074  00285A  6F77               	movwf	move_window@sector& (0+255),b
 16075  00285C  518D               	movf	(??_get_cluster+1)& (0+255),w,b
 16076  00285E  2198               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16077  002860  6F78               	movwf	(move_window@sector+1)& (0+255),b
 16078  002862  0E00               	movlw	0
 16079  002864  2199               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16080  002866  6F79               	movwf	(move_window@sector+2)& (0+255),b
 16081  002868  0E00               	movlw	0
 16082  00286A  219A               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16083  00286C  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 16084  00286E  EC9A  F015         	call	_move_window	;wreg free
 16085  002872  0900               	iorlw	0
 16086  002874  B4D8               	btfsc	status,2,c
 16087  002876  D07C               	goto	l10143
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 16091  002878  0EFF               	movlw	255
 16092  00287A  6F8C               	movwf	??_get_cluster& (0+255),b
 16093  00287C  0E01               	movlw	1
 16094  00287E  6F8D               	movwf	(??_get_cluster+1)& (0+255),b
 16095  002880  C09B  F08E         	movff	get_cluster@bc,??_get_cluster+2
 16096  002884  C09C  F08F         	movff	get_cluster@bc+1,??_get_cluster+3
 16097  002888  518C               	movf	??_get_cluster& (0+255),w,b
 16098  00288A  178E               	andwf	(??_get_cluster+2)& (0+255),f,b
 16099  00288C  518D               	movf	(??_get_cluster+1)& (0+255),w,b
 16100  00288E  178F               	andwf	(??_get_cluster+3)& (0+255),f,b
 16101  002890  C09D  F090         	movff	get_cluster@fs,??_get_cluster+4
 16102  002894  C09E  F091         	movff	get_cluster@fs+1,??_get_cluster+5
 16103  002898  518E               	movf	(??_get_cluster+2)& (0+255),w,b
 16104  00289A  2790               	addwf	(??_get_cluster+4)& (0+255),f,b
 16105  00289C  518F               	movf	(??_get_cluster+3)& (0+255),w,b
 16106  00289E  2391               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16107  0028A0  0E20               	movlw	32
 16108  0028A2  2590               	addwf	(??_get_cluster+4)& (0+255),w,b
 16109  0028A4  6ED9               	movwf	fsr2l,c
 16110  0028A6  0E00               	movlw	0
 16111  0028A8  2191               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16112  0028AA  6EDA               	movwf	fsr2h,c
 16113  0028AC  50DF               	movf	indf2,w,c
 16114  0028AE  6F92               	movwf	(??_get_cluster+6)& (0+255),b
 16115  0028B0  5192               	movf	(??_get_cluster+6)& (0+255),w,b
 16116  0028B2  6F94               	movwf	(??_get_cluster+8)& (0+255),b
 16117  0028B4  6B93               	clrf	(??_get_cluster+7)& (0+255),b
 16118  0028B6  5193               	movf	(??_get_cluster+7)& (0+255),w,b
 16119  0028B8  1395               	iorwf	get_cluster@wc& (0+255),f,b
 16120  0028BA  5194               	movf	(??_get_cluster+8)& (0+255),w,b
 16121  0028BC  1396               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 16125  0028BE  B02E               	btfsc	get_cluster@clust^0,0,c
 16126  0028C0  D007               	goto	l10127
 16127                           
 16128                           ; BSR set to: 0
 16129  0028C2  0EFF               	movlw	255
 16130  0028C4  1595               	andwf	get_cluster@wc& (0+255),w,b
 16131  0028C6  6E2E               	movwf	?_get_cluster^0,c
 16132  0028C8  0E0F               	movlw	15
 16133  0028CA  1596               	andwf	(get_cluster@wc+1)& (0+255),w,b
 16134  0028CC  6E2F               	movwf	(?_get_cluster+1)^0,c
 16135  0028CE  0012               	return	
 16136  0028D0                     l10127:
 16137                           
 16138                           ; BSR set to: 0
 16139  0028D0  C095  F08C         	movff	get_cluster@wc,??_get_cluster
 16140  0028D4  C096  F08D         	movff	get_cluster@wc+1,??_get_cluster+1
 16141  0028D8  0E04               	movlw	4
 16142  0028DA  6F8E               	movwf	(??_get_cluster+2)& (0+255),b
 16143  0028DC                     u11295:
 16144  0028DC  90D8               	bcf	status,0,c
 16145  0028DE  338D               	rrcf	(??_get_cluster+1)& (0+255),f,b
 16146  0028E0  338C               	rrcf	??_get_cluster& (0+255),f,b
 16147  0028E2  2F8E               	decfsz	(??_get_cluster+2)& (0+255),f,b
 16148  0028E4  D7FB               	goto	u11295
 16149  0028E6  C08C  F02E         	movff	??_get_cluster,?_get_cluster
 16150  0028EA  C08D  F02F         	movff	??_get_cluster+1,?_get_cluster+1
 16151  0028EE  0012               	return	
 16152  0028F0                     l10131:
 16153                           
 16154                           ; BSR set to: 0
 16155                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 16156  0028F0  502F               	movf	(get_cluster@clust+1)^0,w,c
 16157  0028F2  2597               	addwf	get_cluster@fatsect& (0+255),w,b
 16158  0028F4  6F77               	movwf	move_window@sector& (0+255),b
 16159  0028F6  0E00               	movlw	0
 16160  0028F8  2198               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 16161  0028FA  6F78               	movwf	(move_window@sector+1)& (0+255),b
 16162  0028FC  0E00               	movlw	0
 16163  0028FE  2199               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 16164  002900  6F79               	movwf	(move_window@sector+2)& (0+255),b
 16165  002902  0E00               	movlw	0
 16166  002904  219A               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 16167  002906  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 16168  002908  EC9A  F015         	call	_move_window	;wreg free
 16169  00290C  0900               	iorlw	0
 16170  00290E  B4D8               	btfsc	status,2,c
 16171  002910  D02F               	goto	l10143
 16172                           
 16173                           ; BSR set to: 0
 16174                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 16175  002912  0EFF               	movlw	255
 16176  002914  6F8C               	movwf	??_get_cluster& (0+255),b
 16177  002916  0E01               	movlw	1
 16178  002918  6F8D               	movwf	(??_get_cluster+1)& (0+255),b
 16179  00291A  C02E  F08E         	movff	get_cluster@clust,??_get_cluster+2
 16180  00291E  C02F  F08F         	movff	get_cluster@clust+1,??_get_cluster+3
 16181  002922  90D8               	bcf	status,0,c
 16182  002924  378E               	rlcf	(??_get_cluster+2)& (0+255),f,b
 16183  002926  378F               	rlcf	(??_get_cluster+3)& (0+255),f,b
 16184  002928  518C               	movf	??_get_cluster& (0+255),w,b
 16185  00292A  178E               	andwf	(??_get_cluster+2)& (0+255),f,b
 16186  00292C  518D               	movf	(??_get_cluster+1)& (0+255),w,b
 16187  00292E  178F               	andwf	(??_get_cluster+3)& (0+255),f,b
 16188  002930  C09D  F090         	movff	get_cluster@fs,??_get_cluster+4
 16189  002934  C09E  F091         	movff	get_cluster@fs+1,??_get_cluster+5
 16190  002938  518E               	movf	(??_get_cluster+2)& (0+255),w,b
 16191  00293A  2790               	addwf	(??_get_cluster+4)& (0+255),f,b
 16192  00293C  518F               	movf	(??_get_cluster+3)& (0+255),w,b
 16193  00293E  2391               	addwfc	(??_get_cluster+5)& (0+255),f,b
 16194  002940  0E20               	movlw	32
 16195  002942  2590               	addwf	(??_get_cluster+4)& (0+255),w,b
 16196  002944  6ED9               	movwf	fsr2l,c
 16197  002946  0E00               	movlw	0
 16198  002948  2191               	addwfc	(??_get_cluster+5)& (0+255),w,b
 16199  00294A  6EDA               	movwf	fsr2h,c
 16200  00294C  CFDE F02E          	movff	postinc2,?_get_cluster
 16201  002950  CFDD F02F          	movff	postdec2,?_get_cluster+1
 16202  002954  0012               	return	
 16203  002956                     l10141:
 16204                           
 16205                           ; BSR set to: 0
 16206  002956  EE20 F01C          	lfsr	2,28
 16207  00295A  519D               	movf	get_cluster@fs& (0+255),w,b
 16208  00295C  26D9               	addwf	fsr2l,f,c
 16209  00295E  519E               	movf	(get_cluster@fs+1)& (0+255),w,b
 16210  002960  22DA               	addwfc	fsr2h,f,c
 16211  002962  50DF               	movf	indf2,w,c
 16212                           
 16213                           ; Switch size 1, requested type "simple"
 16214                           ; Number of cases is 2, Range of values is 1 to 2
 16215                           ; switch strategies available:
 16216                           ; Name         Instructions Cycles
 16217                           ; simple_byte            7     4 (average)
 16218                           ;	Chosen strategy is simple_byte
 16219  002964  0A01               	xorlw	1	; case 1
 16220  002966  B4D8               	btfsc	status,2,c
 16221  002968  D71C               	goto	l10107
 16222  00296A  0A03               	xorlw	3	; case 2
 16223  00296C  B4D8               	btfsc	status,2,c
 16224  00296E  D7C0               	goto	l10131
 16225  002970                     l10143:
 16226                           
 16227                           ; BSR set to: 0
 16228                           ;tff.c: 184: };tff.c: 186: return 1;
 16229  002970  0E00               	movlw	0
 16230  002972  6E2F               	movwf	(?_get_cluster+1)^0,c
 16231  002974  0E01               	movlw	1
 16232  002976  6E2E               	movwf	?_get_cluster^0,c
 16233                           
 16234                           ; BSR set to: 0
 16235  002978  0012               	return		;funcret
 16236  00297A                     __end_of_get_cluster:
 16237                           	callstack 0
 16238                           
 16239 ;; *************** function ___wmul *****************
 16240 ;; Defined at:
 16241 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16242 ;; Parameters:    Size  Location     Type
 16243 ;;  multiplier      2   25[COMRAM] unsigned int 
 16244 ;;  multiplicand    2   27[COMRAM] unsigned int 
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;  product         2   29[COMRAM] unsigned int 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  2   25[COMRAM] unsigned int 
 16249 ;; Registers used:
 16250 ;;		wreg, status,2, status,0, prodl, prodh
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16256 ;;      Params:         4       0       0       0       0       0       0       0       0
 16257 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16259 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16260 ;;Total ram usage:        6 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; Hardware stack levels required when called:    3
 16263 ;; This function calls:
 16264 ;;		Nothing
 16265 ;; This function is called by:
 16266 ;;		_get_cluster
 16267 ;;		_put_cluster
 16268 ;;		_fprintf
 16269 ;;		_atoi
 16270 ;; This function uses a non-reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text78
 16274  0052E2                     __ptext78:
 16275                           	callstack 0
 16276  0052E2                     ___wmul:
 16277                           	callstack 24
 16278                           
 16279                           ; BSR set to: 0
 16280                           ;incstack = 0
 16281  0052E2  501A               	movf	___wmul@multiplier^0,w,c
 16282  0052E4  021C               	mulwf	___wmul@multiplicand^0,c
 16283  0052E6  CFF3 F01E          	movff	prodl,___wmul@product
 16284  0052EA  CFF4 F01F          	movff	prodh,___wmul@product+1
 16285  0052EE  501A               	movf	___wmul@multiplier^0,w,c
 16286  0052F0  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 16287  0052F2  50F3               	movf	243,w,c
 16288  0052F4  261F               	addwf	(___wmul@product+1)^0,f,c
 16289  0052F6  501B               	movf	(___wmul@multiplier+1)^0,w,c
 16290  0052F8  021C               	mulwf	___wmul@multiplicand^0,c
 16291  0052FA  50F3               	movf	243,w,c
 16292  0052FC  261F               	addwf	(___wmul@product+1)^0,f,c
 16293  0052FE  C01E  F01A         	movff	___wmul@product,?___wmul
 16294  005302  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 16295  005306  0012               	return		;funcret
 16296  005308                     __end_of___wmul:
 16297                           	callstack 0
 16298                           
 16299 ;; *************** function ___lldiv *****************
 16300 ;; Defined at:
 16301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;  dividend        4   25[COMRAM] unsigned long 
 16304 ;;  divisor         4   29[COMRAM] unsigned long 
 16305 ;; Auto vars:     Size  Location     Type
 16306 ;;  quotient        4   33[COMRAM] unsigned long 
 16307 ;;  counter         1   37[COMRAM] unsigned char 
 16308 ;; Return value:  Size  Location     Type
 16309 ;;                  4   25[COMRAM] unsigned long 
 16310 ;; Registers used:
 16311 ;;		wreg, status,2, status,0
 16312 ;; Tracked objects:
 16313 ;;		On entry : 3D/0
 16314 ;;		On exit  : 3D/0
 16315 ;;		Unchanged: 3D/0
 16316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16317 ;;      Params:         8       0       0       0       0       0       0       0       0
 16318 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16320 ;;      Totals:        13       0       0       0       0       0       0       0       0
 16321 ;;Total ram usage:       13 bytes
 16322 ;; Hardware stack levels used:    1
 16323 ;; Hardware stack levels required when called:    3
 16324 ;; This function calls:
 16325 ;;		Nothing
 16326 ;; This function is called by:
 16327 ;;		_auto_mount
 16328 ;;		_f_lseek
 16329 ;;		_fprintf
 16330 ;;		_ultoa
 16331 ;; This function uses a non-reentrant model
 16332 ;;
 16333                           
 16334                           	psect	text79
 16335  00457C                     __ptext79:
 16336                           	callstack 0
 16337  00457C                     ___lldiv:
 16338                           	callstack 18
 16339                           
 16340                           ;incstack = 0
 16341  00457C  0E00               	movlw	0
 16342  00457E  6E22               	movwf	___lldiv@quotient^0,c
 16343  004580  0E00               	movlw	0
 16344  004582  6E23               	movwf	(___lldiv@quotient+1)^0,c
 16345  004584  0E00               	movlw	0
 16346  004586  6E24               	movwf	(___lldiv@quotient+2)^0,c
 16347  004588  0E00               	movlw	0
 16348  00458A  6E25               	movwf	(___lldiv@quotient+3)^0,c
 16349  00458C  501E               	movf	___lldiv@divisor^0,w,c
 16350  00458E  101F               	iorwf	(___lldiv@divisor+1)^0,w,c
 16351  004590  1020               	iorwf	(___lldiv@divisor+2)^0,w,c
 16352  004592  1021               	iorwf	(___lldiv@divisor+3)^0,w,c
 16353  004594  B4D8               	btfsc	status,2,c
 16354  004596  D02A               	goto	l1629
 16355  004598  0E01               	movlw	1
 16356  00459A  6E26               	movwf	___lldiv@counter^0,c
 16357  00459C  D006               	goto	l10229
 16358  00459E                     l10227:
 16359  00459E  90D8               	bcf	status,0,c
 16360  0045A0  361E               	rlcf	___lldiv@divisor^0,f,c
 16361  0045A2  361F               	rlcf	(___lldiv@divisor+1)^0,f,c
 16362  0045A4  3620               	rlcf	(___lldiv@divisor+2)^0,f,c
 16363  0045A6  3621               	rlcf	(___lldiv@divisor+3)^0,f,c
 16364  0045A8  2A26               	incf	___lldiv@counter^0,f,c
 16365  0045AA                     l10229:
 16366  0045AA  AE21               	btfss	(___lldiv@divisor+3)^0,7,c
 16367  0045AC  D7F8               	goto	l10227
 16368  0045AE                     u11420:
 16369  0045AE  90D8               	bcf	status,0,c
 16370  0045B0  3622               	rlcf	___lldiv@quotient^0,f,c
 16371  0045B2  3623               	rlcf	(___lldiv@quotient+1)^0,f,c
 16372  0045B4  3624               	rlcf	(___lldiv@quotient+2)^0,f,c
 16373  0045B6  3625               	rlcf	(___lldiv@quotient+3)^0,f,c
 16374  0045B8  501E               	movf	___lldiv@divisor^0,w,c
 16375  0045BA  5C1A               	subwf	___lldiv@dividend^0,w,c
 16376  0045BC  501F               	movf	(___lldiv@divisor+1)^0,w,c
 16377  0045BE  581B               	subwfb	(___lldiv@dividend+1)^0,w,c
 16378  0045C0  5020               	movf	(___lldiv@divisor+2)^0,w,c
 16379  0045C2  581C               	subwfb	(___lldiv@dividend+2)^0,w,c
 16380  0045C4  5021               	movf	(___lldiv@divisor+3)^0,w,c
 16381  0045C6  581D               	subwfb	(___lldiv@dividend+3)^0,w,c
 16382  0045C8  A0D8               	btfss	status,0,c
 16383  0045CA  D009               	goto	l10239
 16384  0045CC  501E               	movf	___lldiv@divisor^0,w,c
 16385  0045CE  5E1A               	subwf	___lldiv@dividend^0,f,c
 16386  0045D0  501F               	movf	(___lldiv@divisor+1)^0,w,c
 16387  0045D2  5A1B               	subwfb	(___lldiv@dividend+1)^0,f,c
 16388  0045D4  5020               	movf	(___lldiv@divisor+2)^0,w,c
 16389  0045D6  5A1C               	subwfb	(___lldiv@dividend+2)^0,f,c
 16390  0045D8  5021               	movf	(___lldiv@divisor+3)^0,w,c
 16391  0045DA  5A1D               	subwfb	(___lldiv@dividend+3)^0,f,c
 16392  0045DC  8022               	bsf	___lldiv@quotient^0,0,c
 16393  0045DE                     l10239:
 16394  0045DE  90D8               	bcf	status,0,c
 16395  0045E0  3221               	rrcf	(___lldiv@divisor+3)^0,f,c
 16396  0045E2  3220               	rrcf	(___lldiv@divisor+2)^0,f,c
 16397  0045E4  321F               	rrcf	(___lldiv@divisor+1)^0,f,c
 16398  0045E6  321E               	rrcf	___lldiv@divisor^0,f,c
 16399  0045E8  2E26               	decfsz	___lldiv@counter^0,f,c
 16400  0045EA  D7E1               	goto	u11420
 16401  0045EC                     l1629:
 16402  0045EC  C022  F01A         	movff	___lldiv@quotient,?___lldiv
 16403  0045F0  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
 16404  0045F4  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
 16405  0045F8  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
 16406  0045FC  0012               	return		;funcret
 16407  0045FE                     __end_of___lldiv:
 16408                           	callstack 0
 16409                           
 16410 ;; *************** function _f_close *****************
 16411 ;; Defined at:
 16412 ;;		line 1116 in file "bibliotecas/tff.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;  fp              2   53[BANK0 ] PTR struct _FIL
 16415 ;;		 -> fil(28), 
 16416 ;; Auto vars:     Size  Location     Type
 16417 ;;  res             1   55[BANK0 ] enum E155
 16418 ;; Return value:  Size  Location     Type
 16419 ;;                  1    wreg      enum E3237
 16420 ;; Registers used:
 16421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16422 ;; Tracked objects:
 16423 ;;		On entry : 3F/0
 16424 ;;		On exit  : 3F/0
 16425 ;;		Unchanged: 0/0
 16426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16427 ;;      Params:         0       2       0       0       0       0       0       0       0
 16428 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16429 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16430 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16431 ;;Total ram usage:        3 bytes
 16432 ;; Hardware stack levels used:    1
 16433 ;; Hardware stack levels required when called:   11
 16434 ;; This function calls:
 16435 ;;		_f_sync
 16436 ;; This function is called by:
 16437 ;;		_escrita_sdcard
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text80
 16442  005218                     __ptext80:
 16443                           	callstack 0
 16444  005218                     _f_close:
 16445                           	callstack 15
 16446                           
 16447                           ; BSR set to: 0
 16448                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 16449                           
 16450                           ;incstack = 0
 16451  005218  C095  F08C         	movff	f_close@fp,f_sync@fp
 16452  00521C  C096  F08D         	movff	f_close@fp+1,f_sync@fp+1
 16453  005220  EC68  F01A         	call	_f_sync	;wreg free
 16454  005224  6F97               	movwf	f_close@res& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 16458  005226  5197               	movf	f_close@res& (0+255),w,b
 16459  005228  A4D8               	btfss	status,2,c
 16460  00522A  0012               	return	
 16461                           
 16462                           ; BSR set to: 0
 16463  00522C  EE20 F004          	lfsr	2,4
 16464  005230  5195               	movf	f_close@fp& (0+255),w,b
 16465  005232  26D9               	addwf	fsr2l,f,c
 16466  005234  5196               	movf	(f_close@fp+1)& (0+255),w,b
 16467  005236  22DA               	addwfc	fsr2h,f,c
 16468  005238  0E00               	movlw	0
 16469  00523A  6EDE               	movwf	postinc2,c
 16470  00523C  0E00               	movlw	0
 16471  00523E  6EDD               	movwf	postdec2,c
 16472                           
 16473                           ; BSR set to: 0
 16474  005240  0012               	return		;funcret
 16475  005242                     __end_of_f_close:
 16476                           	callstack 0
 16477                           
 16478 ;; *************** function _f_sync *****************
 16479 ;; Defined at:
 16480 ;;		line 1077 in file "bibliotecas/tff.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  fp              2   44[BANK0 ] PTR struct _FIL
 16483 ;;		 -> fil(28), 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  tim             4   46[BANK0 ] unsigned long 
 16486 ;;  dir             2   51[BANK0 ] PTR unsigned char 
 16487 ;;		 -> NULL(0), fs(544), 
 16488 ;;  res             1   50[BANK0 ] enum E155
 16489 ;; Return value:  Size  Location     Type
 16490 ;;                  1    wreg      enum E155
 16491 ;; Registers used:
 16492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16493 ;; Tracked objects:
 16494 ;;		On entry : 3F/0
 16495 ;;		On exit  : 3F/0
 16496 ;;		Unchanged: 0/0
 16497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16498 ;;      Params:         0       2       0       0       0       0       0       0       0
 16499 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16501 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16502 ;;Total ram usage:        9 bytes
 16503 ;; Hardware stack levels used:    1
 16504 ;; Hardware stack levels required when called:   10
 16505 ;; This function calls:
 16506 ;;		_get_fattime
 16507 ;;		_move_window
 16508 ;;		_sync
 16509 ;;		_validate
 16510 ;; This function is called by:
 16511 ;;		_f_close
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515                           	psect	text81
 16516  0034D0                     __ptext81:
 16517                           	callstack 0
 16518  0034D0                     _f_sync:
 16519                           	callstack 15
 16520                           
 16521                           ; BSR set to: 0
 16522                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 16523                           
 16524                           ; BSR set to: 0
 16525                           ;incstack = 0
 16526  0034D0  EE20 F004          	lfsr	2,4
 16527  0034D4  518C               	movf	f_sync@fp& (0+255),w,b
 16528  0034D6  26D9               	addwf	fsr2l,f,c
 16529  0034D8  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16530  0034DA  22DA               	addwfc	fsr2h,f,c
 16531  0034DC  CFDE F020          	movff	postinc2,validate@fs
 16532  0034E0  CFDD F021          	movff	postdec2,validate@fs+1
 16533  0034E4  C08C  FFD9         	movff	f_sync@fp,fsr2l
 16534  0034E8  C08D  FFDA         	movff	f_sync@fp+1,fsr2h
 16535  0034EC  CFDE F022          	movff	postinc2,validate@id
 16536  0034F0  CFDD F023          	movff	postdec2,validate@id+1
 16537  0034F4  EC6D  F027         	call	_validate	;wreg free
 16538  0034F8  0100               	movlb	0	; () banked
 16539  0034FA  6F92               	movwf	f_sync@res& (0+255),b
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;tff.c: 1087: if (res == FR_OK) {
 16543  0034FC  5192               	movf	f_sync@res& (0+255),w,b
 16544  0034FE  A4D8               	btfss	status,2,c
 16545  003500  D077               	goto	l11579
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;tff.c: 1088: if (fp->flag & 0x20) {
 16549  003502  EE20 F002          	lfsr	2,2
 16550  003506  518C               	movf	f_sync@fp& (0+255),w,b
 16551  003508  26D9               	addwf	fsr2l,f,c
 16552  00350A  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16553  00350C  22DA               	addwfc	fsr2h,f,c
 16554  00350E  AADF               	btfss	indf2,5,c
 16555  003510  D06F               	goto	l11579
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 16559  003512  EE20 F016          	lfsr	2,22
 16560  003516  518C               	movf	f_sync@fp& (0+255),w,b
 16561  003518  26D9               	addwf	fsr2l,f,c
 16562  00351A  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16563  00351C  22DA               	addwfc	fsr2h,f,c
 16564  00351E  CFDE F077          	movff	postinc2,move_window@sector
 16565  003522  CFDE F078          	movff	postinc2,move_window@sector+1
 16566  003526  CFDE F079          	movff	postinc2,move_window@sector+2
 16567  00352A  CFDE F07A          	movff	postinc2,move_window@sector+3
 16568  00352E  EC9A  F015         	call	_move_window	;wreg free
 16569  003532  0900               	iorlw	0
 16570  003534  A4D8               	btfss	status,2,c
 16571  003536  D002               	goto	l11565
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;tff.c: 1091: return FR_RW_ERROR;
 16575  003538  0E08               	movlw	8
 16576  00353A  0012               	return	
 16577  00353C                     l11565:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;tff.c: 1092: dir = fp->dir_ptr;
 16581  00353C  EE20 F01A          	lfsr	2,26
 16582  003540  518C               	movf	f_sync@fp& (0+255),w,b
 16583  003542  26D9               	addwf	fsr2l,f,c
 16584  003544  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16585  003546  22DA               	addwfc	fsr2h,f,c
 16586  003548  CFDE F093          	movff	postinc2,f_sync@dir
 16587  00354C  CFDD F094          	movff	postdec2,f_sync@dir+1
 16588                           
 16589                           ;tff.c: 1093: dir[11] |= 0x20;
 16590  003550  EE20 F00B          	lfsr	2,11
 16591  003554  5193               	movf	f_sync@dir& (0+255),w,b
 16592  003556  26D9               	addwf	fsr2l,f,c
 16593  003558  5194               	movf	(f_sync@dir+1)& (0+255),w,b
 16594  00355A  22DA               	addwfc	fsr2h,f,c
 16595  00355C  0E00               	movlw	0
 16596  00355E  8ADB               	bsf	plusw2,5,c
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 16600  003560  EE20 F00A          	lfsr	2,10
 16601  003564  518C               	movf	f_sync@fp& (0+255),w,b
 16602  003566  26D9               	addwf	fsr2l,f,c
 16603  003568  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16604  00356A  22DA               	addwfc	fsr2h,f,c
 16605  00356C  EE10 F01C          	lfsr	1,28
 16606  003570  5193               	movf	f_sync@dir& (0+255),w,b
 16607  003572  26E1               	addwf	fsr1l,f,c
 16608  003574  5194               	movf	(f_sync@dir+1)& (0+255),w,b
 16609  003576  22E2               	addwfc	fsr1h,f,c
 16610  003578  CFDE FFE6          	movff	postinc2,postinc1
 16611  00357C  CFDE FFE6          	movff	postinc2,postinc1
 16612  003580  CFDE FFE6          	movff	postinc2,postinc1
 16613  003584  CFDE FFE6          	movff	postinc2,postinc1
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 16617  003588  EE20 F00E          	lfsr	2,14
 16618  00358C  518C               	movf	f_sync@fp& (0+255),w,b
 16619  00358E  26D9               	addwf	fsr2l,f,c
 16620  003590  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16621  003592  22DA               	addwfc	fsr2h,f,c
 16622  003594  EE10 F01A          	lfsr	1,26
 16623  003598  5193               	movf	f_sync@dir& (0+255),w,b
 16624  00359A  26E1               	addwf	fsr1l,f,c
 16625  00359C  5194               	movf	(f_sync@dir+1)& (0+255),w,b
 16626  00359E  22E2               	addwfc	fsr1h,f,c
 16627  0035A0  CFDE FFE6          	movff	postinc2,postinc1
 16628  0035A4  CFDD FFE5          	movff	postdec2,postdec1
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;tff.c: 1099: tim = get_fattime();
 16632  0035A8  EC95  F018         	call	_get_fattime	;wreg free
 16633  0035AC  C01E  F08E         	movff	?_get_fattime,f_sync@tim
 16634  0035B0  C01F  F08F         	movff	?_get_fattime+1,f_sync@tim+1
 16635  0035B4  C020  F090         	movff	?_get_fattime+2,f_sync@tim+2
 16636  0035B8  C021  F091         	movff	?_get_fattime+3,f_sync@tim+3
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 16640  0035BC  EE20 F016          	lfsr	2,22
 16641  0035C0  5193               	movf	f_sync@dir& (0+255),w,b
 16642  0035C2  26D9               	addwf	fsr2l,f,c
 16643  0035C4  5194               	movf	(f_sync@dir+1)& (0+255),w,b
 16644  0035C6  22DA               	addwfc	fsr2h,f,c
 16645  0035C8  C08E  FFDE         	movff	f_sync@tim,postinc2
 16646  0035CC  C08F  FFDE         	movff	f_sync@tim+1,postinc2
 16647  0035D0  C090  FFDE         	movff	f_sync@tim+2,postinc2
 16648  0035D4  C091  FFDE         	movff	f_sync@tim+3,postinc2
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 16652  0035D8  EE20 F002          	lfsr	2,2
 16653  0035DC  518C               	movf	f_sync@fp& (0+255),w,b
 16654  0035DE  26D9               	addwf	fsr2l,f,c
 16655  0035E0  518D               	movf	(f_sync@fp+1)& (0+255),w,b
 16656  0035E2  22DA               	addwfc	fsr2h,f,c
 16657  0035E4  0EDF               	movlw	223
 16658  0035E6  16DF               	andwf	indf2,f,c
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;tff.c: 1102: res = sync();
 16662  0035E8  EC5D  F026         	call	_sync	;wreg free
 16663  0035EC  0100               	movlb	0	; () banked
 16664  0035EE  6F92               	movwf	f_sync@res& (0+255),b
 16665  0035F0                     l11579:
 16666                           
 16667                           ; BSR set to: 0
 16668                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 16669  0035F0  5192               	movf	f_sync@res& (0+255),w,b
 16670                           
 16671                           ; BSR set to: 0
 16672  0035F2  0012               	return		;funcret
 16673  0035F4                     __end_of_f_sync:
 16674                           	callstack 0
 16675                           
 16676 ;; *************** function _validate *****************
 16677 ;; Defined at:
 16678 ;;		line 767 in file "bibliotecas/tff.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  fs              2   31[COMRAM] PTR const struct _FATFS
 16681 ;;		 -> NULL(0), fs(544), 
 16682 ;;  id              2   33[COMRAM] unsigned short 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;		None
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      enum E155
 16687 ;; Registers used:
 16688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16689 ;; Tracked objects:
 16690 ;;		On entry : 3F/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16694 ;;      Params:         4       0       0       0       0       0       0       0       0
 16695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16696 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16697 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16698 ;;Total ram usage:        6 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:    5
 16701 ;; This function calls:
 16702 ;;		_disk_status
 16703 ;; This function is called by:
 16704 ;;		_f_write
 16705 ;;		_f_sync
 16706 ;;		_f_lseek
 16707 ;;		_f_read
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           	psect	text82
 16712  004EDA                     __ptext82:
 16713                           	callstack 0
 16714  004EDA                     _validate:
 16715                           	callstack 17
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;incstack = 0
 16722  004EDA  5020               	movf	validate@fs^0,w,c
 16723  004EDC  1021               	iorwf	(validate@fs+1)^0,w,c
 16724  004EDE  B4D8               	btfsc	status,2,c
 16725  004EE0  D014               	goto	u11680
 16726                           
 16727                           ; BSR set to: 0
 16728  004EE2  EE20 F01C          	lfsr	2,28
 16729  004EE6  5020               	movf	validate@fs^0,w,c
 16730  004EE8  26D9               	addwf	fsr2l,f,c
 16731  004EEA  5021               	movf	(validate@fs+1)^0,w,c
 16732  004EEC  22DA               	addwfc	fsr2h,f,c
 16733  004EEE  50DF               	movf	indf2,w,c
 16734  004EF0  B4D8               	btfsc	status,2,c
 16735  004EF2  D00B               	goto	u11680
 16736                           
 16737                           ; BSR set to: 0
 16738  004EF4  C020  FFD9         	movff	validate@fs,fsr2l
 16739  004EF8  C021  FFDA         	movff	validate@fs+1,fsr2h
 16740  004EFC  5022               	movf	validate@id^0,w,c
 16741  004EFE  18DE               	xorwf	postinc2,w,c
 16742  004F00  E104               	bnz	u11680
 16743  004F02  5023               	movf	(validate@id+1)^0,w,c
 16744  004F04  18DE               	xorwf	postinc2,w,c
 16745  004F06  B4D8               	btfsc	status,2,c
 16746  004F08  D002               	goto	l10385
 16747  004F0A                     u11680:
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;tff.c: 773: return FR_INVALID_OBJECT;
 16751  004F0A  0E0C               	movlw	12
 16752  004F0C  0012               	return	
 16753  004F0E                     l10385:
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;tff.c: 774: if (disk_status(0) & 0x01)
 16757  004F0E  0E00               	movlw	0
 16758  004F10  ECC9  F028         	call	_disk_status
 16759  004F14  6E24               	movwf	??_validate^0,c
 16760  004F16  A024               	btfss	??_validate^0,0,c
 16761  004F18  D002               	goto	l10391
 16762                           
 16763                           ;tff.c: 775: return FR_NOT_READY;
 16764  004F1A  0E01               	movlw	1
 16765  004F1C  0012               	return	
 16766  004F1E                     l10391:
 16767                           
 16768                           ;tff.c: 777: return FR_OK;
 16769  004F1E  0E00               	movlw	0
 16770  004F20  0012               	return		;funcret
 16771  004F22                     __end_of_validate:
 16772                           	callstack 0
 16773                           
 16774 ;; *************** function _disk_status *****************
 16775 ;; Defined at:
 16776 ;;		line 27 in file "bibliotecas/diskio.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;  pdrv            1    wreg     unsigned char 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  pdrv            1   29[COMRAM] unsigned char 
 16781 ;;  result          2    0        int 
 16782 ;;  stat            1   30[COMRAM] unsigned char 
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  1    wreg      unsigned char 
 16785 ;; Registers used:
 16786 ;;		wreg, status,2, status,0, cstack
 16787 ;; Tracked objects:
 16788 ;;		On entry : 3F/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16792 ;;      Params:         0       0       0       0       0       0       0       0       0
 16793 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16795 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16796 ;;Total ram usage:        4 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:    4
 16799 ;; This function calls:
 16800 ;;		_sdc_disk_status
 16801 ;; This function is called by:
 16802 ;;		_auto_mount
 16803 ;;		_validate
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text83
 16808  005192                     __ptext83:
 16809                           	callstack 0
 16810  005192                     _disk_status:
 16811                           	callstack 17
 16812                           
 16813                           ;incstack = 0
 16814                           ;disk_status@pdrv stored from wreg
 16815  005192  6E1E               	movwf	disk_status@pdrv^0,c
 16816                           
 16817                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 16818  005194  D00A               	goto	l10057
 16819  005196                     l10039:
 16820                           
 16821                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 16822  005196  501E               	movf	disk_status@pdrv^0,w,c
 16823  005198  ECA3  F02A         	call	_sdc_disk_status
 16824  00519C  6E1F               	movwf	disk_status@stat^0,c
 16825  00519E                     l10041:
 16826                           
 16827                           ;diskio.c: 39: return stat;
 16828  00519E  501F               	movf	disk_status@stat^0,w,c
 16829  0051A0  0012               	return	
 16830  0051A2                     l10045:
 16831  0051A2  501E               	movf	disk_status@pdrv^0,w,c
 16832  0051A4  ECA3  F02A         	call	_sdc_disk_status
 16833  0051A8  D7FA               	goto	l10041
 16834  0051AA                     l10057:
 16835  0051AA  501E               	movf	disk_status@pdrv^0,w,c
 16836                           
 16837                           ; Switch size 1, requested type "simple"
 16838                           ; Number of cases is 3, Range of values is 0 to 2
 16839                           ; switch strategies available:
 16840                           ; Name         Instructions Cycles
 16841                           ; simple_byte           10     6 (average)
 16842                           ;	Chosen strategy is simple_byte
 16843  0051AC  0A00               	xorlw	0	; case 0
 16844  0051AE  B4D8               	btfsc	status,2,c
 16845  0051B0  D7F2               	goto	l10039
 16846  0051B2  0A01               	xorlw	1	; case 1
 16847  0051B4  B4D8               	btfsc	status,2,c
 16848  0051B6  D7F5               	goto	l10045
 16849  0051B8  0A03               	xorlw	3	; case 2
 16850  0051BA  B4D8               	btfsc	status,2,c
 16851  0051BC  D7F0               	goto	l10041
 16852                           
 16853                           ;diskio.c: 50: return 0x01;
 16854  0051BE  0E01               	movlw	1
 16855  0051C0  0012               	return		;funcret
 16856  0051C2                     __end_of_disk_status:
 16857                           	callstack 0
 16858                           
 16859 ;; *************** function _sdc_disk_status *****************
 16860 ;; Defined at:
 16861 ;;		line 588 in file "bibliotecas/diskio.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;  pdrv            1    wreg     unsigned char 
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;  pdrv            1   26[COMRAM] unsigned char 
 16866 ;;  stat            1    0        unsigned char 
 16867 ;;  cont            1    0        unsigned char 
 16868 ;;  buff            1    0        unsigned char 
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      unsigned char 
 16871 ;; Registers used:
 16872 ;;		wreg, status,2
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16878 ;;      Params:         0       0       0       0       0       0       0       0       0
 16879 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16881 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16882 ;;Total ram usage:        2 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; Hardware stack levels required when called:    3
 16885 ;; This function calls:
 16886 ;;		Nothing
 16887 ;; This function is called by:
 16888 ;;		_disk_status
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text84
 16893  005546                     __ptext84:
 16894                           	callstack 0
 16895  005546                     _sdc_disk_status:
 16896                           	callstack 17
 16897                           
 16898                           ;incstack = 0
 16899                           ;sdc_disk_status@pdrv stored from wreg
 16900  005546  6E1B               	movwf	sdc_disk_status@pdrv^0,c
 16901                           
 16902                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 16903  005548  501B               	movf	sdc_disk_status@pdrv^0,w,c
 16904  00554A  B4D8               	btfsc	status,2,c
 16905  00554C  D002               	goto	l9915
 16906  00554E  0E01               	movlw	1
 16907  005550  0012               	return	
 16908  005552                     l9915:
 16909                           
 16910                           ;diskio.c: 595: return FR_OK;
 16911  005552  0E00               	movlw	0
 16912  005554  0012               	return		;funcret
 16913  005556                     __end_of_sdc_disk_status:
 16914                           	callstack 0
 16915                           
 16916 ;; *************** function _sync *****************
 16917 ;; Defined at:
 16918 ;;		line 119 in file "bibliotecas/tff.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;		None
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;  fs              2   45[COMRAM] PTR struct _FATFS
 16923 ;;		 -> NULL(0), fs(544), 
 16924 ;; Return value:  Size  Location     Type
 16925 ;;                  1    wreg      enum E155
 16926 ;; Registers used:
 16927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16928 ;; Tracked objects:
 16929 ;;		On entry : 3F/0
 16930 ;;		On exit  : 0/0
 16931 ;;		Unchanged: 0/0
 16932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16933 ;;      Params:         0       0       0       0       0       0       0       0       0
 16934 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16936 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16937 ;;Total ram usage:        2 bytes
 16938 ;; Hardware stack levels used:    1
 16939 ;; Hardware stack levels required when called:    9
 16940 ;; This function calls:
 16941 ;;		_disk_ioctl
 16942 ;;		_move_window
 16943 ;; This function is called by:
 16944 ;;		_f_sync
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           	psect	text85
 16949  004CBA                     __ptext85:
 16950                           	callstack 0
 16951  004CBA                     _sync:
 16952                           	callstack 15
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;tff.c: 121: FATFS *fs = FatFs;
 16956                           
 16957                           ;incstack = 0
 16958  004CBA  C034  F02E         	movff	_FatFs,sync@fs
 16959  004CBE  C035  F02F         	movff	_FatFs+1,sync@fs+1
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;tff.c: 124: fs->winflag = 1;
 16963  004CC2  EE20 F01F          	lfsr	2,31
 16964  004CC6  502E               	movf	sync@fs^0,w,c
 16965  004CC8  26D9               	addwf	fsr2l,f,c
 16966  004CCA  502F               	movf	(sync@fs+1)^0,w,c
 16967  004CCC  22DA               	addwfc	fsr2h,f,c
 16968  004CCE  0E01               	movlw	1
 16969  004CD0  6EDF               	movwf	indf2,c
 16970                           
 16971                           ; BSR set to: 0
 16972                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 16973  004CD2  0E00               	movlw	0
 16974  004CD4  6F77               	movwf	move_window@sector& (0+255),b
 16975  004CD6  0E00               	movlw	0
 16976  004CD8  6F78               	movwf	(move_window@sector+1)& (0+255),b
 16977  004CDA  0E00               	movlw	0
 16978  004CDC  6F79               	movwf	(move_window@sector+2)& (0+255),b
 16979  004CDE  0E00               	movlw	0
 16980  004CE0  6F7A               	movwf	(move_window@sector+3)& (0+255),b
 16981  004CE2  EC9A  F015         	call	_move_window	;wreg free
 16982  004CE6  0900               	iorlw	0
 16983  004CE8  A4D8               	btfss	status,2,c
 16984  004CEA  D002               	goto	l10881
 16985  004CEC                     u12380:
 16986  004CEC  0E08               	movlw	8
 16987  004CEE  0012               	return	
 16988  004CF0                     l10881:
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 16992  004CF0  0E00               	movlw	0
 16993  004CF2  6E1A               	movwf	disk_ioctl@cmd^0,c
 16994  004CF4  0E00               	movlw	0
 16995  004CF6  6E1B               	movwf	disk_ioctl@buff^0,c
 16996  004CF8  0E00               	movlw	0
 16997  004CFA  6E1C               	movwf	(disk_ioctl@buff+1)^0,c
 16998  004CFC  0E00               	movlw	0
 16999  004CFE  EC30  F02A         	call	_disk_ioctl
 17000  004D02  0900               	iorlw	0
 17001  004D04  A4D8               	btfss	status,2,c
 17002  004D06  D7F2               	goto	u12380
 17003                           
 17004                           ;tff.c: 143: return FR_OK;
 17005  004D08  0E00               	movlw	0
 17006  004D0A  0012               	return		;funcret
 17007  004D0C                     __end_of_sync:
 17008                           	callstack 0
 17009                           
 17010 ;; *************** function _move_window *****************
 17011 ;; Defined at:
 17012 ;;		line 77 in file "bibliotecas/tff.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;  sector          4   23[BANK0 ] unsigned long 
 17015 ;; Auto vars:     Size  Location     Type
 17016 ;;  n               1   37[BANK0 ] unsigned char 
 17017 ;;  wsect           4   38[BANK0 ] unsigned long 
 17018 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 17019 ;;		 -> NULL(0), fs(544), 
 17020 ;; Return value:  Size  Location     Type
 17021 ;;                  1    wreg      enum E105
 17022 ;; Registers used:
 17023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17024 ;; Tracked objects:
 17025 ;;		On entry : 3F/0
 17026 ;;		On exit  : 3F/0
 17027 ;;		Unchanged: 0/0
 17028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17029 ;;      Params:         0       4       0       0       0       0       0       0       0
 17030 ;;      Locals:         0       7       0       0       0       0       0       0       0
 17031 ;;      Temps:          0      10       0       0       0       0       0       0       0
 17032 ;;      Totals:         0      21       0       0       0       0       0       0       0
 17033 ;;Total ram usage:       21 bytes
 17034 ;; Hardware stack levels used:    1
 17035 ;; Hardware stack levels required when called:    8
 17036 ;; This function calls:
 17037 ;;		_disk_read
 17038 ;;		_disk_write
 17039 ;; This function is called by:
 17040 ;;		_sync
 17041 ;;		_get_cluster
 17042 ;;		_put_cluster
 17043 ;;		_trace_path
 17044 ;;		_reserve_direntry
 17045 ;;		_f_open
 17046 ;;		_f_write
 17047 ;;		_f_sync
 17048 ;;		_f_read
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           	psect	text86
 17053  002B34                     __ptext86:
 17054                           	callstack 0
 17055  002B34                     _move_window:
 17056                           	callstack 14
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 17060                           
 17061                           ;incstack = 0
 17062  002B34  C034  F08A         	movff	_FatFs,move_window@fs
 17063  002B38  C035  F08B         	movff	_FatFs+1,move_window@fs+1
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;tff.c: 85: wsect = fs->winsect;
 17067  002B3C  EE20 F004          	lfsr	2,4
 17068  002B40  518A               	movf	move_window@fs& (0+255),w,b
 17069  002B42  26D9               	addwf	fsr2l,f,c
 17070  002B44  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17071  002B46  22DA               	addwfc	fsr2h,f,c
 17072  002B48  CFDE F086          	movff	postinc2,move_window@wsect
 17073  002B4C  CFDE F087          	movff	postinc2,move_window@wsect+1
 17074  002B50  CFDE F088          	movff	postinc2,move_window@wsect+2
 17075  002B54  CFDE F089          	movff	postinc2,move_window@wsect+3
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;tff.c: 86: if (wsect != sector) {
 17079  002B58  5177               	movf	move_window@sector& (0+255),w,b
 17080  002B5A  1986               	xorwf	move_window@wsect& (0+255),w,b
 17081  002B5C  E10A               	bnz	u11110
 17082  002B5E  5178               	movf	(move_window@sector+1)& (0+255),w,b
 17083  002B60  1987               	xorwf	(move_window@wsect+1)& (0+255),w,b
 17084  002B62  E107               	bnz	u11110
 17085  002B64  5179               	movf	(move_window@sector+2)& (0+255),w,b
 17086  002B66  1988               	xorwf	(move_window@wsect+2)& (0+255),w,b
 17087  002B68  E104               	bnz	u11110
 17088  002B6A  517A               	movf	(move_window@sector+3)& (0+255),w,b
 17089  002B6C  1989               	xorwf	(move_window@wsect+3)& (0+255),w,b
 17090  002B6E  B4D8               	btfsc	status,2,c
 17091  002B70  D0B4               	goto	l10027
 17092  002B72                     u11110:
 17093                           
 17094                           ; BSR set to: 0
 17095                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 17096  002B72  EE20 F01F          	lfsr	2,31
 17097  002B76  518A               	movf	move_window@fs& (0+255),w,b
 17098  002B78  26D9               	addwf	fsr2l,f,c
 17099  002B7A  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17100  002B7C  22DA               	addwfc	fsr2h,f,c
 17101  002B7E  50DF               	movf	indf2,w,c
 17102  002B80  B4D8               	btfsc	status,2,c
 17103  002B82  D081               	goto	l10017
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 17107  002B84  0E20               	movlw	32
 17108  002B86  258A               	addwf	move_window@fs& (0+255),w,b
 17109  002B88  6F6C               	movwf	disk_write@buff& (0+255),b
 17110  002B8A  0E00               	movlw	0
 17111  002B8C  218B               	addwfc	(move_window@fs+1)& (0+255),w,b
 17112  002B8E  6F6D               	movwf	(disk_write@buff+1)& (0+255),b
 17113  002B90  C086  F06E         	movff	move_window@wsect,disk_write@sector
 17114  002B94  C087  F06F         	movff	move_window@wsect+1,disk_write@sector+1
 17115  002B98  C088  F070         	movff	move_window@wsect+2,disk_write@sector+2
 17116  002B9C  C089  F071         	movff	move_window@wsect+3,disk_write@sector+3
 17117  002BA0  0E01               	movlw	1
 17118  002BA2  6F72               	movwf	disk_write@count& (0+255),b
 17119  002BA4  0E00               	movlw	0
 17120  002BA6  ECD6  F026         	call	_disk_write
 17121  002BAA  0900               	iorlw	0
 17122  002BAC  B4D8               	btfsc	status,2,c
 17123  002BAE  D002               	goto	l10001
 17124  002BB0                     u11130:
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;tff.c: 91: return FALSE;
 17128  002BB0  0E00               	movlw	0
 17129  002BB2  0012               	return	
 17130  002BB4                     l10001:
 17131                           
 17132                           ; BSR set to: 0
 17133                           ;tff.c: 92: fs->winflag = 0;
 17134  002BB4  EE20 F01F          	lfsr	2,31
 17135  002BB8  518A               	movf	move_window@fs& (0+255),w,b
 17136  002BBA  26D9               	addwf	fsr2l,f,c
 17137  002BBC  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17138  002BBE  22DA               	addwfc	fsr2h,f,c
 17139  002BC0  0E00               	movlw	0
 17140  002BC2  6EDF               	movwf	indf2,c
 17141                           
 17142                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 17143  002BC4  EE20 F008          	lfsr	2,8
 17144  002BC8  518A               	movf	move_window@fs& (0+255),w,b
 17145  002BCA  26D9               	addwf	fsr2l,f,c
 17146  002BCC  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17147  002BCE  22DA               	addwfc	fsr2h,f,c
 17148  002BD0  CFDE F07B          	movff	postinc2,??_move_window
 17149  002BD4  CFDE F07C          	movff	postinc2,??_move_window+1
 17150  002BD8  CFDE F07D          	movff	postinc2,??_move_window+2
 17151  002BDC  CFDE F07E          	movff	postinc2,??_move_window+3
 17152  002BE0  EE20 F014          	lfsr	2,20
 17153  002BE4  518A               	movf	move_window@fs& (0+255),w,b
 17154  002BE6  26D9               	addwf	fsr2l,f,c
 17155  002BE8  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17156  002BEA  22DA               	addwfc	fsr2h,f,c
 17157  002BEC  CFDE F07F          	movff	postinc2,??_move_window+4
 17158  002BF0  CFDD F080          	movff	postdec2,??_move_window+5
 17159  002BF4  517F               	movf	(??_move_window+4)& (0+255),w,b
 17160  002BF6  257B               	addwf	??_move_window& (0+255),w,b
 17161  002BF8  6F81               	movwf	(??_move_window+6)& (0+255),b
 17162  002BFA  5180               	movf	(??_move_window+5)& (0+255),w,b
 17163  002BFC  217C               	addwfc	(??_move_window+1)& (0+255),w,b
 17164  002BFE  6F82               	movwf	(??_move_window+7)& (0+255),b
 17165  002C00  0E00               	movlw	0
 17166  002C02  217D               	addwfc	(??_move_window+2)& (0+255),w,b
 17167  002C04  6F83               	movwf	(??_move_window+8)& (0+255),b
 17168  002C06  0E00               	movlw	0
 17169  002C08  217E               	addwfc	(??_move_window+3)& (0+255),w,b
 17170  002C0A  6F84               	movwf	(??_move_window+9)& (0+255),b
 17171  002C0C  5181               	movf	(??_move_window+6)& (0+255),w,b
 17172  002C0E  5D86               	subwf	move_window@wsect& (0+255),w,b
 17173  002C10  5182               	movf	(??_move_window+7)& (0+255),w,b
 17174  002C12  5987               	subwfb	(move_window@wsect+1)& (0+255),w,b
 17175  002C14  5183               	movf	(??_move_window+8)& (0+255),w,b
 17176  002C16  5988               	subwfb	(move_window@wsect+2)& (0+255),w,b
 17177  002C18  5184               	movf	(??_move_window+9)& (0+255),w,b
 17178  002C1A  5989               	subwfb	(move_window@wsect+3)& (0+255),w,b
 17179  002C1C  B0D8               	btfsc	status,0,c
 17180  002C1E  D033               	goto	l10017
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 17184  002C20  EE20 F01E          	lfsr	2,30
 17185  002C24  518A               	movf	move_window@fs& (0+255),w,b
 17186  002C26  26D9               	addwf	fsr2l,f,c
 17187  002C28  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17188  002C2A  22DA               	addwfc	fsr2h,f,c
 17189  002C2C  50DF               	movf	indf2,w,c
 17190  002C2E  6F85               	movwf	move_window@n& (0+255),b
 17191  002C30                     l10005:
 17192                           
 17193                           ; BSR set to: 0
 17194  002C30  0E02               	movlw	2
 17195  002C32  6185               	cpfslt	move_window@n& (0+255),b
 17196  002C34  D001               	goto	l10009
 17197  002C36  D027               	goto	l10017
 17198  002C38                     l10009:
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;tff.c: 95: wsect += fs->sects_fat;
 17202  002C38  EE20 F014          	lfsr	2,20
 17203  002C3C  518A               	movf	move_window@fs& (0+255),w,b
 17204  002C3E  26D9               	addwf	fsr2l,f,c
 17205  002C40  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17206  002C42  22DA               	addwfc	fsr2h,f,c
 17207  002C44  CFDE F07B          	movff	postinc2,??_move_window
 17208  002C48  CFDD F07C          	movff	postdec2,??_move_window+1
 17209  002C4C  517B               	movf	??_move_window& (0+255),w,b
 17210  002C4E  2786               	addwf	move_window@wsect& (0+255),f,b
 17211  002C50  517C               	movf	(??_move_window+1)& (0+255),w,b
 17212  002C52  2387               	addwfc	(move_window@wsect+1)& (0+255),f,b
 17213  002C54  0E00               	movlw	0
 17214  002C56  2388               	addwfc	(move_window@wsect+2)& (0+255),f,b
 17215  002C58  0E00               	movlw	0
 17216  002C5A  2389               	addwfc	(move_window@wsect+3)& (0+255),f,b
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 17220  002C5C  0E20               	movlw	32
 17221  002C5E  258A               	addwf	move_window@fs& (0+255),w,b
 17222  002C60  6F6C               	movwf	disk_write@buff& (0+255),b
 17223  002C62  0E00               	movlw	0
 17224  002C64  218B               	addwfc	(move_window@fs+1)& (0+255),w,b
 17225  002C66  6F6D               	movwf	(disk_write@buff+1)& (0+255),b
 17226  002C68  C086  F06E         	movff	move_window@wsect,disk_write@sector
 17227  002C6C  C087  F06F         	movff	move_window@wsect+1,disk_write@sector+1
 17228  002C70  C088  F070         	movff	move_window@wsect+2,disk_write@sector+2
 17229  002C74  C089  F071         	movff	move_window@wsect+3,disk_write@sector+3
 17230  002C78  0E01               	movlw	1
 17231  002C7A  6F72               	movwf	disk_write@count& (0+255),b
 17232  002C7C  0E00               	movlw	0
 17233  002C7E  ECD6  F026         	call	_disk_write
 17234                           
 17235                           ; BSR set to: 0
 17236  002C82  0785               	decf	move_window@n& (0+255),f,b
 17237  002C84  D7D5               	goto	l10005
 17238  002C86                     l10017:
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 17242  002C86  5177               	movf	move_window@sector& (0+255),w,b
 17243  002C88  1178               	iorwf	(move_window@sector+1)& (0+255),w,b
 17244  002C8A  1179               	iorwf	(move_window@sector+2)& (0+255),w,b
 17245  002C8C  117A               	iorwf	(move_window@sector+3)& (0+255),w,b
 17246  002C8E  B4D8               	btfsc	status,2,c
 17247  002C90  D024               	goto	l10027
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 17251  002C92  0E20               	movlw	32
 17252  002C94  258A               	addwf	move_window@fs& (0+255),w,b
 17253  002C96  6F6C               	movwf	disk_read@buff& (0+255),b
 17254  002C98  0E00               	movlw	0
 17255  002C9A  218B               	addwfc	(move_window@fs+1)& (0+255),w,b
 17256  002C9C  6F6D               	movwf	(disk_read@buff+1)& (0+255),b
 17257  002C9E  C077  F06E         	movff	move_window@sector,disk_read@sector
 17258  002CA2  C078  F06F         	movff	move_window@sector+1,disk_read@sector+1
 17259  002CA6  C079  F070         	movff	move_window@sector+2,disk_read@sector+2
 17260  002CAA  C07A  F071         	movff	move_window@sector+3,disk_read@sector+3
 17261  002CAE  0E01               	movlw	1
 17262  002CB0  6F72               	movwf	disk_read@count& (0+255),b
 17263  002CB2  0E00               	movlw	0
 17264  002CB4  ECF2  F023         	call	_disk_read
 17265  002CB8  0900               	iorlw	0
 17266  002CBA  A4D8               	btfss	status,2,c
 17267  002CBC  D779               	goto	u11130
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;tff.c: 104: fs->winsect = sector;
 17271  002CBE  EE20 F004          	lfsr	2,4
 17272  002CC2  518A               	movf	move_window@fs& (0+255),w,b
 17273  002CC4  26D9               	addwf	fsr2l,f,c
 17274  002CC6  518B               	movf	(move_window@fs+1)& (0+255),w,b
 17275  002CC8  22DA               	addwfc	fsr2h,f,c
 17276  002CCA  C077  FFDE         	movff	move_window@sector,postinc2
 17277  002CCE  C078  FFDE         	movff	move_window@sector+1,postinc2
 17278  002CD2  C079  FFDE         	movff	move_window@sector+2,postinc2
 17279  002CD6  C07A  FFDE         	movff	move_window@sector+3,postinc2
 17280  002CDA                     l10027:
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 17284  002CDA  0E01               	movlw	1
 17285                           
 17286                           ; BSR set to: 0
 17287  002CDC  0012               	return		;funcret
 17288  002CDE                     __end_of_move_window:
 17289                           	callstack 0
 17290                           
 17291 ;; *************** function _disk_write *****************
 17292 ;; Defined at:
 17293 ;;		line 150 in file "bibliotecas/diskio.c"
 17294 ;; Parameters:    Size  Location     Type
 17295 ;;  pdrv            1    wreg     unsigned char 
 17296 ;;  buff            2   12[BANK0 ] PTR const unsigned char 
 17297 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17298 ;;  sector          4   14[BANK0 ] unsigned long 
 17299 ;;  count           1   18[BANK0 ] unsigned char 
 17300 ;; Auto vars:     Size  Location     Type
 17301 ;;  pdrv            1   19[BANK0 ] unsigned char 
 17302 ;;  result          2   20[BANK0 ] int 
 17303 ;;  res             1   22[BANK0 ] enum E25
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      enum E25
 17306 ;; Registers used:
 17307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17308 ;; Tracked objects:
 17309 ;;		On entry : 3F/0
 17310 ;;		On exit  : 3F/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17313 ;;      Params:         0       7       0       0       0       0       0       0       0
 17314 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17315 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17316 ;;      Totals:         1      11       0       0       0       0       0       0       0
 17317 ;;Total ram usage:       12 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:    7
 17320 ;; This function calls:
 17321 ;;		_sdc_disk_write
 17322 ;; This function is called by:
 17323 ;;		_move_window
 17324 ;;		_reserve_direntry
 17325 ;;		_f_write
 17326 ;; This function uses a non-reentrant model
 17327 ;;
 17328                           
 17329                           	psect	text87
 17330  004DAC                     __ptext87:
 17331                           	callstack 0
 17332  004DAC                     _disk_write:
 17333                           	callstack 14
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;incstack = 0
 17337                           ;disk_write@pdrv stored from wreg
 17338  004DAC  6F73               	movwf	disk_write@pdrv& (0+255),b
 17339                           
 17340                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 17341  004DAE  D018               	goto	l9881
 17342  004DB0                     l9859:
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 17346  004DB0  C06C  F026         	movff	disk_write@buff,sdc_disk_write@p_buff
 17347  004DB4  C06D  F027         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 17348  004DB8  C06E  F028         	movff	disk_write@sector,sdc_disk_write@sector
 17349  004DBC  C06F  F029         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 17350  004DC0  C070  F02A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 17351  004DC4  C071  F02B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 17352  004DC8  C072  F02C         	movff	disk_write@count,sdc_disk_write@count
 17353  004DCC  ECBD  F014         	call	_sdc_disk_write	;wreg free
 17354  004DD0  6E2D               	movwf	??_disk_write^0,c
 17355  004DD2  502D               	movf	??_disk_write^0,w,c
 17356  004DD4  6F74               	movwf	disk_write@result& (0+255),b
 17357  004DD6  6B75               	clrf	(disk_write@result+1)& (0+255),b
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;diskio.c: 165: res = result;
 17361  004DD8  C074  F076         	movff	disk_write@result,disk_write@res
 17362  004DDC                     l9863:
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;diskio.c: 168: return res;
 17366  004DDC  5176               	movf	disk_write@res& (0+255),w,b
 17367  004DDE  0012               	return	
 17368  004DE0                     l9881:
 17369  004DE0  0100               	movlb	0	; () banked
 17370  004DE2  5173               	movf	disk_write@pdrv& (0+255),w,b
 17371                           
 17372                           ; Switch size 1, requested type "simple"
 17373                           ; Number of cases is 3, Range of values is 0 to 2
 17374                           ; switch strategies available:
 17375                           ; Name         Instructions Cycles
 17376                           ; simple_byte           10     6 (average)
 17377                           ;	Chosen strategy is simple_byte
 17378  004DE4  0A00               	xorlw	0	; case 0
 17379  004DE6  B4D8               	btfsc	status,2,c
 17380  004DE8  D7E3               	goto	l9859
 17381  004DEA  0A01               	xorlw	1	; case 1
 17382  004DEC  B4D8               	btfsc	status,2,c
 17383  004DEE  D7E0               	goto	l9859
 17384  004DF0  0A03               	xorlw	3	; case 2
 17385  004DF2  B4D8               	btfsc	status,2,c
 17386  004DF4  D7F3               	goto	l9863
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;diskio.c: 189: return RES_PARERR;
 17390  004DF6  0E04               	movlw	4
 17391                           
 17392                           ; BSR set to: 0
 17393  004DF8  0012               	return		;funcret
 17394  004DFA                     __end_of_disk_write:
 17395                           	callstack 0
 17396                           
 17397 ;; *************** function _sdc_disk_write *****************
 17398 ;; Defined at:
 17399 ;;		line 509 in file "bibliotecas/diskio.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  p_buff          2   37[COMRAM] PTR const unsigned char 
 17402 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 17403 ;;  sector          4   39[COMRAM] unsigned long 
 17404 ;;  count           1   43[COMRAM] unsigned char 
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;  j               2    9[BANK0 ] int 
 17407 ;;  count1          2    6[BANK0 ] int 
 17408 ;;  i               2    0        int 
 17409 ;;  buff            1   11[BANK0 ] unsigned char 
 17410 ;;  res             1    8[BANK0 ] enum E25
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  1    wreg      enum E25
 17413 ;; Registers used:
 17414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 3F/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17420 ;;      Params:         7       0       0       0       0       0       0       0       0
 17421 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17422 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17423 ;;      Totals:         7      12       0       0       0       0       0       0       0
 17424 ;;Total ram usage:       19 bytes
 17425 ;; Hardware stack levels used:    1
 17426 ;; Hardware stack levels required when called:    6
 17427 ;; This function calls:
 17428 ;;		_command
 17429 ;;		_dummy_clocks
 17430 ;;		_escreve_SPI
 17431 ;;		_leitura_SPI
 17432 ;;		_proceed
 17433 ;;		_response
 17434 ;; This function is called by:
 17435 ;;		_disk_write
 17436 ;; This function uses a non-reentrant model
 17437 ;;
 17438                           
 17439                           	psect	text88
 17440  00297A                     __ptext88:
 17441                           	callstack 0
 17442  00297A                     _sdc_disk_write:
 17443                           	callstack 14
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;incstack = 0
 17447  00297A  0E00               	movlw	0
 17448  00297C  0100               	movlb	0	; () banked
 17449  00297E  6F67               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 17450  002980  0E00               	movlw	0
 17451  002982  6F66               	movwf	sdc_disk_write@count1& (0+255),b
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;diskio.c: 515: if(count>1)
 17455  002984  0E01               	movlw	1
 17456  002986  642C               	cpfsgt	sdc_disk_write@count^0,c
 17457  002988  D06A               	goto	l144
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 17461  00298A  9E8B               	bcf	139,7,c	;volatile
 17462                           
 17463                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 17464  00298C  9A8A               	bcf	138,5,c	;volatile
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;diskio.c: 519: dummy_clocks(10);
 17468  00298E  0E0A               	movlw	10
 17469  002990  EC57  F028         	call	_dummy_clocks
 17470                           
 17471                           ;diskio.c: 520: command(0X57, count, 0XFF);
 17472  002994  502C               	movf	sdc_disk_write@count^0,w,c
 17473  002996  6E1F               	movwf	command@arg^0,c
 17474  002998  6A20               	clrf	(command@arg+1)^0,c
 17475  00299A  6A21               	clrf	(command@arg+2)^0,c
 17476  00299C  6A22               	clrf	(command@arg+3)^0,c
 17477  00299E  0EFF               	movlw	255
 17478  0029A0  6E23               	movwf	command@CRC^0,c
 17479  0029A2  0E57               	movlw	87
 17480  0029A4  ECB1  F025         	call	_command
 17481                           
 17482                           ;diskio.c: 521: proceed();
 17483  0029A8  ECC7  F02A         	call	_proceed	;wreg free
 17484  0029AC                     l9747:
 17485                           
 17486                           ;diskio.c: 523: buff = response();
 17487  0029AC  ECC1  F02A         	call	_response	;wreg free
 17488  0029B0  0100               	movlb	0	; () banked
 17489  0029B2  6F6B               	movwf	sdc_disk_write@buff& (0+255),b
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;diskio.c: 524: }while(buff!=0X00);
 17493  0029B4  516B               	movf	sdc_disk_write@buff& (0+255),w,b
 17494  0029B6  A4D8               	btfss	status,2,c
 17495  0029B8  D7F9               	goto	l9747
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;diskio.c: 526: dummy_clocks(10);
 17499  0029BA  0E0A               	movlw	10
 17500  0029BC  EC57  F028         	call	_dummy_clocks
 17501                           
 17502                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 17503  0029C0  C028  F060         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17504  0029C4  C029  F061         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17505  0029C8  C02A  F062         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17506  0029CC  C02B  F063         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17507  0029D0  0E09               	movlw	9
 17508  0029D2                     u10865:
 17509  0029D2  90D8               	bcf	status,0,c
 17510  0029D4  0100               	movlb	0	; () banked
 17511  0029D6  3760               	rlcf	??_sdc_disk_write& (0+255),f,b
 17512  0029D8  3761               	rlcf	(??_sdc_disk_write+1)& (0+255),f,b
 17513  0029DA  3762               	rlcf	(??_sdc_disk_write+2)& (0+255),f,b
 17514  0029DC  3763               	rlcf	(??_sdc_disk_write+3)& (0+255),f,b
 17515  0029DE  2EE8               	decfsz	wreg,f,c
 17516  0029E0  D7F8               	goto	u10865
 17517  0029E2  C060  F01F         	movff	??_sdc_disk_write,command@arg
 17518  0029E6  C061  F020         	movff	??_sdc_disk_write+1,command@arg+1
 17519  0029EA  C062  F021         	movff	??_sdc_disk_write+2,command@arg+2
 17520  0029EE  C063  F022         	movff	??_sdc_disk_write+3,command@arg+3
 17521  0029F2  0EFF               	movlw	255
 17522  0029F4  6E23               	movwf	command@CRC^0,c
 17523  0029F6  0E59               	movlw	89
 17524  0029F8  ECB1  F025         	call	_command
 17525                           
 17526                           ;diskio.c: 528: proceed();
 17527  0029FC  ECC7  F02A         	call	_proceed	;wreg free
 17528  002A00                     l9755:
 17529                           
 17530                           ;diskio.c: 530: buff = response();
 17531  002A00  ECC1  F02A         	call	_response	;wreg free
 17532  002A04  0100               	movlb	0	; () banked
 17533  002A06  6F6B               	movwf	sdc_disk_write@buff& (0+255),b
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;diskio.c: 531: }while(buff!=0X00);
 17537  002A08  516B               	movf	sdc_disk_write@buff& (0+255),w,b
 17538  002A0A  A4D8               	btfss	status,2,c
 17539  002A0C  D7F9               	goto	l9755
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;diskio.c: 533: dummy_clocks(1);
 17543  002A0E  0E01               	movlw	1
 17544  002A10  EC57  F028         	call	_dummy_clocks
 17545                           
 17546                           ;diskio.c: 534: escreve_SPI(0XFC);
 17547  002A14  0EFC               	movlw	252
 17548  002A16  ECAB  F02A         	call	_escreve_SPI
 17549                           
 17550                           ;diskio.c: 535: for(j=0;j<512;j++)
 17551  002A1A  0E00               	movlw	0
 17552  002A1C  0100               	movlb	0	; () banked
 17553  002A1E  6F6A               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17554  002A20  0E00               	movlw	0
 17555  002A22  6F69               	movwf	sdc_disk_write@j& (0+255),b
 17556  002A24                     l9769:
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 17560  002A24  C026  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17561  002A28  C027  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17562  002A2C  50DF               	movf	indf2,w,c
 17563  002A2E  ECAB  F02A         	call	_escreve_SPI
 17564                           
 17565                           ;diskio.c: 538: p_buff++;
 17566  002A32  4A26               	infsnz	sdc_disk_write@p_buff^0,f,c
 17567  002A34  2A27               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17568  002A36  0100               	movlb	0	; () banked
 17569  002A38  4B69               	infsnz	sdc_disk_write@j& (0+255),f,b
 17570  002A3A  2B6A               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17571                           
 17572                           ; BSR set to: 0
 17573  002A3C  BF6A               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17574  002A3E  D7F2               	goto	l9769
 17575  002A40  0E02               	movlw	2
 17576  002A42  5D6A               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17577  002A44  A0D8               	btfss	status,0,c
 17578  002A46  D7EE               	goto	l9769
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 17582  002A48  ECCD  F02A         	call	_leitura_SPI	;wreg free
 17583                           
 17584                           ;diskio.c: 541: leitura_SPI();
 17585  002A4C  ECCD  F02A         	call	_leitura_SPI	;wreg free
 17586                           
 17587                           ;diskio.c: 543: dummy_clocks(1);
 17588  002A50  0E01               	movlw	1
 17589  002A52  EC57  F028         	call	_dummy_clocks
 17590                           
 17591                           ;diskio.c: 544: escreve_SPI(0XFD);
 17592  002A56  0EFD               	movlw	253
 17593  002A58  ECAB  F02A         	call	_escreve_SPI
 17594                           
 17595                           ;diskio.c: 546: }
 17596  002A5C  D068               	goto	u10920
 17597  002A5E                     l144:
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 17601  002A5E  9E8B               	bcf	139,7,c	;volatile
 17602                           
 17603                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 17604  002A60  9A8A               	bcf	138,5,c	;volatile
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;diskio.c: 551: dummy_clocks(10);
 17608  002A62  0E0A               	movlw	10
 17609  002A64  EC57  F028         	call	_dummy_clocks
 17610                           
 17611                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 17612  002A68  C028  F060         	movff	sdc_disk_write@sector,??_sdc_disk_write
 17613  002A6C  C029  F061         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 17614  002A70  C02A  F062         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 17615  002A74  C02B  F063         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 17616  002A78  0E09               	movlw	9
 17617  002A7A                     u10895:
 17618  002A7A  90D8               	bcf	status,0,c
 17619  002A7C  0100               	movlb	0	; () banked
 17620  002A7E  3760               	rlcf	??_sdc_disk_write& (0+255),f,b
 17621  002A80  3761               	rlcf	(??_sdc_disk_write+1)& (0+255),f,b
 17622  002A82  3762               	rlcf	(??_sdc_disk_write+2)& (0+255),f,b
 17623  002A84  3763               	rlcf	(??_sdc_disk_write+3)& (0+255),f,b
 17624  002A86  2EE8               	decfsz	wreg,f,c
 17625  002A88  D7F8               	goto	u10895
 17626  002A8A  C060  F01F         	movff	??_sdc_disk_write,command@arg
 17627  002A8E  C061  F020         	movff	??_sdc_disk_write+1,command@arg+1
 17628  002A92  C062  F021         	movff	??_sdc_disk_write+2,command@arg+2
 17629  002A96  C063  F022         	movff	??_sdc_disk_write+3,command@arg+3
 17630  002A9A  0E00               	movlw	0
 17631  002A9C  6E23               	movwf	command@CRC^0,c
 17632  002A9E  0E58               	movlw	88
 17633  002AA0  ECB1  F025         	call	_command
 17634                           
 17635                           ;diskio.c: 553: proceed();
 17636  002AA4  ECC7  F02A         	call	_proceed	;wreg free
 17637  002AA8                     l9787:
 17638                           
 17639                           ;diskio.c: 555: buff = response();
 17640  002AA8  ECC1  F02A         	call	_response	;wreg free
 17641  002AAC  0100               	movlb	0	; () banked
 17642  002AAE  6F6B               	movwf	sdc_disk_write@buff& (0+255),b
 17643                           
 17644                           ; BSR set to: 0
 17645                           ;diskio.c: 556: }while(buff!=0X00);
 17646  002AB0  516B               	movf	sdc_disk_write@buff& (0+255),w,b
 17647  002AB2  A4D8               	btfss	status,2,c
 17648  002AB4  D7F9               	goto	l9787
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 17652  002AB6  9A8A               	bcf	138,5,c	;volatile
 17653                           
 17654                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 17655  002AB8  9E8B               	bcf	139,7,c	;volatile
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;diskio.c: 560: dummy_clocks(1);
 17659  002ABA  0E01               	movlw	1
 17660  002ABC  EC57  F028         	call	_dummy_clocks
 17661                           
 17662                           ;diskio.c: 561: escreve_SPI(0XFE);
 17663  002AC0  0EFE               	movlw	254
 17664  002AC2  ECAB  F02A         	call	_escreve_SPI
 17665                           
 17666                           ;diskio.c: 562: for(j=0;j<512;j++)
 17667  002AC6  0E00               	movlw	0
 17668  002AC8  0100               	movlb	0	; () banked
 17669  002ACA  6F6A               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17670  002ACC  0E00               	movlw	0
 17671  002ACE  6F69               	movwf	sdc_disk_write@j& (0+255),b
 17672  002AD0                     l9801:
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 17676  002AD0  C026  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17677  002AD4  C027  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17678  002AD8  50DF               	movf	indf2,w,c
 17679  002ADA  ECAB  F02A         	call	_escreve_SPI
 17680                           
 17681                           ;diskio.c: 565: p_buff++;
 17682  002ADE  4A26               	infsnz	sdc_disk_write@p_buff^0,f,c
 17683  002AE0  2A27               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17684  002AE2  0100               	movlb	0	; () banked
 17685  002AE4  4B69               	infsnz	sdc_disk_write@j& (0+255),f,b
 17686  002AE6  2B6A               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17687                           
 17688                           ; BSR set to: 0
 17689  002AE8  BF6A               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17690  002AEA  D7F2               	goto	l9801
 17691  002AEC  0E02               	movlw	2
 17692  002AEE  5D6A               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17693  002AF0  A0D8               	btfss	status,0,c
 17694  002AF2  D7EE               	goto	l9801
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 17698  002AF4  ECCD  F02A         	call	_leitura_SPI	;wreg free
 17699                           
 17700                           ;diskio.c: 568: leitura_SPI();
 17701  002AF8  ECCD  F02A         	call	_leitura_SPI	;wreg free
 17702                           
 17703                           ;diskio.c: 570: dummy_clocks(10);
 17704  002AFC  0E0A               	movlw	10
 17705  002AFE  EC57  F028         	call	_dummy_clocks
 17706                           
 17707                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 17708  002B02  0E00               	movlw	0
 17709  002B04  6E1F               	movwf	command@arg^0,c
 17710  002B06  0E00               	movlw	0
 17711  002B08  6E20               	movwf	(command@arg+1)^0,c
 17712  002B0A  0E00               	movlw	0
 17713  002B0C  6E21               	movwf	(command@arg+2)^0,c
 17714  002B0E  0E00               	movlw	0
 17715  002B10  6E22               	movwf	(command@arg+3)^0,c
 17716  002B12  0E00               	movlw	0
 17717  002B14  6E23               	movwf	command@CRC^0,c
 17718  002B16  0E4D               	movlw	77
 17719  002B18  ECB1  F025         	call	_command
 17720                           
 17721                           ;diskio.c: 572: proceed();
 17722  002B1C  ECC7  F02A         	call	_proceed	;wreg free
 17723  002B20                     l9817:
 17724                           
 17725                           ;diskio.c: 574: buff = response();
 17726  002B20  ECC1  F02A         	call	_response	;wreg free
 17727  002B24  0100               	movlb	0	; () banked
 17728  002B26  6F6B               	movwf	sdc_disk_write@buff& (0+255),b
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;diskio.c: 575: }while(buff!=0X00 );
 17732  002B28  516B               	movf	sdc_disk_write@buff& (0+255),w,b
 17733  002B2A  A4D8               	btfss	status,2,c
 17734  002B2C  D7F9               	goto	l9817
 17735  002B2E                     u10920:
 17736                           
 17737                           ;diskio.c: 576: };diskio.c: 577: return res;
 17738  002B2E  0100               	movlb	0	; () banked
 17739  002B30  5168               	movf	sdc_disk_write@res& (0+255),w,b
 17740                           
 17741                           ; BSR set to: 0
 17742  002B32  0012               	return		;funcret
 17743  002B34                     __end_of_sdc_disk_write:
 17744                           	callstack 0
 17745                           
 17746 ;; *************** function _disk_read *****************
 17747 ;; Defined at:
 17748 ;;		line 97 in file "bibliotecas/diskio.c"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;  pdrv            1    wreg     unsigned char 
 17751 ;;  buff            2   12[BANK0 ] PTR unsigned char 
 17752 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17753 ;;  sector          4   14[BANK0 ] unsigned long 
 17754 ;;  count           1   18[BANK0 ] unsigned char 
 17755 ;; Auto vars:     Size  Location     Type
 17756 ;;  pdrv            1   19[BANK0 ] unsigned char 
 17757 ;;  result          2   20[BANK0 ] int 
 17758 ;;  res             1   22[BANK0 ] enum E25
 17759 ;; Return value:  Size  Location     Type
 17760 ;;                  1    wreg      enum E25
 17761 ;; Registers used:
 17762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17763 ;; Tracked objects:
 17764 ;;		On entry : 3F/0
 17765 ;;		On exit  : 3F/0
 17766 ;;		Unchanged: 0/0
 17767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17768 ;;      Params:         0       7       0       0       0       0       0       0       0
 17769 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17770 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17771 ;;      Totals:         1      11       0       0       0       0       0       0       0
 17772 ;;Total ram usage:       12 bytes
 17773 ;; Hardware stack levels used:    1
 17774 ;; Hardware stack levels required when called:    7
 17775 ;; This function calls:
 17776 ;;		_sdc_disk_read
 17777 ;; This function is called by:
 17778 ;;		_move_window
 17779 ;;		_check_fs
 17780 ;;		_f_read
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784                           	psect	text89
 17785  0047E4                     __ptext89:
 17786                           	callstack 0
 17787  0047E4                     _disk_read:
 17788                           	callstack 14
 17789                           
 17790                           ; BSR set to: 0
 17791                           ;incstack = 0
 17792                           ;disk_read@pdrv stored from wreg
 17793  0047E4  6F73               	movwf	disk_read@pdrv& (0+255),b
 17794                           
 17795                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 17796  0047E6  D029               	goto	l9851
 17797  0047E8                     l9827:
 17798                           
 17799                           ; BSR set to: 0
 17800                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 17801  0047E8  C06C  F026         	movff	disk_read@buff,sdc_disk_read@p_buff
 17802  0047EC  C06D  F027         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17803  0047F0  C06E  F028         	movff	disk_read@sector,sdc_disk_read@sector
 17804  0047F4  C06F  F029         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17805  0047F8  C070  F02A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17806  0047FC  C071  F02B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17807  004800  C072  F02C         	movff	disk_read@count,sdc_disk_read@count
 17808  004804  ECD5  F019         	call	_sdc_disk_read	;wreg free
 17809  004808  6E2D               	movwf	??_disk_read^0,c
 17810  00480A  502D               	movf	??_disk_read^0,w,c
 17811  00480C  6F74               	movwf	disk_read@result& (0+255),b
 17812  00480E  6B75               	clrf	(disk_read@result+1)& (0+255),b
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;diskio.c: 115: res = result;
 17816  004810  C074  F076         	movff	disk_read@result,disk_read@res
 17817  004814                     l9831:
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;diskio.c: 117: return res;
 17821  004814  5176               	movf	disk_read@res& (0+255),w,b
 17822  004816  0012               	return	
 17823  004818                     l9835:
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 17827  004818  C06C  F026         	movff	disk_read@buff,sdc_disk_read@p_buff
 17828  00481C  C06D  F027         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17829  004820  C06E  F028         	movff	disk_read@sector,sdc_disk_read@sector
 17830  004824  C06F  F029         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17831  004828  C070  F02A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17832  00482C  C071  F02B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17833  004830  C072  F02C         	movff	disk_read@count,sdc_disk_read@count
 17834  004834  ECD5  F019         	call	_sdc_disk_read	;wreg free
 17835  004838  D7E7               	goto	L10
 17836  00483A                     l9851:
 17837  00483A  0100               	movlb	0	; () banked
 17838  00483C  5173               	movf	disk_read@pdrv& (0+255),w,b
 17839                           
 17840                           ; Switch size 1, requested type "simple"
 17841                           ; Number of cases is 3, Range of values is 0 to 2
 17842                           ; switch strategies available:
 17843                           ; Name         Instructions Cycles
 17844                           ; simple_byte           10     6 (average)
 17845                           ;	Chosen strategy is simple_byte
 17846  00483E  0A00               	xorlw	0	; case 0
 17847  004840  B4D8               	btfsc	status,2,c
 17848  004842  D7D2               	goto	l9827
 17849  004844  0A01               	xorlw	1	; case 1
 17850  004846  B4D8               	btfsc	status,2,c
 17851  004848  D7E7               	goto	l9835
 17852  00484A  0A03               	xorlw	3	; case 2
 17853  00484C  B4D8               	btfsc	status,2,c
 17854  00484E  D7E2               	goto	l9831
 17855                           
 17856                           ; BSR set to: 0
 17857                           ;diskio.c: 141: return RES_PARERR;
 17858  004850  0E04               	movlw	4
 17859                           
 17860                           ; BSR set to: 0
 17861  004852  0012               	return		;funcret
 17862  004854                     __end_of_disk_read:
 17863                           	callstack 0
 17864                           
 17865 ;; *************** function _sdc_disk_read *****************
 17866 ;; Defined at:
 17867 ;;		line 439 in file "bibliotecas/diskio.c"
 17868 ;; Parameters:    Size  Location     Type
 17869 ;;  p_buff          2   37[COMRAM] PTR unsigned char 
 17870 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17871 ;;  sector          4   39[COMRAM] unsigned long 
 17872 ;;  count           1   43[COMRAM] unsigned char 
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;  start_add       4    5[BANK0 ] unsigned long 
 17875 ;;  length          2    9[BANK0 ] int 
 17876 ;;  count1          2    0        int 
 17877 ;;  i               2    0        int 
 17878 ;;  buff            1   11[BANK0 ] unsigned char 
 17879 ;;  ptr             1    0        unsigned char 
 17880 ;;  res             1    0        enum E25
 17881 ;; Return value:  Size  Location     Type
 17882 ;;                  1    wreg      enum E25
 17883 ;; Registers used:
 17884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17885 ;; Tracked objects:
 17886 ;;		On entry : 0/0
 17887 ;;		On exit  : 3F/0
 17888 ;;		Unchanged: 0/0
 17889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17890 ;;      Params:         7       0       0       0       0       0       0       0       0
 17891 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17892 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17893 ;;      Totals:         7      12       0       0       0       0       0       0       0
 17894 ;;Total ram usage:       19 bytes
 17895 ;; Hardware stack levels used:    1
 17896 ;; Hardware stack levels required when called:    6
 17897 ;; This function calls:
 17898 ;;		_command
 17899 ;;		_dummy_clocks
 17900 ;;		_proceed
 17901 ;;		_response
 17902 ;; This function is called by:
 17903 ;;		_disk_read
 17904 ;; This function uses a non-reentrant model
 17905 ;;
 17906                           
 17907                           	psect	text90
 17908  0033AA                     __ptext90:
 17909                           	callstack 0
 17910  0033AA                     _sdc_disk_read:
 17911                           	callstack 14
 17912                           
 17913                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;incstack = 0
 17917  0033AA  0E0A               	movlw	10
 17918  0033AC  EC57  F028         	call	_dummy_clocks
 17919                           
 17920                           ;diskio.c: 452: start_add = sector*512;
 17921  0033B0  C028  F060         	movff	sdc_disk_read@sector,??_sdc_disk_read
 17922  0033B4  C029  F061         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 17923  0033B8  C02A  F062         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 17924  0033BC  C02B  F063         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 17925  0033C0  0E09               	movlw	9
 17926  0033C2                     u10775:
 17927  0033C2  90D8               	bcf	status,0,c
 17928  0033C4  0100               	movlb	0	; () banked
 17929  0033C6  3760               	rlcf	??_sdc_disk_read& (0+255),f,b
 17930  0033C8  3761               	rlcf	(??_sdc_disk_read+1)& (0+255),f,b
 17931  0033CA  3762               	rlcf	(??_sdc_disk_read+2)& (0+255),f,b
 17932  0033CC  3763               	rlcf	(??_sdc_disk_read+3)& (0+255),f,b
 17933  0033CE  2EE8               	decfsz	wreg,f,c
 17934  0033D0  D7F8               	goto	u10775
 17935  0033D2  C060  F065         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 17936  0033D6  C061  F066         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 17937  0033DA  C062  F067         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 17938  0033DE  C063  F068         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;diskio.c: 455: if(sector != 1)
 17942  0033E2  0428               	decf	sdc_disk_read@sector^0,w,c
 17943  0033E4  1029               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 17944  0033E6  102A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 17945  0033E8  102B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 17946  0033EA  B4D8               	btfsc	status,2,c
 17947  0033EC  D01C               	goto	l9697
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 17951  0033EE  0E0A               	movlw	10
 17952  0033F0  EC57  F028         	call	_dummy_clocks
 17953                           
 17954                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 17955  0033F4  C065  F01F         	movff	sdc_disk_read@start_add,command@arg
 17956  0033F8  C066  F020         	movff	sdc_disk_read@start_add+1,command@arg+1
 17957  0033FC  C067  F021         	movff	sdc_disk_read@start_add+2,command@arg+2
 17958  003400  C068  F022         	movff	sdc_disk_read@start_add+3,command@arg+3
 17959  003404  0E00               	movlw	0
 17960  003406  6E23               	movwf	command@CRC^0,c
 17961  003408  0E52               	movlw	82
 17962  00340A  ECB1  F025         	call	_command
 17963                           
 17964                           ;diskio.c: 459: proceed();
 17965  00340E  ECC7  F02A         	call	_proceed	;wreg free
 17966  003412                     l9691:
 17967                           
 17968                           ;diskio.c: 461: buff = response();
 17969  003412  ECC1  F02A         	call	_response	;wreg free
 17970  003416  0100               	movlb	0	; () banked
 17971  003418  6F6B               	movwf	sdc_disk_read@buff& (0+255),b
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;diskio.c: 462: }while(buff!=0X00);
 17975  00341A  516B               	movf	sdc_disk_read@buff& (0+255),w,b
 17976  00341C  A4D8               	btfss	status,2,c
 17977  00341E  D7F9               	goto	l9691
 17978  003420                     u10790:
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;diskio.c: 463: proceed();
 17982  003420  ECC7  F02A         	call	_proceed	;wreg free
 17983                           
 17984                           ;diskio.c: 464: }
 17985  003424  D01E               	goto	l9709
 17986  003426                     l9697:
 17987                           
 17988                           ; BSR set to: 0
 17989                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 17990  003426  0E0A               	movlw	10
 17991  003428  EC57  F028         	call	_dummy_clocks
 17992                           
 17993                           ;diskio.c: 468: command(0X51,sector ,0X00);
 17994  00342C  C028  F01F         	movff	sdc_disk_read@sector,command@arg
 17995  003430  C029  F020         	movff	sdc_disk_read@sector+1,command@arg+1
 17996  003434  C02A  F021         	movff	sdc_disk_read@sector+2,command@arg+2
 17997  003438  C02B  F022         	movff	sdc_disk_read@sector+3,command@arg+3
 17998  00343C  0E00               	movlw	0
 17999  00343E  6E23               	movwf	command@CRC^0,c
 18000  003440  0E51               	movlw	81
 18001  003442  ECB1  F025         	call	_command
 18002                           
 18003                           ;diskio.c: 469: proceed();
 18004  003446  ECC7  F02A         	call	_proceed	;wreg free
 18005  00344A                     l9701:
 18006                           
 18007                           ;diskio.c: 471: buff = response();
 18008  00344A  ECC1  F02A         	call	_response	;wreg free
 18009  00344E  0100               	movlb	0	; () banked
 18010  003450  6F6B               	movwf	sdc_disk_read@buff& (0+255),b
 18011                           
 18012                           ; BSR set to: 0
 18013                           ;diskio.c: 472: }while(buff!=0X00);
 18014  003452  516B               	movf	sdc_disk_read@buff& (0+255),w,b
 18015  003454  B4D8               	btfsc	status,2,c
 18016  003456  D7E4               	goto	u10790
 18017  003458  D7F8               	goto	l9701
 18018  00345A                     l9707:
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 18022  00345A  ECC1  F02A         	call	_response	;wreg free
 18023  00345E  0100               	movlb	0	; () banked
 18024  003460  6F6B               	movwf	sdc_disk_read@buff& (0+255),b
 18025  003462                     l9709:
 18026  003462  0EFE               	movlw	254
 18027  003464  0100               	movlb	0	; () banked
 18028  003466  196B               	xorwf	sdc_disk_read@buff& (0+255),w,b
 18029  003468  A4D8               	btfss	status,2,c
 18030  00346A  D7F7               	goto	l9707
 18031                           
 18032                           ; BSR set to: 0
 18033                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 18034  00346C  0E00               	movlw	0
 18035  00346E  6F6A               	movwf	(sdc_disk_read@length+1)& (0+255),b
 18036  003470  0E00               	movlw	0
 18037  003472  6F69               	movwf	sdc_disk_read@length& (0+255),b
 18038                           
 18039                           ;diskio.c: 484: while ( length < 512 )
 18040  003474  D00C               	goto	l9717
 18041  003476                     l9713:
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 18045  003476  5169               	movf	sdc_disk_read@length& (0+255),w,b
 18046  003478  2426               	addwf	sdc_disk_read@p_buff^0,w,c
 18047  00347A  6ED9               	movwf	fsr2l,c
 18048  00347C  516A               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 18049  00347E  2027               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 18050  003480  6EDA               	movwf	fsr2h,c
 18051  003482  ECC1  F02A         	call	_response	;wreg free
 18052  003486  6EDF               	movwf	indf2,c
 18053                           
 18054                           ;diskio.c: 487: length++;
 18055  003488  0100               	movlb	0	; () banked
 18056  00348A  4B69               	infsnz	sdc_disk_read@length& (0+255),f,b
 18057  00348C  2B6A               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 18058  00348E                     l9717:
 18059                           
 18060                           ; BSR set to: 0
 18061  00348E  BF6A               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 18062  003490  D7F2               	goto	l9713
 18063  003492  0E02               	movlw	2
 18064  003494  5D6A               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 18065  003496  A0D8               	btfss	status,0,c
 18066  003498  D7EE               	goto	l9713
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;diskio.c: 491: dummy_clocks(10);
 18070                           
 18071                           ; BSR set to: 0
 18072  00349A  0E0A               	movlw	10
 18073  00349C  EC57  F028         	call	_dummy_clocks
 18074                           
 18075                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 18076  0034A0  0E00               	movlw	0
 18077  0034A2  6E1F               	movwf	command@arg^0,c
 18078  0034A4  0E00               	movlw	0
 18079  0034A6  6E20               	movwf	(command@arg+1)^0,c
 18080  0034A8  0E00               	movlw	0
 18081  0034AA  6E21               	movwf	(command@arg+2)^0,c
 18082  0034AC  0E00               	movlw	0
 18083  0034AE  6E22               	movwf	(command@arg+3)^0,c
 18084  0034B0  0E00               	movlw	0
 18085  0034B2  6E23               	movwf	command@CRC^0,c
 18086  0034B4  0E4C               	movlw	76
 18087  0034B6  ECB1  F025         	call	_command
 18088                           
 18089                           ;diskio.c: 494: proceed();
 18090  0034BA  ECC7  F02A         	call	_proceed	;wreg free
 18091  0034BE                     l9727:
 18092                           
 18093                           ;diskio.c: 496: buff = response();
 18094  0034BE  ECC1  F02A         	call	_response	;wreg free
 18095  0034C2  0100               	movlb	0	; () banked
 18096  0034C4  6F6B               	movwf	sdc_disk_read@buff& (0+255),b
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;diskio.c: 497: }while(buff!=0xFF);
 18100  0034C6  296B               	incf	sdc_disk_read@buff& (0+255),w,b
 18101  0034C8  A4D8               	btfss	status,2,c
 18102  0034CA  D7F9               	goto	l9727
 18103                           
 18104                           ; BSR set to: 0
 18105                           ;diskio.c: 500: return RES_OK;
 18106                           
 18107                           ; BSR set to: 0
 18108  0034CC  0E00               	movlw	0
 18109                           
 18110                           ; BSR set to: 0
 18111  0034CE  0012               	return		;funcret
 18112  0034D0                     __end_of_sdc_disk_read:
 18113                           	callstack 0
 18114                           
 18115 ;; *************** function _response *****************
 18116 ;; Defined at:
 18117 ;;		line 60 in file "bibliotecas/SDCard.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;		None
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;  buff            1   25[COMRAM] unsigned char 
 18122 ;; Return value:  Size  Location     Type
 18123 ;;                  1    wreg      unsigned char 
 18124 ;; Registers used:
 18125 ;;		wreg, status,2, cstack
 18126 ;; Tracked objects:
 18127 ;;		On entry : 0/0
 18128 ;;		On exit  : 0/0
 18129 ;;		Unchanged: 0/0
 18130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18131 ;;      Params:         0       0       0       0       0       0       0       0       0
 18132 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18134 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18135 ;;Total ram usage:        1 bytes
 18136 ;; Hardware stack levels used:    1
 18137 ;; Hardware stack levels required when called:    4
 18138 ;; This function calls:
 18139 ;;		_leitura_SPI
 18140 ;; This function is called by:
 18141 ;;		_sdc_reset
 18142 ;;		_sdc_disk_initialize
 18143 ;;		_sdc_disk_read
 18144 ;;		_sdc_disk_write
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           	psect	text91
 18149  005582                     __ptext91:
 18150                           	callstack 0
 18151  005582                     _response:
 18152                           	callstack 15
 18153                           
 18154                           ;SDCard.c: 62: unsigned char buff;;SDCard.c: 63: LATBbits.LATB5 = 0;
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;incstack = 0
 18158  005582  9A8A               	bcf	138,5,c	;volatile
 18159                           
 18160                           ;SDCard.c: 64: buff= leitura_SPI();
 18161  005584  ECCD  F02A         	call	_leitura_SPI	;wreg free
 18162  005588  6E1A               	movwf	response@buff^0,c
 18163                           
 18164                           ;SDCard.c: 65: return buff;
 18165  00558A  501A               	movf	response@buff^0,w,c
 18166  00558C  0012               	return		;funcret
 18167  00558E                     __end_of_response:
 18168                           	callstack 0
 18169                           
 18170 ;; *************** function _proceed *****************
 18171 ;; Defined at:
 18172 ;;		line 93 in file "bibliotecas/SDCard.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;		None
 18175 ;; Auto vars:     Size  Location     Type
 18176 ;;		None
 18177 ;; Return value:  Size  Location     Type
 18178 ;;                  1    wreg      void 
 18179 ;; Registers used:
 18180 ;;		wreg, cstack
 18181 ;; Tracked objects:
 18182 ;;		On entry : 0/0
 18183 ;;		On exit  : 0/0
 18184 ;;		Unchanged: 0/0
 18185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18186 ;;      Params:         0       0       0       0       0       0       0       0       0
 18187 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18189 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18190 ;;Total ram usage:        0 bytes
 18191 ;; Hardware stack levels used:    1
 18192 ;; Hardware stack levels required when called:    4
 18193 ;; This function calls:
 18194 ;;		_escreve_SPI
 18195 ;; This function is called by:
 18196 ;;		_sdc_reset
 18197 ;;		_sdc_disk_initialize
 18198 ;;		_sdc_disk_read
 18199 ;;		_sdc_disk_write
 18200 ;; This function uses a non-reentrant model
 18201 ;;
 18202                           
 18203                           	psect	text92
 18204  00558E                     __ptext92:
 18205                           	callstack 0
 18206  00558E                     _proceed:
 18207                           	callstack 15
 18208                           
 18209                           ;SDCard.c: 95: LATBbits.LATB5 = 0;
 18210                           
 18211                           ;incstack = 0
 18212  00558E  9A8A               	bcf	138,5,c	;volatile
 18213                           
 18214                           ;SDCard.c: 96: escreve_SPI(0xFF);
 18215  005590  0EFF               	movlw	255
 18216  005592  ECAB  F02A         	call	_escreve_SPI
 18217                           
 18218                           ;SDCard.c: 97: LATBbits.LATB5 = 1;
 18219  005596  8A8A               	bsf	138,5,c	;volatile
 18220  005598  0012               	return		;funcret
 18221  00559A                     __end_of_proceed:
 18222                           	callstack 0
 18223                           
 18224 ;; *************** function _command *****************
 18225 ;; Defined at:
 18226 ;;		line 126 in file "bibliotecas/SDCard.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  CMD             1    wreg     unsigned char 
 18229 ;;  arg             4   30[COMRAM] unsigned long 
 18230 ;;  CRC             1   34[COMRAM] unsigned char 
 18231 ;; Auto vars:     Size  Location     Type
 18232 ;;  CMD             1   35[COMRAM] unsigned char 
 18233 ;;  argument        1   36[COMRAM] unsigned char 
 18234 ;; Return value:  Size  Location     Type
 18235 ;;                  1    wreg      void 
 18236 ;; Registers used:
 18237 ;;		wreg, status,2, status,0, cstack
 18238 ;; Tracked objects:
 18239 ;;		On entry : 0/0
 18240 ;;		On exit  : 0/0
 18241 ;;		Unchanged: 0/0
 18242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18243 ;;      Params:         5       0       0       0       0       0       0       0       0
 18244 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18246 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18247 ;;Total ram usage:        7 bytes
 18248 ;; Hardware stack levels used:    1
 18249 ;; Hardware stack levels required when called:    5
 18250 ;; This function calls:
 18251 ;;		_dummy_clocks
 18252 ;;		_escreve_SPI
 18253 ;;		_wait_ready
 18254 ;; This function is called by:
 18255 ;;		_sdc_reset
 18256 ;;		_sdc_disk_initialize
 18257 ;;		_sdc_disk_read
 18258 ;;		_sdc_disk_write
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           	psect	text93
 18263  004B62                     __ptext93:
 18264                           	callstack 0
 18265  004B62                     _command:
 18266                           	callstack 14
 18267                           
 18268                           ;incstack = 0
 18269                           ;command@CMD stored from wreg
 18270  004B62  6E24               	movwf	command@CMD^0,c
 18271                           
 18272                           ;SDCard.c: 128: unsigned char argument;;SDCard.c: 130: if (wait_ready() != 0xFF)
 18273  004B64  ECAE  F028         	call	_wait_ready	;wreg free
 18274  004B68  0AFF               	xorlw	255
 18275  004B6A  A4D8               	btfss	status,2,c
 18276  004B6C  D004               	goto	l608
 18277  004B6E  D008               	goto	u10760
 18278  004B70                     l9641:
 18279                           
 18280                           ;SDCard.c: 133: {;SDCard.c: 134: dummy_clocks(10);
 18281  004B70  0E0A               	movlw	10
 18282  004B72  EC57  F028         	call	_dummy_clocks
 18283  004B76                     l608:
 18284  004B76  ECAE  F028         	call	_wait_ready	;wreg free
 18285  004B7A  0AFF               	xorlw	255
 18286  004B7C  A4D8               	btfss	status,2,c
 18287  004B7E  D7F8               	goto	l9641
 18288  004B80                     u10760:
 18289                           
 18290                           ;SDCard.c: 135: };SDCard.c: 136: };SDCard.c: 137: escreve_SPI(0xFF);
 18291  004B80  0EFF               	movlw	255
 18292  004B82  ECAB  F02A         	call	_escreve_SPI
 18293                           
 18294                           ;SDCard.c: 138: escreve_SPI(CMD);
 18295  004B86  5024               	movf	command@CMD^0,w,c
 18296  004B88  ECAB  F02A         	call	_escreve_SPI
 18297                           
 18298                           ;SDCard.c: 139: argument = arg>>24;
 18299  004B8C  C022  F025         	movff	command@arg+3,command@argument
 18300                           
 18301                           ;SDCard.c: 140: escreve_SPI(argument);
 18302  004B90  5025               	movf	command@argument^0,w,c
 18303  004B92  ECAB  F02A         	call	_escreve_SPI
 18304                           
 18305                           ;SDCard.c: 141: argument = arg>>16;
 18306  004B96  C021  F025         	movff	command@arg+2,command@argument
 18307                           
 18308                           ;SDCard.c: 142: escreve_SPI(argument);
 18309  004B9A  5025               	movf	command@argument^0,w,c
 18310  004B9C  ECAB  F02A         	call	_escreve_SPI
 18311                           
 18312                           ;SDCard.c: 143: argument = arg>>8;
 18313  004BA0  C020  F025         	movff	command@arg+1,command@argument
 18314                           
 18315                           ;SDCard.c: 144: escreve_SPI(argument);
 18316  004BA4  5025               	movf	command@argument^0,w,c
 18317  004BA6  ECAB  F02A         	call	_escreve_SPI
 18318                           
 18319                           ;SDCard.c: 145: argument = arg;
 18320  004BAA  C01F  F025         	movff	command@arg,command@argument
 18321                           
 18322                           ;SDCard.c: 146: escreve_SPI(argument);
 18323  004BAE  5025               	movf	command@argument^0,w,c
 18324  004BB0  ECAB  F02A         	call	_escreve_SPI
 18325                           
 18326                           ;SDCard.c: 147: escreve_SPI(CRC);
 18327  004BB4  5023               	movf	command@CRC^0,w,c
 18328  004BB6  ECAB  F02A         	call	_escreve_SPI
 18329  004BBA  0012               	return		;funcret
 18330  004BBC                     __end_of_command:
 18331                           	callstack 0
 18332                           
 18333 ;; *************** function _wait_ready *****************
 18334 ;; Defined at:
 18335 ;;		line 106 in file "bibliotecas/SDCard.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;		None
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;  msg            10    0        unsigned char [10]
 18340 ;;  timeout         4   25[COMRAM] unsigned long 
 18341 ;;  res             1   29[COMRAM] unsigned char 
 18342 ;; Return value:  Size  Location     Type
 18343 ;;                  1    wreg      unsigned char 
 18344 ;; Registers used:
 18345 ;;		wreg, status,2, status,0, cstack
 18346 ;; Tracked objects:
 18347 ;;		On entry : 0/0
 18348 ;;		On exit  : 0/0
 18349 ;;		Unchanged: 0/0
 18350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18351 ;;      Params:         0       0       0       0       0       0       0       0       0
 18352 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18354 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18355 ;;Total ram usage:        5 bytes
 18356 ;; Hardware stack levels used:    1
 18357 ;; Hardware stack levels required when called:    4
 18358 ;; This function calls:
 18359 ;;		_leitura_SPI
 18360 ;; This function is called by:
 18361 ;;		_command
 18362 ;; This function uses a non-reentrant model
 18363 ;;
 18364                           
 18365                           	psect	text94
 18366  00515C                     __ptext94:
 18367                           	callstack 0
 18368  00515C                     _wait_ready:
 18369                           	callstack 14
 18370                           
 18371                           ;SDCard.c: 108: BYTE res;;SDCard.c: 109: DWORD timeout = 0x7FFF;
 18372                           
 18373                           ;incstack = 0
 18374  00515C  0EFF               	movlw	255
 18375  00515E  6E1A               	movwf	wait_ready@timeout^0,c
 18376  005160  0E7F               	movlw	127
 18377  005162  6E1B               	movwf	(wait_ready@timeout+1)^0,c
 18378  005164  0E00               	movlw	0
 18379  005166  6E1C               	movwf	(wait_ready@timeout+2)^0,c
 18380  005168  0E00               	movlw	0
 18381  00516A  6E1D               	movwf	(wait_ready@timeout+3)^0,c
 18382  00516C                     l9627:
 18383                           
 18384                           ;SDCard.c: 113: res = leitura_SPI();
 18385  00516C  ECCD  F02A         	call	_leitura_SPI	;wreg free
 18386  005170  6E1E               	movwf	wait_ready@res^0,c
 18387                           
 18388                           ;SDCard.c: 114: while ((res != 0xFF) && (--timeout));
 18389  005172  281E               	incf	wait_ready@res^0,w,c
 18390  005174  B4D8               	btfsc	status,2,c
 18391  005176  D00B               	goto	u10740
 18392  005178  061A               	decf	wait_ready@timeout^0,f,c
 18393  00517A  0E00               	movlw	0
 18394  00517C  5A1B               	subwfb	(wait_ready@timeout+1)^0,f,c
 18395  00517E  5A1C               	subwfb	(wait_ready@timeout+2)^0,f,c
 18396  005180  5A1D               	subwfb	(wait_ready@timeout+3)^0,f,c
 18397  005182  501A               	movf	wait_ready@timeout^0,w,c
 18398  005184  101B               	iorwf	(wait_ready@timeout+1)^0,w,c
 18399  005186  101C               	iorwf	(wait_ready@timeout+2)^0,w,c
 18400  005188  101D               	iorwf	(wait_ready@timeout+3)^0,w,c
 18401  00518A  A4D8               	btfss	status,2,c
 18402  00518C  D7EF               	goto	l9627
 18403  00518E                     u10740:
 18404                           
 18405                           ;SDCard.c: 116: return res;
 18406  00518E  501E               	movf	wait_ready@res^0,w,c
 18407  005190  0012               	return		;funcret
 18408  005192                     __end_of_wait_ready:
 18409                           	callstack 0
 18410                           
 18411 ;; *************** function _escreve_SPI *****************
 18412 ;; Defined at:
 18413 ;;		line 97 in file "bibliotecas/SPI.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;  dado            1    wreg     unsigned char 
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;  dado            1   26[COMRAM] unsigned char 
 18418 ;;  TempVar         1    0        unsigned char 
 18419 ;; Return value:  Size  Location     Type
 18420 ;;                  1    wreg      void 
 18421 ;; Registers used:
 18422 ;;		wreg
 18423 ;; Tracked objects:
 18424 ;;		On entry : 0/0
 18425 ;;		On exit  : 0/0
 18426 ;;		Unchanged: 0/0
 18427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18428 ;;      Params:         0       0       0       0       0       0       0       0       0
 18429 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18430 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18431 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18432 ;;Total ram usage:        2 bytes
 18433 ;; Hardware stack levels used:    1
 18434 ;; Hardware stack levels required when called:    3
 18435 ;; This function calls:
 18436 ;;		Nothing
 18437 ;; This function is called by:
 18438 ;;		_sdc_disk_write
 18439 ;;		_proceed
 18440 ;;		_command
 18441 ;; This function uses a non-reentrant model
 18442 ;;
 18443                           
 18444                           	psect	text95
 18445  005556                     __ptext95:
 18446                           	callstack 0
 18447  005556                     _escreve_SPI:
 18448                           	callstack 15
 18449                           
 18450                           ;incstack = 0
 18451                           ;escreve_SPI@dado stored from wreg
 18452  005556  6E1B               	movwf	escreve_SPI@dado^0,c
 18453  005558  50C9               	movf	201,w,c	;volatile
 18454                           
 18455                           ;SPI.c: 101: PIR1bits.SSPIF = 0;
 18456  00555A  969E               	bcf	158,3,c	;volatile
 18457                           
 18458                           ;SPI.c: 103: SSPBUF = dado;
 18459  00555C  C01B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 18460  005560                     l710:
 18461  005560  B69E               	btfsc	158,3,c	;volatile
 18462  005562  0012               	return	
 18463  005564  D7FD               	goto	l710
 18464  005566                     __end_of_escreve_SPI:
 18465                           	callstack 0
 18466                           
 18467 ;; *************** function _dummy_clocks *****************
 18468 ;; Defined at:
 18469 ;;		line 75 in file "bibliotecas/SDCard.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;  n               1    wreg     unsigned char 
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;  n               1   27[COMRAM] unsigned char 
 18474 ;;  i               2   28[COMRAM] unsigned int 
 18475 ;; Return value:  Size  Location     Type
 18476 ;;                  1    wreg      void 
 18477 ;; Registers used:
 18478 ;;		wreg, status,2, status,0, cstack
 18479 ;; Tracked objects:
 18480 ;;		On entry : 0/0
 18481 ;;		On exit  : 0/0
 18482 ;;		Unchanged: 0/0
 18483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18484 ;;      Params:         0       0       0       0       0       0       0       0       0
 18485 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18486 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18487 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18488 ;;Total ram usage:        5 bytes
 18489 ;; Hardware stack levels used:    1
 18490 ;; Hardware stack levels required when called:    4
 18491 ;; This function calls:
 18492 ;;		_leitura_SPI
 18493 ;; This function is called by:
 18494 ;;		_sdc_disk_initialize
 18495 ;;		_sdc_disk_read
 18496 ;;		_sdc_disk_write
 18497 ;;		_command
 18498 ;; This function uses a non-reentrant model
 18499 ;;
 18500                           
 18501                           	psect	text96
 18502  0050AE                     __ptext96:
 18503                           	callstack 0
 18504  0050AE                     _dummy_clocks:
 18505                           	callstack 15
 18506                           
 18507                           ;incstack = 0
 18508                           ;dummy_clocks@n stored from wreg
 18509  0050AE  6E1C               	movwf	dummy_clocks@n^0,c
 18510                           
 18511                           ;SDCard.c: 77: unsigned int i;;SDCard.c: 78: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 18512  0050B0  0E10               	movlw	16
 18513  0050B2  6E1A               	movwf	??_dummy_clocks^0,c
 18514  0050B4  0E94               	movlw	148
 18515  0050B6                     u16187:
 18516  0050B6  2EE8               	decfsz	wreg,f,c
 18517  0050B8  D7FE               	bra	u16187
 18518  0050BA  2E1A               	decfsz	??_dummy_clocks^0,f,c
 18519  0050BC  D7FC               	bra	u16187
 18520  0050BE  D000               	nop2	
 18521                           
 18522                           ;SDCard.c: 79: for(i=0;i<n;i++)
 18523  0050C0  0E00               	movlw	0
 18524  0050C2  6E1E               	movwf	(dummy_clocks@i+1)^0,c
 18525  0050C4  0E00               	movlw	0
 18526  0050C6  6E1D               	movwf	dummy_clocks@i^0,c
 18527  0050C8  D006               	goto	l9619
 18528  0050CA                     l592:
 18529                           
 18530                           ;SDCard.c: 80: {;SDCard.c: 81: LATBbits.LATB5 = 1;
 18531  0050CA  8A8A               	bsf	138,5,c	;volatile
 18532                           
 18533                           ;SDCard.c: 82: leitura_SPI();
 18534  0050CC  ECCD  F02A         	call	_leitura_SPI	;wreg free
 18535                           
 18536                           ;SDCard.c: 83: LATBbits.LATB5 = 0;
 18537  0050D0  9A8A               	bcf	138,5,c	;volatile
 18538  0050D2  4A1D               	infsnz	dummy_clocks@i^0,f,c
 18539  0050D4  2A1E               	incf	(dummy_clocks@i+1)^0,f,c
 18540  0050D6                     l9619:
 18541  0050D6  501C               	movf	dummy_clocks@n^0,w,c
 18542  0050D8  6E1A               	movwf	??_dummy_clocks^0,c
 18543  0050DA  6A1B               	clrf	(??_dummy_clocks+1)^0,c
 18544  0050DC  501A               	movf	??_dummy_clocks^0,w,c
 18545  0050DE  5C1D               	subwf	dummy_clocks@i^0,w,c
 18546  0050E0  501B               	movf	(??_dummy_clocks+1)^0,w,c
 18547  0050E2  581E               	subwfb	(dummy_clocks@i+1)^0,w,c
 18548  0050E4  B0D8               	btfsc	status,0,c
 18549  0050E6  0012               	return	
 18550  0050E8  D7F0               	goto	l592
 18551  0050EA                     __end_of_dummy_clocks:
 18552                           	callstack 0
 18553                           
 18554 ;; *************** function _leitura_SPI *****************
 18555 ;; Defined at:
 18556 ;;		line 82 in file "bibliotecas/SPI.c"
 18557 ;; Parameters:    Size  Location     Type
 18558 ;;		None
 18559 ;; Auto vars:     Size  Location     Type
 18560 ;;		None
 18561 ;; Return value:  Size  Location     Type
 18562 ;;                  1    wreg      unsigned char 
 18563 ;; Registers used:
 18564 ;;		wreg, status,2
 18565 ;; Tracked objects:
 18566 ;;		On entry : 0/0
 18567 ;;		On exit  : 0/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18570 ;;      Params:         0       0       0       0       0       0       0       0       0
 18571 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18573 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18574 ;;Total ram usage:        0 bytes
 18575 ;; Hardware stack levels used:    1
 18576 ;; Hardware stack levels required when called:    3
 18577 ;; This function calls:
 18578 ;;		Nothing
 18579 ;; This function is called by:
 18580 ;;		_sdc_disk_write
 18581 ;;		_response
 18582 ;;		_dummy_clocks
 18583 ;;		_wait_ready
 18584 ;; This function uses a non-reentrant model
 18585 ;;
 18586                           
 18587                           	psect	text97
 18588  00559A                     __ptext97:
 18589                           	callstack 0
 18590  00559A                     _leitura_SPI:
 18591                           	callstack 15
 18592                           
 18593                           ;SPI.c: 84: SSPBUF = 0xFF;
 18594                           
 18595                           ;incstack = 0
 18596  00559A  68C9               	setf	201,c	;volatile
 18597                           
 18598                           ;SPI.c: 85: SSPSTATbits.BF = 0;
 18599  00559C  90C7               	bcf	199,0,c	;volatile
 18600  00559E                     l704:
 18601  00559E  A0C7               	btfss	199,0,c	;volatile
 18602  0055A0  D7FE               	goto	l704
 18603                           
 18604                           ;SPI.c: 87: return (SSPBUF);
 18605  0055A2  50C9               	movf	201,w,c	;volatile
 18606  0055A4  0012               	return		;funcret
 18607  0055A6                     __end_of_leitura_SPI:
 18608                           	callstack 0
 18609                           
 18610 ;; *************** function _disk_ioctl *****************
 18611 ;; Defined at:
 18612 ;;		line 198 in file "bibliotecas/diskio.c"
 18613 ;; Parameters:    Size  Location     Type
 18614 ;;  pdrv            1    wreg     unsigned char 
 18615 ;;  cmd             1   25[COMRAM] unsigned char 
 18616 ;;  buff            2   26[COMRAM] PTR void 
 18617 ;;		 -> NULL(0), 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;  pdrv            1   28[COMRAM] unsigned char 
 18620 ;;  result          2    0        int 
 18621 ;;  res             1   29[COMRAM] enum E25
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  1    wreg      enum E25
 18624 ;; Registers used:
 18625 ;;		wreg, status,2, status,0
 18626 ;; Tracked objects:
 18627 ;;		On entry : 3F/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18631 ;;      Params:         3       0       0       0       0       0       0       0       0
 18632 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18634 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18635 ;;Total ram usage:        5 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:    3
 18638 ;; This function calls:
 18639 ;;		Nothing
 18640 ;; This function is called by:
 18641 ;;		_sync
 18642 ;; This function uses a non-reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text98
 18646  005460                     __ptext98:
 18647                           	callstack 0
 18648  005460                     _disk_ioctl:
 18649                           	callstack 20
 18650                           
 18651                           ;incstack = 0
 18652                           ;disk_ioctl@pdrv stored from wreg
 18653  005460  6E1D               	movwf	disk_ioctl@pdrv^0,c
 18654                           
 18655                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 18656  005462  D002               	goto	l10613
 18657  005464                     l68:
 18658                           
 18659                           ;diskio.c: 212: return res;
 18660  005464  501E               	movf	disk_ioctl@res^0,w,c
 18661  005466  0012               	return	
 18662  005468                     l10613:
 18663  005468  501D               	movf	disk_ioctl@pdrv^0,w,c
 18664                           
 18665                           ; Switch size 1, requested type "simple"
 18666                           ; Number of cases is 3, Range of values is 0 to 2
 18667                           ; switch strategies available:
 18668                           ; Name         Instructions Cycles
 18669                           ; simple_byte           10     6 (average)
 18670                           ;	Chosen strategy is simple_byte
 18671  00546A  0A00               	xorlw	0	; case 0
 18672  00546C  B4D8               	btfsc	status,2,c
 18673  00546E  D7FA               	goto	l68
 18674  005470  0A01               	xorlw	1	; case 1
 18675  005472  B4D8               	btfsc	status,2,c
 18676  005474  D7F7               	goto	l68
 18677  005476  0A03               	xorlw	3	; case 2
 18678  005478  B4D8               	btfsc	status,2,c
 18679  00547A  D7F4               	goto	l68
 18680                           
 18681                           ;diskio.c: 227: return RES_PARERR;
 18682  00547C  0E04               	movlw	4
 18683  00547E  0012               	return		;funcret
 18684  005480                     __end_of_disk_ioctl:
 18685                           	callstack 0
 18686                           
 18687 ;; *************** function _get_fattime *****************
 18688 ;; Defined at:
 18689 ;;		line 810 in file "bibliotecas/tff.c"
 18690 ;; Parameters:    Size  Location     Type
 18691 ;;		None
 18692 ;; Auto vars:     Size  Location     Type
 18693 ;;  f_time         10   33[COMRAM] struct .
 18694 ;; Return value:  Size  Location     Type
 18695 ;;                  4   29[COMRAM] unsigned long 
 18696 ;; Registers used:
 18697 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18698 ;; Tracked objects:
 18699 ;;		On entry : 3F/0
 18700 ;;		On exit  : 3F/0
 18701 ;;		Unchanged: 0/0
 18702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18703 ;;      Params:         4       0       0       0       0       0       0       0       0
 18704 ;;      Locals:        10       0       0       0       0       0       0       0       0
 18705 ;;      Temps:          0      38       0       0       0       0       0       0       0
 18706 ;;      Totals:        14      38       0       0       0       0       0       0       0
 18707 ;;Total ram usage:       52 bytes
 18708 ;; Hardware stack levels used:    1
 18709 ;; Hardware stack levels required when called:    4
 18710 ;; This function calls:
 18711 ;;		_GPSDay
 18712 ;;		_GPSHour
 18713 ;;		_GPSMinute
 18714 ;;		_GPSMonth
 18715 ;;		_GPSSecond
 18716 ;;		_GPSyear
 18717 ;; This function is called by:
 18718 ;;		_f_open
 18719 ;;		_f_sync
 18720 ;; This function uses a non-reentrant model
 18721 ;;
 18722                           
 18723                           	psect	text99
 18724  00312A                     __ptext99:
 18725                           	callstack 0
 18726  00312A                     _get_fattime:
 18727                           	callstack 21
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = GPSHour() - 3;
 18731                           
 18732                           ;incstack = 0
 18733  00312A  EC97  F029         	call	_GPSHour	;wreg free
 18734  00312E  0EFD               	movlw	253
 18735  003130  241A               	addwf	?_GPSHour^0,w,c
 18736  003132  6E22               	movwf	get_fattime@f_time^0,c
 18737  003134  0EFF               	movlw	255
 18738  003136  201B               	addwfc	(?_GPSHour+1)^0,w,c
 18739  003138  6E23               	movwf	(get_fattime@f_time+1)^0,c
 18740                           
 18741                           ;tff.c: 815: f_time.min = GPSMinute();
 18742  00313A  ECFE  F029         	call	_GPSMinute	;wreg free
 18743  00313E  C01A  F024         	movff	?_GPSMinute,get_fattime@f_time+2
 18744  003142  C01B  F025         	movff	?_GPSMinute+1,get_fattime@f_time+3
 18745                           
 18746                           ;tff.c: 816: f_time.seg = GPSSecond();
 18747  003146  ECDC  F029         	call	_GPSSecond	;wreg free
 18748  00314A  C01A  F026         	movff	?_GPSSecond,get_fattime@f_time+4
 18749  00314E  C01B  F027         	movff	?_GPSSecond+1,get_fattime@f_time+5
 18750                           
 18751                           ;tff.c: 817: f_time.ano = GPSyear() + 2000;
 18752  003152  ECCB  F029         	call	_GPSyear	;wreg free
 18753  003156  0ED0               	movlw	208
 18754  003158  241A               	addwf	?_GPSyear^0,w,c
 18755  00315A  6E2A               	movwf	(get_fattime@f_time+8)^0,c
 18756  00315C  0E07               	movlw	7
 18757  00315E  201B               	addwfc	(?_GPSyear+1)^0,w,c
 18758  003160  6E2B               	movwf	(get_fattime@f_time+9)^0,c
 18759                           
 18760                           ;tff.c: 818: f_time.mes = GPSMonth();
 18761  003162  ECED  F029         	call	_GPSMonth	;wreg free
 18762  003166  501A               	movf	?_GPSMonth^0,w,c
 18763  003168  6E29               	movwf	(get_fattime@f_time+7)^0,c
 18764                           
 18765                           ;tff.c: 819: f_time.dia = GPSDay();
 18766  00316A  EC0F  F02A         	call	_GPSDay	;wreg free
 18767  00316E  501A               	movf	?_GPSDay^0,w,c
 18768  003170  6E28               	movwf	(get_fattime@f_time+6)^0,c
 18769                           
 18770                           ; BSR set to: 1
 18771                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 18772  003172  90D8               	bcf	status,0,c
 18773  003174  3027               	rrcf	(get_fattime@f_time+5)^0,w,c
 18774  003176  0100               	movlb	0	; () banked
 18775  003178  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 18776  00317A  3026               	rrcf	(get_fattime@f_time+4)^0,w,c
 18777  00317C  6F60               	movwf	??_get_fattime& (0+255),b
 18778  00317E  5024               	movf	(get_fattime@f_time+2)^0,w,c
 18779  003180  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 18780  003182  5025               	movf	(get_fattime@f_time+3)^0,w,c
 18781  003184  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 18782  003186  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 18783  003188  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 18784  00318A  0E05               	movlw	5
 18785  00318C                     u12765:
 18786  00318C  90D8               	bcf	status,0,c
 18787  00318E  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 18788  003190  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 18789  003192  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 18790  003194  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 18791  003196  2EE8               	decfsz	wreg,f,c
 18792  003198  D7F9               	goto	u12765
 18793  00319A  5022               	movf	get_fattime@f_time^0,w,c
 18794  00319C  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 18795  00319E  5023               	movf	(get_fattime@f_time+1)^0,w,c
 18796  0031A0  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 18797  0031A2  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 18798  0031A4  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 18799  0031A6  0E0B               	movlw	11
 18800  0031A8                     u12775:
 18801  0031A8  90D8               	bcf	status,0,c
 18802  0031AA  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 18803  0031AC  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 18804  0031AE  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 18805  0031B0  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 18806  0031B2  2EE8               	decfsz	wreg,f,c
 18807  0031B4  D7F9               	goto	u12775
 18808  0031B6  C028  F06A         	movff	get_fattime@f_time+6,??_get_fattime+10
 18809  0031BA  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18810  0031BC  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 18811  0031BE  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 18812  0031C0  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 18813  0031C4  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 18814  0031C8  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18815  0031CA  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 18816  0031CC  C029  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 18817  0031D0  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 18818  0031D2  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 18819  0031D4  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 18820  0031D6  0E15               	movlw	21
 18821  0031D8                     u12785:
 18822  0031D8  90D8               	bcf	status,0,c
 18823  0031DA  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 18824  0031DC  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 18825  0031DE  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 18826  0031E0  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 18827  0031E2  2EE8               	decfsz	wreg,f,c
 18828  0031E4  D7F9               	goto	u12785
 18829  0031E6  0EC4               	movlw	196
 18830  0031E8  242A               	addwf	(get_fattime@f_time+8)^0,w,c
 18831  0031EA  6F72               	movwf	(??_get_fattime+18)& (0+255),b
 18832  0031EC  0EFF               	movlw	255
 18833  0031EE  202B               	addwfc	(get_fattime@f_time+9)^0,w,c
 18834  0031F0  6F73               	movwf	(??_get_fattime+19)& (0+255),b
 18835  0031F2  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 18836  0031F4  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 18837  0031F6  0E19               	movlw	25
 18838  0031F8                     u12795:
 18839  0031F8  90D8               	bcf	status,0,c
 18840  0031FA  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 18841  0031FC  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 18842  0031FE  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 18843  003200  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 18844  003202  2EE8               	decfsz	wreg,f,c
 18845  003204  D7F9               	goto	u12795
 18846  003206  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 18847  003208  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 18848  00320A  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 18849  00320C  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 18850  00320E  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 18851  003210  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 18852  003212  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 18853  003214  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 18854  003216  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 18855  003218  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 18856  00321A  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 18857  00321C  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 18858  00321E  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 18859  003220  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 18860  003222  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 18861  003224  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 18862  003226  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 18863  003228  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 18864  00322A  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 18865  00322C  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 18866  00322E  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 18867  003230  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 18868  003232  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 18869  003234  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 18870  003236  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 18871  003238  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 18872  00323A  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 18873  00323C  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 18874  00323E  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 18875  003240  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 18876  003242  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 18877  003244  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 18878  003246  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 18879  003248  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 18880  00324A  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 18881  00324C  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 18882  00324E  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 18883  003250  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 18884  003252  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 18885  003254  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 18886  003256  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 18887  003258  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 18888  00325A  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 18889  00325C  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 18890  00325E  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 18891  003260  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 18892  003262  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 18893  003264  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 18894  003266  5160               	movf	??_get_fattime& (0+255),w,b
 18895  003268  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 18896  00326A  6E1E               	movwf	?_get_fattime^0,c
 18897  00326C  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 18898  00326E  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 18899  003270  6E1F               	movwf	(?_get_fattime+1)^0,c
 18900  003272  0E00               	movlw	0
 18901  003274  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 18902  003276  6E20               	movwf	(?_get_fattime+2)^0,c
 18903  003278  0E00               	movlw	0
 18904  00327A  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 18905  00327C  6E21               	movwf	(?_get_fattime+3)^0,c
 18906                           
 18907                           ; BSR set to: 0
 18908  00327E  0012               	return		;funcret
 18909  003280                     __end_of_get_fattime:
 18910                           	callstack 0
 18911                           
 18912 ;; *************** function _GPSyear *****************
 18913 ;; Defined at:
 18914 ;;		line 192 in file "bibliotecas/GPS.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;		None
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  2   25[COMRAM] unsigned int 
 18921 ;; Registers used:
 18922 ;;		wreg, status,2, status,0, prodl, prodh
 18923 ;; Tracked objects:
 18924 ;;		On entry : 3F/1
 18925 ;;		On exit  : 3F/1
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18928 ;;      Params:         2       0       0       0       0       0       0       0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18930 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18931 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18932 ;;Total ram usage:        4 bytes
 18933 ;; Hardware stack levels used:    1
 18934 ;; Hardware stack levels required when called:    3
 18935 ;; This function calls:
 18936 ;;		Nothing
 18937 ;; This function is called by:
 18938 ;;		_get_fattime
 18939 ;; This function uses a non-reentrant model
 18940 ;;
 18941                           
 18942                           	psect	text100
 18943  005396                     __ptext100:
 18944                           	callstack 0
 18945  005396                     _GPSyear:
 18946                           	callstack 21
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;GPS.c: 194: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;incstack = 0
 18953  005396  51AC               	movf	(_rawDate+4)& (0+255),w,b
 18954  005398  0D0A               	mullw	10
 18955  00539A  CFF3 F01C          	movff	prodl,??_GPSyear
 18956  00539E  CFF4 F01D          	movff	prodh,??_GPSyear+1
 18957  0053A2  51AD               	movf	(_rawDate+5)& (0+255),w,b
 18958  0053A4  261C               	addwf	??_GPSyear^0,f,c
 18959  0053A6  0E00               	movlw	0
 18960  0053A8  221D               	addwfc	(??_GPSyear+1)^0,f,c
 18961  0053AA  0EF0               	movlw	240
 18962  0053AC  241C               	addwf	??_GPSyear^0,w,c
 18963  0053AE  6E1A               	movwf	?_GPSyear^0,c
 18964  0053B0  0EFD               	movlw	253
 18965  0053B2  201D               	addwfc	(??_GPSyear+1)^0,w,c
 18966  0053B4  6E1B               	movwf	(?_GPSyear+1)^0,c
 18967                           
 18968                           ; BSR set to: 1
 18969  0053B6  0012               	return		;funcret
 18970  0053B8                     __end_of_GPSyear:
 18971                           	callstack 0
 18972                           
 18973 ;; *************** function _GPSSecond *****************
 18974 ;; Defined at:
 18975 ;;		line 171 in file "bibliotecas/GPS.c"
 18976 ;; Parameters:    Size  Location     Type
 18977 ;;		None
 18978 ;; Auto vars:     Size  Location     Type
 18979 ;;		None
 18980 ;; Return value:  Size  Location     Type
 18981 ;;                  2   25[COMRAM] unsigned int 
 18982 ;; Registers used:
 18983 ;;		wreg, status,2, status,0, prodl, prodh
 18984 ;; Tracked objects:
 18985 ;;		On entry : 3F/1
 18986 ;;		On exit  : 3F/1
 18987 ;;		Unchanged: 0/0
 18988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18989 ;;      Params:         2       0       0       0       0       0       0       0       0
 18990 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18991 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18992 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18993 ;;Total ram usage:        4 bytes
 18994 ;; Hardware stack levels used:    1
 18995 ;; Hardware stack levels required when called:    3
 18996 ;; This function calls:
 18997 ;;		Nothing
 18998 ;; This function is called by:
 18999 ;;		_get_fattime
 19000 ;; This function uses a non-reentrant model
 19001 ;;
 19002                           
 19003                           	psect	text101
 19004  0053B8                     __ptext101:
 19005                           	callstack 0
 19006  0053B8                     _GPSSecond:
 19007                           	callstack 21
 19008                           
 19009                           ; BSR set to: 1
 19010                           ;GPS.c: 173: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;incstack = 0
 19014  0053B8  51A1               	movf	(_rawTime+4)& (0+255),w,b
 19015  0053BA  0D0A               	mullw	10
 19016  0053BC  CFF3 F01C          	movff	prodl,??_GPSSecond
 19017  0053C0  CFF4 F01D          	movff	prodh,??_GPSSecond+1
 19018  0053C4  51A2               	movf	(_rawTime+5)& (0+255),w,b
 19019  0053C6  261C               	addwf	??_GPSSecond^0,f,c
 19020  0053C8  0E00               	movlw	0
 19021  0053CA  221D               	addwfc	(??_GPSSecond+1)^0,f,c
 19022  0053CC  0EF0               	movlw	240
 19023  0053CE  241C               	addwf	??_GPSSecond^0,w,c
 19024  0053D0  6E1A               	movwf	?_GPSSecond^0,c
 19025  0053D2  0EFD               	movlw	253
 19026  0053D4  201D               	addwfc	(??_GPSSecond+1)^0,w,c
 19027  0053D6  6E1B               	movwf	(?_GPSSecond+1)^0,c
 19028                           
 19029                           ; BSR set to: 1
 19030  0053D8  0012               	return		;funcret
 19031  0053DA                     __end_of_GPSSecond:
 19032                           	callstack 0
 19033                           
 19034 ;; *************** function _GPSMonth *****************
 19035 ;; Defined at:
 19036 ;;		line 188 in file "bibliotecas/GPS.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;		None
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;		None
 19041 ;; Return value:  Size  Location     Type
 19042 ;;                  2   25[COMRAM] unsigned int 
 19043 ;; Registers used:
 19044 ;;		wreg, status,2, status,0, prodl, prodh
 19045 ;; Tracked objects:
 19046 ;;		On entry : 3F/1
 19047 ;;		On exit  : 3F/1
 19048 ;;		Unchanged: 0/0
 19049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19050 ;;      Params:         2       0       0       0       0       0       0       0       0
 19051 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19052 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19053 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19054 ;;Total ram usage:        4 bytes
 19055 ;; Hardware stack levels used:    1
 19056 ;; Hardware stack levels required when called:    3
 19057 ;; This function calls:
 19058 ;;		Nothing
 19059 ;; This function is called by:
 19060 ;;		_get_fattime
 19061 ;; This function uses a non-reentrant model
 19062 ;;
 19063                           
 19064                           	psect	text102
 19065  0053DA                     __ptext102:
 19066                           	callstack 0
 19067  0053DA                     _GPSMonth:
 19068                           	callstack 21
 19069                           
 19070                           ; BSR set to: 1
 19071                           ;GPS.c: 190: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;incstack = 0
 19075  0053DA  51AA               	movf	(_rawDate+2)& (0+255),w,b
 19076  0053DC  0D0A               	mullw	10
 19077  0053DE  CFF3 F01C          	movff	prodl,??_GPSMonth
 19078  0053E2  CFF4 F01D          	movff	prodh,??_GPSMonth+1
 19079  0053E6  51AB               	movf	(_rawDate+3)& (0+255),w,b
 19080  0053E8  261C               	addwf	??_GPSMonth^0,f,c
 19081  0053EA  0E00               	movlw	0
 19082  0053EC  221D               	addwfc	(??_GPSMonth+1)^0,f,c
 19083  0053EE  0EF0               	movlw	240
 19084  0053F0  241C               	addwf	??_GPSMonth^0,w,c
 19085  0053F2  6E1A               	movwf	?_GPSMonth^0,c
 19086  0053F4  0EFD               	movlw	253
 19087  0053F6  201D               	addwfc	(??_GPSMonth+1)^0,w,c
 19088  0053F8  6E1B               	movwf	(?_GPSMonth+1)^0,c
 19089                           
 19090                           ; BSR set to: 1
 19091  0053FA  0012               	return		;funcret
 19092  0053FC                     __end_of_GPSMonth:
 19093                           	callstack 0
 19094                           
 19095 ;; *************** function _GPSMinute *****************
 19096 ;; Defined at:
 19097 ;;		line 175 in file "bibliotecas/GPS.c"
 19098 ;; Parameters:    Size  Location     Type
 19099 ;;		None
 19100 ;; Auto vars:     Size  Location     Type
 19101 ;;		None
 19102 ;; Return value:  Size  Location     Type
 19103 ;;                  2   25[COMRAM] unsigned int 
 19104 ;; Registers used:
 19105 ;;		wreg, status,2, status,0, prodl, prodh
 19106 ;; Tracked objects:
 19107 ;;		On entry : 3F/1
 19108 ;;		On exit  : 3F/1
 19109 ;;		Unchanged: 0/0
 19110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19111 ;;      Params:         2       0       0       0       0       0       0       0       0
 19112 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19113 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19114 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19115 ;;Total ram usage:        4 bytes
 19116 ;; Hardware stack levels used:    1
 19117 ;; Hardware stack levels required when called:    3
 19118 ;; This function calls:
 19119 ;;		Nothing
 19120 ;; This function is called by:
 19121 ;;		_get_fattime
 19122 ;; This function uses a non-reentrant model
 19123 ;;
 19124                           
 19125                           	psect	text103
 19126  0053FC                     __ptext103:
 19127                           	callstack 0
 19128  0053FC                     _GPSMinute:
 19129                           	callstack 21
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;GPS.c: 177: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 19133                           
 19134                           ; BSR set to: 1
 19135                           ;incstack = 0
 19136  0053FC  519F               	movf	(_rawTime+2)& (0+255),w,b
 19137  0053FE  0D0A               	mullw	10
 19138  005400  CFF3 F01C          	movff	prodl,??_GPSMinute
 19139  005404  CFF4 F01D          	movff	prodh,??_GPSMinute+1
 19140  005408  51A0               	movf	(_rawTime+3)& (0+255),w,b
 19141  00540A  261C               	addwf	??_GPSMinute^0,f,c
 19142  00540C  0E00               	movlw	0
 19143  00540E  221D               	addwfc	(??_GPSMinute+1)^0,f,c
 19144  005410  0EF0               	movlw	240
 19145  005412  241C               	addwf	??_GPSMinute^0,w,c
 19146  005414  6E1A               	movwf	?_GPSMinute^0,c
 19147  005416  0EFD               	movlw	253
 19148  005418  201D               	addwfc	(??_GPSMinute+1)^0,w,c
 19149  00541A  6E1B               	movwf	(?_GPSMinute+1)^0,c
 19150                           
 19151                           ; BSR set to: 1
 19152  00541C  0012               	return		;funcret
 19153  00541E                     __end_of_GPSMinute:
 19154                           	callstack 0
 19155                           
 19156 ;; *************** function _GPSHour *****************
 19157 ;; Defined at:
 19158 ;;		line 179 in file "bibliotecas/GPS.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;		None
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;		None
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  2   25[COMRAM] unsigned int 
 19165 ;; Registers used:
 19166 ;;		wreg, status,2, status,0, prodl, prodh
 19167 ;; Tracked objects:
 19168 ;;		On entry : 3F/0
 19169 ;;		On exit  : 3F/1
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19172 ;;      Params:         2       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:        4 bytes
 19177 ;; Hardware stack levels used:    1
 19178 ;; Hardware stack levels required when called:    3
 19179 ;; This function calls:
 19180 ;;		Nothing
 19181 ;; This function is called by:
 19182 ;;		_get_fattime
 19183 ;; This function uses a non-reentrant model
 19184 ;;
 19185                           
 19186                           	psect	text104
 19187  00532E                     __ptext104:
 19188                           	callstack 0
 19189  00532E                     _GPSHour:
 19190                           	callstack 21
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;GPS.c: 181: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 19194                           
 19195                           ; BSR set to: 1
 19196                           ;incstack = 0
 19197  00532E  0101               	movlb	1	; () banked
 19198  005330  519D               	movf	_rawTime& (0+255),w,b
 19199  005332  0D0A               	mullw	10
 19200  005334  CFF3 F01C          	movff	prodl,??_GPSHour
 19201  005338  CFF4 F01D          	movff	prodh,??_GPSHour+1
 19202  00533C  519E               	movf	(_rawTime+1)& (0+255),w,b
 19203  00533E  261C               	addwf	??_GPSHour^0,f,c
 19204  005340  0E00               	movlw	0
 19205  005342  221D               	addwfc	(??_GPSHour+1)^0,f,c
 19206  005344  0EF0               	movlw	240
 19207  005346  241C               	addwf	??_GPSHour^0,w,c
 19208  005348  6E1A               	movwf	?_GPSHour^0,c
 19209  00534A  0EFD               	movlw	253
 19210  00534C  201D               	addwfc	(??_GPSHour+1)^0,w,c
 19211  00534E  6E1B               	movwf	(?_GPSHour+1)^0,c
 19212                           
 19213                           ; BSR set to: 1
 19214  005350  0012               	return		;funcret
 19215  005352                     __end_of_GPSHour:
 19216                           	callstack 0
 19217                           
 19218 ;; *************** function _GPSDay *****************
 19219 ;; Defined at:
 19220 ;;		line 184 in file "bibliotecas/GPS.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;		None
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  2   25[COMRAM] unsigned int 
 19227 ;; Registers used:
 19228 ;;		wreg, status,2, status,0, prodl, prodh
 19229 ;; Tracked objects:
 19230 ;;		On entry : 3F/1
 19231 ;;		On exit  : 3F/1
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19234 ;;      Params:         2       0       0       0       0       0       0       0       0
 19235 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19236 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19237 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19238 ;;Total ram usage:        4 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:    3
 19241 ;; This function calls:
 19242 ;;		Nothing
 19243 ;; This function is called by:
 19244 ;;		_get_fattime
 19245 ;; This function uses a non-reentrant model
 19246 ;;
 19247                           
 19248                           	psect	text105
 19249  00541E                     __ptext105:
 19250                           	callstack 0
 19251  00541E                     _GPSDay:
 19252                           	callstack 21
 19253                           
 19254                           ; BSR set to: 1
 19255                           ;GPS.c: 186: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;incstack = 0
 19259  00541E  51A8               	movf	_rawDate& (0+255),w,b
 19260  005420  0D0A               	mullw	10
 19261  005422  CFF3 F01C          	movff	prodl,??_GPSDay
 19262  005426  CFF4 F01D          	movff	prodh,??_GPSDay+1
 19263  00542A  51A9               	movf	(_rawDate+1)& (0+255),w,b
 19264  00542C  261C               	addwf	??_GPSDay^0,f,c
 19265  00542E  0E00               	movlw	0
 19266  005430  221D               	addwfc	(??_GPSDay+1)^0,f,c
 19267  005432  0EF0               	movlw	240
 19268  005434  241C               	addwf	??_GPSDay^0,w,c
 19269  005436  6E1A               	movwf	?_GPSDay^0,c
 19270  005438  0EFD               	movlw	253
 19271  00543A  201D               	addwfc	(??_GPSDay+1)^0,w,c
 19272  00543C  6E1B               	movwf	(?_GPSDay+1)^0,c
 19273                           
 19274                           ; BSR set to: 1
 19275  00543E  0012               	return		;funcret
 19276  005440                     __end_of_GPSDay:
 19277                           	callstack 0
 19278                           
 19279 ;; *************** function _data_nome *****************
 19280 ;; Defined at:
 19281 ;;		line 386 in file "bibliotecas/SDCard.c"
 19282 ;; Parameters:    Size  Location     Type
 19283 ;;  p_buff          2   25[COMRAM] PTR unsigned char 
 19284 ;;		 -> string_dado(62), 
 19285 ;; Auto vars:     Size  Location     Type
 19286 ;;  i               1   27[COMRAM] unsigned char 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  1    wreg      void 
 19289 ;; Registers used:
 19290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19291 ;; Tracked objects:
 19292 ;;		On entry : 3F/2
 19293 ;;		On exit  : 3F/2
 19294 ;;		Unchanged: 3F/0
 19295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19296 ;;      Params:         2       0       0       0       0       0       0       0       0
 19297 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19299 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19300 ;;Total ram usage:        3 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; Hardware stack levels required when called:    3
 19303 ;; This function calls:
 19304 ;;		Nothing
 19305 ;; This function is called by:
 19306 ;;		_escrita_sdcard
 19307 ;; This function uses a non-reentrant model
 19308 ;;
 19309                           
 19310                           	psect	text106
 19311  005242                     __ptext106:
 19312                           	callstack 0
 19313  005242                     _data_nome:
 19314                           	callstack 23
 19315                           
 19316                           ; BSR set to: 2
 19317                           ;SDCard.c: 388: unsigned char i;;SDCard.c: 389: for(i=0; i<4;i++)
 19318                           
 19319                           ; BSR set to: 1
 19320                           ;incstack = 0
 19321  005242  0E00               	movlw	0
 19322  005244  6E1C               	movwf	data_nome@i^0,c
 19323  005246                     l11865:
 19324                           
 19325                           ; BSR set to: 2
 19326                           ;SDCard.c: 390: {;SDCard.c: 391: filename[i] = *p_buff;
 19327  005246  C01A  FFD9         	movff	data_nome@p_buff,fsr2l
 19328  00524A  C01B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 19329  00524E  0E7D               	movlw	low _filename
 19330  005250  241C               	addwf	data_nome@i^0,w,c
 19331  005252  6EE1               	movwf	fsr1l,c
 19332  005254  6AE2               	clrf	fsr1h,c
 19333  005256  0E01               	movlw	high _filename
 19334  005258  22E2               	addwfc	fsr1h,f,c
 19335  00525A  CFDF FFE7          	movff	indf2,indf1
 19336                           
 19337                           ; BSR set to: 2
 19338                           ;SDCard.c: 392: p_buff++;
 19339  00525E  4A1A               	infsnz	data_nome@p_buff^0,f,c
 19340  005260  2A1B               	incf	(data_nome@p_buff+1)^0,f,c
 19341                           
 19342                           ; BSR set to: 2
 19343  005262  2A1C               	incf	data_nome@i^0,f,c
 19344                           
 19345                           ; BSR set to: 2
 19346  005264  0E03               	movlw	3
 19347  005266  641C               	cpfsgt	data_nome@i^0,c
 19348  005268  D7EE               	goto	l11865
 19349  00526A  0012               	return	
 19350  00526C                     __end_of_data_nome:
 19351                           	callstack 0
 19352                           
 19353 ;; *************** function _dados_gps_to_sd *****************
 19354 ;; Defined at:
 19355 ;;		line 280 in file "bibliotecas/GPS.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;		None
 19358 ;; Auto vars:     Size  Location     Type
 19359 ;;		None
 19360 ;; Return value:  Size  Location     Type
 19361 ;;                  1    wreg      void 
 19362 ;; Registers used:
 19363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19364 ;; Tracked objects:
 19365 ;;		On entry : 0/1
 19366 ;;		On exit  : 0/0
 19367 ;;		Unchanged: 0/0
 19368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19369 ;;      Params:         0       0       0       0       0       0       0       0       0
 19370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19372 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19373 ;;Total ram usage:        0 bytes
 19374 ;; Hardware stack levels used:    1
 19375 ;; Hardware stack levels required when called:    5
 19376 ;; This function calls:
 19377 ;;		_monta_sd
 19378 ;; This function is called by:
 19379 ;;		_escrita_sdcard
 19380 ;;		_escalonador
 19381 ;; This function uses a non-reentrant model
 19382 ;;
 19383                           
 19384                           	psect	text107
 19385  004C12                     __ptext107:
 19386                           	callstack 0
 19387  004C12                     _dados_gps_to_sd:
 19388                           	callstack 21
 19389                           
 19390                           ;GPS.c: 282: monta_sd(0, rawTime);
 19391                           
 19392                           ; BSR set to: 2
 19393                           ;incstack = 0
 19394  004C12  0E9D               	movlw	low _rawTime
 19395  004C14  6E1E               	movwf	monta_sd@dado^0,c
 19396  004C16  0E01               	movlw	high _rawTime
 19397  004C18  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19398  004C1A  0E00               	movlw	0
 19399  004C1C  EC74  F011         	call	_monta_sd
 19400                           
 19401                           ;GPS.c: 283: monta_sd(1, rawDate);
 19402  004C20  0EA8               	movlw	low _rawDate
 19403  004C22  6E1E               	movwf	monta_sd@dado^0,c
 19404  004C24  0E01               	movlw	high _rawDate
 19405  004C26  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19406  004C28  0E01               	movlw	1
 19407  004C2A  EC74  F011         	call	_monta_sd
 19408                           
 19409                           ;GPS.c: 284: monta_sd(2, rawLatitude);
 19410  004C2E  0ED7               	movlw	low _rawLatitude
 19411  004C30  6E1E               	movwf	monta_sd@dado^0,c
 19412  004C32  0E01               	movlw	high _rawLatitude
 19413  004C34  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19414  004C36  0E02               	movlw	2
 19415  004C38  EC74  F011         	call	_monta_sd
 19416                           
 19417                           ;GPS.c: 285: monta_sd(3, rawLongitude);
 19418  004C3C  0ECB               	movlw	low _rawLongitude
 19419  004C3E  6E1E               	movwf	monta_sd@dado^0,c
 19420  004C40  0E01               	movlw	high _rawLongitude
 19421  004C42  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19422  004C44  0E03               	movlw	3
 19423  004C46  EC74  F011         	call	_monta_sd
 19424                           
 19425                           ;GPS.c: 286: monta_sd(5, rawTime);
 19426  004C4A  0E9D               	movlw	low _rawTime
 19427  004C4C  6E1E               	movwf	monta_sd@dado^0,c
 19428  004C4E  0E01               	movlw	high _rawTime
 19429  004C50  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19430  004C52  0E05               	movlw	5
 19431  004C54  EC74  F011         	call	_monta_sd
 19432                           
 19433                           ;GPS.c: 287: monta_sd(6, rawDate);
 19434  004C58  0EA8               	movlw	low _rawDate
 19435  004C5A  6E1E               	movwf	monta_sd@dado^0,c
 19436  004C5C  0E01               	movlw	high _rawDate
 19437  004C5E  6E1F               	movwf	(monta_sd@dado+1)^0,c
 19438  004C60  0E06               	movlw	6
 19439  004C62  EC74  F011         	call	_monta_sd
 19440  004C66  0012               	return		;funcret
 19441  004C68                     __end_of_dados_gps_to_sd:
 19442                           	callstack 0
 19443                           
 19444 ;; *************** function _monta_sd *****************
 19445 ;; Defined at:
 19446 ;;		line 308 in file "bibliotecas/SDCard.c"
 19447 ;; Parameters:    Size  Location     Type
 19448 ;;  index           1    wreg     unsigned char 
 19449 ;;  dado            2   29[COMRAM] PTR unsigned char 
 19450 ;;		 -> STR_20(7), STR_19(5), rawDate(7), rawLongitude(12), 
 19451 ;;		 -> rawLatitude(11), rawTime(11), 
 19452 ;; Auto vars:     Size  Location     Type
 19453 ;;  index           1   31[COMRAM] unsigned char 
 19454 ;;  i               1   33[COMRAM] unsigned char 
 19455 ;;  size            1   32[COMRAM] unsigned char 
 19456 ;; Return value:  Size  Location     Type
 19457 ;;                  1    wreg      void 
 19458 ;; Registers used:
 19459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19460 ;; Tracked objects:
 19461 ;;		On entry : 0/1
 19462 ;;		On exit  : 0/0
 19463 ;;		Unchanged: 0/0
 19464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19465 ;;      Params:         2       0       0       0       0       0       0       0       0
 19466 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19468 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19469 ;;Total ram usage:        5 bytes
 19470 ;; Hardware stack levels used:    1
 19471 ;; Hardware stack levels required when called:    4
 19472 ;; This function calls:
 19473 ;;		_strlen
 19474 ;; This function is called by:
 19475 ;;		_dados_gps_to_sd
 19476 ;;		_verifica_fence_externo
 19477 ;; This function uses a non-reentrant model
 19478 ;;
 19479                           
 19480                           	psect	text108
 19481  0022E8                     __ptext108:
 19482                           	callstack 0
 19483  0022E8                     _monta_sd:
 19484                           	callstack 23
 19485                           
 19486                           ;incstack = 0
 19487                           ;monta_sd@index stored from wreg
 19488  0022E8  6E20               	movwf	monta_sd@index^0,c
 19489                           
 19490                           ;SDCard.c: 310: unsigned char i, size;;SDCard.c: 311: size = strlen(dado);
 19491  0022EA  C01E  F01A         	movff	monta_sd@dado,strlen@s
 19492  0022EE  C01F  F01B         	movff	monta_sd@dado+1,strlen@s+1
 19493  0022F2  ECF6  F027         	call	_strlen	;wreg free
 19494  0022F6  501A               	movf	?_strlen^0,w,c
 19495  0022F8  6E21               	movwf	monta_sd@size^0,c
 19496                           
 19497                           ;SDCard.c: 312: switch(index)
 19498  0022FA  D102               	goto	l11247
 19499  0022FC                     l11137:
 19500                           
 19501                           ;SDCard.c: 315: for(i=0; i<6;i++)
 19502  0022FC  0E00               	movlw	0
 19503  0022FE  6E22               	movwf	monta_sd@i^0,c
 19504  002300                     l11143:
 19505                           
 19506                           ;SDCard.c: 316: {;SDCard.c: 317: string_dado.hora[i] = *dado;
 19507  002300  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19508  002304  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19509  002308  6AF8               	clrf	tblptru,c
 19510  00230A  0E07               	movlw	low (_string_dado+7)
 19511  00230C  2422               	addwf	monta_sd@i^0,w,c
 19512  00230E  6ED9               	movwf	fsr2l,c
 19513  002310  6ADA               	clrf	fsr2h,c
 19514  002312  0E02               	movlw	high (_string_dado+7)
 19515  002314  22DA               	addwfc	fsr2h,f,c
 19516  002316  0E07               	movlw	(high __ramtop+-1)
 19517  002318  64F7               	cpfsgt	tblptrh,c
 19518  00231A  D003               	bra	u12867
 19519  00231C  0008               	tblrd		*
 19520  00231E  50F5               	movf	tablat,w,c
 19521  002320  D005               	bra	u12860
 19522  002322                     u12867:
 19523  002322  CFF6 FFE1          	movff	tblptrl,fsr1l
 19524  002326  CFF7 FFE2          	movff	tblptrh,fsr1h
 19525  00232A  50E7               	movf	indf1,w,c
 19526  00232C                     u12860:
 19527  00232C  6EDF               	movwf	indf2,c
 19528                           
 19529                           ;SDCard.c: 318: dado++;
 19530  00232E  4A1E               	infsnz	monta_sd@dado^0,f,c
 19531  002330  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19532  002332  2A22               	incf	monta_sd@i^0,f,c
 19533  002334  0E05               	movlw	5
 19534  002336  6422               	cpfsgt	monta_sd@i^0,c
 19535  002338  D7E3               	goto	l11143
 19536  00233A  0012               	return	
 19537  00233C                     l11151:
 19538                           
 19539                           ;SDCard.c: 323: for(i=0; i<6;i++)
 19540  00233C  0E00               	movlw	0
 19541  00233E  6E22               	movwf	monta_sd@i^0,c
 19542  002340                     l11157:
 19543                           
 19544                           ;SDCard.c: 324: {;SDCard.c: 325: string_dado.data[i] = *dado;
 19545  002340  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19546  002344  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19547  002348  6AF8               	clrf	tblptru,c
 19548  00234A  0E00               	movlw	low _string_dado
 19549  00234C  2422               	addwf	monta_sd@i^0,w,c
 19550  00234E  6ED9               	movwf	fsr2l,c
 19551  002350  6ADA               	clrf	fsr2h,c
 19552  002352  0E02               	movlw	high _string_dado
 19553  002354  22DA               	addwfc	fsr2h,f,c
 19554  002356  0E07               	movlw	(high __ramtop+-1)
 19555  002358  64F7               	cpfsgt	tblptrh,c
 19556  00235A  D003               	bra	u12887
 19557  00235C  0008               	tblrd		*
 19558  00235E  50F5               	movf	tablat,w,c
 19559  002360  D005               	bra	u12880
 19560  002362                     u12887:
 19561  002362  CFF6 FFE1          	movff	tblptrl,fsr1l
 19562  002366  CFF7 FFE2          	movff	tblptrh,fsr1h
 19563  00236A  50E7               	movf	indf1,w,c
 19564  00236C                     u12880:
 19565  00236C  6EDF               	movwf	indf2,c
 19566                           
 19567                           ;SDCard.c: 326: dado++;
 19568  00236E  4A1E               	infsnz	monta_sd@dado^0,f,c
 19569  002370  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19570  002372  2A22               	incf	monta_sd@i^0,f,c
 19571  002374  0E05               	movlw	5
 19572  002376  6422               	cpfsgt	monta_sd@i^0,c
 19573  002378  D7E3               	goto	l11157
 19574  00237A  0012               	return	
 19575  00237C                     l11165:
 19576                           
 19577                           ;SDCard.c: 331: for(i=0; i<11;i++)
 19578  00237C  0E00               	movlw	0
 19579  00237E  6E22               	movwf	monta_sd@i^0,c
 19580  002380                     l11171:
 19581                           
 19582                           ;SDCard.c: 332: {;SDCard.c: 333: string_dado.lt[i] = *dado;
 19583  002380  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19584  002384  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19585  002388  6AF8               	clrf	tblptru,c
 19586  00238A  0E16               	movlw	low (_string_dado+22)
 19587  00238C  2422               	addwf	monta_sd@i^0,w,c
 19588  00238E  6ED9               	movwf	fsr2l,c
 19589  002390  6ADA               	clrf	fsr2h,c
 19590  002392  0E02               	movlw	high (_string_dado+22)
 19591  002394  22DA               	addwfc	fsr2h,f,c
 19592  002396  0E07               	movlw	(high __ramtop+-1)
 19593  002398  64F7               	cpfsgt	tblptrh,c
 19594  00239A  D003               	bra	u12907
 19595  00239C  0008               	tblrd		*
 19596  00239E  50F5               	movf	tablat,w,c
 19597  0023A0  D005               	bra	u12900
 19598  0023A2                     u12907:
 19599  0023A2  CFF6 FFE1          	movff	tblptrl,fsr1l
 19600  0023A6  CFF7 FFE2          	movff	tblptrh,fsr1h
 19601  0023AA  50E7               	movf	indf1,w,c
 19602  0023AC                     u12900:
 19603  0023AC  6EDF               	movwf	indf2,c
 19604                           
 19605                           ;SDCard.c: 334: dado++;
 19606  0023AE  4A1E               	infsnz	monta_sd@dado^0,f,c
 19607  0023B0  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19608  0023B2  2A22               	incf	monta_sd@i^0,f,c
 19609  0023B4  0E0A               	movlw	10
 19610  0023B6  6422               	cpfsgt	monta_sd@i^0,c
 19611  0023B8  D7E3               	goto	l11171
 19612  0023BA  0012               	return	
 19613  0023BC                     l11179:
 19614                           
 19615                           ;SDCard.c: 339: for(i=0; i<12;i++)
 19616  0023BC  0E00               	movlw	0
 19617  0023BE  6E22               	movwf	monta_sd@i^0,c
 19618  0023C0                     l11185:
 19619                           
 19620                           ;SDCard.c: 340: {;SDCard.c: 341: string_dado.lo[i] = *dado;
 19621  0023C0  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19622  0023C4  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19623  0023C8  6AF8               	clrf	tblptru,c
 19624  0023CA  0E23               	movlw	low (_string_dado+35)
 19625  0023CC  2422               	addwf	monta_sd@i^0,w,c
 19626  0023CE  6ED9               	movwf	fsr2l,c
 19627  0023D0  6ADA               	clrf	fsr2h,c
 19628  0023D2  0E02               	movlw	high (_string_dado+35)
 19629  0023D4  22DA               	addwfc	fsr2h,f,c
 19630  0023D6  0E07               	movlw	(high __ramtop+-1)
 19631  0023D8  64F7               	cpfsgt	tblptrh,c
 19632  0023DA  D003               	bra	u12927
 19633  0023DC  0008               	tblrd		*
 19634  0023DE  50F5               	movf	tablat,w,c
 19635  0023E0  D005               	bra	u12920
 19636  0023E2                     u12927:
 19637  0023E2  CFF6 FFE1          	movff	tblptrl,fsr1l
 19638  0023E6  CFF7 FFE2          	movff	tblptrh,fsr1h
 19639  0023EA  50E7               	movf	indf1,w,c
 19640  0023EC                     u12920:
 19641  0023EC  6EDF               	movwf	indf2,c
 19642                           
 19643                           ;SDCard.c: 342: dado++;
 19644  0023EE  4A1E               	infsnz	monta_sd@dado^0,f,c
 19645  0023F0  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19646  0023F2  2A22               	incf	monta_sd@i^0,f,c
 19647  0023F4  0E0B               	movlw	11
 19648  0023F6  6422               	cpfsgt	monta_sd@i^0,c
 19649  0023F8  D7E3               	goto	l11185
 19650  0023FA  0012               	return	
 19651  0023FC                     l11193:
 19652                           
 19653                           ;SDCard.c: 348: for(i=0; i<size;i++)
 19654  0023FC  0E00               	movlw	0
 19655  0023FE  6E22               	movwf	monta_sd@i^0,c
 19656  002400  D01A               	goto	l11201
 19657  002402                     l11195:
 19658                           
 19659                           ;SDCard.c: 349: {;SDCard.c: 350: string_dado.fence[i] = *dado;
 19660  002402  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19661  002406  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19662  00240A  6AF8               	clrf	tblptru,c
 19663  00240C  0E34               	movlw	low (_string_dado+52)
 19664  00240E  2422               	addwf	monta_sd@i^0,w,c
 19665  002410  6ED9               	movwf	fsr2l,c
 19666  002412  6ADA               	clrf	fsr2h,c
 19667  002414  0E02               	movlw	high (_string_dado+52)
 19668  002416  22DA               	addwfc	fsr2h,f,c
 19669  002418  0E07               	movlw	(high __ramtop+-1)
 19670  00241A  64F7               	cpfsgt	tblptrh,c
 19671  00241C  D003               	bra	u12947
 19672  00241E  0008               	tblrd		*
 19673  002420  50F5               	movf	tablat,w,c
 19674  002422  D005               	bra	u12940
 19675  002424                     u12947:
 19676  002424  CFF6 FFE1          	movff	tblptrl,fsr1l
 19677  002428  CFF7 FFE2          	movff	tblptrh,fsr1h
 19678  00242C  50E7               	movf	indf1,w,c
 19679  00242E                     u12940:
 19680  00242E  6EDF               	movwf	indf2,c
 19681                           
 19682                           ;SDCard.c: 351: dado++;
 19683  002430  4A1E               	infsnz	monta_sd@dado^0,f,c
 19684  002432  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19685  002434  2A22               	incf	monta_sd@i^0,f,c
 19686  002436                     l11201:
 19687  002436  5021               	movf	monta_sd@size^0,w,c
 19688  002438  5C22               	subwf	monta_sd@i^0,w,c
 19689  00243A  B0D8               	btfsc	status,0,c
 19690  00243C  0012               	return	
 19691  00243E  D7E1               	goto	l11195
 19692  002440                     l11203:
 19693                           
 19694                           ;SDCard.c: 356: for(i=0; i<4;i++)
 19695  002440  0E00               	movlw	0
 19696  002442  6E22               	movwf	monta_sd@i^0,c
 19697  002444                     l11209:
 19698                           
 19699                           ;SDCard.c: 357: {;SDCard.c: 358: string_dado.hora_name[i] = *dado;
 19700  002444  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19701  002448  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19702  00244C  6AF8               	clrf	tblptru,c
 19703  00244E  0E14               	movlw	low (_string_dado+20)
 19704  002450  2422               	addwf	monta_sd@i^0,w,c
 19705  002452  6ED9               	movwf	fsr2l,c
 19706  002454  6ADA               	clrf	fsr2h,c
 19707  002456  0E02               	movlw	high (_string_dado+20)
 19708  002458  22DA               	addwfc	fsr2h,f,c
 19709  00245A  0E07               	movlw	(high __ramtop+-1)
 19710  00245C  64F7               	cpfsgt	tblptrh,c
 19711  00245E  D003               	bra	u12967
 19712  002460  0008               	tblrd		*
 19713  002462  50F5               	movf	tablat,w,c
 19714  002464  D005               	bra	u12960
 19715  002466                     u12967:
 19716  002466  CFF6 FFE1          	movff	tblptrl,fsr1l
 19717  00246A  CFF7 FFE2          	movff	tblptrh,fsr1h
 19718  00246E  50E7               	movf	indf1,w,c
 19719  002470                     u12960:
 19720  002470  6EDF               	movwf	indf2,c
 19721                           
 19722                           ;SDCard.c: 359: dado++;
 19723  002472  4A1E               	infsnz	monta_sd@dado^0,f,c
 19724  002474  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19725  002476  2A22               	incf	monta_sd@i^0,f,c
 19726  002478  0E03               	movlw	3
 19727  00247A  6422               	cpfsgt	monta_sd@i^0,c
 19728  00247C  D7E3               	goto	l11209
 19729  00247E  0012               	return	
 19730  002480                     l11217:
 19731                           
 19732                           ;SDCard.c: 365: for(i=0; i<6;i++)
 19733  002480  0E00               	movlw	0
 19734  002482  6E22               	movwf	monta_sd@i^0,c
 19735  002484                     l11223:
 19736                           
 19737                           ;SDCard.c: 366: {;SDCard.c: 367: string_dado.data_name[i] = *dado;
 19738  002484  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19739  002488  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19740  00248C  6AF8               	clrf	tblptru,c
 19741  00248E  0E12               	movlw	low (_string_dado+18)
 19742  002490  2422               	addwf	monta_sd@i^0,w,c
 19743  002492  6ED9               	movwf	fsr2l,c
 19744  002494  6ADA               	clrf	fsr2h,c
 19745  002496  0E02               	movlw	high (_string_dado+18)
 19746  002498  22DA               	addwfc	fsr2h,f,c
 19747  00249A  0E07               	movlw	(high __ramtop+-1)
 19748  00249C  64F7               	cpfsgt	tblptrh,c
 19749  00249E  D003               	bra	u12987
 19750  0024A0  0008               	tblrd		*
 19751  0024A2  50F5               	movf	tablat,w,c
 19752  0024A4  D005               	bra	u12980
 19753  0024A6                     u12987:
 19754  0024A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 19755  0024AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 19756  0024AE  50E7               	movf	indf1,w,c
 19757  0024B0                     u12980:
 19758  0024B0  6EDF               	movwf	indf2,c
 19759                           
 19760                           ;SDCard.c: 368: dado++;
 19761  0024B2  4A1E               	infsnz	monta_sd@dado^0,f,c
 19762  0024B4  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19763  0024B6  2A22               	incf	monta_sd@i^0,f,c
 19764  0024B8  0E05               	movlw	5
 19765  0024BA  6422               	cpfsgt	monta_sd@i^0,c
 19766  0024BC  D7E3               	goto	l11223
 19767  0024BE  0012               	return	
 19768  0024C0                     l11231:
 19769                           
 19770                           ;SDCard.c: 373: for(i=0; i<6;i++)
 19771  0024C0  0E00               	movlw	0
 19772  0024C2  6E22               	movwf	monta_sd@i^0,c
 19773  0024C4                     l11237:
 19774                           
 19775                           ;SDCard.c: 374: {;SDCard.c: 375: string_dado.vel[i] = *dado;
 19776  0024C4  C01E  FFF6         	movff	monta_sd@dado,tblptrl
 19777  0024C8  C01F  FFF7         	movff	monta_sd@dado+1,tblptrh
 19778  0024CC  6AF8               	clrf	tblptru,c
 19779  0024CE  0E30               	movlw	low (_string_dado+48)
 19780  0024D0  2422               	addwf	monta_sd@i^0,w,c
 19781  0024D2  6ED9               	movwf	fsr2l,c
 19782  0024D4  6ADA               	clrf	fsr2h,c
 19783  0024D6  0E02               	movlw	high (_string_dado+48)
 19784  0024D8  22DA               	addwfc	fsr2h,f,c
 19785  0024DA  0E07               	movlw	(high __ramtop+-1)
 19786  0024DC  64F7               	cpfsgt	tblptrh,c
 19787  0024DE  D003               	bra	u13007
 19788  0024E0  0008               	tblrd		*
 19789  0024E2  50F5               	movf	tablat,w,c
 19790  0024E4  D005               	bra	u13000
 19791  0024E6                     u13007:
 19792  0024E6  CFF6 FFE1          	movff	tblptrl,fsr1l
 19793  0024EA  CFF7 FFE2          	movff	tblptrh,fsr1h
 19794  0024EE  50E7               	movf	indf1,w,c
 19795  0024F0                     u13000:
 19796  0024F0  6EDF               	movwf	indf2,c
 19797                           
 19798                           ;SDCard.c: 376: dado++;
 19799  0024F2  4A1E               	infsnz	monta_sd@dado^0,f,c
 19800  0024F4  2A1F               	incf	(monta_sd@dado+1)^0,f,c
 19801  0024F6  2A22               	incf	monta_sd@i^0,f,c
 19802  0024F8  0E05               	movlw	5
 19803  0024FA  6422               	cpfsgt	monta_sd@i^0,c
 19804  0024FC  D7E3               	goto	l11237
 19805  0024FE  0012               	return	
 19806  002500                     l11247:
 19807  002500  5020               	movf	monta_sd@index^0,w,c
 19808                           
 19809                           ; Switch size 1, requested type "simple"
 19810                           ; Number of cases is 8, Range of values is 0 to 7
 19811                           ; switch strategies available:
 19812                           ; Name         Instructions Cycles
 19813                           ; simple_byte           25    13 (average)
 19814                           ;	Chosen strategy is simple_byte
 19815  002502  0A00               	xorlw	0	; case 0
 19816  002504  B4D8               	btfsc	status,2,c
 19817  002506  D6FA               	goto	l11137
 19818  002508  0A01               	xorlw	1	; case 1
 19819  00250A  B4D8               	btfsc	status,2,c
 19820  00250C  D717               	goto	l11151
 19821  00250E  0A03               	xorlw	3	; case 2
 19822  002510  B4D8               	btfsc	status,2,c
 19823  002512  D734               	goto	l11165
 19824  002514  0A01               	xorlw	1	; case 3
 19825  002516  B4D8               	btfsc	status,2,c
 19826  002518  D751               	goto	l11179
 19827  00251A  0A07               	xorlw	7	; case 4
 19828  00251C  B4D8               	btfsc	status,2,c
 19829  00251E  D76E               	goto	l11193
 19830  002520  0A01               	xorlw	1	; case 5
 19831  002522  B4D8               	btfsc	status,2,c
 19832  002524  D78D               	goto	l11203
 19833  002526  0A03               	xorlw	3	; case 6
 19834  002528  B4D8               	btfsc	status,2,c
 19835  00252A  D7AA               	goto	l11217
 19836  00252C  0A01               	xorlw	1	; case 7
 19837  00252E  A4D8               	btfss	status,2,c
 19838  002530  0012               	return	
 19839  002532  D7C6               	goto	l11231
 19840  002534                     __end_of_monta_sd:
 19841                           	callstack 0
 19842                           
 19843 ;; *************** function _strlen *****************
 19844 ;; Defined at:
 19845 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;  s               2   25[COMRAM] PTR const unsigned char 
 19848 ;;		 -> STR_20(7), STR_19(5), rawDate(7), rawLongitude(12), 
 19849 ;;		 -> rawLatitude(11), rawTime(11), 
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  cp              2   27[COMRAM] PTR const unsigned char 
 19852 ;;		 -> STR_20(7), STR_19(5), rawDate(7), rawLongitude(12), 
 19853 ;;		 -> rawLatitude(11), rawTime(11), 
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  2   25[COMRAM] unsigned int 
 19856 ;; Registers used:
 19857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 19858 ;; Tracked objects:
 19859 ;;		On entry : 0/1
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19863 ;;      Params:         2       0       0       0       0       0       0       0       0
 19864 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19865 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19866 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19867 ;;Total ram usage:        4 bytes
 19868 ;; Hardware stack levels used:    1
 19869 ;; Hardware stack levels required when called:    3
 19870 ;; This function calls:
 19871 ;;		Nothing
 19872 ;; This function is called by:
 19873 ;;		_monta_sd
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877                           	psect	text109
 19878  004FEC                     __ptext109:
 19879                           	callstack 0
 19880  004FEC                     _strlen:
 19881                           	callstack 23
 19882                           
 19883                           ;incstack = 0
 19884  004FEC  C01A  F01C         	movff	strlen@s,strlen@cp
 19885  004FF0  C01B  F01D         	movff	strlen@s+1,strlen@cp+1
 19886  004FF4  D002               	goto	l10865
 19887  004FF6                     l10863:
 19888  004FF6  4A1C               	infsnz	strlen@cp^0,f,c
 19889  004FF8  2A1D               	incf	(strlen@cp+1)^0,f,c
 19890  004FFA                     l10865:
 19891  004FFA  C01C  FFF6         	movff	strlen@cp,tblptrl
 19892  004FFE  C01D  FFF7         	movff	strlen@cp+1,tblptrh
 19893  005002  6AF8               	clrf	tblptru,c
 19894  005004  0E07               	movlw	(high __ramtop+-1)
 19895  005006  64F7               	cpfsgt	tblptrh,c
 19896  005008  D003               	bra	u12367
 19897  00500A  0008               	tblrd		*
 19898  00500C  50F5               	movf	tablat,w,c
 19899  00500E  D005               	bra	u12360
 19900  005010                     u12367:
 19901  005010  CFF6 FFE1          	movff	tblptrl,fsr1l
 19902  005014  CFF7 FFE2          	movff	tblptrh,fsr1h
 19903  005018  50E7               	movf	indf1,w,c
 19904  00501A                     u12360:
 19905  00501A  0900               	iorlw	0
 19906  00501C  A4D8               	btfss	status,2,c
 19907  00501E  D7EB               	goto	l10863
 19908  005020  501A               	movf	strlen@s^0,w,c
 19909  005022  5C1C               	subwf	strlen@cp^0,w,c
 19910  005024  6E1A               	movwf	?_strlen^0,c
 19911  005026  501B               	movf	(strlen@s+1)^0,w,c
 19912  005028  581D               	subwfb	(strlen@cp+1)^0,w,c
 19913  00502A  6E1B               	movwf	(?_strlen+1)^0,c
 19914  00502C  0012               	return		;funcret
 19915  00502E                     __end_of_strlen:
 19916                           	callstack 0
 19917                           
 19918 ;; *************** function _desliga_uart *****************
 19919 ;; Defined at:
 19920 ;;		line 219 in file "bibliotecas/uart.c"
 19921 ;; Parameters:    Size  Location     Type
 19922 ;;		None
 19923 ;; Auto vars:     Size  Location     Type
 19924 ;;		None
 19925 ;; Return value:  Size  Location     Type
 19926 ;;                  1    wreg      void 
 19927 ;; Registers used:
 19928 ;;		wreg, status,2
 19929 ;; Tracked objects:
 19930 ;;		On entry : 0/1
 19931 ;;		On exit  : 0/0
 19932 ;;		Unchanged: 0/0
 19933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19934 ;;      Params:         0       0       0       0       0       0       0       0       0
 19935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19938 ;;Total ram usage:        0 bytes
 19939 ;; Hardware stack levels used:    1
 19940 ;; Hardware stack levels required when called:    3
 19941 ;; This function calls:
 19942 ;;		Nothing
 19943 ;; This function is called by:
 19944 ;;		_grava_sd
 19945 ;; This function uses a non-reentrant model
 19946 ;;
 19947                           
 19948                           	psect	text110
 19949  005574                     __ptext110:
 19950                           	callstack 0
 19951  005574                     _desliga_uart:
 19952                           	callstack 24
 19953                           
 19954                           ;uart.c: 222: TRISCbits.RC6 = 1;
 19955                           
 19956                           ;incstack = 0
 19957  005574  8C94               	bsf	148,6,c	;volatile
 19958                           
 19959                           ;uart.c: 223: TRISCbits.RC7 = 1;
 19960  005576  8E94               	bsf	148,7,c	;volatile
 19961                           
 19962                           ;uart.c: 226: TXSTA = 0x00;
 19963  005578  0E00               	movlw	0
 19964  00557A  6EAC               	movwf	172,c	;volatile
 19965                           
 19966                           ;uart.c: 228: RCSTA = 0x00;
 19967  00557C  0E00               	movlw	0
 19968  00557E  6EAB               	movwf	171,c	;volatile
 19969  005580  0012               	return		;funcret
 19970  005582                     __end_of_desliga_uart:
 19971                           	callstack 0
 19972                           
 19973 ;; *************** function _desliga_SPI *****************
 19974 ;; Defined at:
 19975 ;;		line 68 in file "bibliotecas/SPI.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;		None
 19978 ;; Auto vars:     Size  Location     Type
 19979 ;;		None
 19980 ;; Return value:  Size  Location     Type
 19981 ;;                  1    wreg      void 
 19982 ;; Registers used:
 19983 ;;		wreg, status,2
 19984 ;; Tracked objects:
 19985 ;;		On entry : 3F/0
 19986 ;;		On exit  : 3F/0
 19987 ;;		Unchanged: 3F/0
 19988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19989 ;;      Params:         0       0       0       0       0       0       0       0       0
 19990 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19992 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19993 ;;Total ram usage:        0 bytes
 19994 ;; Hardware stack levels used:    1
 19995 ;; Hardware stack levels required when called:    3
 19996 ;; This function calls:
 19997 ;;		Nothing
 19998 ;; This function is called by:
 19999 ;;		_grava_sd
 20000 ;; This function uses a non-reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text111
 20004  0055A6                     __ptext111:
 20005                           	callstack 0
 20006  0055A6                     _desliga_SPI:
 20007                           	callstack 24
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;SPI.c: 70: SSPSTAT = 0x00;
 20011                           
 20012                           ;incstack = 0
 20013  0055A6  0E00               	movlw	0
 20014  0055A8  6EC7               	movwf	199,c	;volatile
 20015                           
 20016                           ;SPI.c: 71: SSPCON1 = 0x00;
 20017  0055AA  0E00               	movlw	0
 20018  0055AC  6EC6               	movwf	198,c	;volatile
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;SPI.c: 72: SSPCON1bits.SSPEN = 0;
 20022  0055AE  9AC6               	bcf	198,5,c	;volatile
 20023                           
 20024                           ; BSR set to: 0
 20025  0055B0  0012               	return		;funcret
 20026  0055B2                     __end_of_desliga_SPI:
 20027                           	callstack 0
 20028                           
 20029 ;; *************** function _fix *****************
 20030 ;; Defined at:
 20031 ;;		line 268 in file "bibliotecas/GPS.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;		None
 20034 ;; Auto vars:     Size  Location     Type
 20035 ;;		None
 20036 ;; Return value:  Size  Location     Type
 20037 ;;                  2   25[COMRAM] PTR unsigned char 
 20038 ;; Registers used:
 20039 ;;		wreg, status,2, status,0
 20040 ;; Tracked objects:
 20041 ;;		On entry : 0/1
 20042 ;;		On exit  : 0/0
 20043 ;;		Unchanged: 0/0
 20044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20045 ;;      Params:         2       0       0       0       0       0       0       0       0
 20046 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20047 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20048 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20049 ;;Total ram usage:        2 bytes
 20050 ;; Hardware stack levels used:    1
 20051 ;; Hardware stack levels required when called:    3
 20052 ;; This function calls:
 20053 ;;		Nothing
 20054 ;; This function is called by:
 20055 ;;		_disparo_gravacao
 20056 ;;		_troca_de_tela
 20057 ;; This function uses a non-reentrant model
 20058 ;;
 20059                           
 20060                           	psect	text112
 20061  0055BC                     __ptext112:
 20062                           	callstack 0
 20063  0055BC                     _fix:
 20064                           	callstack 25
 20065                           
 20066                           ;GPS.c: 270: return rawFix;
 20067                           
 20068                           ; BSR set to: 0
 20069                           ;incstack = 0
 20070  0055BC  0EBB               	movlw	low _rawFix
 20071  0055BE  6E1A               	movwf	?_fix^0,c
 20072  0055C0  0E01               	movlw	high _rawFix
 20073  0055C2  6E1B               	movwf	(?_fix+1)^0,c
 20074  0055C4  0012               	return		;funcret
 20075  0055C6                     __end_of_fix:
 20076                           	callstack 0
 20077                           
 20078 ;; *************** function _isr *****************
 20079 ;; Defined at:
 20080 ;;		line 110 in file "main.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;		None
 20083 ;; Auto vars:     Size  Location     Type
 20084 ;;  cont            1   24[COMRAM] unsigned char 
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  1    wreg      void 
 20087 ;; Registers used:
 20088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/0
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20094 ;;      Params:         0       0       0       0       0       0       0       0       0
 20095 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20096 ;;      Temps:         12       0       0       0       0       0       0       0       0
 20097 ;;      Totals:        13       0       0       0       0       0       0       0       0
 20098 ;;Total ram usage:       13 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:    2
 20101 ;; This function calls:
 20102 ;;		_GPSRead
 20103 ;;		_recebe_dado_uart
 20104 ;;		i2_write_timer_zero
 20105 ;; This function is called by:
 20106 ;;		Interrupt level 2
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110                           	psect	intcode
 20111  000008                     __pintcode:
 20112                           	callstack 0
 20113  000008                     _isr:
 20114                           	callstack 12
 20115                           
 20116                           ;incstack = 0
 20117  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20118  00000A  EDFA  F01A         	call	int_func,f	;refresh shadow registers
 20119                           
 20120                           	psect	intcode_body
 20121  0035F4                     __pintcode_body:
 20122                           	callstack 12
 20123  0035F4                     int_func:
 20124                           	callstack 12
 20125  0035F4  0006               	pop		; remove dummy address from shadow register refresh
 20126  0035F6  CFE1 F00F          	movff	fsr1l,??_isr+2
 20127  0035FA  CFE2 F010          	movff	fsr1h,??_isr+3
 20128  0035FE  CFD9 F011          	movff	fsr2l,??_isr+4
 20129  003602  CFDA F012          	movff	fsr2h,??_isr+5
 20130  003606  CFF3 F013          	movff	prodl,??_isr+6
 20131  00360A  CFF4 F014          	movff	prodh,??_isr+7
 20132  00360E  CFF6 F015          	movff	tblptrl,??_isr+8
 20133  003612  CFF7 F016          	movff	tblptrh,??_isr+9
 20134  003616  CFF8 F017          	movff	tblptru,??_isr+10
 20135  00361A  CFF5 F018          	movff	tablat,??_isr+11
 20136                           
 20137                           ;main.c: 112: unsigned char cont;;main.c: 115: if (PIE1bits.RCIE && PIR1bits.RCIF)
 20138  00361E  BA9D               	btfsc	157,5,c	;volatile
 20139  003620  AA9E               	btfss	158,5,c	;volatile
 20140  003622  D014               	goto	i2l13125
 20141                           
 20142                           ;main.c: 116: {;main.c: 117: PIR1bits.RCIF = 0;
 20143  003624  9A9E               	bcf	158,5,c	;volatile
 20144                           
 20145                           ;main.c: 118: data_uart_recebe = recebe_dado_uart();
 20146  003626  EC9A  F02A         	call	_recebe_dado_uart	;wreg free
 20147  00362A  6E3C               	movwf	_data_uart_recebe^0,c
 20148                           
 20149                           ;main.c: 119: GPSRead(data_uart_recebe);
 20150  00362C  503C               	movf	_data_uart_recebe^0,w,c
 20151  00362E  EC09  F00F         	call	_GPSRead
 20152                           
 20153                           ;main.c: 121: PORTBbits.RB2 = !PORTBbits.RB2;
 20154  003632  B481               	btfsc	129,2,c	;volatile
 20155  003634  D003               	goto	i2u1598_40
 20156  003636  6A0D               	clrf	??_isr^0,c
 20157  003638  2A0D               	incf	??_isr^0,f,c
 20158  00363A  D001               	goto	i2u1599_48
 20159  00363C                     i2u1598_40:
 20160  00363C  6A0D               	clrf	??_isr^0,c
 20161  00363E                     i2u1599_48:
 20162  00363E  460D               	rlncf	??_isr^0,f,c
 20163  003640  460D               	rlncf	??_isr^0,f,c
 20164  003642  5081               	movf	129,w,c	;volatile
 20165  003644  180D               	xorwf	??_isr^0,w,c
 20166  003646  0BFB               	andlw	-5
 20167  003648  180D               	xorwf	??_isr^0,w,c
 20168  00364A  6E81               	movwf	129,c	;volatile
 20169  00364C                     i2l13125:
 20170                           
 20171                           ;main.c: 122: };main.c: 125: unsigned char cont;;main.c: 127: if (TMR0IF && T0IF)
 20172  00364C  B4F2               	btfsc	4082,2,c	;volatile
 20173  00364E  A4F2               	btfss	4082,2,c	;volatile
 20174  003650  D043               	goto	i2l13163
 20175                           
 20176                           ;main.c: 128: {;main.c: 129: INTCONbits.TMR0IF = 0;
 20177  003652  94F2               	bcf	242,2,c	;volatile
 20178                           
 20179                           ;main.c: 130: sinaliza_int_timer = 1;
 20180  003654  0E01               	movlw	1
 20181  003656  6E3B               	movwf	_sinaliza_int_timer^0,c
 20182                           
 20183                           ;main.c: 132: for(cont= 0; cont<3;cont++)
 20184  003658  0E00               	movlw	0
 20185  00365A  6E19               	movwf	isr@cont^0,c
 20186  00365C                     i2l13137:
 20187                           
 20188                           ;main.c: 133: {;main.c: 134: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 20189  00365C  5019               	movf	isr@cont^0,w,c
 20190  00365E  0D02               	mullw	2
 20191  003660  0E11               	movlw	low _tempo_tarefa
 20192  003662  24F3               	addwf	243,w,c
 20193  003664  6ED9               	movwf	fsr2l,c
 20194  003666  0E01               	movlw	high _tempo_tarefa
 20195  003668  20F4               	addwfc	prodh,w,c
 20196  00366A  6EDA               	movwf	fsr2h,c
 20197  00366C  50DE               	movf	postinc2,w,c
 20198  00366E  10DE               	iorwf	postinc2,w,c
 20199  003670  B4D8               	btfsc	status,2,c
 20200  003672  D00B               	goto	i2l13141
 20201  003674  5019               	movf	isr@cont^0,w,c
 20202  003676  0D02               	mullw	2
 20203  003678  0E11               	movlw	low _tempo_tarefa
 20204  00367A  24F3               	addwf	243,w,c
 20205  00367C  6ED9               	movwf	fsr2l,c
 20206  00367E  0E01               	movlw	high _tempo_tarefa
 20207  003680  20F4               	addwfc	prodh,w,c
 20208  003682  6EDA               	movwf	fsr2h,c
 20209  003684  06DE               	decf	postinc2,f,c
 20210  003686  0E00               	movlw	0
 20211  003688  5ADD               	subwfb	postdec2,f,c
 20212  00368A                     i2l13141:
 20213  00368A  2A19               	incf	isr@cont^0,f,c
 20214  00368C  0E02               	movlw	2
 20215  00368E  6419               	cpfsgt	isr@cont^0,c
 20216  003690  D7E5               	goto	i2l13137
 20217                           
 20218                           ;main.c: 136: };main.c: 137: if(time_sd > 0) time_sd--;
 20219  003692  5032               	movf	_time_sd^0,w,c
 20220  003694  1033               	iorwf	(_time_sd+1)^0,w,c
 20221  003696  B4D8               	btfsc	status,2,c
 20222  003698  D003               	goto	i2l13149
 20223  00369A  0632               	decf	_time_sd^0,f,c
 20224  00369C  A0D8               	btfss	status,0,c
 20225  00369E  0633               	decf	(_time_sd+1)^0,f,c
 20226  0036A0                     i2l13149:
 20227                           
 20228                           ;main.c: 138: if(time_atualizacao > 0) time_atualizacao--;
 20229  0036A0  5030               	movf	_time_atualizacao^0,w,c
 20230  0036A2  1031               	iorwf	(_time_atualizacao+1)^0,w,c
 20231  0036A4  B4D8               	btfsc	status,2,c
 20232  0036A6  D003               	goto	i2l13153
 20233  0036A8  0630               	decf	_time_atualizacao^0,f,c
 20234  0036AA  A0D8               	btfss	status,0,c
 20235  0036AC  0631               	decf	(_time_atualizacao+1)^0,f,c
 20236  0036AE                     i2l13153:
 20237                           
 20238                           ;main.c: 140: if(tarefa_em_execucao == 1)
 20239  0036AE  043A               	decf	_tarefa_em_execucao^0,w,c	;volatile
 20240  0036B0  A4D8               	btfss	status,2,c
 20241  0036B2  D00C               	goto	i2l13161
 20242                           
 20243                           ;main.c: 141: {;main.c: 142: timeout_tarefa--;
 20244  0036B4  0101               	movlb	1	; () banked
 20245  0036B6  0743               	decf	_timeout_tarefa& (0+255),f,b
 20246  0036B8  A0D8               	btfss	status,0,c
 20247  0036BA  0744               	decf	(_timeout_tarefa+1)& (0+255),f,b
 20248                           
 20249                           ; BSR set to: 1
 20250                           ;main.c: 143: if(!timeout_tarefa)
 20251  0036BC  5143               	movf	_timeout_tarefa& (0+255),w,b
 20252  0036BE  1144               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 20253  0036C0  A4D8               	btfss	status,2,c
 20254  0036C2  D004               	goto	i2l13161
 20255                           
 20256                           ; BSR set to: 1
 20257                           ;main.c: 144: {;main.c: 146: PCLATH = 0;
 20258  0036C4  0E00               	movlw	0
 20259  0036C6  6EFA               	movwf	250,c	;volatile
 20260                           
 20261                           ;main.c: 147: PCL = 0;
 20262  0036C8  0E00               	movlw	0
 20263  0036CA  6EF9               	movwf	249,c	;volatile
 20264  0036CC                     i2l13161:
 20265                           
 20266                           ;main.c: 148: };main.c: 149: };main.c: 153: write_timer_zero(0x45);
 20267  0036CC  0E00               	movlw	0
 20268  0036CE  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 20269  0036D0  0E45               	movlw	69
 20270  0036D2  6E01               	movwf	i2write_timer_zero@timer0^0,c
 20271  0036D4  ECE3  F02A         	call	i2_write_timer_zero	;wreg free
 20272  0036D8                     i2l13163:
 20273                           
 20274                           ;main.c: 154: };main.c: 156: if (INT0IF && INT0IE)
 20275  0036D8  B2F2               	btfsc	4082,1,c	;volatile
 20276  0036DA  A8F2               	btfss	4082,4,c	;volatile
 20277  0036DC  D001               	goto	i2l1421
 20278                           
 20279                           ;main.c: 157: {;main.c: 158: INT0IF = 0;
 20280  0036DE  92F2               	bcf	4082,1,c	;volatile
 20281  0036E0                     i2l1421:
 20282  0036E0  C018  FFF5         	movff	??_isr+11,tablat
 20283  0036E4  C017  FFF8         	movff	??_isr+10,tblptru
 20284  0036E8  C016  FFF7         	movff	??_isr+9,tblptrh
 20285  0036EC  C015  FFF6         	movff	??_isr+8,tblptrl
 20286  0036F0  C014  FFF4         	movff	??_isr+7,prodh
 20287  0036F4  C013  FFF3         	movff	??_isr+6,prodl
 20288  0036F8  C012  FFDA         	movff	??_isr+5,fsr2h
 20289  0036FC  C011  FFD9         	movff	??_isr+4,fsr2l
 20290  003700  C010  FFE2         	movff	??_isr+3,fsr1h
 20291  003704  C00F  FFE1         	movff	??_isr+2,fsr1l
 20292  003708  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20293  00370A  0011               	retfie		f
 20294  00370C                     __end_of_isr:
 20295                           	callstack 0
 20296                           
 20297 ;; *************** function i2_write_timer_zero *****************
 20298 ;; Defined at:
 20299 ;;		line 134 in file "bibliotecas/hardware.c"
 20300 ;; Parameters:    Size  Location     Type
 20301 ;;  timer0          2    0[COMRAM] unsigned int 
 20302 ;; Auto vars:     Size  Location     Type
 20303 ;;		None
 20304 ;; Return value:  Size  Location     Type
 20305 ;;                  1    wreg      void 
 20306 ;; Registers used:
 20307 ;;		None
 20308 ;; Tracked objects:
 20309 ;;		On entry : 0/0
 20310 ;;		On exit  : 0/0
 20311 ;;		Unchanged: 0/0
 20312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20313 ;;      Params:         2       0       0       0       0       0       0       0       0
 20314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20316 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20317 ;;Total ram usage:        2 bytes
 20318 ;; Hardware stack levels used:    1
 20319 ;; This function calls:
 20320 ;;		Nothing
 20321 ;; This function is called by:
 20322 ;;		_isr
 20323 ;; This function uses a non-reentrant model
 20324 ;;
 20325                           
 20326                           	psect	text114
 20327  0055C6                     __ptext114:
 20328                           	callstack 0
 20329  0055C6                     i2_write_timer_zero:
 20330                           	callstack 13
 20331                           
 20332                           ;hardware.c: 142: TMR0 = timer0;
 20333                           
 20334                           ;incstack = 0
 20335  0055C6  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 20336  0055CA  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 20337  0055CE  0012               	return		;funcret
 20338  0055D0                     __end_ofi2_write_timer_zero:
 20339                           	callstack 0
 20340                           
 20341 ;; *************** function _recebe_dado_uart *****************
 20342 ;; Defined at:
 20343 ;;		line 138 in file "bibliotecas/uart.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;		None
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;		None
 20348 ;; Return value:  Size  Location     Type
 20349 ;;                  1    wreg      unsigned char 
 20350 ;; Registers used:
 20351 ;;		wreg, status,2
 20352 ;; Tracked objects:
 20353 ;;		On entry : 0/0
 20354 ;;		On exit  : 0/0
 20355 ;;		Unchanged: 0/0
 20356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20357 ;;      Params:         0       0       0       0       0       0       0       0       0
 20358 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20359 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20360 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20361 ;;Total ram usage:        0 bytes
 20362 ;; Hardware stack levels used:    1
 20363 ;; This function calls:
 20364 ;;		Nothing
 20365 ;; This function is called by:
 20366 ;;		_isr
 20367 ;; This function uses a non-reentrant model
 20368 ;;
 20369                           
 20370                           	psect	text115
 20371  005534                     __ptext115:
 20372                           	callstack 0
 20373  005534                     _recebe_dado_uart:
 20374                           	callstack 13
 20375                           
 20376                           ;uart.c: 140: while(RCIF==0);
 20377                           
 20378                           ;incstack = 0
 20379  005534  AA9E               	btfss	3998,5,c	;volatile
 20380  005536  D7FE               	goto	_recebe_dado_uart
 20381                           
 20382                           ;uart.c: 141: if(RCSTAbits.OERR)
 20383  005538  A2AB               	btfss	171,1,c	;volatile
 20384  00553A  D003               	goto	i2l9461
 20385                           
 20386                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 20387  00553C  98AB               	bcf	4011,4,c	;volatile
 20388                           
 20389                           ;uart.c: 144: __nop();
 20390  00553E  F000               	nop	
 20391                           
 20392                           ;uart.c: 145: CREN=1;
 20393  005540  88AB               	bsf	4011,4,c	;volatile
 20394  005542                     i2l9461:
 20395                           
 20396                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 20397  005542  50AE               	movf	174,w,c	;volatile
 20398  005544  0012               	return		;funcret
 20399  005546                     __end_of_recebe_dado_uart:
 20400                           	callstack 0
 20401                           
 20402 ;; *************** function _GPSRead *****************
 20403 ;; Defined at:
 20404 ;;		line 61 in file "bibliotecas/GPS.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  buff            1    wreg     unsigned char 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;  buff            1   10[COMRAM] unsigned char 
 20409 ;;  c               1   11[COMRAM] unsigned char 
 20410 ;; Return value:  Size  Location     Type
 20411 ;;                  2  352[None  ] int 
 20412 ;; Registers used:
 20413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20414 ;; Tracked objects:
 20415 ;;		On entry : 0/0
 20416 ;;		On exit  : 0/0
 20417 ;;		Unchanged: 0/0
 20418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20419 ;;      Params:         0       0       0       0       0       0       0       0       0
 20420 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20422 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20423 ;;Total ram usage:        2 bytes
 20424 ;; Hardware stack levels used:    1
 20425 ;; Hardware stack levels required when called:    1
 20426 ;; This function calls:
 20427 ;;		_strcmp
 20428 ;;		_stringcpy
 20429 ;; This function is called by:
 20430 ;;		_isr
 20431 ;; This function uses a non-reentrant model
 20432 ;;
 20433                           
 20434                           	psect	text116
 20435  001E12                     __ptext116:
 20436                           	callstack 0
 20437  001E12                     _GPSRead:
 20438                           	callstack 12
 20439                           
 20440                           ;incstack = 0
 20441                           ;GPSRead@buff stored from wreg
 20442  001E12  6E0B               	movwf	GPSRead@buff^0,c
 20443                           
 20444                           ;GPS.c: 63: uint8_t c = buff;
 20445  001E14  C00B  F00C         	movff	GPSRead@buff,GPSRead@c
 20446                           
 20447                           ;GPS.c: 65: switch(c) {
 20448  001E18  D129               	goto	i2l12965
 20449  001E1A                     i2l12853:
 20450                           
 20451                           ;GPS.c: 67: if(SentenceType == 1)
 20452  001E1A  0443               	decf	_SentenceType^0,w,c
 20453  001E1C  A4D8               	btfss	status,2,c
 20454  001E1E  D005               	goto	i2l12857
 20455                           
 20456                           ;GPS.c: 68: GPRMC_ok = 1;
 20457  001E20  0E00               	movlw	0
 20458  001E22  0101               	movlb	1	; () banked
 20459  001E24  6F4A               	movwf	(_GPRMC_ok+1)& (0+255),b
 20460  001E26  0E01               	movlw	1
 20461  001E28  6F49               	movwf	_GPRMC_ok& (0+255),b
 20462  001E2A                     i2l12857:
 20463                           
 20464                           ;GPS.c: 69: if(SentenceType == 2)
 20465  001E2A  0E02               	movlw	2
 20466  001E2C  1843               	xorwf	_SentenceType^0,w,c
 20467  001E2E  A4D8               	btfss	status,2,c
 20468  001E30  D005               	goto	i2l12861
 20469                           
 20470                           ;GPS.c: 70: GPGGA_ok = 1;
 20471  001E32  0E00               	movlw	0
 20472  001E34  0101               	movlb	1	; () banked
 20473  001E36  6F48               	movwf	(_GPGGA_ok+1)& (0+255),b
 20474  001E38  0E01               	movlw	1
 20475  001E3A  6F47               	movwf	_GPGGA_ok& (0+255),b
 20476  001E3C                     i2l12861:
 20477                           
 20478                           ;GPS.c: 71: if(GPRMC_ok && GPGGA_ok) {
 20479  001E3C  0101               	movlb	1	; () banked
 20480  001E3E  5149               	movf	_GPRMC_ok& (0+255),w,b
 20481  001E40  114A               	iorwf	(_GPRMC_ok+1)& (0+255),w,b
 20482  001E42  B4D8               	btfsc	status,2,c
 20483  001E44  0012               	return	
 20484                           
 20485                           ; BSR set to: 1
 20486  001E46  5147               	movf	_GPGGA_ok& (0+255),w,b
 20487  001E48  1148               	iorwf	(_GPGGA_ok+1)& (0+255),w,b
 20488  001E4A  B4D8               	btfsc	status,2,c
 20489  001E4C  0012               	return	
 20490                           
 20491                           ; BSR set to: 1
 20492                           ;GPS.c: 72: GPRMC_ok = GPGGA_ok = 0;
 20493  001E4E  0E00               	movlw	0
 20494  001E50  6F48               	movwf	(_GPGGA_ok+1)& (0+255),b
 20495  001E52  0E00               	movlw	0
 20496  001E54  6F47               	movwf	_GPGGA_ok& (0+255),b
 20497  001E56  C147  F149         	movff	_GPGGA_ok,_GPRMC_ok
 20498  001E5A  C148  F14A         	movff	_GPGGA_ok+1,_GPRMC_ok+1
 20499  001E5E  0012               	return	
 20500  001E60                     i2l12869:
 20501                           
 20502                           ;GPS.c: 78: Term = char_number = 0;
 20503  001E60  0E00               	movlw	0
 20504  001E62  6E44               	movwf	_char_number^0,c
 20505  001E64  C044  F042         	movff	_char_number,_Term
 20506                           
 20507                           ;GPS.c: 79: break;
 20508  001E68  0012               	return	
 20509  001E6A                     i2l12871:
 20510                           
 20511                           ;GPS.c: 82: buffer[char_number] = '\0';
 20512  001E6A  0E91               	movlw	low _buffer
 20513  001E6C  2444               	addwf	_char_number^0,w,c
 20514  001E6E  6ED9               	movwf	fsr2l,c
 20515  001E70  6ADA               	clrf	fsr2h,c
 20516  001E72  0E01               	movlw	high _buffer
 20517  001E74  22DA               	addwfc	fsr2h,f,c
 20518  001E76  0E00               	movlw	0
 20519  001E78  6EDF               	movwf	indf2,c
 20520                           
 20521                           ;GPS.c: 83: if(Term == 0) {
 20522  001E7A  5042               	movf	_Term^0,w,c
 20523  001E7C  A4D8               	btfss	status,2,c
 20524  001E7E  D032               	goto	i2l12887
 20525                           
 20526                           ;GPS.c: 84: stringcpy(buffer, sentence, 0, 5);
 20527  001E80  0E91               	movlw	low _buffer
 20528  001E82  6E01               	movwf	stringcpy@str1^0,c
 20529  001E84  0E01               	movlw	high _buffer
 20530  001E86  6E02               	movwf	(stringcpy@str1+1)^0,c
 20531  001E88  0EB5               	movlw	low _sentence
 20532  001E8A  6E03               	movwf	stringcpy@str2^0,c
 20533  001E8C  0E01               	movlw	high _sentence
 20534  001E8E  6E04               	movwf	(stringcpy@str2+1)^0,c
 20535  001E90  0E00               	movlw	0
 20536  001E92  6E06               	movwf	(stringcpy@dir+1)^0,c
 20537  001E94  0E00               	movlw	0
 20538  001E96  6E05               	movwf	stringcpy@dir^0,c
 20539  001E98  0E05               	movlw	5
 20540  001E9A  6E07               	movwf	stringcpy@size^0,c
 20541  001E9C  ECFD  F026         	call	_stringcpy	;wreg free
 20542                           
 20543                           ;GPS.c: 85: if(strcmp(sentence, "GPRMC") == 0)
 20544  001EA0  0EB5               	movlw	low _sentence
 20545  001EA2  6E01               	movwf	strcmp@s1^0,c
 20546  001EA4  0E01               	movlw	high _sentence
 20547  001EA6  6E02               	movwf	(strcmp@s1+1)^0,c
 20548  001EA8  0E59               	movlw	low STR_5
 20549  001EAA  6E03               	movwf	strcmp@s2^0,c
 20550  001EAC  0E62               	movlw	high STR_5
 20551  001EAE  6E04               	movwf	(strcmp@s2+1)^0,c
 20552  001EB0  EC24  F027         	call	_strcmp	;wreg free
 20553  001EB4  5001               	movf	?_strcmp^0,w,c
 20554  001EB6  1002               	iorwf	(?_strcmp+1)^0,w,c
 20555  001EB8  A4D8               	btfss	status,2,c
 20556  001EBA  D002               	goto	i2l12881
 20557                           
 20558                           ;GPS.c: 86: SentenceType = 1;
 20559  001EBC  0E01               	movlw	1
 20560  001EBE  D011               	goto	L7
 20561  001EC0                     i2l12881:
 20562                           
 20563                           ;GPS.c: 87: else if(strcmp(sentence, "GPGGA") == 0)
 20564  001EC0  0EB5               	movlw	low _sentence
 20565  001EC2  6E01               	movwf	strcmp@s1^0,c
 20566  001EC4  0E01               	movlw	high _sentence
 20567  001EC6  6E02               	movwf	(strcmp@s1+1)^0,c
 20568  001EC8  0E53               	movlw	low STR_6
 20569  001ECA  6E03               	movwf	strcmp@s2^0,c
 20570  001ECC  0E62               	movlw	high STR_6
 20571  001ECE  6E04               	movwf	(strcmp@s2+1)^0,c
 20572  001ED0  EC24  F027         	call	_strcmp	;wreg free
 20573  001ED4  5001               	movf	?_strcmp^0,w,c
 20574  001ED6  1002               	iorwf	(?_strcmp+1)^0,w,c
 20575  001ED8  A4D8               	btfss	status,2,c
 20576  001EDA  D002               	goto	i2l12885
 20577                           
 20578                           ;GPS.c: 88: SentenceType = 2;
 20579  001EDC  0E02               	movlw	2
 20580  001EDE  D001               	goto	L7
 20581  001EE0                     i2l12885:
 20582                           
 20583                           ;GPS.c: 89: else;GPS.c: 90: SentenceType = 3;
 20584  001EE0  0E03               	movlw	3
 20585  001EE2                     L7:
 20586  001EE2  6E43               	movwf	_SentenceType^0,c
 20587  001EE4                     i2l12887:
 20588                           
 20589                           ;GPS.c: 91: };GPS.c: 94: if(Term == 1 && SentenceType == 1) {
 20590  001EE4  0442               	decf	_Term^0,w,c
 20591  001EE6  A4D8               	btfss	status,2,c
 20592  001EE8  D015               	goto	i2l12895
 20593  001EEA  0443               	decf	_SentenceType^0,w,c
 20594  001EEC  A4D8               	btfss	status,2,c
 20595  001EEE  D012               	goto	i2l12895
 20596                           
 20597                           ;GPS.c: 95: stringcpy(buffer, rawTime, 0, 6);
 20598  001EF0  0E91               	movlw	low _buffer
 20599  001EF2  6E01               	movwf	stringcpy@str1^0,c
 20600  001EF4  0E01               	movlw	high _buffer
 20601  001EF6  6E02               	movwf	(stringcpy@str1+1)^0,c
 20602  001EF8  0E9D               	movlw	low _rawTime
 20603  001EFA  6E03               	movwf	stringcpy@str2^0,c
 20604  001EFC  0E01               	movlw	high _rawTime
 20605  001EFE  6E04               	movwf	(stringcpy@str2+1)^0,c
 20606  001F00  0E00               	movlw	0
 20607  001F02  6E06               	movwf	(stringcpy@dir+1)^0,c
 20608  001F04  0E00               	movlw	0
 20609  001F06  6E05               	movwf	stringcpy@dir^0,c
 20610  001F08  0E06               	movlw	6
 20611  001F0A  6E07               	movwf	stringcpy@size^0,c
 20612  001F0C  ECFD  F026         	call	_stringcpy	;wreg free
 20613                           
 20614                           ;GPS.c: 97: gps_flag[0].flag = 1;
 20615  001F10  0101               	movlb	1	; () banked
 20616  001F12  8129               	bsf	_gps_flag& (0+255),0,b
 20617  001F14                     i2l12895:
 20618                           
 20619                           ;GPS.c: 98: };GPS.c: 101: if((Term == 3) && (SentenceType == 1)) {
 20620  001F14  0E03               	movlw	3
 20621  001F16  1842               	xorwf	_Term^0,w,c
 20622  001F18  A4D8               	btfss	status,2,c
 20623  001F1A  D015               	goto	i2l12903
 20624  001F1C  0443               	decf	_SentenceType^0,w,c
 20625  001F1E  A4D8               	btfss	status,2,c
 20626  001F20  D012               	goto	i2l12903
 20627                           
 20628                           ;GPS.c: 102: stringcpy(buffer, rawLatitude, 1, 10);
 20629  001F22  0E91               	movlw	low _buffer
 20630  001F24  6E01               	movwf	stringcpy@str1^0,c
 20631  001F26  0E01               	movlw	high _buffer
 20632  001F28  6E02               	movwf	(stringcpy@str1+1)^0,c
 20633  001F2A  0ED7               	movlw	low _rawLatitude
 20634  001F2C  6E03               	movwf	stringcpy@str2^0,c
 20635  001F2E  0E01               	movlw	high _rawLatitude
 20636  001F30  6E04               	movwf	(stringcpy@str2+1)^0,c
 20637  001F32  0E00               	movlw	0
 20638  001F34  6E06               	movwf	(stringcpy@dir+1)^0,c
 20639  001F36  0E01               	movlw	1
 20640  001F38  6E05               	movwf	stringcpy@dir^0,c
 20641  001F3A  0E0A               	movlw	10
 20642  001F3C  6E07               	movwf	stringcpy@size^0,c
 20643  001F3E  ECFD  F026         	call	_stringcpy	;wreg free
 20644                           
 20645                           ;GPS.c: 103: gps_flag[1].flag = 1;
 20646  001F42  0101               	movlb	1	; () banked
 20647  001F44  812A               	bsf	(_gps_flag+1)& (0+255),0,b
 20648  001F46                     i2l12903:
 20649                           
 20650                           ;GPS.c: 104: };GPS.c: 106: if((Term == 4) && (SentenceType == 1)) {
 20651  001F46  0E04               	movlw	4
 20652  001F48  1842               	xorwf	_Term^0,w,c
 20653  001F4A  A4D8               	btfss	status,2,c
 20654  001F4C  D00C               	goto	i2l12913
 20655  001F4E  0443               	decf	_SentenceType^0,w,c
 20656  001F50  A4D8               	btfss	status,2,c
 20657  001F52  D009               	goto	i2l12913
 20658                           
 20659                           ;GPS.c: 107: if(buffer[0] == 'N')
 20660  001F54  0E4E               	movlw	78
 20661  001F56  0101               	movlb	1	; () banked
 20662  001F58  1991               	xorwf	_buffer& (0+255),w,b
 20663  001F5A  A4D8               	btfss	status,2,c
 20664  001F5C  D002               	goto	i2l12911
 20665                           
 20666                           ; BSR set to: 1
 20667                           ;GPS.c: 108: rawLatitude[0] = '0';
 20668  001F5E  0E30               	movlw	48
 20669  001F60  D001               	goto	L8
 20670  001F62                     i2l12911:
 20671                           
 20672                           ; BSR set to: 1
 20673                           ;GPS.c: 109: else;GPS.c: 110: rawLatitude[0] = '-';
 20674  001F62  0E2D               	movlw	45
 20675  001F64                     L8:
 20676  001F64  6FD7               	movwf	_rawLatitude& (0+255),b
 20677  001F66                     i2l12913:
 20678                           
 20679                           ;GPS.c: 111: };GPS.c: 114: if((Term == 5) && (SentenceType == 1)) {
 20680  001F66  0E05               	movlw	5
 20681  001F68  1842               	xorwf	_Term^0,w,c
 20682  001F6A  A4D8               	btfss	status,2,c
 20683  001F6C  D015               	goto	i2l12921
 20684  001F6E  0443               	decf	_SentenceType^0,w,c
 20685  001F70  A4D8               	btfss	status,2,c
 20686  001F72  D012               	goto	i2l12921
 20687                           
 20688                           ;GPS.c: 115: stringcpy(buffer, rawLongitude, 1, 11);
 20689  001F74  0E91               	movlw	low _buffer
 20690  001F76  6E01               	movwf	stringcpy@str1^0,c
 20691  001F78  0E01               	movlw	high _buffer
 20692  001F7A  6E02               	movwf	(stringcpy@str1+1)^0,c
 20693  001F7C  0ECB               	movlw	low _rawLongitude
 20694  001F7E  6E03               	movwf	stringcpy@str2^0,c
 20695  001F80  0E01               	movlw	high _rawLongitude
 20696  001F82  6E04               	movwf	(stringcpy@str2+1)^0,c
 20697  001F84  0E00               	movlw	0
 20698  001F86  6E06               	movwf	(stringcpy@dir+1)^0,c
 20699  001F88  0E01               	movlw	1
 20700  001F8A  6E05               	movwf	stringcpy@dir^0,c
 20701  001F8C  0E0B               	movlw	11
 20702  001F8E  6E07               	movwf	stringcpy@size^0,c
 20703  001F90  ECFD  F026         	call	_stringcpy	;wreg free
 20704                           
 20705                           ;GPS.c: 116: gps_flag[2].flag = 1;
 20706  001F94  0101               	movlb	1	; () banked
 20707  001F96  812B               	bsf	(_gps_flag+2)& (0+255),0,b
 20708  001F98                     i2l12921:
 20709                           
 20710                           ;GPS.c: 117: };GPS.c: 119: if((Term == 6) && (SentenceType == 1)) {
 20711  001F98  0E06               	movlw	6
 20712  001F9A  1842               	xorwf	_Term^0,w,c
 20713  001F9C  A4D8               	btfss	status,2,c
 20714  001F9E  D00C               	goto	i2l12931
 20715  001FA0  0443               	decf	_SentenceType^0,w,c
 20716  001FA2  A4D8               	btfss	status,2,c
 20717  001FA4  D009               	goto	i2l12931
 20718                           
 20719                           ;GPS.c: 120: if(buffer[0] == 'E')
 20720  001FA6  0E45               	movlw	69
 20721  001FA8  0101               	movlb	1	; () banked
 20722  001FAA  1991               	xorwf	_buffer& (0+255),w,b
 20723  001FAC  A4D8               	btfss	status,2,c
 20724  001FAE  D002               	goto	i2l12929
 20725                           
 20726                           ; BSR set to: 1
 20727                           ;GPS.c: 121: rawLongitude[0] = '0';
 20728  001FB0  0E30               	movlw	48
 20729  001FB2  D001               	goto	L9
 20730  001FB4                     i2l12929:
 20731                           
 20732                           ; BSR set to: 1
 20733                           ;GPS.c: 122: else;GPS.c: 123: rawLongitude[0] = '-';
 20734  001FB4  0E2D               	movlw	45
 20735  001FB6                     L9:
 20736  001FB6  6FCB               	movwf	_rawLongitude& (0+255),b
 20737  001FB8                     i2l12931:
 20738                           
 20739                           ;GPS.c: 124: };GPS.c: 127: if((Term == 7) && (SentenceType == 1)) {
 20740  001FB8  0E07               	movlw	7
 20741  001FBA  1842               	xorwf	_Term^0,w,c
 20742  001FBC  A4D8               	btfss	status,2,c
 20743  001FBE  D015               	goto	i2l12939
 20744  001FC0  0443               	decf	_SentenceType^0,w,c
 20745  001FC2  A4D8               	btfss	status,2,c
 20746  001FC4  D012               	goto	i2l12939
 20747                           
 20748                           ;GPS.c: 128: stringcpy(buffer, rawSpeed, 0, 3);
 20749  001FC6  0E91               	movlw	low _buffer
 20750  001FC8  6E01               	movwf	stringcpy@str1^0,c
 20751  001FCA  0E01               	movlw	high _buffer
 20752  001FCC  6E02               	movwf	(stringcpy@str1+1)^0,c
 20753  001FCE  0EAF               	movlw	low _rawSpeed
 20754  001FD0  6E03               	movwf	stringcpy@str2^0,c
 20755  001FD2  0E01               	movlw	high _rawSpeed
 20756  001FD4  6E04               	movwf	(stringcpy@str2+1)^0,c
 20757  001FD6  0E00               	movlw	0
 20758  001FD8  6E06               	movwf	(stringcpy@dir+1)^0,c
 20759  001FDA  0E00               	movlw	0
 20760  001FDC  6E05               	movwf	stringcpy@dir^0,c
 20761  001FDE  0E03               	movlw	3
 20762  001FE0  6E07               	movwf	stringcpy@size^0,c
 20763  001FE2  ECFD  F026         	call	_stringcpy	;wreg free
 20764                           
 20765                           ;GPS.c: 129: gps_flag[5].flag = 1;
 20766  001FE6  0101               	movlb	1	; () banked
 20767  001FE8  812E               	bsf	(_gps_flag+5)& (0+255),0,b
 20768  001FEA                     i2l12939:
 20769                           
 20770                           ;GPS.c: 130: };GPS.c: 138: if(Term == 9 && SentenceType == 1) {
 20771  001FEA  0E09               	movlw	9
 20772  001FEC  1842               	xorwf	_Term^0,w,c
 20773  001FEE  A4D8               	btfss	status,2,c
 20774  001FF0  D015               	goto	i2l12947
 20775  001FF2  0443               	decf	_SentenceType^0,w,c
 20776  001FF4  A4D8               	btfss	status,2,c
 20777  001FF6  D012               	goto	i2l12947
 20778                           
 20779                           ;GPS.c: 139: stringcpy(buffer, rawDate, 0, 6);
 20780  001FF8  0E91               	movlw	low _buffer
 20781  001FFA  6E01               	movwf	stringcpy@str1^0,c
 20782  001FFC  0E01               	movlw	high _buffer
 20783  001FFE  6E02               	movwf	(stringcpy@str1+1)^0,c
 20784  002000  0EA8               	movlw	low _rawDate
 20785  002002  6E03               	movwf	stringcpy@str2^0,c
 20786  002004  0E01               	movlw	high _rawDate
 20787  002006  6E04               	movwf	(stringcpy@str2+1)^0,c
 20788  002008  0E00               	movlw	0
 20789  00200A  6E06               	movwf	(stringcpy@dir+1)^0,c
 20790  00200C  0E00               	movlw	0
 20791  00200E  6E05               	movwf	stringcpy@dir^0,c
 20792  002010  0E06               	movlw	6
 20793  002012  6E07               	movwf	stringcpy@size^0,c
 20794  002014  ECFD  F026         	call	_stringcpy	;wreg free
 20795                           
 20796                           ;GPS.c: 140: gps_flag[3].flag = 1;
 20797  002018  0101               	movlb	1	; () banked
 20798  00201A  812C               	bsf	(_gps_flag+3)& (0+255),0,b
 20799  00201C                     i2l12947:
 20800                           
 20801                           ;GPS.c: 141: };GPS.c: 154: if((Term == 6) && (SentenceType == 2)) {
 20802  00201C  0E06               	movlw	6
 20803  00201E  1842               	xorwf	_Term^0,w,c
 20804  002020  A4D8               	btfss	status,2,c
 20805  002022  D016               	goto	i2l12955
 20806  002024  0E02               	movlw	2
 20807  002026  1843               	xorwf	_SentenceType^0,w,c
 20808  002028  A4D8               	btfss	status,2,c
 20809  00202A  D012               	goto	i2l12955
 20810                           
 20811                           ;GPS.c: 155: stringcpy(buffer, rawFix, 0, 2);
 20812  00202C  0E91               	movlw	low _buffer
 20813  00202E  6E01               	movwf	stringcpy@str1^0,c
 20814  002030  0E01               	movlw	high _buffer
 20815  002032  6E02               	movwf	(stringcpy@str1+1)^0,c
 20816  002034  0EBB               	movlw	low _rawFix
 20817  002036  6E03               	movwf	stringcpy@str2^0,c
 20818  002038  0E01               	movlw	high _rawFix
 20819  00203A  6E04               	movwf	(stringcpy@str2+1)^0,c
 20820  00203C  0E00               	movlw	0
 20821  00203E  6E06               	movwf	(stringcpy@dir+1)^0,c
 20822  002040  0E00               	movlw	0
 20823  002042  6E05               	movwf	stringcpy@dir^0,c
 20824  002044  0E02               	movlw	2
 20825  002046  6E07               	movwf	stringcpy@size^0,c
 20826  002048  ECFD  F026         	call	_stringcpy	;wreg free
 20827                           
 20828                           ;GPS.c: 156: gps_flag[4].flag = 1;
 20829  00204C  0101               	movlb	1	; () banked
 20830  00204E  812D               	bsf	(_gps_flag+4)& (0+255),0,b
 20831  002050                     i2l12955:
 20832                           
 20833                           ;GPS.c: 158: };GPS.c: 159: Term++;
 20834  002050  2A42               	incf	_Term^0,f,c
 20835                           
 20836                           ;GPS.c: 160: char_number = 0;
 20837  002052  0E00               	movlw	0
 20838  002054  6E44               	movwf	_char_number^0,c
 20839                           
 20840                           ;GPS.c: 161: break;
 20841  002056  0012               	return	
 20842  002058                     i2l12959:
 20843                           
 20844                           ;GPS.c: 164: buffer[char_number++] = c;
 20845  002058  0E91               	movlw	low _buffer
 20846  00205A  2444               	addwf	_char_number^0,w,c
 20847  00205C  6ED9               	movwf	fsr2l,c
 20848  00205E  6ADA               	clrf	fsr2h,c
 20849  002060  0E01               	movlw	high _buffer
 20850  002062  22DA               	addwfc	fsr2h,f,c
 20851  002064  C00C  FFDF         	movff	GPSRead@c,indf2
 20852  002068  2A44               	incf	_char_number^0,f,c
 20853                           
 20854                           ;GPS.c: 165: break;
 20855  00206A  0012               	return	
 20856  00206C                     i2l12965:
 20857  00206C  500C               	movf	GPSRead@c^0,w,c
 20858                           
 20859                           ; Switch size 1, requested type "simple"
 20860                           ; Number of cases is 3, Range of values is 13 to 44
 20861                           ; switch strategies available:
 20862                           ; Name         Instructions Cycles
 20863                           ; simple_byte           10     6 (average)
 20864                           ;	Chosen strategy is simple_byte
 20865  00206E  0A0D               	xorlw	13	; case 13
 20866  002070  B4D8               	btfsc	status,2,c
 20867  002072  D6D3               	goto	i2l12853
 20868  002074  0A29               	xorlw	41	; case 36
 20869  002076  B4D8               	btfsc	status,2,c
 20870  002078  D6F3               	goto	i2l12869
 20871  00207A  0A08               	xorlw	8	; case 44
 20872  00207C  B4D8               	btfsc	status,2,c
 20873  00207E  D6F5               	goto	i2l12871
 20874  002080  D7EB               	goto	i2l12959
 20875  002082                     __end_of_GPSRead:
 20876                           	callstack 0
 20877                           
 20878 ;; *************** function _stringcpy *****************
 20879 ;; Defined at:
 20880 ;;		line 52 in file "bibliotecas/GPS.c"
 20881 ;; Parameters:    Size  Location     Type
 20882 ;;  str1            2    0[COMRAM] PTR unsigned char 
 20883 ;;		 -> buffer(12), 
 20884 ;;  str2            2    2[COMRAM] PTR unsigned char 
 20885 ;;		 -> rawFix(2), rawDate(7), rawSpeed(6), rawLongitude(12), 
 20886 ;;		 -> rawLatitude(11), rawTime(11), sentence(6), 
 20887 ;;  dir             2    4[COMRAM] int 
 20888 ;;  size            1    6[COMRAM] unsigned char 
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;  chr             1    9[COMRAM] unsigned char 
 20891 ;; Return value:  Size  Location     Type
 20892 ;;                  1    wreg      void 
 20893 ;; Registers used:
 20894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20895 ;; Tracked objects:
 20896 ;;		On entry : 0/0
 20897 ;;		On exit  : 0/0
 20898 ;;		Unchanged: 0/0
 20899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20900 ;;      Params:         7       0       0       0       0       0       0       0       0
 20901 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20902 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20903 ;;      Totals:        10       0       0       0       0       0       0       0       0
 20904 ;;Total ram usage:       10 bytes
 20905 ;; Hardware stack levels used:    1
 20906 ;; This function calls:
 20907 ;;		Nothing
 20908 ;; This function is called by:
 20909 ;;		_GPSRead
 20910 ;; This function uses a non-reentrant model
 20911 ;;
 20912                           
 20913                           	psect	text117
 20914  004DFA                     __ptext117:
 20915                           	callstack 0
 20916  004DFA                     _stringcpy:
 20917                           	callstack 12
 20918                           
 20919                           ;GPS.c: 54: uint8_t chr = 0;
 20920                           
 20921                           ;incstack = 0
 20922  004DFA  0E00               	movlw	0
 20923  004DFC  6E0A               	movwf	stringcpy@chr^0,c
 20924  004DFE                     i2l12657:
 20925                           
 20926                           ;GPS.c: 57: str2[chr + dir] = str1[chr];
 20927  004DFE  500A               	movf	stringcpy@chr^0,w,c
 20928  004E00  2401               	addwf	stringcpy@str1^0,w,c
 20929  004E02  6ED9               	movwf	fsr2l,c
 20930  004E04  0E00               	movlw	0
 20931  004E06  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 20932  004E08  6EDA               	movwf	fsr2h,c
 20933  004E0A  500A               	movf	stringcpy@chr^0,w,c
 20934  004E0C  2403               	addwf	stringcpy@str2^0,w,c
 20935  004E0E  6E08               	movwf	??_stringcpy^0,c
 20936  004E10  0E00               	movlw	0
 20937  004E12  2004               	addwfc	(stringcpy@str2+1)^0,w,c
 20938  004E14  6E09               	movwf	(??_stringcpy+1)^0,c
 20939  004E16  5005               	movf	stringcpy@dir^0,w,c
 20940  004E18  2408               	addwf	??_stringcpy^0,w,c
 20941  004E1A  6EE1               	movwf	fsr1l,c
 20942  004E1C  5006               	movf	(stringcpy@dir+1)^0,w,c
 20943  004E1E  2009               	addwfc	(??_stringcpy+1)^0,w,c
 20944  004E20  6EE2               	movwf	fsr1h,c
 20945  004E22  CFDF FFE7          	movff	indf2,indf1
 20946                           
 20947                           ;GPS.c: 58: } while(str1[chr++] != '\0' && chr != size);
 20948  004E26  2A0A               	incf	stringcpy@chr^0,f,c
 20949  004E28  040A               	decf	stringcpy@chr^0,w,c
 20950  004E2A  6E08               	movwf	??_stringcpy^0,c
 20951  004E2C  5008               	movf	??_stringcpy^0,w,c
 20952  004E2E  2401               	addwf	stringcpy@str1^0,w,c
 20953  004E30  6ED9               	movwf	fsr2l,c
 20954  004E32  0E00               	movlw	0
 20955  004E34  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 20956  004E36  6EDA               	movwf	fsr2h,c
 20957  004E38  50DF               	movf	indf2,w,c
 20958  004E3A  B4D8               	btfsc	status,2,c
 20959  004E3C  0012               	return	
 20960  004E3E  5007               	movf	stringcpy@size^0,w,c
 20961  004E40  180A               	xorwf	stringcpy@chr^0,w,c
 20962  004E42  B4D8               	btfsc	status,2,c
 20963  004E44  0012               	return	
 20964  004E46  D7DB               	goto	i2l12657
 20965  004E48                     __end_of_stringcpy:
 20966                           	callstack 0
 20967                           
 20968 ;; *************** function _strcmp *****************
 20969 ;; Defined at:
 20970 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcmp.c"
 20971 ;; Parameters:    Size  Location     Type
 20972 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 20973 ;;		 -> sentence(6), 
 20974 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 20975 ;;		 -> STR_6(6), STR_5(6), 
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;  r               1    6[COMRAM] char 
 20978 ;; Return value:  Size  Location     Type
 20979 ;;                  2    0[COMRAM] int 
 20980 ;; Registers used:
 20981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20982 ;; Tracked objects:
 20983 ;;		On entry : 0/0
 20984 ;;		On exit  : 0/0
 20985 ;;		Unchanged: 0/0
 20986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20987 ;;      Params:         4       0       0       0       0       0       0       0       0
 20988 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20989 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20990 ;;      Totals:         7       0       0       0       0       0       0       0       0
 20991 ;;Total ram usage:        7 bytes
 20992 ;; Hardware stack levels used:    1
 20993 ;; This function calls:
 20994 ;;		Nothing
 20995 ;; This function is called by:
 20996 ;;		_GPSRead
 20997 ;; This function uses a non-reentrant model
 20998 ;;
 20999                           
 21000                           	psect	text118
 21001  004E48                     __ptext118:
 21002                           	callstack 0
 21003  004E48                     _strcmp:
 21004                           	callstack 12
 21005                           
 21006                           ;incstack = 0
 21007  004E48  D004               	goto	i2l12667
 21008  004E4A                     i2l12665:
 21009  004E4A  4A01               	infsnz	strcmp@s1^0,f,c
 21010  004E4C  2A02               	incf	(strcmp@s1+1)^0,f,c
 21011  004E4E  4A03               	infsnz	strcmp@s2^0,f,c
 21012  004E50  2A04               	incf	(strcmp@s2+1)^0,f,c
 21013  004E52                     i2l12667:
 21014  004E52  C003  FFF6         	movff	strcmp@s2,tblptrl
 21015  004E56  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 21016  004E5A                     	if	0	;tblptru may be non-zero
 21017  004E5A                     	endif
 21018  004E5A                     	if	0	;tblptru may be non-zero
 21019  004E5A                     	endif
 21020  004E5A  0008               	tblrd		*
 21021  004E5C  CFF5 F005          	movff	tablat,??_strcmp
 21022  004E60  C001  FFD9         	movff	strcmp@s1,fsr2l
 21023  004E64  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 21024  004E68  50DF               	movf	indf2,w,c
 21025  004E6A  6E06               	movwf	(??_strcmp+1)^0,c
 21026  004E6C  5005               	movf	??_strcmp^0,w,c
 21027  004E6E  5C06               	subwf	(??_strcmp+1)^0,w,c
 21028  004E70  6E07               	movwf	strcmp@r^0,c
 21029  004E72  5007               	movf	strcmp@r^0,w,c
 21030  004E74  A4D8               	btfss	status,2,c
 21031  004E76  D007               	goto	i2u1532_40
 21032  004E78  C001  FFD9         	movff	strcmp@s1,fsr2l
 21033  004E7C  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 21034  004E80  50DF               	movf	indf2,w,c
 21035  004E82  A4D8               	btfss	status,2,c
 21036  004E84  D7E2               	goto	i2l12665
 21037  004E86                     i2u1532_40:
 21038  004E86  5007               	movf	strcmp@r^0,w,c
 21039  004E88  6E01               	movwf	?_strcmp^0,c
 21040  004E8A  6A02               	clrf	(?_strcmp+1)^0,c
 21041  004E8C  BE01               	btfsc	?_strcmp^0,7,c
 21042  004E8E  0602               	decf	(?_strcmp+1)^0,f,c
 21043  004E90  0012               	return		;funcret
 21044  004E92                     __end_of_strcmp:
 21045                           	callstack 0
 21046                           
 21047                           	psect	text119
 21048  000000                     __ptext119:
 21049                           	callstack 0
 21050                           
 21051                           	psect	rparam
 21052  0000                     
 21053                           	psect	temp
 21054  000046                     btemp:
 21055                           	callstack 0
 21056  000046                     	ds	1
 21057  0000                     int$flags	set	btemp
 21058  0000                     wtemp8	set	btemp+1
 21059  0000                     ttemp5	set	btemp+1
 21060  0000                     ttemp6	set	btemp+4
 21061  0000                     ttemp7	set	btemp+8
 21062                           
 21063                           	psect	idloc
 21064                           
 21065                           ;Config register IDLOC0 @ 0x200000
 21066                           ;	unspecified, using default values
 21067  200000                     	org	2097152
 21068  200000  FF                 	db	255
 21069                           
 21070                           ;Config register IDLOC1 @ 0x200001
 21071                           ;	unspecified, using default values
 21072  200001                     	org	2097153
 21073  200001  FF                 	db	255
 21074                           
 21075                           ;Config register IDLOC2 @ 0x200002
 21076                           ;	unspecified, using default values
 21077  200002                     	org	2097154
 21078  200002  FF                 	db	255
 21079                           
 21080                           ;Config register IDLOC3 @ 0x200003
 21081                           ;	unspecified, using default values
 21082  200003                     	org	2097155
 21083  200003  FF                 	db	255
 21084                           
 21085                           ;Config register IDLOC4 @ 0x200004
 21086                           ;	unspecified, using default values
 21087  200004                     	org	2097156
 21088  200004  FF                 	db	255
 21089                           
 21090                           ;Config register IDLOC5 @ 0x200005
 21091                           ;	unspecified, using default values
 21092  200005                     	org	2097157
 21093  200005  FF                 	db	255
 21094                           
 21095                           ;Config register IDLOC6 @ 0x200006
 21096                           ;	unspecified, using default values
 21097  200006                     	org	2097158
 21098  200006  FF                 	db	255
 21099                           
 21100                           ;Config register IDLOC7 @ 0x200007
 21101                           ;	unspecified, using default values
 21102  200007                     	org	2097159
 21103  200007  FF                 	db	255
 21104                           
 21105                           	psect	config
 21106                           
 21107                           ;Config register CONFIG1L @ 0x300000
 21108                           ;	unspecified, using default values
 21109                           ;	PLL Prescaler Selection bits
 21110                           ;	PLLDIV = 0x0, unprogrammed default
 21111                           ;	System Clock Postscaler Selection bits
 21112                           ;	CPUDIV = 0x0, unprogrammed default
 21113                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 21114                           ;	USBDIV = 0x0, unprogrammed default
 21115  300000                     	org	3145728
 21116  300000  00                 	db	0
 21117                           
 21118                           ;Config register CONFIG1H @ 0x300001
 21119                           ;	unspecified, using default values
 21120                           ;	Oscillator Selection bits
 21121                           ;	FOSC = 0x5, unprogrammed default
 21122                           ;	Fail-Safe Clock Monitor Enable bit
 21123                           ;	FCMEN = 0x0, unprogrammed default
 21124                           ;	Internal/External Oscillator Switchover bit
 21125                           ;	IESO = 0x0, unprogrammed default
 21126  300001                     	org	3145729
 21127  300001  05                 	db	5
 21128                           
 21129                           ;Config register CONFIG2L @ 0x300002
 21130                           ;	unspecified, using default values
 21131                           ;	Power-up Timer Enable bit
 21132                           ;	PWRT = 0x1, unprogrammed default
 21133                           ;	Brown-out Reset Enable bits
 21134                           ;	BOR = 0x3, unprogrammed default
 21135                           ;	Brown-out Reset Voltage bits
 21136                           ;	BORV = 0x3, unprogrammed default
 21137                           ;	USB Voltage Regulator Enable bit
 21138                           ;	VREGEN = 0x0, unprogrammed default
 21139  300002                     	org	3145730
 21140  300002  1F                 	db	31
 21141                           
 21142                           ;Config register CONFIG2H @ 0x300003
 21143                           ;	unspecified, using default values
 21144                           ;	Watchdog Timer Enable bit
 21145                           ;	WDT = 0x1, unprogrammed default
 21146                           ;	Watchdog Timer Postscale Select bits
 21147                           ;	WDTPS = 0xF, unprogrammed default
 21148  300003                     	org	3145731
 21149  300003  1F                 	db	31
 21150                           
 21151                           ; Padding undefined space
 21152  300004                     	org	3145732
 21153  300004  FF                 	db	255
 21154                           
 21155                           ;Config register CONFIG3H @ 0x300005
 21156                           ;	unspecified, using default values
 21157                           ;	CCP2 MUX bit
 21158                           ;	CCP2MX = 0x1, unprogrammed default
 21159                           ;	PORTB A/D Enable bit
 21160                           ;	PBADEN = 0x1, unprogrammed default
 21161                           ;	Low-Power Timer 1 Oscillator Enable bit
 21162                           ;	LPT1OSC = 0x0, unprogrammed default
 21163                           ;	MCLR Pin Enable bit
 21164                           ;	MCLRE = 0x1, unprogrammed default
 21165  300005                     	org	3145733
 21166  300005  83                 	db	131
 21167                           
 21168                           ;Config register CONFIG4L @ 0x300006
 21169                           ;	unspecified, using default values
 21170                           ;	Stack Full/Underflow Reset Enable bit
 21171                           ;	STVREN = 0x1, unprogrammed default
 21172                           ;	Single-Supply ICSP Enable bit
 21173                           ;	LVP = 0x1, unprogrammed default
 21174                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 21175                           ;	ICPRT = 0x0, unprogrammed default
 21176                           ;	Extended Instruction Set Enable bit
 21177                           ;	XINST = 0x0, unprogrammed default
 21178                           ;	Background Debugger Enable bit
 21179                           ;	DEBUG = 0x1, unprogrammed default
 21180  300006                     	org	3145734
 21181  300006  85                 	db	133
 21182                           
 21183                           ; Padding undefined space
 21184  300007                     	org	3145735
 21185  300007  FF                 	db	255
 21186                           
 21187                           ;Config register CONFIG5L @ 0x300008
 21188                           ;	unspecified, using default values
 21189                           ;	Code Protection bit
 21190                           ;	CP0 = 0x1, unprogrammed default
 21191                           ;	Code Protection bit
 21192                           ;	CP1 = 0x1, unprogrammed default
 21193                           ;	Code Protection bit
 21194                           ;	CP2 = 0x1, unprogrammed default
 21195                           ;	Code Protection bit
 21196                           ;	CP3 = 0x1, unprogrammed default
 21197  300008                     	org	3145736
 21198  300008  0F                 	db	15
 21199                           
 21200                           ;Config register CONFIG5H @ 0x300009
 21201                           ;	unspecified, using default values
 21202                           ;	Boot Block Code Protection bit
 21203                           ;	CPB = 0x1, unprogrammed default
 21204                           ;	Data EEPROM Code Protection bit
 21205                           ;	CPD = 0x1, unprogrammed default
 21206  300009                     	org	3145737
 21207  300009  C0                 	db	192
 21208                           
 21209                           ;Config register CONFIG6L @ 0x30000A
 21210                           ;	unspecified, using default values
 21211                           ;	Write Protection bit
 21212                           ;	WRT0 = 0x1, unprogrammed default
 21213                           ;	Write Protection bit
 21214                           ;	WRT1 = 0x1, unprogrammed default
 21215                           ;	Write Protection bit
 21216                           ;	WRT2 = 0x1, unprogrammed default
 21217                           ;	Write Protection bit
 21218                           ;	WRT3 = 0x1, unprogrammed default
 21219  30000A                     	org	3145738
 21220  30000A  0F                 	db	15
 21221                           
 21222                           ;Config register CONFIG6H @ 0x30000B
 21223                           ;	unspecified, using default values
 21224                           ;	Configuration Register Write Protection bit
 21225                           ;	WRTC = 0x1, unprogrammed default
 21226                           ;	Boot Block Write Protection bit
 21227                           ;	WRTB = 0x1, unprogrammed default
 21228                           ;	Data EEPROM Write Protection bit
 21229                           ;	WRTD = 0x1, unprogrammed default
 21230  30000B                     	org	3145739
 21231  30000B  E0                 	db	224
 21232                           
 21233                           ;Config register CONFIG7L @ 0x30000C
 21234                           ;	unspecified, using default values
 21235                           ;	Table Read Protection bit
 21236                           ;	EBTR0 = 0x1, unprogrammed default
 21237                           ;	Table Read Protection bit
 21238                           ;	EBTR1 = 0x1, unprogrammed default
 21239                           ;	Table Read Protection bit
 21240                           ;	EBTR2 = 0x1, unprogrammed default
 21241                           ;	Table Read Protection bit
 21242                           ;	EBTR3 = 0x1, unprogrammed default
 21243  30000C                     	org	3145740
 21244  30000C  0F                 	db	15
 21245                           
 21246                           ;Config register CONFIG7H @ 0x30000D
 21247                           ;	unspecified, using default values
 21248                           ;	Boot Block Table Read Protection bit
 21249                           ;	EBTRB = 0x1, unprogrammed default
 21250  30000D                     	org	3145741
 21251  30000D  40                 	db	64
 21252                           tosu	equ	0xFFF
 21253                           tosh	equ	0xFFE
 21254                           tosl	equ	0xFFD
 21255                           stkptr	equ	0xFFC
 21256                           pclatu	equ	0xFFB
 21257                           pclath	equ	0xFFA
 21258                           pcl	equ	0xFF9
 21259                           tblptru	equ	0xFF8
 21260                           tblptrh	equ	0xFF7
 21261                           tblptrl	equ	0xFF6
 21262                           tablat	equ	0xFF5
 21263                           prodh	equ	0xFF4
 21264                           prodl	equ	0xFF3
 21265                           indf0	equ	0xFEF
 21266                           postinc0	equ	0xFEE
 21267                           postdec0	equ	0xFED
 21268                           preinc0	equ	0xFEC
 21269                           plusw0	equ	0xFEB
 21270                           fsr0h	equ	0xFEA
 21271                           fsr0l	equ	0xFE9
 21272                           wreg	equ	0xFE8
 21273                           indf1	equ	0xFE7
 21274                           postinc1	equ	0xFE6
 21275                           postdec1	equ	0xFE5
 21276                           preinc1	equ	0xFE4
 21277                           plusw1	equ	0xFE3
 21278                           fsr1h	equ	0xFE2
 21279                           fsr1l	equ	0xFE1
 21280                           bsr	equ	0xFE0
 21281                           indf2	equ	0xFDF
 21282                           postinc2	equ	0xFDE
 21283                           postdec2	equ	0xFDD
 21284                           preinc2	equ	0xFDC
 21285                           plusw2	equ	0xFDB
 21286                           fsr2h	equ	0xFDA
 21287                           fsr2l	equ	0xFD9
 21288                           status	equ	0xFD8

Data Sizes:
    Strings     264
    Constant    118
    Data        38
    BSS         832
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      69
    BANK0           160    144     160
    BANK1           256      7     233
    BANK2           256     34      96
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3563	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[7]), STR_19(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK1[12]), 
		 -> rawLatitude(BANK1[11]), rawTime(BANK1[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[7]), STR_19(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK1[12]), 
		 -> rawLatitude(BANK1[11]), rawTime(BANK1[11]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> sentence(BANK1[6]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK1[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK1[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK1[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK1[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_16(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(BANK0[10]), convert_to_int_point_lat@convert_str_lat(BANK0[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 0

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_14(CODE[38]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 62
		 -> fprintf@s(BANK2[16]), ?_fprintf(BANK0[2]), string_dado(BANK2[62]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK1[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[13]), filename(BANK1[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[13]), filename(BANK1[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[13]), filename(BANK1[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1401_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 62
		 -> string_dado(BANK2[62]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 62
		 -> string_dado(BANK2[62]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[7]), STR_19(CODE[5]), rawDate(BANK1[7]), rawLongitude(BANK1[12]), 
		 -> rawLatitude(BANK1[11]), rawTime(BANK1[11]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK1[20]), 

    S727_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S727_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 6
		 -> rawSpeed(BANK1[6]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    stringcpy@str1	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK1[12]), 

    stringcpy@str2	PTR unsigned char  size(2) Largest target is 12
		 -> rawFix(BANK1[2]), rawDate(BANK1[7]), rawSpeed(BANK1[6]), rawLongitude(BANK1[12]), 
		 -> rawLatitude(BANK1[11]), rawTime(BANK1[11]), sentence(BANK1[6]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_29(CODE[8]), STR_28(CODE[9]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[5]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_21(CODE[7]), STR_18(CODE[11]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 
		 -> NULL(NULL[0]), STR_12(CODE[9]), STR_11(CODE[10]), STR_10(CODE[10]), 
		 -> STR_9(CODE[14]), STR_8(CODE[21]), STR_7(CODE[15]), rawFix(BANK1[2]), 
		 -> escreve_inteiro_lcd@texto(BANK0[7]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), 
		 -> STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK1[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK1[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _escalonador->_troca_de_tela
    _atoi->___wmul
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _escreve_cmd_lcd->_delay
    _verifica_fence_externo->_latitude_to_convert
    _verifica_fence_externo->_longitude_to_convert
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _make_dirfile->_memset
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _auto_mount->_disk_initialize
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_GPSDay
    _get_fattime->_GPSHour
    _get_fattime->_GPSMinute
    _get_fattime->_GPSMonth
    _get_fattime->_GPSSecond
    _get_fattime->_GPSyear
    _dados_gps_to_sd->_monta_sd
    _monta_sd->_strlen

Critical Paths under _isr in COMRAM

    _isr->_GPSRead
    _GPSRead->_stringcpy

Critical Paths under _main in BANK0

    _verifica_dados_operacionais->_verifica_fence_externo
    ___fttol->___ftmul
    _troca_de_tela->_escreve_inteiro_lcd
    _verifica_fence_externo->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _diferenca->_escreve_inteiro_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _inicializa_uart->_configura_baudrate_uart
    _escrita_sdcard->_f_open
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _check_fs->_disk_read
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _disk_read->_sdc_disk_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _disparo_gravacao->_grava_sd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escrita_sdcard->_fprintf

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  527175
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             31 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             28 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  518353
                                              4 BANK1      3     3      0
                    _dados_gps_to_sd
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          4     4      0   46167
                                             51 BANK0      4     4      0
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
             _verifica_fence_externo
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1805
                                             31 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     671
                                             12 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4147
                                             42 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3556
                                             38 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3193
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        1     1      0   13485
                                             46 COMRAM     1     1      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                     3     3      0  456409
                                              1 BANK1      3     3      0
                                _fix
                           _grava_sd
             _verifica_fence_externo
 ---------------------------------------------------------------------------------
 (3) _verifica_fence_externo                               1     1      0   35979
                                             50 BANK0      1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (4) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                             25 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                             25 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                15    15      0   16921
                                             46 COMRAM     1     1      0
                                             36 BANK0     14    14      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 13    13      0   16921
                                             46 COMRAM     1     1      0
                                             36 BANK0     12    12      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2   16550
                                             32 BANK0      4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0   15788
                                             23 BANK0      9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (7) _escreve_inteiro_lcd                                 11     7      4    6622
                                             12 BANK0     11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (8) _ltoa                                                 8     1      7    3063
                                             45 COMRAM     1     1      0
                                              5 BANK0      7     0      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (9) _ultoa                                               12     5      7    2560
                                             38 COMRAM     7     0      7
                                              0 BANK0      5     5      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                              6 BANK0     16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                              6 BANK0     17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                              6 BANK0      4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             37 COMRAM     8     4      4
                                              0 BANK0      6     6      0
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             1     1      0  420396
                                              0 BANK1      1     1      0
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             39 COMRAM     6     2      4
                                              0 BANK0      8     8      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                             25 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  419275
                    _dados_gps_to_sd
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             50    36     14  128536
                                            126 BANK0     16     2     14
                                              0 BANK2     34    34      0
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   61743
                                            119 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   61250
                                            112 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   60438
                                             82 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (10) ___llmod                                             9     1      8     592
                                             25 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  202182
                                            100 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39329
                                             75 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             33 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   76792
                                             82 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   18672
                                             63 BANK0     12    11      1
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             37 COMRAM     9     5      4
                                              0 BANK0      2     2      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   33174
                                             68 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                             25 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             29 BANK0     46    44      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             45 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             44 COMRAM     1     1      0
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             37 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3447
                                             28 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2939
                                             28 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             27 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             45 COMRAM     2     2      0
                                             23 BANK0      6     2      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                             25 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   54940
                                             82 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   34237
                                             68 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   16553
                                             44 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16243
                                             45 COMRAM     2     0      2
                                             44 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1282
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lldiv                                            13     5      8    1261
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             53 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                             44 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             31 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             27 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             45 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             23 BANK0     21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             44 COMRAM     1     1      0
                                             12 BANK0     11     4      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             37 COMRAM     7     0      7
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             44 COMRAM     1     1      0
                                             12 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             37 COMRAM     7     0      7
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                             25 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             30 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                             25 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                             25 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                             25 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             29 COMRAM    14    10      4
                                              0 BANK0     38    38      0
                             _GPSDay
                            _GPSHour
                          _GPSMinute
                           _GPSMonth
                          _GPSSecond
                            _GPSyear
 ---------------------------------------------------------------------------------
 (7) _GPSyear                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _GPSSecond                                            4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _GPSMonth                                             4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _GPSMinute                                            4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _GPSHour                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _GPSDay                                               4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _dados_gps_to_sd                                      0     0      0    2069
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2069
                                             29 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fix                                                  2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                13    13      0    3569
                                             12 COMRAM    13    13      0
                            _GPSRead
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GPSRead                                             2     2      0    3391
                                             10 COMRAM     2     2      0
                             _strcmp
                          _stringcpy
 ---------------------------------------------------------------------------------
 (19) _stringcpy                                          10     3      7    2802
                                              0 COMRAM    10     3      7
 ---------------------------------------------------------------------------------
 (19) _strcmp                                              7     3      4     493
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _dados_gps_to_sd
       _monta_sd
         _strlen
     _disparo_gravacao *
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _dados_gps_to_sd
             _monta_sd
               _strlen
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _GPSDay
                 _GPSHour
                 _GPSMinute
                 _GPSMonth
                 _GPSSecond
                 _GPSyear
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                     _fix (ARG)
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                       _fix (ARG)
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _GPSDay
               _GPSHour
               _GPSMinute
               _GPSMonth
               _GPSSecond
               _GPSyear
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _verifica_fence_externo
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
         _monta_sd
           _strlen
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
         _verifica_recep_gps
     _troca_de_tela *
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
         _fix (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
     _verifica_dados_operacionais *
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _verifica_fence_externo
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
         _monta_sd
           _strlen
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
         _verifica_recep_gps
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
       _fix (ARG)
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _GPSRead
     _strcmp
     _stringcpy
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     22      60       9       37.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      E9       7       91.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22E      20        0.0%
DATA                 0      0     44E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon May 16 15:54:21 2022

                          next_dir_entry@idx 00A9                     __end_of_mensagem_inicial 4366  
                        next_dir_entry@clust 00A7                                  _SSPSTATbits 000FC7  
                           ??_init_interrupt 001A                                           l68 5464  
               __size_of_escreve_inteiro_lcd 0040                                           _fs 0260  
                        ___wmul@multiplicand 001C                                  _put_cluster 2082  
                           disk_write@sector 006E                                 ?_escalonador 0001  
                             create_chain@fs 00AA                             disk_write@result 0074  
                           ?_inicializa_uart 0001                                          l200 43AC  
                                        l201 43B4                                          l202 43B6  
                                        l203 43BE                                          l220 4900  
                                        l204 43C0                                          l221 4908  
                                        l213 48D4                                          l205 43C8  
                                        l222 490A                                          l206 43CA  
                                        l223 4912                                          l215 48DE  
                     __size_of_troca_de_tela 0224                                          l144 2A5E  
                                        l224 4914                                          l232 4A00  
                                        l225 491C                                          l217 48E8  
                                        l250 47B6                                          l242 4782  
                                        l226 491E                                          l218 48EA  
                                        l251 47B8                                          l219 48FE  
                                        l252 47C0                                          l244 478C  
                                        l181 54A2                                          l253 47C2  
                                        l254 47CA                                          l246 4796  
                                        l183 54A8                                          l255 47CC  
                                        l191 4376                                          l256 47D4  
                                        l248 47A0                                          l257 47D6  
                                        l249 47A2                                          l193 4380  
                                        l195 438A                                          l197 4394  
                                        l710 5560                                          l198 4396  
                                        l199 43AA                                          l704 559E  
                                        l608 4B76                                          l820 2D78  
                                        l592 50CA                                          l817 2D80  
                                        l891 310C                                          l894 30BA  
                                        l978 0772                                          _PCL 000FF9  
                                        _PR2 000FCB                          _latitude_to_convert 467C  
                                        _fil 014D                             ??_init_oscilador 001A  
                                        _fix 55BC                                          _isr 0008  
              __size_of_longitude_to_convert 007E                                 disk_read@res 0076  
                                        prod 000FF3                               ??_create_chain 00A6  
                                        tosl 000FFD                                          wreg 000FE8  
                  __size_of_write_timer_zero 000A                              create_chain@mcl 00A8  
                            create_chain@ncl 00B0                              create_chain@scl 00AE  
                    ??_escreve_frase_ram_lcd 001F                                         l1003 13BC  
                                       l1008 13E8                                         l1018 152A  
                                       l2010 4980                                         l1145 5080  
                                       l1092 0B78                                         l1096 0D88  
                                       l1178 1122                                         l1195 1272  
                                       l1452 48B0                                         l2325 3BEC  
                                       l1629 45EC                                         l2293 3398  
                                       l2279 3DA2                                         ?_fix 001A  
                                       ?_isr 0001                                         l9701 344A  
                                       l9641 4B70                                         l9713 3476  
                                       l9801 2AD0                                         l9619 50D6  
                                       l9627 516C                                         l9707 345A  
                                       l9717 348E                                         l9709 3462  
                                       l9727 34BE                                         l9831 4814  
                                       l9817 2B20                        _escreve_caractere_lcd 4772  
                                       l9691 3412                                         l9835 4818  
                                       l9827 47E8                                         l9851 483A  
                                       l9755 2A00                                         l9747 29AC  
                                       l9915 5552                                         l9925 48D6  
                                       l9863 4DDC                                         STR_1 6202  
                                       STR_2 61B2                                         l9697 3426  
                                       l9769 2A24                                         l9881 4DE0  
                                       l9961 478E                                         l9929 48E0  
                                       STR_3 6221                                         STR_4 61F7  
                                       l9787 2AA8                                         l9859 4DB0  
                                       STR_5 6259                                         STR_6 6253  
                                       l9965 4798                                         l9957 4784  
                                       STR_7 61C2                                         STR_8 619D  
                                       STR_9 61D1                               timer_dois@flag 0041  
                                       _BRGH 007D62                              __end_of_GPSRead 2082  
                                       _CREN 007D5C                                         _T0IF 007F92  
                               ?_escreve_SPI 0001                              __end_of_GPSHour 5352  
                                       _LATB 000F8A                                         _PIE1 000F9D  
                                       _RCIF 007CF5                                         _TMR0 000FD6  
                                       _TMR2 000FCC                                         _SPEN 007D5F  
                                       _TXEN 007D65                                         _SYNC 007D64  
                               trace_path@dj 00AB                                 trace_path@fn 00AC  
                               trace_path@ds 00BC                                 trace_path@fs 00B8  
                              ?_make_dirfile 0022                              __end_of_GPSyear 53B8  
                                       _Term 0042                                         _dado 0100  
                                       _atoi 3CE0                                         _atol 3280  
                                       _main 526C                                         _fsid 0145  
                               ___ftpack@arg 001A                                 ___ftpack@exp 001D  
                                       _ltoa 4FAA                      __end_of_fence_diff_long 614F  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       indf1 000FE7                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 0046                                         _sync 4CBA  
                              disk_ioctl@cmd 001A                                disk_read@buff 006C  
                              disk_ioctl@res 001E                                disk_read@pdrv 0073  
                       ?_latitude_to_convert 0001                                         prodh 000FF4  
                                       prodl 000FF3                                         start 000E  
                               ___ftmul@cntr 006A                      ?_verifica_fence_externo 0001  
                  sdc_disk_initialize@buff_i 0067                                 ___param_bank 000000  
                               ___ftmul@sign 006B                    sdc_disk_initialize@count1 0063  
                  sdc_disk_initialize@count2 0069                                  _string_dado 0200  
                        diferenca@valor_long 007C                                 ___fttol@exp1 007A  
                                      ??_fix 001C                                 ___fttol@lval 0076  
                                      ??_isr 000D                      __size_of_escrita_sdcard 0108  
                         __size_of_GPSMinute 0022                           __size_of_GPSSecond 0022  
           __size_of_configura_baudrate_uart 010A                   ??_convert_to_int_point_lat 002E  
                                      l10001 2BB4                                        l10005 2C30  
                                      l10009 2C38                                        l10017 2C86  
                                      l10041 519E                                        l11001 30B2  
                                      l10027 2CDA                                        l10131 28F0  
                                      l10107 27A2                                        l10203 22B8  
                                      l10045 51A2                                        l10141 2956  
                                      l10205 22D4                                        l10213 4BCC  
                                      l11101 4AE4                                        l10039 5196  
                                      l10127 28D0                                        l10143 2970  
                                      l10151 20A8                                        l10311 2D88  
                                      l10071 4A0C                                        l11023 30EC  
                                      l11015 30D4                                        l11201 2436  
                                      l10057 51AA                                        l10217 4BE0  
                                      l11033 310A                                        l11025 30EE  
                                      l12001 0FEA                                        l11121 4A5E  
                                      l11203 2440                                        l10227 459E  
                                      l10323 2DB6                                        l10307 2D62  
                                      l11051 452E                                        l10075 4A1A  
                                      l11043 3126                                        l12011 1016  
                                      l10229 45AA                                        l10165 2148  
                                      l10341 2DEA                                        l10261 425A  
                                      l10405 4F98                                        l12021 1058  
                                      l10421 3B2C                                        l11231 24C0  
                                      l11223 2484                                        l11151 233C  
                                      l11143 2300                                        l10239 45DE  
                                      l10167 217C                                        l10159 2108  
                                      l11055 4532                                        l10095 4C6A  
                                      l10079 4A28                                        l10087 4A36  
                                      l10511 1772                                        l10255 4972  
                                      l10247 493E                                        l12111 1260  
                                      l12015 102C                                        l10415 5496  
                                      l11127 4A8A                                        l10431 3B7E  
                                      l11217 2480                                        l11209 2444  
                                      l11137 22FC                                        l10185 2228  
                                      l10089 4A50                                        l10265 4278  
                                      l11321 1A8A                                        l11313 1A2C  
                                      l10249 494A                                        l12033 1084  
                                      l11171 2380                                        l10355 2E24  
                                      l11067 4578                                        l10099 4C92  
                                      l10283 42D2                                        l11251 4126  
                                      l10371 3ECA                                        l11307 1A04  
                                      l12115 1280                                        l11237 24C4  
                                      l11165 237C                                        l11157 2340  
                                      l10613 5468                                        l10189 2252  
                                      l11333 1AD8                                        l11325 1A96  
                                      l10701 00CC                                        l12125 12E8  
                                      l12141 37FE                                        l12213 52B8  
                                      l11247 2500                                        l10391 4F1E  
                                      l10359 2E60                                        l10463 168A  
                                      l11511 072A                                        l11503 0708  
                                      l11271 4190                                        l11407 1D16  
                                      l11351 1B18                                        l11343 1B00  
                                      l12119 129E                                        l12055 110A  
                                      l12039 10B8                                        l11095 4AB8  
                                      l12151 468A                                        l12311 49D2  
                                      l11193 23FC                                        l11185 23C0  
                                      l10385 4F0E                                        l10545 17FE  
                                      l10457 1674                                        l11441 05B6  
                                      l10713 0186                                        l12049 10FA  
                                      l12401 4768                                        l11195 2402  
                                      l11179 23BC                                        l10299 2D38  
                                      l10555 182A                                        l10539 17EE  
                                      l10467 1696                                        l11259 4146  
                                      l11419 1DA6                                        l11339 1AF4  
                                      l10715 01A6                                        l12091 11B6  
                                      l12075 116A                                        l12059 1116  
                                      l10627 4FCA                                        l12163 46E4  
                                      l12411 3F48                                        l10581 18B0  
                                      l10565 1852                                        l10477 16CA  
                                      l10661 51DC                                        l11541 09BC  
                                      l11533 08AE                                        l10397 4F78  
                                      l11269 4188                                        l11429 1DE0  
                                      l11373 1C08                                        l11357 1B2C  
                                      l10725 01FE                                        l12077 1182  
                                      l12069 1146                                        l10821 3352  
                                      l10805 32D6                                        l11605 3896  
                                      l12341 4702                                        l12421 3FA4  
                                      l12413 3F52                                        l10671 4228  
                                      l10591 18D8                                        l10487 16EE  
                                      l10831 52C0                                        l11471 0658  
                                      l11447 0608                                        l11439 05B0  
                                      l10903 2EE2                                        l11383 1C68  
                                      l11375 1C2E                                        l11295 19E6  
                                      l10751 03A6                                        l10735 02E4  
                                      l10743 0338                                        l12087 11AA  
                                      l12263 39F8                                        l12255 397A  
                                      l10815 330A                                        l11703 44E8  
                                      l12175 460C                                        l12351 471E  
                                      l12423 3FAE                                        l12415 3F70  
                                      l10665 41BA                                        l10673 4230  
                                      l10833 52C6                                        l10657 51CC  
                                      l11457 062C                                        l11393 1CD2  
                                      l11377 1C40                                        l11801 14B0  
                                      l10753 03B4                                        l12097 11E6  
                                      l12265 3A08                                        l11641 3E0E  
                                      l11633 3DE0                                        l10809 3300  
                                      l11617 3912                                        l11705 44F2  
                                      l12337 49EC                                        l11547 09D2  
                                      l11475 065C                                        l11299 19EA  
                                      l11651 3E42                                        l11627 3DC8  
                                      l12187 4666                                        l12419 3F86  
                                      l12523 3D38                                        l12507 3CE2  
                                      l11565 353C                                        l11725 4E9E  
                                      l11493 0694                                        l11485 068A  
                                      l11397 1CD6                                        l11813 1508  
                                      l10765 0470                                        l12269 3A22  
                                      l12365 473A                                        l12453 438C  
                                      l12445 4378                                        l12605 5138  
                                      l12525 3D6C                                        l12509 3CE6  
                                      l13077 3FDE                                        l10863 4FF6  
                                      l11735 4ED6                                        l10599 1914  
                                      l10919 2FBA                                        l10935 2FFA  
                                      l11751 1328                                        l10783 057C  
                                      l11591 4B4A                                        l11639 3E02  
                                      l11655 3E50                                        l11671 4480  
                                      l12375 4752                                        l12287 499A  
                                      l12615 3C38                                        l12527 3D70  
                                      l12519 3D26                                        l13183 5284  
                                      l10865 4FFA                                        l10881 4CF0  
                                      l11729 4EB6                                        l10849 52CA  
                                      l11833 153E                                        l10769 04EC  
                                      l10777 0520                                        l11585 4B14  
                                      l11665 4478                                        l12297 49B6  
                                      l12449 4382                                        l12561 3A78  
                                      l12633 3C8E                                        l13089 4070  
                                      l11579 35F0                                        l11923 0D3C  
                                      l10955 3064                                        l10787 058E  
                                      l11659 3E66                                        l11595 381A  
                                      l11683 44B0                                        l12555 3A50  
                                      l12651 3CCE                                        l12643 3CA6  
                                      l11781 13C4                                        l11589 4B42  
                                      l11677 44A4                                        l12645 3CB2  
                                      l12637 3C9E                                        l12725 25AC  
                                      l12709 2568                                        l11935 0D9C  
                                      l11695 44DC                                        l12575 3AAA  
                                      l11865 5246                                        l10993 30A2  
                                      l10985 3092                                        l11689 44B8  
                                      l12585 3AD2                                        l11947 0DE4  
                                      l11939 0DA6                                        l11891 4F30  
                                      l12579 3ABA                                        l12763 26A4  
                                      l12739 2628                                        l12747 2658  
                                      l11949 0DF8                                        l11957 0E68  
                                      l11973 0F62                                        l11965 0EFC  
                                      l10997 30AA                                        l11981 0F8A  
                                      l11893 4F40                                        l12589 3AE2  
                                      l12693 5118                                        l12749 265C  
                                      l11799 1484                                        l11879 51F2  
                                      l11895 4F48                                        l11985 0F94  
                                      l11889 4F2C                                        l12785 270E  
                                      l12787 2712                                        l12797 2752  
                            __end_of___aldiv 3E78                                        ?_atoi 0020  
                                      ?_atol 0026                                        ?_main 0001  
                                      STR_10 6217                                        ?_ltoa 0065  
                                      STR_11 620D                                        STR_20 624C  
                                      STR_12 6234                                        STR_13 6269  
                                      STR_21 6245                                        STR_22 624C  
                                      STR_14 6177                                        STR_23 6264  
                                      STR_15 61DF                                        STR_24 627D  
                                      STR_16 6276                                        STR_17 627A  
                                      STR_25 625F                                        STR_26 6272  
                                      STR_18 61EC                                        STR_27 626E  
                                      STR_19 6264                                        STR_28 622B  
                                      STR_29 623D                                 ?_leitura_SPI 0001  
                            __end_of___lldiv 45FE                                        ?_sync 0001  
                                      u11110 2B72                                        u11200 4CB2  
                                      u11130 2BB0                                        u12010 41E6  
                                      u11220 276C                              __end_of___ftmul 3B1C  
                                      u12030 4218                                        u11207 4CA8  
                                      u13000 24F0                                        u11320 2104  
                                      _T0CON 000FD5                                        u12017 41DC  
                                      u11315 20D8                                        u11420 45AE  
                                      u13020 4142                                        u11245 27D2  
                                      u12037 420E                                        u12205 0324  
                                      u11190 4C8A                                        u12310 32F6  
                                      u13007 24E6                                        u11520 2D22  
                                      u13040 4176                                        u11265 284C  
                                      u11345 21A8                              __end_of___llmod 4992  
                                      u11530 2D2E                                        u13050 419C  
                                      u11450 494E                                        u12250 0528  
                                      u13115 1A48                                        u10740 518E  
                                      u11540 2D58                                        u14100 0E7C  
                                      u13060 41B4                                        u12420 2EDE  
                                      u13220 1C64                                        u14005 0BEC  
                                      u11197 4C80                                        u12165 024C  
                                      u12317 32EC                              __end_of___fttol 3CE0  
                                      u14110 0EC2                                        u13070 19D0  
                                      u12270 32A0                                        u11295 28DC  
                                      u11375 2234                                        u12351 5038  
                                      u12360 501A                                        u10760 4B80  
                                      u10920 2B2E                                        u11640 2E4E  
                                      u11480 4298                                        u11800 16C2  
                                      u14200 1066                                        _T2CON 000FCA  
                                      u11801 16C0                                        u11570 2DAC  
                                      u13410 0654                                        u13330 05D6  
                                      u12450 2F5E                                        u13250 1CC4  
                                      u14115 0EB8                                        u12435 2EEE  
                                      u13235 1C84                                        u12380 4CEC  
                                      u11820 1710                                        u13077 19C6  
                                      u12277 3296                                        u10790 3420  
                                      u13350 05FC                                        u12470 3030  
                                      u12367 5010                                        u10775 33C2  
                                      u11680 4F0A                                        u14080 0E04  
                                      u13520 09B8                                        u13280 1D12  
                                      u12800 5076                                        u14400 12C0  
                                      u14240 10F8                                        u15040 43EC  
                                      u10865 29D2                                        u13337 05CC  
                                      u12730 452E                                        u11930 187A  
                                      u13530 09D0                                        u12490 3040  
                                      u14170 0FE0                                        u13515 08C6  
                                      u15211 3C1C                                        u12900 23AC  
                                      u11860 17A2                                        u11780 16A6  
                                      u15220 3C26                                        u13357 05F2  
                                      u12477 3026                                        u15141 3A38  
                                      u11790 16B6                                        u14350 1240  
                                      u13630 3E12                                        u15070 489E  
                                      u15230 3C56                                        u10895 2A7A  
                                      u14415 371E                                        u12920 23EC  
                                      u11880 17AE                                        u13480 0726  
                                      u13800 13E4                                        u15400 25D8  
                                      u13545 0A56                                        u14425 3758  
                                      u15161 3A60                                        u11970 18F0  
                                      u13730 1324                                        u15410 2616  
                                      u12907 23A2                                        u15235 3C4E  
                                      u12940 242E                                        u12860 232C  
                                      u11980 1922                                        u12765 318C  
                                      u14445 379A                                        u16117 433C  
                                      u13830 1480                                        u15270 3CB8  
                                      u15430 2668                                        u12927 23E2  
                                      u12775 31A8                                        u14455 37D2  
                                      u16127 40A0                                        u12960 2470  
                                      u12880 236C                                        u14720 49E6  
                                      u15408 25DA                                        u15360 253E  
                                      u12785 31D8                                        u16137 40BC  
                                      u15418 2618                                        u12947 2424  
                                      u12867 2322                                        u12795 31F8  
                                      u16147 40D8                                        u12980 24B0  
                                      u16157 1642                                        u13870 1526  
                                      u14910 3FB8                                        u12967 2466  
                                      u12887 2362                                        u16167 17B4  
                                      u14760 4716                                        u16177 1858  
                                      u14770 471A                                        u14690 49B2  
                                      u12987 24A6                                        u16187 50B6  
                                      u14870 3F3A                                        u15940 42E8  
                                      u15950 4300                                        u15928 402E  
                                      u15929 4042                             __end_of_GPSMonth 53FC  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _SPBRG 000FAF                                        _TRISA 000F92  
                                      _TRISB 000F93                                        _TRISC 000F94  
                                      _TRISD 000F95                                        _TRISE 000F96  
                            __end_of_f_close 5242                                trace_path@dir 00AF  
                                      _TXSTA 000FAC                                        _FatFs 0034  
                            __end_of_f_lseek 0F74                          ___lmul@multiplicand 001E  
                 __size_of_config_timer_dois 000E                              __end_of_f_mount 4EDA  
                            ??_armazena_ltlo 002F                              __end_of_f_write 05A0  
                 __size_of_config_timer_zero 001A                                        _Speed 000000  
                              get_cluster@bc 009B                                get_cluster@fs 009D  
                              get_cluster@wc 0095                              __end_of_command 4BBC  
                              ___awtoft@sign 002A                                        _delay 549E  
                            clust2sect@clust 0026                              __end_of_fprintf 12F4  
                                      _fputc 506E                                        _fputs 4B08  
                            __end_of_isdigit 549E                     __size_of_escreve_cmd_lcd 008C  
                              ___ftpack@sign 001E                                        atoi@a 0025  
                                      atol@a 0061                                        atol@c 0065  
                                      atoi@s 0020                                        atol@s 0026  
                                      _ultoa 3B1C                               ??_make_dirfile 0024  
                             disk_ioctl@buff 001B                                        pclath 000FFA  
                             disk_read@count 0072                                        tablat 000FF5  
                             disk_ioctl@pdrv 001D                             ?_dados_gps_to_sd 0001  
                            __end_of_proceed 559A                                        plusw1 000FE3  
                                      plusw2 000FDB                                        ttemp5 0047  
                                      ttemp6 004A                                        ttemp7 004E  
                      longitude_to_convert@i 0091                        longitude_to_convert@j 0090  
                                      status 000FD8                                _troca_de_tela 2534  
                                      wtemp8 0047                        ??_latitude_to_convert 002F  
                              disk_write@res 0076               __end_of_verifica_fence_externo 48C2  
                            __initialization 43F2                          disk_initialize@pdrv 002E  
                        disk_initialize@stat 002F                                 __end_of_atoi 3DAC  
                               __end_of_atol 33AA                                 __end_of_main 5294  
                               clust2sect@fs 0060                                 __end_of_ltoa 4FEC  
                               __end_of_sync 4D0C                           _inicializa_tarefas 4D0C  
                            escalonador@cont 01E8      convert_to_int_point_lat@convert_str_lat 006A  
                        reserve_direntry@dir 00B3                            create_chain@clust 00A4  
                                auto_mount@p 00A1                            create_chain@cstat 00AC  
                              sdc_reset@buff 002C                                       ??_atoi 0022  
                                     ??_atol 002A                                       ??_main 0030  
                              ___fttol@sign1 0075                                       ??_ltoa 002E  
                                     ??_sync 002E                                __activetblptr 000002  
                        ?_inicializa_tarefas 0001                         __end_of_desliga_uart 5582  
                                  ??_GPSRead 000B                                    ??_GPSHour 001C  
                ??_convert_to_int_point_long 002E                               _next_dir_entry 2E6A  
                       __size_of_desliga_SPI 000C                            get_fattime@f_time 0022  
                                  ??_GPSyear 001C                             ??_sdc_disk_write 0060  
                                     ?_delay 0001                       ?_escreve_caractere_lcd 0001  
                                     _ADCON1 000FC1                                       ?_fputc 00D0  
                           ___llmod@dividend 001A                                       ?_fputs 00D7  
                             _convert_to_int 5352                           auto_mount@bootsect 0099  
                           __end_of___awtoft 515C                             __end_of___ftpack 3FD8  
                                     ?_ultoa 0027                                       _INT0IE 007F94  
                                     _INT0IF 007F91                                ?_dummy_clocks 0001  
                                     i2l1421 36E0                            __end_of_GPSMinute 541E  
                             armazena_ltlo@i 0083                               armazena_ltlo@j 0082  
                          __end_of_GPSSecond 53DA                                       _PCLATH 000FFA  
                                     _INTCON 000FF2                                       i2l9461 5542  
                                     _GPSDay 541E                    convert_to_int_point_lat@i 0076  
                  convert_to_int_point_lat@j 0075                      __size_of_inicializa_SPI 0020  
                             ?_troca_de_tela 0001                                       _TMR0IF 007F92  
                         auto_mount@maxclust 0095                     __end_of_recebe_dado_uart 5546  
                                     _SPPCFG 000F63                                       _SPPCON 000F65  
                                     _SSPBUF 000FC9                     __size_of_sdc_disk_status 0010  
                           __end_of_check_fs 457C                         ??_inicializa_tarefas 001A  
                          ?_disparo_gravacao 0001                               trace_path@dptr 00BD  
                             trace_path@path 00AD                       reserve_direntry@sector 00B8  
                   __size_of_disk_initialize 0026                   __end_of_posicao_cursor_lcd 4A54  
                         ??_disparo_gravacao 01E3                               auto_mount@path 007D  
                               ?_move_window 0077                         __end_of_create_chain 2E6A  
                               _dado_arquivo 0169                       __size_of_init_hardware 0016  
                             auto_mount@stat 00A4                         __size_of_get_fattime 0156  
                               put_cluster@p 00A0                 ?_verifica_dados_operacionais 0001  
                       __size_of_get_cluster 0222                                       ___lmul 4BBC  
                                  ??___aldiv 0022                         __size_of_disk_status 0030  
                                     ___wmul 52E2                                    ??___lldiv 0022  
                                  ??___ftmul 002B                                       _f_open 12F4  
                                  ??___llmod 0022                                    ??___fttol 0070  
                           __end_of_grava_sd 550C                                       _f_sync 34D0  
                                     _buffer 0191                                       _estado 003E  
                                     _memcmp 41B8                                       _memcpy 4F66  
                           __end_of_init_lcd 411C                                       _memset 51C2  
                                  ??_f_close 0030                                       _rawFix 01BB  
                                     clear_0 442C                                       clear_1 443E  
                                     clear_2 444A                                       clear_3 4456  
                                     clear_4 4462                                    ??_f_lseek 00B8  
                                  ??_f_mount 001C                     configura_baudrate_uart@x 002C  
                                  ??_f_write 00B8                                       _strcat 4F22  
                                     _strcmp 4E48                          _sdc_disk_initialize 1626  
                                  ??_command 0024                                  GPSRead@buff 000B  
                                     _strlen 4FEC                        ___ftmul@f3_as_product 0067  
                           put_cluster@clust 008C                                       fputc@c 00D4  
                         get_cluster@fatsect 0097                             __end_of_monta_sd 2534  
                   __end_of_reserve_direntry 1E12                             __end_of_validate 4F22  
                     __end_of_next_dir_entry 2FD0                                    ??_fprintf 00EC  
                               __pdataCOMRAM 0045                                       fputs@n 00DC  
                                  ??_isdigit 001A                         __size_of_escalonador 00A6  
                           __end_of_response 558E                                 __mediumconst 6100  
                            disk_read@sector 006E                              disk_read@result 0074  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                       __end_of_convert_to_int 5374  
                                  ??_proceed 001C                             _write_timer_zero 55B2  
                               ?_posicao_lat 0001                                       ultoa@c 0064  
                                     ultoa@v 0060                                       sync@fs 002E  
                  escreve_caractere_lcd@data 001C                               ??_dummy_clocks 001A  
                        _escreve_inteiro_lcd 502E                              sdc_disk_write@j 0069  
                                 __accesstop 0060                      __end_of__initialization 4468  
                       ?_sdc_disk_initialize 0001                               disk_write@buff 006C  
                             disk_write@pdrv 0073                         __size_of_escreve_SPI 0010  
                              ___rparam_used 000001                            ??_escreve_cmd_lcd 001C  
               ?_verifica_plausibilidade_lat 0001                    _convert_to_int_point_long 4A54  
                                 ___awtoft@c 0027                                    ?_GPSMonth 001A  
                                 ___ftmul@f1 0060                                   ___ftmul@f2 0063  
                                 ___fttol@f1 006C                               __pcstackCOMRAM 0001  
                __end_of_endereco_cursor_lcd 492C                                 __pidataBANK1 5308  
                          ?_mensagem_inicial 0001                      _configura_baudrate_uart 370C  
                              __end_of_delay 54BC                               _escrita_sdcard 391E  
                            hora_nome@p_buff 001A                                __end_of_fputc 50AE  
                              __end_of_fputs 4B62                         ?_escreve_inteiro_lcd 006C  
              ??_verifica_dados_operacionais 0030             __end_of_convert_to_int_point_lat 4B08  
                         __size_of_data_nome 002A                                __end_of_ultoa 3C0A  
                             diferenca@index 0077                           ??_mensagem_inicial 0020  
                       __end_of_make_dirfile 312A                                 ?_put_cluster 008C  
                         __size_of_diferenca 0108                            reserve_direntry@c 00BF  
                          reserve_direntry@n 00BC                           _tarefa_em_execucao 003A  
                 __end_ofi2_write_timer_zero 55D0                              ?_next_dir_entry 009F  
                     __size_of_sdc_disk_read 0126              configura_baudrate_uart@baudrate 0028  
                       reserve_direntry@dptr 00BD                         __size_of_leitura_SPI 000C  
                              _init_hardware 550C                                 auto_mount@fs 00A9  
                         __size_of_disk_read 0070                              ?_convert_to_int 0066  
                 __end_of_verifica_recep_gps 52BC                                      ??_delay 001A  
                             sdc_reset@count 002A                                      ??_fputc 0030  
                                    ??_fputs 00DB                              ??_troca_de_tela 002F  
                                    ??_ultoa 002E                 mensagem_inicial@msg_linha_um 0060  
                                 __pbssBANK0 00F0                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200               __size_of_escreve_frase_ram_lcd 0052  
                                    ?_GPSDay 001A                __end_of_escreve_frase_ram_lcd 4CBA  
                      ??_sdc_disk_initialize 002D          verifica_plausibilidade_long@posicao 001A  
                         __size_of_hora_nome 002A                 __end_of_longitude_to_convert 467C  
                  escreve_inteiro_uart@F3215 01BD                                   ??_GPSMonth 001C  
              ??_verifica_plausibilidade_lat 001A                       __end_of_escrita_sdcard 3A26  
                         __size_of_sdc_reset 0090                           troca_de_tela@state 0037  
                                    ?___lmul 001A                            ??_sdc_disk_status 001A  
                              make_dirfile@a 002A                                make_dirfile@b 0028  
                              make_dirfile@c 002C                                make_dirfile@n 002B  
                              make_dirfile@t 0029                                      ?___wmul 001A  
                      mensagem_inicial@F3660 6101                        mensagem_inicial@F3658 6112  
                      ??_escreve_inteiro_lcd 002F                                      ?_f_open 00C4  
                                 _fence_flag 0133                                      ?_f_sync 008C  
                          ??_disk_initialize 002E                        __size_of_desliga_uart 000E  
                                    ?_memcmp 001A                                      ?_memcpy 001A  
                                    ?_memset 001A                               ___lmul@product 0022  
                                  ?___awtoft 0027                                    ?___ftpack 001A  
                                    ?_strcat 001A                                      ?_strcmp 0001  
                                    ?_strlen 001A          verifica_dados_operacionais@contador 0038  
                                    i2l13141 368A                                      i2l13125 364C  
                                    i2l13161 36CC                                      i2l13153 36AE  
                                    i2l13137 365C                                      i2l13163 36D8  
                                    i2l13149 36A0                                      i2l12911 1F62  
                                    i2l12903 1F46                                      i2l12665 4E4A  
                                    i2l12657 4DFE                                      i2l12921 1F98  
                                    i2l12913 1F66                                      i2l12667 4E52  
                                    i2l12931 1FB8                                      i2l12861 1E3C  
                                    i2l12853 1E1A                                      i2l12871 1E6A  
                                    i2l12929 1FB4                                      i2l12881 1EC0  
                                    i2l12857 1E2A                                      i2l12955 2050  
                                    i2l12947 201C                                      i2l12939 1FEA  
                                    i2l12885 1EE0                                      i2l12869 1E60  
                                    i2l12965 206C                                      i2l12959 2058  
                                    i2l12895 1F14                                      i2l12887 1EE4  
                                    _INTCON2 000FF1                                      _INTCON3 000FF0  
                             ?_init_hardware 0001                                    ?_check_fs 0077  
                                 _disk_ioctl 5460                                      _GPSRead 1E12  
                                    _GPSHour 532E                                   _disk_write 4DAC  
                                    _GPSyear 5396                               remove_chain@fs 00AA  
       __size_of_verifica_dados_operacionais 0050                                      _SSPCON1 000FC6  
                   __size_of_inicializa_uart 0022                                      _SSPSTAT 000FC7  
                                 _clust2sect 3E78                               _inicializa_SPI 5440  
                            trace_path@clust 00BA                            __end_of_data_nome 526C  
                                  ?_grava_sd 0001                              __size_of_GPSDay 0022  
                              ?_remove_chain 00A4                        __size_of_create_chain 018C  
                                  ?_init_lcd 0001                           __size_of_stringcpy 004E  
                          __end_of_diferenca 391E                                _sdc_disk_read 33AA  
                               _desliga_uart 5574                                   _auto_mount 05A0  
                                    __Hparam 0000                    ??_configura_baudrate_uart 0060  
                                    __Lparam 0000                                    ?_monta_sd 001E  
                                  ?_validate 0020                              ?_escrita_sdcard 0001  
                          __end_of_disk_read 4854                                put_cluster@bc 009E  
                                  ?_response 0001                                put_cluster@fs 00A2  
                           _sinaliza_mcp2515 003D                                      ___aldiv 3DAC  
                                 f_close@res 0097                              __size_of___lmul 0056  
                                    ___lldiv 457C                              __size_of___wmul 0026  
                                    ___ftmul 3A26                                      ___llmod 492C  
                                    ___fttol 3C0A                         __size_of_move_window 01AA  
                                 check_fs@fs 007B                              __size_of_f_open 0332  
                            __size_of_f_sync 0124                         __end_of_dummy_clocks 50EA  
                                    _f_close 5218                                      __pcinit 43F2  
                            __size_of_memcmp 0092                              __size_of_memcpy 0044  
                                 ??___awtoft 002A                                   ??___ftpack 001F  
                            __size_of_memset 002C                                      _f_lseek 0AEA  
                                 _init_ports 54BC                                      __ramtop 0800  
                                    _f_mount 4E92                                      __ptext0 526C  
                                    __ptext1 42DA                                      __ptext2 407E  
                                    __ptext3 550C                                      __ptext4 54BC  
                                    __ptext5 55D0                                      __ptext6 5522  
                                    __ptext7 54D8                                      __ptext8 55B2  
                                    __ptext9 5566                                      _f_write 0012  
                                    _command 4B62                                    _T0CONbits 000FD5  
                        auto_mount@totalsect 009D                              __size_of_strcat 0044  
                            __size_of_strcmp 004A                              __size_of_strlen 0042  
                                 data_nome@i 001C                  endereco_cursor_lcd@endereco 001C  
                          __end_of_hora_nome 5218                                      _fprintf 0F74  
                               __size_of_fix 000A                                      _rawDate 01A8  
                                    _isdigit 5480                                 __size_of_isr 3704  
       __size_of_verifica_plausibilidade_lat 0078                      ??_escreve_caractere_lcd 001C  
                                 ??_check_fs 002E                                      _rawTime 019D  
                           ___aldiv@dividend 001A                                 stringcpy@chr 000A  
                               stringcpy@dir 0005                                      _time_sd 0032  
                               _create_chain 2CDE                                      _proceed 558E  
                    __size_of_init_interrupt 0012                           _point_buff_gps_lat 013F  
                          __end_of_sdc_reset 42DA                       __end_of_inicializa_SPI 5460  
                      __end_of_armazena_ltlo 44FA                  __end_of_latitude_to_convert 46FA  
                                 f_lseek@ofs 00B4                               __pintcode_body 35F4  
                                 f_lseek@res 00C8                         end_of_initialization 4468  
       __end_of_verifica_plausibilidade_long 49F6        __size_of_verifica_plausibilidade_long 0064  
               _verifica_plausibilidade_long 4992            __size_of_convert_to_int_point_lat 005A  
                       __size_of_posicao_lat 0004                                   f_open@mode 00C8  
                                 f_open@path 00C6                    ?_convert_to_int_point_lat 0066  
                             ??_remove_chain 00A6                                      isr@cont 0019  
                                    memcmp@n 001E                                   ??_grava_sd 0030  
                                    memcpy@d 0021                                      memcpy@n 001E  
                                    memcpy@s 0023                      __size_of_init_oscilador 0008  
                                    fputc@bw 00D5                                      memset@c 001C  
                                    memset@n 001E                                      memset@p 0020  
                              __Lmediumconst 6100                                   ??_init_lcd 001D  
                                    int_func 35F4                            ?_recebe_dado_uart 0001  
                            disk_status@pdrv 001E                              disk_status@stat 001F  
                             ?_sdc_disk_read 0026                                      ltoa@buf 0065  
                                  i2u1532_40 4E86                                      ltoa@val 0066  
                                  _GPSMinute 53FC                                    _GPSSecond 53B8  
                                  i2u1598_40 363C                                    i2u1599_48 363E  
                     write_timer_zero@timer0 001A                              ___lldiv@divisor 001E  
                              _rawSatellites 0136                                   f_mount@drv 001C  
                         ??_recebe_dado_uart 0001                              ___lldiv@counter 0026  
                                 ??_monta_sd 0020                                   ??_validate 0024  
                      __size_of_make_dirfile 015A                     __size_of_dados_gps_to_sd 0056  
                             _fence_diff_lat 614F                                   ??_response 001A  
                                  _RCSTAbits 000FAB                     __end_of_write_timer_zero 55BC  
                           ___aldiv@quotient 0024                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                              ?_posicao_long 0001                                   _wait_ready 515C  
                                    strcmp@r 0007                                      strlen@s 001A  
              longitude_to_convert@longitude 0084           __size_of_convert_to_int_point_long 005A  
                                  _PORTBbits 000F81                    __size_of_disparo_gravacao 003A  
                                  _PORTDbits 000F83                                    _PORTEbits 000F84  
                            ??_init_hardware 001C                                   _trace_path 1926  
                         _posicao_cursor_lcd 49F6                            __end_of_stringcpy 4E48  
                              ??_desliga_SPI 001A                         __size_of_put_cluster 0266  
            __end_of_configura_baudrate_uart 3816                                  ?_disk_ioctl 001A  
                       _longitude_to_convert 45FE                            ?_reserve_direntry 00B2  
                                 f_write@btw 00B5                                   f_write@res 00C4  
                  longitude_to_convert@index 008F                                    _TRISBbits 000F93  
                                ?_disk_write 006C                                    _TRISCbits 000F94  
                                  _TRISDbits 000F95                             next_dir_entry@dj 009F  
                            _escreve_cmd_lcd 4366                           ??_reserve_direntry 00B4  
                        ?_posicao_cursor_lcd 001D                              ?_inicializa_SPI 0001  
                            disk_write@count 0072                                  ?_clust2sect 0026  
                           _put_cluster$1558 0096                             _put_cluster$1559 0098  
             verifica_dados_operacionais@vel 0096                                   command@CMD 0024  
                                 command@CRC 0023                                   command@arg 001F  
                               _make_dirfile 2FD0                ?_verifica_plausibilidade_long 0001  
                             __end_of_GPSDay 5440                                ??_get_fattime 0060  
                          ??_inicializa_uart 002E                  __size_of_inicializa_tarefas 0050  
                                 ?_GPSMinute 001A                                   ?_GPSSecond 001A  
                              ??_get_cluster 008C                       __end_of_fence_diff_lat 6177  
                              ??_disk_status 001C                                  ?_auto_mount 007D  
                          _make_dirfile$1668 0026                                  ___ftmul@exp 0066  
                            command@argument 0025                           diferenca@valor_lat 0078  
                       ??_posicao_cursor_lcd 001E                            __size_of_GPSMonth 0022  
                             ??_posicao_long 001A                               __end_of___lmul 4C12  
                             _temp_buff_long 013B                             ??_next_dir_entry 00A0  
                             __end_of___wmul 5308                               __end_of_f_open 1626  
                              __pidataCOMRAM 55E2                                ??_escalonador 01E6  
                                ?_init_ports 0001                               __end_of_f_sync 35F4  
                           ??_convert_to_int 002E                               __end_of_memcmp 424A  
                             __end_of_memcpy 4FAA                               __end_of_memset 51EE  
          __end_of_convert_to_int_point_long 4AAE                        ?_longitude_to_convert 0001  
                             __end_of_strcat 4F66                               __end_of_strcmp 4E92  
                             __end_of_strlen 502E                             _time_atualizacao 0030  
                        start_initialization 43F2                                  __end_of_fix 55C6  
                                __end_of_isr 370C                    __size_of_mensagem_inicial 008C  
                         reserve_direntry@dj 00B2                           reserve_direntry@fs 00C2  
                        __end_of_desliga_SPI 55B2                                ??_escreve_SPI 001A  
                   ??_verifica_fence_externo 0092                                     ??_GPSDay 001C  
                            _sdc_disk_status 5546                              ??_sdc_disk_read 0060  
                          auto_mount@fatsize 00A5                           i2_write_timer_zero 55C6  
                            ___llmod@divisor 001E                              data_nome@p_buff 001A  
                            _disk_initialize 52BC                              ___llmod@counter 0022  
                         _verifica_recep_gps 5294                        reserve_direntry@clust 00C0  
                    __size_of_sdc_disk_write 01BA                             _data_uart_recebe 003C  
                          wait_ready@timeout 001A                        __size_of_dummy_clocks 003C  
                              auto_mount@fmt 00A3                          __size_of_disk_ioctl 0020  
                        ?i2_write_timer_zero 0001                                   hora_nome@i 001C  
                        __size_of_disk_write 004E                                     ??___lmul 0022  
                                 fprintf@fil 00DE                                   fprintf@arp 025A  
                                   ??___wmul 001E                                   fprintf@res 024E  
                                 fprintf@val 0256                                   fprintf@str 00E0  
                        __end_of_get_fattime 3280                                     ??_f_open 00C9  
                        ?_verifica_recep_gps 0001                                     ??_f_sync 0030  
                                ?_wait_ready 0001                                  __pdataBANK1 01BD  
                        __end_of_get_cluster 297A                                     ??_memcmp 0020  
                        __end_of_disk_status 51C2                                     ??_memcpy 0020  
                        __size_of_clust2sect 00B2                                     ??_memset 0020  
                     sdc_disk_read@start_add 0065                         __end_of_remove_chain 41B8  
                          ??_dados_gps_to_sd 0023                      sdc_disk_initialize@buff 006B  
                              ??_leitura_SPI 001A                      __end_of_escreve_cmd_lcd 43F2  
                                   ??_strcat 001E                                     ??_strcmp 0005  
                                   ??_strlen 001C                      sdc_disk_initialize@stat 0062  
                                ?_trace_path 00AB                                 _fprintf$2161 0250  
               __size_of_endereco_cursor_lcd 006A                            __size_of___awtoft 0038  
                          __size_of___ftpack 00AE                                  __pbssBIGRAM 0260  
                              monta_sd@index 0020                                  __pbssCOMRAM 0030  
                            _trace_path$1715 00B4                              _trace_path$1717 00B6  
                                   ?_GPSRead 0001                                     ?_GPSHour 001A  
                              __pcstackBANK0 0060                                __pcstackBANK1 01E2  
                              __pcstackBANK2 023E                               _init_interrupt 5522  
                        __size_of_auto_mount 054A                         ??i2_write_timer_zero 0003  
                        __end_of_escalonador 407E                  __end_of_sdc_disk_initialize 1926  
                                   ?_GPSyear 001A                            __size_of_check_fs 0082  
                               _isdigit$3175 001B                                 check_fs@sect 0077  
                                _char_number 0044                         ??_verifica_recep_gps 001A  
                               _dummy_clocks 50AE                               _init_oscilador 55D0  
                      __end_of_troca_de_tela 2758                                     GPSRead@c 000C  
                           ??_escrita_sdcard 0030                          __size_of_init_ports 001C  
                      _escreve_frase_ram_lcd 4C68                            __size_of_grava_sd 001A  
                                ??_GPSMinute 001C                                  ??_GPSSecond 001C  
                                  _data_buff 014B                                    _data_hoje 0040  
                __end_of_escreve_inteiro_lcd 506E                                    _data_nome 5242  
                        __end_of_escreve_SPI 5566                            __size_of_init_lcd 009E  
                          delay@contador_int 001B                            delay@contador_ext 001A  
             ??_verifica_plausibilidade_long 001A          __end_of_verifica_dados_operacionais 4DAC  
                _verifica_dados_operacionais 4D5C                                    _diferenca 3816  
                                  __pintcode 0008                                __pmediumconst 6100  
                                   ?___aldiv 001A                         latitude_to_convert@i 008F  
                       latitude_to_convert@j 008E                                    __ptext100 5396  
                                  __ptext101 53B8                                    __ptext110 5574  
                                  __ptext102 53DA                                    __ptext111 55A6  
                                  __ptext103 53FC                                    __ptext112 55BC  
                                  __ptext104 532E                                    __ptext105 541E  
                                  __ptext114 55C6                                    __ptext106 5242  
                                  __ptext115 5534                                    __ptext107 4C12  
                                  __ptext116 1E12                                    __ptext108 22E8  
                                  __ptext117 4DFA                                    __ptext109 4FEC  
                                  __ptext118 4E48                                    __ptext119 0000  
                          __size_of_monta_sd 024C                                     ?___lldiv 001A  
                                   ?___ftmul 0060                                     ?___llmod 001A  
                          __size_of_validate 0048                                     ?___fttol 006C  
                          __size_of_response 000C                                     ?_f_close 0095  
                                  _disk_read 47E4                           _sinaliza_int_timer 003B  
                                   ?_f_lseek 00B2                                     ?_f_mount 001A  
                           _disparo_gravacao 50EA                                     ?_f_write 00B2  
                     ??_longitude_to_convert 002F                                     ?_command 001F  
                     __end_of_init_interrupt 5534                                     ?_fprintf 00DE  
                                   ?_isdigit 0001                                  _desliga_SPI 55A6  
                        sdc_disk_read@p_buff 0026                      troca_de_tela@last_state 0036  
                        sdc_disk_read@length 0069                          sdc_disk_read@sector 0028  
                    __end_of_sdc_disk_status 5556               __size_of_escreve_caractere_lcd 0072  
              __end_of_escreve_caractere_lcd 47E4                                     ?_proceed 0001  
                                  f_close@fp 0095                          __end_of_leitura_SPI 55A6  
                                  _hora_nome 51EE                               __size_of_delay 001E  
                    __end_of_disk_initialize 52E2                       __end_of_init_oscilador 55D8  
                             __size_of_fputc 0040                               __size_of_fputs 005A  
                        make_dirfile@dirname 0023                                   validate@id 0022  
                                 validate@fs 0020                         __end_of_posicao_long 55DE  
                                  _p_tarefas 011D                               __size_of_ultoa 00EE  
                                  _rawCourse 0123              __size_of_verifica_fence_externo 006E  
                           make_dirfile@path 0022                                     _GPGGA_ok 0147  
                                  _sdc_reset 424A                          __size_of_wait_ready 0036  
                            ___aldiv@divisor 001E                  latitude_to_convert@latitude 0084  
                            ___aldiv@counter 0022                               ___wmul@product 001E  
                                   _LATBbits 000F8A                                    f_lseek@fp 00B2  
                                   _LATCbits 000F8B          __end_of_verifica_plausibilidade_lat 4772  
                _verifica_plausibilidade_lat 46FA                                     _GPRMC_ok 0149  
                                  f_open@dir 00E0                                    f_open@res 00DF  
                                   _PIE1bits 000F9D                                  _get_fattime 312A  
                               _rawLongitude 01CB                                   ?_data_nome 001A  
                        __size_of_trace_path 027A                                  _get_cluster 2758  
                                   _GPSMonth 53DA                                  _disk_status 5192  
                              ??_move_window 007B                                    f_mount@fs 001A  
                                   _PIR1bits 000F9E                                   ?_diferenca 0001  
                              move_window@fs 008A           verifica_plausibilidade_lat@posicao 001A  
verifica_dados_operacionais@velocidade_media 012F                            ?_write_timer_zero 001A  
                            remove_chain@nxt 00A8                                    f_sync@dir 0093  
                                  f_sync@res 0092                                    f_sync@tim 008E  
                   posicao_cursor_lcd@coluna 001D                                   ?_disk_read 006C  
                         ??_write_timer_zero 001C                                    f_write@cc 00CA  
                 posicao_cursor_lcd@endereco 001F                                    f_write@bw 00B7  
                                  f_write@fp 00B2                    __size_of_recebe_dado_uart 0012  
                                _escalonador 3FD8                            ___wmul@multiplier 001A  
                           ?_escreve_cmd_lcd 0001                  escreve_frase_ram_lcd@buffer 001D  
                           ??_inicializa_SPI 001A                              ?_init_interrupt 0001  
                               ??_disk_ioctl 001D                                 ??_disk_write 002D  
                        armazena_ltlo@buffer 0080                                 f_lseek@clust 00D1  
                            _inicializa_uart 5374                                 f_lseek@csize 00CD  
                               f_lseek@ifptr 00C9                                    _stringcpy 4DFA  
                           __size_of_GPSRead 0270                             _mensagem_inicial 42DA  
                           __size_of_GPSHour 0024                                ??_posicao_lat 001A  
                                 ?_hora_nome 001A                     latitude_to_convert@index 008D  
                              _temp_buff_lat 0139                              ?_init_oscilador 0001  
                               ??_clust2sect 002A                             __size_of_GPSyear 0022  
                          ___lmul@multiplier 001A                                    copy_data0 4406  
                                _escreve_SPI 5556                                _flag_anomalia 0039  
                                 ?_sdc_reset 0001                          sdc_reset@count_nosd 0028  
                   ?_configura_baudrate_uart 0028                       ?_escreve_frase_ram_lcd 001D  
                           auto_mount@chk_wp 007E                            move_window@sector 0077  
                             _sdc_disk_write 297A                    __size_of_reserve_direntry 0272  
               __size_of_latitude_to_convert 007E                     escreve_inteiro_lcd@F3223 01C4  
                               ??_auto_mount 007F                                     __Hrparam 0000  
                                  memcpy@tmp 0020                                     __Lrparam 0000  
                                  fprintf@cc 025B                           __end_of_disk_ioctl 5480  
                      __size_of_remove_chain 009C                               put_cluster@val 008E  
                           get_cluster@clust 002E                           __end_of_disk_write 4DFA  
                               _SentenceType 0043                             __size_of___aldiv 00CC  
                     sdc_disk_initialize@ocr 0068                       __size_of_armazena_ltlo 0084  
                               monta_sd@dado 001E                       _verifica_fence_externo 4854  
                           __size_of___lldiv 0082                             __size_of___ftmul 00F6  
                           __size_of___llmod 0066                             __size_of___fttol 00D6  
                              ??_put_cluster 0090                                 monta_sd@size 0021  
                               ??_init_ports 001A                          __end_of_move_window 2CDE  
                                   ___awtoft 5124                                     ___ftpack 3F2A  
                         __end_of_clust2sect 3F2A                     escreve_inteiro_lcd@valor 006C  
                           __size_of_f_close 002A                     escreve_inteiro_lcd@texto 0070  
                           __size_of_f_lseek 048A                             __size_of_f_mount 0048  
                                _leitura_SPI 559A                             __size_of_f_write 058E  
                           __size_of_command 005A                        __end_of_init_hardware 5522  
                                   _check_fs 44FA                                   strcat@from 001C  
                           __size_of_fprintf 0380                             __size_of_isdigit 001E  
                           ?_sdc_disk_status 0001                                   ?_stringcpy 0001  
                              _time_recovery 0141                     _convert_to_int_point_lat 4AAE  
                         __end_of_auto_mount 0AEA                                     __ptext10 4D0C  
                                   __ptext11 3FD8                                     __ptext20 4366  
                                   __ptext12 2534                                     __ptext21 4854  
                                   __ptext13 50EA                                     __ptext30 3816  
                                   __ptext22 5294                                     __ptext14 4D5C  
                                   __ptext31 502E                                     __ptext23 4992  
                                   __ptext15 3CE0                                     __ptext40 5374  
                                   __ptext32 4FAA                                     __ptext24 55D8  
                                   __ptext16 3C0A                                     __ptext41 370C  
                                   __ptext33 3B1C                                     __ptext25 46FA  
                                   __ptext17 3A26                                     __ptext50 0012  
                                   __ptext42 3DAC                                     __ptext34 4A54  
                                   __ptext26 55DE                                     __ptext18 5124  
                                   __ptext51 492C                                     __ptext43 5440  
                                   __ptext35 4AAE                                     __ptext27 45FE  
                                   __ptext19 3F2A                                     __ptext60 05A0  
                                   __ptext52 12F4                                     __ptext44 391E  
                                   __ptext36 5352                                     __ptext28 467C  
                                   __ptext61 51C2                                     __ptext53 1926  
                                   __ptext45 4F22                                     __ptext37 3280  
                                   __ptext29 4476                                     __ptext70 44FA  
                                   __ptext62 52BC                                     __ptext54 2FD0  
                                   __ptext46 51EE                                     __ptext38 5480  
                                   __ptext71 41B8                                     __ptext63 1626  
                                   __ptext55 1BA0                                     __ptext47 0F74  
                                   __ptext39 54F2                                     __ptext80 5218  
                                   __ptext72 4BBC                                     __ptext64 424A  
                                   __ptext56 2E6A                                     __ptext48 4B08  
                                   __ptext81 34D0                                     __ptext73 4E92  
                                   __ptext65 49F6                                     __ptext57 3E78  
                                   __ptext49 506E                                     __ptext90 33AA  
                                   __ptext82 4EDA                                     __ptext74 0AEA  
                                   __ptext66 48C2                                     __ptext58 411C  
                                   __ptext91 5582                                     __ptext83 5192  
                                   __ptext75 2CDE                                     __ptext67 4C68  
                                   __ptext59 4F66                                     __ptext92 558E  
                                   __ptext84 5546                                     __ptext76 2082  
                                   __ptext68 4772                                     __ptext93 4B62  
                                   __ptext85 4CBA                                     __ptext77 2758  
                                   __ptext69 549E                                     __ptext94 515C  
                                   __ptext86 2B34                                     __ptext78 52E2  
                                   __ptext95 5556                                     __ptext87 4DAC  
                                   __ptext79 457C                                     __ptext96 50AE  
                                   __ptext88 297A                                     __ptext97 559A  
                                   __ptext89 47E4                                     __ptext98 5460  
                                   __ptext99 312A                             __size_of_proceed 000C  
                                   _filename 017D                                  _rawAltitude 010A  
                           ?_disk_initialize 0001                               _timeout_tarefa 0143  
                         sdc_disk_read@count 002C                          escrita_sdcard@f_fix 003F  
                 __end_of_inicializa_tarefas 4D5C                     i2write_timer_zero@timer0 0001  
                                   _grava_sd 54F2                       __end_of_sdc_disk_write 2B34  
                                  monta_sd@i 0022                                     _gps_flag 0129  
                                _rawLatitude 01D7                                     _init_lcd 407E  
                              __size_of_atoi 00CC                                __size_of_atol 012A  
                              __size_of_main 0028                                 _remove_chain 411C  
                              __size_of_ltoa 0042                          __end_of_posicao_lat 55E2  
                              __size_of_sync 0052                          _endereco_cursor_lcd 48C2  
                         __end_of_init_ports 54D8                                     _rawSpeed 01AF  
                                ??_data_nome 001C                                dummy_clocks@i 001D  
                                   f_open@dj 00E2                                dummy_clocks@n 001C  
                                   f_open@fn 00CD                                     f_open@fp 00C4  
                                   f_open@dw 00DB                                     f_open@rs 00D9  
                            _dados_gps_to_sd 4C12                                     _monta_sd 22E8  
                                   _validate 4EDA                                  ??_diferenca 002F  
                                   _sentence 01B5                                 move_window@n 0085  
                              stringcpy@str1 0001                                stringcpy@str2 0003  
                                   _response 5582                                stringcpy@size 0007  
                                   f_sync@fp 008C                          _point_buff_gps_long 013D  
                __size_of_posicao_cursor_lcd 005E                                     int$flags 0046  
                    posicao_cursor_lcd@linha 001E                                     atoi@sign 0024  
                               ??_wait_ready 001A                                     atol@sign 0060  
                                ??_disk_read 002D                           armazena_ltlo@index 0081  
                    __end_of_inicializa_uart 5396                         convert_to_int@p_buff 0066  
                               ??_trace_path 00B0                         ?_endereco_cursor_lcd 0001  
                         put_cluster@fatsect 009A                                   _INTCONbits 000FF2  
                      __size_of_posicao_long 0006                   ?_convert_to_int_point_long 0066  
                                   memcmp@s1 001A                                     memcmp@s2 001C  
                           move_window@wsect 0086                                     memcpy@d1 001A  
                                   memcpy@s1 001C                          __end_of_put_cluster 22E8  
                                   fprintf@c 025F                                     fprintf@f 0254  
                                   fprintf@i 025D                                     fprintf@r 0255  
                                   fprintf@s 023E                                     fprintf@w 0252  
                                   fputc@chr 00D0                                     fputc@fil 00D2  
                                   isdigit@c 001C                                     memset@p1 001A  
                                ??_hora_nome 001C                                    ultoa@base 002C  
                          _config_timer_dois 5566                                 _tempo_backup 0117  
                                   fputs@fil 00D9                                     fputs@str 00D7  
                          _config_timer_zero 54D8                                _armazena_ltlo 4476  
                               _poligono_ext 00F0                                wait_ready@res 001E  
                                   intlevel2 0000                           ?_config_timer_dois 0001  
                   mensagem_inicial@msg_dois 0071                                  ??_sdc_reset 0026  
                                   ltoa@base 006A                           ?_config_timer_zero 0001  
                               _tempo_tarefa 0111                              ?_sdc_disk_write 0026  
                         __end_of_wait_ready 5192                     __end_of_disparo_gravacao 5124  
                           ___lldiv@dividend 001A                            sdc_disk_read@buff 006B  
                      __end_of_sdc_disk_read 34D0                          sdc_disk_status@pdrv 001B  
                              ?_desliga_uart 0001                          ??_config_timer_dois 001A  
                                 _OSCCONbits 000FD3                           __end_of_trace_path 1BA0  
                        ??_config_timer_zero 001C                                  _move_window 2B34  
                            _fence_diff_long 6123                                 _posicao_long 55D8  
                       sdc_disk_write@count1 0066                         sdc_disk_write@p_buff 0026  
                           _recebe_dado_uart 5534                                     ultoa@buf 0027  
                       sdc_disk_write@sector 0028                        ??_endereco_cursor_lcd 001C  
                                   ultoa@val 0028                                 response@buff 001A  
                                   strcat@cp 001E                                     strcat@to 001A  
                                   strcmp@s1 0001                                     strcmp@s2 0003  
                               ?_desliga_SPI 0001                             ___lldiv@quotient 0022  
                 convert_to_int_point_long@i 0075                   convert_to_int_point_long@j 0074  
                                   strlen@cp 001C                            remove_chain@clust 00A4  
                  __end_of_config_timer_dois 5574                                 ___aldiv@sign 0023  
                              ?_create_chain 00A4                    __end_of_config_timer_zero 54F2  
                                ??_stringcpy 0008                  __size_ofi2_write_timer_zero 000A  
                                _SSPCON1bits 000FC6                      __size_of_next_dir_entry 0166  
                                _posicao_lat 55DE                       escreve_cmd_lcd@comando 001C  
                             ?_armazena_ltlo 0080                          sdc_disk_write@count 002C  
                __size_of_verifica_recep_gps 0028                      __size_of_convert_to_int 0022  
              sdc_disk_initialize@crc_number 0065    convert_to_int_point_long@convert_str_long 006A  
                    __end_of_dados_gps_to_sd 4C68                           sdc_disk_write@buff 006B  
               __size_of_sdc_disk_initialize 0300                                 f_write@clust 00CC  
                             ??_desliga_uart 001A                           leitura_sdcard@size 0045  
                               f_write@wbuff 00C5                                 ?_get_fattime 001E  
                           _reserve_direntry 1BA0                      disparo_gravacao@fix_gps 01E4  
                                f_write@buff 00B4                            sdc_disk_write@res 0068  
                               ?_get_cluster 002E                                  f_write@sect 00C6  
                                f_write@wcnt 00CE                                 ?_disk_status 0001  
              __end_ofmensagem_inicial@F3660 6112                __end_ofmensagem_inicial@F3658 6123  
                            escreve_SPI@dado 001B  
